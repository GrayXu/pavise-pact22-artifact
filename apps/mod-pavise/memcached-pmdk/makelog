-- The C compiler identification is Clang 11.0.0
-- The CXX compiler identification is Clang 11.0.0
-- Check for working C compiler: /ssd1/llvm-project/build/bin/clang
-- Check for working C compiler: /ssd1/llvm-project/build/bin/clang -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /ssd1/llvm-project/build/bin/clang++
-- Check for working CXX compiler: /ssd1/llvm-project/build/bin/clang++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /ssd1/hanjie/mod-pavise/memcached-pmdk/tx-build
Scanning dependencies of target memcached
[ 20%] Building CXX object CMakeFiles/memcached.dir/new_assoc.cpp.o
clang-11: warning: -lpthread: 'linker' input unused [-Wunused-command-line-argument]
(impload) Calling PaviseImpLoad Pass constructor
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/iostream:74
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/iostream:74
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:24
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/persistent_ptr.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/persistent_ptr.hpp:134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:33
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:33
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:34
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:34
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:34
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:37
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:37
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:41
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:41
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:36
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:37
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:45
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:45
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:46
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:46
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:53
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:53
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:45
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:56
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:58
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:58
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:58
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:58
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:440
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:623
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:623
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:625
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:625
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:625
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:625
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:625
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/allocator.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/allocator.h:131
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:509
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:509
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:510
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:510
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:511
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:460
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:460
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:647
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:647
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:647
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:598
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:598
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:598
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:600
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:600
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:600
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/persistent_ptr.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/persistent_ptr.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/persistent_ptr.hpp:132
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../pmdk/src/include/libpmemobj/base.h:117
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../pmdk/src/include/libpmemobj/base.h:122
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../pmdk/src/include/libpmemobj/base.h:122
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../pmdk/src/include/libpmemobj/base.h:127
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../pmdk/src/include/libpmemobj/base.h:127
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../pmdk/src/include/libpmemobj/base.h:136
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:645
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:645
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:646
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:646
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:648
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:648
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:648
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:648
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:648
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/persistent_ptr.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/persistent_ptr.hpp:176
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:22

/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:23
  %map_ = getelementptr inbounds %class.PMDKMap, %class.PMDKMap* %this1, i32 0, i32 0, !dbg !1781
  %oid = bitcast %union.hashmap_tx_toid* %map_ to %struct.pmemoid*, !dbg !1781
  %off = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 1, !dbg !1781
  %0 = load i64, i64* %off, align 8, !dbg !1781, !tbaa !1783
  %cmp = icmp eq i64 %1, 0, !dbg !1781
  br i1 %cmp, label %if.then, label %if.end, !dbg !1784
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:24
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:0

/ssd1/hanjie/mod-pavise/libpmemobj-cpp/include/libpmemobj++/pool.hpp:404
  %pop = getelementptr inbounds %"class.pmem::obj::pool_base", %"class.pmem::obj::pool_base"* %this1, i32 0, i32 1, !dbg !1780
  %0 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop, align 8, !dbg !1780, !tbaa !1781
^Encountering ld inst of a ptr
  ret %struct.pmemobjpool* %0, !dbg !1783
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:60
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:60
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:61
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:61
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:62

/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:63
  %3 = bitcast [16 x i8]* %key_buf to i8*, !dbg !1794
  %4 = load i8*, i8** %key.addr, align 8, !dbg !1795, !tbaa !1783
^Encountering ld inst of a ptr
  %5 = load i64, i64* %nkey.addr, align 8, !dbg !1796, !tbaa !1788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 1 %4, i64 %6, i1 false), !dbg !1794
inserting pavise mem*** before llvm.memcpy.p0i8.p0i8.i64
inserting pavise memcpy
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:63
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:64
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:65
 LLVM parsing call inst:
//usr/include/stdlib.h:366
 LLVM parsing call inst:
//usr/include/stdlib.h:368
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:68
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:69
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:69
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:69
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:69

/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:72
  %4 = load %struct._stritem**, %struct._stritem*** %found_item, align 8, !dbg !1799, !tbaa !1790
^Encountering ld inst of a ptr
  %5 = load %struct._stritem*, %struct._stritem** %4, align 8, !dbg !1800, !tbaa !1790
^Encountering ld inst of a ptr
  store %struct._stritem* %5, %struct._stritem** %retval, align 8, !dbg !1801
^Encountering st inst of a ptr
inserting pavise_store in front of new_assoc.cpp:72, fileid = 0
  br label %cleanup, !dbg !1801
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:73
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:46
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:46

/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:47
  %0 = bitcast %struct.pmemoid* %value_ptr to i8*, !dbg !1786
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #3, !dbg !1786
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:47
  call void @llvm.dbg.declare(metadata %struct.pmemoid* %value_ptr, metadata !2153, metadata !DIExpression()), !dbg !2158
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:47
  %1 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop.addr, align 8, !dbg !1788, !tbaa !1777
^Encountering ld inst of a ptr
  %map_ = getelementptr inbounds %class.PMDKMap, %class.PMDKMap* %this1, i32 0, i32 0, !dbg !1789
  %2 = bitcast %union.hashmap_tx_toid* %agg.tmp to i8*, !dbg !1789
  %3 = bitcast %union.hashmap_tx_toid* %map_ to i8*, !dbg !1789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false), !dbg !1789, !tbaa.struct !1790
inserting pavise mem*** before llvm.memcpy.p0i8.p0i8.i64
inserting pavise memcpy
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:47
  %4 = load i64, i64* %key.addr, align 8, !dbg !1791, !tbaa !1783
  %6 = bitcast %union.hashmap_tx_toid* %agg.tmp to { i64, i64 }*, !dbg !1792
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !1792
  %8 = load i64, i64* %7, align 8, !dbg !1792
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !1792
  %11 = load i64, i64* %10, align 8, !dbg !1792
  %call = call { i64, i64 } @hm_tx_get(%struct.pmemobjpool* %1, i64 %9, i64 %12, i64 %5), !dbg !1792
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:47
  %13 = bitcast %struct.pmemoid* %value_ptr to { i64, i64 }*, !dbg !1792
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !1792
  %15 = extractvalue { i64, i64 } %call, 0, !dbg !1792
  store i64 %15, i64* %14, align 8, !dbg !1792
inserting pavise_store in front of map.hpp:47, fileid = 0
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !1792
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !1792
  store i64 %19, i64* %18, align 8, !dbg !1792
inserting pavise_store in front of map.hpp:47, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:51
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:51
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:52
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:75
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:75
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:76
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:76
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:80

/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:81
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1784, !tbaa !1779
^Encountering ld inst of a ptr
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 10, !dbg !1784
  %1 = load i8, i8* %nkey, align 1, !dbg !1784, !tbaa !1785
  %conv = zext i8 %1 to i32, !dbg !1784
  %cmp = icmp eq i32 %conv, 16, !dbg !1784
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !1784
  br label %cond.end, !dbg !1784
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.assoc_insert, i64 0, i64 0)) #14, !dbg !1784
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:81
  unreachable, !dbg !1784
  br label %cond.end, !dbg !1784
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:82
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:82
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:82
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:83
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:83
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:84
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:84
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:86
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:39
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:39
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:39
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:40
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:40
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:41

/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:42
  %2 = load %struct._stritem*, %struct._stritem** %value.addr, align 8, !dbg !1792, !tbaa !1778
^Encountering ld inst of a ptr
  %3 = bitcast %struct.pmemoid* %agg.tmp to i8*, !dbg !1793
  %4 = bitcast %struct.pmemoid* %value_ptr to i8*, !dbg !1793
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false), !dbg !1793, !tbaa.struct !1794
inserting pavise mem*** before llvm.memcpy.p0i8.p0i8.i64
inserting pavise memcpy
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:42
  %5 = bitcast %struct.pmemoid* %agg.tmp to { i64, i64 }*, !dbg !1795
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !1795
  %7 = load i64, i64* %6, align 8, !dbg !1795
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !1795
  %10 = load i64, i64* %9, align 8, !dbg !1795
  %call2 = call i8* @_ZL21pmemobj_direct_inline7pmemoid(i64 %8, i64 %11), !dbg !1795
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:42
  %12 = bitcast i8* %call2 to %struct._stritem**, !dbg !1796
  store %struct._stritem* %2, %struct._stritem** %12, align 8, !dbg !1797, !tbaa !1778
^Encountering st inst of a ptr
inserting pavise_store in front of map.hpp:42, fileid = 0

/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:43
  %15 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop.addr, align 8, !dbg !1798, !tbaa !1778
^Encountering ld inst of a ptr
  %map_ = getelementptr inbounds %class.PMDKMap, %class.PMDKMap* %this1, i32 0, i32 0, !dbg !1799
  %16 = bitcast %union.hashmap_tx_toid* %agg.tmp3 to i8*, !dbg !1799
  %17 = bitcast %union.hashmap_tx_toid* %map_ to i8*, !dbg !1799
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false), !dbg !1799, !tbaa.struct !1800
inserting pavise mem*** before llvm.memcpy.p0i8.p0i8.i64
inserting pavise memcpy
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:43
  %18 = load i64, i64* %key.addr, align 8, !dbg !1801, !tbaa !1784
  %20 = bitcast %struct.pmemoid* %agg.tmp4 to i8*, !dbg !1802
  %21 = bitcast %struct.pmemoid* %value_ptr to i8*, !dbg !1802
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !1802, !tbaa.struct !1794
inserting pavise mem*** before llvm.memcpy.p0i8.p0i8.i64
inserting pavise memcpy
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:43
  %22 = bitcast %union.hashmap_tx_toid* %agg.tmp3 to { i64, i64 }*, !dbg !1803
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 0, !dbg !1803
  %24 = load i64, i64* %23, align 8, !dbg !1803
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 1, !dbg !1803
  %27 = load i64, i64* %26, align 8, !dbg !1803
  %29 = bitcast %struct.pmemoid* %agg.tmp4 to { i64, i64 }*, !dbg !1803
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !1803
  %31 = load i64, i64* %30, align 8, !dbg !1803
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !1803
  %34 = load i64, i64* %33, align 8, !dbg !1803
  %call5 = call i32 @hm_tx_insert(%struct.pmemobjpool* %15, i64 %25, i64 %28, i64 %19, i64 %32, i64 %35), !dbg !1803
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:43
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:44
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:88
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:88
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:91
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:92
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:92
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:92
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:93
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:93
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:94
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:54
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:54

/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:55
  %0 = bitcast %struct.pmemoid* %result to i8*, !dbg !1786
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #3, !dbg !1786
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:55
  call void @llvm.dbg.declare(metadata %struct.pmemoid* %result, metadata !2263, metadata !DIExpression()), !dbg !2268
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:55
  %1 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop.addr, align 8, !dbg !1788, !tbaa !1777
^Encountering ld inst of a ptr
  %map_ = getelementptr inbounds %class.PMDKMap, %class.PMDKMap* %this1, i32 0, i32 0, !dbg !1789
  %2 = bitcast %union.hashmap_tx_toid* %agg.tmp to i8*, !dbg !1789
  %3 = bitcast %union.hashmap_tx_toid* %map_ to i8*, !dbg !1789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false), !dbg !1789, !tbaa.struct !1790
inserting pavise mem*** before llvm.memcpy.p0i8.p0i8.i64
inserting pavise memcpy
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:55
  %4 = load i64, i64* %key.addr, align 8, !dbg !1791, !tbaa !1783
  %6 = bitcast %union.hashmap_tx_toid* %agg.tmp to { i64, i64 }*, !dbg !1792
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !1792
  %8 = load i64, i64* %7, align 8, !dbg !1792
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !1792
  %11 = load i64, i64* %10, align 8, !dbg !1792
  %call = call { i64, i64 } @hm_tx_remove(%struct.pmemobjpool* %1, i64 %9, i64 %12, i64 %5), !dbg !1792
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:55
  %13 = bitcast %struct.pmemoid* %result to { i64, i64 }*, !dbg !1792
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !1792
  %15 = extractvalue { i64, i64 } %call, 0, !dbg !1792
  store i64 %15, i64* %14, align 8, !dbg !1792
inserting pavise_store in front of map.hpp:55, fileid = 0
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !1792
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !1792
  store i64 %19, i64* %18, align 8, !dbg !1792
inserting pavise_store in front of map.hpp:55, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:59
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:84
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:86
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:0

/ssd1/hanjie/mod-pavise/libpmemobj-cpp/include/libpmemobj++/pool.hpp:74
  %0 = bitcast %"class.pmem::obj::pool_base"* %this1 to i32 (...)***, !dbg !1780
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4pmem3obj9pool_baseE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8, !dbg !1780, !tbaa !1781
^Encountering st inst of a ptr
inserting pavise_store in front of ../libpmemobj-cpp/include/libpmemobj++/pool.hpp:74, fileid = 0

/ssd1/hanjie/mod-pavise/libpmemobj-cpp/include/libpmemobj++/pool.hpp:73
  %pop = getelementptr inbounds %"class.pmem::obj::pool_base", %"class.pmem::obj::pool_base"* %this1, i32 0, i32 1, !dbg !1783
  store %struct.pmemobjpool* null, %struct.pmemobjpool** %pop, align 8, !dbg !1783, !tbaa !1784
^Encountering st inst of a ptr
inserting pavise_store in front of ../libpmemobj-cpp/include/libpmemobj++/pool.hpp:73, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:465
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:465
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:111
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:111
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:106
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:203
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:205
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:206
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:206
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/common.hpp:128
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/common.hpp:128
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/common.hpp:133
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/common.hpp:137
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/common.hpp:140
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/common.hpp:141
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/common.hpp:141
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/common.hpp:141
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/move.h:98
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp:65
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp:63
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp:63
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:220
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:221
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/allocator.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/allocator.h:139
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:211
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:211
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:225
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:226
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:192
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/ptr_traits.h:141
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/ptr_traits.h:142
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/move.h:137
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/move.h:138
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/move.h:47
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/alloc_traits.h:461
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/alloc_traits.h:461
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/alloc_traits.h:461
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/alloc_traits.h:462
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h:116
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h:116
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h:125
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:126
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:126
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:131
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:131
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:131
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:131
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:131
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:137
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:136
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:137
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:477
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:477
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:2281
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp:55
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:84
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp:53
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp:53
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:91
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:182
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:145
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:145
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:146
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:252
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:252
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:255
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/char_traits.h:314
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/char_traits.h:320
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/ptr_traits.h:141
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/ptr_traits.h:142
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/move.h:137
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/move.h:138
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/move.h:47
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/allocator.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/allocator.h:133
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/allocator.h:134
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h:81
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:232
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:232
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:233
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:236
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:236
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:236
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:268
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:268
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:269
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:211
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:212
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:215
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:215
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:215
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:219
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:219
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:220
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:225
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:225
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:233
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:232
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:233
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc:230
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/type_traits.h:152
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/stl_iterator_base_funcs.h:138
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/stl_iterator_base_funcs.h:138
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/stl_iterator_base_funcs.h:142
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/stl_iterator_base_funcs.h:141
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:167
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:199
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:385
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:385
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:385
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:387
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:203
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:205
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:206
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:206
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:206
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:206
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/stl_iterator_base_funcs.h:98
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/stl_iterator_base_funcs.h:98
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/stl_iterator_base_funcs.h:99
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/stl_iterator_base_types.h:205
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:335
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:335
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:335
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:338
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:340
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/char_traits.h:284
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/char_traits.h:284
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/char_traits.h:346
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/char_traits.h:346
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/char_traits.h:346
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/char_traits.h:350
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h:171
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/persistent_ptr.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/persistent_ptr.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/persistent_ptr.hpp:135
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:102
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:102
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:104
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:156
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:156
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:157
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:157
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:163
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:163
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:163
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:163
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:163
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:167
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:167
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:167
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:167
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:168
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:168
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:168
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:171
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:170
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/pool.hpp:171
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:556
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:556
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:559
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:562
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:561
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:108
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:113
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:590
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:591
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:591
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:591
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h:157
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h:158
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h:158
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h:158
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/ios_base.h:169
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/ios_base.h:169
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:612
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream:613
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h:449
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h:450
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h:450
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h:47
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h:50
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/locale_facets.h:0
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/locale_facets.h:872
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/locale_facets.h:876
 LLVM parsing call inst:
//usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/locale_facets.h:877
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:0

/ssd1/hanjie/mod-pavise/libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:288
  %oid = getelementptr inbounds %"class.pmem::detail::persistent_ptr_base", %"class.pmem::detail::persistent_ptr_base"* %this1, i32 0, i32 0, !dbg !1780
  %pool_uuid_lo = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 0, !dbg !1782
  %0 = load i64, i64* %pool_uuid_lo, align 8, !dbg !1782, !tbaa !1783
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:289
  %cmp = icmp eq i64 %2, %call, !dbg !1788
  br i1 %cmp, label %if.then, label %if.else, !dbg !1789

/ssd1/hanjie/mod-pavise/libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:293
  %oid3 = getelementptr inbounds %"class.pmem::detail::persistent_ptr_base", %"class.pmem::detail::persistent_ptr_base"* %this1, i32 0, i32 0, !dbg !1795
  %5 = bitcast %struct.pmemoid* %agg.tmp to i8*, !dbg !1796
  %6 = bitcast %struct.pmemoid* %oid3 to i8*, !dbg !1796
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false), !dbg !1796, !tbaa.struct !1797
inserting pavise mem*** before llvm.memcpy.p0i8.p0i8.i64
inserting pavise memcpy
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:293
  %7 = bitcast %struct.pmemoid* %agg.tmp to { i64, i64 }*, !dbg !1799
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !1799
  %9 = load i64, i64* %8, align 8, !dbg !1799
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !1799
  %12 = load i64, i64* %11, align 8, !dbg !1799
  %call4 = invoke i8* @_ZL21pmemobj_direct_inline7pmemoid(i64 %10, i64 %13)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !1799
  %16 = landingpad { i8*, i32 }
          catch i8* null, !dbg !1799
  %17 = extractvalue { i8*, i32 } %16, 0, !dbg !1799
  call void @__clang_call_terminate(i8* %17) #14, !dbg !1799
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp:293
  unreachable, !dbg !1799
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:27
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:28
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:29
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:29
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:29
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:29
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:32
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/map.hpp:33
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/tx-build//ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/tx-build//ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp:0

=========== Module New Dump ============

; ModuleID = '/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp'
source_filename = "/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.pmem::obj::persistent_ptr" = type { %"class.pmem::detail::persistent_ptr_base" }
%"class.pmem::detail::persistent_ptr_base" = type { %struct.pmemoid }
%struct.pmemoid = type { i64, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.pmemobjpool = type opaque
%struct._pobj_pcache = type { %struct.pmemobjpool*, i64, i32 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.pmem::obj::pool" = type { %"class.pmem::obj::pool_base" }
%"class.pmem::obj::pool_base" = type { i32 (...)**, %struct.pmemobjpool* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::allocator" = type { i8 }
%class.PMDKMap = type { %union.hashmap_tx_toid }
%union.hashmap_tx_toid = type { %struct.pmemoid }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.pmem::pool_error" = type { %"class.std::runtime_error" }
%"class.std::runtime_error" = type { %"class.std::exception", %"struct.std::__cow_string" }
%"class.std::exception" = type { i32 (...)** }
%"struct.std::__cow_string" = type { %union.anon.0 }
%union.anon.0 = type { i8* }
%struct._stritem = type { %struct._stritem*, %struct._stritem*, %struct._stritem*, i32, i32, i32, i16, i8, i8, i8, i8, i64, [8 x i8*] }
%"class.pmem::transaction_error" = type { %"class.std::runtime_error" }
%"struct.std::__false_type" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }

$_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEC2Ev = comdat any

$_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEC2Ev = comdat any

$_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE4openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_ = comdat any

$_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEaSEOS6_ = comdat any

$_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE4rootEv = comdat any

$_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEaSEOS6_ = comdat any

$_ZNK4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE3rawEv = comdat any

$_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE6createERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_mj = comdat any

$_ZNK4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEptEv = comdat any

$_ZN7PMDKMapImP8_stritemE4initEP11pmemobjpool = comdat any

$_ZN4pmem3obj9pool_base6handleEv = comdat any

$_ZN7PMDKMapImP8_stritemE4findEP11pmemobjpoolm = comdat any

$_ZN7PMDKMapImP8_stritemE6insertEP11pmemobjpoolmS1_ = comdat any

$_ZN7PMDKMapImP8_stritemE5eraseEP11pmemobjpoolm = comdat any

$_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEC2Ev = comdat any

$_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE11verify_typeEv = comdat any

$_ZN4pmem3obj9pool_baseC2Ev = comdat any

$_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEED0Ev = comdat any

$_ZN4pmem3obj9pool_baseD2Ev = comdat any

$_ZN4pmem3obj9pool_baseD0Ev = comdat any

$_ZN4pmem3obj9pool_baseaSEOS1_ = comdat any

$_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEaSEOS6_ = comdat any

$_ZN4pmem6detail21conditional_add_to_txINS0_19persistent_ptr_baseI7PMDKMapImP8_stritemEEEEEvPKT_m = comdat any

$_ZSt4moveIR7pmemoidEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZN4pmem17transaction_errorCI2St13runtime_errorEPKc = comdat any

$_ZN4pmem17transaction_errorD0Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIcEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIcED2Ev = comdat any

$_ZNSt14pointer_traitsIPKcE10pointer_toERS0_ = comdat any

$_ZSt9addressofIKcEPT_RS1_ = comdat any

$_ZSt11__addressofIKcEPT_RS1_ = comdat any

$_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm = comdat any

$_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm = comdat any

$_ZN4pmem3obj9pool_base4openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_ = comdat any

$_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEC2EONS0_9pool_baseE = comdat any

$_ZN4pmem10pool_errorCI2St13runtime_errorEPKc = comdat any

$_ZN4pmem3obj9pool_baseC2EP11pmemobjpool = comdat any

$__clang_call_terminate = comdat any

$_ZN4pmem10pool_errorD0Ev = comdat any

$_ZN4pmem3obj9pool_baseC2ERKS1_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_ = comdat any

$_ZNSt11char_traitsIcE6lengthEPKc = comdat any

$_ZNSt14pointer_traitsIPcE10pointer_toERc = comdat any

$_ZSt9addressofIcEPT_RS0_ = comdat any

$_ZSt11__addressofIcEPT_RS0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag = comdat any

$_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_ = comdat any

$_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_ = comdat any

$_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_ = comdat any

$_ZNSt11char_traitsIcE6assignERcRKc = comdat any

$_ZNSt11char_traitsIcE4copyEPcPKcm = comdat any

$_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEECI2NS_6detail19persistent_ptr_baseIS5_EEE7pmemoid = comdat any

$_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEC2E7pmemoid = comdat any

$_ZN4pmem3obj9pool_base6createERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_mj = comdat any

$_ZStorSt12_Ios_IostateS_ = comdat any

$_ZSt13__check_facetISt5ctypeIcEERKT_PS3_ = comdat any

$_ZNKSt5ctypeIcE5widenEc = comdat any

$_ZNK4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE3getEv = comdat any

$_ZNSt14numeric_limitsImE3maxEv = comdat any

$_ZN7PMDKMapImP8_stritemE9createMapEP11pmemobjpool = comdat any

$_ZTVN4pmem3obj4poolI7PMDKMapImP8_stritemEEE = comdat any

$_ZTSN4pmem3obj4poolI7PMDKMapImP8_stritemEEE = comdat any

$_ZTSN4pmem3obj9pool_baseE = comdat any

$_ZTIN4pmem3obj9pool_baseE = comdat any

$_ZTIN4pmem3obj4poolI7PMDKMapImP8_stritemEEE = comdat any

$_ZTVN4pmem3obj9pool_baseE = comdat any

$_ZTSN4pmem17transaction_errorE = comdat any

$_ZTIN4pmem17transaction_errorE = comdat any

$_ZTVN4pmem17transaction_errorE = comdat any

$_ZTSN4pmem10pool_errorE = comdat any

$_ZTIN4pmem10pool_errorE = comdat any

$_ZTVN4pmem10pool_errorE = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1, !dbg !0
@__dso_handle = external hidden global i8
@_ZL17primary_hashtable = internal global %"class.pmem::obj::persistent_ptr" zeroinitializer, align 8, !dbg !19
@.str = private unnamed_addr constant [21 x i8] c"assoc_init: recover\0A\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"memcached\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [53 x i8] c"***************************************************\0A\00", align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"  Using hash-table from PREVIOUS incarnation \0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"  primary_hashtable = %p\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"assoc_init: create\0A\00", align 1
@.str.7 = private unnamed_addr constant [48 x i8] c"  Allocated hash-table in CURRENT incarnation \0A\00", align 1
@_ZL9curr_pool = internal global %struct.pmemobjpool* null, align 8, !dbg !745
@.str.8 = private unnamed_addr constant [11 x i8] c"nkey == 16\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp\00", align 1
@__PRETTY_FUNCTION__._Z10convertKeyPKcm = private unnamed_addr constant [45 x i8] c"KEY_T convertKey(const char *, const size_t)\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"it->nkey == 16\00", align 1
@__PRETTY_FUNCTION__.assoc_insert = private unnamed_addr constant [25 x i8] c"int assoc_insert(item *)\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"assoc_find(key) == 0\00", align 1
@__PRETTY_FUNCTION__.assoc_delete = private unnamed_addr constant [46 x i8] c"void assoc_delete(const char *, const size_t)\00", align 1
@_ZL8OID_NULL = internal constant %struct.pmemoid zeroinitializer, align 8, !dbg !743
@_ZTVN4pmem3obj4poolI7PMDKMapImP8_stritemEEE = linkonce_odr dso_local unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4pmem3obj4poolI7PMDKMapImP8_stritemEEE to i8*), i8* bitcast (void (%"class.pmem::obj::pool_base"*)* @_ZN4pmem3obj9pool_baseD2Ev to i8*), i8* bitcast (void (%"class.pmem::obj::pool"*)* @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEED0Ev to i8*)] }, comdat, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN4pmem3obj4poolI7PMDKMapImP8_stritemEEE = linkonce_odr dso_local constant [40 x i8] c"N4pmem3obj4poolI7PMDKMapImP8_stritemEEE\00", comdat, align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTSN4pmem3obj9pool_baseE = linkonce_odr dso_local constant [22 x i8] c"N4pmem3obj9pool_baseE\00", comdat, align 1
@_ZTIN4pmem3obj9pool_baseE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTSN4pmem3obj9pool_baseE, i32 0, i32 0) }, comdat, align 8
@_ZTIN4pmem3obj4poolI7PMDKMapImP8_stritemEEE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_ZTSN4pmem3obj4poolI7PMDKMapImP8_stritemEEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN4pmem3obj9pool_baseE to i8*) }, comdat, align 8
@_ZTVN4pmem3obj9pool_baseE = linkonce_odr dso_local unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN4pmem3obj9pool_baseE to i8*), i8* bitcast (void (%"class.pmem::obj::pool_base"*)* @_ZN4pmem3obj9pool_baseD2Ev to i8*), i8* bitcast (void (%"class.pmem::obj::pool_base"*)* @_ZN4pmem3obj9pool_baseD0Ev to i8*)] }, comdat, align 8
@.str.12 = private unnamed_addr constant [44 x i8] c"Could not add object(s) to the transaction.\00", align 1
@_ZTSN4pmem17transaction_errorE = linkonce_odr dso_local constant [27 x i8] c"N4pmem17transaction_errorE\00", comdat, align 1
@_ZTISt13runtime_error = external dso_local constant i8*
@_ZTIN4pmem17transaction_errorE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @_ZTSN4pmem17transaction_errorE, i32 0, i32 0), i8* bitcast (i8** @_ZTISt13runtime_error to i8*) }, comdat, align 8
@_ZTVN4pmem17transaction_errorE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4pmem17transaction_errorE to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD2Ev to i8*), i8* bitcast (void (%"class.pmem::transaction_error"*)* @_ZN4pmem17transaction_errorD0Ev to i8*), i8* bitcast (i8* (%"class.std::runtime_error"*)* @_ZNKSt13runtime_error4whatEv to i8*)] }, comdat, align 8
@_pobj_cached_pool = external thread_local global %struct._pobj_pcache, align 8
@_pobj_cache_invalidate = external dso_local global i32, align 4
@.str.13 = private unnamed_addr constant [20 x i8] c"Failed opening pool\00", align 1
@_ZTSN4pmem10pool_errorE = linkonce_odr dso_local constant [20 x i8] c"N4pmem10pool_errorE\00", comdat, align 1
@_ZTIN4pmem10pool_errorE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTSN4pmem10pool_errorE, i32 0, i32 0), i8* bitcast (i8** @_ZTISt13runtime_error to i8*) }, comdat, align 8
@_ZTVN4pmem10pool_errorE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4pmem10pool_errorE to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD2Ev to i8*), i8* bitcast (void (%"class.pmem::pool_error"*)* @_ZN4pmem10pool_errorD0Ev to i8*), i8* bitcast (i8* (%"class.std::runtime_error"*)* @_ZNKSt13runtime_error4whatEv to i8*)] }, comdat, align 8
@.str.14 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c"Invalid pool handle\00", align 1
@_ZSt4cerr = external dso_local global %"class.std::basic_ostream", align 8
@.str.16 = private unnamed_addr constant [12 x i8] c"Failed with\00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"Failed creating pool\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"zalloc failed with \00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"map_new\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_new_assoc.cpp, i8* null }]

; Function Attrs: uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" !dbg !1771 {
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit), !dbg !1772
  %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3, !dbg !1772
  ret void, !dbg !1772
}

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* %0) unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* %0) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)* %0, i8* %1, i8* %2) #3

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" !dbg !1773 {
entry:
  call void @_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEC2Ev(%"class.pmem::obj::persistent_ptr"* @_ZL17primary_hashtable), !dbg !1774
  ret void, !dbg !1774
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEC2Ev(%"class.pmem::obj::persistent_ptr"* %this) unnamed_addr #0 comdat align 2 !dbg !1775 {
entry:
  %this.addr = alloca %"class.pmem::obj::persistent_ptr"*, align 8
  store %"class.pmem::obj::persistent_ptr"* %this, %"class.pmem::obj::persistent_ptr"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::persistent_ptr"** %this.addr, metadata !1777, metadata !DIExpression()), !dbg !1783
  %this1 = load %"class.pmem::obj::persistent_ptr"*, %"class.pmem::obj::persistent_ptr"** %this.addr, align 8
  %0 = bitcast %"class.pmem::obj::persistent_ptr"* %this1 to %"class.pmem::detail::persistent_ptr_base"*, !dbg !1784
  call void @_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEC2Ev(%"class.pmem::detail::persistent_ptr_base"* %0), !dbg !1785
  ret void, !dbg !1784
}

; Function Attrs: uwtable
define dso_local %struct.pmemobjpool* @assoc_init(i1 zeroext %recover, i8* %path) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !1786 {
entry:
  %recover.addr = alloca i8, align 1
  %path.addr = alloca i8*, align 8
  %pop = alloca %"class.pmem::obj::pool", align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %ref.tmp = alloca %"class.pmem::obj::pool", align 8
  %ref.tmp1 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp2 = alloca %"class.std::allocator", align 1
  %ref.tmp5 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp6 = alloca %"class.std::allocator", align 1
  %ref.tmp19 = alloca %"class.pmem::obj::persistent_ptr", align 8
  %agg.tmp = alloca %struct.pmemoid, align 8
  %ref.tmp38 = alloca %"class.pmem::obj::pool", align 8
  %ref.tmp39 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp40 = alloca %"class.std::allocator", align 1
  %ref.tmp43 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp44 = alloca %"class.std::allocator", align 1
  %ref.tmp59 = alloca %"class.pmem::obj::persistent_ptr", align 8
  %agg.tmp72 = alloca %struct.pmemoid, align 8
  %frombool = zext i1 %recover to i8
  store i8 %frombool, i8* %recover.addr, align 1, !tbaa !1793
  call void @llvm.dbg.declare(metadata i8* %recover.addr, metadata !1790, metadata !DIExpression()), !dbg !1795
  store i8* %path, i8** %path.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !1791, metadata !DIExpression()), !dbg !1796
  %0 = bitcast %"class.pmem::obj::pool"* %pop to i8*, !dbg !1797
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #3, !dbg !1797
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool"* %pop, metadata !1792, metadata !DIExpression()), !dbg !1798
  call void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEC2Ev(%"class.pmem::obj::pool"* %pop) #3, !dbg !1798
  %1 = load i8, i8* %recover.addr, align 1, !dbg !1799, !tbaa !1793, !range !1801
  %tobool = trunc i8 %1 to i1, !dbg !1799
  br i1 %tobool, label %if.then, label %if.else, !dbg !1802

if.then:                                          ; preds = %entry
  %call = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad, !dbg !1803

invoke.cont:                                      ; preds = %if.then
  %2 = bitcast %"class.pmem::obj::pool"* %ref.tmp to i8*, !dbg !1805
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %2) #3, !dbg !1805
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp1 to i8*, !dbg !1806
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %3) #3, !dbg !1806
  %4 = load i8*, i8** %path.addr, align 8, !dbg !1806, !tbaa !1779
  %5 = bitcast %"class.std::allocator"* %ref.tmp2 to i8*, !dbg !1806
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %5) #3, !dbg !1806
  call void @_ZNSaIcEC2Ev(%"class.std::allocator"* %ref.tmp2) #3, !dbg !1806
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* %ref.tmp1, i8* %4, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %ref.tmp2)
          to label %invoke.cont4 unwind label %lpad3, !dbg !1806

invoke.cont4:                                     ; preds = %invoke.cont
  %6 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp5 to i8*, !dbg !1807
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %6) #3, !dbg !1807
  %7 = bitcast %"class.std::allocator"* %ref.tmp6 to i8*, !dbg !1807
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %7) #3, !dbg !1807
  call void @_ZNSaIcEC2Ev(%"class.std::allocator"* %ref.tmp6) #3, !dbg !1807
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* %ref.tmp5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), %"class.std::allocator"* nonnull align 1 dereferenceable(1) %ref.tmp6)
          to label %invoke.cont8 unwind label %lpad7, !dbg !1807

invoke.cont8:                                     ; preds = %invoke.cont4
  invoke void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE4openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_(%"class.pmem::obj::pool"* sret align 8 %ref.tmp, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp5)
          to label %invoke.cont10 unwind label %lpad9, !dbg !1805

invoke.cont10:                                    ; preds = %invoke.cont8
  %call11 = call nonnull align 8 dereferenceable(16) %"class.pmem::obj::pool"* @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEaSEOS6_(%"class.pmem::obj::pool"* %pop, %"class.pmem::obj::pool"* nonnull align 8 dereferenceable(16) %ref.tmp) #3, !dbg !1808
  call void bitcast (void (%"class.pmem::obj::pool_base"*)* @_ZN4pmem3obj9pool_baseD2Ev to void (%"class.pmem::obj::pool"*)*)(%"class.pmem::obj::pool"* %ref.tmp) #3, !dbg !1809
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* %ref.tmp5) #3, !dbg !1809
  call void @_ZNSaIcED2Ev(%"class.std::allocator"* %ref.tmp6) #3, !dbg !1809
  %8 = bitcast %"class.std::allocator"* %ref.tmp6 to i8*, !dbg !1809
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %8) #3, !dbg !1809
  %9 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp5 to i8*, !dbg !1809
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %9) #3, !dbg !1809
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* %ref.tmp1) #3, !dbg !1809
  call void @_ZNSaIcED2Ev(%"class.std::allocator"* %ref.tmp2) #3, !dbg !1809
  %10 = bitcast %"class.std::allocator"* %ref.tmp2 to i8*, !dbg !1809
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #3, !dbg !1809
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp1 to i8*, !dbg !1809
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #3, !dbg !1809
  %12 = bitcast %"class.pmem::obj::pool"* %ref.tmp to i8*, !dbg !1809
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %12) #3, !dbg !1809
  %13 = bitcast %"class.pmem::obj::persistent_ptr"* %ref.tmp19 to i8*, !dbg !1810
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %13) #3, !dbg !1810
  invoke void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE4rootEv(%"class.pmem::obj::persistent_ptr"* sret align 8 %ref.tmp19, %"class.pmem::obj::pool"* %pop)
          to label %invoke.cont21 unwind label %lpad20, !dbg !1811

invoke.cont21:                                    ; preds = %invoke.cont10
  %call23 = invoke nonnull align 8 dereferenceable(16) %"class.pmem::obj::persistent_ptr"* @_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEaSEOS6_(%"class.pmem::obj::persistent_ptr"* @_ZL17primary_hashtable, %"class.pmem::obj::persistent_ptr"* nonnull align 8 dereferenceable(16) %ref.tmp19)
          to label %invoke.cont22 unwind label %lpad20, !dbg !1812

invoke.cont22:                                    ; preds = %invoke.cont21
  %14 = bitcast %"class.pmem::obj::persistent_ptr"* %ref.tmp19 to i8*, !dbg !1813
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %14) #3, !dbg !1813
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1814, !tbaa !1779
  %call26 = invoke i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0))
          to label %invoke.cont25 unwind label %lpad, !dbg !1815

invoke.cont25:                                    ; preds = %invoke.cont22
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1816, !tbaa !1779
  %call28 = invoke i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0))
          to label %invoke.cont27 unwind label %lpad, !dbg !1817

invoke.cont27:                                    ; preds = %invoke.cont25
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1818, !tbaa !1779
  %call29 = call nonnull align 8 dereferenceable(16) %struct.pmemoid* @_ZNK4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE3rawEv(%"class.pmem::detail::persistent_ptr_base"* getelementptr inbounds (%"class.pmem::obj::persistent_ptr", %"class.pmem::obj::persistent_ptr"* @_ZL17primary_hashtable, i32 0, i32 0)) #3, !dbg !1819
  %18 = bitcast %struct.pmemoid* %agg.tmp to i8*, !dbg !1820
  %19 = bitcast %struct.pmemoid* %call29 to i8*, !dbg !1820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false), !dbg !1820, !tbaa.struct !1821
  %20 = bitcast %struct.pmemoid* %agg.tmp to { i64, i64 }*, !dbg !1824
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !1824
  %22 = load i64, i64* %21, align 8, !dbg !1824
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !1824
  %24 = load i64, i64* %23, align 8, !dbg !1824
  %call31 = invoke i8* @_ZL21pmemobj_direct_inline7pmemoid(i64 %22, i64 %24)
          to label %invoke.cont30 unwind label %lpad, !dbg !1824

invoke.cont30:                                    ; preds = %invoke.cont27
  %call33 = invoke i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* %call31)
          to label %invoke.cont32 unwind label %lpad, !dbg !1825

invoke.cont32:                                    ; preds = %invoke.cont30
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1826, !tbaa !1779
  %call35 = invoke i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0))
          to label %invoke.cont34 unwind label %lpad, !dbg !1827

invoke.cont34:                                    ; preds = %invoke.cont32
  br label %if.end, !dbg !1828

lpad:                                             ; preds = %invoke.cont76, %invoke.cont74, %invoke.cont70, %invoke.cont68, %invoke.cont67, %invoke.cont62, %if.else, %invoke.cont32, %invoke.cont30, %invoke.cont27, %invoke.cont25, %invoke.cont22, %if.then
  %26 = landingpad { i8*, i32 }
          cleanup, !dbg !1829
  %27 = extractvalue { i8*, i32 } %26, 0, !dbg !1829
  store i8* %27, i8** %exn.slot, align 8, !dbg !1829
  %28 = extractvalue { i8*, i32 } %26, 1, !dbg !1829
  store i32 %28, i32* %ehselector.slot, align 4, !dbg !1829
  br label %ehcleanup81, !dbg !1829

lpad3:                                            ; preds = %invoke.cont
  %29 = landingpad { i8*, i32 }
          cleanup, !dbg !1829
  %30 = extractvalue { i8*, i32 } %29, 0, !dbg !1829
  store i8* %30, i8** %exn.slot, align 8, !dbg !1829
  %31 = extractvalue { i8*, i32 } %29, 1, !dbg !1829
  store i32 %31, i32* %ehselector.slot, align 4, !dbg !1829
  br label %ehcleanup15, !dbg !1829

lpad7:                                            ; preds = %invoke.cont4
  %32 = landingpad { i8*, i32 }
          cleanup, !dbg !1829
  %33 = extractvalue { i8*, i32 } %32, 0, !dbg !1829
  store i8* %33, i8** %exn.slot, align 8, !dbg !1829
  %34 = extractvalue { i8*, i32 } %32, 1, !dbg !1829
  store i32 %34, i32* %ehselector.slot, align 4, !dbg !1829
  br label %ehcleanup, !dbg !1829

lpad9:                                            ; preds = %invoke.cont8
  %35 = landingpad { i8*, i32 }
          cleanup, !dbg !1829
  %36 = extractvalue { i8*, i32 } %35, 0, !dbg !1829
  store i8* %36, i8** %exn.slot, align 8, !dbg !1829
  %37 = extractvalue { i8*, i32 } %35, 1, !dbg !1829
  store i32 %37, i32* %ehselector.slot, align 4, !dbg !1829
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* %ref.tmp5) #3, !dbg !1809
  br label %ehcleanup, !dbg !1809

ehcleanup:                                        ; preds = %lpad9, %lpad7
  call void @_ZNSaIcED2Ev(%"class.std::allocator"* %ref.tmp6) #3, !dbg !1809
  %38 = bitcast %"class.std::allocator"* %ref.tmp6 to i8*, !dbg !1809
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %38) #3, !dbg !1809
  %39 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp5 to i8*, !dbg !1809
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %39) #3, !dbg !1809
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* %ref.tmp1) #3, !dbg !1809
  br label %ehcleanup15, !dbg !1809

ehcleanup15:                                      ; preds = %ehcleanup, %lpad3
  call void @_ZNSaIcED2Ev(%"class.std::allocator"* %ref.tmp2) #3, !dbg !1809
  %40 = bitcast %"class.std::allocator"* %ref.tmp2 to i8*, !dbg !1809
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %40) #3, !dbg !1809
  %41 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp1 to i8*, !dbg !1809
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %41) #3, !dbg !1809
  %42 = bitcast %"class.pmem::obj::pool"* %ref.tmp to i8*, !dbg !1809
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %42) #3, !dbg !1809
  br label %ehcleanup81, !dbg !1809

lpad20:                                           ; preds = %invoke.cont21, %invoke.cont10
  %43 = landingpad { i8*, i32 }
          cleanup, !dbg !1829
  %44 = extractvalue { i8*, i32 } %43, 0, !dbg !1829
  store i8* %44, i8** %exn.slot, align 8, !dbg !1829
  %45 = extractvalue { i8*, i32 } %43, 1, !dbg !1829
  store i32 %45, i32* %ehselector.slot, align 4, !dbg !1829
  %46 = bitcast %"class.pmem::obj::persistent_ptr"* %ref.tmp19 to i8*, !dbg !1813
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %46) #3, !dbg !1813
  br label %ehcleanup81, !dbg !1813

if.else:                                          ; preds = %entry
  %call37 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
          to label %invoke.cont36 unwind label %lpad, !dbg !1830

invoke.cont36:                                    ; preds = %if.else
  %47 = bitcast %"class.pmem::obj::pool"* %ref.tmp38 to i8*, !dbg !1832
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %47) #3, !dbg !1832
  %48 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp39 to i8*, !dbg !1833
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %48) #3, !dbg !1833
  %49 = load i8*, i8** %path.addr, align 8, !dbg !1833, !tbaa !1779
  %50 = bitcast %"class.std::allocator"* %ref.tmp40 to i8*, !dbg !1833
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %50) #3, !dbg !1833
  call void @_ZNSaIcEC2Ev(%"class.std::allocator"* %ref.tmp40) #3, !dbg !1833
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* %ref.tmp39, i8* %49, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %ref.tmp40)
          to label %invoke.cont42 unwind label %lpad41, !dbg !1833

invoke.cont42:                                    ; preds = %invoke.cont36
  %51 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp43 to i8*, !dbg !1834
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %51) #3, !dbg !1834
  %52 = bitcast %"class.std::allocator"* %ref.tmp44 to i8*, !dbg !1834
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %52) #3, !dbg !1834
  call void @_ZNSaIcEC2Ev(%"class.std::allocator"* %ref.tmp44) #3, !dbg !1834
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* %ref.tmp43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), %"class.std::allocator"* nonnull align 1 dereferenceable(1) %ref.tmp44)
          to label %invoke.cont46 unwind label %lpad45, !dbg !1834

invoke.cont46:                                    ; preds = %invoke.cont42
  invoke void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE6createERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_mj(%"class.pmem::obj::pool"* sret align 8 %ref.tmp38, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp39, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp43, i64 8589934592, i32 384)
          to label %invoke.cont48 unwind label %lpad47, !dbg !1832

invoke.cont48:                                    ; preds = %invoke.cont46
  %call49 = call nonnull align 8 dereferenceable(16) %"class.pmem::obj::pool"* @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEaSEOS6_(%"class.pmem::obj::pool"* %pop, %"class.pmem::obj::pool"* nonnull align 8 dereferenceable(16) %ref.tmp38) #3, !dbg !1835
  call void bitcast (void (%"class.pmem::obj::pool_base"*)* @_ZN4pmem3obj9pool_baseD2Ev to void (%"class.pmem::obj::pool"*)*)(%"class.pmem::obj::pool"* %ref.tmp38) #3, !dbg !1836
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* %ref.tmp43) #3, !dbg !1836
  call void @_ZNSaIcED2Ev(%"class.std::allocator"* %ref.tmp44) #3, !dbg !1836
  %53 = bitcast %"class.std::allocator"* %ref.tmp44 to i8*, !dbg !1836
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %53) #3, !dbg !1836
  %54 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp43 to i8*, !dbg !1836
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %54) #3, !dbg !1836
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* %ref.tmp39) #3, !dbg !1836
  call void @_ZNSaIcED2Ev(%"class.std::allocator"* %ref.tmp40) #3, !dbg !1836
  %55 = bitcast %"class.std::allocator"* %ref.tmp40 to i8*, !dbg !1836
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %55) #3, !dbg !1836
  %56 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp39 to i8*, !dbg !1836
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %56) #3, !dbg !1836
  %57 = bitcast %"class.pmem::obj::pool"* %ref.tmp38 to i8*, !dbg !1836
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %57) #3, !dbg !1836
  %58 = bitcast %"class.pmem::obj::persistent_ptr"* %ref.tmp59 to i8*, !dbg !1837
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %58) #3, !dbg !1837
  invoke void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE4rootEv(%"class.pmem::obj::persistent_ptr"* sret align 8 %ref.tmp59, %"class.pmem::obj::pool"* %pop)
          to label %invoke.cont61 unwind label %lpad60, !dbg !1838

invoke.cont61:                                    ; preds = %invoke.cont48
  %call63 = invoke nonnull align 8 dereferenceable(16) %"class.pmem::obj::persistent_ptr"* @_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEaSEOS6_(%"class.pmem::obj::persistent_ptr"* @_ZL17primary_hashtable, %"class.pmem::obj::persistent_ptr"* nonnull align 8 dereferenceable(16) %ref.tmp59)
          to label %invoke.cont62 unwind label %lpad60, !dbg !1839

invoke.cont62:                                    ; preds = %invoke.cont61
  %59 = bitcast %"class.pmem::obj::persistent_ptr"* %ref.tmp59 to i8*, !dbg !1840
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %59) #3, !dbg !1840
  %call65 = call %class.PMDKMap* @_ZNK4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEptEv(%"class.pmem::obj::persistent_ptr"* @_ZL17primary_hashtable) #3, !dbg !1841
  %60 = bitcast %"class.pmem::obj::pool"* %pop to %"class.pmem::obj::pool_base"*, !dbg !1842
  %call66 = call %struct.pmemobjpool* @_ZN4pmem3obj9pool_base6handleEv(%"class.pmem::obj::pool_base"* %60) #3, !dbg !1843
  invoke void @_ZN7PMDKMapImP8_stritemE4initEP11pmemobjpool(%class.PMDKMap* %call65, %struct.pmemobjpool* %call66)
          to label %invoke.cont67 unwind label %lpad, !dbg !1844

invoke.cont67:                                    ; preds = %invoke.cont62
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1845, !tbaa !1779
  %call69 = invoke i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0))
          to label %invoke.cont68 unwind label %lpad, !dbg !1846

invoke.cont68:                                    ; preds = %invoke.cont67
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1847, !tbaa !1779
  %call71 = invoke i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0))
          to label %invoke.cont70 unwind label %lpad, !dbg !1848

invoke.cont70:                                    ; preds = %invoke.cont68
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1849, !tbaa !1779
  %call73 = call nonnull align 8 dereferenceable(16) %struct.pmemoid* @_ZNK4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE3rawEv(%"class.pmem::detail::persistent_ptr_base"* getelementptr inbounds (%"class.pmem::obj::persistent_ptr", %"class.pmem::obj::persistent_ptr"* @_ZL17primary_hashtable, i32 0, i32 0)) #3, !dbg !1850
  %64 = bitcast %struct.pmemoid* %agg.tmp72 to i8*, !dbg !1851
  %65 = bitcast %struct.pmemoid* %call73 to i8*, !dbg !1851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false), !dbg !1851, !tbaa.struct !1821
  %66 = bitcast %struct.pmemoid* %agg.tmp72 to { i64, i64 }*, !dbg !1852
  %67 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %66, i32 0, i32 0, !dbg !1852
  %68 = load i64, i64* %67, align 8, !dbg !1852
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %66, i32 0, i32 1, !dbg !1852
  %70 = load i64, i64* %69, align 8, !dbg !1852
  %call75 = invoke i8* @_ZL21pmemobj_direct_inline7pmemoid(i64 %68, i64 %70)
          to label %invoke.cont74 unwind label %lpad, !dbg !1852

invoke.cont74:                                    ; preds = %invoke.cont70
  %call77 = invoke i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* %call75)
          to label %invoke.cont76 unwind label %lpad, !dbg !1853

invoke.cont76:                                    ; preds = %invoke.cont74
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1854, !tbaa !1779
  %call79 = invoke i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0))
          to label %invoke.cont78 unwind label %lpad, !dbg !1855

invoke.cont78:                                    ; preds = %invoke.cont76
  br label %if.end

lpad41:                                           ; preds = %invoke.cont36
  %72 = landingpad { i8*, i32 }
          cleanup, !dbg !1856
  %73 = extractvalue { i8*, i32 } %72, 0, !dbg !1856
  store i8* %73, i8** %exn.slot, align 8, !dbg !1856
  %74 = extractvalue { i8*, i32 } %72, 1, !dbg !1856
  store i32 %74, i32* %ehselector.slot, align 4, !dbg !1856
  br label %ehcleanup55, !dbg !1856

lpad45:                                           ; preds = %invoke.cont42
  %75 = landingpad { i8*, i32 }
          cleanup, !dbg !1856
  %76 = extractvalue { i8*, i32 } %75, 0, !dbg !1856
  store i8* %76, i8** %exn.slot, align 8, !dbg !1856
  %77 = extractvalue { i8*, i32 } %75, 1, !dbg !1856
  store i32 %77, i32* %ehselector.slot, align 4, !dbg !1856
  br label %ehcleanup51, !dbg !1856

lpad47:                                           ; preds = %invoke.cont46
  %78 = landingpad { i8*, i32 }
          cleanup, !dbg !1856
  %79 = extractvalue { i8*, i32 } %78, 0, !dbg !1856
  store i8* %79, i8** %exn.slot, align 8, !dbg !1856
  %80 = extractvalue { i8*, i32 } %78, 1, !dbg !1856
  store i32 %80, i32* %ehselector.slot, align 4, !dbg !1856
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* %ref.tmp43) #3, !dbg !1836
  br label %ehcleanup51, !dbg !1836

ehcleanup51:                                      ; preds = %lpad47, %lpad45
  call void @_ZNSaIcED2Ev(%"class.std::allocator"* %ref.tmp44) #3, !dbg !1836
  %81 = bitcast %"class.std::allocator"* %ref.tmp44 to i8*, !dbg !1836
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %81) #3, !dbg !1836
  %82 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp43 to i8*, !dbg !1836
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %82) #3, !dbg !1836
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* %ref.tmp39) #3, !dbg !1836
  br label %ehcleanup55, !dbg !1836

ehcleanup55:                                      ; preds = %ehcleanup51, %lpad41
  call void @_ZNSaIcED2Ev(%"class.std::allocator"* %ref.tmp40) #3, !dbg !1836
  %83 = bitcast %"class.std::allocator"* %ref.tmp40 to i8*, !dbg !1836
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %83) #3, !dbg !1836
  %84 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp39 to i8*, !dbg !1836
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %84) #3, !dbg !1836
  %85 = bitcast %"class.pmem::obj::pool"* %ref.tmp38 to i8*, !dbg !1836
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %85) #3, !dbg !1836
  br label %ehcleanup81, !dbg !1836

lpad60:                                           ; preds = %invoke.cont61, %invoke.cont48
  %86 = landingpad { i8*, i32 }
          cleanup, !dbg !1856
  %87 = extractvalue { i8*, i32 } %86, 0, !dbg !1856
  store i8* %87, i8** %exn.slot, align 8, !dbg !1856
  %88 = extractvalue { i8*, i32 } %86, 1, !dbg !1856
  store i32 %88, i32* %ehselector.slot, align 4, !dbg !1856
  %89 = bitcast %"class.pmem::obj::persistent_ptr"* %ref.tmp59 to i8*, !dbg !1840
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %89) #3, !dbg !1840
  br label %ehcleanup81, !dbg !1840

if.end:                                           ; preds = %invoke.cont78, %invoke.cont34
  %90 = bitcast %"class.pmem::obj::pool"* %pop to %"class.pmem::obj::pool_base"*, !dbg !1857
  %call80 = call %struct.pmemobjpool* @_ZN4pmem3obj9pool_base6handleEv(%"class.pmem::obj::pool_base"* %90) #3, !dbg !1858
  store %struct.pmemobjpool* %call80, %struct.pmemobjpool** @_ZL9curr_pool, align 8, !dbg !1859, !tbaa !1779
  %91 = load %struct.pmemobjpool*, %struct.pmemobjpool** @_ZL9curr_pool, align 8, !dbg !1860, !tbaa !1779
  call void bitcast (void (%"class.pmem::obj::pool_base"*)* @_ZN4pmem3obj9pool_baseD2Ev to void (%"class.pmem::obj::pool"*)*)(%"class.pmem::obj::pool"* %pop) #3, !dbg !1861
  %92 = bitcast %"class.pmem::obj::pool"* %pop to i8*, !dbg !1861
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %92) #3, !dbg !1861
  ret %struct.pmemobjpool* %91, !dbg !1861

ehcleanup81:                                      ; preds = %lpad60, %ehcleanup55, %lpad20, %ehcleanup15, %lpad
  call void bitcast (void (%"class.pmem::obj::pool_base"*)* @_ZN4pmem3obj9pool_baseD2Ev to void (%"class.pmem::obj::pool"*)*)(%"class.pmem::obj::pool"* %pop) #3, !dbg !1861
  %93 = bitcast %"class.pmem::obj::pool"* %pop to i8*, !dbg !1861
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %93) #3, !dbg !1861
  br label %eh.resume, !dbg !1861

eh.resume:                                        ; preds = %ehcleanup81
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !1861
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !1861
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !1861
  %lpad.val83 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !1861
  resume { i8*, i32 } %lpad.val83, !dbg !1861
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata %0, metadata %1, metadata %2) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #5

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEC2Ev(%"class.pmem::obj::pool"* %this) unnamed_addr #6 comdat align 2 !dbg !1862 {
entry:
  %this.addr = alloca %"class.pmem::obj::pool"*, align 8
  store %"class.pmem::obj::pool"* %this, %"class.pmem::obj::pool"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool"** %this.addr, metadata !1864, metadata !DIExpression()), !dbg !1866
  %this1 = load %"class.pmem::obj::pool"*, %"class.pmem::obj::pool"** %this.addr, align 8
  %0 = bitcast %"class.pmem::obj::pool"* %this1 to %"class.pmem::obj::pool_base"*, !dbg !1867
  call void @_ZN4pmem3obj9pool_baseC2Ev(%"class.pmem::obj::pool_base"* %0) #3, !dbg !1868
  %1 = bitcast %"class.pmem::obj::pool"* %this1 to i32 (...)***, !dbg !1867
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4pmem3obj4poolI7PMDKMapImP8_stritemEEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !dbg !1867, !tbaa !1869
  ret void, !dbg !1867
}

declare dso_local i32 @printf(i8* %0, ...) #1

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE4openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_(%"class.pmem::obj::pool"* noalias sret align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %layout) #0 comdat align 2 !dbg !1871 {
entry:
  %result.ptr = alloca i8*, align 8
  %path.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %layout.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %ref.tmp = alloca %"class.pmem::obj::pool_base", align 8
  %0 = bitcast %"class.pmem::obj::pool"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %path, %"class.std::__cxx11::basic_string"** %path.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %path.addr, metadata !1873, metadata !DIExpression()), !dbg !1875
  store %"class.std::__cxx11::basic_string"* %layout, %"class.std::__cxx11::basic_string"** %layout.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %layout.addr, metadata !1874, metadata !DIExpression()), !dbg !1876
  %1 = bitcast %"class.pmem::obj::pool_base"* %ref.tmp to i8*, !dbg !1877
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %1) #3, !dbg !1877
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %path.addr, align 8, !dbg !1878, !tbaa !1779
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %layout.addr, align 8, !dbg !1879, !tbaa !1779
  call void @_ZN4pmem3obj9pool_base4openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_(%"class.pmem::obj::pool_base"* sret align 8 %ref.tmp, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3), !dbg !1877
  call void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEC2EONS0_9pool_baseE(%"class.pmem::obj::pool"* %agg.result, %"class.pmem::obj::pool_base"* nonnull align 8 dereferenceable(16) %ref.tmp) #3, !dbg !1880
  call void @_ZN4pmem3obj9pool_baseD2Ev(%"class.pmem::obj::pool_base"* %ref.tmp) #3, !dbg !1881
  %4 = bitcast %"class.pmem::obj::pool_base"* %ref.tmp to i8*, !dbg !1881
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %4) #3, !dbg !1881
  ret void, !dbg !1881
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSaIcEC2Ev(%"class.std::allocator"* %this) unnamed_addr #6 align 2 !dbg !1882 {
entry:
  %this.addr = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %this, %"class.std::allocator"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::allocator"** %this.addr, metadata !1888, metadata !DIExpression()), !dbg !1890
  %this1 = load %"class.std::allocator"*, %"class.std::allocator"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator"* %this1 to %"class.__gnu_cxx::new_allocator"*, !dbg !1891
  call void @_ZN9__gnu_cxx13new_allocatorIcEC2Ev(%"class.__gnu_cxx::new_allocator"* %0) #3, !dbg !1892
  ret void, !dbg !1893
}

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* %this, i8* %__s, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !1894 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__s.addr = alloca i8*, align 8
  %__a.addr = alloca %"class.std::allocator"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !1900, metadata !DIExpression()), !dbg !1904
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__s.addr, metadata !1902, metadata !DIExpression()), !dbg !1905
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::allocator"** %__a.addr, metadata !1903, metadata !DIExpression()), !dbg !1906
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0, !dbg !1907
  %call = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* %this1), !dbg !1908
  %0 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8, !dbg !1909, !tbaa !1779
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_(%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"* %_M_dataplus, i8* %call, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %0), !dbg !1907
  %1 = load i8*, i8** %__s.addr, align 8, !dbg !1910, !tbaa !1779
  %2 = load i8*, i8** %__s.addr, align 8, !dbg !1912, !tbaa !1779
  %tobool = icmp ne i8* %2, null, !dbg !1912
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !1912

cond.true:                                        ; preds = %entry
  %3 = load i8*, i8** %__s.addr, align 8, !dbg !1913, !tbaa !1779
  %4 = load i8*, i8** %__s.addr, align 8, !dbg !1914, !tbaa !1779
  %call2 = invoke i64 @_ZNSt11char_traitsIcE6lengthEPKc(i8* %4)
          to label %invoke.cont unwind label %lpad, !dbg !1915

invoke.cont:                                      ; preds = %cond.true
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %call2, !dbg !1916
  br label %cond.end, !dbg !1912

cond.false:                                       ; preds = %entry
  %5 = load i8*, i8** %__s.addr, align 8, !dbg !1917, !tbaa !1779
  %add.ptr3 = getelementptr inbounds i8, i8* %5, i64 -1, !dbg !1918
  br label %cond.end, !dbg !1912

cond.end:                                         ; preds = %cond.false, %invoke.cont
  %cond = phi i8* [ %add.ptr, %invoke.cont ], [ %add.ptr3, %cond.false ], !dbg !1912
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_(%"class.std::__cxx11::basic_string"* %this1, i8* %1, i8* %cond)
          to label %invoke.cont4 unwind label %lpad, !dbg !1919

invoke.cont4:                                     ; preds = %cond.end
  ret void, !dbg !1920

lpad:                                             ; preds = %cond.end, %cond.true
  %6 = landingpad { i8*, i32 }
          cleanup, !dbg !1921
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !1921
  store i8* %7, i8** %exn.slot, align 8, !dbg !1921
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !1921
  store i32 %8, i32* %ehselector.slot, align 4, !dbg !1921
  call void bitcast (void (%"class.std::allocator"*)* @_ZNSaIcED2Ev to void (%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"*)*)(%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"* %_M_dataplus) #3, !dbg !1921
  br label %eh.resume, !dbg !1921

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !1921
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !1921
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !1921
  %lpad.val5 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !1921
  resume { i8*, i32 } %lpad.val5, !dbg !1921
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"class.pmem::obj::pool"* @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEaSEOS6_(%"class.pmem::obj::pool"* %this, %"class.pmem::obj::pool"* nonnull align 8 dereferenceable(16) %0) #6 comdat align 2 !dbg !1922 {
entry:
  %this.addr = alloca %"class.pmem::obj::pool"*, align 8
  %.addr = alloca %"class.pmem::obj::pool"*, align 8
  store %"class.pmem::obj::pool"* %this, %"class.pmem::obj::pool"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool"** %this.addr, metadata !1924, metadata !DIExpression()), !dbg !1926
  store %"class.pmem::obj::pool"* %0, %"class.pmem::obj::pool"** %.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool"** %.addr, metadata !1925, metadata !DIExpression()), !dbg !1927
  %this1 = load %"class.pmem::obj::pool"*, %"class.pmem::obj::pool"** %this.addr, align 8
  %1 = bitcast %"class.pmem::obj::pool"* %this1 to %"class.pmem::obj::pool_base"*, !dbg !1928
  %2 = load %"class.pmem::obj::pool"*, %"class.pmem::obj::pool"** %.addr, align 8, !dbg !1928, !tbaa !1779
  %3 = bitcast %"class.pmem::obj::pool"* %2 to %"class.pmem::obj::pool_base"*, !dbg !1928
  %call = call nonnull align 8 dereferenceable(16) %"class.pmem::obj::pool_base"* @_ZN4pmem3obj9pool_baseaSEOS1_(%"class.pmem::obj::pool_base"* %1, %"class.pmem::obj::pool_base"* nonnull align 8 dereferenceable(16) %3) #3, !dbg !1928
  ret %"class.pmem::obj::pool"* %this1, !dbg !1928
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* %this) unnamed_addr #6 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !1930 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !1935, metadata !DIExpression()), !dbg !1936
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(%"class.std::__cxx11::basic_string"* %this1)
          to label %invoke.cont unwind label %lpad, !dbg !1937

invoke.cont:                                      ; preds = %entry
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0, !dbg !1939
  call void bitcast (void (%"class.std::allocator"*)* @_ZNSaIcED2Ev to void (%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"*)*)(%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"* %_M_dataplus) #3, !dbg !1939
  ret void, !dbg !1940

lpad:                                             ; preds = %entry
  %0 = landingpad { i8*, i32 }
          cleanup
          filter [0 x i8*] zeroinitializer, !dbg !1939
  %1 = extractvalue { i8*, i32 } %0, 0, !dbg !1939
  store i8* %1, i8** %exn.slot, align 8, !dbg !1939
  %2 = extractvalue { i8*, i32 } %0, 1, !dbg !1939
  store i32 %2, i32* %ehselector.slot, align 4, !dbg !1939
  %_M_dataplus2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0, !dbg !1939
  call void bitcast (void (%"class.std::allocator"*)* @_ZNSaIcED2Ev to void (%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"*)*)(%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"* %_M_dataplus2) #3, !dbg !1939
  br label %filter.dispatch, !dbg !1939

filter.dispatch:                                  ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !1940
  call void @__cxa_call_unexpected(i8* %exn) #14, !dbg !1940
  unreachable, !dbg !1940
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #5

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE4rootEv(%"class.pmem::obj::persistent_ptr"* noalias sret align 8 %agg.result, %"class.pmem::obj::pool"* %this) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !1941 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.pmem::obj::pool"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %agg.tmp = alloca %struct.pmemoid, align 8
  %0 = bitcast %"class.pmem::obj::persistent_ptr"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.pmem::obj::pool"* %this, %"class.pmem::obj::pool"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool"** %this.addr, metadata !1943, metadata !DIExpression()), !dbg !1945
  %this1 = load %"class.pmem::obj::pool"*, %"class.pmem::obj::pool"** %this.addr, align 8
  %1 = bitcast %"class.pmem::obj::pool"* %this1 to %"class.pmem::obj::pool_base"*, !dbg !1946
  %pop = getelementptr inbounds %"class.pmem::obj::pool_base", %"class.pmem::obj::pool_base"* %1, i32 0, i32 1, !dbg !1946
  %2 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop, align 8, !dbg !1946, !tbaa !1948
  %cmp = icmp eq %struct.pmemobjpool* %2, null, !dbg !1950
  br i1 %cmp, label %if.then, label %if.end, !dbg !1951

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 16) #3, !dbg !1952
  %3 = bitcast i8* %exception to %"class.pmem::pool_error"*, !dbg !1952
  invoke void @_ZN4pmem10pool_errorCI2St13runtime_errorEPKc(%"class.pmem::pool_error"* %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad, !dbg !1953

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4pmem10pool_errorE to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD2Ev to i8*)) #14, !dbg !1952
  unreachable, !dbg !1952

lpad:                                             ; preds = %if.then
  %4 = landingpad { i8*, i32 }
          cleanup, !dbg !1954
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !1954
  store i8* %5, i8** %exn.slot, align 8, !dbg !1954
  %6 = extractvalue { i8*, i32 } %4, 1, !dbg !1954
  store i32 %6, i32* %ehselector.slot, align 4, !dbg !1954
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !1952
  br label %eh.resume, !dbg !1952

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %result.ptr, metadata !1944, metadata !DIExpression(DW_OP_deref)), !dbg !1955
  %7 = bitcast %"class.pmem::obj::pool"* %this1 to %"class.pmem::obj::pool_base"*, !dbg !1956
  %pop2 = getelementptr inbounds %"class.pmem::obj::pool_base", %"class.pmem::obj::pool_base"* %7, i32 0, i32 1, !dbg !1956
  %8 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop2, align 8, !dbg !1956, !tbaa !1948
  %call = call { i64, i64 } @pmemobj_root(%struct.pmemobjpool* %8, i64 16), !dbg !1957
  %9 = bitcast %struct.pmemoid* %agg.tmp to { i64, i64 }*, !dbg !1957
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !1957
  %11 = extractvalue { i64, i64 } %call, 0, !dbg !1957
  store i64 %11, i64* %10, align 8, !dbg !1957
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !1957
  %13 = extractvalue { i64, i64 } %call, 1, !dbg !1957
  store i64 %13, i64* %12, align 8, !dbg !1957
  %14 = bitcast %struct.pmemoid* %agg.tmp to { i64, i64 }*, !dbg !1957
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0, !dbg !1957
  %16 = load i64, i64* %15, align 8, !dbg !1957
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !1957
  %18 = load i64, i64* %17, align 8, !dbg !1957
  call void @_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEECI2NS_6detail19persistent_ptr_baseIS5_EEE7pmemoid(%"class.pmem::obj::persistent_ptr"* %agg.result, i64 %16, i64 %18) #3, !dbg !1957
  ret void, !dbg !1958

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !1952
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !1952
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !1952
  %lpad.val3 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !1952
  resume { i8*, i32 } %lpad.val3, !dbg !1952
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"class.pmem::obj::persistent_ptr"* @_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEaSEOS6_(%"class.pmem::obj::persistent_ptr"* %this, %"class.pmem::obj::persistent_ptr"* nonnull align 8 dereferenceable(16) %0) #7 comdat align 2 !dbg !1959 {
entry:
  %this.addr = alloca %"class.pmem::obj::persistent_ptr"*, align 8
  %.addr = alloca %"class.pmem::obj::persistent_ptr"*, align 8
  store %"class.pmem::obj::persistent_ptr"* %this, %"class.pmem::obj::persistent_ptr"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::persistent_ptr"** %this.addr, metadata !1965, metadata !DIExpression()), !dbg !1967
  store %"class.pmem::obj::persistent_ptr"* %0, %"class.pmem::obj::persistent_ptr"** %.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::persistent_ptr"** %.addr, metadata !1966, metadata !DIExpression()), !dbg !1967
  %this1 = load %"class.pmem::obj::persistent_ptr"*, %"class.pmem::obj::persistent_ptr"** %this.addr, align 8
  %1 = bitcast %"class.pmem::obj::persistent_ptr"* %this1 to %"class.pmem::detail::persistent_ptr_base"*, !dbg !1968
  %2 = load %"class.pmem::obj::persistent_ptr"*, %"class.pmem::obj::persistent_ptr"** %.addr, align 8, !dbg !1968, !tbaa !1779
  %3 = bitcast %"class.pmem::obj::persistent_ptr"* %2 to %"class.pmem::detail::persistent_ptr_base"*, !dbg !1968
  %call = call nonnull align 8 dereferenceable(16) %"class.pmem::detail::persistent_ptr_base"* @_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEaSEOS6_(%"class.pmem::detail::persistent_ptr_base"* %1, %"class.pmem::detail::persistent_ptr_base"* nonnull align 8 dereferenceable(16) %3), !dbg !1968
  ret %"class.pmem::obj::persistent_ptr"* %this1, !dbg !1968
}

declare dso_local i32 @fprintf(%struct._IO_FILE* %0, i8* %1, ...) #1

; Function Attrs: inlinehint uwtable
define internal i8* @_ZL21pmemobj_direct_inline7pmemoid(i64 %oid.coerce0, i64 %oid.coerce1) #7 !dbg !1970 {
entry:
  %retval = alloca i8*, align 8
  %oid = alloca %struct.pmemoid, align 8
  %cache = alloca %struct._pobj_pcache*, align 8
  %agg.tmp = alloca %struct.pmemoid, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %0 = bitcast %struct.pmemoid* %oid to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %oid.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %oid.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pmemoid* %oid, metadata !1974, metadata !DIExpression()), !dbg !1982
  %off = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 1, !dbg !1983
  %3 = load i64, i64* %off, align 8, !dbg !1983, !tbaa !1985
  %cmp = icmp eq i64 %3, 0, !dbg !1987
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1988

lor.lhs.false:                                    ; preds = %entry
  %pool_uuid_lo = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 0, !dbg !1989
  %4 = load i64, i64* %pool_uuid_lo, align 8, !dbg !1989, !tbaa !1990
  %cmp1 = icmp eq i64 %4, 0, !dbg !1991
  br i1 %cmp1, label %if.then, label %if.end, !dbg !1992

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !1993
  br label %return, !dbg !1993

if.end:                                           ; preds = %lor.lhs.false
  %5 = bitcast %struct._pobj_pcache** %cache to i8*, !dbg !1994
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #3, !dbg !1994
  call void @llvm.dbg.declare(metadata %struct._pobj_pcache** %cache, metadata !1975, metadata !DIExpression()), !dbg !1995
  store %struct._pobj_pcache* @_pobj_cached_pool, %struct._pobj_pcache** %cache, align 8, !dbg !1995, !tbaa !1779
  %6 = load i32, i32* @_pobj_cache_invalidate, align 4, !dbg !1996, !tbaa !1998
  %7 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !2000, !tbaa !1779
  %invalidate = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %7, i32 0, i32 2, !dbg !2001
  %8 = load i32, i32* %invalidate, align 8, !dbg !2001, !tbaa !2002
  %cmp2 = icmp ne i32 %6, %8, !dbg !2004
  br i1 %cmp2, label %if.then6, label %lor.lhs.false3, !dbg !2005

lor.lhs.false3:                                   ; preds = %if.end
  %9 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !2006, !tbaa !1779
  %uuid_lo = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %9, i32 0, i32 1, !dbg !2007
  %10 = load i64, i64* %uuid_lo, align 8, !dbg !2007, !tbaa !2008
  %pool_uuid_lo4 = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 0, !dbg !2009
  %11 = load i64, i64* %pool_uuid_lo4, align 8, !dbg !2009, !tbaa !1990
  %cmp5 = icmp ne i64 %10, %11, !dbg !2010
  br i1 %cmp5, label %if.then6, label %if.end13, !dbg !2011

if.then6:                                         ; preds = %lor.lhs.false3, %if.end
  %12 = load i32, i32* @_pobj_cache_invalidate, align 4, !dbg !2012, !tbaa !1998
  %13 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !2014, !tbaa !1779
  %invalidate7 = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %13, i32 0, i32 2, !dbg !2015
  store i32 %12, i32* %invalidate7, align 8, !dbg !2016, !tbaa !2002
  %14 = bitcast %struct.pmemoid* %agg.tmp to i8*, !dbg !2017
  %15 = bitcast %struct.pmemoid* %oid to i8*, !dbg !2017
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false), !dbg !2017, !tbaa.struct !1821
  %16 = bitcast %struct.pmemoid* %agg.tmp to { i64, i64 }*, !dbg !2019
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !2019
  %18 = load i64, i64* %17, align 8, !dbg !2019
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !2019
  %20 = load i64, i64* %19, align 8, !dbg !2019
  %call = call %struct.pmemobjpool* @pmemobj_pool_by_oid(i64 %18, i64 %20), !dbg !2019
  %21 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !2020, !tbaa !1779
  %pop = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %21, i32 0, i32 0, !dbg !2021
  store %struct.pmemobjpool* %call, %struct.pmemobjpool** %pop, align 8, !dbg !2022, !tbaa !2023
  %tobool = icmp ne %struct.pmemobjpool* %call, null, !dbg !2024
  br i1 %tobool, label %if.end10, label %if.then8, !dbg !2025

if.then8:                                         ; preds = %if.then6
  %22 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !2026, !tbaa !1779
  %uuid_lo9 = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %22, i32 0, i32 1, !dbg !2028
  store i64 0, i64* %uuid_lo9, align 8, !dbg !2029, !tbaa !2008
  store i8* null, i8** %retval, align 8, !dbg !2030
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2030

if.end10:                                         ; preds = %if.then6
  %pool_uuid_lo11 = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 0, !dbg !2031
  %23 = load i64, i64* %pool_uuid_lo11, align 8, !dbg !2031, !tbaa !1990
  %24 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !2032, !tbaa !1779
  %uuid_lo12 = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %24, i32 0, i32 1, !dbg !2033
  store i64 %23, i64* %uuid_lo12, align 8, !dbg !2034, !tbaa !2008
  br label %if.end13, !dbg !2035

if.end13:                                         ; preds = %if.end10, %lor.lhs.false3
  %25 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !2036, !tbaa !1779
  %pop14 = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %25, i32 0, i32 0, !dbg !2037
  %26 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop14, align 8, !dbg !2037, !tbaa !2023
  %27 = ptrtoint %struct.pmemobjpool* %26 to i64, !dbg !2038
  %off15 = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 1, !dbg !2039
  %28 = load i64, i64* %off15, align 8, !dbg !2039, !tbaa !1985
  %add = add i64 %27, %28, !dbg !2040
  %29 = inttoptr i64 %add to i8*, !dbg !2041
  store i8* %29, i8** %retval, align 8, !dbg !2042
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2042

cleanup:                                          ; preds = %if.end13, %if.then8
  %30 = bitcast %struct._pobj_pcache** %cache to i8*, !dbg !2043
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #3, !dbg !2043
  br label %return

return:                                           ; preds = %cleanup, %if.then
  %31 = load i8*, i8** %retval, align 8, !dbg !2043
  ret i8* %31, !dbg !2043
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %struct.pmemoid* @_ZNK4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE3rawEv(%"class.pmem::detail::persistent_ptr_base"* %this) #6 comdat align 2 !dbg !2044 {
entry:
  %this.addr = alloca %"class.pmem::detail::persistent_ptr_base"*, align 8
  store %"class.pmem::detail::persistent_ptr_base"* %this, %"class.pmem::detail::persistent_ptr_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::detail::persistent_ptr_base"** %this.addr, metadata !2046, metadata !DIExpression()), !dbg !2048
  %this1 = load %"class.pmem::detail::persistent_ptr_base"*, %"class.pmem::detail::persistent_ptr_base"** %this.addr, align 8
  %oid = getelementptr inbounds %"class.pmem::detail::persistent_ptr_base", %"class.pmem::detail::persistent_ptr_base"* %this1, i32 0, i32 0, !dbg !2049
  ret %struct.pmemoid* %oid, !dbg !2050
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i64 %2, i1 immarg %3) #5

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE6createERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_mj(%"class.pmem::obj::pool"* noalias sret align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %layout, i64 %size, i32 %mode) #0 comdat align 2 !dbg !2051 {
entry:
  %result.ptr = alloca i8*, align 8
  %path.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %layout.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %size.addr = alloca i64, align 8
  %mode.addr = alloca i32, align 4
  %ref.tmp = alloca %"class.pmem::obj::pool_base", align 8
  %0 = bitcast %"class.pmem::obj::pool"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %path, %"class.std::__cxx11::basic_string"** %path.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %path.addr, metadata !2053, metadata !DIExpression()), !dbg !2057
  store %"class.std::__cxx11::basic_string"* %layout, %"class.std::__cxx11::basic_string"** %layout.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %layout.addr, metadata !2054, metadata !DIExpression()), !dbg !2058
  store i64 %size, i64* %size.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !2055, metadata !DIExpression()), !dbg !2059
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !1998
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !2056, metadata !DIExpression()), !dbg !2060
  %1 = bitcast %"class.pmem::obj::pool_base"* %ref.tmp to i8*, !dbg !2061
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %1) #3, !dbg !2061
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %path.addr, align 8, !dbg !2062, !tbaa !1779
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %layout.addr, align 8, !dbg !2063, !tbaa !1779
  %4 = load i64, i64* %size.addr, align 8, !dbg !2064, !tbaa !1822
  %5 = load i32, i32* %mode.addr, align 4, !dbg !2065, !tbaa !1998
  call void @_ZN4pmem3obj9pool_base6createERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_mj(%"class.pmem::obj::pool_base"* sret align 8 %ref.tmp, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3, i64 %4, i32 %5), !dbg !2061
  call void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEC2EONS0_9pool_baseE(%"class.pmem::obj::pool"* %agg.result, %"class.pmem::obj::pool_base"* nonnull align 8 dereferenceable(16) %ref.tmp) #3, !dbg !2066
  call void @_ZN4pmem3obj9pool_baseD2Ev(%"class.pmem::obj::pool_base"* %ref.tmp) #3, !dbg !2067
  %6 = bitcast %"class.pmem::obj::pool_base"* %ref.tmp to i8*, !dbg !2067
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %6) #3, !dbg !2067
  ret void, !dbg !2067
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local %class.PMDKMap* @_ZNK4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEptEv(%"class.pmem::obj::persistent_ptr"* %this) #6 comdat align 2 !dbg !2068 {
entry:
  %this.addr = alloca %"class.pmem::obj::persistent_ptr"*, align 8
  store %"class.pmem::obj::persistent_ptr"* %this, %"class.pmem::obj::persistent_ptr"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::persistent_ptr"** %this.addr, metadata !2070, metadata !DIExpression()), !dbg !2072
  %this1 = load %"class.pmem::obj::persistent_ptr"*, %"class.pmem::obj::persistent_ptr"** %this.addr, align 8
  %0 = bitcast %"class.pmem::obj::persistent_ptr"* %this1 to %"class.pmem::detail::persistent_ptr_base"*, !dbg !2073
  %call = call %class.PMDKMap* @_ZNK4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE3getEv(%"class.pmem::detail::persistent_ptr_base"* %0) #3, !dbg !2073
  ret %class.PMDKMap* %call, !dbg !2074
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN7PMDKMapImP8_stritemE4initEP11pmemobjpool(%class.PMDKMap* %this, %struct.pmemobjpool* %pop) #0 comdat align 2 !dbg !2075 {
entry:
  %this.addr = alloca %class.PMDKMap*, align 8
  %pop.addr = alloca %struct.pmemobjpool*, align 8
  store %class.PMDKMap* %this, %class.PMDKMap** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %class.PMDKMap** %this.addr, metadata !2077, metadata !DIExpression()), !dbg !2079
  store %struct.pmemobjpool* %pop, %struct.pmemobjpool** %pop.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %struct.pmemobjpool** %pop.addr, metadata !2078, metadata !DIExpression()), !dbg !2080
  %this1 = load %class.PMDKMap*, %class.PMDKMap** %this.addr, align 8
  %map_ = getelementptr inbounds %class.PMDKMap, %class.PMDKMap* %this1, i32 0, i32 0, !dbg !2081
  %oid = bitcast %union.hashmap_tx_toid* %map_ to %struct.pmemoid*, !dbg !2081
  %off = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 1, !dbg !2081
  %0 = bitcast i64* %off to i8*, !dbg !2081
  %1 = load i64, i64* %off, align 8, !dbg !2081, !tbaa !2083
  %cmp = icmp eq i64 %1, 0, !dbg !2081
  br i1 %cmp, label %if.then, label %if.end, !dbg !2084

if.then:                                          ; preds = %entry
  %2 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop.addr, align 8, !dbg !2085, !tbaa !1779
  %call = call zeroext i1 @_ZN7PMDKMapImP8_stritemE9createMapEP11pmemobjpool(%class.PMDKMap* %this1, %struct.pmemobjpool* %2), !dbg !2086
  br label %if.end, !dbg !2086

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2087
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local %struct.pmemobjpool* @_ZN4pmem3obj9pool_base6handleEv(%"class.pmem::obj::pool_base"* %this) #6 comdat align 2 !dbg !2088 {
entry:
  %this.addr = alloca %"class.pmem::obj::pool_base"*, align 8
  store %"class.pmem::obj::pool_base"* %this, %"class.pmem::obj::pool_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool_base"** %this.addr, metadata !2090, metadata !DIExpression()), !dbg !2092
  %this1 = load %"class.pmem::obj::pool_base"*, %"class.pmem::obj::pool_base"** %this.addr, align 8
  %pop = getelementptr inbounds %"class.pmem::obj::pool_base", %"class.pmem::obj::pool_base"* %this1, i32 0, i32 1, !dbg !2093
  %0 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop, align 8, !dbg !2093, !tbaa !1948
  ret %struct.pmemobjpool* %0, !dbg !2094
}

; Function Attrs: nounwind uwtable
define dso_local i64 @_Z10convertKeyPKcm(i8* %key, i64 %nkey) #6 !dbg !2095 {
entry:
  %key.addr = alloca i8*, align 8
  %nkey.addr = alloca i64, align 8
  %key_buf = alloca [16 x i8], align 16
  store i8* %key, i8** %key.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !2101, metadata !DIExpression()), !dbg !2107
  store i64 %nkey, i64* %nkey.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %nkey.addr, metadata !2102, metadata !DIExpression()), !dbg !2108
  %0 = bitcast [16 x i8]* %key_buf to i8*, !dbg !2109
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #3, !dbg !2109
  call void @llvm.dbg.declare(metadata [16 x i8]* %key_buf, metadata !2103, metadata !DIExpression()), !dbg !2110
  %1 = load i64, i64* %nkey.addr, align 8, !dbg !2111, !tbaa !1822
  %cmp = icmp eq i64 %1, 16, !dbg !2111
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2111

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !2111

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i32 62, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__._Z10convertKeyPKcm, i64 0, i64 0)) #15, !dbg !2111
  unreachable, !dbg !2111

2:                                                ; No predecessors!
  br label %cond.end, !dbg !2111

cond.end:                                         ; preds = %2, %cond.true
  %3 = bitcast [16 x i8]* %key_buf to i8*, !dbg !2112
  %4 = load i8*, i8** %key.addr, align 8, !dbg !2113, !tbaa !1779
  %5 = bitcast i64* %nkey.addr to i8*, !dbg !2114
  %6 = load i64, i64* %nkey.addr, align 8, !dbg !2114, !tbaa !1822
  call void @cpavise_memcpy(i8* %3, i8* %4, i64 %6, i64 94796769434192), !dbg !2112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 1 %4, i64 %6, i1 false), !dbg !2112
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %key_buf, i64 0, i64 0, !dbg !2115
  %call = call i64 @atol(i8* %arraydecay) #16, !dbg !2116
  %7 = bitcast [16 x i8]* %key_buf to i8*, !dbg !2117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %7) #3, !dbg !2117
  ret i64 %call, !dbg !2118
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8* %0, i8* %1, i32 %2, i8* %3) #8

; Function Attrs: inlinehint nounwind readonly uwtable
define available_externally dso_local i64 @atol(i8* nonnull %__nptr) #9 !dbg !787 {
entry:
  %__nptr.addr = alloca i8*, align 8
  store i8* %__nptr, i8** %__nptr.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__nptr.addr, metadata !791, metadata !DIExpression()), !dbg !2119
  %0 = load i8*, i8** %__nptr.addr, align 8, !dbg !2120, !tbaa !1779
  %call = call i64 @strtol(i8* %0, i8** null, i32 10) #3, !dbg !2121
  ret i64 %call, !dbg !2122
}

; Function Attrs: uwtable
define dso_local %struct._stritem* @_Z10assoc_findm(i64 %key) #0 !dbg !2123 {
entry:
  %retval = alloca %struct._stritem*, align 8
  %key.addr = alloca i64, align 8
  %found_item = alloca %struct._stritem**, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i64 %key, i64* %key.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %key.addr, metadata !2129, metadata !DIExpression()), !dbg !2132
  %0 = bitcast %struct._stritem*** %found_item to i8*, !dbg !2133
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #3, !dbg !2133
  call void @llvm.dbg.declare(metadata %struct._stritem*** %found_item, metadata !2130, metadata !DIExpression()), !dbg !2134
  %call = call %class.PMDKMap* @_ZNK4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEptEv(%"class.pmem::obj::persistent_ptr"* @_ZL17primary_hashtable) #3, !dbg !2135
  %1 = load %struct.pmemobjpool*, %struct.pmemobjpool** @_ZL9curr_pool, align 8, !dbg !2136, !tbaa !1779
  %2 = load i64, i64* %key.addr, align 8, !dbg !2137, !tbaa !1822
  %call1 = call %struct._stritem** @_ZN7PMDKMapImP8_stritemE4findEP11pmemobjpoolm(%class.PMDKMap* %call, %struct.pmemobjpool* %1, i64 %2), !dbg !2138
  store %struct._stritem** %call1, %struct._stritem*** %found_item, align 8, !dbg !2134, !tbaa !1779
  %3 = load %struct._stritem**, %struct._stritem*** %found_item, align 8, !dbg !2139, !tbaa !1779
  %cmp = icmp eq %struct._stritem** %3, null, !dbg !2141
  br i1 %cmp, label %if.then, label %if.end, !dbg !2142

if.then:                                          ; preds = %entry
  store %struct._stritem* null, %struct._stritem** %retval, align 8, !dbg !2143
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2143

if.end:                                           ; preds = %entry
  %4 = load %struct._stritem**, %struct._stritem*** %found_item, align 8, !dbg !2144, !tbaa !1779
  %5 = load %struct._stritem*, %struct._stritem** %4, align 8, !dbg !2145, !tbaa !1779
  %6 = bitcast %struct._stritem** %retval to i8*, !dbg !2146
  %7 = call i32 @cpavise_store_data_fileline(i8* %6, i64 8, i32 0, i32 72), !dbg !2146
  store %struct._stritem* %5, %struct._stritem** %retval, align 8, !dbg !2146
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2146

cleanup:                                          ; preds = %if.end, %if.then
  %8 = bitcast %struct._stritem*** %found_item to i8*, !dbg !2147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #3, !dbg !2147
  %9 = load %struct._stritem*, %struct._stritem** %retval, align 8, !dbg !2147
  ret %struct._stritem* %9, !dbg !2147
}

; Function Attrs: uwtable
define linkonce_odr dso_local %struct._stritem** @_ZN7PMDKMapImP8_stritemE4findEP11pmemobjpoolm(%class.PMDKMap* %this, %struct.pmemobjpool* %pop, i64 %key) #0 comdat align 2 !dbg !2148 {
entry:
  %retval = alloca %struct._stritem**, align 8
  %this.addr = alloca %class.PMDKMap*, align 8
  %pop.addr = alloca %struct.pmemobjpool*, align 8
  %key.addr = alloca i64, align 8
  %value_ptr = alloca %struct.pmemoid, align 8
  %agg.tmp = alloca %union.hashmap_tx_toid, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %agg.tmp2 = alloca %struct.pmemoid, align 8
  store %class.PMDKMap* %this, %class.PMDKMap** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %class.PMDKMap** %this.addr, metadata !2150, metadata !DIExpression()), !dbg !2154
  store %struct.pmemobjpool* %pop, %struct.pmemobjpool** %pop.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %struct.pmemobjpool** %pop.addr, metadata !2151, metadata !DIExpression()), !dbg !2155
  store i64 %key, i64* %key.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %key.addr, metadata !2152, metadata !DIExpression()), !dbg !2156
  %this1 = load %class.PMDKMap*, %class.PMDKMap** %this.addr, align 8
  %0 = bitcast %struct.pmemoid* %value_ptr to i8*, !dbg !2157
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #3, !dbg !2157
  call void @llvm.dbg.declare(metadata %struct.pmemoid* %value_ptr, metadata !2153, metadata !DIExpression()), !dbg !2158
  %1 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop.addr, align 8, !dbg !2159, !tbaa !1779
  %map_ = getelementptr inbounds %class.PMDKMap, %class.PMDKMap* %this1, i32 0, i32 0, !dbg !2160
  %2 = bitcast %union.hashmap_tx_toid* %agg.tmp to i8*, !dbg !2160
  %3 = bitcast %union.hashmap_tx_toid* %map_ to i8*, !dbg !2160
  call void @cpavise_memcpy(i8* %2, i8* %3, i64 16, i64 94796771630832), !dbg !2160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false), !dbg !2160, !tbaa.struct !2161
  %4 = bitcast i64* %key.addr to i8*, !dbg !2162
  %5 = load i64, i64* %key.addr, align 8, !dbg !2162, !tbaa !1822
  %6 = bitcast %union.hashmap_tx_toid* %agg.tmp to { i64, i64 }*, !dbg !2163
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !2163
  %8 = bitcast i64* %7 to i8*, !dbg !2163
  %9 = load i64, i64* %7, align 8, !dbg !2163
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !2163
  %11 = bitcast i64* %10 to i8*, !dbg !2163
  %12 = load i64, i64* %10, align 8, !dbg !2163
  %call = call { i64, i64 } @hm_tx_get(%struct.pmemobjpool* %1, i64 %9, i64 %12, i64 %5), !dbg !2163
  %13 = bitcast %struct.pmemoid* %value_ptr to { i64, i64 }*, !dbg !2163
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !2163
  %15 = extractvalue { i64, i64 } %call, 0, !dbg !2163
  %16 = bitcast i64* %14 to i8*, !dbg !2163
  %17 = call i32 @cpavise_store_data_fileline(i8* %16, i64 8, i32 0, i32 47), !dbg !2163
  store i64 %15, i64* %14, align 8, !dbg !2163
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !2163
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !2163
  %20 = bitcast i64* %18 to i8*, !dbg !2163
  %21 = call i32 @cpavise_store_data_fileline(i8* %20, i64 8, i32 0, i32 47), !dbg !2163
  store i64 %19, i64* %18, align 8, !dbg !2163
  %off = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %value_ptr, i32 0, i32 1, !dbg !2164
  %22 = load i64, i64* %off, align 8, !dbg !2164, !tbaa !1985
  %cmp = icmp eq i64 %22, 0, !dbg !2164
  br i1 %cmp, label %if.then, label %if.end, !dbg !2166

if.then:                                          ; preds = %entry
  store %struct._stritem** null, %struct._stritem*** %retval, align 8, !dbg !2167
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2167

if.end:                                           ; preds = %entry
  %23 = bitcast %struct.pmemoid* %agg.tmp2 to i8*, !dbg !2169
  %24 = bitcast %struct.pmemoid* %value_ptr to i8*, !dbg !2169
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !2169, !tbaa.struct !1821
  %25 = bitcast %struct.pmemoid* %agg.tmp2 to { i64, i64 }*, !dbg !2170
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i32 0, i32 0, !dbg !2170
  %27 = load i64, i64* %26, align 8, !dbg !2170
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i32 0, i32 1, !dbg !2170
  %29 = load i64, i64* %28, align 8, !dbg !2170
  %call3 = call i8* @_ZL21pmemobj_direct_inline7pmemoid(i64 %27, i64 %29), !dbg !2170
  %30 = bitcast i8* %call3 to %struct._stritem**, !dbg !2171
  store %struct._stritem** %30, %struct._stritem*** %retval, align 8, !dbg !2172
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2172

cleanup:                                          ; preds = %if.end, %if.then
  %31 = bitcast %struct.pmemoid* %value_ptr to i8*, !dbg !2173
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %31) #3, !dbg !2173
  %32 = load %struct._stritem**, %struct._stritem*** %retval, align 8, !dbg !2173
  ret %struct._stritem** %32, !dbg !2173
}

; Function Attrs: uwtable
define dso_local %struct._stritem* @assoc_find(i8* %key, i64 %nkey) #0 !dbg !2174 {
entry:
  %key.addr = alloca i8*, align 8
  %nkey.addr = alloca i64, align 8
  store i8* %key, i8** %key.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !2178, metadata !DIExpression()), !dbg !2180
  store i64 %nkey, i64* %nkey.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %nkey.addr, metadata !2179, metadata !DIExpression()), !dbg !2181
  %0 = load i8*, i8** %key.addr, align 8, !dbg !2182, !tbaa !1779
  %1 = load i64, i64* %nkey.addr, align 8, !dbg !2183, !tbaa !1822
  %call = call i64 @_Z10convertKeyPKcm(i8* %0, i64 %1), !dbg !2184
  %call1 = call %struct._stritem* @_Z10assoc_findm(i64 %call), !dbg !2185
  ret %struct._stritem* %call1, !dbg !2186
}

; Function Attrs: uwtable
define dso_local i32 @assoc_insert(%struct._stritem* %it) #0 !dbg !2187 {
entry:
  %it.addr = alloca %struct._stritem*, align 8
  %key = alloca i64, align 8
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !2191, metadata !DIExpression()), !dbg !2193
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !2194, !tbaa !1779
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 10, !dbg !2194
  %1 = load i8, i8* %nkey, align 1, !dbg !2194, !tbaa !2195
  %conv = zext i8 %1 to i32, !dbg !2194
  %cmp = icmp eq i32 %conv, 16, !dbg !2194
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2194

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !2194

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.assoc_insert, i64 0, i64 0)) #15, !dbg !2194
  unreachable, !dbg !2194

2:                                                ; No predecessors!
  br label %cond.end, !dbg !2194

cond.end:                                         ; preds = %2, %cond.true
  %3 = bitcast i64* %key to i8*, !dbg !2198
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #3, !dbg !2198
  call void @llvm.dbg.declare(metadata i64* %key, metadata !2192, metadata !DIExpression()), !dbg !2199
  %4 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !2200, !tbaa !1779
  %end = getelementptr inbounds %struct._stritem, %struct._stritem* %4, i32 0, i32 12, !dbg !2200
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %end, i64 0, i64 0, !dbg !2200
  %5 = bitcast i8** %arrayidx to i8*, !dbg !2200
  %6 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !2201, !tbaa !1779
  %nkey1 = getelementptr inbounds %struct._stritem, %struct._stritem* %6, i32 0, i32 10, !dbg !2202
  %7 = load i8, i8* %nkey1, align 1, !dbg !2202, !tbaa !2195
  %conv2 = zext i8 %7 to i64, !dbg !2201
  %call = call i64 @_Z10convertKeyPKcm(i8* %5, i64 %conv2), !dbg !2203
  store i64 %call, i64* %key, align 8, !dbg !2199, !tbaa !1822
  %8 = load i64, i64* %key, align 8, !dbg !2204, !tbaa !1822
  %call3 = call %struct._stritem* @_Z10assoc_findm(i64 %8), !dbg !2204
  %cmp4 = icmp eq %struct._stritem* %call3, null, !dbg !2204
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !2204

cond.true5:                                       ; preds = %cond.end
  br label %cond.end7, !dbg !2204

cond.false6:                                      ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i32 83, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.assoc_insert, i64 0, i64 0)) #15, !dbg !2204
  unreachable, !dbg !2204

9:                                                ; No predecessors!
  br label %cond.end7, !dbg !2204

cond.end7:                                        ; preds = %9, %cond.true5
  %call8 = call %class.PMDKMap* @_ZNK4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEptEv(%"class.pmem::obj::persistent_ptr"* @_ZL17primary_hashtable) #3, !dbg !2205
  %10 = load %struct.pmemobjpool*, %struct.pmemobjpool** @_ZL9curr_pool, align 8, !dbg !2206, !tbaa !1779
  %11 = load i64, i64* %key, align 8, !dbg !2207, !tbaa !1822
  %12 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !2208, !tbaa !1779
  call void @_ZN7PMDKMapImP8_stritemE6insertEP11pmemobjpoolmS1_(%class.PMDKMap* %call8, %struct.pmemobjpool* %10, i64 %11, %struct._stritem* %12), !dbg !2209
  %13 = bitcast i64* %key to i8*, !dbg !2210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #3, !dbg !2210
  ret i32 1, !dbg !2211
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN7PMDKMapImP8_stritemE6insertEP11pmemobjpoolmS1_(%class.PMDKMap* %this, %struct.pmemobjpool* %pop, i64 %key, %struct._stritem* %value) #0 comdat align 2 !dbg !2212 {
entry:
  %this.addr = alloca %class.PMDKMap*, align 8
  %pop.addr = alloca %struct.pmemobjpool*, align 8
  %key.addr = alloca i64, align 8
  %value.addr = alloca %struct._stritem*, align 8
  %value_ptr = alloca %struct.pmemoid, align 8
  %agg.tmp = alloca %struct.pmemoid, align 8
  %agg.tmp3 = alloca %union.hashmap_tx_toid, align 8
  %agg.tmp4 = alloca %struct.pmemoid, align 8
  store %class.PMDKMap* %this, %class.PMDKMap** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %class.PMDKMap** %this.addr, metadata !2214, metadata !DIExpression()), !dbg !2219
  store %struct.pmemobjpool* %pop, %struct.pmemobjpool** %pop.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %struct.pmemobjpool** %pop.addr, metadata !2215, metadata !DIExpression()), !dbg !2220
  store i64 %key, i64* %key.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %key.addr, metadata !2216, metadata !DIExpression()), !dbg !2221
  store %struct._stritem* %value, %struct._stritem** %value.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %struct._stritem** %value.addr, metadata !2217, metadata !DIExpression()), !dbg !2222
  %this1 = load %class.PMDKMap*, %class.PMDKMap** %this.addr, align 8
  %0 = bitcast %struct.pmemoid* %value_ptr to i8*, !dbg !2223
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #3, !dbg !2223
  call void @llvm.dbg.declare(metadata %struct.pmemoid* %value_ptr, metadata !2218, metadata !DIExpression()), !dbg !2224
  %1 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop.addr, align 8, !dbg !2225, !tbaa !1779
  %call = call i32 @pmemobj_zalloc(%struct.pmemobjpool* %1, %struct.pmemoid* %value_ptr, i64 8, i64 1), !dbg !2226
  %2 = load %struct._stritem*, %struct._stritem** %value.addr, align 8, !dbg !2227, !tbaa !1779
  %3 = bitcast %struct.pmemoid* %agg.tmp to i8*, !dbg !2228
  %4 = bitcast %struct.pmemoid* %value_ptr to i8*, !dbg !2228
  call void @cpavise_memcpy(i8* %3, i8* %4, i64 16, i64 94796771021088), !dbg !2228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false), !dbg !2228, !tbaa.struct !1821
  %5 = bitcast %struct.pmemoid* %agg.tmp to { i64, i64 }*, !dbg !2229
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !2229
  %7 = bitcast i64* %6 to i8*, !dbg !2229
  %8 = load i64, i64* %6, align 8, !dbg !2229
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !2229
  %10 = bitcast i64* %9 to i8*, !dbg !2229
  %11 = load i64, i64* %9, align 8, !dbg !2229
  %call2 = call i8* @_ZL21pmemobj_direct_inline7pmemoid(i64 %8, i64 %11), !dbg !2229
  %12 = bitcast i8* %call2 to %struct._stritem**, !dbg !2230
  %13 = bitcast %struct._stritem** %12 to i8*, !dbg !2231
  %14 = call i32 @cpavise_store_data_fileline(i8* %13, i64 8, i32 0, i32 42), !dbg !2231
  store %struct._stritem* %2, %struct._stritem** %12, align 8, !dbg !2231, !tbaa !1779
  %15 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop.addr, align 8, !dbg !2232, !tbaa !1779
  %map_ = getelementptr inbounds %class.PMDKMap, %class.PMDKMap* %this1, i32 0, i32 0, !dbg !2233
  %16 = bitcast %union.hashmap_tx_toid* %agg.tmp3 to i8*, !dbg !2233
  %17 = bitcast %union.hashmap_tx_toid* %map_ to i8*, !dbg !2233
  call void @cpavise_memcpy(i8* %16, i8* %17, i64 16, i64 94796771025280), !dbg !2233
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false), !dbg !2233, !tbaa.struct !2161
  %18 = bitcast i64* %key.addr to i8*, !dbg !2234
  %19 = load i64, i64* %key.addr, align 8, !dbg !2234, !tbaa !1822
  %20 = bitcast %struct.pmemoid* %agg.tmp4 to i8*, !dbg !2235
  %21 = bitcast %struct.pmemoid* %value_ptr to i8*, !dbg !2235
  call void @cpavise_memcpy(i8* %20, i8* %21, i64 16, i64 94796771025680), !dbg !2235
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !2235, !tbaa.struct !1821
  %22 = bitcast %union.hashmap_tx_toid* %agg.tmp3 to { i64, i64 }*, !dbg !2236
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 0, !dbg !2236
  %24 = bitcast i64* %23 to i8*, !dbg !2236
  %25 = load i64, i64* %23, align 8, !dbg !2236
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 1, !dbg !2236
  %27 = bitcast i64* %26 to i8*, !dbg !2236
  %28 = load i64, i64* %26, align 8, !dbg !2236
  %29 = bitcast %struct.pmemoid* %agg.tmp4 to { i64, i64 }*, !dbg !2236
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !2236
  %31 = bitcast i64* %30 to i8*, !dbg !2236
  %32 = load i64, i64* %30, align 8, !dbg !2236
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !2236
  %34 = bitcast i64* %33 to i8*, !dbg !2236
  %35 = load i64, i64* %33, align 8, !dbg !2236
  %call5 = call i32 @hm_tx_insert(%struct.pmemobjpool* %15, i64 %25, i64 %28, i64 %19, i64 %32, i64 %35), !dbg !2236
  %36 = bitcast %struct.pmemoid* %value_ptr to i8*, !dbg !2237
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %36) #3, !dbg !2237
  ret void, !dbg !2237
}

; Function Attrs: uwtable
define dso_local void @assoc_delete(i8* %key, i64 %nkey) #0 !dbg !2238 {
entry:
  %key.addr = alloca i8*, align 8
  %nkey.addr = alloca i64, align 8
  %uint_key = alloca i64, align 8
  store i8* %key, i8** %key.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !2242, metadata !DIExpression()), !dbg !2245
  store i64 %nkey, i64* %nkey.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %nkey.addr, metadata !2243, metadata !DIExpression()), !dbg !2246
  %0 = load i64, i64* %nkey.addr, align 8, !dbg !2247, !tbaa !1822
  %cmp = icmp eq i64 %0, 16, !dbg !2247
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2247

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !2247

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i32 91, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__PRETTY_FUNCTION__.assoc_delete, i64 0, i64 0)) #15, !dbg !2247
  unreachable, !dbg !2247

1:                                                ; No predecessors!
  br label %cond.end, !dbg !2247

cond.end:                                         ; preds = %1, %cond.true
  %2 = bitcast i64* %uint_key to i8*, !dbg !2248
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #3, !dbg !2248
  call void @llvm.dbg.declare(metadata i64* %uint_key, metadata !2244, metadata !DIExpression()), !dbg !2249
  %3 = load i8*, i8** %key.addr, align 8, !dbg !2250, !tbaa !1779
  %4 = load i64, i64* %nkey.addr, align 8, !dbg !2251, !tbaa !1822
  %call = call i64 @_Z10convertKeyPKcm(i8* %3, i64 %4), !dbg !2252
  store i64 %call, i64* %uint_key, align 8, !dbg !2249, !tbaa !1822
  %call1 = call %class.PMDKMap* @_ZNK4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEptEv(%"class.pmem::obj::persistent_ptr"* @_ZL17primary_hashtable) #3, !dbg !2253
  %5 = load %struct.pmemobjpool*, %struct.pmemobjpool** @_ZL9curr_pool, align 8, !dbg !2254, !tbaa !1779
  %6 = load i64, i64* %uint_key, align 8, !dbg !2255, !tbaa !1822
  %call2 = call zeroext i1 @_ZN7PMDKMapImP8_stritemE5eraseEP11pmemobjpoolm(%class.PMDKMap* %call1, %struct.pmemobjpool* %5, i64 %6), !dbg !2256
  %7 = bitcast i64* %uint_key to i8*, !dbg !2257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #3, !dbg !2257
  ret void, !dbg !2257
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN7PMDKMapImP8_stritemE5eraseEP11pmemobjpoolm(%class.PMDKMap* %this, %struct.pmemobjpool* %pop, i64 %key) #0 comdat align 2 !dbg !2258 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.PMDKMap*, align 8
  %pop.addr = alloca %struct.pmemobjpool*, align 8
  %key.addr = alloca i64, align 8
  %result = alloca %struct.pmemoid, align 8
  %agg.tmp = alloca %union.hashmap_tx_toid, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store %class.PMDKMap* %this, %class.PMDKMap** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %class.PMDKMap** %this.addr, metadata !2260, metadata !DIExpression()), !dbg !2264
  store %struct.pmemobjpool* %pop, %struct.pmemobjpool** %pop.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %struct.pmemobjpool** %pop.addr, metadata !2261, metadata !DIExpression()), !dbg !2265
  store i64 %key, i64* %key.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %key.addr, metadata !2262, metadata !DIExpression()), !dbg !2266
  %this1 = load %class.PMDKMap*, %class.PMDKMap** %this.addr, align 8
  %0 = bitcast %struct.pmemoid* %result to i8*, !dbg !2267
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #3, !dbg !2267
  call void @llvm.dbg.declare(metadata %struct.pmemoid* %result, metadata !2263, metadata !DIExpression()), !dbg !2268
  %1 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop.addr, align 8, !dbg !2269, !tbaa !1779
  %map_ = getelementptr inbounds %class.PMDKMap, %class.PMDKMap* %this1, i32 0, i32 0, !dbg !2270
  %2 = bitcast %union.hashmap_tx_toid* %agg.tmp to i8*, !dbg !2270
  %3 = bitcast %union.hashmap_tx_toid* %map_ to i8*, !dbg !2270
  call void @cpavise_memcpy(i8* %2, i8* %3, i64 16, i64 94796770977488), !dbg !2270
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false), !dbg !2270, !tbaa.struct !2161
  %4 = bitcast i64* %key.addr to i8*, !dbg !2271
  %5 = load i64, i64* %key.addr, align 8, !dbg !2271, !tbaa !1822
  %6 = bitcast %union.hashmap_tx_toid* %agg.tmp to { i64, i64 }*, !dbg !2272
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 0, !dbg !2272
  %8 = bitcast i64* %7 to i8*, !dbg !2272
  %9 = load i64, i64* %7, align 8, !dbg !2272
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i32 0, i32 1, !dbg !2272
  %11 = bitcast i64* %10 to i8*, !dbg !2272
  %12 = load i64, i64* %10, align 8, !dbg !2272
  %call = call { i64, i64 } @hm_tx_remove(%struct.pmemobjpool* %1, i64 %9, i64 %12, i64 %5), !dbg !2272
  %13 = bitcast %struct.pmemoid* %result to { i64, i64 }*, !dbg !2272
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 0, !dbg !2272
  %15 = extractvalue { i64, i64 } %call, 0, !dbg !2272
  %16 = bitcast i64* %14 to i8*, !dbg !2272
  %17 = call i32 @cpavise_store_data_fileline(i8* %16, i64 8, i32 0, i32 55), !dbg !2272
  store i64 %15, i64* %14, align 8, !dbg !2272
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i32 0, i32 1, !dbg !2272
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !2272
  %20 = bitcast i64* %18 to i8*, !dbg !2272
  %21 = call i32 @cpavise_store_data_fileline(i8* %20, i64 8, i32 0, i32 55), !dbg !2272
  store i64 %19, i64* %18, align 8, !dbg !2272
  %off = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %result, i32 0, i32 1, !dbg !2273
  %22 = load i64, i64* %off, align 8, !dbg !2273, !tbaa !1985
  %cmp = icmp eq i64 %22, 0, !dbg !2273
  br i1 %cmp, label %if.then, label %if.end, !dbg !2275

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !2276
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2276

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !2277
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2277

cleanup:                                          ; preds = %if.end, %if.then
  %23 = bitcast %struct.pmemoid* %result to i8*, !dbg !2278
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %23) #3, !dbg !2278
  %24 = load i1, i1* %retval, align 1, !dbg !2278
  ret i1 %24, !dbg !2278
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEC2Ev(%"class.pmem::detail::persistent_ptr_base"* %this) unnamed_addr #0 comdat align 2 !dbg !2279 {
entry:
  %this.addr = alloca %"class.pmem::detail::persistent_ptr_base"*, align 8
  store %"class.pmem::detail::persistent_ptr_base"* %this, %"class.pmem::detail::persistent_ptr_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::detail::persistent_ptr_base"** %this.addr, metadata !2281, metadata !DIExpression()), !dbg !2283
  %this1 = load %"class.pmem::detail::persistent_ptr_base"*, %"class.pmem::detail::persistent_ptr_base"** %this.addr, align 8
  %oid = getelementptr inbounds %"class.pmem::detail::persistent_ptr_base", %"class.pmem::detail::persistent_ptr_base"* %this1, i32 0, i32 0, !dbg !2284
  %0 = bitcast %struct.pmemoid* %oid to i8*, !dbg !2284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.pmemoid* @_ZL8OID_NULL to i8*), i64 16, i1 false), !dbg !2284, !tbaa.struct !1821
  call void @_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE11verify_typeEv(%"class.pmem::detail::persistent_ptr_base"* %this1), !dbg !2285
  ret void, !dbg !2287
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE11verify_typeEv(%"class.pmem::detail::persistent_ptr_base"* %this) #6 comdat align 2 !dbg !2288 {
entry:
  %this.addr = alloca %"class.pmem::detail::persistent_ptr_base"*, align 8
  store %"class.pmem::detail::persistent_ptr_base"* %this, %"class.pmem::detail::persistent_ptr_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::detail::persistent_ptr_base"** %this.addr, metadata !2290, metadata !DIExpression()), !dbg !2291
  %this1 = load %"class.pmem::detail::persistent_ptr_base"*, %"class.pmem::detail::persistent_ptr_base"** %this.addr, align 8
  ret void, !dbg !2292
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj9pool_baseC2Ev(%"class.pmem::obj::pool_base"* %this) unnamed_addr #6 comdat align 2 !dbg !2293 {
entry:
  %this.addr = alloca %"class.pmem::obj::pool_base"*, align 8
  store %"class.pmem::obj::pool_base"* %this, %"class.pmem::obj::pool_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool_base"** %this.addr, metadata !2295, metadata !DIExpression()), !dbg !2296
  %this1 = load %"class.pmem::obj::pool_base"*, %"class.pmem::obj::pool_base"** %this.addr, align 8
  %0 = bitcast %"class.pmem::obj::pool_base"* %this1 to i32 (...)***, !dbg !2297
  %1 = bitcast i32 (...)*** %0 to i8*, !dbg !2297
  %2 = call i32 @cpavise_store_data_fileline(i8* %1, i64 8, i32 0, i32 74), !dbg !2297
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4pmem3obj9pool_baseE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8, !dbg !2297, !tbaa !1869
  %pop = getelementptr inbounds %"class.pmem::obj::pool_base", %"class.pmem::obj::pool_base"* %this1, i32 0, i32 1, !dbg !2298
  %3 = bitcast %struct.pmemobjpool** %pop to i8*, !dbg !2298
  %4 = call i32 @cpavise_store_data_fileline(i8* %3, i64 8, i32 0, i32 73), !dbg !2298
  store %struct.pmemobjpool* null, %struct.pmemobjpool** %pop, align 8, !dbg !2298, !tbaa !1948
  ret void, !dbg !2299
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEED0Ev(%"class.pmem::obj::pool"* %this) unnamed_addr #6 comdat align 2 !dbg !2300 {
entry:
  %this.addr = alloca %"class.pmem::obj::pool"*, align 8
  store %"class.pmem::obj::pool"* %this, %"class.pmem::obj::pool"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool"** %this.addr, metadata !2302, metadata !DIExpression()), !dbg !2303
  %this1 = load %"class.pmem::obj::pool"*, %"class.pmem::obj::pool"** %this.addr, align 8
  call void bitcast (void (%"class.pmem::obj::pool_base"*)* @_ZN4pmem3obj9pool_baseD2Ev to void (%"class.pmem::obj::pool"*)*)(%"class.pmem::obj::pool"* %this1) #3, !dbg !2304
  %0 = bitcast %"class.pmem::obj::pool"* %this1 to i8*, !dbg !2304
  call void @_ZdlPv(i8* %0) #17, !dbg !2304
  ret void, !dbg !2304
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj9pool_baseD2Ev(%"class.pmem::obj::pool_base"* %this) unnamed_addr #6 comdat align 2 !dbg !2305 {
entry:
  %this.addr = alloca %"class.pmem::obj::pool_base"*, align 8
  store %"class.pmem::obj::pool_base"* %this, %"class.pmem::obj::pool_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool_base"** %this.addr, metadata !2307, metadata !DIExpression()), !dbg !2308
  %this1 = load %"class.pmem::obj::pool_base"*, %"class.pmem::obj::pool_base"** %this.addr, align 8
  ret void, !dbg !2309
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj9pool_baseD0Ev(%"class.pmem::obj::pool_base"* %this) unnamed_addr #6 comdat align 2 !dbg !2310 {
entry:
  %this.addr = alloca %"class.pmem::obj::pool_base"*, align 8
  store %"class.pmem::obj::pool_base"* %this, %"class.pmem::obj::pool_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool_base"** %this.addr, metadata !2312, metadata !DIExpression()), !dbg !2313
  %this1 = load %"class.pmem::obj::pool_base"*, %"class.pmem::obj::pool_base"** %this.addr, align 8
  call void @_ZN4pmem3obj9pool_baseD2Ev(%"class.pmem::obj::pool_base"* %this1) #3, !dbg !2314
  %0 = bitcast %"class.pmem::obj::pool_base"* %this1 to i8*, !dbg !2314
  call void @_ZdlPv(i8* %0) #17, !dbg !2314
  ret void, !dbg !2314
}

; Function Attrs: nobuiltin nounwind
declare !dbg !113 dso_local void @_ZdlPv(i8* %0) #10

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"class.pmem::obj::pool_base"* @_ZN4pmem3obj9pool_baseaSEOS1_(%"class.pmem::obj::pool_base"* %this, %"class.pmem::obj::pool_base"* nonnull align 8 dereferenceable(16) %0) #6 comdat align 2 !dbg !2315 {
entry:
  %this.addr = alloca %"class.pmem::obj::pool_base"*, align 8
  %.addr = alloca %"class.pmem::obj::pool_base"*, align 8
  store %"class.pmem::obj::pool_base"* %this, %"class.pmem::obj::pool_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool_base"** %this.addr, metadata !2317, metadata !DIExpression()), !dbg !2319
  store %"class.pmem::obj::pool_base"* %0, %"class.pmem::obj::pool_base"** %.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool_base"** %.addr, metadata !2318, metadata !DIExpression()), !dbg !2320
  %this1 = load %"class.pmem::obj::pool_base"*, %"class.pmem::obj::pool_base"** %this.addr, align 8
  %1 = load %"class.pmem::obj::pool_base"*, %"class.pmem::obj::pool_base"** %.addr, align 8, !dbg !2321, !tbaa !1779
  %pop = getelementptr inbounds %"class.pmem::obj::pool_base", %"class.pmem::obj::pool_base"* %1, i32 0, i32 1, !dbg !2321
  %2 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop, align 8, !dbg !2321, !tbaa !1948
  %pop2 = getelementptr inbounds %"class.pmem::obj::pool_base", %"class.pmem::obj::pool_base"* %this1, i32 0, i32 1, !dbg !2321
  store %struct.pmemobjpool* %2, %struct.pmemobjpool** %pop2, align 8, !dbg !2321, !tbaa !1948
  ret %"class.pmem::obj::pool_base"* %this1, !dbg !2321
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"class.pmem::detail::persistent_ptr_base"* @_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEaSEOS6_(%"class.pmem::detail::persistent_ptr_base"* %this, %"class.pmem::detail::persistent_ptr_base"* nonnull align 8 dereferenceable(16) %r) #0 comdat align 2 !dbg !2323 {
entry:
  %this.addr = alloca %"class.pmem::detail::persistent_ptr_base"*, align 8
  %r.addr = alloca %"class.pmem::detail::persistent_ptr_base"*, align 8
  store %"class.pmem::detail::persistent_ptr_base"* %this, %"class.pmem::detail::persistent_ptr_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::detail::persistent_ptr_base"** %this.addr, metadata !2325, metadata !DIExpression()), !dbg !2327
  store %"class.pmem::detail::persistent_ptr_base"* %r, %"class.pmem::detail::persistent_ptr_base"** %r.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::detail::persistent_ptr_base"** %r.addr, metadata !2326, metadata !DIExpression()), !dbg !2328
  %this1 = load %"class.pmem::detail::persistent_ptr_base"*, %"class.pmem::detail::persistent_ptr_base"** %this.addr, align 8
  call void @_ZN4pmem6detail21conditional_add_to_txINS0_19persistent_ptr_baseI7PMDKMapImP8_stritemEEEEEvPKT_m(%"class.pmem::detail::persistent_ptr_base"* %this1, i64 1), !dbg !2329
  %0 = load %"class.pmem::detail::persistent_ptr_base"*, %"class.pmem::detail::persistent_ptr_base"** %r.addr, align 8, !dbg !2330, !tbaa !1779
  %oid = getelementptr inbounds %"class.pmem::detail::persistent_ptr_base", %"class.pmem::detail::persistent_ptr_base"* %0, i32 0, i32 0, !dbg !2331
  %call = call nonnull align 8 dereferenceable(16) %struct.pmemoid* @_ZSt4moveIR7pmemoidEONSt16remove_referenceIT_E4typeEOS3_(%struct.pmemoid* nonnull align 8 dereferenceable(16) %oid) #3, !dbg !2332
  %oid2 = getelementptr inbounds %"class.pmem::detail::persistent_ptr_base", %"class.pmem::detail::persistent_ptr_base"* %this1, i32 0, i32 0, !dbg !2333
  %1 = bitcast %struct.pmemoid* %oid2 to i8*, !dbg !2334
  %2 = bitcast %struct.pmemoid* %call to i8*, !dbg !2334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !2334, !tbaa.struct !1821
  ret %"class.pmem::detail::persistent_ptr_base"* %this1, !dbg !2335
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN4pmem6detail21conditional_add_to_txINS0_19persistent_ptr_baseI7PMDKMapImP8_stritemEEEEEvPKT_m(%"class.pmem::detail::persistent_ptr_base"* %that, i64 %count) #7 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !2336 {
entry:
  %that.addr = alloca %"class.pmem::detail::persistent_ptr_base"*, align 8
  %count.addr = alloca i64, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.pmem::detail::persistent_ptr_base"* %that, %"class.pmem::detail::persistent_ptr_base"** %that.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::detail::persistent_ptr_base"** %that.addr, metadata !2341, metadata !DIExpression()), !dbg !2345
  store i64 %count, i64* %count.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !2342, metadata !DIExpression()), !dbg !2346
  %0 = load i64, i64* %count.addr, align 8, !dbg !2347, !tbaa !1822
  %cmp = icmp eq i64 %0, 0, !dbg !2349
  br i1 %cmp, label %if.then, label %if.end, !dbg !2350

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !2351

if.end:                                           ; preds = %entry
  %call = call i32 @pmemobj_tx_stage(), !dbg !2352
  %cmp1 = icmp ne i32 %call, 1, !dbg !2354
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2355

if.then2:                                         ; preds = %if.end
  br label %if.end10, !dbg !2356

if.end3:                                          ; preds = %if.end
  %1 = load %"class.pmem::detail::persistent_ptr_base"*, %"class.pmem::detail::persistent_ptr_base"** %that.addr, align 8, !dbg !2357, !tbaa !1779
  %2 = bitcast %"class.pmem::detail::persistent_ptr_base"* %1 to i8*, !dbg !2357
  %call4 = call %struct.pmemobjpool* @pmemobj_pool_by_ptr(i8* %2), !dbg !2359
  %tobool = icmp ne %struct.pmemobjpool* %call4, null, !dbg !2359
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !2360

if.then5:                                         ; preds = %if.end3
  br label %if.end10, !dbg !2361

if.end6:                                          ; preds = %if.end3
  %3 = load %"class.pmem::detail::persistent_ptr_base"*, %"class.pmem::detail::persistent_ptr_base"** %that.addr, align 8, !dbg !2362, !tbaa !1779
  %4 = bitcast %"class.pmem::detail::persistent_ptr_base"* %3 to i8*, !dbg !2362
  %5 = load i64, i64* %count.addr, align 8, !dbg !2364, !tbaa !1822
  %mul = mul i64 16, %5, !dbg !2365
  %call7 = call i32 @pmemobj_tx_add_range_direct(i8* %4, i64 %mul), !dbg !2366
  %tobool8 = icmp ne i32 %call7, 0, !dbg !2366
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !2367

if.then9:                                         ; preds = %if.end6
  %exception = call i8* @__cxa_allocate_exception(i64 16) #3, !dbg !2368
  %6 = bitcast i8* %exception to %"class.pmem::transaction_error"*, !dbg !2368
  invoke void @_ZN4pmem17transaction_errorCI2St13runtime_errorEPKc(%"class.pmem::transaction_error"* %6, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad, !dbg !2369

invoke.cont:                                      ; preds = %if.then9
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4pmem17transaction_errorE to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD2Ev to i8*)) #14, !dbg !2368
  unreachable, !dbg !2368

lpad:                                             ; preds = %if.then9
  %7 = landingpad { i8*, i32 }
          cleanup, !dbg !2370
  %8 = extractvalue { i8*, i32 } %7, 0, !dbg !2370
  store i8* %8, i8** %exn.slot, align 8, !dbg !2370
  %9 = extractvalue { i8*, i32 } %7, 1, !dbg !2370
  store i32 %9, i32* %ehselector.slot, align 4, !dbg !2370
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !2368
  br label %eh.resume, !dbg !2368

if.end10:                                         ; preds = %if.then, %if.then2, %if.then5, %if.end6
  ret void, !dbg !2371

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !2368
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !2368
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !2368
  %lpad.val11 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !2368
  resume { i8*, i32 } %lpad.val11, !dbg !2368
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %struct.pmemoid* @_ZSt4moveIR7pmemoidEONSt16remove_referenceIT_E4typeEOS3_(%struct.pmemoid* nonnull align 8 dereferenceable(16) %__t) #6 comdat !dbg !2372 {
entry:
  %__t.addr = alloca %struct.pmemoid*, align 8
  store %struct.pmemoid* %__t, %struct.pmemoid** %__t.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %struct.pmemoid** %__t.addr, metadata !2384, metadata !DIExpression()), !dbg !2385
  %0 = load %struct.pmemoid*, %struct.pmemoid** %__t.addr, align 8, !dbg !2386, !tbaa !1779
  ret %struct.pmemoid* %0, !dbg !2387
}

declare !dbg !74 dso_local i32 @pmemobj_tx_stage() #1

declare !dbg !78 dso_local %struct.pmemobjpool* @pmemobj_pool_by_ptr(i8* %0) #1

declare !dbg !86 dso_local i32 @pmemobj_tx_add_range_direct(i8* %0, i64 %1) #1

declare dso_local i8* @__cxa_allocate_exception(i64 %0)

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN4pmem17transaction_errorCI2St13runtime_errorEPKc(%"class.pmem::transaction_error"* %this, i8* %0) unnamed_addr #7 comdat align 2 !dbg !2388 {
entry:
  %this.addr = alloca %"class.pmem::transaction_error"*, align 8
  %.addr = alloca i8*, align 8
  store %"class.pmem::transaction_error"* %this, %"class.pmem::transaction_error"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::transaction_error"** %this.addr, metadata !2394, metadata !DIExpression()), !dbg !2397
  store i8* %0, i8** %.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %.addr, metadata !2396, metadata !DIExpression()), !dbg !2397
  %this1 = load %"class.pmem::transaction_error"*, %"class.pmem::transaction_error"** %this.addr, align 8
  %1 = bitcast %"class.pmem::transaction_error"* %this1 to %"class.std::runtime_error"*, !dbg !2398
  %2 = load i8*, i8** %.addr, align 8, !dbg !2398, !tbaa !1779
  call void @_ZNSt13runtime_errorC2EPKc(%"class.std::runtime_error"* %1, i8* %2), !dbg !2398
  %3 = bitcast %"class.pmem::transaction_error"* %this1 to i32 (...)***, !dbg !2398
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4pmem17transaction_errorE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %3, align 8, !dbg !2398, !tbaa !1869
  ret void, !dbg !2398
}

declare dso_local void @__cxa_free_exception(i8* %0)

declare dso_local void @__cxa_throw(i8* %0, i8* %1, i8* %2)

declare dso_local void @_ZNSt13runtime_errorC2EPKc(%"class.std::runtime_error"* %0, i8* %1) unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem17transaction_errorD0Ev(%"class.pmem::transaction_error"* %this) unnamed_addr #11 comdat align 2 !dbg !2399 {
entry:
  %this.addr = alloca %"class.pmem::transaction_error"*, align 8
  store %"class.pmem::transaction_error"* %this, %"class.pmem::transaction_error"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::transaction_error"** %this.addr, metadata !2404, metadata !DIExpression()), !dbg !2405
  %this1 = load %"class.pmem::transaction_error"*, %"class.pmem::transaction_error"** %this.addr, align 8
  call void bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD2Ev to void (%"class.pmem::transaction_error"*)*)(%"class.pmem::transaction_error"* %this1) #3, !dbg !2406
  %0 = bitcast %"class.pmem::transaction_error"* %this1 to i8*, !dbg !2406
  call void @_ZdlPv(i8* %0) #17, !dbg !2406
  ret void, !dbg !2406
}

; Function Attrs: nounwind
declare dso_local i8* @_ZNKSt13runtime_error4whatEv(%"class.std::runtime_error"* %0) unnamed_addr #2

declare !dbg !99 dso_local %struct.pmemobjpool* @pmemobj_pool_by_oid(i64 %0, i64 %1) #1

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8* %0, i8** %1, i32 %2) #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIcEC2Ev(%"class.__gnu_cxx::new_allocator"* %this) unnamed_addr #6 comdat align 2 !dbg !2407 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator"** %this.addr, metadata !2446, metadata !DIExpression()), !dbg !2448
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  ret void, !dbg !2449
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIcED2Ev(%"class.__gnu_cxx::new_allocator"* %this) unnamed_addr #6 comdat align 2 !dbg !2450 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator"** %this.addr, metadata !2452, metadata !DIExpression()), !dbg !2453
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  ret void, !dbg !2454
}

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(%"class.std::__cxx11::basic_string"* %this) #0 align 2 !dbg !2455 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2458, metadata !DIExpression()), !dbg !2459
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = call zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv(%"class.std::__cxx11::basic_string"* %this1), !dbg !2460
  br i1 %call, label %if.end, label %if.then, !dbg !2462

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 2, !dbg !2463
  %_M_allocated_capacity = bitcast %union.anon* %0 to i64*, !dbg !2463
  %1 = load i64, i64* %_M_allocated_capacity, align 8, !dbg !2463, !tbaa !2083
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm(%"class.std::__cxx11::basic_string"* %this1, i64 %1) #3, !dbg !2464
  br label %if.end, !dbg !2464

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2465
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSaIcED2Ev(%"class.std::allocator"* %this) unnamed_addr #6 align 2 !dbg !2466 {
entry:
  %this.addr = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %this, %"class.std::allocator"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::allocator"** %this.addr, metadata !2469, metadata !DIExpression()), !dbg !2470
  %this1 = load %"class.std::allocator"*, %"class.std::allocator"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator"* %this1 to %"class.__gnu_cxx::new_allocator"*, !dbg !2471
  call void @_ZN9__gnu_cxx13new_allocatorIcED2Ev(%"class.__gnu_cxx::new_allocator"* %0) #3, !dbg !2471
  ret void, !dbg !2473
}

declare dso_local void @__cxa_call_unexpected(i8* %0)

; Function Attrs: uwtable
define available_externally dso_local zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv(%"class.std::__cxx11::basic_string"* %this) #0 align 2 !dbg !2474 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2481, metadata !DIExpression()), !dbg !2483
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* %this1), !dbg !2484
  %call2 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* %this1), !dbg !2485
  %cmp = icmp eq i8* %call, %call2, !dbg !2486
  ret i1 %cmp, !dbg !2487
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm(%"class.std::__cxx11::basic_string"* %this, i64 %__size) #6 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !2488 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__size.addr = alloca i64, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2493, metadata !DIExpression()), !dbg !2495
  store i64 %__size, i64* %__size.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %__size.addr, metadata !2494, metadata !DIExpression()), !dbg !2496
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = invoke nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(%"class.std::__cxx11::basic_string"* %this1)
          to label %invoke.cont unwind label %lpad, !dbg !2497

invoke.cont:                                      ; preds = %entry
  %call3 = invoke i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* %this1)
          to label %invoke.cont2 unwind label %lpad, !dbg !2498

invoke.cont2:                                     ; preds = %invoke.cont
  %0 = load i64, i64* %__size.addr, align 8, !dbg !2499, !tbaa !1822
  %add = add i64 %0, 1, !dbg !2500
  invoke void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %call, i8* %call3, i64 %add)
          to label %invoke.cont4 unwind label %lpad, !dbg !2501

invoke.cont4:                                     ; preds = %invoke.cont2
  ret void, !dbg !2502

lpad:                                             ; preds = %invoke.cont2, %invoke.cont, %entry
  %1 = landingpad { i8*, i32 }
          filter [0 x i8*] zeroinitializer, !dbg !2502
  %2 = extractvalue { i8*, i32 } %1, 0, !dbg !2502
  store i8* %2, i8** %exn.slot, align 8, !dbg !2502
  %3 = extractvalue { i8*, i32 } %1, 1, !dbg !2502
  store i32 %3, i32* %ehselector.slot, align 4, !dbg !2502
  br label %filter.dispatch, !dbg !2502

filter.dispatch:                                  ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !2502
  call void @__cxa_call_unexpected(i8* %exn) #14, !dbg !2502
  unreachable, !dbg !2502
}

; Function Attrs: nounwind uwtable
define available_externally dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* %this) #6 align 2 !dbg !2503 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2510, metadata !DIExpression()), !dbg !2511
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0, !dbg !2512
  %_M_p = getelementptr inbounds %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider", %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"* %_M_dataplus, i32 0, i32 0, !dbg !2513
  %0 = load i8*, i8** %_M_p, align 8, !dbg !2513, !tbaa !2514
  ret i8* %0, !dbg !2517
}

; Function Attrs: nounwind uwtable
define available_externally dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* %this) #6 align 2 !dbg !2518 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2526, metadata !DIExpression()), !dbg !2527
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 2, !dbg !2528
  %_M_local_buf = bitcast %union.anon* %0 to [16 x i8]*, !dbg !2528
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %_M_local_buf, i64 0, i64 0, !dbg !2529
  %call = call i8* @_ZNSt14pointer_traitsIPKcE10pointer_toERS0_(i8* nonnull align 1 dereferenceable(1) %arraydecay) #3, !dbg !2530
  ret i8* %call, !dbg !2531
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i8* @_ZNSt14pointer_traitsIPKcE10pointer_toERS0_(i8* nonnull align 1 dereferenceable(1) %__r) #6 comdat align 2 !dbg !2532 {
entry:
  %__r.addr = alloca i8*, align 8
  store i8* %__r, i8** %__r.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__r.addr, metadata !2552, metadata !DIExpression()), !dbg !2553
  %0 = load i8*, i8** %__r.addr, align 8, !dbg !2554, !tbaa !1779
  %call = call i8* @_ZSt9addressofIKcEPT_RS1_(i8* nonnull align 1 dereferenceable(1) %0) #3, !dbg !2555
  ret i8* %call, !dbg !2556
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local i8* @_ZSt9addressofIKcEPT_RS1_(i8* nonnull align 1 dereferenceable(1) %__r) #11 comdat !dbg !2557 {
entry:
  %__r.addr = alloca i8*, align 8
  store i8* %__r, i8** %__r.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__r.addr, metadata !2561, metadata !DIExpression()), !dbg !2564
  %0 = load i8*, i8** %__r.addr, align 8, !dbg !2565, !tbaa !1779
  %call = call i8* @_ZSt11__addressofIKcEPT_RS1_(i8* nonnull align 1 dereferenceable(1) %0) #3, !dbg !2566
  ret i8* %call, !dbg !2567
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local i8* @_ZSt11__addressofIKcEPT_RS1_(i8* nonnull align 1 dereferenceable(1) %__r) #11 comdat !dbg !2568 {
entry:
  %__r.addr = alloca i8*, align 8
  store i8* %__r, i8** %__r.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__r.addr, metadata !2570, metadata !DIExpression()), !dbg !2571
  %0 = load i8*, i8** %__r.addr, align 8, !dbg !2572, !tbaa !1779
  ret i8* %0, !dbg !2573
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %__a, i8* %__p, i64 %__n) #0 comdat align 2 !dbg !2574 {
entry:
  %__a.addr = alloca %"class.std::allocator"*, align 8
  %__p.addr = alloca i8*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::allocator"** %__a.addr, metadata !2576, metadata !DIExpression()), !dbg !2579
  store i8* %__p, i8** %__p.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__p.addr, metadata !2577, metadata !DIExpression()), !dbg !2580
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !2578, metadata !DIExpression()), !dbg !2581
  %0 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8, !dbg !2582, !tbaa !1779
  %1 = bitcast %"class.std::allocator"* %0 to %"class.__gnu_cxx::new_allocator"*, !dbg !2582
  %2 = load i8*, i8** %__p.addr, align 8, !dbg !2583, !tbaa !1779
  %3 = load i64, i64* %__n.addr, align 8, !dbg !2584, !tbaa !1822
  call void @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm(%"class.__gnu_cxx::new_allocator"* %1, i8* %2, i64 %3), !dbg !2585
  ret void, !dbg !2586
}

; Function Attrs: nounwind uwtable
define available_externally dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(%"class.std::__cxx11::basic_string"* %this) #6 align 2 !dbg !2587 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2598, metadata !DIExpression()), !dbg !2599
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0, !dbg !2600
  %0 = bitcast %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"* %_M_dataplus to %"class.std::allocator"*, !dbg !2600
  ret %"class.std::allocator"* %0, !dbg !2601
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm(%"class.__gnu_cxx::new_allocator"* %this, i8* %__p, i64 %0) #6 comdat align 2 !dbg !2602 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %__p.addr = alloca i8*, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator"** %this.addr, metadata !2604, metadata !DIExpression()), !dbg !2607
  store i8* %__p, i8** %__p.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__p.addr, metadata !2605, metadata !DIExpression()), !dbg !2608
  store i64 %0, i64* %.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %.addr, metadata !2606, metadata !DIExpression()), !dbg !2609
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  %1 = load i8*, i8** %__p.addr, align 8, !dbg !2610, !tbaa !1779
  call void @_ZdlPv(i8* %1) #3, !dbg !2611
  ret void, !dbg !2612
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj9pool_base4openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_(%"class.pmem::obj::pool_base"* noalias sret align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %layout) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !2613 {
entry:
  %result.ptr = alloca i8*, align 8
  %path.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %layout.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %pop = alloca %struct.pmemobjpool*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.pmem::obj::pool_base"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %path, %"class.std::__cxx11::basic_string"** %path.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %path.addr, metadata !2615, metadata !DIExpression()), !dbg !2618
  store %"class.std::__cxx11::basic_string"* %layout, %"class.std::__cxx11::basic_string"** %layout.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %layout.addr, metadata !2616, metadata !DIExpression()), !dbg !2619
  %1 = bitcast %struct.pmemobjpool** %pop to i8*, !dbg !2620
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #3, !dbg !2620
  call void @llvm.dbg.declare(metadata %struct.pmemobjpool** %pop, metadata !2617, metadata !DIExpression()), !dbg !2621
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %path.addr, align 8, !dbg !2622, !tbaa !1779
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* %2) #3, !dbg !2623
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %layout.addr, align 8, !dbg !2624, !tbaa !1779
  %call1 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* %3) #3, !dbg !2625
  %call2 = call %struct.pmemobjpool* @pmemobj_open(i8* %call, i8* %call1), !dbg !2626
  store %struct.pmemobjpool* %call2, %struct.pmemobjpool** %pop, align 8, !dbg !2621, !tbaa !1779
  %4 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop, align 8, !dbg !2627, !tbaa !1779
  %cmp = icmp eq %struct.pmemobjpool* %4, null, !dbg !2629
  br i1 %cmp, label %if.then, label %if.end, !dbg !2630

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 16) #3, !dbg !2631
  %5 = bitcast i8* %exception to %"class.pmem::pool_error"*, !dbg !2631
  invoke void @_ZN4pmem10pool_errorCI2St13runtime_errorEPKc(%"class.pmem::pool_error"* %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad, !dbg !2632

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4pmem10pool_errorE to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD2Ev to i8*)) #14, !dbg !2631
  unreachable, !dbg !2631

lpad:                                             ; preds = %if.then
  %6 = landingpad { i8*, i32 }
          cleanup, !dbg !2633
  %7 = extractvalue { i8*, i32 } %6, 0, !dbg !2633
  store i8* %7, i8** %exn.slot, align 8, !dbg !2633
  %8 = extractvalue { i8*, i32 } %6, 1, !dbg !2633
  store i32 %8, i32* %ehselector.slot, align 4, !dbg !2633
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !2631
  %9 = bitcast %struct.pmemobjpool** %pop to i8*, !dbg !2634
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #3, !dbg !2634
  br label %eh.resume, !dbg !2634

if.end:                                           ; preds = %entry
  %10 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop, align 8, !dbg !2635, !tbaa !1779
  call void @_ZN4pmem3obj9pool_baseC2EP11pmemobjpool(%"class.pmem::obj::pool_base"* %agg.result, %struct.pmemobjpool* %10) #3, !dbg !2636
  %11 = bitcast %struct.pmemobjpool** %pop to i8*, !dbg !2634
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #3, !dbg !2634
  ret void, !dbg !2634

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !2634
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !2634
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !2634
  %lpad.val3 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !2634
  resume { i8*, i32 } %lpad.val3, !dbg !2634
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEC2EONS0_9pool_baseE(%"class.pmem::obj::pool"* %this, %"class.pmem::obj::pool_base"* nonnull align 8 dereferenceable(16) %pb) unnamed_addr #6 comdat align 2 !dbg !2637 {
entry:
  %this.addr = alloca %"class.pmem::obj::pool"*, align 8
  %pb.addr = alloca %"class.pmem::obj::pool_base"*, align 8
  store %"class.pmem::obj::pool"* %this, %"class.pmem::obj::pool"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool"** %this.addr, metadata !2639, metadata !DIExpression()), !dbg !2641
  store %"class.pmem::obj::pool_base"* %pb, %"class.pmem::obj::pool_base"** %pb.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool_base"** %pb.addr, metadata !2640, metadata !DIExpression()), !dbg !2642
  %this1 = load %"class.pmem::obj::pool"*, %"class.pmem::obj::pool"** %this.addr, align 8
  %0 = bitcast %"class.pmem::obj::pool"* %this1 to %"class.pmem::obj::pool_base"*, !dbg !2643
  %1 = load %"class.pmem::obj::pool_base"*, %"class.pmem::obj::pool_base"** %pb.addr, align 8, !dbg !2644, !tbaa !1779
  call void @_ZN4pmem3obj9pool_baseC2ERKS1_(%"class.pmem::obj::pool_base"* %0, %"class.pmem::obj::pool_base"* nonnull align 8 dereferenceable(16) %1) #3, !dbg !2645
  %2 = bitcast %"class.pmem::obj::pool"* %this1 to i32 (...)***, !dbg !2643
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4pmem3obj4poolI7PMDKMapImP8_stritemEEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %2, align 8, !dbg !2643, !tbaa !1869
  ret void, !dbg !2646
}

declare !dbg !598 dso_local %struct.pmemobjpool* @pmemobj_open(i8* %0, i8* %1) #1

; Function Attrs: nounwind uwtable
define available_externally dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* %this) #6 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !2647 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2652, metadata !DIExpression()), !dbg !2653
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = invoke i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* %this1)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !2654

invoke.cont:                                      ; preds = %entry
  ret i8* %call, !dbg !2655

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null, !dbg !2654
  %1 = extractvalue { i8*, i32 } %0, 0, !dbg !2654
  call void @__clang_call_terminate(i8* %1) #15, !dbg !2654
  unreachable, !dbg !2654
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN4pmem10pool_errorCI2St13runtime_errorEPKc(%"class.pmem::pool_error"* %this, i8* %0) unnamed_addr #7 comdat align 2 !dbg !2656 {
entry:
  %this.addr = alloca %"class.pmem::pool_error"*, align 8
  %.addr = alloca i8*, align 8
  store %"class.pmem::pool_error"* %this, %"class.pmem::pool_error"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::pool_error"** %this.addr, metadata !2662, metadata !DIExpression()), !dbg !2665
  store i8* %0, i8** %.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %.addr, metadata !2664, metadata !DIExpression()), !dbg !2665
  %this1 = load %"class.pmem::pool_error"*, %"class.pmem::pool_error"** %this.addr, align 8
  %1 = bitcast %"class.pmem::pool_error"* %this1 to %"class.std::runtime_error"*, !dbg !2666
  %2 = load i8*, i8** %.addr, align 8, !dbg !2666, !tbaa !1779
  call void @_ZNSt13runtime_errorC2EPKc(%"class.std::runtime_error"* %1, i8* %2), !dbg !2666
  %3 = bitcast %"class.pmem::pool_error"* %this1 to i32 (...)***, !dbg !2666
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4pmem10pool_errorE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %3, align 8, !dbg !2666, !tbaa !1869
  ret void, !dbg !2666
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt13runtime_errorD2Ev(%"class.std::runtime_error"* %0) unnamed_addr #2

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj9pool_baseC2EP11pmemobjpool(%"class.pmem::obj::pool_base"* %this, %struct.pmemobjpool* %cpop) unnamed_addr #6 comdat align 2 !dbg !2667 {
entry:
  %this.addr = alloca %"class.pmem::obj::pool_base"*, align 8
  %cpop.addr = alloca %struct.pmemobjpool*, align 8
  store %"class.pmem::obj::pool_base"* %this, %"class.pmem::obj::pool_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool_base"** %this.addr, metadata !2669, metadata !DIExpression()), !dbg !2671
  store %struct.pmemobjpool* %cpop, %struct.pmemobjpool** %cpop.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %struct.pmemobjpool** %cpop.addr, metadata !2670, metadata !DIExpression()), !dbg !2672
  %this1 = load %"class.pmem::obj::pool_base"*, %"class.pmem::obj::pool_base"** %this.addr, align 8
  %0 = bitcast %"class.pmem::obj::pool_base"* %this1 to i32 (...)***, !dbg !2673
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4pmem3obj9pool_baseE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8, !dbg !2673, !tbaa !1869
  %pop = getelementptr inbounds %"class.pmem::obj::pool_base", %"class.pmem::obj::pool_base"* %this1, i32 0, i32 1, !dbg !2674
  %1 = load %struct.pmemobjpool*, %struct.pmemobjpool** %cpop.addr, align 8, !dbg !2675, !tbaa !1779
  store %struct.pmemobjpool* %1, %struct.pmemobjpool** %pop, align 8, !dbg !2674, !tbaa !1948
  ret void, !dbg !2676
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) #12 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #15
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8* %0)

declare dso_local void @_ZSt9terminatev()

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem10pool_errorD0Ev(%"class.pmem::pool_error"* %this) unnamed_addr #11 comdat align 2 !dbg !2677 {
entry:
  %this.addr = alloca %"class.pmem::pool_error"*, align 8
  store %"class.pmem::pool_error"* %this, %"class.pmem::pool_error"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::pool_error"** %this.addr, metadata !2682, metadata !DIExpression()), !dbg !2683
  %this1 = load %"class.pmem::pool_error"*, %"class.pmem::pool_error"** %this.addr, align 8
  call void bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD2Ev to void (%"class.pmem::pool_error"*)*)(%"class.pmem::pool_error"* %this1) #3, !dbg !2684
  %0 = bitcast %"class.pmem::pool_error"* %this1 to i8*, !dbg !2684
  call void @_ZdlPv(i8* %0) #17, !dbg !2684
  ret void, !dbg !2684
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj9pool_baseC2ERKS1_(%"class.pmem::obj::pool_base"* %this, %"class.pmem::obj::pool_base"* nonnull align 8 dereferenceable(16) %0) unnamed_addr #6 comdat align 2 !dbg !2685 {
entry:
  %this.addr = alloca %"class.pmem::obj::pool_base"*, align 8
  %.addr = alloca %"class.pmem::obj::pool_base"*, align 8
  store %"class.pmem::obj::pool_base"* %this, %"class.pmem::obj::pool_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool_base"** %this.addr, metadata !2687, metadata !DIExpression()), !dbg !2689
  store %"class.pmem::obj::pool_base"* %0, %"class.pmem::obj::pool_base"** %.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::pool_base"** %.addr, metadata !2688, metadata !DIExpression()), !dbg !2690
  %this1 = load %"class.pmem::obj::pool_base"*, %"class.pmem::obj::pool_base"** %this.addr, align 8
  %1 = bitcast %"class.pmem::obj::pool_base"* %this1 to i32 (...)***, !dbg !2691
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4pmem3obj9pool_baseE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !dbg !2691, !tbaa !1869
  %pop = getelementptr inbounds %"class.pmem::obj::pool_base", %"class.pmem::obj::pool_base"* %this1, i32 0, i32 1, !dbg !2692
  %2 = load %"class.pmem::obj::pool_base"*, %"class.pmem::obj::pool_base"** %.addr, align 8, !dbg !2692, !tbaa !1779
  %pop2 = getelementptr inbounds %"class.pmem::obj::pool_base", %"class.pmem::obj::pool_base"* %2, i32 0, i32 1, !dbg !2692
  %3 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop2, align 8, !dbg !2692, !tbaa !1948
  store %struct.pmemobjpool* %3, %struct.pmemobjpool** %pop, align 8, !dbg !2692, !tbaa !1948
  ret void, !dbg !2691
}

; Function Attrs: nounwind uwtable
define available_externally dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* %this) #6 align 2 !dbg !2693 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2698, metadata !DIExpression()), !dbg !2699
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 2, !dbg !2700
  %_M_local_buf = bitcast %union.anon* %0 to [16 x i8]*, !dbg !2700
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %_M_local_buf, i64 0, i64 0, !dbg !2701
  %call = call i8* @_ZNSt14pointer_traitsIPcE10pointer_toERc(i8* nonnull align 1 dereferenceable(1) %arraydecay) #3, !dbg !2702
  ret i8* %call, !dbg !2703
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_(%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"* %this, i8* %__dat, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #6 align 2 !dbg !2704 {
entry:
  %this.addr = alloca %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"*, align 8
  %__dat.addr = alloca i8*, align 8
  %__a.addr = alloca %"class.std::allocator"*, align 8
  store %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"* %this, %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"** %this.addr, metadata !2718, metadata !DIExpression()), !dbg !2722
  store i8* %__dat, i8** %__dat.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__dat.addr, metadata !2720, metadata !DIExpression()), !dbg !2723
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::allocator"** %__a.addr, metadata !2721, metadata !DIExpression()), !dbg !2724
  %this1 = load %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"*, %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"** %this.addr, align 8
  %0 = bitcast %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"* %this1 to %"class.std::allocator"*, !dbg !2725
  %1 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8, !dbg !2726, !tbaa !1779
  call void @_ZNSaIcEC2ERKS_(%"class.std::allocator"* %0, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %1) #3, !dbg !2727
  %_M_p = getelementptr inbounds %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider", %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"* %this1, i32 0, i32 0, !dbg !2728
  %2 = load i8*, i8** %__dat.addr, align 8, !dbg !2729, !tbaa !1779
  store i8* %2, i8** %_M_p, align 8, !dbg !2728, !tbaa !2730
  ret void, !dbg !2731
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_(%"class.std::__cxx11::basic_string"* %this, i8* %__beg, i8* %__end) #0 comdat align 2 !dbg !2732 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__beg.addr = alloca i8*, align 8
  %__end.addr = alloca i8*, align 8
  %agg.tmp = alloca %"struct.std::__false_type", align 1
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2739, metadata !DIExpression()), !dbg !2742
  store i8* %__beg, i8** %__beg.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__beg.addr, metadata !2740, metadata !DIExpression()), !dbg !2743
  store i8* %__end, i8** %__end.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__end.addr, metadata !2741, metadata !DIExpression()), !dbg !2744
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i8*, i8** %__beg.addr, align 8, !dbg !2745, !tbaa !1779
  %1 = load i8*, i8** %__end.addr, align 8, !dbg !2746, !tbaa !1779
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type(%"class.std::__cxx11::basic_string"* %this1, i8* %0, i8* %1), !dbg !2747
  ret void, !dbg !2748
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i64 @_ZNSt11char_traitsIcE6lengthEPKc(i8* %__s) #6 comdat align 2 !dbg !2749 {
entry:
  %__s.addr = alloca i8*, align 8
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__s.addr, metadata !2751, metadata !DIExpression()), !dbg !2752
  %0 = load i8*, i8** %__s.addr, align 8, !dbg !2753, !tbaa !1779
  %call = call i64 @strlen(i8* %0) #3, !dbg !2754
  ret i64 %call, !dbg !2755
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i8* @_ZNSt14pointer_traitsIPcE10pointer_toERc(i8* nonnull align 1 dereferenceable(1) %__r) #6 comdat align 2 !dbg !2756 {
entry:
  %__r.addr = alloca i8*, align 8
  store i8* %__r, i8** %__r.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__r.addr, metadata !2772, metadata !DIExpression()), !dbg !2773
  %0 = load i8*, i8** %__r.addr, align 8, !dbg !2774, !tbaa !1779
  %call = call i8* @_ZSt9addressofIcEPT_RS0_(i8* nonnull align 1 dereferenceable(1) %0) #3, !dbg !2775
  ret i8* %call, !dbg !2776
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local i8* @_ZSt9addressofIcEPT_RS0_(i8* nonnull align 1 dereferenceable(1) %__r) #11 comdat !dbg !2777 {
entry:
  %__r.addr = alloca i8*, align 8
  store i8* %__r, i8** %__r.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__r.addr, metadata !2781, metadata !DIExpression()), !dbg !2782
  %0 = load i8*, i8** %__r.addr, align 8, !dbg !2783, !tbaa !1779
  %call = call i8* @_ZSt11__addressofIcEPT_RS0_(i8* nonnull align 1 dereferenceable(1) %0) #3, !dbg !2784
  ret i8* %call, !dbg !2785
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local i8* @_ZSt11__addressofIcEPT_RS0_(i8* nonnull align 1 dereferenceable(1) %__r) #11 comdat !dbg !2786 {
entry:
  %__r.addr = alloca i8*, align 8
  store i8* %__r, i8** %__r.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__r.addr, metadata !2788, metadata !DIExpression()), !dbg !2789
  %0 = load i8*, i8** %__r.addr, align 8, !dbg !2790, !tbaa !1779
  ret i8* %0, !dbg !2791
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSaIcEC2ERKS_(%"class.std::allocator"* %this, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #6 align 2 !dbg !2792 {
entry:
  %this.addr = alloca %"class.std::allocator"*, align 8
  %__a.addr = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %this, %"class.std::allocator"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::allocator"** %this.addr, metadata !2797, metadata !DIExpression()), !dbg !2799
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::allocator"** %__a.addr, metadata !2798, metadata !DIExpression()), !dbg !2800
  %this1 = load %"class.std::allocator"*, %"class.std::allocator"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator"* %this1 to %"class.__gnu_cxx::new_allocator"*, !dbg !2801
  %1 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8, !dbg !2802, !tbaa !1779
  %2 = bitcast %"class.std::allocator"* %1 to %"class.__gnu_cxx::new_allocator"*, !dbg !2802
  call void @_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %2) #3, !dbg !2803
  ret void, !dbg !2804
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"* nonnull align 1 dereferenceable(1) %0) unnamed_addr #6 comdat align 2 !dbg !2805 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator"** %this.addr, metadata !2807, metadata !DIExpression()), !dbg !2809
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.__gnu_cxx::new_allocator"** %.addr, metadata !2808, metadata !DIExpression()), !dbg !2810
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  ret void, !dbg !2811
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type(%"class.std::__cxx11::basic_string"* %this, i8* %__beg, i8* %__end) #0 comdat align 2 !dbg !2812 {
entry:
  %0 = alloca %"struct.std::__false_type", align 1
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__beg.addr = alloca i8*, align 8
  %__end.addr = alloca i8*, align 8
  %agg.tmp = alloca %"struct.std::forward_iterator_tag", align 1
  %ref.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2819, metadata !DIExpression()), !dbg !2823
  store i8* %__beg, i8** %__beg.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__beg.addr, metadata !2820, metadata !DIExpression()), !dbg !2824
  store i8* %__end, i8** %__end.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__end.addr, metadata !2821, metadata !DIExpression()), !dbg !2825
  call void @llvm.dbg.declare(metadata %"struct.std::__false_type"* %0, metadata !2822, metadata !DIExpression()), !dbg !2826
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %1 = load i8*, i8** %__beg.addr, align 8, !dbg !2827, !tbaa !1779
  %2 = load i8*, i8** %__end.addr, align 8, !dbg !2828, !tbaa !1779
  %3 = bitcast %"struct.std::random_access_iterator_tag"* %ref.tmp to i8*, !dbg !2829
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #3, !dbg !2829
  %4 = bitcast %"struct.std::random_access_iterator_tag"* %ref.tmp to %"struct.std::forward_iterator_tag"*, !dbg !2829
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* %this1, i8* %1, i8* %2), !dbg !2830
  %5 = bitcast %"struct.std::random_access_iterator_tag"* %ref.tmp to i8*, !dbg !2830
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %5) #3, !dbg !2830
  ret void, !dbg !2831
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* %this, i8* %__beg, i8* %__end) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !2832 {
entry:
  %0 = alloca %"struct.std::forward_iterator_tag", align 1
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__beg.addr = alloca i8*, align 8
  %__end.addr = alloca i8*, align 8
  %__dnew = alloca i64, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2844, metadata !DIExpression()), !dbg !2849
  store i8* %__beg, i8** %__beg.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__beg.addr, metadata !2845, metadata !DIExpression()), !dbg !2850
  store i8* %__end, i8** %__end.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__end.addr, metadata !2846, metadata !DIExpression()), !dbg !2851
  call void @llvm.dbg.declare(metadata %"struct.std::forward_iterator_tag"* %0, metadata !2847, metadata !DIExpression()), !dbg !2852
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %1 = load i8*, i8** %__beg.addr, align 8, !dbg !2853, !tbaa !1779
  %call = call zeroext i1 @_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_(i8* %1), !dbg !2855
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !2856

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %__beg.addr, align 8, !dbg !2857, !tbaa !1779
  %3 = load i8*, i8** %__end.addr, align 8, !dbg !2858, !tbaa !1779
  %cmp = icmp ne i8* %2, %3, !dbg !2859
  br i1 %cmp, label %if.then, label %if.end, !dbg !2860

if.then:                                          ; preds = %land.lhs.true
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0)) #14, !dbg !2861
  unreachable, !dbg !2861

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = bitcast i64* %__dnew to i8*, !dbg !2862
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #3, !dbg !2862
  call void @llvm.dbg.declare(metadata i64* %__dnew, metadata !2848, metadata !DIExpression()), !dbg !2863
  %5 = load i8*, i8** %__beg.addr, align 8, !dbg !2864, !tbaa !1779
  %6 = load i8*, i8** %__end.addr, align 8, !dbg !2865, !tbaa !1779
  %call2 = call i64 @_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_(i8* %5, i8* %6), !dbg !2866
  store i64 %call2, i64* %__dnew, align 8, !dbg !2863, !tbaa !1822
  %7 = load i64, i64* %__dnew, align 8, !dbg !2867, !tbaa !1822
  %cmp3 = icmp ugt i64 %7, 15, !dbg !2869
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !2870

if.then4:                                         ; preds = %if.end
  %call5 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* %this1, i64* nonnull align 8 dereferenceable(8) %__dnew, i64 0), !dbg !2871
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* %this1, i8* %call5), !dbg !2873
  %8 = load i64, i64* %__dnew, align 8, !dbg !2874, !tbaa !1822
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(%"class.std::__cxx11::basic_string"* %this1, i64 %8), !dbg !2875
  br label %if.end6, !dbg !2876

if.end6:                                          ; preds = %if.then4, %if.end
  %call7 = invoke i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* %this1)
          to label %invoke.cont unwind label %lpad, !dbg !2877

invoke.cont:                                      ; preds = %if.end6
  %9 = load i8*, i8** %__beg.addr, align 8, !dbg !2879, !tbaa !1779
  %10 = load i8*, i8** %__end.addr, align 8, !dbg !2880, !tbaa !1779
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_(i8* %call7, i8* %9, i8* %10) #3, !dbg !2881
  br label %try.cont, !dbg !2882

lpad:                                             ; preds = %if.end6
  %11 = landingpad { i8*, i32 }
          catch i8* null, !dbg !2883
  %12 = extractvalue { i8*, i32 } %11, 0, !dbg !2883
  store i8* %12, i8** %exn.slot, align 8, !dbg !2883
  %13 = extractvalue { i8*, i32 } %11, 1, !dbg !2883
  store i32 %13, i32* %ehselector.slot, align 4, !dbg !2883
  br label %catch, !dbg !2883

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !2882
  %14 = call i8* @__cxa_begin_catch(i8* %exn) #3, !dbg !2882
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(%"class.std::__cxx11::basic_string"* %this1)
          to label %invoke.cont9 unwind label %lpad8, !dbg !2884

invoke.cont9:                                     ; preds = %catch
  invoke void @__cxa_rethrow() #14
          to label %unreachable unwind label %lpad8, !dbg !2886

lpad8:                                            ; preds = %invoke.cont9, %catch
  %15 = landingpad { i8*, i32 }
          cleanup, !dbg !2887
  %16 = extractvalue { i8*, i32 } %15, 0, !dbg !2887
  store i8* %16, i8** %exn.slot, align 8, !dbg !2887
  %17 = extractvalue { i8*, i32 } %15, 1, !dbg !2887
  store i32 %17, i32* %ehselector.slot, align 4, !dbg !2887
  invoke void @__cxa_end_catch()
          to label %invoke.cont10 unwind label %terminate.lpad, !dbg !2888

invoke.cont10:                                    ; preds = %lpad8
  %18 = bitcast i64* %__dnew to i8*, !dbg !2889
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #3, !dbg !2889
  br label %eh.resume, !dbg !2889

try.cont:                                         ; preds = %invoke.cont
  %19 = load i64, i64* %__dnew, align 8, !dbg !2890, !tbaa !1822
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* %this1, i64 %19), !dbg !2891
  %20 = bitcast i64* %__dnew to i8*, !dbg !2889
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #3, !dbg !2889
  ret void, !dbg !2889

eh.resume:                                        ; preds = %invoke.cont10
  %exn11 = load i8*, i8** %exn.slot, align 8, !dbg !2889
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !2889
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn11, 0, !dbg !2889
  %lpad.val12 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !2889
  resume { i8*, i32 } %lpad.val12, !dbg !2889

terminate.lpad:                                   ; preds = %lpad8
  %21 = landingpad { i8*, i32 }
          catch i8* null, !dbg !2888
  %22 = extractvalue { i8*, i32 } %21, 0, !dbg !2888
  call void @__clang_call_terminate(i8* %22) #15, !dbg !2888
  unreachable, !dbg !2888

unreachable:                                      ; preds = %invoke.cont9
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_(i8* %__ptr) #11 comdat !dbg !2892 {
entry:
  %__ptr.addr = alloca i8*, align 8
  store i8* %__ptr, i8** %__ptr.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__ptr.addr, metadata !2897, metadata !DIExpression()), !dbg !2900
  %0 = load i8*, i8** %__ptr.addr, align 8, !dbg !2901, !tbaa !1779
  %cmp = icmp eq i8* %0, null, !dbg !2902
  ret i1 %cmp, !dbg !2903
}

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8* %0) #13

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local i64 @_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_(i8* %__first, i8* %__last) #7 comdat !dbg !2904 {
entry:
  %__first.addr = alloca i8*, align 8
  %__last.addr = alloca i8*, align 8
  %agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  %undef.agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store i8* %__first, i8** %__first.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__first.addr, metadata !2913, metadata !DIExpression()), !dbg !2917
  store i8* %__last, i8** %__last.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__last.addr, metadata !2914, metadata !DIExpression()), !dbg !2918
  %0 = load i8*, i8** %__first.addr, align 8, !dbg !2919, !tbaa !1779
  %1 = load i8*, i8** %__last.addr, align 8, !dbg !2920, !tbaa !1779
  call void @_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i8** nonnull align 8 dereferenceable(8) %__first.addr), !dbg !2921
  %call = call i64 @_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i8* %0, i8* %1), !dbg !2922
  ret i64 %call, !dbg !2923
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* %this, i8* %__p) #6 align 2 !dbg !2924 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__p.addr = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2929, metadata !DIExpression()), !dbg !2931
  store i8* %__p, i8** %__p.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__p.addr, metadata !2930, metadata !DIExpression()), !dbg !2932
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i8*, i8** %__p.addr, align 8, !dbg !2933, !tbaa !1779
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0, !dbg !2934
  %_M_p = getelementptr inbounds %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider", %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>::_Alloc_hider"* %_M_dataplus, i32 0, i32 0, !dbg !2935
  store i8* %0, i8** %_M_p, align 8, !dbg !2936, !tbaa !2514
  ret void, !dbg !2937
}

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* %0, i64* nonnull align 8 dereferenceable(8) %1, i64 %2) #1

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(%"class.std::__cxx11::basic_string"* %this, i64 %__capacity) #6 align 2 !dbg !2938 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__capacity.addr = alloca i64, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2941, metadata !DIExpression()), !dbg !2943
  store i64 %__capacity, i64* %__capacity.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %__capacity.addr, metadata !2942, metadata !DIExpression()), !dbg !2944
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i64, i64* %__capacity.addr, align 8, !dbg !2945, !tbaa !1822
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 2, !dbg !2946
  %_M_allocated_capacity = bitcast %union.anon* %1 to i64*, !dbg !2946
  store i64 %0, i64* %_M_allocated_capacity, align 8, !dbg !2947, !tbaa !2083
  ret void, !dbg !2948
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_(i8* %__p, i8* %__k1, i8* %__k2) #6 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !2949 {
entry:
  %__p.addr = alloca i8*, align 8
  %__k1.addr = alloca i8*, align 8
  %__k2.addr = alloca i8*, align 8
  store i8* %__p, i8** %__p.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__p.addr, metadata !2954, metadata !DIExpression()), !dbg !2957
  store i8* %__k1, i8** %__k1.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__k1.addr, metadata !2955, metadata !DIExpression()), !dbg !2958
  store i8* %__k2, i8** %__k2.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__k2.addr, metadata !2956, metadata !DIExpression()), !dbg !2959
  %0 = load i8*, i8** %__p.addr, align 8, !dbg !2960, !tbaa !1779
  %1 = load i8*, i8** %__k1.addr, align 8, !dbg !2961, !tbaa !1779
  %2 = load i8*, i8** %__k2.addr, align 8, !dbg !2962, !tbaa !1779
  %3 = load i8*, i8** %__k1.addr, align 8, !dbg !2963, !tbaa !1779
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !2964
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !2964
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !2964
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm(i8* %0, i8* %1, i64 %sub.ptr.sub)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !2965

invoke.cont:                                      ; preds = %entry
  ret void, !dbg !2966

terminate.lpad:                                   ; preds = %entry
  %4 = landingpad { i8*, i32 }
          catch i8* null, !dbg !2965
  %5 = extractvalue { i8*, i32 } %4, 0, !dbg !2965
  call void @__clang_call_terminate(i8* %5) #15, !dbg !2965
  unreachable, !dbg !2965
}

declare dso_local void @__cxa_rethrow()

declare dso_local void @__cxa_end_catch()

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* %this, i64 %__n) #0 align 2 !dbg !2967 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__n.addr = alloca i64, align 8
  %ref.tmp = alloca i8, align 1
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !2970, metadata !DIExpression()), !dbg !2972
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !2971, metadata !DIExpression()), !dbg !2973
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !dbg !2974, !tbaa !1822
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm(%"class.std::__cxx11::basic_string"* %this1, i64 %0), !dbg !2975
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* %this1), !dbg !2976
  %1 = load i64, i64* %__n.addr, align 8, !dbg !2977, !tbaa !1822
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 %1, !dbg !2976
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %ref.tmp) #3, !dbg !2978
  store i8 0, i8* %ref.tmp, align 1, !dbg !2978, !tbaa !2083
  call void @_ZNSt11char_traitsIcE6assignERcRKc(i8* nonnull align 1 dereferenceable(1) %arrayidx, i8* nonnull align 1 dereferenceable(1) %ref.tmp) #3, !dbg !2979
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %ref.tmp) #3, !dbg !2979
  ret void, !dbg !2980
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local i64 @_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i8* %__first, i8* %__last) #11 comdat !dbg !2981 {
entry:
  %0 = alloca %"struct.std::random_access_iterator_tag", align 1
  %__first.addr = alloca i8*, align 8
  %__last.addr = alloca i8*, align 8
  store i8* %__first, i8** %__first.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__first.addr, metadata !2991, metadata !DIExpression()), !dbg !2996
  store i8* %__last, i8** %__last.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__last.addr, metadata !2992, metadata !DIExpression()), !dbg !2997
  call void @llvm.dbg.declare(metadata %"struct.std::random_access_iterator_tag"* %0, metadata !2993, metadata !DIExpression()), !dbg !2998
  %1 = load i8*, i8** %__last.addr, align 8, !dbg !2999, !tbaa !1779
  %2 = load i8*, i8** %__first.addr, align 8, !dbg !3000, !tbaa !1779
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !3001
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !3001
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3001
  ret i64 %sub.ptr.sub, !dbg !3002
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i8** nonnull align 8 dereferenceable(8) %0) #11 comdat !dbg !3003 {
entry:
  %.addr = alloca i8**, align 8
  store i8** %0, i8*** %.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8*** %.addr, metadata !3010, metadata !DIExpression()), !dbg !3013
  ret void, !dbg !3014
}

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm(i8* %__d, i8* %__s, i64 %__n) #0 align 2 !dbg !3015 {
entry:
  %__d.addr = alloca i8*, align 8
  %__s.addr = alloca i8*, align 8
  %__n.addr = alloca i64, align 8
  store i8* %__d, i8** %__d.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__d.addr, metadata !3020, metadata !DIExpression()), !dbg !3023
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__s.addr, metadata !3021, metadata !DIExpression()), !dbg !3024
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !3022, metadata !DIExpression()), !dbg !3025
  %0 = load i64, i64* %__n.addr, align 8, !dbg !3026, !tbaa !1822
  %cmp = icmp eq i64 %0, 1, !dbg !3028
  br i1 %cmp, label %if.then, label %if.else, !dbg !3029

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__d.addr, align 8, !dbg !3030, !tbaa !1779
  %2 = load i8*, i8** %__s.addr, align 8, !dbg !3031, !tbaa !1779
  call void @_ZNSt11char_traitsIcE6assignERcRKc(i8* nonnull align 1 dereferenceable(1) %1, i8* nonnull align 1 dereferenceable(1) %2) #3, !dbg !3032
  br label %if.end, !dbg !3032

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %__d.addr, align 8, !dbg !3033, !tbaa !1779
  %4 = load i8*, i8** %__s.addr, align 8, !dbg !3034, !tbaa !1779
  %5 = load i64, i64* %__n.addr, align 8, !dbg !3035, !tbaa !1822
  %call = call i8* @_ZNSt11char_traitsIcE4copyEPcPKcm(i8* %3, i8* %4, i64 %5), !dbg !3036
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3037
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt11char_traitsIcE6assignERcRKc(i8* nonnull align 1 dereferenceable(1) %__c1, i8* nonnull align 1 dereferenceable(1) %__c2) #6 comdat align 2 !dbg !3038 {
entry:
  %__c1.addr = alloca i8*, align 8
  %__c2.addr = alloca i8*, align 8
  store i8* %__c1, i8** %__c1.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__c1.addr, metadata !3040, metadata !DIExpression()), !dbg !3042
  store i8* %__c2, i8** %__c2.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__c2.addr, metadata !3041, metadata !DIExpression()), !dbg !3043
  %0 = load i8*, i8** %__c2.addr, align 8, !dbg !3044, !tbaa !1779
  %1 = load i8, i8* %0, align 1, !dbg !3044, !tbaa !2083
  %2 = load i8*, i8** %__c1.addr, align 8, !dbg !3045, !tbaa !1779
  store i8 %1, i8* %2, align 1, !dbg !3046, !tbaa !2083
  ret void, !dbg !3047
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i8* @_ZNSt11char_traitsIcE4copyEPcPKcm(i8* %__s1, i8* %__s2, i64 %__n) #6 comdat align 2 !dbg !3048 {
entry:
  %retval = alloca i8*, align 8
  %__s1.addr = alloca i8*, align 8
  %__s2.addr = alloca i8*, align 8
  %__n.addr = alloca i64, align 8
  store i8* %__s1, i8** %__s1.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__s1.addr, metadata !3050, metadata !DIExpression()), !dbg !3053
  store i8* %__s2, i8** %__s2.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__s2.addr, metadata !3051, metadata !DIExpression()), !dbg !3054
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %__n.addr, metadata !3052, metadata !DIExpression()), !dbg !3055
  %0 = load i64, i64* %__n.addr, align 8, !dbg !3056, !tbaa !1822
  %cmp = icmp eq i64 %0, 0, !dbg !3058
  br i1 %cmp, label %if.then, label %if.end, !dbg !3059

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s1.addr, align 8, !dbg !3060, !tbaa !1779
  store i8* %1, i8** %retval, align 8, !dbg !3061
  br label %return, !dbg !3061

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %__s1.addr, align 8, !dbg !3062, !tbaa !1779
  %3 = load i8*, i8** %__s2.addr, align 8, !dbg !3063, !tbaa !1779
  %4 = load i64, i64* %__n.addr, align 8, !dbg !3064, !tbaa !1822
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 %4, i1 false), !dbg !3065
  store i8* %2, i8** %retval, align 8, !dbg !3066
  br label %return, !dbg !3066

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !3067
  ret i8* %5, !dbg !3067
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm(%"class.std::__cxx11::basic_string"* %this, i64 %__length) #6 align 2 !dbg !3068 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__length.addr = alloca i64, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %this.addr, metadata !3071, metadata !DIExpression()), !dbg !3073
  store i64 %__length, i64* %__length.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %__length.addr, metadata !3072, metadata !DIExpression()), !dbg !3074
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i64, i64* %__length.addr, align 8, !dbg !3075, !tbaa !1822
  %_M_string_length = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 1, !dbg !3076
  store i64 %0, i64* %_M_string_length, align 8, !dbg !3077, !tbaa !3078
  ret void, !dbg !3079
}

; Function Attrs: nounwind
declare dso_local i64 @strlen(i8* %0) #2

declare !dbg !711 dso_local { i64, i64 } @pmemobj_root(%struct.pmemobjpool* %0, i64 %1) #1

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEECI2NS_6detail19persistent_ptr_baseIS5_EEE7pmemoid(%"class.pmem::obj::persistent_ptr"* %this, i64 %.coerce0, i64 %.coerce1) unnamed_addr #11 comdat align 2 !dbg !3080 {
entry:
  %0 = alloca %struct.pmemoid, align 8
  %this.addr = alloca %"class.pmem::obj::persistent_ptr"*, align 8
  %1 = bitcast %struct.pmemoid* %0 to { i64, i64 }*
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0
  store i64 %.coerce0, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1
  store i64 %.coerce1, i64* %3, align 8
  store %"class.pmem::obj::persistent_ptr"* %this, %"class.pmem::obj::persistent_ptr"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::obj::persistent_ptr"** %this.addr, metadata !3085, metadata !DIExpression()), !dbg !3087
  call void @llvm.dbg.declare(metadata %struct.pmemoid* %0, metadata !3086, metadata !DIExpression()), !dbg !3087
  %this1 = load %"class.pmem::obj::persistent_ptr"*, %"class.pmem::obj::persistent_ptr"** %this.addr, align 8
  %4 = bitcast %"class.pmem::obj::persistent_ptr"* %this1 to %"class.pmem::detail::persistent_ptr_base"*, !dbg !3088
  %5 = bitcast %struct.pmemoid* %0 to { i64, i64 }*, !dbg !3088
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0, !dbg !3088
  %7 = load i64, i64* %6, align 8, !dbg !3088
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1, !dbg !3088
  %9 = load i64, i64* %8, align 8, !dbg !3088
  call void @_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEC2E7pmemoid(%"class.pmem::detail::persistent_ptr_base"* %4, i64 %7, i64 %9) #3, !dbg !3088
  ret void, !dbg !3088
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEC2E7pmemoid(%"class.pmem::detail::persistent_ptr_base"* %this, i64 %oid.coerce0, i64 %oid.coerce1) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !3089 {
entry:
  %oid = alloca %struct.pmemoid, align 8
  %this.addr = alloca %"class.pmem::detail::persistent_ptr_base"*, align 8
  %0 = bitcast %struct.pmemoid* %oid to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %oid.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %oid.coerce1, i64* %2, align 8
  store %"class.pmem::detail::persistent_ptr_base"* %this, %"class.pmem::detail::persistent_ptr_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::detail::persistent_ptr_base"** %this.addr, metadata !3091, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.declare(metadata %struct.pmemoid* %oid, metadata !3092, metadata !DIExpression()), !dbg !3094
  %this1 = load %"class.pmem::detail::persistent_ptr_base"*, %"class.pmem::detail::persistent_ptr_base"** %this.addr, align 8
  %oid2 = getelementptr inbounds %"class.pmem::detail::persistent_ptr_base", %"class.pmem::detail::persistent_ptr_base"* %this1, i32 0, i32 0, !dbg !3095
  %3 = bitcast %struct.pmemoid* %oid2 to i8*, !dbg !3095
  %4 = bitcast %struct.pmemoid* %oid to i8*, !dbg !3095
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false), !dbg !3095, !tbaa.struct !1821
  invoke void @_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE11verify_typeEv(%"class.pmem::detail::persistent_ptr_base"* %this1)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !3096

invoke.cont:                                      ; preds = %entry
  ret void, !dbg !3098

terminate.lpad:                                   ; preds = %entry
  %5 = landingpad { i8*, i32 }
          catch i8* null, !dbg !3096
  %6 = extractvalue { i8*, i32 } %5, 0, !dbg !3096
  call void @__clang_call_terminate(i8* %6) #15, !dbg !3096
  unreachable, !dbg !3096
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN4pmem3obj9pool_base6createERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_mj(%"class.pmem::obj::pool_base"* noalias sret align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %layout, i64 %size, i32 %mode) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !3099 {
entry:
  %result.ptr = alloca i8*, align 8
  %path.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %layout.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %size.addr = alloca i64, align 8
  %mode.addr = alloca i32, align 4
  %pop = alloca %struct.pmemobjpool*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.pmem::obj::pool_base"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %path, %"class.std::__cxx11::basic_string"** %path.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %path.addr, metadata !3101, metadata !DIExpression()), !dbg !3106
  store %"class.std::__cxx11::basic_string"* %layout, %"class.std::__cxx11::basic_string"** %layout.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::__cxx11::basic_string"** %layout.addr, metadata !3102, metadata !DIExpression()), !dbg !3107
  store i64 %size, i64* %size.addr, align 8, !tbaa !1822
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !3103, metadata !DIExpression()), !dbg !3108
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !1998
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3104, metadata !DIExpression()), !dbg !3109
  %1 = bitcast %struct.pmemobjpool** %pop to i8*, !dbg !3110
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #3, !dbg !3110
  call void @llvm.dbg.declare(metadata %struct.pmemobjpool** %pop, metadata !3105, metadata !DIExpression()), !dbg !3111
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %path.addr, align 8, !dbg !3112, !tbaa !1779
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* %2) #3, !dbg !3113
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %layout.addr, align 8, !dbg !3114, !tbaa !1779
  %call1 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* %3) #3, !dbg !3115
  %4 = load i64, i64* %size.addr, align 8, !dbg !3116, !tbaa !1822
  %5 = load i32, i32* %mode.addr, align 4, !dbg !3117, !tbaa !1998
  %call2 = call %struct.pmemobjpool* @pmemobj_create(i8* %call, i8* %call1, i64 %4, i32 %5), !dbg !3118
  store %struct.pmemobjpool* %call2, %struct.pmemobjpool** %pop, align 8, !dbg !3111, !tbaa !1779
  %6 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop, align 8, !dbg !3119, !tbaa !1779
  %cmp = icmp eq %struct.pmemobjpool* %6, null, !dbg !3121
  br i1 %cmp, label %if.then, label %if.end, !dbg !3122

if.then:                                          ; preds = %entry
  %call3 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0)), !dbg !3123
  %call4 = call i8* @pmemobj_errormsg(), !dbg !3125
  %call5 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call3, i8* %call4), !dbg !3126
  %call6 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %call5, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_), !dbg !3127
  %exception = call i8* @__cxa_allocate_exception(i64 16) #3, !dbg !3128
  %7 = bitcast i8* %exception to %"class.pmem::pool_error"*, !dbg !3128
  invoke void @_ZN4pmem10pool_errorCI2St13runtime_errorEPKc(%"class.pmem::pool_error"* %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad, !dbg !3129

invoke.cont:                                      ; preds = %if.then
  call void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN4pmem10pool_errorE to i8*), i8* bitcast (void (%"class.std::runtime_error"*)* @_ZNSt13runtime_errorD2Ev to i8*)) #14, !dbg !3128
  unreachable, !dbg !3128

lpad:                                             ; preds = %if.then
  %8 = landingpad { i8*, i32 }
          cleanup, !dbg !3130
  %9 = extractvalue { i8*, i32 } %8, 0, !dbg !3130
  store i8* %9, i8** %exn.slot, align 8, !dbg !3130
  %10 = extractvalue { i8*, i32 } %8, 1, !dbg !3130
  store i32 %10, i32* %ehselector.slot, align 4, !dbg !3130
  call void @__cxa_free_exception(i8* %exception) #3, !dbg !3128
  %11 = bitcast %struct.pmemobjpool** %pop to i8*, !dbg !3131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #3, !dbg !3131
  br label %eh.resume, !dbg !3131

if.end:                                           ; preds = %entry
  %12 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop, align 8, !dbg !3132, !tbaa !1779
  call void @_ZN4pmem3obj9pool_baseC2EP11pmemobjpool(%"class.pmem::obj::pool_base"* %agg.result, %struct.pmemobjpool* %12) #3, !dbg !3133
  %13 = bitcast %struct.pmemobjpool** %pop to i8*, !dbg !3131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #3, !dbg !3131
  ret void, !dbg !3131

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8, !dbg !3131
  %sel = load i32, i32* %ehselector.slot, align 4, !dbg !3131
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0, !dbg !3131
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1, !dbg !3131
  resume { i8*, i32 } %lpad.val7, !dbg !3131
}

declare !dbg !714 dso_local %struct.pmemobjpool* @pmemobj_create(i8* %0, i8* %1, i64 %2, i32 %3) #1

; Function Attrs: inlinehint uwtable
define available_externally dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %__out, i8* %__s) #7 !dbg !3134 {
entry:
  %__out.addr = alloca %"class.std::basic_ostream"*, align 8
  %__s.addr = alloca i8*, align 8
  store %"class.std::basic_ostream"* %__out, %"class.std::basic_ostream"** %__out.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::basic_ostream"** %__out.addr, metadata !3142, metadata !DIExpression()), !dbg !3146
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata i8** %__s.addr, metadata !3143, metadata !DIExpression()), !dbg !3147
  %0 = load i8*, i8** %__s.addr, align 8, !dbg !3148, !tbaa !1779
  %tobool = icmp ne i8* %0, null, !dbg !3148
  br i1 %tobool, label %if.else, label %if.then, !dbg !3150

if.then:                                          ; preds = %entry
  %1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %__out.addr, align 8, !dbg !3151, !tbaa !1779
  %2 = bitcast %"class.std::basic_ostream"* %1 to i8**, !dbg !3151
  %vtable = load i8*, i8** %2, align 8, !dbg !3151, !tbaa !1869
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -24, !dbg !3151
  %3 = bitcast i8* %vbase.offset.ptr to i64*, !dbg !3151
  %vbase.offset = load i64, i64* %3, align 8, !dbg !3151
  %4 = bitcast %"class.std::basic_ostream"* %1 to i8*, !dbg !3151
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %vbase.offset, !dbg !3151
  %5 = bitcast i8* %add.ptr to %"class.std::basic_ios"*, !dbg !3151
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate(%"class.std::basic_ios"* %5, i32 1), !dbg !3152
  br label %if.end, !dbg !3151

if.else:                                          ; preds = %entry
  %6 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %__out.addr, align 8, !dbg !3153, !tbaa !1779
  %7 = load i8*, i8** %__s.addr, align 8, !dbg !3154, !tbaa !1779
  %8 = load i8*, i8** %__s.addr, align 8, !dbg !3155, !tbaa !1779
  %call = call i64 @_ZNSt11char_traitsIcE6lengthEPKc(i8* %8), !dbg !3156
  %call1 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %6, i8* %7, i64 %call), !dbg !3157
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %__out.addr, align 8, !dbg !3158, !tbaa !1779
  ret %"class.std::basic_ostream"* %9, !dbg !3159
}

declare !dbg !717 dso_local i8* @pmemobj_errormsg() #1

; Function Attrs: uwtable
define available_externally dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %this, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* %__pf) #0 align 2 !dbg !3160 {
entry:
  %this.addr = alloca %"class.std::basic_ostream"*, align 8
  %__pf.addr = alloca %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*, align 8
  store %"class.std::basic_ostream"* %this, %"class.std::basic_ostream"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::basic_ostream"** %this.addr, metadata !3171, metadata !DIExpression()), !dbg !3174
  store %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* %__pf, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)** %__pf.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)** %__pf.addr, metadata !3173, metadata !DIExpression()), !dbg !3175
  %this1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %this.addr, align 8
  %0 = load %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)** %__pf.addr, align 8, !dbg !3176, !tbaa !1779
  %call = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* %0(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %this1), !dbg !3176
  ret %"class.std::basic_ostream"* %call, !dbg !3177
}

; Function Attrs: inlinehint uwtable
define available_externally dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %__os) #7 !dbg !3178 {
entry:
  %__os.addr = alloca %"class.std::basic_ostream"*, align 8
  store %"class.std::basic_ostream"* %__os, %"class.std::basic_ostream"** %__os.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::basic_ostream"** %__os.addr, metadata !3182, metadata !DIExpression()), !dbg !3184
  %0 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %__os.addr, align 8, !dbg !3185, !tbaa !1779
  %1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %__os.addr, align 8, !dbg !3186, !tbaa !1779
  %2 = bitcast %"class.std::basic_ostream"* %1 to i8**, !dbg !3186
  %vtable = load i8*, i8** %2, align 8, !dbg !3186, !tbaa !1869
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -24, !dbg !3186
  %3 = bitcast i8* %vbase.offset.ptr to i64*, !dbg !3186
  %vbase.offset = load i64, i64* %3, align 8, !dbg !3186
  %4 = bitcast %"class.std::basic_ostream"* %1 to i8*, !dbg !3186
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %vbase.offset, !dbg !3186
  %5 = bitcast i8* %add.ptr to %"class.std::basic_ios"*, !dbg !3186
  %call = call signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(%"class.std::basic_ios"* %5, i8 signext 10), !dbg !3187
  %call1 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* %0, i8 signext %call), !dbg !3188
  %call2 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt5flushIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call1), !dbg !3189
  ret %"class.std::basic_ostream"* %call2, !dbg !3190
}

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate(%"class.std::basic_ios"* %this, i32 %__state) #0 align 2 !dbg !3191 {
entry:
  %this.addr = alloca %"class.std::basic_ios"*, align 8
  %__state.addr = alloca i32, align 4
  store %"class.std::basic_ios"* %this, %"class.std::basic_ios"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::basic_ios"** %this.addr, metadata !3201, metadata !DIExpression()), !dbg !3204
  store i32 %__state, i32* %__state.addr, align 4, !tbaa !3205
  call void @llvm.dbg.declare(metadata i32* %__state.addr, metadata !3203, metadata !DIExpression()), !dbg !3207
  %this1 = load %"class.std::basic_ios"*, %"class.std::basic_ios"** %this.addr, align 8
  %call = call i32 @_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv(%"class.std::basic_ios"* %this1), !dbg !3208
  %0 = load i32, i32* %__state.addr, align 4, !dbg !3209, !tbaa !3205
  %call2 = call i32 @_ZStorSt12_Ios_IostateS_(i32 %call, i32 %0), !dbg !3210
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* %this1, i32 %call2), !dbg !3211
  ret void, !dbg !3212
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %0, i8* %1, i64 %2) #1

declare dso_local void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* %0, i32 %1) #1

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local i32 @_ZStorSt12_Ios_IostateS_(i32 %__a, i32 %__b) #11 comdat !dbg !3213 {
entry:
  %__a.addr = alloca i32, align 4
  %__b.addr = alloca i32, align 4
  store i32 %__a, i32* %__a.addr, align 4, !tbaa !3205
  call void @llvm.dbg.declare(metadata i32* %__a.addr, metadata !3217, metadata !DIExpression()), !dbg !3219
  store i32 %__b, i32* %__b.addr, align 4, !tbaa !3205
  call void @llvm.dbg.declare(metadata i32* %__b.addr, metadata !3218, metadata !DIExpression()), !dbg !3220
  %0 = load i32, i32* %__a.addr, align 4, !dbg !3221, !tbaa !3205
  %1 = load i32, i32* %__b.addr, align 4, !dbg !3222, !tbaa !3205
  %or = or i32 %0, %1, !dbg !3223
  ret i32 %or, !dbg !3224
}

; Function Attrs: nounwind uwtable
define available_externally dso_local i32 @_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv(%"class.std::basic_ios"* %this) #6 align 2 !dbg !3225 {
entry:
  %this.addr = alloca %"class.std::basic_ios"*, align 8
  store %"class.std::basic_ios"* %this, %"class.std::basic_ios"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::basic_ios"** %this.addr, metadata !3232, metadata !DIExpression()), !dbg !3234
  %this1 = load %"class.std::basic_ios"*, %"class.std::basic_ios"** %this.addr, align 8
  %0 = bitcast %"class.std::basic_ios"* %this1 to %"class.std::ios_base"*, !dbg !3235
  %_M_streambuf_state = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %0, i32 0, i32 5, !dbg !3235
  %1 = load i32, i32* %_M_streambuf_state, align 8, !dbg !3235, !tbaa !3236
  ret i32 %1, !dbg !3241
}

; Function Attrs: inlinehint uwtable
define available_externally dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt5flushIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %__os) #7 !dbg !3242 {
entry:
  %__os.addr = alloca %"class.std::basic_ostream"*, align 8
  store %"class.std::basic_ostream"* %__os, %"class.std::basic_ostream"** %__os.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::basic_ostream"** %__os.addr, metadata !3244, metadata !DIExpression()), !dbg !3245
  %0 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %__os.addr, align 8, !dbg !3246, !tbaa !1779
  %call = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* %0), !dbg !3247
  ret %"class.std::basic_ostream"* %call, !dbg !3248
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo3putEc(%"class.std::basic_ostream"* %0, i8 signext %1) #1

; Function Attrs: uwtable
define available_externally dso_local signext i8 @_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc(%"class.std::basic_ios"* %this, i8 signext %__c) #0 align 2 !dbg !3249 {
entry:
  %this.addr = alloca %"class.std::basic_ios"*, align 8
  %__c.addr = alloca i8, align 1
  store %"class.std::basic_ios"* %this, %"class.std::basic_ios"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::basic_ios"** %this.addr, metadata !3255, metadata !DIExpression()), !dbg !3257
  store i8 %__c, i8* %__c.addr, align 1, !tbaa !2083
  call void @llvm.dbg.declare(metadata i8* %__c.addr, metadata !3256, metadata !DIExpression()), !dbg !3258
  %this1 = load %"class.std::basic_ios"*, %"class.std::basic_ios"** %this.addr, align 8
  %_M_ctype = getelementptr inbounds %"class.std::basic_ios", %"class.std::basic_ios"* %this1, i32 0, i32 5, !dbg !3259
  %0 = load %"class.std::ctype"*, %"class.std::ctype"** %_M_ctype, align 8, !dbg !3259, !tbaa !3260
  %call = call nonnull align 8 dereferenceable(570) %"class.std::ctype"* @_ZSt13__check_facetISt5ctypeIcEERKT_PS3_(%"class.std::ctype"* %0), !dbg !3262
  %1 = load i8, i8* %__c.addr, align 1, !dbg !3263, !tbaa !2083
  %call2 = call signext i8 @_ZNKSt5ctypeIcE5widenEc(%"class.std::ctype"* %call, i8 signext %1), !dbg !3264
  ret i8 %call2, !dbg !3265
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo5flushEv(%"class.std::basic_ostream"* %0) #1

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(570) %"class.std::ctype"* @_ZSt13__check_facetISt5ctypeIcEERKT_PS3_(%"class.std::ctype"* %__f) #7 comdat !dbg !3266 {
entry:
  %__f.addr = alloca %"class.std::ctype"*, align 8
  store %"class.std::ctype"* %__f, %"class.std::ctype"** %__f.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::ctype"** %__f.addr, metadata !3275, metadata !DIExpression()), !dbg !3278
  %0 = load %"class.std::ctype"*, %"class.std::ctype"** %__f.addr, align 8, !dbg !3279, !tbaa !1779
  %tobool = icmp ne %"class.std::ctype"* %0, null, !dbg !3279
  br i1 %tobool, label %if.end, label %if.then, !dbg !3281

if.then:                                          ; preds = %entry
  call void @_ZSt16__throw_bad_castv() #14, !dbg !3282
  unreachable, !dbg !3282

if.end:                                           ; preds = %entry
  %1 = load %"class.std::ctype"*, %"class.std::ctype"** %__f.addr, align 8, !dbg !3283, !tbaa !1779
  ret %"class.std::ctype"* %1, !dbg !3284
}

; Function Attrs: uwtable
define linkonce_odr dso_local signext i8 @_ZNKSt5ctypeIcE5widenEc(%"class.std::ctype"* %this, i8 signext %__c) #0 comdat align 2 !dbg !3285 {
entry:
  %retval = alloca i8, align 1
  %this.addr = alloca %"class.std::ctype"*, align 8
  %__c.addr = alloca i8, align 1
  store %"class.std::ctype"* %this, %"class.std::ctype"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.std::ctype"** %this.addr, metadata !3292, metadata !DIExpression()), !dbg !3294
  store i8 %__c, i8* %__c.addr, align 1, !tbaa !2083
  call void @llvm.dbg.declare(metadata i8* %__c.addr, metadata !3293, metadata !DIExpression()), !dbg !3295
  %this1 = load %"class.std::ctype"*, %"class.std::ctype"** %this.addr, align 8
  %_M_widen_ok = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %this1, i32 0, i32 8, !dbg !3296
  %0 = load i8, i8* %_M_widen_ok, align 8, !dbg !3296, !tbaa !3298
  %tobool = icmp ne i8 %0, 0, !dbg !3296
  br i1 %tobool, label %if.then, label %if.end, !dbg !3300

if.then:                                          ; preds = %entry
  %_M_widen = getelementptr inbounds %"class.std::ctype", %"class.std::ctype"* %this1, i32 0, i32 9, !dbg !3301
  %1 = load i8, i8* %__c.addr, align 1, !dbg !3302, !tbaa !2083
  %idxprom = zext i8 %1 to i64, !dbg !3301
  %arrayidx = getelementptr inbounds [256 x i8], [256 x i8]* %_M_widen, i64 0, i64 %idxprom, !dbg !3301
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3301, !tbaa !2083
  store i8 %2, i8* %retval, align 1, !dbg !3303
  br label %return, !dbg !3303

if.end:                                           ; preds = %entry
  call void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* %this1), !dbg !3304
  %3 = load i8, i8* %__c.addr, align 1, !dbg !3305, !tbaa !2083
  %4 = bitcast %"class.std::ctype"* %this1 to i8 (%"class.std::ctype"*, i8)***, !dbg !3306
  %vtable = load i8 (%"class.std::ctype"*, i8)**, i8 (%"class.std::ctype"*, i8)*** %4, align 8, !dbg !3306, !tbaa !1869
  %vfn = getelementptr inbounds i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vtable, i64 6, !dbg !3306
  %5 = load i8 (%"class.std::ctype"*, i8)*, i8 (%"class.std::ctype"*, i8)** %vfn, align 8, !dbg !3306
  %call = call signext i8 %5(%"class.std::ctype"* %this1, i8 signext %3), !dbg !3306
  store i8 %call, i8* %retval, align 1, !dbg !3307
  br label %return, !dbg !3307

return:                                           ; preds = %if.end, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !3308
  ret i8 %6, !dbg !3308
}

; Function Attrs: noreturn
declare dso_local void @_ZSt16__throw_bad_castv() #13

declare dso_local void @_ZNKSt5ctypeIcE13_M_widen_initEv(%"class.std::ctype"* %0) #1

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local %class.PMDKMap* @_ZNK4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE3getEv(%"class.pmem::detail::persistent_ptr_base"* %this) #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !dbg !3309 {
entry:
  %retval = alloca %class.PMDKMap*, align 8
  %this.addr = alloca %"class.pmem::detail::persistent_ptr_base"*, align 8
  %agg.tmp = alloca %struct.pmemoid, align 8
  store %"class.pmem::detail::persistent_ptr_base"* %this, %"class.pmem::detail::persistent_ptr_base"** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %"class.pmem::detail::persistent_ptr_base"** %this.addr, metadata !3311, metadata !DIExpression()), !dbg !3312
  %this1 = load %"class.pmem::detail::persistent_ptr_base"*, %"class.pmem::detail::persistent_ptr_base"** %this.addr, align 8
  %oid = getelementptr inbounds %"class.pmem::detail::persistent_ptr_base", %"class.pmem::detail::persistent_ptr_base"* %this1, i32 0, i32 0, !dbg !3313
  %pool_uuid_lo = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 0, !dbg !3315
  %0 = bitcast i64* %pool_uuid_lo to i8*, !dbg !3315
  %1 = call i32 @cpavise_load_data(i8* %0, i64 8, i64 94796771548272), !dbg !3315
  %2 = load i64, i64* %pool_uuid_lo, align 8, !dbg !3315, !tbaa !3316
  %call = call i64 @_ZNSt14numeric_limitsImE3maxEv() #3, !dbg !3318
  %cmp = icmp eq i64 %2, %call, !dbg !3319
  br i1 %cmp, label %if.then, label %if.else, !dbg !3320

if.then:                                          ; preds = %entry
  %oid2 = getelementptr inbounds %"class.pmem::detail::persistent_ptr_base", %"class.pmem::detail::persistent_ptr_base"* %this1, i32 0, i32 0, !dbg !3321
  %off = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid2, i32 0, i32 1, !dbg !3322
  %3 = load i64, i64* %off, align 8, !dbg !3322, !tbaa !3323
  %4 = inttoptr i64 %3 to %class.PMDKMap*, !dbg !3324
  store %class.PMDKMap* %4, %class.PMDKMap** %retval, align 8, !dbg !3325
  br label %return, !dbg !3325

if.else:                                          ; preds = %entry
  %oid3 = getelementptr inbounds %"class.pmem::detail::persistent_ptr_base", %"class.pmem::detail::persistent_ptr_base"* %this1, i32 0, i32 0, !dbg !3326
  %5 = bitcast %struct.pmemoid* %agg.tmp to i8*, !dbg !3327
  %6 = bitcast %struct.pmemoid* %oid3 to i8*, !dbg !3327
  call void @cpavise_memcpy(i8* %5, i8* %6, i64 16, i64 94796771568480), !dbg !3327
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false), !dbg !3327, !tbaa.struct !1821
  %7 = bitcast %struct.pmemoid* %agg.tmp to { i64, i64 }*, !dbg !3328
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 0, !dbg !3328
  %9 = bitcast i64* %8 to i8*, !dbg !3328
  %10 = load i64, i64* %8, align 8, !dbg !3328
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i32 0, i32 1, !dbg !3328
  %12 = bitcast i64* %11 to i8*, !dbg !3328
  %13 = load i64, i64* %11, align 8, !dbg !3328
  %call4 = invoke i8* @_ZL21pmemobj_direct_inline7pmemoid(i64 %10, i64 %13)
          to label %invoke.cont unwind label %terminate.lpad, !dbg !3328

invoke.cont:                                      ; preds = %if.else
  %14 = bitcast i8* %call4 to %class.PMDKMap*, !dbg !3329
  store %class.PMDKMap* %14, %class.PMDKMap** %retval, align 8, !dbg !3330
  br label %return, !dbg !3330

return:                                           ; preds = %invoke.cont, %if.then
  %15 = load %class.PMDKMap*, %class.PMDKMap** %retval, align 8, !dbg !3331
  ret %class.PMDKMap* %15, !dbg !3331

terminate.lpad:                                   ; preds = %if.else
  %16 = landingpad { i8*, i32 }
          catch i8* null, !dbg !3328
  %17 = extractvalue { i8*, i32 } %16, 0, !dbg !3328
  call void @__clang_call_terminate(i8* %17) #15, !dbg !3328
  unreachable, !dbg !3328
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local i64 @_ZNSt14numeric_limitsImE3maxEv() #6 comdat align 2 !dbg !3332 {
entry:
  ret i64 -1, !dbg !3374
}

; Function Attrs: uwtable
define linkonce_odr dso_local zeroext i1 @_ZN7PMDKMapImP8_stritemE9createMapEP11pmemobjpool(%class.PMDKMap* %this, %struct.pmemobjpool* %pop) #0 comdat align 2 !dbg !3375 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %class.PMDKMap*, align 8
  %pop.addr = alloca %struct.pmemobjpool*, align 8
  store %class.PMDKMap* %this, %class.PMDKMap** %this.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %class.PMDKMap** %this.addr, metadata !3377, metadata !DIExpression()), !dbg !3379
  store %struct.pmemobjpool* %pop, %struct.pmemobjpool** %pop.addr, align 8, !tbaa !1779
  call void @llvm.dbg.declare(metadata %struct.pmemobjpool** %pop.addr, metadata !3378, metadata !DIExpression()), !dbg !3380
  %this1 = load %class.PMDKMap*, %class.PMDKMap** %this.addr, align 8
  %0 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop.addr, align 8, !dbg !3381, !tbaa !1779
  %map_ = getelementptr inbounds %class.PMDKMap, %class.PMDKMap* %this1, i32 0, i32 0, !dbg !3381
  %1 = bitcast %union.hashmap_tx_toid* %map_ to %struct.pmemoid*, !dbg !3381
  %call = call i32 @pmemobj_zalloc(%struct.pmemobjpool* %0, %struct.pmemoid* %1, i64 48, i64 1004), !dbg !3381
  %tobool = icmp ne i32 %call, 0, !dbg !3381
  br i1 %tobool, label %if.then, label %if.end, !dbg !3383

if.then:                                          ; preds = %entry
  %call2 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cerr, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0)), !dbg !3384
  %call3 = call i8* @pmemobj_errormsg(), !dbg !3386
  %call4 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call2, i8* %call3), !dbg !3387
  %call5 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %call4, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_), !dbg !3388
  store i1 false, i1* %retval, align 1, !dbg !3389
  br label %return, !dbg !3389

if.end:                                           ; preds = %entry
  %2 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop.addr, align 8, !dbg !3390, !tbaa !1779
  %map_6 = getelementptr inbounds %class.PMDKMap, %class.PMDKMap* %this1, i32 0, i32 0, !dbg !3392
  %call7 = call i32 @hm_tx_create(%struct.pmemobjpool* %2, %union.hashmap_tx_toid* %map_6, i8* null), !dbg !3393
  %tobool8 = icmp ne i32 %call7, 0, !dbg !3393
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !3394

if.then9:                                         ; preds = %if.end
  call void @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0)), !dbg !3395
  store i1 false, i1* %retval, align 1, !dbg !3397
  br label %return, !dbg !3397

if.end10:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !3398
  br label %return, !dbg !3398

return:                                           ; preds = %if.end10, %if.then9, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !3399
  ret i1 %3, !dbg !3399
}

declare !dbg !722 dso_local i32 @pmemobj_zalloc(%struct.pmemobjpool* %0, %struct.pmemoid* %1, i64 %2, i64 %3) #1

declare !dbg !727 dso_local i32 @hm_tx_create(%struct.pmemobjpool* %0, %union.hashmap_tx_toid* %1, i8* %2) #1

declare !dbg !731 dso_local void @perror(i8* %0) #1

declare !dbg !735 dso_local { i64, i64 } @hm_tx_get(%struct.pmemobjpool* %0, i64 %1, i64 %2, i64 %3) #1

declare !dbg !738 dso_local i32 @hm_tx_insert(%struct.pmemobjpool* %0, i64 %1, i64 %2, i64 %3, i64 %4, i64 %5) #1

declare !dbg !741 dso_local { i64, i64 } @hm_tx_remove(%struct.pmemobjpool* %0, i64 %1, i64 %2, i64 %3) #1

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_new_assoc.cpp() #0 section ".text.startup" !dbg !3400 {
entry:
  call void @__cxx_global_var_init(), !dbg !3402
  call void @__cxx_global_var_init.1(), !dbg !3402
  ret void
}

declare i32 @cpavise_load_data(i8* %0, i64 %1, i64 %2)

declare void @cpavise_memcpy(i8* %0, i8* %1, i64 %2, i64 %3)

declare i32 @cpavise_store_data_fileline(i8* %0, i64 %1, i32 %2, i32 %3)

attributes #0 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readnone speculatable willreturn }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline noreturn nounwind }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind readonly }
attributes #17 = { builtin nounwind }

!llvm.dbg.cu = !{!21}
!llvm.module.flags = !{!1767, !1768, !1769}
!llvm.ident = !{!1770}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__ioinit", linkageName: "_ZStL8__ioinit", scope: !2, file: !3, line: 74, type: !4, isLocal: true, isDefinition: true)
!2 = !DINamespace(name: "std", scope: null)
!3 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/iostream", directory: "")
!4 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "Init", scope: !6, file: !5, line: 601, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !7, identifier: "_ZTSNSt8ios_base4InitE")
!5 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/ios_base.h", directory: "")
!6 = !DICompositeType(tag: DW_TAG_class_type, name: "ios_base", scope: !2, file: !5, line: 228, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSSt8ios_base")
!7 = !{!8, !12, !14, !18}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "_S_refcount", scope: !4, file: !5, line: 609, baseType: !9, flags: DIFlagStaticMember)
!9 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Atomic_word", file: !10, line: 32, baseType: !11)
!10 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/x86_64-linux-gnu/c++/7.5.0/bits/atomic_word.h", directory: "")
!11 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_S_synced_with_stdio", scope: !4, file: !5, line: 610, baseType: !13, flags: DIFlagStaticMember)
!13 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!14 = !DISubprogram(name: "Init", scope: !4, file: !5, line: 605, type: !15, scopeLine: 605, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!15 = !DISubroutineType(types: !16)
!16 = !{null, !17}
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!18 = !DISubprogram(name: "~Init", scope: !4, file: !5, line: 606, type: !15, scopeLine: 606, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!19 = !DIGlobalVariableExpression(var: !20, expr: !DIExpression())
!20 = distinct !DIGlobalVariable(name: "primary_hashtable", linkageName: "_ZL17primary_hashtable", scope: !21, file: !747, line: 24, type: !224, isLocal: true, isDefinition: true)
!21 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus_14, file: !22, producer: "clang version 11.0.0 (https://github.com/hjjq/LLVM-Pavise.git 3d210af9293f24d5e7772804ba7d1c4b26f9bb1a)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !23, retainedTypes: !70, globals: !742, imports: !748, splitDebugInlining: false, nameTableKind: None)
!22 = !DIFile(filename: "/ssd1/hanjie/mod-pavise/memcached-pmdk/new_assoc.cpp", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk/tx-build")
!23 = !{!24, !32, !41, !48, !57, !63}
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_Lock_policy", scope: !26, file: !25, line: 49, baseType: !27, size: 32, elements: !28, identifier: "_ZTSN9__gnu_cxx12_Lock_policyE")
!25 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/concurrence.h", directory: "")
!26 = !DINamespace(name: "__gnu_cxx", scope: null)
!27 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!28 = !{!29, !30, !31}
!29 = !DIEnumerator(name: "_S_single", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "_S_mutex", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "_S_atomic", value: 2, isUnsigned: true)
!32 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pobj_tx_stage", file: !33, line: 55, baseType: !27, size: 32, elements: !34, identifier: "_ZTS13pobj_tx_stage")
!33 = !DIFile(filename: "../pmdk/src/include/libpmemobj/tx_base.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!34 = !{!35, !36, !37, !38, !39, !40}
!35 = !DIEnumerator(name: "TX_STAGE_NONE", value: 0, isUnsigned: true)
!36 = !DIEnumerator(name: "TX_STAGE_WORK", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "TX_STAGE_ONCOMMIT", value: 2, isUnsigned: true)
!38 = !DIEnumerator(name: "TX_STAGE_ONABORT", value: 3, isUnsigned: true)
!39 = !DIEnumerator(name: "TX_STAGE_FINALLY", value: 4, isUnsigned: true)
!40 = !DIEnumerator(name: "MAX_TX_STAGE", value: 5, isUnsigned: true)
!41 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !43, file: !42, line: 158, baseType: !27, size: 32, elements: !46, identifier: "_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEUt_E")
!42 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.h", directory: "")
!43 = !DICompositeType(tag: DW_TAG_class_type, name: "basic_string<char, std::char_traits<char>, std::allocator<char>>", scope: !45, file: !44, line: 1607, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE")
!44 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_string.tcc", directory: "")
!45 = !DINamespace(name: "__cxx11", scope: !2, exportSymbols: true)
!46 = !{!47}
!47 = !DIEnumerator(name: "_S_local_capacity", value: 15, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_Ios_Iostate", scope: !2, file: !5, line: 153, baseType: !11, size: 32, elements: !49, identifier: "_ZTSSt12_Ios_Iostate")
!49 = !{!50, !51, !52, !53, !54, !55, !56}
!50 = !DIEnumerator(name: "_S_goodbit", value: 0)
!51 = !DIEnumerator(name: "_S_badbit", value: 1)
!52 = !DIEnumerator(name: "_S_eofbit", value: 2)
!53 = !DIEnumerator(name: "_S_failbit", value: 4)
!54 = !DIEnumerator(name: "_S_ios_iostate_end", value: 65536)
!55 = !DIEnumerator(name: "_S_ios_iostate_max", value: 2147483647)
!56 = !DIEnumerator(name: "_S_ios_iostate_min", value: -2147483648)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "float_denorm_style", scope: !2, file: !58, line: 182, baseType: !11, size: 32, elements: !59, identifier: "_ZTSSt18float_denorm_style")
!58 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/limits", directory: "")
!59 = !{!60, !61, !62}
!60 = !DIEnumerator(name: "denorm_indeterminate", value: -1)
!61 = !DIEnumerator(name: "denorm_absent", value: 0)
!62 = !DIEnumerator(name: "denorm_present", value: 1)
!63 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "float_round_style", scope: !2, file: !58, line: 167, baseType: !11, size: 32, elements: !64, identifier: "_ZTSSt17float_round_style")
!64 = !{!65, !66, !67, !68, !69}
!65 = !DIEnumerator(name: "round_indeterminate", value: -1)
!66 = !DIEnumerator(name: "round_toward_zero", value: 0)
!67 = !DIEnumerator(name: "round_to_nearest", value: 1)
!68 = !DIEnumerator(name: "round_toward_infinity", value: 2)
!69 = !DIEnumerator(name: "round_toward_neg_infinity", value: 3)
!70 = !{!71, !13, !72, !74, !78, !86, !90, !99, !110, !112, !113, !117, !598, !604, !122, !607, !659, !711, !714, !717, !720, !48, !11, !283, !244, !397, !722, !727, !731, !735, !341, !738, !741, !43, !6}
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!73 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!74 = !DISubprogram(name: "pmemobj_tx_stage", scope: !33, file: !33, line: 68, type: !75, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!75 = !DISubroutineType(types: !76)
!76 = !{!32}
!77 = !{}
!78 = !DISubprogram(name: "pmemobj_pool_by_ptr", scope: !79, file: !79, line: 101, type: !80, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!79 = !DIFile(filename: "../pmdk/src/include/libpmemobj/base.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!80 = !DISubroutineType(types: !81)
!81 = !{!82, !84}
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!83 = !DICompositeType(tag: DW_TAG_structure_type, name: "pmemobjpool", file: !79, line: 67, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTS11pmemobjpool")
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!85 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!86 = !DISubprogram(name: "pmemobj_tx_add_range_direct", scope: !33, file: !33, line: 200, type: !87, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!87 = !DISubroutineType(types: !88)
!88 = !{!11, !84, !89}
!89 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!90 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "transaction_error", scope: !92, file: !91, line: 63, size: 128, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !93, vtableHolder: !97, identifier: "_ZTSN4pmem17transaction_errorE")
!91 = !DIFile(filename: "../libpmemobj-cpp/include/libpmemobj++/detail/pexceptions.hpp", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!92 = !DINamespace(name: "pmem", scope: null)
!93 = !{!94}
!94 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !90, baseType: !95, flags: DIFlagPublic, extraData: i32 0)
!95 = !DICompositeType(tag: DW_TAG_class_type, name: "runtime_error", scope: !2, file: !96, line: 197, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSSt13runtime_error")
!96 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/stdexcept", directory: "")
!97 = !DICompositeType(tag: DW_TAG_class_type, name: "exception", scope: !2, file: !98, line: 60, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSSt9exception")
!98 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/exception.h", directory: "")
!99 = !DISubprogram(name: "pmemobj_pool_by_oid", scope: !79, file: !79, line: 102, type: !100, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!100 = !DISubroutineType(types: !101)
!101 = !{!82, !102}
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pmemoid", file: !79, line: 90, size: 128, flags: DIFlagTypePassByValue, elements: !103, identifier: "_ZTS7pmemoid")
!103 = !{!104, !109}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "pool_uuid_lo", scope: !102, file: !79, line: 91, baseType: !105, size: 64)
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !106, line: 27, baseType: !107)
!106 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !108, line: 44, baseType: !89)
!108 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!109 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !102, file: !79, line: 92, baseType: !105, size: 64, offset: 64)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !111, line: 100, baseType: !89)
!111 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!113 = !DISubprogram(name: "operator delete", linkageName: "_ZdlPv", scope: !114, file: !114, line: 124, type: !115, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!114 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/new", directory: "")
!115 = !DISubroutineType(types: !116)
!116 = !{null, !71}
!117 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "pool<PMDKMap<unsigned long, _stritem *>>", scope: !119, file: !118, line: 435, size: 128, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !120, vtableHolder: !122, templateParams: !249, identifier: "_ZTSN4pmem3obj4poolI7PMDKMapImP8_stritemEEE")
!118 = !DIFile(filename: "../libpmemobj-cpp/include/libpmemobj++/pool.hpp", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!119 = !DINamespace(name: "obj", scope: !92)
!120 = !{!121, !194, !198, !203, !207, !211, !214, !215, !218, !221, !590, !591, !594, !597}
!121 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !117, baseType: !122, flags: DIFlagPublic, extraData: i32 0)
!122 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "pool_base", scope: !119, file: !118, line: 68, size: 128, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !123, vtableHolder: !122, identifier: "_ZTSN4pmem3obj9pool_baseE")
!123 = !{!124, !129, !132, !134, !138, !141, !146, !150, !154, !157, !158, !165, !173, !176, !177, !182, !183, !184, !187, !190, !193}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "_vptr$pool_base", scope: !118, file: !118, baseType: !125, size: 64, flags: DIFlagArtificial)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "__vtbl_ptr_type", baseType: !127, size: 64)
!127 = !DISubroutineType(types: !128)
!128 = !{!11}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "pop", scope: !122, file: !118, line: 415, baseType: !130, size: 64, offset: 64, flags: DIFlagProtected)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!131 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMEMobjpool", file: !79, line: 67, baseType: !83)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "DEFAULT_MODE", scope: !122, file: !118, line: 419, baseType: !133, flags: DIFlagProtected | DIFlagStaticMember, extraData: i32 384)
!133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11)
!134 = !DISubprogram(name: "pool_base", scope: !122, file: !118, line: 73, type: !135, scopeLine: 73, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!135 = !DISubroutineType(types: !136)
!136 = !{null, !137}
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!138 = !DISubprogram(name: "pool_base", scope: !122, file: !118, line: 84, type: !139, scopeLine: 84, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!139 = !DISubroutineType(types: !140)
!140 = !{null, !137, !82}
!141 = !DISubprogram(name: "pool_base", scope: !122, file: !118, line: 91, type: !142, scopeLine: 91, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!142 = !DISubroutineType(types: !143)
!143 = !{null, !137, !144}
!144 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !122)
!146 = !DISubprogram(name: "pool_base", scope: !122, file: !118, line: 96, type: !147, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!147 = !DISubroutineType(types: !148)
!148 = !{null, !137, !149}
!149 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !122, size: 64)
!150 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem3obj9pool_baseaSERKS1_", scope: !122, file: !118, line: 101, type: !151, scopeLine: 101, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!151 = !DISubroutineType(types: !152)
!152 = !{!153, !137, !144}
!153 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !122, size: 64)
!154 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem3obj9pool_baseaSEOS1_", scope: !122, file: !118, line: 106, type: !155, scopeLine: 106, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!155 = !DISubroutineType(types: !156)
!156 = !{!153, !137, !149}
!157 = !DISubprogram(name: "~pool_base", scope: !122, file: !118, line: 111, type: !135, scopeLine: 111, containingType: !122, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!158 = !DISubprogram(name: "open", linkageName: "_ZN4pmem3obj9pool_base4openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_", scope: !122, file: !118, line: 126, type: !159, scopeLine: 126, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!159 = !DISubroutineType(types: !160)
!160 = !{!122, !161, !161}
!161 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !162, size: 64)
!162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "string", scope: !45, file: !164, line: 74, baseType: !43)
!164 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/stringfwd.h", directory: "")
!165 = !DISubprogram(name: "create", linkageName: "_ZN4pmem3obj9pool_base6createERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_mj", scope: !122, file: !118, line: 156, type: !166, scopeLine: 156, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!166 = !DISubroutineType(types: !167)
!167 = !{!122, !161, !161, !168, !170}
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", scope: !2, file: !169, line: 231, baseType: !89)
!169 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/x86_64-linux-gnu/c++/7.5.0/bits/c++config.h", directory: "")
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !171, line: 70, baseType: !172)
!171 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !108, line: 138, baseType: !27)
!173 = !DISubprogram(name: "check", linkageName: "_ZN4pmem3obj9pool_base5checkERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_", scope: !122, file: !118, line: 184, type: !174, scopeLine: 184, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!174 = !DISubroutineType(types: !175)
!175 = !{!11, !161, !161}
!176 = !DISubprogram(name: "close", linkageName: "_ZN4pmem3obj9pool_base5closeEv", scope: !122, file: !118, line: 272, type: !135, scopeLine: 272, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!177 = !DISubprogram(name: "persist", linkageName: "_ZN4pmem3obj9pool_base7persistEPKvm", scope: !122, file: !118, line: 288, type: !178, scopeLine: 288, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!178 = !DISubroutineType(types: !179)
!179 = !{null, !137, !84, !180}
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !181, line: 46, baseType: !89)
!181 = !DIFile(filename: "llvm-project/build/lib/clang/11.0.0/include/stddef.h", directory: "/ssd1")
!182 = !DISubprogram(name: "flush", linkageName: "_ZN4pmem3obj9pool_base5flushEPKvm", scope: !122, file: !118, line: 324, type: !178, scopeLine: 324, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!183 = !DISubprogram(name: "drain", linkageName: "_ZN4pmem3obj9pool_base5drainEv", scope: !122, file: !118, line: 357, type: !135, scopeLine: 357, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!184 = !DISubprogram(name: "memcpy_persist", linkageName: "_ZN4pmem3obj9pool_base14memcpy_persistEPvPKvm", scope: !122, file: !118, line: 373, type: !185, scopeLine: 373, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!185 = !DISubroutineType(types: !186)
!186 = !{!71, !137, !71, !84, !180}
!187 = !DISubprogram(name: "memset_persist", linkageName: "_ZN4pmem3obj9pool_base14memset_persistEPvim", scope: !122, file: !118, line: 389, type: !188, scopeLine: 389, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!188 = !DISubroutineType(types: !189)
!189 = !{!71, !137, !71, !11, !180}
!190 = !DISubprogram(name: "handle", linkageName: "_ZN4pmem3obj9pool_base6handleEv", scope: !122, file: !118, line: 402, type: !191, scopeLine: 402, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!191 = !DISubroutineType(types: !192)
!192 = !{!130, !137}
!193 = !DISubprogram(name: "get_handle", linkageName: "_ZN4pmem3obj9pool_base10get_handleEv", scope: !122, file: !118, line: 408, type: !191, scopeLine: 408, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!194 = !DISubprogram(name: "pool", scope: !117, file: !118, line: 440, type: !195, scopeLine: 440, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!195 = !DISubroutineType(types: !196)
!196 = !{null, !197}
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!198 = !DISubprogram(name: "pool", scope: !117, file: !118, line: 445, type: !199, scopeLine: 445, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!199 = !DISubroutineType(types: !200)
!200 = !{null, !197, !201}
!201 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !202, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!203 = !DISubprogram(name: "pool", scope: !117, file: !118, line: 450, type: !204, scopeLine: 450, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!204 = !DISubroutineType(types: !205)
!205 = !{null, !197, !206}
!206 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !117, size: 64)
!207 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEaSERKS6_", scope: !117, file: !118, line: 455, type: !208, scopeLine: 455, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!208 = !DISubroutineType(types: !209)
!209 = !{!210, !197, !201}
!210 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !117, size: 64)
!211 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEaSEOS6_", scope: !117, file: !118, line: 460, type: !212, scopeLine: 460, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!212 = !DISubroutineType(types: !213)
!213 = !{!210, !197, !206}
!214 = !DISubprogram(name: "~pool", scope: !117, file: !118, line: 465, type: !195, scopeLine: 465, containingType: !117, virtualIndex: 0, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!215 = !DISubprogram(name: "pool", scope: !117, file: !118, line: 470, type: !216, scopeLine: 470, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!216 = !DISubroutineType(types: !217)
!217 = !{null, !197, !144}
!218 = !DISubprogram(name: "pool", scope: !117, file: !118, line: 477, type: !219, scopeLine: 477, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!219 = !DISubroutineType(types: !220)
!220 = !{null, !197, !149}
!221 = !DISubprogram(name: "root", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE4rootEv", scope: !117, file: !118, line: 595, type: !222, scopeLine: 595, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!222 = !DISubroutineType(types: !223)
!223 = !{!224, !197}
!224 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "persistent_ptr<PMDKMap<unsigned long, _stritem *>>", scope: !119, file: !225, line: 132, size: 128, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !226, templateParams: !249, identifier: "_ZTSN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEE")
!225 = !DIFile(filename: "../libpmemobj-cpp/include/libpmemobj++/persistent_ptr.hpp", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!226 = !{!227, !405, !409, !479, !549, !554, !560, !566, !570, !573, !574, !575, !580, !581, !584, !585, !586, !587}
!227 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !224, baseType: !228, flags: DIFlagPublic, extraData: i32 0)
!228 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "persistent_ptr_base<PMDKMap<unsigned long, _stritem *>>", scope: !230, file: !229, line: 68, size: 128, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !231, templateParams: !249, identifier: "_ZTSN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEE")
!229 = !DIFile(filename: "../libpmemobj-cpp/include/libpmemobj++/detail/persistent_ptr_base.hpp", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!230 = !DINamespace(name: "detail", scope: !92)
!231 = !{!232, !234, !238, !241, !360, !365, !369, !373, !376, !382, !385, !389, !394, !398, !401, !402}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "oid", scope: !228, file: !229, line: 332, baseType: !233, size: 128, flags: DIFlagProtected)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMEMoid", file: !79, line: 93, baseType: !102)
!234 = !DISubprogram(name: "persistent_ptr_base", scope: !228, file: !229, line: 84, type: !235, scopeLine: 84, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!235 = !DISubroutineType(types: !236)
!236 = !{null, !237}
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!238 = !DISubprogram(name: "persistent_ptr_base", scope: !228, file: !229, line: 102, type: !239, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!239 = !DISubroutineType(types: !240)
!240 = !{null, !237, !233}
!241 = !DISubprogram(name: "persistent_ptr_base", scope: !228, file: !229, line: 115, type: !242, scopeLine: 115, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!242 = !DISubroutineType(types: !243)
!243 = !{null, !237, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "element_type", scope: !228, file: !229, line: 79, baseType: !246)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !248, file: !247, line: 54, baseType: !251)
!247 = !DIFile(filename: "../libpmemobj-cpp/include/libpmemobj++/detail/specialization.hpp", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sp_element<PMDKMap<unsigned long, _stritem *>>", scope: !230, file: !247, line: 53, size: 8, flags: DIFlagTypePassByValue, elements: !77, templateParams: !249, identifier: "_ZTSN4pmem6detail10sp_elementI7PMDKMapImP8_stritemEEE")
!249 = !{!250}
!250 = !DITemplateTypeParameter(name: "T", type: !251)
!251 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "PMDKMap<unsigned long, _stritem *>", file: !252, line: 20, size: 128, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !253, templateParams: !357, identifier: "_ZTS7PMDKMapImP8_stritemE")
!252 = !DIFile(filename: "map.hpp", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!253 = !{!254, !306, !310, !313, !338, !342, !345, !348, !351}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "map_", scope: !251, file: !252, line: 76, baseType: !255, size: 128)
!255 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "hashmap_tx_toid", file: !256, line: 48, size: 128, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !257, identifier: "_ZTS15hashmap_tx_toid")
!256 = !DIFile(filename: "../pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!257 = !{!258, !259, !293, !299, !303}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "oid", scope: !255, file: !256, line: 48, baseType: !233, size: 128)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "_type", scope: !255, file: !256, line: 48, baseType: !260, size: 64)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hashmap_tx", file: !256, line: 84, size: 384, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !262, identifier: "_ZTS10hashmap_tx")
!262 = !{!263, !266, !267, !268, !269, !270}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !261, file: !256, line: 86, baseType: !264, size: 32)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !106, line: 26, baseType: !265)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !108, line: 41, baseType: !27)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "hash_fun_a", scope: !261, file: !256, line: 89, baseType: !264, size: 32, offset: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "hash_fun_b", scope: !261, file: !256, line: 90, baseType: !264, size: 32, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "hash_fun_p", scope: !261, file: !256, line: 91, baseType: !105, size: 64, offset: 128)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !261, file: !256, line: 94, baseType: !105, size: 64, offset: 192)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !261, file: !256, line: 97, baseType: !271, size: 128, offset: 256)
!271 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "buckets_toid", file: !256, line: 49, size: 128, flags: DIFlagTypePassByValue | DIFlagNonTrivial, elements: !272, identifier: "_ZTS12buckets_toid")
!272 = !{!273, !274, !277, !286, !290}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "oid", scope: !271, file: !256, line: 49, baseType: !233, size: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "_type", scope: !271, file: !256, line: 49, baseType: !275, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DICompositeType(tag: DW_TAG_structure_type, name: "buckets", file: !256, line: 77, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTS7buckets")
!277 = !DIDerivedType(tag: DW_TAG_member, name: "_type_num", scope: !271, file: !256, line: 49, baseType: !278, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_typedef, name: "buckets_toid_type_num", file: !256, line: 49, baseType: !280)
!280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 8048, elements: !284)
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !106, line: 24, baseType: !282)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !108, line: 37, baseType: !283)
!283 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!284 = !{!285}
!285 = !DISubrange(count: 1006)
!286 = !DISubprogram(name: "buckets_toid", scope: !271, file: !256, line: 49, type: !287, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !289}
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!290 = !DISubprogram(name: "buckets_toid", scope: !271, file: !256, line: 49, type: !291, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!291 = !DISubroutineType(types: !292)
!292 = !{null, !289, !233}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "_type_num", scope: !255, file: !256, line: 48, baseType: !294, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashmap_tx_toid_type_num", file: !256, line: 48, baseType: !296)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 8040, elements: !297)
!297 = !{!298}
!298 = !DISubrange(count: 1005)
!299 = !DISubprogram(name: "hashmap_tx_toid", scope: !255, file: !256, line: 48, type: !300, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!300 = !DISubroutineType(types: !301)
!301 = !{null, !302}
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!303 = !DISubprogram(name: "hashmap_tx_toid", scope: !255, file: !256, line: 48, type: !304, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!304 = !DISubroutineType(types: !305)
!305 = !{null, !302, !233}
!306 = !DISubprogram(name: "init", linkageName: "_ZN7PMDKMapImP8_stritemE4initEP11pmemobjpool", scope: !251, file: !252, line: 22, type: !307, scopeLine: 22, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!307 = !DISubroutineType(types: !308)
!308 = !{null, !309, !130}
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!310 = !DISubprogram(name: "createMap", linkageName: "_ZN7PMDKMapImP8_stritemE9createMapEP11pmemobjpool", scope: !251, file: !252, line: 27, type: !311, scopeLine: 27, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!311 = !DISubroutineType(types: !312)
!312 = !{!13, !309, !130}
!313 = !DISubprogram(name: "insert", linkageName: "_ZN7PMDKMapImP8_stritemE6insertEP11pmemobjpoolmS1_", scope: !251, file: !252, line: 39, type: !314, scopeLine: 39, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!314 = !DISubroutineType(types: !315)
!315 = !{null, !309, !130, !89, !316}
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_stritem", file: !318, line: 126, size: 960, flags: DIFlagTypePassByValue, elements: !319, identifier: "_ZTS8_stritem")
!318 = !DIFile(filename: "memcached.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!319 = !{!320, !321, !322, !323, !325, !326, !327, !329, !330, !331, !332, !333, !334}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !317, file: !318, line: 127, baseType: !316, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !317, file: !318, line: 128, baseType: !316, size: 64, offset: 64)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "h_next", scope: !317, file: !318, line: 129, baseType: !316, size: 64, offset: 128)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !317, file: !318, line: 130, baseType: !324, size: 32, offset: 192)
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "rel_time_t", file: !318, line: 73, baseType: !27)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "exptime", scope: !317, file: !318, line: 131, baseType: !324, size: 32, offset: 224)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !317, file: !318, line: 132, baseType: !11, size: 32, offset: 256)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !317, file: !318, line: 133, baseType: !328, size: 16, offset: 288)
!328 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "nsuffix", scope: !317, file: !318, line: 134, baseType: !281, size: 8, offset: 304)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "it_flags", scope: !317, file: !318, line: 135, baseType: !281, size: 8, offset: 312)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "slabs_clsid", scope: !317, file: !318, line: 136, baseType: !281, size: 8, offset: 320)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "nkey", scope: !317, file: !318, line: 137, baseType: !281, size: 8, offset: 328)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "cas_id", scope: !317, file: !318, line: 138, baseType: !105, size: 64, offset: 384)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !317, file: !318, line: 139, baseType: !335, size: 512, offset: 448)
!335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !71, size: 512, elements: !336)
!336 = !{!337}
!337 = !DISubrange(count: 8)
!338 = !DISubprogram(name: "find", linkageName: "_ZN7PMDKMapImP8_stritemE4findEP11pmemobjpoolm", scope: !251, file: !252, line: 46, type: !339, scopeLine: 46, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!339 = !DISubroutineType(types: !340)
!340 = !{!341, !309, !130, !89}
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!342 = !DISubprogram(name: "erase", linkageName: "_ZN7PMDKMapImP8_stritemE5eraseEP11pmemobjpoolm", scope: !251, file: !252, line: 54, type: !343, scopeLine: 54, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!343 = !DISubroutineType(types: !344)
!344 = !{!13, !309, !130, !89}
!345 = !DISubprogram(name: "size", linkageName: "_ZN7PMDKMapImP8_stritemE4sizeEP11pmemobjpool", scope: !251, file: !252, line: 61, type: !346, scopeLine: 61, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!346 = !DISubroutineType(types: !347)
!347 = !{!180, !309, !130}
!348 = !DISubprogram(name: "print", linkageName: "_ZN7PMDKMapImP8_stritemE5printEv", scope: !251, file: !252, line: 65, type: !349, scopeLine: 65, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!349 = !DISubroutineType(types: !350)
!350 = !{null, !309}
!351 = !DISubprogram(name: "ForEach", linkageName: "_ZN7PMDKMapImP8_stritemE7ForEachEP11pmemobjpoolPFim7pmemoidPvES6_", scope: !251, file: !252, line: 70, type: !352, scopeLine: 70, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!352 = !DISubroutineType(types: !353)
!353 = !{null, !309, !130, !354, !71}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = !DISubroutineType(types: !356)
!356 = !{!11, !89, !233, !71}
!357 = !{!358, !359}
!358 = !DITemplateTypeParameter(name: "K", type: !89)
!359 = !DITemplateTypeParameter(name: "V", type: !316)
!360 = !DISubprogram(name: "persistent_ptr_base", scope: !228, file: !229, line: 185, type: !361, scopeLine: 185, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!361 = !DISubroutineType(types: !362)
!362 = !{null, !237, !363}
!363 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !228)
!365 = !DISubprogram(name: "persistent_ptr_base", scope: !228, file: !229, line: 193, type: !366, scopeLine: 193, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!366 = !DISubroutineType(types: !367)
!367 = !{null, !237, !368}
!368 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !228, size: 64)
!369 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEaSEOS6_", scope: !228, file: !229, line: 203, type: !370, scopeLine: 203, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!370 = !DISubroutineType(types: !371)
!371 = !{!372, !237, !368}
!372 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !228, size: 64)
!373 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEaSERKS6_", scope: !228, file: !229, line: 222, type: !374, scopeLine: 222, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!374 = !DISubroutineType(types: !375)
!375 = !{!372, !237, !363}
!376 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEaSEODn", scope: !228, file: !229, line: 236, type: !377, scopeLine: 236, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!377 = !DISubroutineType(types: !378)
!378 = !{!372, !237, !379}
!379 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !380, size: 64)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "nullptr_t", scope: !2, file: !169, line: 235, baseType: !381)
!381 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "decltype(nullptr)")
!382 = !DISubprogram(name: "swap", linkageName: "_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE4swapERS6_", scope: !228, file: !229, line: 271, type: !383, scopeLine: 271, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!383 = !DISubroutineType(types: !384)
!384 = !{null, !237, !372}
!385 = !DISubprogram(name: "get", linkageName: "_ZNK4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE3getEv", scope: !228, file: !229, line: 286, type: !386, scopeLine: 286, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!386 = !DISubroutineType(types: !387)
!387 = !{!244, !388}
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!389 = !DISubprogram(name: "raw", linkageName: "_ZNK4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE3rawEv", scope: !228, file: !229, line: 304, type: !390, scopeLine: 304, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!390 = !DISubroutineType(types: !391)
!391 = !{!392, !388}
!392 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !233)
!394 = !DISubprogram(name: "raw_ptr", linkageName: "_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE7raw_ptrEv", scope: !228, file: !229, line: 317, type: !395, scopeLine: 317, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!395 = !DISubroutineType(types: !396)
!396 = !{!397, !237}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!398 = !DISubprogram(name: "operator bool", linkageName: "_ZNK4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEcvbEv", scope: !228, file: !229, line: 325, type: !399, scopeLine: 325, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!399 = !DISubroutineType(types: !400)
!400 = !{!13, !388}
!401 = !DISubprogram(name: "verify_type", linkageName: "_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE11verify_typeEv", scope: !228, file: !229, line: 335, type: !235, scopeLine: 335, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!402 = !DISubprogram(name: "persistent_ptr_base", scope: !228, file: !229, line: 348, type: !403, scopeLine: 348, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!403 = !DISubroutineType(types: !404)
!404 = !{null, !237, !244, !11}
!405 = !DISubprogram(name: "persistent_ptr", scope: !224, file: !225, line: 134, type: !406, scopeLine: 134, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!406 = !DISubroutineType(types: !407)
!407 = !{null, !408}
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!409 = !DISubprogram(name: "persistent_ptr", scope: !224, file: !225, line: 140, type: !410, scopeLine: 140, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!410 = !DISubroutineType(types: !411)
!411 = !{null, !408, !412}
!412 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !413, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !414)
!414 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "persistent_ptr<void>", scope: !119, file: !225, line: 68, size: 128, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !415, templateParams: !434, identifier: "_ZTSN4pmem3obj14persistent_ptrIvEE")
!415 = !{!416, !475}
!416 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !414, baseType: !417, flags: DIFlagPublic, extraData: i32 0)
!417 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "persistent_ptr_base<void>", scope: !230, file: !229, line: 68, size: 128, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !418, templateParams: !434, identifier: "_ZTSN4pmem6detail19persistent_ptr_baseIvEE")
!418 = !{!419, !420, !424, !427, !436, !441, !445, !449, !452, !455, !458, !462, !465, !468, !471, !472}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "oid", scope: !417, file: !229, line: 332, baseType: !233, size: 128, flags: DIFlagProtected)
!420 = !DISubprogram(name: "persistent_ptr_base", scope: !417, file: !229, line: 84, type: !421, scopeLine: 84, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!421 = !DISubroutineType(types: !422)
!422 = !{null, !423}
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!424 = !DISubprogram(name: "persistent_ptr_base", scope: !417, file: !229, line: 102, type: !425, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!425 = !DISubroutineType(types: !426)
!426 = !{null, !423, !233}
!427 = !DISubprogram(name: "persistent_ptr_base", scope: !417, file: !229, line: 115, type: !428, scopeLine: 115, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!428 = !DISubroutineType(types: !429)
!429 = !{null, !423, !430}
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "element_type", scope: !417, file: !229, line: 79, baseType: !432)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !433, file: !247, line: 54, baseType: null)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sp_element<void>", scope: !230, file: !247, line: 53, size: 8, flags: DIFlagTypePassByValue, elements: !77, templateParams: !434, identifier: "_ZTSN4pmem6detail10sp_elementIvEE")
!434 = !{!435}
!435 = !DITemplateTypeParameter(name: "T", type: null)
!436 = !DISubprogram(name: "persistent_ptr_base", scope: !417, file: !229, line: 185, type: !437, scopeLine: 185, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!437 = !DISubroutineType(types: !438)
!438 = !{null, !423, !439}
!439 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !440, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !417)
!441 = !DISubprogram(name: "persistent_ptr_base", scope: !417, file: !229, line: 193, type: !442, scopeLine: 193, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!442 = !DISubroutineType(types: !443)
!443 = !{null, !423, !444}
!444 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !417, size: 64)
!445 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem6detail19persistent_ptr_baseIvEaSEOS2_", scope: !417, file: !229, line: 203, type: !446, scopeLine: 203, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!446 = !DISubroutineType(types: !447)
!447 = !{!448, !423, !444}
!448 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !417, size: 64)
!449 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem6detail19persistent_ptr_baseIvEaSERKS2_", scope: !417, file: !229, line: 222, type: !450, scopeLine: 222, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!450 = !DISubroutineType(types: !451)
!451 = !{!448, !423, !439}
!452 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem6detail19persistent_ptr_baseIvEaSEODn", scope: !417, file: !229, line: 236, type: !453, scopeLine: 236, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!453 = !DISubroutineType(types: !454)
!454 = !{!448, !423, !379}
!455 = !DISubprogram(name: "swap", linkageName: "_ZN4pmem6detail19persistent_ptr_baseIvE4swapERS2_", scope: !417, file: !229, line: 271, type: !456, scopeLine: 271, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!456 = !DISubroutineType(types: !457)
!457 = !{null, !423, !448}
!458 = !DISubprogram(name: "get", linkageName: "_ZNK4pmem6detail19persistent_ptr_baseIvE3getEv", scope: !417, file: !229, line: 286, type: !459, scopeLine: 286, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!459 = !DISubroutineType(types: !460)
!460 = !{!430, !461}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!462 = !DISubprogram(name: "raw", linkageName: "_ZNK4pmem6detail19persistent_ptr_baseIvE3rawEv", scope: !417, file: !229, line: 304, type: !463, scopeLine: 304, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!463 = !DISubroutineType(types: !464)
!464 = !{!392, !461}
!465 = !DISubprogram(name: "raw_ptr", linkageName: "_ZN4pmem6detail19persistent_ptr_baseIvE7raw_ptrEv", scope: !417, file: !229, line: 317, type: !466, scopeLine: 317, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!466 = !DISubroutineType(types: !467)
!467 = !{!397, !423}
!468 = !DISubprogram(name: "operator bool", linkageName: "_ZNK4pmem6detail19persistent_ptr_baseIvEcvbEv", scope: !417, file: !229, line: 325, type: !469, scopeLine: 325, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!469 = !DISubroutineType(types: !470)
!470 = !{!13, !461}
!471 = !DISubprogram(name: "verify_type", linkageName: "_ZN4pmem6detail19persistent_ptr_baseIvE11verify_typeEv", scope: !417, file: !229, line: 335, type: !421, scopeLine: 335, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!472 = !DISubprogram(name: "persistent_ptr_base", scope: !417, file: !229, line: 348, type: !473, scopeLine: 348, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!473 = !DISubroutineType(types: !474)
!474 = !{null, !423, !430, !11}
!475 = !DISubprogram(name: "persistent_ptr", scope: !414, file: !225, line: 70, type: !476, scopeLine: 70, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!476 = !DISubroutineType(types: !477)
!477 = !{null, !478}
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!479 = !DISubprogram(name: "persistent_ptr", scope: !224, file: !225, line: 148, type: !480, scopeLine: 148, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!480 = !DISubroutineType(types: !481)
!481 = !{null, !408, !482}
!482 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !483, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "persistent_ptr<const void>", scope: !119, file: !225, line: 79, size: 128, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !485, templateParams: !504, identifier: "_ZTSN4pmem3obj14persistent_ptrIKvEE")
!485 = !{!486, !545}
!486 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !484, baseType: !487, flags: DIFlagPublic, extraData: i32 0)
!487 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "persistent_ptr_base<const void>", scope: !230, file: !229, line: 68, size: 128, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !488, templateParams: !504, identifier: "_ZTSN4pmem6detail19persistent_ptr_baseIKvEE")
!488 = !{!489, !490, !494, !497, !506, !511, !515, !519, !522, !525, !528, !532, !535, !538, !541, !542}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "oid", scope: !487, file: !229, line: 332, baseType: !233, size: 128, flags: DIFlagProtected)
!490 = !DISubprogram(name: "persistent_ptr_base", scope: !487, file: !229, line: 84, type: !491, scopeLine: 84, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!491 = !DISubroutineType(types: !492)
!492 = !{null, !493}
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!494 = !DISubprogram(name: "persistent_ptr_base", scope: !487, file: !229, line: 102, type: !495, scopeLine: 102, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!495 = !DISubroutineType(types: !496)
!496 = !{null, !493, !233}
!497 = !DISubprogram(name: "persistent_ptr_base", scope: !487, file: !229, line: 115, type: !498, scopeLine: 115, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!498 = !DISubroutineType(types: !499)
!499 = !{null, !493, !500}
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "element_type", scope: !487, file: !229, line: 79, baseType: !502)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !503, file: !247, line: 54, baseType: !85)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sp_element<const void>", scope: !230, file: !247, line: 53, size: 8, flags: DIFlagTypePassByValue, elements: !77, templateParams: !504, identifier: "_ZTSN4pmem6detail10sp_elementIKvEE")
!504 = !{!505}
!505 = !DITemplateTypeParameter(name: "T", type: !85)
!506 = !DISubprogram(name: "persistent_ptr_base", scope: !487, file: !229, line: 185, type: !507, scopeLine: 185, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!507 = !DISubroutineType(types: !508)
!508 = !{null, !493, !509}
!509 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !510, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !487)
!511 = !DISubprogram(name: "persistent_ptr_base", scope: !487, file: !229, line: 193, type: !512, scopeLine: 193, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!512 = !DISubroutineType(types: !513)
!513 = !{null, !493, !514}
!514 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !487, size: 64)
!515 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem6detail19persistent_ptr_baseIKvEaSEOS3_", scope: !487, file: !229, line: 203, type: !516, scopeLine: 203, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!516 = !DISubroutineType(types: !517)
!517 = !{!518, !493, !514}
!518 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !487, size: 64)
!519 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem6detail19persistent_ptr_baseIKvEaSERKS3_", scope: !487, file: !229, line: 222, type: !520, scopeLine: 222, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!520 = !DISubroutineType(types: !521)
!521 = !{!518, !493, !509}
!522 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem6detail19persistent_ptr_baseIKvEaSEODn", scope: !487, file: !229, line: 236, type: !523, scopeLine: 236, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!523 = !DISubroutineType(types: !524)
!524 = !{!518, !493, !379}
!525 = !DISubprogram(name: "swap", linkageName: "_ZN4pmem6detail19persistent_ptr_baseIKvE4swapERS3_", scope: !487, file: !229, line: 271, type: !526, scopeLine: 271, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!526 = !DISubroutineType(types: !527)
!527 = !{null, !493, !518}
!528 = !DISubprogram(name: "get", linkageName: "_ZNK4pmem6detail19persistent_ptr_baseIKvE3getEv", scope: !487, file: !229, line: 286, type: !529, scopeLine: 286, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!529 = !DISubroutineType(types: !530)
!530 = !{!500, !531}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!532 = !DISubprogram(name: "raw", linkageName: "_ZNK4pmem6detail19persistent_ptr_baseIKvE3rawEv", scope: !487, file: !229, line: 304, type: !533, scopeLine: 304, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!533 = !DISubroutineType(types: !534)
!534 = !{!392, !531}
!535 = !DISubprogram(name: "raw_ptr", linkageName: "_ZN4pmem6detail19persistent_ptr_baseIKvE7raw_ptrEv", scope: !487, file: !229, line: 317, type: !536, scopeLine: 317, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!536 = !DISubroutineType(types: !537)
!537 = !{!397, !493}
!538 = !DISubprogram(name: "operator bool", linkageName: "_ZNK4pmem6detail19persistent_ptr_baseIKvEcvbEv", scope: !487, file: !229, line: 325, type: !539, scopeLine: 325, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!539 = !DISubroutineType(types: !540)
!540 = !{!13, !531}
!541 = !DISubprogram(name: "verify_type", linkageName: "_ZN4pmem6detail19persistent_ptr_baseIKvE11verify_typeEv", scope: !487, file: !229, line: 335, type: !491, scopeLine: 335, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!542 = !DISubprogram(name: "persistent_ptr_base", scope: !487, file: !229, line: 348, type: !543, scopeLine: 348, flags: DIFlagProtected | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!543 = !DISubroutineType(types: !544)
!544 = !{null, !493, !500, !11}
!545 = !DISubprogram(name: "persistent_ptr", scope: !484, file: !225, line: 82, type: !546, scopeLine: 82, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!546 = !DISubroutineType(types: !547)
!547 = !{null, !548}
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!549 = !DISubprogram(name: "operator persistent_ptr", linkageName: "_ZNK4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEcvNS1_IvEEEv", scope: !224, file: !225, line: 156, type: !550, scopeLine: 156, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!550 = !DISubroutineType(types: !551)
!551 = !{!414, !552}
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!554 = !DISubprogram(name: "operator*", linkageName: "_ZNK4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEdeEv", scope: !224, file: !225, line: 164, type: !555, scopeLine: 164, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!555 = !DISubroutineType(types: !556)
!556 = !{!557, !552}
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !558, file: !247, line: 71, baseType: !559)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sp_dereference<PMDKMap<unsigned long, _stritem *>>", scope: !230, file: !247, line: 70, size: 8, flags: DIFlagTypePassByValue, elements: !77, templateParams: !249, identifier: "_ZTSN4pmem6detail14sp_dereferenceI7PMDKMapImP8_stritemEEE")
!559 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !251, size: 64)
!560 = !DISubprogram(name: "operator->", linkageName: "_ZNK4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEptEv", scope: !224, file: !225, line: 173, type: !561, scopeLine: 173, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!561 = !DISubroutineType(types: !562)
!562 = !{!563, !552}
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !564, file: !247, line: 108, baseType: !565)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sp_member_access<PMDKMap<unsigned long, _stritem *>>", scope: !230, file: !247, line: 107, size: 8, flags: DIFlagTypePassByValue, elements: !77, templateParams: !249, identifier: "_ZTSN4pmem6detail16sp_member_accessI7PMDKMapImP8_stritemEEE")
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!566 = !DISubprogram(name: "operator++", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEppEv", scope: !224, file: !225, line: 204, type: !567, scopeLine: 204, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!567 = !DISubroutineType(types: !568)
!568 = !{!569, !408}
!569 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !224, size: 64)
!570 = !DISubprogram(name: "operator++", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEppEi", scope: !224, file: !225, line: 216, type: !571, scopeLine: 216, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!571 = !DISubroutineType(types: !572)
!572 = !{!224, !408, !11}
!573 = !DISubprogram(name: "operator--", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEmmEv", scope: !224, file: !225, line: 228, type: !567, scopeLine: 228, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!574 = !DISubprogram(name: "operator--", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEmmEi", scope: !224, file: !225, line: 240, type: !571, scopeLine: 240, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!575 = !DISubprogram(name: "operator+=", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEpLEl", scope: !224, file: !225, line: 252, type: !576, scopeLine: 252, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!576 = !DISubroutineType(types: !577)
!577 = !{!569, !408, !578}
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", scope: !2, file: !169, line: 232, baseType: !579)
!579 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!580 = !DISubprogram(name: "operator-=", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEmIEl", scope: !224, file: !225, line: 264, type: !576, scopeLine: 264, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!581 = !DISubprogram(name: "persist", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEE7persistERNS0_9pool_baseE", scope: !224, file: !225, line: 278, type: !582, scopeLine: 278, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!582 = !DISubroutineType(types: !583)
!583 = !{null, !408, !153}
!584 = !DISubprogram(name: "persist", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEE7persistEv", scope: !224, file: !225, line: 290, type: !406, scopeLine: 290, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!585 = !DISubprogram(name: "flush", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEE5flushERNS0_9pool_baseE", scope: !224, file: !225, line: 307, type: !582, scopeLine: 307, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!586 = !DISubprogram(name: "flush", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEE5flushEv", scope: !224, file: !225, line: 319, type: !406, scopeLine: 319, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!587 = !DISubprogram(name: "pointer_to", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEE10pointer_toERS5_", scope: !224, file: !225, line: 343, type: !588, scopeLine: 343, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!588 = !DISubroutineType(types: !589)
!589 = !{!224, !559}
!590 = !DISubprogram(name: "get_root", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE8get_rootEv", scope: !117, file: !118, line: 605, type: !222, scopeLine: 605, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!591 = !DISubprogram(name: "open", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE4openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_", scope: !117, file: !118, line: 623, type: !592, scopeLine: 623, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!592 = !DISubroutineType(types: !593)
!593 = !{!117, !161, !161}
!594 = !DISubprogram(name: "create", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE6createERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_mj", scope: !117, file: !118, line: 645, type: !595, scopeLine: 645, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!595 = !DISubroutineType(types: !596)
!596 = !{!117, !161, !161, !168, !170}
!597 = !DISubprogram(name: "check", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE5checkERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_", scope: !117, file: !118, line: 662, type: !174, scopeLine: 662, flags: DIFlagPublic | DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!598 = !DISubprogram(name: "pmemobj_open", scope: !599, file: !599, line: 73, type: !600, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!599 = !DIFile(filename: "../pmdk/src/include/libpmemobj/pool_base.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!600 = !DISubroutineType(types: !601)
!601 = !{!82, !602, !602}
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !73)
!604 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "pool_error", scope: !92, file: !91, line: 53, size: 128, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !605, vtableHolder: !97, identifier: "_ZTSN4pmem10pool_errorE")
!605 = !{!606}
!606 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !604, baseType: !95, flags: DIFlagPublic, extraData: i32 0)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", scope: !43, file: !42, line: 88, baseType: !608)
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", scope: !610, file: !609, line: 61, baseType: !635)
!609 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/alloc_traits.h", directory: "")
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__alloc_traits<std::allocator<char>>", scope: !26, file: !609, line: 50, size: 8, flags: DIFlagTypePassByValue, elements: !611, templateParams: !641, identifier: "_ZTSN9__gnu_cxx14__alloc_traitsISaIcEEE")
!611 = !{!612, !643, !648, !652, !655, !656, !657, !658}
!612 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !610, baseType: !613, extraData: i32 0)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "allocator_traits<std::allocator<char>>", scope: !2, file: !614, line: 384, size: 8, flags: DIFlagTypePassByValue, elements: !615, templateParams: !641, identifier: "_ZTSSt16allocator_traitsISaIcEE")
!614 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/alloc_traits.h", directory: "")
!615 = !{!616, !625, !629, !632, !638}
!616 = !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaIcEE8allocateERS0_m", scope: !613, file: !614, line: 435, type: !617, scopeLine: 435, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!617 = !DISubroutineType(types: !618)
!618 = !{!619, !620, !624}
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !613, file: !614, line: 392, baseType: !72)
!620 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocator_type", scope: !613, file: !614, line: 387, baseType: !622)
!622 = !DICompositeType(tag: DW_TAG_class_type, name: "allocator<char>", scope: !2, file: !623, line: 173, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSSaIcE")
!623 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/allocator.h", directory: "")
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", file: !614, line: 407, baseType: !168)
!625 = !DISubprogram(name: "allocate", linkageName: "_ZNSt16allocator_traitsISaIcEE8allocateERS0_mPKv", scope: !613, file: !614, line: 449, type: !626, scopeLine: 449, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!626 = !DISubroutineType(types: !627)
!627 = !{!619, !620, !624, !628}
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_void_pointer", file: !614, line: 401, baseType: !84)
!629 = !DISubprogram(name: "deallocate", linkageName: "_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm", scope: !613, file: !614, line: 461, type: !630, scopeLine: 461, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!630 = !DISubroutineType(types: !631)
!631 = !{null, !620, !619, !624}
!632 = !DISubprogram(name: "max_size", linkageName: "_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_", scope: !613, file: !614, line: 495, type: !633, scopeLine: 495, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!633 = !DISubroutineType(types: !634)
!634 = !{!635, !636}
!635 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", scope: !613, file: !614, line: 407, baseType: !168)
!636 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !637, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !621)
!638 = !DISubprogram(name: "select_on_container_copy_construction", linkageName: "_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_", scope: !613, file: !614, line: 504, type: !639, scopeLine: 504, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!639 = !DISubroutineType(types: !640)
!640 = !{!621, !636}
!641 = !{!642}
!642 = !DITemplateTypeParameter(name: "_Alloc", type: !622)
!643 = !DISubprogram(name: "_S_select_on_copy", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIcEE17_S_select_on_copyERKS1_", scope: !610, file: !609, line: 94, type: !644, scopeLine: 94, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!644 = !DISubroutineType(types: !645)
!645 = !{!622, !646}
!646 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !622)
!648 = !DISubprogram(name: "_S_on_swap", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIcEE10_S_on_swapERS1_S3_", scope: !610, file: !609, line: 97, type: !649, scopeLine: 97, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!649 = !DISubroutineType(types: !650)
!650 = !{null, !651, !651}
!651 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !622, size: 64)
!652 = !DISubprogram(name: "_S_propagate_on_copy_assign", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIcEE27_S_propagate_on_copy_assignEv", scope: !610, file: !609, line: 100, type: !653, scopeLine: 100, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!653 = !DISubroutineType(types: !654)
!654 = !{!13}
!655 = !DISubprogram(name: "_S_propagate_on_move_assign", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIcEE27_S_propagate_on_move_assignEv", scope: !610, file: !609, line: 103, type: !653, scopeLine: 103, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!656 = !DISubprogram(name: "_S_propagate_on_swap", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIcEE20_S_propagate_on_swapEv", scope: !610, file: !609, line: 106, type: !653, scopeLine: 106, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!657 = !DISubprogram(name: "_S_always_equal", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIcEE15_S_always_equalEv", scope: !610, file: !609, line: 109, type: !653, scopeLine: 109, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!658 = !DISubprogram(name: "_S_nothrow_move", linkageName: "_ZN9__gnu_cxx14__alloc_traitsISaIcEE15_S_nothrow_moveEv", scope: !610, file: !609, line: 112, type: !653, scopeLine: 112, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "char_type", scope: !662, file: !661, line: 277, baseType: !73)
!661 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/char_traits.h", directory: "")
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "char_traits<char>", scope: !2, file: !661, line: 275, size: 8, flags: DIFlagTypePassByValue, elements: !663, templateParams: !709, identifier: "_ZTSSt11char_traitsIcE")
!663 = !{!664, !670, !673, !674, !678, !681, !684, !687, !688, !691, !697, !700, !703, !706}
!664 = !DISubprogram(name: "assign", linkageName: "_ZNSt11char_traitsIcE6assignERcRKc", scope: !662, file: !661, line: 284, type: !665, scopeLine: 284, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!665 = !DISubroutineType(types: !666)
!666 = !{null, !667, !668}
!667 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !660, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !669, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !660)
!670 = !DISubprogram(name: "eq", linkageName: "_ZNSt11char_traitsIcE2eqERKcS2_", scope: !662, file: !661, line: 288, type: !671, scopeLine: 288, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!671 = !DISubroutineType(types: !672)
!672 = !{!13, !668, !668}
!673 = !DISubprogram(name: "lt", linkageName: "_ZNSt11char_traitsIcE2ltERKcS2_", scope: !662, file: !661, line: 292, type: !671, scopeLine: 292, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!674 = !DISubprogram(name: "compare", linkageName: "_ZNSt11char_traitsIcE7compareEPKcS2_m", scope: !662, file: !661, line: 300, type: !675, scopeLine: 300, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!675 = !DISubroutineType(types: !676)
!676 = !{!11, !677, !677, !168}
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!678 = !DISubprogram(name: "length", linkageName: "_ZNSt11char_traitsIcE6lengthEPKc", scope: !662, file: !661, line: 314, type: !679, scopeLine: 314, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!679 = !DISubroutineType(types: !680)
!680 = !{!168, !677}
!681 = !DISubprogram(name: "find", linkageName: "_ZNSt11char_traitsIcE4findEPKcmRS1_", scope: !662, file: !661, line: 324, type: !682, scopeLine: 324, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!682 = !DISubroutineType(types: !683)
!683 = !{!677, !677, !168, !668}
!684 = !DISubprogram(name: "move", linkageName: "_ZNSt11char_traitsIcE4moveEPcPKcm", scope: !662, file: !661, line: 338, type: !685, scopeLine: 338, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!685 = !DISubroutineType(types: !686)
!686 = !{!659, !659, !677, !168}
!687 = !DISubprogram(name: "copy", linkageName: "_ZNSt11char_traitsIcE4copyEPcPKcm", scope: !662, file: !661, line: 346, type: !685, scopeLine: 346, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!688 = !DISubprogram(name: "assign", linkageName: "_ZNSt11char_traitsIcE6assignEPcmc", scope: !662, file: !661, line: 354, type: !689, scopeLine: 354, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!689 = !DISubroutineType(types: !690)
!690 = !{!659, !659, !168, !660}
!691 = !DISubprogram(name: "to_char_type", linkageName: "_ZNSt11char_traitsIcE12to_char_typeERKi", scope: !662, file: !661, line: 362, type: !692, scopeLine: 362, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!692 = !DISubroutineType(types: !693)
!693 = !{!660, !694}
!694 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !695, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_type", scope: !662, file: !661, line: 278, baseType: !11)
!697 = !DISubprogram(name: "to_int_type", linkageName: "_ZNSt11char_traitsIcE11to_int_typeERKc", scope: !662, file: !661, line: 368, type: !698, scopeLine: 368, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!698 = !DISubroutineType(types: !699)
!699 = !{!696, !668}
!700 = !DISubprogram(name: "eq_int_type", linkageName: "_ZNSt11char_traitsIcE11eq_int_typeERKiS2_", scope: !662, file: !661, line: 372, type: !701, scopeLine: 372, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!701 = !DISubroutineType(types: !702)
!702 = !{!13, !694, !694}
!703 = !DISubprogram(name: "eof", linkageName: "_ZNSt11char_traitsIcE3eofEv", scope: !662, file: !661, line: 376, type: !704, scopeLine: 376, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!704 = !DISubroutineType(types: !705)
!705 = !{!696}
!706 = !DISubprogram(name: "not_eof", linkageName: "_ZNSt11char_traitsIcE7not_eofERKi", scope: !662, file: !661, line: 380, type: !707, scopeLine: 380, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!707 = !DISubroutineType(types: !708)
!708 = !{!696, !694}
!709 = !{!710}
!710 = !DITemplateTypeParameter(name: "_CharT", type: !73)
!711 = !DISubprogram(name: "pmemobj_root", scope: !599, file: !599, line: 106, type: !712, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!712 = !DISubroutineType(types: !713)
!713 = !{!102, !82, !89}
!714 = !DISubprogram(name: "pmemobj_create", scope: !599, file: !599, line: 80, type: !715, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!715 = !DISubroutineType(types: !716)
!716 = !{!82, !602, !602, !89, !27}
!717 = !DISubprogram(name: "pmemobj_errormsg", scope: !79, file: !79, line: 296, type: !718, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!718 = !DISubroutineType(types: !719)
!719 = !{!602}
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "streamsize", scope: !2, file: !721, line: 98, baseType: !578)
!721 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/postypes.h", directory: "")
!722 = !DISubprogram(name: "pmemobj_zalloc", scope: !723, file: !723, line: 75, type: !724, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!723 = !DIFile(filename: "../pmdk/src/include/libpmemobj/atomic_base.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!724 = !DISubroutineType(types: !725)
!725 = !{!11, !82, !726, !89, !89}
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!727 = !DISubprogram(name: "hm_tx_create", scope: !256, file: !256, line: 53, type: !728, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!728 = !DISubroutineType(types: !729)
!729 = !{!11, !82, !730, !71}
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!731 = !DISubprogram(name: "perror", scope: !732, file: !732, line: 775, type: !733, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!732 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!733 = !DISubroutineType(types: !734)
!734 = !{null, !602}
!735 = !DISubprogram(name: "hm_tx_get", scope: !256, file: !256, line: 59, type: !736, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!736 = !DISubroutineType(types: !737)
!737 = !{!102, !82, !255, !89}
!738 = !DISubprogram(name: "hm_tx_insert", scope: !256, file: !256, line: 55, type: !739, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!739 = !DISubroutineType(types: !740)
!740 = !{!11, !82, !255, !89, !102}
!741 = !DISubprogram(name: "hm_tx_remove", scope: !256, file: !256, line: 57, type: !736, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !77)
!742 = !{!0, !19, !743, !745}
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "OID_NULL", linkageName: "_ZL8OID_NULL", scope: !21, file: !79, line: 95, type: !393, isLocal: true, isDefinition: true)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "curr_pool", linkageName: "_ZL9curr_pool", scope: !21, file: !747, line: 25, type: !130, isLocal: true, isDefinition: true)
!747 = !DIFile(filename: "new_assoc.cpp", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!748 = !{!749, !755, !759, !765, !769, !774, !776, !782, !786, !792, !801, !805, !809, !813, !815, !819, !823, !827, !831, !835, !843, !847, !851, !853, !855, !859, !863, !868, !872, !876, !878, !886, !890, !897, !899, !903, !907, !911, !915, !920, !925, !930, !931, !932, !933, !935, !936, !937, !938, !939, !940, !941, !943, !944, !945, !946, !947, !948, !949, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !984, !988, !994, !998, !1002, !1006, !1010, !1012, !1014, !1018, !1022, !1026, !1030, !1034, !1036, !1038, !1040, !1044, !1048, !1052, !1054, !1056, !1108, !1112, !1116, !1133, !1136, !1141, !1194, !1199, !1203, !1207, !1211, !1215, !1217, !1219, !1223, !1229, !1233, !1239, !1245, !1247, !1251, !1255, !1259, !1263, !1274, !1276, !1280, !1284, !1288, !1290, !1294, !1298, !1302, !1304, !1306, !1310, !1319, !1323, !1327, !1331, !1333, !1339, !1341, !1347, !1351, !1355, !1359, !1363, !1367, !1371, !1373, !1375, !1379, !1383, !1387, !1389, !1393, !1397, !1399, !1401, !1405, !1409, !1413, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1432, !1436, !1439, !1442, !1444, !1446, !1448, !1450, !1452, !1454, !1456, !1458, !1461, !1463, !1464, !1467, !1468, !1469, !1471, !1473, !1475, !1477, !1479, !1481, !1483, !1485, !1488, !1489, !1491, !1492, !1496, !1500, !1505, !1509, !1511, !1513, !1515, !1517, !1519, !1521, !1523, !1525, !1527, !1529, !1531, !1533, !1535, !1539, !1544, !1549, !1553, !1555, !1557, !1559, !1561, !1568, !1572, !1576, !1580, !1584, !1588, !1592, !1596, !1598, !1602, !1608, !1612, !1616, !1618, !1621, !1623, !1627, !1629, !1631, !1633, !1635, !1637, !1639, !1641, !1645, !1649, !1653, !1657, !1661, !1665, !1667, !1671, !1675, !1679, !1683, !1685, !1687, !1691, !1695, !1696, !1697, !1698, !1699, !1700, !1705, !1707, !1710, !1716, !1719, !1720, !1722, !1724, !1726, !1728, !1732, !1734, !1736, !1738, !1740, !1742, !1744, !1746, !1748, !1752, !1756, !1758, !1762, !1766}
!749 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !750, file: !754, line: 52)
!750 = !DISubprogram(name: "abs", scope: !751, file: !751, line: 837, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!751 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!752 = !DISubroutineType(types: !753)
!753 = !{!11, !11}
!754 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/std_abs.h", directory: "")
!755 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !756, file: !758, line: 127)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "div_t", file: !751, line: 62, baseType: !757)
!757 = !DICompositeType(tag: DW_TAG_structure_type, file: !751, line: 58, flags: DIFlagFwdDecl, identifier: "_ZTS5div_t")
!758 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/cstdlib", directory: "")
!759 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !760, file: !758, line: 128)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "ldiv_t", file: !751, line: 70, baseType: !761)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !751, line: 66, size: 128, flags: DIFlagTypePassByValue, elements: !762, identifier: "_ZTS6ldiv_t")
!762 = !{!763, !764}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !761, file: !751, line: 68, baseType: !579, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !761, file: !751, line: 69, baseType: !579, size: 64, offset: 64)
!765 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !766, file: !758, line: 130)
!766 = !DISubprogram(name: "abort", scope: !751, file: !751, line: 588, type: !767, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!767 = !DISubroutineType(types: !768)
!768 = !{null}
!769 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !770, file: !758, line: 134)
!770 = !DISubprogram(name: "atexit", scope: !751, file: !751, line: 592, type: !771, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!771 = !DISubroutineType(types: !772)
!772 = !{!11, !773}
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!774 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !775, file: !758, line: 137)
!775 = !DISubprogram(name: "at_quick_exit", scope: !751, file: !751, line: 597, type: !771, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!776 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !777, file: !758, line: 140)
!777 = !DISubprogram(name: "atof", scope: !778, file: !778, line: 25, type: !779, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!778 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!779 = !DISubroutineType(types: !780)
!780 = !{!781, !602}
!781 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!782 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !783, file: !758, line: 141)
!783 = !DISubprogram(name: "atoi", scope: !751, file: !751, line: 361, type: !784, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!784 = !DISubroutineType(types: !785)
!785 = !{!11, !602}
!786 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !787, file: !758, line: 142)
!787 = distinct !DISubprogram(name: "atol", scope: !751, file: !751, line: 366, type: !788, scopeLine: 367, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, retainedNodes: !790)
!788 = !DISubroutineType(types: !789)
!789 = !{!579, !602}
!790 = !{!791}
!791 = !DILocalVariable(name: "__nptr", arg: 1, scope: !787, file: !751, line: 366, type: !602)
!792 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !793, file: !758, line: 143)
!793 = !DISubprogram(name: "bsearch", scope: !794, file: !794, line: 20, type: !795, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!794 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!795 = !DISubroutineType(types: !796)
!796 = !{!71, !84, !84, !180, !180, !797}
!797 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !751, line: 805, baseType: !798)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DISubroutineType(types: !800)
!800 = !{!11, !84, !84}
!801 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !802, file: !758, line: 144)
!802 = !DISubprogram(name: "calloc", scope: !751, file: !751, line: 541, type: !803, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!803 = !DISubroutineType(types: !804)
!804 = !{!71, !180, !180}
!805 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !806, file: !758, line: 145)
!806 = !DISubprogram(name: "div", scope: !751, file: !751, line: 849, type: !807, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!807 = !DISubroutineType(types: !808)
!808 = !{!756, !11, !11}
!809 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !810, file: !758, line: 146)
!810 = !DISubprogram(name: "exit", scope: !751, file: !751, line: 614, type: !811, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!811 = !DISubroutineType(types: !812)
!812 = !{null, !11}
!813 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !814, file: !758, line: 147)
!814 = !DISubprogram(name: "free", scope: !751, file: !751, line: 563, type: !115, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!815 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !816, file: !758, line: 148)
!816 = !DISubprogram(name: "getenv", scope: !751, file: !751, line: 631, type: !817, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!817 = !DISubroutineType(types: !818)
!818 = !{!72, !602}
!819 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !820, file: !758, line: 149)
!820 = !DISubprogram(name: "labs", scope: !751, file: !751, line: 838, type: !821, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!821 = !DISubroutineType(types: !822)
!822 = !{!579, !579}
!823 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !824, file: !758, line: 150)
!824 = !DISubprogram(name: "ldiv", scope: !751, file: !751, line: 851, type: !825, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!825 = !DISubroutineType(types: !826)
!826 = !{!760, !579, !579}
!827 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !828, file: !758, line: 151)
!828 = !DISubprogram(name: "malloc", scope: !751, file: !751, line: 539, type: !829, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!829 = !DISubroutineType(types: !830)
!830 = !{!71, !180}
!831 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !832, file: !758, line: 153)
!832 = !DISubprogram(name: "mblen", scope: !751, file: !751, line: 919, type: !833, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!833 = !DISubroutineType(types: !834)
!834 = !{!11, !602, !180}
!835 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !836, file: !758, line: 154)
!836 = !DISubprogram(name: "mbstowcs", scope: !751, file: !751, line: 930, type: !837, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!837 = !DISubroutineType(types: !838)
!838 = !{!180, !839, !842, !180}
!839 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !840)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DIBasicType(name: "wchar_t", size: 32, encoding: DW_ATE_signed)
!842 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !602)
!843 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !844, file: !758, line: 155)
!844 = !DISubprogram(name: "mbtowc", scope: !751, file: !751, line: 922, type: !845, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!845 = !DISubroutineType(types: !846)
!846 = !{!11, !839, !842, !180}
!847 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !848, file: !758, line: 157)
!848 = !DISubprogram(name: "qsort", scope: !751, file: !751, line: 827, type: !849, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!849 = !DISubroutineType(types: !850)
!850 = !{null, !71, !180, !180, !797}
!851 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !852, file: !758, line: 160)
!852 = !DISubprogram(name: "quick_exit", scope: !751, file: !751, line: 620, type: !811, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!853 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !854, file: !758, line: 163)
!854 = !DISubprogram(name: "rand", scope: !751, file: !751, line: 453, type: !127, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!855 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !856, file: !758, line: 164)
!856 = !DISubprogram(name: "realloc", scope: !751, file: !751, line: 549, type: !857, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!857 = !DISubroutineType(types: !858)
!858 = !{!71, !71, !180}
!859 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !860, file: !758, line: 165)
!860 = !DISubprogram(name: "srand", scope: !751, file: !751, line: 455, type: !861, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!861 = !DISubroutineType(types: !862)
!862 = !{null, !27}
!863 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !864, file: !758, line: 166)
!864 = !DISubprogram(name: "strtod", scope: !751, file: !751, line: 117, type: !865, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!865 = !DISubroutineType(types: !866)
!866 = !{!781, !842, !867}
!867 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !112)
!868 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !869, file: !758, line: 167)
!869 = !DISubprogram(name: "strtol", scope: !751, file: !751, line: 176, type: !870, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!870 = !DISubroutineType(types: !871)
!871 = !{!579, !842, !867, !11}
!872 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !873, file: !758, line: 168)
!873 = !DISubprogram(name: "strtoul", scope: !751, file: !751, line: 180, type: !874, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!874 = !DISubroutineType(types: !875)
!875 = !{!89, !842, !867, !11}
!876 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !877, file: !758, line: 169)
!877 = !DISubprogram(name: "system", scope: !751, file: !751, line: 781, type: !784, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!878 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !879, file: !758, line: 171)
!879 = !DISubprogram(name: "wcstombs", scope: !751, file: !751, line: 933, type: !880, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!880 = !DISubroutineType(types: !881)
!881 = !{!180, !882, !883, !180}
!882 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !72)
!883 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !884)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !841)
!886 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !887, file: !758, line: 172)
!887 = !DISubprogram(name: "wctomb", scope: !751, file: !751, line: 926, type: !888, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!888 = !DISubroutineType(types: !889)
!889 = !{!11, !72, !841}
!890 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !891, file: !758, line: 200)
!891 = !DIDerivedType(tag: DW_TAG_typedef, name: "lldiv_t", file: !751, line: 80, baseType: !892)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !751, line: 76, size: 128, flags: DIFlagTypePassByValue, elements: !893, identifier: "_ZTS7lldiv_t")
!893 = !{!894, !896}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "quot", scope: !892, file: !751, line: 78, baseType: !895, size: 64)
!895 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "rem", scope: !892, file: !751, line: 79, baseType: !895, size: 64, offset: 64)
!897 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !898, file: !758, line: 206)
!898 = !DISubprogram(name: "_Exit", scope: !751, file: !751, line: 626, type: !811, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!899 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !900, file: !758, line: 210)
!900 = !DISubprogram(name: "llabs", scope: !751, file: !751, line: 841, type: !901, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!901 = !DISubroutineType(types: !902)
!902 = !{!895, !895}
!903 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !904, file: !758, line: 216)
!904 = !DISubprogram(name: "lldiv", scope: !751, file: !751, line: 855, type: !905, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!905 = !DISubroutineType(types: !906)
!906 = !{!891, !895, !895}
!907 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !908, file: !758, line: 227)
!908 = !DISubprogram(name: "atoll", scope: !751, file: !751, line: 373, type: !909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!909 = !DISubroutineType(types: !910)
!910 = !{!895, !602}
!911 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !912, file: !758, line: 228)
!912 = !DISubprogram(name: "strtoll", scope: !751, file: !751, line: 200, type: !913, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!913 = !DISubroutineType(types: !914)
!914 = !{!895, !842, !867, !11}
!915 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !916, file: !758, line: 229)
!916 = !DISubprogram(name: "strtoull", scope: !751, file: !751, line: 205, type: !917, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!917 = !DISubroutineType(types: !918)
!918 = !{!919, !842, !867, !11}
!919 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!920 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !921, file: !758, line: 231)
!921 = !DISubprogram(name: "strtof", scope: !751, file: !751, line: 123, type: !922, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!922 = !DISubroutineType(types: !923)
!923 = !{!924, !842, !867}
!924 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!925 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !926, file: !758, line: 232)
!926 = !DISubprogram(name: "strtold", scope: !751, file: !751, line: 126, type: !927, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!927 = !DISubroutineType(types: !928)
!928 = !{!929, !842, !867}
!929 = !DIBasicType(name: "long double", size: 128, encoding: DW_ATE_float)
!930 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !891, file: !758, line: 240)
!931 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !898, file: !758, line: 242)
!932 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !900, file: !758, line: 244)
!933 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !934, file: !758, line: 245)
!934 = !DISubprogram(name: "div", linkageName: "_ZN9__gnu_cxx3divExx", scope: !26, file: !758, line: 213, type: !905, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!935 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !904, file: !758, line: 246)
!936 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !908, file: !758, line: 248)
!937 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !921, file: !758, line: 249)
!938 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !912, file: !758, line: 250)
!939 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !916, file: !758, line: 251)
!940 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !926, file: !758, line: 252)
!941 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !766, file: !942, line: 38)
!942 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/stdlib.h", directory: "")
!943 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !770, file: !942, line: 39)
!944 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !810, file: !942, line: 40)
!945 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !775, file: !942, line: 43)
!946 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !852, file: !942, line: 46)
!947 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !756, file: !942, line: 51)
!948 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !760, file: !942, line: 52)
!949 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !950, file: !942, line: 54)
!950 = !DISubprogram(name: "abs", linkageName: "_ZSt3absg", scope: !2, file: !754, line: 102, type: !951, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!951 = !DISubroutineType(types: !952)
!952 = !{!953, !953}
!953 = !DIBasicType(name: "__float128", size: 128, encoding: DW_ATE_float)
!954 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !777, file: !942, line: 55)
!955 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !783, file: !942, line: 56)
!956 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !787, file: !942, line: 57)
!957 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !793, file: !942, line: 58)
!958 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !802, file: !942, line: 59)
!959 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !934, file: !942, line: 60)
!960 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !814, file: !942, line: 61)
!961 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !816, file: !942, line: 62)
!962 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !820, file: !942, line: 63)
!963 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !824, file: !942, line: 64)
!964 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !828, file: !942, line: 65)
!965 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !832, file: !942, line: 67)
!966 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !836, file: !942, line: 68)
!967 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !844, file: !942, line: 69)
!968 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !848, file: !942, line: 71)
!969 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !854, file: !942, line: 72)
!970 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !856, file: !942, line: 73)
!971 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !860, file: !942, line: 74)
!972 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !864, file: !942, line: 75)
!973 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !869, file: !942, line: 76)
!974 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !873, file: !942, line: 77)
!975 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !877, file: !942, line: 78)
!976 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !879, file: !942, line: 80)
!977 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !887, file: !942, line: 81)
!978 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !979, file: !983, line: 75)
!979 = !DISubprogram(name: "memchr", scope: !980, file: !980, line: 90, type: !981, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!980 = !DIFile(filename: "/usr/include/string.h", directory: "")
!981 = !DISubroutineType(types: !982)
!982 = !{!71, !84, !11, !180}
!983 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/cstring", directory: "")
!984 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !985, file: !983, line: 76)
!985 = !DISubprogram(name: "memcmp", scope: !980, file: !980, line: 63, type: !986, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!986 = !DISubroutineType(types: !987)
!987 = !{!11, !84, !84, !180}
!988 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !989, file: !983, line: 77)
!989 = !DISubprogram(name: "memcpy", scope: !980, file: !980, line: 42, type: !990, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!990 = !DISubroutineType(types: !991)
!991 = !{!71, !992, !993, !180}
!992 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !71)
!993 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !84)
!994 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !995, file: !983, line: 78)
!995 = !DISubprogram(name: "memmove", scope: !980, file: !980, line: 46, type: !996, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!996 = !DISubroutineType(types: !997)
!997 = !{!71, !71, !84, !180}
!998 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !999, file: !983, line: 79)
!999 = !DISubprogram(name: "memset", scope: !980, file: !980, line: 60, type: !1000, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!71, !71, !11, !180}
!1002 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1003, file: !983, line: 80)
!1003 = !DISubprogram(name: "strcat", scope: !980, file: !980, line: 129, type: !1004, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!72, !882, !842}
!1006 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1007, file: !983, line: 81)
!1007 = !DISubprogram(name: "strcmp", scope: !980, file: !980, line: 136, type: !1008, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!11, !602, !602}
!1010 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1011, file: !983, line: 82)
!1011 = !DISubprogram(name: "strcoll", scope: !980, file: !980, line: 143, type: !1008, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1012 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1013, file: !983, line: 83)
!1013 = !DISubprogram(name: "strcpy", scope: !980, file: !980, line: 121, type: !1004, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1014 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1015, file: !983, line: 84)
!1015 = !DISubprogram(name: "strcspn", scope: !980, file: !980, line: 272, type: !1016, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!180, !602, !602}
!1018 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1019, file: !983, line: 85)
!1019 = !DISubprogram(name: "strerror", scope: !980, file: !980, line: 396, type: !1020, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!72, !11}
!1022 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1023, file: !983, line: 86)
!1023 = !DISubprogram(name: "strlen", scope: !980, file: !980, line: 384, type: !1024, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!180, !602}
!1026 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1027, file: !983, line: 87)
!1027 = !DISubprogram(name: "strncat", scope: !980, file: !980, line: 132, type: !1028, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!72, !882, !842, !180}
!1030 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1031, file: !983, line: 88)
!1031 = !DISubprogram(name: "strncmp", scope: !980, file: !980, line: 139, type: !1032, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!11, !602, !602, !180}
!1034 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1035, file: !983, line: 89)
!1035 = !DISubprogram(name: "strncpy", scope: !980, file: !980, line: 124, type: !1028, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1036 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1037, file: !983, line: 90)
!1037 = !DISubprogram(name: "strspn", scope: !980, file: !980, line: 276, type: !1016, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1038 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1039, file: !983, line: 91)
!1039 = !DISubprogram(name: "strtok", scope: !980, file: !980, line: 335, type: !1004, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1040 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1041, file: !983, line: 92)
!1041 = !DISubprogram(name: "strxfrm", scope: !980, file: !980, line: 146, type: !1042, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{!180, !882, !842, !180}
!1044 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1045, file: !983, line: 93)
!1045 = !DISubprogram(name: "strchr", scope: !980, file: !980, line: 225, type: !1046, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!72, !602, !11}
!1048 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1049, file: !983, line: 94)
!1049 = !DISubprogram(name: "strpbrk", scope: !980, file: !980, line: 302, type: !1050, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!72, !602, !602}
!1052 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1053, file: !983, line: 95)
!1053 = !DISubprogram(name: "strrchr", scope: !980, file: !980, line: 252, type: !1046, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1054 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1055, file: !983, line: 96)
!1055 = !DISubprogram(name: "strstr", scope: !980, file: !980, line: 329, type: !1050, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1056 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1057, file: !1058, line: 57)
!1057 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "exception_ptr", scope: !1059, file: !1058, line: 79, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !1060, identifier: "_ZTSNSt15__exception_ptr13exception_ptrE")
!1058 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/exception_ptr.h", directory: "")
!1059 = !DINamespace(name: "__exception_ptr", scope: !2)
!1060 = !{!1061, !1062, !1066, !1069, !1070, !1075, !1076, !1080, !1083, !1087, !1091, !1094, !1095, !1098, !1101}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "_M_exception_object", scope: !1057, file: !1058, line: 81, baseType: !71, size: 64)
!1062 = !DISubprogram(name: "exception_ptr", scope: !1057, file: !1058, line: 83, type: !1063, scopeLine: 83, flags: DIFlagExplicit | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{null, !1065, !71}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1066 = !DISubprogram(name: "_M_addref", linkageName: "_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv", scope: !1057, file: !1058, line: 85, type: !1067, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{null, !1065}
!1069 = !DISubprogram(name: "_M_release", linkageName: "_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv", scope: !1057, file: !1058, line: 86, type: !1067, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1070 = !DISubprogram(name: "_M_get", linkageName: "_ZNKSt15__exception_ptr13exception_ptr6_M_getEv", scope: !1057, file: !1058, line: 88, type: !1071, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!71, !1073}
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1074 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!1075 = !DISubprogram(name: "exception_ptr", scope: !1057, file: !1058, line: 96, type: !1067, scopeLine: 96, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1076 = !DISubprogram(name: "exception_ptr", scope: !1057, file: !1058, line: 98, type: !1077, scopeLine: 98, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{null, !1065, !1079}
!1079 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1074, size: 64)
!1080 = !DISubprogram(name: "exception_ptr", scope: !1057, file: !1058, line: 101, type: !1081, scopeLine: 101, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{null, !1065, !380}
!1083 = !DISubprogram(name: "exception_ptr", scope: !1057, file: !1058, line: 105, type: !1084, scopeLine: 105, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{null, !1065, !1086}
!1086 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !1057, size: 64)
!1087 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSERKS0_", scope: !1057, file: !1058, line: 118, type: !1088, scopeLine: 118, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!1090, !1065, !1079}
!1090 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !1057, size: 64)
!1091 = !DISubprogram(name: "operator=", linkageName: "_ZNSt15__exception_ptr13exception_ptraSEOS0_", scope: !1057, file: !1058, line: 122, type: !1092, scopeLine: 122, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!1090, !1065, !1086}
!1094 = !DISubprogram(name: "~exception_ptr", scope: !1057, file: !1058, line: 129, type: !1067, scopeLine: 129, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1095 = !DISubprogram(name: "swap", linkageName: "_ZNSt15__exception_ptr13exception_ptr4swapERS0_", scope: !1057, file: !1058, line: 132, type: !1096, scopeLine: 132, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{null, !1065, !1090}
!1098 = !DISubprogram(name: "operator bool", linkageName: "_ZNKSt15__exception_ptr13exception_ptrcvbEv", scope: !1057, file: !1058, line: 144, type: !1099, scopeLine: 144, flags: DIFlagPublic | DIFlagExplicit | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1099 = !DISubroutineType(types: !1100)
!1100 = !{!13, !1073}
!1101 = !DISubprogram(name: "__cxa_exception_type", linkageName: "_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv", scope: !1057, file: !1058, line: 153, type: !1102, scopeLine: 153, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!1104, !1073}
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1106)
!1106 = !DICompositeType(tag: DW_TAG_class_type, name: "type_info", scope: !2, file: !1107, line: 88, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSSt9type_info")
!1107 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/typeinfo", directory: "")
!1108 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !1059, entity: !1109, file: !1058, line: 73)
!1109 = !DISubprogram(name: "rethrow_exception", linkageName: "_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE", scope: !2, file: !1058, line: 69, type: !1110, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagOptimized)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !1057}
!1112 = !DIImportedEntity(tag: DW_TAG_imported_module, scope: !1113, entity: !1114, file: !1115, line: 58)
!1113 = !DINamespace(name: "__gnu_debug", scope: null)
!1114 = !DINamespace(name: "__debug", scope: !2)
!1115 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/debug/debug.h", directory: "")
!1116 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1117, file: !1132, line: 64)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1118, line: 6, baseType: !1119)
!1118 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/mbstate_t.h", directory: "")
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1120, line: 21, baseType: !1121)
!1120 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h", directory: "")
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1120, line: 13, size: 64, flags: DIFlagTypePassByValue, elements: !1122, identifier: "_ZTS11__mbstate_t")
!1122 = !{!1123, !1124}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1121, file: !1120, line: 15, baseType: !11, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1121, file: !1120, line: 20, baseType: !1125, size: 32, offset: 32)
!1125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1121, file: !1120, line: 16, size: 32, flags: DIFlagTypePassByValue, elements: !1126, identifier: "_ZTSN11__mbstate_tUt_E")
!1126 = !{!1127, !1128}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1125, file: !1120, line: 18, baseType: !27, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1125, file: !1120, line: 19, baseType: !1129, size: 32)
!1129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !73, size: 32, elements: !1130)
!1130 = !{!1131}
!1131 = !DISubrange(count: 4)
!1132 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/cwchar", directory: "")
!1133 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1134, file: !1132, line: 139)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !1135, line: 20, baseType: !27)
!1135 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/wint_t.h", directory: "")
!1136 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1137, file: !1132, line: 141)
!1137 = !DISubprogram(name: "btowc", scope: !1138, file: !1138, line: 318, type: !1139, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1138 = !DIFile(filename: "/usr/include/wchar.h", directory: "")
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!1134, !11}
!1141 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1142, file: !1132, line: 142)
!1142 = !DISubprogram(name: "fgetwc", scope: !1138, file: !1138, line: 727, type: !1143, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!1134, !1145}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !1147, line: 5, baseType: !1148)
!1147 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h", directory: "")
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1149, line: 245, size: 1728, flags: DIFlagTypePassByValue, elements: !1150, identifier: "_ZTS8_IO_FILE")
!1149 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/libio.h", directory: "")
!1150 = !{!1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1166, !1168, !1169, !1170, !1172, !1173, !1175, !1179, !1182, !1184, !1185, !1186, !1187, !1188, !1189, !1190}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1148, file: !1149, line: 246, baseType: !11, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1148, file: !1149, line: 251, baseType: !72, size: 64, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1148, file: !1149, line: 252, baseType: !72, size: 64, offset: 128)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1148, file: !1149, line: 253, baseType: !72, size: 64, offset: 192)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1148, file: !1149, line: 254, baseType: !72, size: 64, offset: 256)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1148, file: !1149, line: 255, baseType: !72, size: 64, offset: 320)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1148, file: !1149, line: 256, baseType: !72, size: 64, offset: 384)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1148, file: !1149, line: 257, baseType: !72, size: 64, offset: 448)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1148, file: !1149, line: 258, baseType: !72, size: 64, offset: 512)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1148, file: !1149, line: 260, baseType: !72, size: 64, offset: 576)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1148, file: !1149, line: 261, baseType: !72, size: 64, offset: 640)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1148, file: !1149, line: 262, baseType: !72, size: 64, offset: 704)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1148, file: !1149, line: 264, baseType: !1164, size: 64, offset: 768)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1149, line: 160, flags: DIFlagFwdDecl, identifier: "_ZTS10_IO_marker")
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1148, file: !1149, line: 266, baseType: !1167, size: 64, offset: 832)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1148, file: !1149, line: 268, baseType: !11, size: 32, offset: 896)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1148, file: !1149, line: 272, baseType: !11, size: 32, offset: 928)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1148, file: !1149, line: 274, baseType: !1171, size: 64, offset: 960)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !108, line: 140, baseType: !579)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1148, file: !1149, line: 278, baseType: !328, size: 16, offset: 1024)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1148, file: !1149, line: 279, baseType: !1174, size: 8, offset: 1040)
!1174 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1148, file: !1149, line: 280, baseType: !1176, size: 8, offset: 1048)
!1176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !73, size: 8, elements: !1177)
!1177 = !{!1178}
!1178 = !DISubrange(count: 1)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1148, file: !1149, line: 284, baseType: !1180, size: 64, offset: 1088)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1149, line: 154, baseType: null)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1148, file: !1149, line: 293, baseType: !1183, size: 64, offset: 1152)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !108, line: 141, baseType: !579)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1148, file: !1149, line: 301, baseType: !71, size: 64, offset: 1216)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1148, file: !1149, line: 302, baseType: !71, size: 64, offset: 1280)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1148, file: !1149, line: 303, baseType: !71, size: 64, offset: 1344)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1148, file: !1149, line: 304, baseType: !71, size: 64, offset: 1408)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1148, file: !1149, line: 306, baseType: !180, size: 64, offset: 1472)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1148, file: !1149, line: 307, baseType: !11, size: 32, offset: 1536)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1148, file: !1149, line: 309, baseType: !1191, size: 160, offset: 1568)
!1191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !73, size: 160, elements: !1192)
!1192 = !{!1193}
!1193 = !DISubrange(count: 20)
!1194 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1195, file: !1132, line: 143)
!1195 = !DISubprogram(name: "fgetws", scope: !1138, file: !1138, line: 756, type: !1196, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!840, !839, !11, !1198}
!1198 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1145)
!1199 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1200, file: !1132, line: 144)
!1200 = !DISubprogram(name: "fputwc", scope: !1138, file: !1138, line: 741, type: !1201, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!1134, !841, !1145}
!1203 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1204, file: !1132, line: 145)
!1204 = !DISubprogram(name: "fputws", scope: !1138, file: !1138, line: 763, type: !1205, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!11, !883, !1198}
!1207 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1208, file: !1132, line: 146)
!1208 = !DISubprogram(name: "fwide", scope: !1138, file: !1138, line: 573, type: !1209, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!11, !1145, !11}
!1211 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1212, file: !1132, line: 147)
!1212 = !DISubprogram(name: "fwprintf", scope: !1138, file: !1138, line: 580, type: !1213, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{!11, !1198, !883, null}
!1215 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1216, file: !1132, line: 148)
!1216 = !DISubprogram(name: "fwscanf", scope: !1138, file: !1138, line: 621, type: !1213, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1217 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1218, file: !1132, line: 149)
!1218 = !DISubprogram(name: "getwc", scope: !1138, file: !1138, line: 728, type: !1143, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1219 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1220, file: !1132, line: 150)
!1220 = !DISubprogram(name: "getwchar", scope: !1138, file: !1138, line: 734, type: !1221, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!1134}
!1223 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1224, file: !1132, line: 151)
!1224 = !DISubprogram(name: "mbrlen", scope: !1138, file: !1138, line: 329, type: !1225, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1225 = !DISubroutineType(types: !1226)
!1226 = !{!180, !842, !180, !1227}
!1227 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1228)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1229 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1230, file: !1132, line: 152)
!1230 = !DISubprogram(name: "mbrtowc", scope: !1138, file: !1138, line: 296, type: !1231, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{!180, !839, !842, !180, !1227}
!1233 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1234, file: !1132, line: 153)
!1234 = !DISubprogram(name: "mbsinit", scope: !1138, file: !1138, line: 292, type: !1235, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!11, !1237}
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1117)
!1239 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1240, file: !1132, line: 154)
!1240 = !DISubprogram(name: "mbsrtowcs", scope: !1138, file: !1138, line: 337, type: !1241, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{!180, !839, !1243, !180, !1227}
!1243 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1244)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!1245 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1246, file: !1132, line: 155)
!1246 = !DISubprogram(name: "putwc", scope: !1138, file: !1138, line: 742, type: !1201, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1247 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1248, file: !1132, line: 156)
!1248 = !DISubprogram(name: "putwchar", scope: !1138, file: !1138, line: 748, type: !1249, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!1134, !841}
!1251 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1252, file: !1132, line: 158)
!1252 = !DISubprogram(name: "swprintf", scope: !1138, file: !1138, line: 590, type: !1253, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{!11, !839, !180, !883, null}
!1255 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1256, file: !1132, line: 160)
!1256 = !DISubprogram(name: "swscanf", scope: !1138, file: !1138, line: 631, type: !1257, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1257 = !DISubroutineType(types: !1258)
!1258 = !{!11, !883, !883, null}
!1259 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1260, file: !1132, line: 161)
!1260 = !DISubprogram(name: "ungetwc", scope: !1138, file: !1138, line: 771, type: !1261, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!1134, !1134, !1145}
!1263 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1264, file: !1132, line: 162)
!1264 = !DISubprogram(name: "vfwprintf", scope: !1138, file: !1138, line: 598, type: !1265, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!11, !1198, !883, !1267}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !22, size: 192, flags: DIFlagTypePassByValue, elements: !1269, identifier: "_ZTS13__va_list_tag")
!1269 = !{!1270, !1271, !1272, !1273}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1268, file: !22, baseType: !27, size: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1268, file: !22, baseType: !27, size: 32, offset: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1268, file: !22, baseType: !71, size: 64, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1268, file: !22, baseType: !71, size: 64, offset: 128)
!1274 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1275, file: !1132, line: 164)
!1275 = !DISubprogram(name: "vfwscanf", scope: !1138, file: !1138, line: 673, type: !1265, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1276 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1277, file: !1132, line: 167)
!1277 = !DISubprogram(name: "vswprintf", scope: !1138, file: !1138, line: 611, type: !1278, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!11, !839, !180, !883, !1267}
!1280 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1281, file: !1132, line: 170)
!1281 = !DISubprogram(name: "vswscanf", scope: !1138, file: !1138, line: 685, type: !1282, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!11, !883, !883, !1267}
!1284 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1285, file: !1132, line: 172)
!1285 = !DISubprogram(name: "vwprintf", scope: !1138, file: !1138, line: 606, type: !1286, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!11, !883, !1267}
!1288 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1289, file: !1132, line: 174)
!1289 = !DISubprogram(name: "vwscanf", scope: !1138, file: !1138, line: 681, type: !1286, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1290 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1291, file: !1132, line: 176)
!1291 = !DISubprogram(name: "wcrtomb", scope: !1138, file: !1138, line: 301, type: !1292, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!180, !882, !841, !1227}
!1294 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1295, file: !1132, line: 177)
!1295 = !DISubprogram(name: "wcscat", scope: !1138, file: !1138, line: 97, type: !1296, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1296 = !DISubroutineType(types: !1297)
!1297 = !{!840, !839, !883}
!1298 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1299, file: !1132, line: 178)
!1299 = !DISubprogram(name: "wcscmp", scope: !1138, file: !1138, line: 106, type: !1300, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!11, !884, !884}
!1302 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1303, file: !1132, line: 179)
!1303 = !DISubprogram(name: "wcscoll", scope: !1138, file: !1138, line: 131, type: !1300, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1304 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1305, file: !1132, line: 180)
!1305 = !DISubprogram(name: "wcscpy", scope: !1138, file: !1138, line: 87, type: !1296, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1306 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1307, file: !1132, line: 181)
!1307 = !DISubprogram(name: "wcscspn", scope: !1138, file: !1138, line: 187, type: !1308, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!180, !884, !884}
!1310 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1311, file: !1132, line: 182)
!1311 = !DISubprogram(name: "wcsftime", scope: !1138, file: !1138, line: 835, type: !1312, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!180, !839, !180, !883, !1314}
!1314 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1315)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1317)
!1317 = !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !1318, line: 7, flags: DIFlagFwdDecl, identifier: "_ZTS2tm")
!1318 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h", directory: "")
!1319 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1320, file: !1132, line: 183)
!1320 = !DISubprogram(name: "wcslen", scope: !1138, file: !1138, line: 222, type: !1321, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{!180, !884}
!1323 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1324, file: !1132, line: 184)
!1324 = !DISubprogram(name: "wcsncat", scope: !1138, file: !1138, line: 101, type: !1325, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!840, !839, !883, !180}
!1327 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1328, file: !1132, line: 185)
!1328 = !DISubprogram(name: "wcsncmp", scope: !1138, file: !1138, line: 109, type: !1329, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!11, !884, !884, !180}
!1331 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1332, file: !1132, line: 186)
!1332 = !DISubprogram(name: "wcsncpy", scope: !1138, file: !1138, line: 92, type: !1325, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1333 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1334, file: !1132, line: 187)
!1334 = !DISubprogram(name: "wcsrtombs", scope: !1138, file: !1138, line: 343, type: !1335, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1335 = !DISubroutineType(types: !1336)
!1336 = !{!180, !882, !1337, !180, !1227}
!1337 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1338)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!1339 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1340, file: !1132, line: 188)
!1340 = !DISubprogram(name: "wcsspn", scope: !1138, file: !1138, line: 191, type: !1308, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1341 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1342, file: !1132, line: 189)
!1342 = !DISubprogram(name: "wcstod", scope: !1138, file: !1138, line: 377, type: !1343, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{!781, !883, !1345}
!1345 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1346)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!1347 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1348, file: !1132, line: 191)
!1348 = !DISubprogram(name: "wcstof", scope: !1138, file: !1138, line: 382, type: !1349, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1349 = !DISubroutineType(types: !1350)
!1350 = !{!924, !883, !1345}
!1351 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1352, file: !1132, line: 193)
!1352 = !DISubprogram(name: "wcstok", scope: !1138, file: !1138, line: 217, type: !1353, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!840, !839, !883, !1345}
!1355 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1356, file: !1132, line: 194)
!1356 = !DISubprogram(name: "wcstol", scope: !1138, file: !1138, line: 428, type: !1357, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!579, !883, !1345, !11}
!1359 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1360, file: !1132, line: 195)
!1360 = !DISubprogram(name: "wcstoul", scope: !1138, file: !1138, line: 433, type: !1361, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1361 = !DISubroutineType(types: !1362)
!1362 = !{!89, !883, !1345, !11}
!1363 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1364, file: !1132, line: 196)
!1364 = !DISubprogram(name: "wcsxfrm", scope: !1138, file: !1138, line: 135, type: !1365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{!180, !839, !883, !180}
!1367 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1368, file: !1132, line: 197)
!1368 = !DISubprogram(name: "wctob", scope: !1138, file: !1138, line: 324, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{!11, !1134}
!1371 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1372, file: !1132, line: 198)
!1372 = !DISubprogram(name: "wmemcmp", scope: !1138, file: !1138, line: 258, type: !1329, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1373 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1374, file: !1132, line: 199)
!1374 = !DISubprogram(name: "wmemcpy", scope: !1138, file: !1138, line: 262, type: !1325, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1375 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1376, file: !1132, line: 200)
!1376 = !DISubprogram(name: "wmemmove", scope: !1138, file: !1138, line: 267, type: !1377, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{!840, !840, !884, !180}
!1379 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1380, file: !1132, line: 201)
!1380 = !DISubprogram(name: "wmemset", scope: !1138, file: !1138, line: 271, type: !1381, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1381 = !DISubroutineType(types: !1382)
!1382 = !{!840, !840, !841, !180}
!1383 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1384, file: !1132, line: 202)
!1384 = !DISubprogram(name: "wprintf", scope: !1138, file: !1138, line: 587, type: !1385, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!11, !883, null}
!1387 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1388, file: !1132, line: 203)
!1388 = !DISubprogram(name: "wscanf", scope: !1138, file: !1138, line: 628, type: !1385, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1389 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1390, file: !1132, line: 204)
!1390 = !DISubprogram(name: "wcschr", scope: !1138, file: !1138, line: 164, type: !1391, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!840, !884, !841}
!1393 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1394, file: !1132, line: 205)
!1394 = !DISubprogram(name: "wcspbrk", scope: !1138, file: !1138, line: 201, type: !1395, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{!840, !884, !884}
!1397 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1398, file: !1132, line: 206)
!1398 = !DISubprogram(name: "wcsrchr", scope: !1138, file: !1138, line: 174, type: !1391, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1399 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1400, file: !1132, line: 207)
!1400 = !DISubprogram(name: "wcsstr", scope: !1138, file: !1138, line: 212, type: !1395, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1401 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1402, file: !1132, line: 208)
!1402 = !DISubprogram(name: "wmemchr", scope: !1138, file: !1138, line: 253, type: !1403, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1403 = !DISubroutineType(types: !1404)
!1404 = !{!840, !884, !841, !180}
!1405 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !1406, file: !1132, line: 248)
!1406 = !DISubprogram(name: "wcstold", scope: !1138, file: !1138, line: 384, type: !1407, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!929, !883, !1345}
!1409 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !1410, file: !1132, line: 257)
!1410 = !DISubprogram(name: "wcstoll", scope: !1138, file: !1138, line: 441, type: !1411, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!895, !883, !1345, !11}
!1413 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !1414, file: !1132, line: 258)
!1414 = !DISubprogram(name: "wcstoull", scope: !1138, file: !1138, line: 448, type: !1415, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!919, !883, !1345, !11}
!1417 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1406, file: !1132, line: 264)
!1418 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1410, file: !1132, line: 265)
!1419 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1414, file: !1132, line: 266)
!1420 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1348, file: !1132, line: 280)
!1421 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1275, file: !1132, line: 283)
!1422 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1281, file: !1132, line: 286)
!1423 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1289, file: !1132, line: 289)
!1424 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1406, file: !1132, line: 293)
!1425 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1410, file: !1132, line: 294)
!1426 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1414, file: !1132, line: 295)
!1427 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1428, file: !1431, line: 48)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !1429, line: 24, baseType: !1430)
!1429 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "")
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !108, line: 36, baseType: !1174)
!1431 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/cstdint", directory: "")
!1432 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1433, file: !1431, line: 49)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !1429, line: 25, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !108, line: 38, baseType: !1435)
!1435 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1436 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1437, file: !1431, line: 50)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !1429, line: 26, baseType: !1438)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !108, line: 40, baseType: !11)
!1439 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1440, file: !1431, line: 51)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1429, line: 27, baseType: !1441)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !108, line: 43, baseType: !579)
!1442 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1443, file: !1431, line: 53)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast8_t", file: !111, line: 68, baseType: !1174)
!1444 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1445, file: !1431, line: 54)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast16_t", file: !111, line: 70, baseType: !579)
!1446 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1447, file: !1431, line: 55)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast32_t", file: !111, line: 71, baseType: !579)
!1448 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1449, file: !1431, line: 56)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_fast64_t", file: !111, line: 72, baseType: !579)
!1450 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1451, file: !1431, line: 58)
!1451 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least8_t", file: !111, line: 43, baseType: !1174)
!1452 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1453, file: !1431, line: 59)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least16_t", file: !111, line: 44, baseType: !1435)
!1454 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1455, file: !1431, line: 60)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least32_t", file: !111, line: 45, baseType: !11)
!1456 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1457, file: !1431, line: 61)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "int_least64_t", file: !111, line: 47, baseType: !579)
!1458 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1459, file: !1431, line: 63)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !111, line: 111, baseType: !1460)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !108, line: 61, baseType: !579)
!1461 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1462, file: !1431, line: 64)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !111, line: 97, baseType: !579)
!1463 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !281, file: !1431, line: 66)
!1464 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1465, file: !1431, line: 67)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !106, line: 25, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !108, line: 39, baseType: !328)
!1467 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !264, file: !1431, line: 68)
!1468 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !105, file: !1431, line: 69)
!1469 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1470, file: !1431, line: 71)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast8_t", file: !111, line: 81, baseType: !283)
!1471 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1472, file: !1431, line: 72)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast16_t", file: !111, line: 83, baseType: !89)
!1473 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1474, file: !1431, line: 73)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast32_t", file: !111, line: 84, baseType: !89)
!1475 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1476, file: !1431, line: 74)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_fast64_t", file: !111, line: 85, baseType: !89)
!1477 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1478, file: !1431, line: 76)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least8_t", file: !111, line: 54, baseType: !283)
!1479 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1480, file: !1431, line: 77)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least16_t", file: !111, line: 55, baseType: !328)
!1481 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1482, file: !1431, line: 78)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least32_t", file: !111, line: 56, baseType: !27)
!1483 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1484, file: !1431, line: 79)
!1484 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !111, line: 58, baseType: !89)
!1485 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1486, file: !1431, line: 81)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !111, line: 112, baseType: !1487)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !108, line: 62, baseType: !89)
!1488 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !110, file: !1431, line: 82)
!1489 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !168, file: !1490, line: 44)
!1490 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/new_allocator.h", directory: "")
!1491 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !578, file: !1490, line: 45)
!1492 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1493, file: !1495, line: 53)
!1493 = !DICompositeType(tag: DW_TAG_structure_type, name: "lconv", file: !1494, line: 51, flags: DIFlagFwdDecl, identifier: "_ZTS5lconv")
!1494 = !DIFile(filename: "/usr/include/locale.h", directory: "")
!1495 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/clocale", directory: "")
!1496 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1497, file: !1495, line: 54)
!1497 = !DISubprogram(name: "setlocale", scope: !1494, file: !1494, line: 122, type: !1498, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1498 = !DISubroutineType(types: !1499)
!1499 = !{!72, !11, !602}
!1500 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1501, file: !1495, line: 55)
!1501 = !DISubprogram(name: "localeconv", scope: !1494, file: !1494, line: 125, type: !1502, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1502 = !DISubroutineType(types: !1503)
!1503 = !{!1504}
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1505 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1506, file: !1508, line: 64)
!1506 = !DISubprogram(name: "isalnum", scope: !1507, file: !1507, line: 108, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1507 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!1508 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/cctype", directory: "")
!1509 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1510, file: !1508, line: 65)
!1510 = !DISubprogram(name: "isalpha", scope: !1507, file: !1507, line: 109, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1511 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1512, file: !1508, line: 66)
!1512 = !DISubprogram(name: "iscntrl", scope: !1507, file: !1507, line: 110, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1513 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1514, file: !1508, line: 67)
!1514 = !DISubprogram(name: "isdigit", scope: !1507, file: !1507, line: 111, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1515 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1516, file: !1508, line: 68)
!1516 = !DISubprogram(name: "isgraph", scope: !1507, file: !1507, line: 113, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1517 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1518, file: !1508, line: 69)
!1518 = !DISubprogram(name: "islower", scope: !1507, file: !1507, line: 112, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1519 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1520, file: !1508, line: 70)
!1520 = !DISubprogram(name: "isprint", scope: !1507, file: !1507, line: 114, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1521 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1522, file: !1508, line: 71)
!1522 = !DISubprogram(name: "ispunct", scope: !1507, file: !1507, line: 115, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1523 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1524, file: !1508, line: 72)
!1524 = !DISubprogram(name: "isspace", scope: !1507, file: !1507, line: 116, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1525 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1526, file: !1508, line: 73)
!1526 = !DISubprogram(name: "isupper", scope: !1507, file: !1507, line: 117, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1527 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1528, file: !1508, line: 74)
!1528 = !DISubprogram(name: "isxdigit", scope: !1507, file: !1507, line: 118, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1529 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1530, file: !1508, line: 75)
!1530 = !DISubprogram(name: "tolower", scope: !1507, file: !1507, line: 122, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1531 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1532, file: !1508, line: 76)
!1532 = !DISubprogram(name: "toupper", scope: !1507, file: !1507, line: 125, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1533 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1534, file: !1508, line: 87)
!1534 = !DISubprogram(name: "isblank", scope: !1507, file: !1507, line: 130, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1535 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1536, file: !1538, line: 98)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1537, line: 7, baseType: !1148)
!1537 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1538 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/cstdio", directory: "")
!1539 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1540, file: !1538, line: 99)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "fpos_t", file: !732, line: 78, baseType: !1541)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "_G_fpos_t", file: !1542, line: 30, baseType: !1543)
!1542 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/_G_config.h", directory: "")
!1543 = !DICompositeType(tag: DW_TAG_structure_type, file: !1542, line: 26, flags: DIFlagFwdDecl, identifier: "_ZTS9_G_fpos_t")
!1544 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1545, file: !1538, line: 101)
!1545 = !DISubprogram(name: "clearerr", scope: !732, file: !732, line: 757, type: !1546, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{null, !1548}
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1549 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1550, file: !1538, line: 102)
!1550 = !DISubprogram(name: "fclose", scope: !732, file: !732, line: 199, type: !1551, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!11, !1548}
!1553 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1554, file: !1538, line: 103)
!1554 = !DISubprogram(name: "feof", scope: !732, file: !732, line: 759, type: !1551, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1555 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1556, file: !1538, line: 104)
!1556 = !DISubprogram(name: "ferror", scope: !732, file: !732, line: 761, type: !1551, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1557 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1558, file: !1538, line: 105)
!1558 = !DISubprogram(name: "fflush", scope: !732, file: !732, line: 204, type: !1551, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1559 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1560, file: !1538, line: 106)
!1560 = !DISubprogram(name: "fgetc", scope: !732, file: !732, line: 477, type: !1551, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1561 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1562, file: !1538, line: 107)
!1562 = !DISubprogram(name: "fgetpos", scope: !732, file: !732, line: 731, type: !1563, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{!11, !1565, !1566}
!1565 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1548)
!1566 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1567)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1568 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1569, file: !1538, line: 108)
!1569 = !DISubprogram(name: "fgets", scope: !732, file: !732, line: 564, type: !1570, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!72, !882, !11, !1565}
!1572 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1573, file: !1538, line: 109)
!1573 = !DISubprogram(name: "fopen", scope: !732, file: !732, line: 232, type: !1574, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!1548, !842, !842}
!1576 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1577, file: !1538, line: 110)
!1577 = !DISubprogram(name: "fprintf", scope: !732, file: !732, line: 312, type: !1578, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!11, !1565, !842, null}
!1580 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1581, file: !1538, line: 111)
!1581 = !DISubprogram(name: "fputc", scope: !732, file: !732, line: 517, type: !1582, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!11, !11, !1548}
!1584 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1585, file: !1538, line: 112)
!1585 = !DISubprogram(name: "fputs", scope: !732, file: !732, line: 626, type: !1586, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1586 = !DISubroutineType(types: !1587)
!1587 = !{!11, !842, !1565}
!1588 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1589, file: !1538, line: 113)
!1589 = !DISubprogram(name: "fread", scope: !732, file: !732, line: 646, type: !1590, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!180, !992, !180, !180, !1565}
!1592 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1593, file: !1538, line: 114)
!1593 = !DISubprogram(name: "freopen", scope: !732, file: !732, line: 238, type: !1594, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!1548, !842, !842, !1565}
!1596 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1597, file: !1538, line: 115)
!1597 = !DISubprogram(name: "fscanf", scope: !732, file: !732, line: 377, type: !1578, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1598 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1599, file: !1538, line: 116)
!1599 = !DISubprogram(name: "fseek", scope: !732, file: !732, line: 684, type: !1600, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!11, !1548, !579, !11}
!1602 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1603, file: !1538, line: 117)
!1603 = !DISubprogram(name: "fsetpos", scope: !732, file: !732, line: 736, type: !1604, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!11, !1548, !1606}
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1540)
!1608 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1609, file: !1538, line: 118)
!1609 = !DISubprogram(name: "ftell", scope: !732, file: !732, line: 689, type: !1610, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!579, !1548}
!1612 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1613, file: !1538, line: 119)
!1613 = !DISubprogram(name: "fwrite", scope: !732, file: !732, line: 652, type: !1614, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!180, !993, !180, !180, !1565}
!1616 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1617, file: !1538, line: 120)
!1617 = !DISubprogram(name: "getc", scope: !732, file: !732, line: 478, type: !1551, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1618 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1619, file: !1538, line: 121)
!1619 = !DISubprogram(name: "getchar", scope: !1620, file: !1620, line: 44, type: !127, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1620 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!1621 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1622, file: !1538, line: 126)
!1622 = !DISubprogram(name: "perror", scope: !732, file: !732, line: 775, type: !733, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1623 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1624, file: !1538, line: 127)
!1624 = !DISubprogram(name: "printf", scope: !732, file: !732, line: 318, type: !1625, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!11, !842, null}
!1627 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1628, file: !1538, line: 128)
!1628 = !DISubprogram(name: "putc", scope: !732, file: !732, line: 518, type: !1582, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1629 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1630, file: !1538, line: 129)
!1630 = !DISubprogram(name: "putchar", scope: !1620, file: !1620, line: 79, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1631 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1632, file: !1538, line: 130)
!1632 = !DISubprogram(name: "puts", scope: !732, file: !732, line: 632, type: !784, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1633 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1634, file: !1538, line: 131)
!1634 = !DISubprogram(name: "remove", scope: !732, file: !732, line: 144, type: !784, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1635 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1636, file: !1538, line: 132)
!1636 = !DISubprogram(name: "rename", scope: !732, file: !732, line: 146, type: !1008, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1637 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1638, file: !1538, line: 133)
!1638 = !DISubprogram(name: "rewind", scope: !732, file: !732, line: 694, type: !1546, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1639 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1640, file: !1538, line: 134)
!1640 = !DISubprogram(name: "scanf", scope: !732, file: !732, line: 383, type: !1625, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1641 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1642, file: !1538, line: 135)
!1642 = !DISubprogram(name: "setbuf", scope: !732, file: !732, line: 290, type: !1643, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{null, !1565, !882}
!1645 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1646, file: !1538, line: 136)
!1646 = !DISubprogram(name: "setvbuf", scope: !732, file: !732, line: 294, type: !1647, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{!11, !1565, !882, !11, !180}
!1649 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1650, file: !1538, line: 137)
!1650 = !DISubprogram(name: "sprintf", scope: !732, file: !732, line: 320, type: !1651, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!11, !882, !842, null}
!1653 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1654, file: !1538, line: 138)
!1654 = !DISubprogram(name: "sscanf", scope: !732, file: !732, line: 385, type: !1655, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!11, !842, !842, null}
!1657 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1658, file: !1538, line: 139)
!1658 = !DISubprogram(name: "tmpfile", scope: !732, file: !732, line: 159, type: !1659, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!1548}
!1661 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1662, file: !1538, line: 141)
!1662 = !DISubprogram(name: "tmpnam", scope: !732, file: !732, line: 173, type: !1663, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{!72, !72}
!1665 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1666, file: !1538, line: 143)
!1666 = !DISubprogram(name: "ungetc", scope: !732, file: !732, line: 639, type: !1582, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1667 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1668, file: !1538, line: 144)
!1668 = !DISubprogram(name: "vfprintf", scope: !732, file: !732, line: 327, type: !1669, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{!11, !1565, !842, !1267}
!1671 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1672, file: !1538, line: 145)
!1672 = !DISubprogram(name: "vprintf", scope: !1620, file: !1620, line: 36, type: !1673, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{!11, !842, !1267}
!1675 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1676, file: !1538, line: 146)
!1676 = !DISubprogram(name: "vsprintf", scope: !732, file: !732, line: 335, type: !1677, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!11, !882, !842, !1267}
!1679 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !1680, file: !1538, line: 175)
!1680 = !DISubprogram(name: "snprintf", scope: !732, file: !732, line: 340, type: !1681, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{!11, !882, !180, !842, null}
!1683 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !1684, file: !1538, line: 176)
!1684 = !DISubprogram(name: "vfscanf", scope: !732, file: !732, line: 420, type: !1669, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1685 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !1686, file: !1538, line: 177)
!1686 = !DISubprogram(name: "vscanf", scope: !732, file: !732, line: 428, type: !1673, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1687 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !1688, file: !1538, line: 178)
!1688 = !DISubprogram(name: "vsnprintf", scope: !732, file: !732, line: 344, type: !1689, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{!11, !882, !180, !842, !1267}
!1691 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !26, entity: !1692, file: !1538, line: 179)
!1692 = !DISubprogram(name: "vsscanf", scope: !732, file: !732, line: 432, type: !1693, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!11, !842, !842, !1267}
!1695 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1680, file: !1538, line: 185)
!1696 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1684, file: !1538, line: 186)
!1697 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1686, file: !1538, line: 187)
!1698 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1688, file: !1538, line: 188)
!1699 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1692, file: !1538, line: 189)
!1700 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1701, file: !1704, line: 56)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "max_align_t", file: !1702, line: 24, baseType: !1703)
!1702 = !DIFile(filename: "llvm-project/build/lib/clang/11.0.0/include/__stddef_max_align_t.h", directory: "/ssd1")
!1703 = !DICompositeType(tag: DW_TAG_structure_type, file: !1702, line: 19, flags: DIFlagFwdDecl, identifier: "_ZTS11max_align_t")
!1704 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/cstddef", directory: "")
!1705 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !24, file: !1706, line: 85)
!1706 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/shared_ptr_base.h", directory: "")
!1707 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1708, file: !1706, line: 86)
!1708 = !DIGlobalVariable(name: "__default_lock_policy", linkageName: "_ZN9__gnu_cxxL21__default_lock_policyE", scope: !26, file: !25, line: 53, type: !1709, isLocal: true, isDefinition: false)
!1709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !24)
!1710 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1711, file: !1715, line: 82)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "wctrans_t", file: !1712, line: 48, baseType: !1713)
!1712 = !DIFile(filename: "/usr/include/wctype.h", directory: "")
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 64)
!1714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1438)
!1715 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/cwctype", directory: "")
!1716 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1717, file: !1715, line: 83)
!1717 = !DIDerivedType(tag: DW_TAG_typedef, name: "wctype_t", file: !1718, line: 38, baseType: !89)
!1718 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h", directory: "")
!1719 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1134, file: !1715, line: 84)
!1720 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1721, file: !1715, line: 86)
!1721 = !DISubprogram(name: "iswalnum", scope: !1718, file: !1718, line: 95, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1722 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1723, file: !1715, line: 87)
!1723 = !DISubprogram(name: "iswalpha", scope: !1718, file: !1718, line: 101, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1724 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1725, file: !1715, line: 89)
!1725 = !DISubprogram(name: "iswblank", scope: !1718, file: !1718, line: 146, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1726 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1727, file: !1715, line: 91)
!1727 = !DISubprogram(name: "iswcntrl", scope: !1718, file: !1718, line: 104, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1728 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1729, file: !1715, line: 92)
!1729 = !DISubprogram(name: "iswctype", scope: !1718, file: !1718, line: 159, type: !1730, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{!11, !1134, !1717}
!1732 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1733, file: !1715, line: 93)
!1733 = !DISubprogram(name: "iswdigit", scope: !1718, file: !1718, line: 108, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1734 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1735, file: !1715, line: 94)
!1735 = !DISubprogram(name: "iswgraph", scope: !1718, file: !1718, line: 112, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1736 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1737, file: !1715, line: 95)
!1737 = !DISubprogram(name: "iswlower", scope: !1718, file: !1718, line: 117, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1738 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1739, file: !1715, line: 96)
!1739 = !DISubprogram(name: "iswprint", scope: !1718, file: !1718, line: 120, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1740 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1741, file: !1715, line: 97)
!1741 = !DISubprogram(name: "iswpunct", scope: !1718, file: !1718, line: 125, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1742 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1743, file: !1715, line: 98)
!1743 = !DISubprogram(name: "iswspace", scope: !1718, file: !1718, line: 130, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1744 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1745, file: !1715, line: 99)
!1745 = !DISubprogram(name: "iswupper", scope: !1718, file: !1718, line: 135, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1746 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1747, file: !1715, line: 100)
!1747 = !DISubprogram(name: "iswxdigit", scope: !1718, file: !1718, line: 140, type: !1369, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1748 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1749, file: !1715, line: 101)
!1749 = !DISubprogram(name: "towctrans", scope: !1712, file: !1712, line: 55, type: !1750, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1750 = !DISubroutineType(types: !1751)
!1751 = !{!1134, !1134, !1711}
!1752 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1753, file: !1715, line: 102)
!1753 = !DISubprogram(name: "towlower", scope: !1718, file: !1718, line: 166, type: !1754, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1754 = !DISubroutineType(types: !1755)
!1755 = !{!1134, !1134}
!1756 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1757, file: !1715, line: 103)
!1757 = !DISubprogram(name: "towupper", scope: !1718, file: !1718, line: 169, type: !1754, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1758 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1759, file: !1715, line: 104)
!1759 = !DISubprogram(name: "wctrans", scope: !1712, file: !1712, line: 52, type: !1760, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!1711, !602}
!1762 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !2, entity: !1763, file: !1715, line: 105)
!1763 = !DISubprogram(name: "wctype", scope: !1718, file: !1718, line: 155, type: !1764, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!1717, !602}
!1766 = !DIImportedEntity(tag: DW_TAG_imported_declaration, scope: !21, entity: !122, file: !747, line: 21)
!1767 = !{i32 7, !"Dwarf Version", i32 4}
!1768 = !{i32 2, !"Debug Info Version", i32 3}
!1769 = !{i32 1, !"wchar_size", i32 4}
!1770 = !{!"clang version 11.0.0 (https://github.com/hjjq/LLVM-Pavise.git 3d210af9293f24d5e7772804ba7d1c4b26f9bb1a)"}
!1771 = distinct !DISubprogram(name: "__cxx_global_var_init", scope: !3, file: !3, line: 74, type: !767, scopeLine: 74, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !21, retainedNodes: !77)
!1772 = !DILocation(line: 74, column: 25, scope: !1771)
!1773 = distinct !DISubprogram(name: "__cxx_global_var_init.1", scope: !747, file: !747, line: 24, type: !767, scopeLine: 24, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !21, retainedNodes: !77)
!1774 = !DILocation(line: 24, column: 30, scope: !1773)
!1775 = distinct !DISubprogram(name: "persistent_ptr", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEC2Ev", scope: !224, file: !225, line: 134, type: !406, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !405, retainedNodes: !1776)
!1776 = !{!1777}
!1777 = !DILocalVariable(name: "this", arg: 1, scope: !1775, type: !1778, flags: DIFlagArtificial | DIFlagObjectPointer)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!1779 = !{!1780, !1780, i64 0}
!1780 = !{!"any pointer", !1781, i64 0}
!1781 = !{!"omnipotent char", !1782, i64 0}
!1782 = !{!"Simple C++ TBAA"}
!1783 = !DILocation(line: 0, scope: !1775)
!1784 = !DILocation(line: 134, column: 27, scope: !1775)
!1785 = !DILocation(line: 134, column: 2, scope: !1775)
!1786 = distinct !DISubprogram(name: "assoc_init", scope: !747, file: !747, line: 33, type: !1787, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, retainedNodes: !1789)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!130, !13, !602}
!1789 = !{!1790, !1791, !1792}
!1790 = !DILocalVariable(name: "recover", arg: 1, scope: !1786, file: !747, line: 33, type: !13)
!1791 = !DILocalVariable(name: "path", arg: 2, scope: !1786, file: !747, line: 33, type: !602)
!1792 = !DILocalVariable(name: "pop", scope: !1786, file: !747, line: 34, type: !117)
!1793 = !{!1794, !1794, i64 0}
!1794 = !{!"bool", !1781, i64 0}
!1795 = !DILocation(line: 33, column: 30, scope: !1786)
!1796 = !DILocation(line: 33, column: 51, scope: !1786)
!1797 = !DILocation(line: 34, column: 5, scope: !1786)
!1798 = !DILocation(line: 34, column: 17, scope: !1786)
!1799 = !DILocation(line: 35, column: 9, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1786, file: !747, line: 35, column: 9)
!1801 = !{i8 0, i8 2}
!1802 = !DILocation(line: 35, column: 9, scope: !1786)
!1803 = !DILocation(line: 35, column: 19, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1800, file: !747, line: 35, column: 18)
!1805 = !DILocation(line: 36, column: 15, scope: !1804)
!1806 = !DILocation(line: 36, column: 33, scope: !1804)
!1807 = !DILocation(line: 36, column: 39, scope: !1804)
!1808 = !DILocation(line: 36, column: 13, scope: !1804)
!1809 = !DILocation(line: 36, column: 9, scope: !1804)
!1810 = !DILocation(line: 37, column: 29, scope: !1804)
!1811 = !DILocation(line: 37, column: 33, scope: !1804)
!1812 = !DILocation(line: 37, column: 27, scope: !1804)
!1813 = !DILocation(line: 37, column: 9, scope: !1804)
!1814 = !DILocation(line: 39, column: 17, scope: !1804)
!1815 = !DILocation(line: 39, column: 9, scope: !1804)
!1816 = !DILocation(line: 40, column: 17, scope: !1804)
!1817 = !DILocation(line: 40, column: 9, scope: !1804)
!1818 = !DILocation(line: 41, column: 17, scope: !1804)
!1819 = !DILocation(line: 41, column: 96, scope: !1804)
!1820 = !DILocation(line: 41, column: 78, scope: !1804)
!1821 = !{i64 0, i64 8, !1822, i64 8, i64 8, !1822}
!1822 = !{!1823, !1823, i64 0}
!1823 = !{!"long", !1781, i64 0}
!1824 = !DILocation(line: 41, column: 63, scope: !1804)
!1825 = !DILocation(line: 41, column: 9, scope: !1804)
!1826 = !DILocation(line: 42, column: 17, scope: !1804)
!1827 = !DILocation(line: 42, column: 9, scope: !1804)
!1828 = !DILocation(line: 43, column: 5, scope: !1804)
!1829 = !DILocation(line: 58, column: 1, scope: !1804)
!1830 = !DILocation(line: 43, column: 13, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1800, file: !747, line: 43, column: 12)
!1832 = !DILocation(line: 44, column: 15, scope: !1831)
!1833 = !DILocation(line: 44, column: 35, scope: !1831)
!1834 = !DILocation(line: 44, column: 41, scope: !1831)
!1835 = !DILocation(line: 44, column: 13, scope: !1831)
!1836 = !DILocation(line: 44, column: 9, scope: !1831)
!1837 = !DILocation(line: 45, column: 29, scope: !1831)
!1838 = !DILocation(line: 45, column: 33, scope: !1831)
!1839 = !DILocation(line: 45, column: 27, scope: !1831)
!1840 = !DILocation(line: 45, column: 9, scope: !1831)
!1841 = !DILocation(line: 46, column: 9, scope: !1831)
!1842 = !DILocation(line: 46, column: 33, scope: !1831)
!1843 = !DILocation(line: 46, column: 37, scope: !1831)
!1844 = !DILocation(line: 46, column: 28, scope: !1831)
!1845 = !DILocation(line: 51, column: 17, scope: !1831)
!1846 = !DILocation(line: 51, column: 9, scope: !1831)
!1847 = !DILocation(line: 52, column: 17, scope: !1831)
!1848 = !DILocation(line: 52, column: 9, scope: !1831)
!1849 = !DILocation(line: 53, column: 17, scope: !1831)
!1850 = !DILocation(line: 53, column: 96, scope: !1831)
!1851 = !DILocation(line: 53, column: 78, scope: !1831)
!1852 = !DILocation(line: 53, column: 63, scope: !1831)
!1853 = !DILocation(line: 53, column: 9, scope: !1831)
!1854 = !DILocation(line: 54, column: 17, scope: !1831)
!1855 = !DILocation(line: 54, column: 9, scope: !1831)
!1856 = !DILocation(line: 58, column: 1, scope: !1831)
!1857 = !DILocation(line: 56, column: 17, scope: !1786)
!1858 = !DILocation(line: 56, column: 21, scope: !1786)
!1859 = !DILocation(line: 56, column: 15, scope: !1786)
!1860 = !DILocation(line: 57, column: 12, scope: !1786)
!1861 = !DILocation(line: 58, column: 1, scope: !1786)
!1862 = distinct !DISubprogram(name: "pool", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEC2Ev", scope: !117, file: !118, line: 440, type: !195, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !194, retainedNodes: !1863)
!1863 = !{!1864}
!1864 = !DILocalVariable(name: "this", arg: 1, scope: !1862, type: !1865, flags: DIFlagArtificial | DIFlagObjectPointer)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!1866 = !DILocation(line: 0, scope: !1862)
!1867 = !DILocation(line: 440, column: 26, scope: !1862)
!1868 = !DILocation(line: 440, column: 2, scope: !1862)
!1869 = !{!1870, !1870, i64 0}
!1870 = !{!"vtable pointer", !1782, i64 0}
!1871 = distinct !DISubprogram(name: "open", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE4openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_", scope: !117, file: !118, line: 623, type: !592, scopeLine: 624, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !591, retainedNodes: !1872)
!1872 = !{!1873, !1874}
!1873 = !DILocalVariable(name: "path", arg: 1, scope: !1871, file: !118, line: 623, type: !161)
!1874 = !DILocalVariable(name: "layout", arg: 2, scope: !1871, file: !118, line: 623, type: !161)
!1875 = !DILocation(line: 623, column: 26, scope: !1871)
!1876 = !DILocation(line: 623, column: 51, scope: !1871)
!1877 = !DILocation(line: 625, column: 18, scope: !1871)
!1878 = !DILocation(line: 625, column: 34, scope: !1871)
!1879 = !DILocation(line: 625, column: 40, scope: !1871)
!1880 = !DILocation(line: 625, column: 10, scope: !1871)
!1881 = !DILocation(line: 625, column: 3, scope: !1871)
!1882 = distinct !DISubprogram(name: "allocator", linkageName: "_ZNSaIcEC2Ev", scope: !622, file: !623, line: 131, type: !1883, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !1886, retainedNodes: !1887)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{null, !1885}
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1886 = !DISubprogram(name: "allocator", scope: !622, file: !623, line: 131, type: !1883, scopeLine: 131, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1887 = !{!1888}
!1888 = !DILocalVariable(name: "this", arg: 1, scope: !1882, type: !1889, flags: DIFlagArtificial | DIFlagObjectPointer)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!1890 = !DILocation(line: 0, scope: !1882)
!1891 = !DILocation(line: 131, column: 27, scope: !1882)
!1892 = !DILocation(line: 131, column: 7, scope: !1882)
!1893 = !DILocation(line: 131, column: 29, scope: !1882)
!1894 = distinct !DISubprogram(name: "basic_string", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_", scope: !43, file: !42, line: 509, type: !1895, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !1898, retainedNodes: !1899)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{null, !1897, !602, !646}
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!1898 = !DISubprogram(name: "basic_string", scope: !43, file: !42, line: 509, type: !1895, scopeLine: 509, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1899 = !{!1900, !1902, !1903}
!1900 = !DILocalVariable(name: "this", arg: 1, scope: !1894, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!1902 = !DILocalVariable(name: "__s", arg: 2, scope: !1894, file: !42, line: 509, type: !602)
!1903 = !DILocalVariable(name: "__a", arg: 3, scope: !1894, file: !42, line: 509, type: !646)
!1904 = !DILocation(line: 0, scope: !1894)
!1905 = !DILocation(line: 509, column: 34, scope: !1894)
!1906 = !DILocation(line: 509, column: 53, scope: !1894)
!1907 = !DILocation(line: 510, column: 9, scope: !1894)
!1908 = !DILocation(line: 510, column: 21, scope: !1894)
!1909 = !DILocation(line: 510, column: 38, scope: !1894)
!1910 = !DILocation(line: 511, column: 22, scope: !1911)
!1911 = distinct !DILexicalBlock(scope: !1894, file: !42, line: 511, column: 7)
!1912 = !DILocation(line: 511, column: 27, scope: !1911)
!1913 = !DILocation(line: 511, column: 33, scope: !1911)
!1914 = !DILocation(line: 511, column: 59, scope: !1911)
!1915 = !DILocation(line: 511, column: 39, scope: !1911)
!1916 = !DILocation(line: 511, column: 37, scope: !1911)
!1917 = !DILocation(line: 511, column: 66, scope: !1911)
!1918 = !DILocation(line: 511, column: 69, scope: !1911)
!1919 = !DILocation(line: 511, column: 9, scope: !1911)
!1920 = !DILocation(line: 511, column: 77, scope: !1894)
!1921 = !DILocation(line: 511, column: 77, scope: !1911)
!1922 = distinct !DISubprogram(name: "operator=", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEaSEOS6_", scope: !117, file: !118, line: 460, type: !212, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !211, retainedNodes: !1923)
!1923 = !{!1924, !1925}
!1924 = !DILocalVariable(name: "this", arg: 1, scope: !1922, type: !1865, flags: DIFlagArtificial | DIFlagObjectPointer)
!1925 = !DILocalVariable(arg: 2, scope: !1922, file: !118, line: 460, type: !206)
!1926 = !DILocation(line: 0, scope: !1922)
!1927 = !DILocation(line: 460, column: 25, scope: !1922)
!1928 = !DILocation(line: 460, column: 44, scope: !1929)
!1929 = distinct !DILexicalBlock(scope: !1922, file: !118, line: 460, column: 44)
!1930 = distinct !DISubprogram(name: "~basic_string", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev", scope: !43, file: !42, line: 646, type: !1931, scopeLine: 647, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !1933, retainedNodes: !1934)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{null, !1897}
!1933 = !DISubprogram(name: "~basic_string", scope: !43, file: !42, line: 646, type: !1931, scopeLine: 646, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1934 = !{!1935}
!1935 = !DILocalVariable(name: "this", arg: 1, scope: !1930, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!1936 = !DILocation(line: 0, scope: !1930)
!1937 = !DILocation(line: 647, column: 9, scope: !1938)
!1938 = distinct !DILexicalBlock(scope: !1930, file: !42, line: 647, column: 7)
!1939 = !DILocation(line: 647, column: 23, scope: !1938)
!1940 = !DILocation(line: 647, column: 23, scope: !1930)
!1941 = distinct !DISubprogram(name: "root", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE4rootEv", scope: !117, file: !118, line: 595, type: !222, scopeLine: 596, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !221, retainedNodes: !1942)
!1942 = !{!1943, !1944}
!1943 = !DILocalVariable(name: "this", arg: 1, scope: !1941, type: !1865, flags: DIFlagArtificial | DIFlagObjectPointer)
!1944 = !DILocalVariable(name: "root", scope: !1941, file: !118, line: 600, type: !224)
!1945 = !DILocation(line: 0, scope: !1941)
!1946 = !DILocation(line: 597, column: 7, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1941, file: !118, line: 597, column: 7)
!1948 = !{!1949, !1780, i64 8}
!1949 = !{!"_ZTSN4pmem3obj9pool_baseE", !1780, i64 8}
!1950 = !DILocation(line: 597, column: 11, scope: !1947)
!1951 = !DILocation(line: 597, column: 7, scope: !1941)
!1952 = !DILocation(line: 598, column: 4, scope: !1947)
!1953 = !DILocation(line: 598, column: 10, scope: !1947)
!1954 = !DILocation(line: 602, column: 2, scope: !1947)
!1955 = !DILocation(line: 600, column: 21, scope: !1941)
!1956 = !DILocation(line: 600, column: 47, scope: !1941)
!1957 = !DILocation(line: 600, column: 28, scope: !1941)
!1958 = !DILocation(line: 601, column: 3, scope: !1941)
!1959 = distinct !DISubprogram(name: "operator=", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEaSEOS6_", scope: !224, file: !225, line: 132, type: !1960, scopeLine: 132, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !1963, retainedNodes: !1964)
!1960 = !DISubroutineType(types: !1961)
!1961 = !{!569, !408, !1962}
!1962 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !224, size: 64)
!1963 = !DISubprogram(name: "operator=", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEaSEOS6_", scope: !224, type: !1960, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!1964 = !{!1965, !1966}
!1965 = !DILocalVariable(name: "this", arg: 1, scope: !1959, type: !1778, flags: DIFlagArtificial | DIFlagObjectPointer)
!1966 = !DILocalVariable(arg: 2, scope: !1959, type: !1962)
!1967 = !DILocation(line: 0, scope: !1959)
!1968 = !DILocation(line: 132, column: 7, scope: !1969)
!1969 = distinct !DILexicalBlock(scope: !1959, file: !225, line: 132, column: 7)
!1970 = distinct !DISubprogram(name: "pmemobj_direct_inline", linkageName: "_ZL21pmemobj_direct_inline7pmemoid", scope: !79, file: !79, line: 117, type: !1971, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !21, retainedNodes: !1973)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{!71, !233}
!1973 = !{!1974, !1975}
!1974 = !DILocalVariable(name: "oid", arg: 1, scope: !1970, file: !79, line: 117, type: !233)
!1975 = !DILocalVariable(name: "cache", scope: !1970, file: !79, line: 122, type: !1976)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_pobj_pcache", file: !79, line: 107, size: 192, flags: DIFlagTypePassByValue, elements: !1978, identifier: "_ZTS12_pobj_pcache")
!1978 = !{!1979, !1980, !1981}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "pop", scope: !1977, file: !79, line: 108, baseType: !130, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "uuid_lo", scope: !1977, file: !79, line: 109, baseType: !105, size: 64, offset: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "invalidate", scope: !1977, file: !79, line: 110, baseType: !11, size: 32, offset: 128)
!1982 = !DILocation(line: 117, column: 31, scope: !1970)
!1983 = !DILocation(line: 119, column: 10, scope: !1984)
!1984 = distinct !DILexicalBlock(scope: !1970, file: !79, line: 119, column: 6)
!1985 = !{!1986, !1823, i64 8}
!1986 = !{!"_ZTS7pmemoid", !1823, i64 0, !1823, i64 8}
!1987 = !DILocation(line: 119, column: 14, scope: !1984)
!1988 = !DILocation(line: 119, column: 19, scope: !1984)
!1989 = !DILocation(line: 119, column: 26, scope: !1984)
!1990 = !{!1986, !1823, i64 0}
!1991 = !DILocation(line: 119, column: 39, scope: !1984)
!1992 = !DILocation(line: 119, column: 6, scope: !1970)
!1993 = !DILocation(line: 120, column: 3, scope: !1984)
!1994 = !DILocation(line: 122, column: 2, scope: !1970)
!1995 = !DILocation(line: 122, column: 23, scope: !1970)
!1996 = !DILocation(line: 123, column: 6, scope: !1997)
!1997 = distinct !DILexicalBlock(scope: !1970, file: !79, line: 123, column: 6)
!1998 = !{!1999, !1999, i64 0}
!1999 = !{!"int", !1781, i64 0}
!2000 = !DILocation(line: 123, column: 32, scope: !1997)
!2001 = !DILocation(line: 123, column: 39, scope: !1997)
!2002 = !{!2003, !1999, i64 16}
!2003 = !{!"_ZTS12_pobj_pcache", !1780, i64 0, !1823, i64 8, !1999, i64 16}
!2004 = !DILocation(line: 123, column: 29, scope: !1997)
!2005 = !DILocation(line: 123, column: 50, scope: !1997)
!2006 = !DILocation(line: 124, column: 4, scope: !1997)
!2007 = !DILocation(line: 124, column: 11, scope: !1997)
!2008 = !{!2003, !1823, i64 8}
!2009 = !DILocation(line: 124, column: 26, scope: !1997)
!2010 = !DILocation(line: 124, column: 19, scope: !1997)
!2011 = !DILocation(line: 123, column: 6, scope: !1970)
!2012 = !DILocation(line: 125, column: 23, scope: !2013)
!2013 = distinct !DILexicalBlock(scope: !1997, file: !79, line: 124, column: 40)
!2014 = !DILocation(line: 125, column: 3, scope: !2013)
!2015 = !DILocation(line: 125, column: 10, scope: !2013)
!2016 = !DILocation(line: 125, column: 21, scope: !2013)
!2017 = !DILocation(line: 127, column: 42, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !2013, file: !79, line: 127, column: 7)
!2019 = !DILocation(line: 127, column: 22, scope: !2018)
!2020 = !DILocation(line: 127, column: 9, scope: !2018)
!2021 = !DILocation(line: 127, column: 16, scope: !2018)
!2022 = !DILocation(line: 127, column: 20, scope: !2018)
!2023 = !{!2003, !1780, i64 0}
!2024 = !DILocation(line: 127, column: 8, scope: !2018)
!2025 = !DILocation(line: 127, column: 7, scope: !2013)
!2026 = !DILocation(line: 128, column: 4, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !2018, file: !79, line: 127, column: 49)
!2028 = !DILocation(line: 128, column: 11, scope: !2027)
!2029 = !DILocation(line: 128, column: 19, scope: !2027)
!2030 = !DILocation(line: 129, column: 4, scope: !2027)
!2031 = !DILocation(line: 132, column: 24, scope: !2013)
!2032 = !DILocation(line: 132, column: 3, scope: !2013)
!2033 = !DILocation(line: 132, column: 10, scope: !2013)
!2034 = !DILocation(line: 132, column: 18, scope: !2013)
!2035 = !DILocation(line: 133, column: 2, scope: !2013)
!2036 = !DILocation(line: 135, column: 29, scope: !1970)
!2037 = !DILocation(line: 135, column: 36, scope: !1970)
!2038 = !DILocation(line: 135, column: 18, scope: !1970)
!2039 = !DILocation(line: 135, column: 46, scope: !1970)
!2040 = !DILocation(line: 135, column: 40, scope: !1970)
!2041 = !DILocation(line: 135, column: 9, scope: !1970)
!2042 = !DILocation(line: 135, column: 2, scope: !1970)
!2043 = !DILocation(line: 136, column: 1, scope: !1970)
!2044 = distinct !DISubprogram(name: "raw", linkageName: "_ZNK4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE3rawEv", scope: !228, file: !229, line: 304, type: !390, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !389, retainedNodes: !2045)
!2045 = !{!2046}
!2046 = !DILocalVariable(name: "this", arg: 1, scope: !2044, type: !2047, flags: DIFlagArtificial | DIFlagObjectPointer)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!2048 = !DILocation(line: 0, scope: !2044)
!2049 = !DILocation(line: 306, column: 16, scope: !2044)
!2050 = !DILocation(line: 306, column: 3, scope: !2044)
!2051 = distinct !DISubprogram(name: "create", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEE6createERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESE_mj", scope: !117, file: !118, line: 645, type: !595, scopeLine: 647, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !594, retainedNodes: !2052)
!2052 = !{!2053, !2054, !2055, !2056}
!2053 = !DILocalVariable(name: "path", arg: 1, scope: !2051, file: !118, line: 645, type: !161)
!2054 = !DILocalVariable(name: "layout", arg: 2, scope: !2051, file: !118, line: 645, type: !161)
!2055 = !DILocalVariable(name: "size", arg: 3, scope: !2051, file: !118, line: 646, type: !168)
!2056 = !DILocalVariable(name: "mode", arg: 4, scope: !2051, file: !118, line: 646, type: !170)
!2057 = !DILocation(line: 645, column: 28, scope: !2051)
!2058 = !DILocation(line: 645, column: 53, scope: !2051)
!2059 = !DILocation(line: 646, column: 21, scope: !2051)
!2060 = !DILocation(line: 646, column: 53, scope: !2051)
!2061 = !DILocation(line: 648, column: 18, scope: !2051)
!2062 = !DILocation(line: 648, column: 36, scope: !2051)
!2063 = !DILocation(line: 648, column: 42, scope: !2051)
!2064 = !DILocation(line: 648, column: 50, scope: !2051)
!2065 = !DILocation(line: 648, column: 56, scope: !2051)
!2066 = !DILocation(line: 648, column: 10, scope: !2051)
!2067 = !DILocation(line: 648, column: 3, scope: !2051)
!2068 = distinct !DISubprogram(name: "operator->", linkageName: "_ZNK4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEEptEv", scope: !224, file: !225, line: 173, type: !561, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !560, retainedNodes: !2069)
!2069 = !{!2070}
!2070 = !DILocalVariable(name: "this", arg: 1, scope: !2068, type: !2071, flags: DIFlagArtificial | DIFlagObjectPointer)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!2072 = !DILocation(line: 0, scope: !2068)
!2073 = !DILocation(line: 176, column: 16, scope: !2068)
!2074 = !DILocation(line: 176, column: 3, scope: !2068)
!2075 = distinct !DISubprogram(name: "init", linkageName: "_ZN7PMDKMapImP8_stritemE4initEP11pmemobjpool", scope: !251, file: !252, line: 22, type: !307, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !306, retainedNodes: !2076)
!2076 = !{!2077, !2078}
!2077 = !DILocalVariable(name: "this", arg: 1, scope: !2075, type: !565, flags: DIFlagArtificial | DIFlagObjectPointer)
!2078 = !DILocalVariable(name: "pop", arg: 2, scope: !2075, file: !252, line: 22, type: !130)
!2079 = !DILocation(line: 0, scope: !2075)
!2080 = !DILocation(line: 22, column: 29, scope: !2075)
!2081 = !DILocation(line: 23, column: 13, scope: !2082)
!2082 = distinct !DILexicalBlock(scope: !2075, file: !252, line: 23, column: 13)
!2083 = !{!1781, !1781, i64 0}
!2084 = !DILocation(line: 23, column: 13, scope: !2075)
!2085 = !DILocation(line: 24, column: 23, scope: !2082)
!2086 = !DILocation(line: 24, column: 13, scope: !2082)
!2087 = !DILocation(line: 25, column: 5, scope: !2075)
!2088 = distinct !DISubprogram(name: "handle", linkageName: "_ZN4pmem3obj9pool_base6handleEv", scope: !122, file: !118, line: 402, type: !191, scopeLine: 403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !190, retainedNodes: !2089)
!2089 = !{!2090}
!2090 = !DILocalVariable(name: "this", arg: 1, scope: !2088, type: !2091, flags: DIFlagArtificial | DIFlagObjectPointer)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!2092 = !DILocation(line: 0, scope: !2088)
!2093 = !DILocation(line: 404, column: 16, scope: !2088)
!2094 = !DILocation(line: 404, column: 3, scope: !2088)
!2095 = distinct !DISubprogram(name: "convertKey", linkageName: "_Z10convertKeyPKcm", scope: !747, file: !747, line: 60, type: !2096, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, retainedNodes: !2100)
!2096 = !DISubroutineType(types: !2097)
!2097 = !{!2098, !602, !2099}
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "KEY_T", file: !318, line: 123, baseType: !105)
!2099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!2100 = !{!2101, !2102, !2103}
!2101 = !DILocalVariable(name: "key", arg: 1, scope: !2095, file: !747, line: 60, type: !602)
!2102 = !DILocalVariable(name: "nkey", arg: 2, scope: !2095, file: !747, line: 60, type: !2099)
!2103 = !DILocalVariable(name: "key_buf", scope: !2095, file: !747, line: 61, type: !2104)
!2104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !73, size: 128, elements: !2105)
!2105 = !{!2106}
!2106 = !DISubrange(count: 16)
!2107 = !DILocation(line: 60, column: 30, scope: !2095)
!2108 = !DILocation(line: 60, column: 48, scope: !2095)
!2109 = !DILocation(line: 61, column: 5, scope: !2095)
!2110 = !DILocation(line: 61, column: 10, scope: !2095)
!2111 = !DILocation(line: 62, column: 5, scope: !2095)
!2112 = !DILocation(line: 63, column: 5, scope: !2095)
!2113 = !DILocation(line: 63, column: 22, scope: !2095)
!2114 = !DILocation(line: 63, column: 27, scope: !2095)
!2115 = !DILocation(line: 64, column: 17, scope: !2095)
!2116 = !DILocation(line: 64, column: 12, scope: !2095)
!2117 = !DILocation(line: 65, column: 1, scope: !2095)
!2118 = !DILocation(line: 64, column: 5, scope: !2095)
!2119 = !DILocation(line: 366, column: 1, scope: !787)
!2120 = !DILocation(line: 368, column: 18, scope: !787)
!2121 = !DILocation(line: 368, column: 10, scope: !787)
!2122 = !DILocation(line: 368, column: 3, scope: !787)
!2123 = distinct !DISubprogram(name: "assoc_find", linkageName: "_Z10assoc_findm", scope: !747, file: !747, line: 68, type: !2124, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, retainedNodes: !2128)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{!2126, !2098}
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "item", file: !318, line: 143, baseType: !317)
!2128 = !{!2129, !2130}
!2129 = !DILocalVariable(name: "key", arg: 1, scope: !2123, file: !747, line: 68, type: !2098)
!2130 = !DILocalVariable(name: "found_item", scope: !2123, file: !747, line: 69, type: !2131)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2132 = !DILocation(line: 68, column: 24, scope: !2123)
!2133 = !DILocation(line: 69, column: 5, scope: !2123)
!2134 = !DILocation(line: 69, column: 12, scope: !2123)
!2135 = !DILocation(line: 69, column: 25, scope: !2123)
!2136 = !DILocation(line: 69, column: 49, scope: !2123)
!2137 = !DILocation(line: 69, column: 60, scope: !2123)
!2138 = !DILocation(line: 69, column: 44, scope: !2123)
!2139 = !DILocation(line: 70, column: 9, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2123, file: !747, line: 70, column: 9)
!2141 = !DILocation(line: 70, column: 20, scope: !2140)
!2142 = !DILocation(line: 70, column: 9, scope: !2123)
!2143 = !DILocation(line: 71, column: 9, scope: !2140)
!2144 = !DILocation(line: 72, column: 13, scope: !2123)
!2145 = !DILocation(line: 72, column: 12, scope: !2123)
!2146 = !DILocation(line: 72, column: 5, scope: !2123)
!2147 = !DILocation(line: 73, column: 1, scope: !2123)
!2148 = distinct !DISubprogram(name: "find", linkageName: "_ZN7PMDKMapImP8_stritemE4findEP11pmemobjpoolm", scope: !251, file: !252, line: 46, type: !339, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !338, retainedNodes: !2149)
!2149 = !{!2150, !2151, !2152, !2153}
!2150 = !DILocalVariable(name: "this", arg: 1, scope: !2148, type: !565, flags: DIFlagArtificial | DIFlagObjectPointer)
!2151 = !DILocalVariable(name: "pop", arg: 2, scope: !2148, file: !252, line: 46, type: !130)
!2152 = !DILocalVariable(name: "key", arg: 3, scope: !2148, file: !252, line: 46, type: !89)
!2153 = !DILocalVariable(name: "value_ptr", scope: !2148, file: !252, line: 47, type: !233)
!2154 = !DILocation(line: 0, scope: !2148)
!2155 = !DILocation(line: 46, column: 26, scope: !2148)
!2156 = !DILocation(line: 46, column: 33, scope: !2148)
!2157 = !DILocation(line: 47, column: 9, scope: !2148)
!2158 = !DILocation(line: 47, column: 17, scope: !2148)
!2159 = !DILocation(line: 47, column: 39, scope: !2148)
!2160 = !DILocation(line: 47, column: 44, scope: !2148)
!2161 = !{i64 0, i64 8, !1822, i64 8, i64 8, !1822, i64 0, i64 8, !1779, i64 0, i64 8, !1779}
!2162 = !DILocation(line: 47, column: 50, scope: !2148)
!2163 = !DILocation(line: 47, column: 29, scope: !2148)
!2164 = !DILocation(line: 48, column: 13, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2148, file: !252, line: 48, column: 13)
!2166 = !DILocation(line: 48, column: 13, scope: !2148)
!2167 = !DILocation(line: 49, column: 13, scope: !2168)
!2168 = distinct !DILexicalBlock(scope: !2165, file: !252, line: 48, column: 37)
!2169 = !DILocation(line: 51, column: 36, scope: !2148)
!2170 = !DILocation(line: 51, column: 21, scope: !2148)
!2171 = !DILocation(line: 51, column: 16, scope: !2148)
!2172 = !DILocation(line: 51, column: 9, scope: !2148)
!2173 = !DILocation(line: 52, column: 5, scope: !2148)
!2174 = distinct !DISubprogram(name: "assoc_find", scope: !747, file: !747, line: 75, type: !2175, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, retainedNodes: !2177)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{!2126, !602, !2099}
!2177 = !{!2178, !2179}
!2178 = !DILocalVariable(name: "key", arg: 1, scope: !2174, file: !747, line: 75, type: !602)
!2179 = !DILocalVariable(name: "nkey", arg: 2, scope: !2174, file: !747, line: 75, type: !2099)
!2180 = !DILocation(line: 75, column: 30, scope: !2174)
!2181 = !DILocation(line: 75, column: 48, scope: !2174)
!2182 = !DILocation(line: 76, column: 34, scope: !2174)
!2183 = !DILocation(line: 76, column: 39, scope: !2174)
!2184 = !DILocation(line: 76, column: 23, scope: !2174)
!2185 = !DILocation(line: 76, column: 12, scope: !2174)
!2186 = !DILocation(line: 76, column: 5, scope: !2174)
!2187 = distinct !DISubprogram(name: "assoc_insert", scope: !747, file: !747, line: 80, type: !2188, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, retainedNodes: !2190)
!2188 = !DISubroutineType(types: !2189)
!2189 = !{!11, !2126}
!2190 = !{!2191, !2192}
!2191 = !DILocalVariable(name: "it", arg: 1, scope: !2187, file: !747, line: 80, type: !2126)
!2192 = !DILocalVariable(name: "key", scope: !2187, file: !747, line: 82, type: !89)
!2193 = !DILocation(line: 80, column: 24, scope: !2187)
!2194 = !DILocation(line: 81, column: 5, scope: !2187)
!2195 = !{!2196, !1781, i64 41}
!2196 = !{!"_ZTS8_stritem", !1780, i64 0, !1780, i64 8, !1780, i64 16, !1999, i64 24, !1999, i64 28, !1999, i64 32, !2197, i64 36, !1781, i64 38, !1781, i64 39, !1781, i64 40, !1781, i64 41, !1823, i64 48, !1781, i64 56}
!2197 = !{!"short", !1781, i64 0}
!2198 = !DILocation(line: 82, column: 5, scope: !2187)
!2199 = !DILocation(line: 82, column: 10, scope: !2187)
!2200 = !DILocation(line: 82, column: 27, scope: !2187)
!2201 = !DILocation(line: 82, column: 41, scope: !2187)
!2202 = !DILocation(line: 82, column: 45, scope: !2187)
!2203 = !DILocation(line: 82, column: 16, scope: !2187)
!2204 = !DILocation(line: 83, column: 5, scope: !2187)
!2205 = !DILocation(line: 84, column: 5, scope: !2187)
!2206 = !DILocation(line: 84, column: 31, scope: !2187)
!2207 = !DILocation(line: 84, column: 42, scope: !2187)
!2208 = !DILocation(line: 84, column: 47, scope: !2187)
!2209 = !DILocation(line: 84, column: 24, scope: !2187)
!2210 = !DILocation(line: 86, column: 1, scope: !2187)
!2211 = !DILocation(line: 85, column: 5, scope: !2187)
!2212 = distinct !DISubprogram(name: "insert", linkageName: "_ZN7PMDKMapImP8_stritemE6insertEP11pmemobjpoolmS1_", scope: !251, file: !252, line: 39, type: !314, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !313, retainedNodes: !2213)
!2213 = !{!2214, !2215, !2216, !2217, !2218}
!2214 = !DILocalVariable(name: "this", arg: 1, scope: !2212, type: !565, flags: DIFlagArtificial | DIFlagObjectPointer)
!2215 = !DILocalVariable(name: "pop", arg: 2, scope: !2212, file: !252, line: 39, type: !130)
!2216 = !DILocalVariable(name: "key", arg: 3, scope: !2212, file: !252, line: 39, type: !89)
!2217 = !DILocalVariable(name: "value", arg: 4, scope: !2212, file: !252, line: 39, type: !316)
!2218 = !DILocalVariable(name: "value_ptr", scope: !2212, file: !252, line: 40, type: !233)
!2219 = !DILocation(line: 0, scope: !2212)
!2220 = !DILocation(line: 39, column: 30, scope: !2212)
!2221 = !DILocation(line: 39, column: 37, scope: !2212)
!2222 = !DILocation(line: 39, column: 44, scope: !2212)
!2223 = !DILocation(line: 40, column: 9, scope: !2212)
!2224 = !DILocation(line: 40, column: 17, scope: !2212)
!2225 = !DILocation(line: 41, column: 24, scope: !2212)
!2226 = !DILocation(line: 41, column: 9, scope: !2212)
!2227 = !DILocation(line: 42, column: 44, scope: !2212)
!2228 = !DILocation(line: 42, column: 30, scope: !2212)
!2229 = !DILocation(line: 42, column: 15, scope: !2212)
!2230 = !DILocation(line: 42, column: 10, scope: !2212)
!2231 = !DILocation(line: 42, column: 42, scope: !2212)
!2232 = !DILocation(line: 43, column: 22, scope: !2212)
!2233 = !DILocation(line: 43, column: 27, scope: !2212)
!2234 = !DILocation(line: 43, column: 33, scope: !2212)
!2235 = !DILocation(line: 43, column: 38, scope: !2212)
!2236 = !DILocation(line: 43, column: 9, scope: !2212)
!2237 = !DILocation(line: 44, column: 5, scope: !2212)
!2238 = distinct !DISubprogram(name: "assoc_delete", scope: !747, file: !747, line: 88, type: !2239, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, retainedNodes: !2241)
!2239 = !DISubroutineType(types: !2240)
!2240 = !{null, !602, !2099}
!2241 = !{!2242, !2243, !2244}
!2242 = !DILocalVariable(name: "key", arg: 1, scope: !2238, file: !747, line: 88, type: !602)
!2243 = !DILocalVariable(name: "nkey", arg: 2, scope: !2238, file: !747, line: 88, type: !2099)
!2244 = !DILocalVariable(name: "uint_key", scope: !2238, file: !747, line: 92, type: !89)
!2245 = !DILocation(line: 88, column: 31, scope: !2238)
!2246 = !DILocation(line: 88, column: 49, scope: !2238)
!2247 = !DILocation(line: 91, column: 5, scope: !2238)
!2248 = !DILocation(line: 92, column: 5, scope: !2238)
!2249 = !DILocation(line: 92, column: 10, scope: !2238)
!2250 = !DILocation(line: 92, column: 32, scope: !2238)
!2251 = !DILocation(line: 92, column: 37, scope: !2238)
!2252 = !DILocation(line: 92, column: 21, scope: !2238)
!2253 = !DILocation(line: 93, column: 5, scope: !2238)
!2254 = !DILocation(line: 93, column: 30, scope: !2238)
!2255 = !DILocation(line: 93, column: 41, scope: !2238)
!2256 = !DILocation(line: 93, column: 24, scope: !2238)
!2257 = !DILocation(line: 94, column: 1, scope: !2238)
!2258 = distinct !DISubprogram(name: "erase", linkageName: "_ZN7PMDKMapImP8_stritemE5eraseEP11pmemobjpoolm", scope: !251, file: !252, line: 54, type: !343, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !342, retainedNodes: !2259)
!2259 = !{!2260, !2261, !2262, !2263}
!2260 = !DILocalVariable(name: "this", arg: 1, scope: !2258, type: !565, flags: DIFlagArtificial | DIFlagObjectPointer)
!2261 = !DILocalVariable(name: "pop", arg: 2, scope: !2258, file: !252, line: 54, type: !130)
!2262 = !DILocalVariable(name: "key", arg: 3, scope: !2258, file: !252, line: 54, type: !89)
!2263 = !DILocalVariable(name: "result", scope: !2258, file: !252, line: 55, type: !102)
!2264 = !DILocation(line: 0, scope: !2258)
!2265 = !DILocation(line: 54, column: 29, scope: !2258)
!2266 = !DILocation(line: 54, column: 36, scope: !2258)
!2267 = !DILocation(line: 55, column: 9, scope: !2258)
!2268 = !DILocation(line: 55, column: 14, scope: !2258)
!2269 = !DILocation(line: 55, column: 36, scope: !2258)
!2270 = !DILocation(line: 55, column: 41, scope: !2258)
!2271 = !DILocation(line: 55, column: 47, scope: !2258)
!2272 = !DILocation(line: 55, column: 23, scope: !2258)
!2273 = !DILocation(line: 56, column: 13, scope: !2274)
!2274 = distinct !DILexicalBlock(scope: !2258, file: !252, line: 56, column: 13)
!2275 = !DILocation(line: 56, column: 13, scope: !2258)
!2276 = !DILocation(line: 57, column: 13, scope: !2274)
!2277 = !DILocation(line: 58, column: 9, scope: !2258)
!2278 = !DILocation(line: 59, column: 5, scope: !2258)
!2279 = distinct !DISubprogram(name: "persistent_ptr_base", linkageName: "_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEC2Ev", scope: !228, file: !229, line: 84, type: !235, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !234, retainedNodes: !2280)
!2280 = !{!2281}
!2281 = !DILocalVariable(name: "this", arg: 1, scope: !2279, type: !2282, flags: DIFlagArtificial | DIFlagObjectPointer)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64)
!2283 = !DILocation(line: 0, scope: !2279)
!2284 = !DILocation(line: 84, column: 26, scope: !2279)
!2285 = !DILocation(line: 86, column: 3, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2279, file: !229, line: 85, column: 2)
!2287 = !DILocation(line: 87, column: 2, scope: !2279)
!2288 = distinct !DISubprogram(name: "verify_type", linkageName: "_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE11verify_typeEv", scope: !228, file: !229, line: 335, type: !235, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !401, retainedNodes: !2289)
!2289 = !{!2290}
!2290 = !DILocalVariable(name: "this", arg: 1, scope: !2288, type: !2282, flags: DIFlagArtificial | DIFlagObjectPointer)
!2291 = !DILocation(line: 0, scope: !2288)
!2292 = !DILocation(line: 339, column: 2, scope: !2288)
!2293 = distinct !DISubprogram(name: "pool_base", linkageName: "_ZN4pmem3obj9pool_baseC2Ev", scope: !122, file: !118, line: 73, type: !135, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !134, retainedNodes: !2294)
!2294 = !{!2295}
!2295 = !DILocalVariable(name: "this", arg: 1, scope: !2293, type: !2091, flags: DIFlagArtificial | DIFlagObjectPointer)
!2296 = !DILocation(line: 0, scope: !2293)
!2297 = !DILocation(line: 74, column: 2, scope: !2293)
!2298 = !DILocation(line: 73, column: 25, scope: !2293)
!2299 = !DILocation(line: 75, column: 2, scope: !2293)
!2300 = distinct !DISubprogram(name: "~pool", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEED0Ev", scope: !117, file: !118, line: 465, type: !195, scopeLine: 465, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !214, retainedNodes: !2301)
!2301 = !{!2302}
!2302 = !DILocalVariable(name: "this", arg: 1, scope: !2300, type: !1865, flags: DIFlagArtificial | DIFlagObjectPointer)
!2303 = !DILocation(line: 0, scope: !2300)
!2304 = !DILocation(line: 465, column: 27, scope: !2300)
!2305 = distinct !DISubprogram(name: "~pool_base", linkageName: "_ZN4pmem3obj9pool_baseD2Ev", scope: !122, file: !118, line: 111, type: !135, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !157, retainedNodes: !2306)
!2306 = !{!2307}
!2307 = !DILocalVariable(name: "this", arg: 1, scope: !2305, type: !2091, flags: DIFlagArtificial | DIFlagObjectPointer)
!2308 = !DILocation(line: 0, scope: !2305)
!2309 = !DILocation(line: 111, column: 40, scope: !2305)
!2310 = distinct !DISubprogram(name: "~pool_base", linkageName: "_ZN4pmem3obj9pool_baseD0Ev", scope: !122, file: !118, line: 111, type: !135, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !157, retainedNodes: !2311)
!2311 = !{!2312}
!2312 = !DILocalVariable(name: "this", arg: 1, scope: !2310, type: !2091, flags: DIFlagArtificial | DIFlagObjectPointer)
!2313 = !DILocation(line: 0, scope: !2310)
!2314 = !DILocation(line: 111, column: 40, scope: !2310)
!2315 = distinct !DISubprogram(name: "operator=", linkageName: "_ZN4pmem3obj9pool_baseaSEOS1_", scope: !122, file: !118, line: 106, type: !155, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !154, retainedNodes: !2316)
!2316 = !{!2317, !2318}
!2317 = !DILocalVariable(name: "this", arg: 1, scope: !2315, type: !2091, flags: DIFlagArtificial | DIFlagObjectPointer)
!2318 = !DILocalVariable(arg: 2, scope: !2315, file: !118, line: 106, type: !149)
!2319 = !DILocation(line: 0, scope: !2315)
!2320 = !DILocation(line: 106, column: 35, scope: !2315)
!2321 = !DILocation(line: 106, column: 54, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2315, file: !118, line: 106, column: 54)
!2323 = distinct !DISubprogram(name: "operator=", linkageName: "_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEaSEOS6_", scope: !228, file: !229, line: 203, type: !370, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !369, retainedNodes: !2324)
!2324 = !{!2325, !2326}
!2325 = !DILocalVariable(name: "this", arg: 1, scope: !2323, type: !2282, flags: DIFlagArtificial | DIFlagObjectPointer)
!2326 = !DILocalVariable(name: "r", arg: 2, scope: !2323, file: !229, line: 203, type: !368)
!2327 = !DILocation(line: 0, scope: !2323)
!2328 = !DILocation(line: 203, column: 34, scope: !2323)
!2329 = !DILocation(line: 205, column: 3, scope: !2323)
!2330 = !DILocation(line: 206, column: 25, scope: !2323)
!2331 = !DILocation(line: 206, column: 27, scope: !2323)
!2332 = !DILocation(line: 206, column: 15, scope: !2323)
!2333 = !DILocation(line: 206, column: 9, scope: !2323)
!2334 = !DILocation(line: 206, column: 13, scope: !2323)
!2335 = !DILocation(line: 208, column: 3, scope: !2323)
!2336 = distinct !DISubprogram(name: "conditional_add_to_tx<pmem::detail::persistent_ptr_base<PMDKMap<unsigned long, _stritem *>>>", linkageName: "_ZN4pmem6detail21conditional_add_to_txINS0_19persistent_ptr_baseI7PMDKMapImP8_stritemEEEEEvPKT_m", scope: !230, file: !2337, line: 128, type: !2338, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !2343, retainedNodes: !2340)
!2337 = !DIFile(filename: "../libpmemobj-cpp/include/libpmemobj++/detail/common.hpp", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!2338 = !DISubroutineType(types: !2339)
!2339 = !{null, !2047, !168}
!2340 = !{!2341, !2342}
!2341 = !DILocalVariable(name: "that", arg: 1, scope: !2336, file: !2337, line: 128, type: !2047)
!2342 = !DILocalVariable(name: "count", arg: 2, scope: !2336, file: !2337, line: 128, type: !168)
!2343 = !{!2344}
!2344 = !DITemplateTypeParameter(name: "T", type: !228)
!2345 = !DILocation(line: 128, column: 32, scope: !2336)
!2346 = !DILocation(line: 128, column: 50, scope: !2336)
!2347 = !DILocation(line: 130, column: 6, scope: !2348)
!2348 = distinct !DILexicalBlock(scope: !2336, file: !2337, line: 130, column: 6)
!2349 = !DILocation(line: 130, column: 12, scope: !2348)
!2350 = !DILocation(line: 130, column: 6, scope: !2336)
!2351 = !DILocation(line: 131, column: 3, scope: !2348)
!2352 = !DILocation(line: 133, column: 6, scope: !2353)
!2353 = distinct !DILexicalBlock(scope: !2336, file: !2337, line: 133, column: 6)
!2354 = !DILocation(line: 133, column: 25, scope: !2353)
!2355 = !DILocation(line: 133, column: 6, scope: !2336)
!2356 = !DILocation(line: 134, column: 3, scope: !2353)
!2357 = !DILocation(line: 137, column: 27, scope: !2358)
!2358 = distinct !DILexicalBlock(scope: !2336, file: !2337, line: 137, column: 6)
!2359 = !DILocation(line: 137, column: 7, scope: !2358)
!2360 = !DILocation(line: 137, column: 6, scope: !2336)
!2361 = !DILocation(line: 138, column: 3, scope: !2358)
!2362 = !DILocation(line: 140, column: 34, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2336, file: !2337, line: 140, column: 6)
!2364 = !DILocation(line: 140, column: 56, scope: !2363)
!2365 = !DILocation(line: 140, column: 54, scope: !2363)
!2366 = !DILocation(line: 140, column: 6, scope: !2363)
!2367 = !DILocation(line: 140, column: 6, scope: !2336)
!2368 = !DILocation(line: 141, column: 3, scope: !2363)
!2369 = !DILocation(line: 141, column: 9, scope: !2363)
!2370 = !DILocation(line: 143, column: 1, scope: !2363)
!2371 = !DILocation(line: 143, column: 1, scope: !2336)
!2372 = distinct !DISubprogram(name: "move<pmemoid &>", linkageName: "_ZSt4moveIR7pmemoidEONSt16remove_referenceIT_E4typeEOS3_", scope: !2, file: !2373, line: 98, type: !2374, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !2380, retainedNodes: !2383)
!2373 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/move.h", directory: "")
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!2376, !2382}
!2376 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !2377, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !2379, file: !2378, line: 1633, baseType: !102)
!2378 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/type_traits", directory: "")
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "remove_reference<pmemoid &>", scope: !2, file: !2378, line: 1632, size: 8, flags: DIFlagTypePassByValue, elements: !77, templateParams: !2380, identifier: "_ZTSSt16remove_referenceIR7pmemoidE")
!2380 = !{!2381}
!2381 = !DITemplateTypeParameter(name: "_Tp", type: !2382)
!2382 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !102, size: 64)
!2383 = !{!2384}
!2384 = !DILocalVariable(name: "__t", arg: 1, scope: !2372, file: !2373, line: 98, type: !2382)
!2385 = !DILocation(line: 98, column: 16, scope: !2372)
!2386 = !DILocation(line: 99, column: 71, scope: !2372)
!2387 = !DILocation(line: 99, column: 7, scope: !2372)
!2388 = distinct !DISubprogram(name: "runtime_error", linkageName: "_ZN4pmem17transaction_errorCI2St13runtime_errorEPKc", scope: !90, file: !91, line: 65, type: !2389, scopeLine: 65, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2392, retainedNodes: !2393)
!2389 = !DISubroutineType(types: !2390)
!2390 = !{null, !2391, !602}
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2392 = !DISubprogram(name: "runtime_error", scope: !90, type: !2389, flags: DIFlagPublic | DIFlagArtificial | DIFlagExplicit | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2393 = !{!2394, !2396}
!2394 = !DILocalVariable(name: "this", arg: 1, scope: !2388, type: !2395, flags: DIFlagArtificial | DIFlagObjectPointer)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64)
!2396 = !DILocalVariable(arg: 2, scope: !2388, type: !602, flags: DIFlagArtificial)
!2397 = !DILocation(line: 0, scope: !2388)
!2398 = !DILocation(line: 65, column: 28, scope: !2388)
!2399 = distinct !DISubprogram(name: "~transaction_error", linkageName: "_ZN4pmem17transaction_errorD0Ev", scope: !90, file: !91, line: 63, type: !2400, scopeLine: 63, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2402, retainedNodes: !2403)
!2400 = !DISubroutineType(types: !2401)
!2401 = !{null, !2391}
!2402 = !DISubprogram(name: "~transaction_error", scope: !90, type: !2400, containingType: !90, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2403 = !{!2404}
!2404 = !DILocalVariable(name: "this", arg: 1, scope: !2399, type: !2395, flags: DIFlagArtificial | DIFlagObjectPointer)
!2405 = !DILocation(line: 0, scope: !2399)
!2406 = !DILocation(line: 63, column: 7, scope: !2399)
!2407 = distinct !DISubprogram(name: "new_allocator", linkageName: "_ZN9__gnu_cxx13new_allocatorIcEC2Ev", scope: !2408, file: !1490, line: 79, type: !2411, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2410, retainedNodes: !2445)
!2408 = distinct !DICompositeType(tag: DW_TAG_class_type, name: "new_allocator<char>", scope: !26, file: !1490, line: 58, size: 8, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2409, templateParams: !2443, identifier: "_ZTSN9__gnu_cxx13new_allocatorIcEE")
!2409 = !{!2410, !2414, !2419, !2420, !2427, !2433, !2437, !2440}
!2410 = !DISubprogram(name: "new_allocator", scope: !2408, file: !1490, line: 79, type: !2411, scopeLine: 79, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2411 = !DISubroutineType(types: !2412)
!2412 = !{null, !2413}
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2414 = !DISubprogram(name: "new_allocator", scope: !2408, file: !1490, line: 81, type: !2415, scopeLine: 81, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{null, !2413, !2417}
!2417 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2418, size: 64)
!2418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2408)
!2419 = !DISubprogram(name: "~new_allocator", scope: !2408, file: !1490, line: 86, type: !2411, scopeLine: 86, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2420 = !DISubprogram(name: "address", linkageName: "_ZNK9__gnu_cxx13new_allocatorIcE7addressERc", scope: !2408, file: !1490, line: 89, type: !2421, scopeLine: 89, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2421 = !DISubroutineType(types: !2422)
!2422 = !{!2423, !2424, !2425}
!2423 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !2408, file: !1490, line: 63, baseType: !72)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "reference", scope: !2408, file: !1490, line: 65, baseType: !2426)
!2426 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !73, size: 64)
!2427 = !DISubprogram(name: "address", linkageName: "_ZNK9__gnu_cxx13new_allocatorIcE7addressERKc", scope: !2408, file: !1490, line: 93, type: !2428, scopeLine: 93, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2428 = !DISubroutineType(types: !2429)
!2429 = !{!2430, !2424, !2431}
!2430 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_pointer", scope: !2408, file: !1490, line: 64, baseType: !602)
!2431 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_reference", scope: !2408, file: !1490, line: 66, baseType: !2432)
!2432 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !603, size: 64)
!2433 = !DISubprogram(name: "allocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv", scope: !2408, file: !1490, line: 99, type: !2434, scopeLine: 99, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!2423, !2413, !2436, !84}
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_type", file: !1490, line: 61, baseType: !168)
!2437 = !DISubprogram(name: "deallocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm", scope: !2408, file: !1490, line: 116, type: !2438, scopeLine: 116, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{null, !2413, !2423, !2436}
!2440 = !DISubprogram(name: "max_size", linkageName: "_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv", scope: !2408, file: !1490, line: 129, type: !2441, scopeLine: 129, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{!2436, !2424}
!2443 = !{!2444}
!2444 = !DITemplateTypeParameter(name: "_Tp", type: !73)
!2445 = !{!2446}
!2446 = !DILocalVariable(name: "this", arg: 1, scope: !2407, type: !2447, flags: DIFlagArtificial | DIFlagObjectPointer)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2448 = !DILocation(line: 0, scope: !2407)
!2449 = !DILocation(line: 79, column: 47, scope: !2407)
!2450 = distinct !DISubprogram(name: "~new_allocator", linkageName: "_ZN9__gnu_cxx13new_allocatorIcED2Ev", scope: !2408, file: !1490, line: 86, type: !2411, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2419, retainedNodes: !2451)
!2451 = !{!2452}
!2452 = !DILocalVariable(name: "this", arg: 1, scope: !2450, type: !2447, flags: DIFlagArtificial | DIFlagObjectPointer)
!2453 = !DILocation(line: 0, scope: !2450)
!2454 = !DILocation(line: 86, column: 48, scope: !2450)
!2455 = distinct !DISubprogram(name: "_M_dispose", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv", scope: !43, file: !42, line: 218, type: !1931, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2456, retainedNodes: !2457)
!2456 = !DISubprogram(name: "_M_dispose", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv", scope: !43, file: !42, line: 218, type: !1931, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2457 = !{!2458}
!2458 = !DILocalVariable(name: "this", arg: 1, scope: !2455, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!2459 = !DILocation(line: 0, scope: !2455)
!2460 = !DILocation(line: 220, column: 7, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2455, file: !42, line: 220, column: 6)
!2462 = !DILocation(line: 220, column: 6, scope: !2455)
!2463 = !DILocation(line: 221, column: 15, scope: !2461)
!2464 = !DILocation(line: 221, column: 4, scope: !2461)
!2465 = !DILocation(line: 222, column: 7, scope: !2455)
!2466 = distinct !DISubprogram(name: "~allocator", linkageName: "_ZNSaIcED2Ev", scope: !622, file: !623, line: 139, type: !1883, scopeLine: 139, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2467, retainedNodes: !2468)
!2467 = !DISubprogram(name: "~allocator", scope: !622, file: !623, line: 139, type: !1883, scopeLine: 139, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2468 = !{!2469}
!2469 = !DILocalVariable(name: "this", arg: 1, scope: !2466, type: !1889, flags: DIFlagArtificial | DIFlagObjectPointer)
!2470 = !DILocation(line: 0, scope: !2466)
!2471 = !DILocation(line: 139, column: 30, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2466, file: !623, line: 139, column: 28)
!2473 = !DILocation(line: 139, column: 30, scope: !2466)
!2474 = distinct !DISubprogram(name: "_M_is_local", linkageName: "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv", scope: !43, file: !42, line: 210, type: !2475, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2479, retainedNodes: !2480)
!2475 = !DISubroutineType(types: !2476)
!2476 = !{!13, !2477}
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !43)
!2479 = !DISubprogram(name: "_M_is_local", linkageName: "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv", scope: !43, file: !42, line: 210, type: !2475, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2480 = !{!2481}
!2481 = !DILocalVariable(name: "this", arg: 1, scope: !2474, type: !2482, flags: DIFlagArtificial | DIFlagObjectPointer)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2483 = !DILocation(line: 0, scope: !2474)
!2484 = !DILocation(line: 211, column: 16, scope: !2474)
!2485 = !DILocation(line: 211, column: 29, scope: !2474)
!2486 = !DILocation(line: 211, column: 26, scope: !2474)
!2487 = !DILocation(line: 211, column: 9, scope: !2474)
!2488 = distinct !DISubprogram(name: "_M_destroy", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm", scope: !43, file: !42, line: 225, type: !2489, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2491, retainedNodes: !2492)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{null, !1897, !607}
!2491 = !DISubprogram(name: "_M_destroy", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm", scope: !43, file: !42, line: 225, type: !2489, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2492 = !{!2493, !2494}
!2493 = !DILocalVariable(name: "this", arg: 1, scope: !2488, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!2494 = !DILocalVariable(name: "__size", arg: 2, scope: !2488, file: !42, line: 225, type: !607)
!2495 = !DILocation(line: 0, scope: !2488)
!2496 = !DILocation(line: 225, column: 28, scope: !2488)
!2497 = !DILocation(line: 226, column: 35, scope: !2488)
!2498 = !DILocation(line: 226, column: 55, scope: !2488)
!2499 = !DILocation(line: 226, column: 66, scope: !2488)
!2500 = !DILocation(line: 226, column: 73, scope: !2488)
!2501 = !DILocation(line: 226, column: 9, scope: !2488)
!2502 = !DILocation(line: 226, column: 79, scope: !2488)
!2503 = distinct !DISubprogram(name: "_M_data", linkageName: "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv", scope: !43, file: !42, line: 175, type: !2504, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2508, retainedNodes: !2509)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{!2506, !2477}
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !43, file: !42, line: 92, baseType: !2507)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !610, file: !609, line: 59, baseType: !619)
!2508 = !DISubprogram(name: "_M_data", linkageName: "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv", scope: !43, file: !42, line: 175, type: !2504, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2509 = !{!2510}
!2510 = !DILocalVariable(name: "this", arg: 1, scope: !2503, type: !2482, flags: DIFlagArtificial | DIFlagObjectPointer)
!2511 = !DILocation(line: 0, scope: !2503)
!2512 = !DILocation(line: 176, column: 16, scope: !2503)
!2513 = !DILocation(line: 176, column: 28, scope: !2503)
!2514 = !{!2515, !1780, i64 0}
!2515 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !2516, i64 0, !1823, i64 8, !1781, i64 16}
!2516 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !1780, i64 0}
!2517 = !DILocation(line: 176, column: 9, scope: !2503)
!2518 = distinct !DISubprogram(name: "_M_local_data", linkageName: "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv", scope: !43, file: !42, line: 189, type: !2519, scopeLine: 190, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2524, retainedNodes: !2525)
!2519 = !DISubroutineType(types: !2520)
!2520 = !{!2521, !2477}
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_pointer", scope: !43, file: !42, line: 93, baseType: !2522)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_pointer", scope: !610, file: !609, line: 60, baseType: !2523)
!2523 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_pointer", scope: !613, file: !614, line: 395, baseType: !602)
!2524 = !DISubprogram(name: "_M_local_data", linkageName: "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv", scope: !43, file: !42, line: 189, type: !2519, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2525 = !{!2526}
!2526 = !DILocalVariable(name: "this", arg: 1, scope: !2518, type: !2482, flags: DIFlagArtificial | DIFlagObjectPointer)
!2527 = !DILocation(line: 0, scope: !2518)
!2528 = !DILocation(line: 192, column: 57, scope: !2518)
!2529 = !DILocation(line: 192, column: 56, scope: !2518)
!2530 = !DILocation(line: 192, column: 9, scope: !2518)
!2531 = !DILocation(line: 192, column: 2, scope: !2518)
!2532 = distinct !DISubprogram(name: "pointer_to", linkageName: "_ZNSt14pointer_traitsIPKcE10pointer_toERS0_", scope: !2534, file: !2533, line: 141, type: !2537, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2536, retainedNodes: !2551)
!2533 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/ptr_traits.h", directory: "")
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_traits<const char *>", scope: !2, file: !2533, line: 123, size: 8, flags: DIFlagTypePassByValue, elements: !2535, templateParams: !2549, identifier: "_ZTSSt14pointer_traitsIPKcE")
!2535 = !{!2536}
!2536 = !DISubprogram(name: "pointer_to", linkageName: "_ZNSt14pointer_traitsIPKcE10pointer_toERS0_", scope: !2534, file: !2533, line: 141, type: !2537, scopeLine: 141, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!2537 = !DISubroutineType(types: !2538)
!2538 = !{!2539, !2540}
!2539 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !2534, file: !2533, line: 126, baseType: !602)
!2540 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2541, size: 64)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "__make_not_void<std::pointer_traits<const char *>::element_type>", scope: !2, file: !2533, line: 70, baseType: !2542)
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !2543, file: !2378, line: 2171, baseType: !603)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conditional<false, std::__undefined, const char>", scope: !2, file: !2378, line: 2170, size: 8, flags: DIFlagTypePassByValue, elements: !77, templateParams: !2544, identifier: "_ZTSSt11conditionalILb0ESt11__undefinedKcE")
!2544 = !{!2545, !2546, !2548}
!2545 = !DITemplateValueParameter(name: "_Cond", type: !13, value: i8 0)
!2546 = !DITemplateTypeParameter(name: "_Iftrue", type: !2547)
!2547 = !DICompositeType(tag: DW_TAG_class_type, name: "__undefined", scope: !2, file: !2533, line: 41, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSSt11__undefined")
!2548 = !DITemplateTypeParameter(name: "_Iffalse", type: !603)
!2549 = !{!2550}
!2550 = !DITemplateTypeParameter(name: "_Ptr", type: !602)
!2551 = !{!2552}
!2552 = !DILocalVariable(name: "__r", arg: 1, scope: !2532, file: !2533, line: 141, type: !2540)
!2553 = !DILocation(line: 141, column: 49, scope: !2532)
!2554 = !DILocation(line: 142, column: 31, scope: !2532)
!2555 = !DILocation(line: 142, column: 16, scope: !2532)
!2556 = !DILocation(line: 142, column: 9, scope: !2532)
!2557 = distinct !DISubprogram(name: "addressof<const char>", linkageName: "_ZSt9addressofIKcEPT_RS1_", scope: !2, file: !2373, line: 137, type: !2558, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !2562, retainedNodes: !2560)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!602, !2432}
!2560 = !{!2561}
!2561 = !DILocalVariable(name: "__r", arg: 1, scope: !2557, file: !2373, line: 137, type: !2432)
!2562 = !{!2563}
!2563 = !DITemplateTypeParameter(name: "_Tp", type: !603)
!2564 = !DILocation(line: 137, column: 20, scope: !2557)
!2565 = !DILocation(line: 138, column: 31, scope: !2557)
!2566 = !DILocation(line: 138, column: 14, scope: !2557)
!2567 = !DILocation(line: 138, column: 7, scope: !2557)
!2568 = distinct !DISubprogram(name: "__addressof<const char>", linkageName: "_ZSt11__addressofIKcEPT_RS1_", scope: !2, file: !2373, line: 47, type: !2558, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !2562, retainedNodes: !2569)
!2569 = !{!2570}
!2570 = !DILocalVariable(name: "__r", arg: 1, scope: !2568, file: !2373, line: 47, type: !2432)
!2571 = !DILocation(line: 47, column: 22, scope: !2568)
!2572 = !DILocation(line: 48, column: 34, scope: !2568)
!2573 = !DILocation(line: 48, column: 7, scope: !2568)
!2574 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm", scope: !613, file: !614, line: 461, type: !630, scopeLine: 462, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !629, retainedNodes: !2575)
!2575 = !{!2576, !2577, !2578}
!2576 = !DILocalVariable(name: "__a", arg: 1, scope: !2574, file: !614, line: 461, type: !620)
!2577 = !DILocalVariable(name: "__p", arg: 2, scope: !2574, file: !614, line: 461, type: !619)
!2578 = !DILocalVariable(name: "__n", arg: 3, scope: !2574, file: !614, line: 461, type: !624)
!2579 = !DILocation(line: 461, column: 34, scope: !2574)
!2580 = !DILocation(line: 461, column: 47, scope: !2574)
!2581 = !DILocation(line: 461, column: 62, scope: !2574)
!2582 = !DILocation(line: 462, column: 9, scope: !2574)
!2583 = !DILocation(line: 462, column: 24, scope: !2574)
!2584 = !DILocation(line: 462, column: 29, scope: !2574)
!2585 = !DILocation(line: 462, column: 13, scope: !2574)
!2586 = !DILocation(line: 462, column: 35, scope: !2574)
!2587 = distinct !DISubprogram(name: "_M_get_allocator", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv", scope: !43, file: !42, line: 275, type: !2588, scopeLine: 276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2596, retainedNodes: !2597)
!2588 = !DISubroutineType(types: !2589)
!2589 = !{!2590, !1897}
!2590 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2591, size: 64)
!2591 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocator_type", scope: !43, file: !42, line: 87, baseType: !2592)
!2592 = !DIDerivedType(tag: DW_TAG_typedef, name: "_Char_alloc_type", scope: !43, file: !42, line: 80, baseType: !2593)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "other", scope: !2594, file: !609, line: 117, baseType: !2595)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rebind<char>", scope: !610, file: !609, line: 116, size: 8, flags: DIFlagTypePassByValue, elements: !77, templateParams: !2443, identifier: "_ZTSN9__gnu_cxx14__alloc_traitsISaIcEE6rebindIcEE")
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "rebind_alloc<char>", scope: !613, file: !614, line: 422, baseType: !622)
!2596 = !DISubprogram(name: "_M_get_allocator", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv", scope: !43, file: !42, line: 275, type: !2588, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2597 = !{!2598}
!2598 = !DILocalVariable(name: "this", arg: 1, scope: !2587, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!2599 = !DILocation(line: 0, scope: !2587)
!2600 = !DILocation(line: 276, column: 16, scope: !2587)
!2601 = !DILocation(line: 276, column: 9, scope: !2587)
!2602 = distinct !DISubprogram(name: "deallocate", linkageName: "_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm", scope: !2408, file: !1490, line: 116, type: !2438, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2437, retainedNodes: !2603)
!2603 = !{!2604, !2605, !2606}
!2604 = !DILocalVariable(name: "this", arg: 1, scope: !2602, type: !2447, flags: DIFlagArtificial | DIFlagObjectPointer)
!2605 = !DILocalVariable(name: "__p", arg: 2, scope: !2602, file: !1490, line: 116, type: !2423)
!2606 = !DILocalVariable(arg: 3, scope: !2602, file: !1490, line: 116, type: !2436)
!2607 = !DILocation(line: 0, scope: !2602)
!2608 = !DILocation(line: 116, column: 26, scope: !2602)
!2609 = !DILocation(line: 116, column: 40, scope: !2602)
!2610 = !DILocation(line: 125, column: 20, scope: !2602)
!2611 = !DILocation(line: 125, column: 2, scope: !2602)
!2612 = !DILocation(line: 126, column: 7, scope: !2602)
!2613 = distinct !DISubprogram(name: "open", linkageName: "_ZN4pmem3obj9pool_base4openERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_", scope: !122, file: !118, line: 126, type: !159, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !158, retainedNodes: !2614)
!2614 = !{!2615, !2616, !2617}
!2615 = !DILocalVariable(name: "path", arg: 1, scope: !2613, file: !118, line: 126, type: !161)
!2616 = !DILocalVariable(name: "layout", arg: 2, scope: !2613, file: !118, line: 126, type: !161)
!2617 = !DILocalVariable(name: "pop", scope: !2613, file: !118, line: 131, type: !82)
!2618 = !DILocation(line: 126, column: 26, scope: !2613)
!2619 = !DILocation(line: 126, column: 51, scope: !2613)
!2620 = !DILocation(line: 131, column: 3, scope: !2613)
!2621 = !DILocation(line: 131, column: 16, scope: !2613)
!2622 = !DILocation(line: 131, column: 35, scope: !2613)
!2623 = !DILocation(line: 131, column: 40, scope: !2613)
!2624 = !DILocation(line: 131, column: 49, scope: !2613)
!2625 = !DILocation(line: 131, column: 56, scope: !2613)
!2626 = !DILocation(line: 131, column: 22, scope: !2613)
!2627 = !DILocation(line: 133, column: 7, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2613, file: !118, line: 133, column: 7)
!2629 = !DILocation(line: 133, column: 11, scope: !2628)
!2630 = !DILocation(line: 133, column: 7, scope: !2613)
!2631 = !DILocation(line: 134, column: 4, scope: !2628)
!2632 = !DILocation(line: 134, column: 10, scope: !2628)
!2633 = !DILocation(line: 137, column: 2, scope: !2628)
!2634 = !DILocation(line: 137, column: 2, scope: !2613)
!2635 = !DILocation(line: 136, column: 20, scope: !2613)
!2636 = !DILocation(line: 136, column: 10, scope: !2613)
!2637 = distinct !DISubprogram(name: "pool", linkageName: "_ZN4pmem3obj4poolI7PMDKMapImP8_stritemEEC2EONS0_9pool_baseE", scope: !117, file: !118, line: 477, type: !219, scopeLine: 478, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !218, retainedNodes: !2638)
!2638 = !{!2639, !2640}
!2639 = !DILocalVariable(name: "this", arg: 1, scope: !2637, type: !1865, flags: DIFlagArtificial | DIFlagObjectPointer)
!2640 = !DILocalVariable(name: "pb", arg: 2, scope: !2637, file: !118, line: 477, type: !149)
!2641 = !DILocation(line: 0, scope: !2637)
!2642 = !DILocation(line: 477, column: 28, scope: !2637)
!2643 = !DILocation(line: 478, column: 2, scope: !2637)
!2644 = !DILocation(line: 477, column: 53, scope: !2637)
!2645 = !DILocation(line: 477, column: 43, scope: !2637)
!2646 = !DILocation(line: 479, column: 2, scope: !2637)
!2647 = distinct !DISubprogram(name: "c_str", linkageName: "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv", scope: !43, file: !42, line: 2280, type: !2648, scopeLine: 2281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2650, retainedNodes: !2651)
!2648 = !DISubroutineType(types: !2649)
!2649 = !{!602, !2477}
!2650 = !DISubprogram(name: "c_str", linkageName: "_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv", scope: !43, file: !42, line: 2280, type: !2648, scopeLine: 2280, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2651 = !{!2652}
!2652 = !DILocalVariable(name: "this", arg: 1, scope: !2647, type: !2482, flags: DIFlagArtificial | DIFlagObjectPointer)
!2653 = !DILocation(line: 0, scope: !2647)
!2654 = !DILocation(line: 2281, column: 16, scope: !2647)
!2655 = !DILocation(line: 2281, column: 9, scope: !2647)
!2656 = distinct !DISubprogram(name: "runtime_error", linkageName: "_ZN4pmem10pool_errorCI2St13runtime_errorEPKc", scope: !604, file: !91, line: 55, type: !2657, scopeLine: 55, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2660, retainedNodes: !2661)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{null, !2659, !602}
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2660 = !DISubprogram(name: "runtime_error", scope: !604, type: !2657, flags: DIFlagPublic | DIFlagArtificial | DIFlagExplicit | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2661 = !{!2662, !2664}
!2662 = !DILocalVariable(name: "this", arg: 1, scope: !2656, type: !2663, flags: DIFlagArtificial | DIFlagObjectPointer)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!2664 = !DILocalVariable(arg: 2, scope: !2656, type: !602, flags: DIFlagArtificial)
!2665 = !DILocation(line: 0, scope: !2656)
!2666 = !DILocation(line: 55, column: 28, scope: !2656)
!2667 = distinct !DISubprogram(name: "pool_base", linkageName: "_ZN4pmem3obj9pool_baseC2EP11pmemobjpool", scope: !122, file: !118, line: 84, type: !139, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !138, retainedNodes: !2668)
!2668 = !{!2669, !2670}
!2669 = !DILocalVariable(name: "this", arg: 1, scope: !2667, type: !2091, flags: DIFlagArtificial | DIFlagObjectPointer)
!2670 = !DILocalVariable(name: "cpop", arg: 2, scope: !2667, file: !118, line: 84, type: !82)
!2671 = !DILocation(line: 0, scope: !2667)
!2672 = !DILocation(line: 84, column: 34, scope: !2667)
!2673 = !DILocation(line: 85, column: 2, scope: !2667)
!2674 = !DILocation(line: 84, column: 51, scope: !2667)
!2675 = !DILocation(line: 84, column: 55, scope: !2667)
!2676 = !DILocation(line: 86, column: 2, scope: !2667)
!2677 = distinct !DISubprogram(name: "~pool_error", linkageName: "_ZN4pmem10pool_errorD0Ev", scope: !604, file: !91, line: 53, type: !2678, scopeLine: 53, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2680, retainedNodes: !2681)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{null, !2659}
!2680 = !DISubprogram(name: "~pool_error", scope: !604, type: !2678, containingType: !604, virtualIndex: 0, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagVirtual | DISPFlagOptimized)
!2681 = !{!2682}
!2682 = !DILocalVariable(name: "this", arg: 1, scope: !2677, type: !2663, flags: DIFlagArtificial | DIFlagObjectPointer)
!2683 = !DILocation(line: 0, scope: !2677)
!2684 = !DILocation(line: 53, column: 7, scope: !2677)
!2685 = distinct !DISubprogram(name: "pool_base", linkageName: "_ZN4pmem3obj9pool_baseC2ERKS1_", scope: !122, file: !118, line: 91, type: !142, scopeLine: 91, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !141, retainedNodes: !2686)
!2686 = !{!2687, !2688}
!2687 = !DILocalVariable(name: "this", arg: 1, scope: !2685, type: !2091, flags: DIFlagArtificial | DIFlagObjectPointer)
!2688 = !DILocalVariable(arg: 2, scope: !2685, file: !118, line: 91, type: !144)
!2689 = !DILocation(line: 0, scope: !2685)
!2690 = !DILocation(line: 91, column: 29, scope: !2685)
!2691 = !DILocation(line: 91, column: 48, scope: !2685)
!2692 = !DILocation(line: 91, column: 2, scope: !2685)
!2693 = distinct !DISubprogram(name: "_M_local_data", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv", scope: !43, file: !42, line: 179, type: !2694, scopeLine: 180, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2696, retainedNodes: !2697)
!2694 = !DISubroutineType(types: !2695)
!2695 = !{!2506, !1897}
!2696 = !DISubprogram(name: "_M_local_data", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv", scope: !43, file: !42, line: 179, type: !2694, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2697 = !{!2698}
!2698 = !DILocalVariable(name: "this", arg: 1, scope: !2693, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!2699 = !DILocation(line: 0, scope: !2693)
!2700 = !DILocation(line: 182, column: 51, scope: !2693)
!2701 = !DILocation(line: 182, column: 50, scope: !2693)
!2702 = !DILocation(line: 182, column: 9, scope: !2693)
!2703 = !DILocation(line: 182, column: 2, scope: !2693)
!2704 = distinct !DISubprogram(name: "_Alloc_hider", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_", scope: !2705, file: !42, line: 145, type: !2710, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2709, retainedNodes: !2717)
!2705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Alloc_hider", scope: !43, file: !42, line: 139, size: 64, flags: DIFlagTypePassByReference | DIFlagNonTrivial, elements: !2706, identifier: "_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE")
!2706 = !{!2707, !2708, !2709, !2713}
!2707 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2705, baseType: !2591, extraData: i32 0)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "_M_p", scope: !2705, file: !42, line: 152, baseType: !2506, size: 64)
!2709 = !DISubprogram(name: "_Alloc_hider", scope: !2705, file: !42, line: 145, type: !2710, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{null, !2712, !2506, !646}
!2712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!2713 = !DISubprogram(name: "_Alloc_hider", scope: !2705, file: !42, line: 148, type: !2714, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{null, !2712, !2506, !2716}
!2716 = !DIDerivedType(tag: DW_TAG_rvalue_reference_type, baseType: !622, size: 64)
!2717 = !{!2718, !2720, !2721}
!2718 = !DILocalVariable(name: "this", arg: 1, scope: !2704, type: !2719, flags: DIFlagArtificial | DIFlagObjectPointer)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 64)
!2720 = !DILocalVariable(name: "__dat", arg: 2, scope: !2704, file: !42, line: 145, type: !2506)
!2721 = !DILocalVariable(name: "__a", arg: 3, scope: !2704, file: !42, line: 145, type: !646)
!2722 = !DILocation(line: 0, scope: !2704)
!2723 = !DILocation(line: 145, column: 23, scope: !2704)
!2724 = !DILocation(line: 145, column: 44, scope: !2704)
!2725 = !DILocation(line: 146, column: 37, scope: !2704)
!2726 = !DILocation(line: 146, column: 19, scope: !2704)
!2727 = !DILocation(line: 146, column: 4, scope: !2704)
!2728 = !DILocation(line: 146, column: 25, scope: !2704)
!2729 = !DILocation(line: 146, column: 30, scope: !2704)
!2730 = !{!2516, !1780, i64 0}
!2731 = !DILocation(line: 146, column: 39, scope: !2704)
!2732 = distinct !DISubprogram(name: "_M_construct<const char *>", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_", scope: !43, file: !42, line: 252, type: !2733, scopeLine: 253, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !2736, declaration: !2735, retainedNodes: !2738)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{null, !1897, !602, !602}
!2735 = !DISubprogram(name: "_M_construct<const char *>", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_", scope: !43, file: !42, line: 252, type: !2733, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, templateParams: !2736)
!2736 = !{!2737}
!2737 = !DITemplateTypeParameter(name: "_InIterator", type: !602)
!2738 = !{!2739, !2740, !2741}
!2739 = !DILocalVariable(name: "this", arg: 1, scope: !2732, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!2740 = !DILocalVariable(name: "__beg", arg: 2, scope: !2732, file: !42, line: 252, type: !602)
!2741 = !DILocalVariable(name: "__end", arg: 3, scope: !2732, file: !42, line: 252, type: !602)
!2742 = !DILocation(line: 0, scope: !2732)
!2743 = !DILocation(line: 252, column: 34, scope: !2732)
!2744 = !DILocation(line: 252, column: 53, scope: !2732)
!2745 = !DILocation(line: 255, column: 21, scope: !2732)
!2746 = !DILocation(line: 255, column: 28, scope: !2732)
!2747 = !DILocation(line: 255, column: 4, scope: !2732)
!2748 = !DILocation(line: 256, column: 9, scope: !2732)
!2749 = distinct !DISubprogram(name: "length", linkageName: "_ZNSt11char_traitsIcE6lengthEPKc", scope: !662, file: !661, line: 314, type: !679, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !678, retainedNodes: !2750)
!2750 = !{!2751}
!2751 = !DILocalVariable(name: "__s", arg: 1, scope: !2749, file: !661, line: 314, type: !677)
!2752 = !DILocation(line: 314, column: 31, scope: !2749)
!2753 = !DILocation(line: 320, column: 26, scope: !2749)
!2754 = !DILocation(line: 320, column: 9, scope: !2749)
!2755 = !DILocation(line: 320, column: 2, scope: !2749)
!2756 = distinct !DISubprogram(name: "pointer_to", linkageName: "_ZNSt14pointer_traitsIPcE10pointer_toERc", scope: !2757, file: !2533, line: 141, type: !2760, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2759, retainedNodes: !2771)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_traits<char *>", scope: !2, file: !2533, line: 123, size: 8, flags: DIFlagTypePassByValue, elements: !2758, templateParams: !2769, identifier: "_ZTSSt14pointer_traitsIPcE")
!2758 = !{!2759}
!2759 = !DISubprogram(name: "pointer_to", linkageName: "_ZNSt14pointer_traitsIPcE10pointer_toERc", scope: !2757, file: !2533, line: 141, type: !2760, scopeLine: 141, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!2760 = !DISubroutineType(types: !2761)
!2761 = !{!2762, !2763}
!2762 = !DIDerivedType(tag: DW_TAG_typedef, name: "pointer", scope: !2757, file: !2533, line: 126, baseType: !72)
!2763 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !2764, size: 64)
!2764 = !DIDerivedType(tag: DW_TAG_typedef, name: "__make_not_void<std::pointer_traits<char *>::element_type>", scope: !2, file: !2533, line: 70, baseType: !2765)
!2765 = !DIDerivedType(tag: DW_TAG_typedef, name: "type", scope: !2766, file: !2378, line: 2171, baseType: !73)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conditional<false, std::__undefined, char>", scope: !2, file: !2378, line: 2170, size: 8, flags: DIFlagTypePassByValue, elements: !77, templateParams: !2767, identifier: "_ZTSSt11conditionalILb0ESt11__undefinedcE")
!2767 = !{!2545, !2546, !2768}
!2768 = !DITemplateTypeParameter(name: "_Iffalse", type: !73)
!2769 = !{!2770}
!2770 = !DITemplateTypeParameter(name: "_Ptr", type: !72)
!2771 = !{!2772}
!2772 = !DILocalVariable(name: "__r", arg: 1, scope: !2756, file: !2533, line: 141, type: !2763)
!2773 = !DILocation(line: 141, column: 49, scope: !2756)
!2774 = !DILocation(line: 142, column: 31, scope: !2756)
!2775 = !DILocation(line: 142, column: 16, scope: !2756)
!2776 = !DILocation(line: 142, column: 9, scope: !2756)
!2777 = distinct !DISubprogram(name: "addressof<char>", linkageName: "_ZSt9addressofIcEPT_RS0_", scope: !2, file: !2373, line: 137, type: !2778, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !2443, retainedNodes: !2780)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{!72, !2426}
!2780 = !{!2781}
!2781 = !DILocalVariable(name: "__r", arg: 1, scope: !2777, file: !2373, line: 137, type: !2426)
!2782 = !DILocation(line: 137, column: 20, scope: !2777)
!2783 = !DILocation(line: 138, column: 31, scope: !2777)
!2784 = !DILocation(line: 138, column: 14, scope: !2777)
!2785 = !DILocation(line: 138, column: 7, scope: !2777)
!2786 = distinct !DISubprogram(name: "__addressof<char>", linkageName: "_ZSt11__addressofIcEPT_RS0_", scope: !2, file: !2373, line: 47, type: !2778, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !2443, retainedNodes: !2787)
!2787 = !{!2788}
!2788 = !DILocalVariable(name: "__r", arg: 1, scope: !2786, file: !2373, line: 47, type: !2426)
!2789 = !DILocation(line: 47, column: 22, scope: !2786)
!2790 = !DILocation(line: 48, column: 34, scope: !2786)
!2791 = !DILocation(line: 48, column: 7, scope: !2786)
!2792 = distinct !DISubprogram(name: "allocator", linkageName: "_ZNSaIcEC2ERKS_", scope: !622, file: !623, line: 133, type: !2793, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2795, retainedNodes: !2796)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{null, !1885, !646}
!2795 = !DISubprogram(name: "allocator", scope: !622, file: !623, line: 133, type: !2793, scopeLine: 133, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2796 = !{!2797, !2798}
!2797 = !DILocalVariable(name: "this", arg: 1, scope: !2792, type: !1889, flags: DIFlagArtificial | DIFlagObjectPointer)
!2798 = !DILocalVariable(name: "__a", arg: 2, scope: !2792, file: !623, line: 133, type: !646)
!2799 = !DILocation(line: 0, scope: !2792)
!2800 = !DILocation(line: 133, column: 34, scope: !2792)
!2801 = !DILocation(line: 134, column: 36, scope: !2792)
!2802 = !DILocation(line: 134, column: 31, scope: !2792)
!2803 = !DILocation(line: 134, column: 9, scope: !2792)
!2804 = !DILocation(line: 134, column: 38, scope: !2792)
!2805 = distinct !DISubprogram(name: "new_allocator", linkageName: "_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_", scope: !2408, file: !1490, line: 81, type: !2415, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2414, retainedNodes: !2806)
!2806 = !{!2807, !2808}
!2807 = !DILocalVariable(name: "this", arg: 1, scope: !2805, type: !2447, flags: DIFlagArtificial | DIFlagObjectPointer)
!2808 = !DILocalVariable(arg: 2, scope: !2805, file: !1490, line: 81, type: !2417)
!2809 = !DILocation(line: 0, scope: !2805)
!2810 = !DILocation(line: 81, column: 41, scope: !2805)
!2811 = !DILocation(line: 81, column: 67, scope: !2805)
!2812 = distinct !DISubprogram(name: "_M_construct_aux<const char *>", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type", scope: !43, file: !42, line: 232, type: !2813, scopeLine: 234, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !2736, declaration: !2817, retainedNodes: !2818)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{null, !1897, !602, !602, !2815}
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__false_type", scope: !2, file: !2816, line: 74, size: 8, flags: DIFlagTypePassByValue, elements: !77, identifier: "_ZTSSt12__false_type")
!2816 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/cpp_type_traits.h", directory: "")
!2817 = !DISubprogram(name: "_M_construct_aux<const char *>", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type", scope: !43, file: !42, line: 232, type: !2813, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, templateParams: !2736)
!2818 = !{!2819, !2820, !2821, !2822}
!2819 = !DILocalVariable(name: "this", arg: 1, scope: !2812, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!2820 = !DILocalVariable(name: "__beg", arg: 2, scope: !2812, file: !42, line: 232, type: !602)
!2821 = !DILocalVariable(name: "__end", arg: 3, scope: !2812, file: !42, line: 232, type: !602)
!2822 = !DILocalVariable(arg: 4, scope: !2812, file: !42, line: 233, type: !2815)
!2823 = !DILocation(line: 0, scope: !2812)
!2824 = !DILocation(line: 232, column: 38, scope: !2812)
!2825 = !DILocation(line: 232, column: 57, scope: !2812)
!2826 = !DILocation(line: 233, column: 22, scope: !2812)
!2827 = !DILocation(line: 236, column: 24, scope: !2812)
!2828 = !DILocation(line: 236, column: 31, scope: !2812)
!2829 = !DILocation(line: 236, column: 38, scope: !2812)
!2830 = !DILocation(line: 236, column: 11, scope: !2812)
!2831 = !DILocation(line: 237, column: 2, scope: !2812)
!2832 = distinct !DISubprogram(name: "_M_construct<const char *>", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag", scope: !43, file: !44, line: 207, type: !2833, scopeLine: 209, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !2841, declaration: !2840, retainedNodes: !2843)
!2833 = !DISubroutineType(types: !2834)
!2834 = !{null, !1897, !602, !602, !2835}
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "forward_iterator_tag", scope: !2, file: !2836, line: 95, size: 8, flags: DIFlagTypePassByValue, elements: !2837, identifier: "_ZTSSt20forward_iterator_tag")
!2836 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/stl_iterator_base_types.h", directory: "")
!2837 = !{!2838}
!2838 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2835, baseType: !2839, extraData: i32 0)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_iterator_tag", scope: !2, file: !2836, line: 89, size: 8, flags: DIFlagTypePassByValue, elements: !77, identifier: "_ZTSSt18input_iterator_tag")
!2840 = !DISubprogram(name: "_M_construct<const char *>", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag", scope: !43, file: !42, line: 268, type: !2833, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, templateParams: !2841)
!2841 = !{!2842}
!2842 = !DITemplateTypeParameter(name: "_FwdIterator", type: !602)
!2843 = !{!2844, !2845, !2846, !2847, !2848}
!2844 = !DILocalVariable(name: "this", arg: 1, scope: !2832, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!2845 = !DILocalVariable(name: "__beg", arg: 2, scope: !2832, file: !42, line: 268, type: !602)
!2846 = !DILocalVariable(name: "__end", arg: 3, scope: !2832, file: !42, line: 268, type: !602)
!2847 = !DILocalVariable(arg: 4, scope: !2832, file: !42, line: 269, type: !2835)
!2848 = !DILocalVariable(name: "__dnew", scope: !2832, file: !44, line: 215, type: !607)
!2849 = !DILocation(line: 0, scope: !2832)
!2850 = !DILocation(line: 268, column: 35, scope: !2832)
!2851 = !DILocation(line: 268, column: 55, scope: !2832)
!2852 = !DILocation(line: 269, column: 33, scope: !2832)
!2853 = !DILocation(line: 211, column: 35, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2832, file: !44, line: 211, column: 6)
!2855 = !DILocation(line: 211, column: 6, scope: !2854)
!2856 = !DILocation(line: 211, column: 42, scope: !2854)
!2857 = !DILocation(line: 211, column: 45, scope: !2854)
!2858 = !DILocation(line: 211, column: 54, scope: !2854)
!2859 = !DILocation(line: 211, column: 51, scope: !2854)
!2860 = !DILocation(line: 211, column: 6, scope: !2832)
!2861 = !DILocation(line: 212, column: 4, scope: !2854)
!2862 = !DILocation(line: 215, column: 2, scope: !2832)
!2863 = !DILocation(line: 215, column: 12, scope: !2832)
!2864 = !DILocation(line: 215, column: 58, scope: !2832)
!2865 = !DILocation(line: 215, column: 65, scope: !2832)
!2866 = !DILocation(line: 215, column: 44, scope: !2832)
!2867 = !DILocation(line: 217, column: 6, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2832, file: !44, line: 217, column: 6)
!2869 = !DILocation(line: 217, column: 13, scope: !2868)
!2870 = !DILocation(line: 217, column: 6, scope: !2832)
!2871 = !DILocation(line: 219, column: 14, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2868, file: !44, line: 218, column: 4)
!2873 = !DILocation(line: 219, column: 6, scope: !2872)
!2874 = !DILocation(line: 220, column: 18, scope: !2872)
!2875 = !DILocation(line: 220, column: 6, scope: !2872)
!2876 = !DILocation(line: 221, column: 4, scope: !2872)
!2877 = !DILocation(line: 225, column: 26, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2832, file: !44, line: 225, column: 4)
!2879 = !DILocation(line: 225, column: 37, scope: !2878)
!2880 = !DILocation(line: 225, column: 44, scope: !2878)
!2881 = !DILocation(line: 225, column: 6, scope: !2878)
!2882 = !DILocation(line: 225, column: 52, scope: !2878)
!2883 = !DILocation(line: 233, column: 7, scope: !2878)
!2884 = !DILocation(line: 228, column: 6, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2832, file: !44, line: 227, column: 4)
!2886 = !DILocation(line: 229, column: 6, scope: !2885)
!2887 = !DILocation(line: 233, column: 7, scope: !2885)
!2888 = !DILocation(line: 230, column: 4, scope: !2885)
!2889 = !DILocation(line: 233, column: 7, scope: !2832)
!2890 = !DILocation(line: 232, column: 16, scope: !2832)
!2891 = !DILocation(line: 232, column: 2, scope: !2832)
!2892 = distinct !DISubprogram(name: "__is_null_pointer<const char>", linkageName: "_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_", scope: !26, file: !2893, line: 152, type: !2894, scopeLine: 153, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !2898, retainedNodes: !2896)
!2893 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ext/type_traits.h", directory: "")
!2894 = !DISubroutineType(types: !2895)
!2895 = !{!13, !602}
!2896 = !{!2897}
!2897 = !DILocalVariable(name: "__ptr", arg: 1, scope: !2892, file: !2893, line: 152, type: !602)
!2898 = !{!2899}
!2899 = !DITemplateTypeParameter(name: "_Type", type: !603)
!2900 = !DILocation(line: 152, column: 30, scope: !2892)
!2901 = !DILocation(line: 153, column: 14, scope: !2892)
!2902 = !DILocation(line: 153, column: 20, scope: !2892)
!2903 = !DILocation(line: 153, column: 7, scope: !2892)
!2904 = distinct !DISubprogram(name: "distance<const char *>", linkageName: "_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_", scope: !2, file: !2905, line: 138, type: !2906, scopeLine: 139, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !2915, retainedNodes: !2912)
!2905 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/stl_iterator_base_funcs.h", directory: "")
!2906 = !DISubroutineType(types: !2907)
!2907 = !{!2908, !602, !602}
!2908 = !DIDerivedType(tag: DW_TAG_typedef, name: "difference_type", scope: !2909, file: !2836, line: 193, baseType: !578)
!2909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iterator_traits<const char *>", scope: !2, file: !2836, line: 189, size: 8, flags: DIFlagTypePassByValue, elements: !77, templateParams: !2910, identifier: "_ZTSSt15iterator_traitsIPKcE")
!2910 = !{!2911}
!2911 = !DITemplateTypeParameter(name: "_Iterator", type: !602)
!2912 = !{!2913, !2914}
!2913 = !DILocalVariable(name: "__first", arg: 1, scope: !2904, file: !2905, line: 138, type: !602)
!2914 = !DILocalVariable(name: "__last", arg: 2, scope: !2904, file: !2905, line: 138, type: !602)
!2915 = !{!2916}
!2916 = !DITemplateTypeParameter(name: "_InputIterator", type: !602)
!2917 = !DILocation(line: 138, column: 29, scope: !2904)
!2918 = !DILocation(line: 138, column: 53, scope: !2904)
!2919 = !DILocation(line: 141, column: 30, scope: !2904)
!2920 = !DILocation(line: 141, column: 39, scope: !2904)
!2921 = !DILocation(line: 142, column: 9, scope: !2904)
!2922 = !DILocation(line: 141, column: 14, scope: !2904)
!2923 = !DILocation(line: 141, column: 7, scope: !2904)
!2924 = distinct !DISubprogram(name: "_M_data", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc", scope: !43, file: !42, line: 167, type: !2925, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2927, retainedNodes: !2928)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{null, !1897, !2506}
!2927 = !DISubprogram(name: "_M_data", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc", scope: !43, file: !42, line: 167, type: !2925, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2928 = !{!2929, !2930}
!2929 = !DILocalVariable(name: "this", arg: 1, scope: !2924, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!2930 = !DILocalVariable(name: "__p", arg: 2, scope: !2924, file: !42, line: 167, type: !2506)
!2931 = !DILocation(line: 0, scope: !2924)
!2932 = !DILocation(line: 167, column: 23, scope: !2924)
!2933 = !DILocation(line: 168, column: 28, scope: !2924)
!2934 = !DILocation(line: 168, column: 9, scope: !2924)
!2935 = !DILocation(line: 168, column: 21, scope: !2924)
!2936 = !DILocation(line: 168, column: 26, scope: !2924)
!2937 = !DILocation(line: 168, column: 33, scope: !2924)
!2938 = distinct !DISubprogram(name: "_M_capacity", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm", scope: !43, file: !42, line: 199, type: !2489, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2939, retainedNodes: !2940)
!2939 = !DISubprogram(name: "_M_capacity", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm", scope: !43, file: !42, line: 199, type: !2489, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2940 = !{!2941, !2942}
!2941 = !DILocalVariable(name: "this", arg: 1, scope: !2938, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!2942 = !DILocalVariable(name: "__capacity", arg: 2, scope: !2938, file: !42, line: 199, type: !607)
!2943 = !DILocation(line: 0, scope: !2938)
!2944 = !DILocation(line: 199, column: 29, scope: !2938)
!2945 = !DILocation(line: 200, column: 33, scope: !2938)
!2946 = !DILocation(line: 200, column: 9, scope: !2938)
!2947 = !DILocation(line: 200, column: 31, scope: !2938)
!2948 = !DILocation(line: 200, column: 45, scope: !2938)
!2949 = distinct !DISubprogram(name: "_S_copy_chars", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_", scope: !43, file: !42, line: 385, type: !2950, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2952, retainedNodes: !2953)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{null, !72, !602, !602}
!2952 = !DISubprogram(name: "_S_copy_chars", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_", scope: !43, file: !42, line: 385, type: !2950, scopeLine: 385, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!2953 = !{!2954, !2955, !2956}
!2954 = !DILocalVariable(name: "__p", arg: 1, scope: !2949, file: !42, line: 385, type: !72)
!2955 = !DILocalVariable(name: "__k1", arg: 2, scope: !2949, file: !42, line: 385, type: !602)
!2956 = !DILocalVariable(name: "__k2", arg: 3, scope: !2949, file: !42, line: 385, type: !602)
!2957 = !DILocation(line: 385, column: 29, scope: !2949)
!2958 = !DILocation(line: 385, column: 48, scope: !2949)
!2959 = !DILocation(line: 385, column: 68, scope: !2949)
!2960 = !DILocation(line: 387, column: 17, scope: !2949)
!2961 = !DILocation(line: 387, column: 22, scope: !2949)
!2962 = !DILocation(line: 387, column: 28, scope: !2949)
!2963 = !DILocation(line: 387, column: 35, scope: !2949)
!2964 = !DILocation(line: 387, column: 33, scope: !2949)
!2965 = !DILocation(line: 387, column: 9, scope: !2949)
!2966 = !DILocation(line: 387, column: 42, scope: !2949)
!2967 = distinct !DISubprogram(name: "_M_set_length", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm", scope: !43, file: !42, line: 203, type: !2489, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !2968, retainedNodes: !2969)
!2968 = !DISubprogram(name: "_M_set_length", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm", scope: !43, file: !42, line: 203, type: !2489, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!2969 = !{!2970, !2971}
!2970 = !DILocalVariable(name: "this", arg: 1, scope: !2967, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!2971 = !DILocalVariable(name: "__n", arg: 2, scope: !2967, file: !42, line: 203, type: !607)
!2972 = !DILocation(line: 0, scope: !2967)
!2973 = !DILocation(line: 203, column: 31, scope: !2967)
!2974 = !DILocation(line: 205, column: 12, scope: !2967)
!2975 = !DILocation(line: 205, column: 2, scope: !2967)
!2976 = !DILocation(line: 206, column: 22, scope: !2967)
!2977 = !DILocation(line: 206, column: 32, scope: !2967)
!2978 = !DILocation(line: 206, column: 38, scope: !2967)
!2979 = !DILocation(line: 206, column: 2, scope: !2967)
!2980 = !DILocation(line: 207, column: 7, scope: !2967)
!2981 = distinct !DISubprogram(name: "__distance<const char *>", linkageName: "_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag", scope: !2, file: !2905, line: 98, type: !2982, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !2994, retainedNodes: !2990)
!2982 = !DISubroutineType(types: !2983)
!2983 = !{!2908, !602, !602, !2984}
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "random_access_iterator_tag", scope: !2, file: !2836, line: 103, size: 8, flags: DIFlagTypePassByValue, elements: !2985, identifier: "_ZTSSt26random_access_iterator_tag")
!2985 = !{!2986}
!2986 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2984, baseType: !2987, extraData: i32 0)
!2987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bidirectional_iterator_tag", scope: !2, file: !2836, line: 99, size: 8, flags: DIFlagTypePassByValue, elements: !2988, identifier: "_ZTSSt26bidirectional_iterator_tag")
!2988 = !{!2989}
!2989 = !DIDerivedType(tag: DW_TAG_inheritance, scope: !2987, baseType: !2835, extraData: i32 0)
!2990 = !{!2991, !2992, !2993}
!2991 = !DILocalVariable(name: "__first", arg: 1, scope: !2981, file: !2905, line: 98, type: !602)
!2992 = !DILocalVariable(name: "__last", arg: 2, scope: !2981, file: !2905, line: 98, type: !602)
!2993 = !DILocalVariable(arg: 3, scope: !2981, file: !2905, line: 99, type: !2984)
!2994 = !{!2995}
!2995 = !DITemplateTypeParameter(name: "_RandomAccessIterator", type: !602)
!2996 = !DILocation(line: 98, column: 38, scope: !2981)
!2997 = !DILocation(line: 98, column: 69, scope: !2981)
!2998 = !DILocation(line: 99, column: 42, scope: !2981)
!2999 = !DILocation(line: 104, column: 14, scope: !2981)
!3000 = !DILocation(line: 104, column: 23, scope: !2981)
!3001 = !DILocation(line: 104, column: 21, scope: !2981)
!3002 = !DILocation(line: 104, column: 7, scope: !2981)
!3003 = distinct !DISubprogram(name: "__iterator_category<const char *>", linkageName: "_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_", scope: !2, file: !2836, line: 205, type: !3004, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !3011, retainedNodes: !3009)
!3004 = !DISubroutineType(types: !3005)
!3005 = !{!3006, !3007}
!3006 = !DIDerivedType(tag: DW_TAG_typedef, name: "iterator_category", scope: !2909, file: !2836, line: 191, baseType: !2984)
!3007 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !3008, size: 64)
!3008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !602)
!3009 = !{!3010}
!3010 = !DILocalVariable(arg: 1, scope: !3003, file: !2836, line: 205, type: !3007)
!3011 = !{!3012}
!3012 = !DITemplateTypeParameter(name: "_Iter", type: !602)
!3013 = !DILocation(line: 205, column: 37, scope: !3003)
!3014 = !DILocation(line: 206, column: 7, scope: !3003)
!3015 = distinct !DISubprogram(name: "_S_copy", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm", scope: !43, file: !42, line: 335, type: !3016, scopeLine: 336, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !3018, retainedNodes: !3019)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{null, !72, !602, !607}
!3018 = !DISubprogram(name: "_S_copy", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm", scope: !43, file: !42, line: 335, type: !3016, scopeLine: 335, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!3019 = !{!3020, !3021, !3022}
!3020 = !DILocalVariable(name: "__d", arg: 1, scope: !3015, file: !42, line: 335, type: !72)
!3021 = !DILocalVariable(name: "__s", arg: 2, scope: !3015, file: !42, line: 335, type: !602)
!3022 = !DILocalVariable(name: "__n", arg: 3, scope: !3015, file: !42, line: 335, type: !607)
!3023 = !DILocation(line: 335, column: 23, scope: !3015)
!3024 = !DILocation(line: 335, column: 42, scope: !3015)
!3025 = !DILocation(line: 335, column: 57, scope: !3015)
!3026 = !DILocation(line: 337, column: 6, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3015, file: !42, line: 337, column: 6)
!3028 = !DILocation(line: 337, column: 10, scope: !3027)
!3029 = !DILocation(line: 337, column: 6, scope: !3015)
!3030 = !DILocation(line: 338, column: 25, scope: !3027)
!3031 = !DILocation(line: 338, column: 31, scope: !3027)
!3032 = !DILocation(line: 338, column: 4, scope: !3027)
!3033 = !DILocation(line: 340, column: 22, scope: !3027)
!3034 = !DILocation(line: 340, column: 27, scope: !3027)
!3035 = !DILocation(line: 340, column: 32, scope: !3027)
!3036 = !DILocation(line: 340, column: 4, scope: !3027)
!3037 = !DILocation(line: 341, column: 7, scope: !3015)
!3038 = distinct !DISubprogram(name: "assign", linkageName: "_ZNSt11char_traitsIcE6assignERcRKc", scope: !662, file: !661, line: 284, type: !665, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !664, retainedNodes: !3039)
!3039 = !{!3040, !3041}
!3040 = !DILocalVariable(name: "__c1", arg: 1, scope: !3038, file: !661, line: 284, type: !667)
!3041 = !DILocalVariable(name: "__c2", arg: 2, scope: !3038, file: !661, line: 284, type: !668)
!3042 = !DILocation(line: 284, column: 25, scope: !3038)
!3043 = !DILocation(line: 284, column: 48, scope: !3038)
!3044 = !DILocation(line: 285, column: 16, scope: !3038)
!3045 = !DILocation(line: 285, column: 9, scope: !3038)
!3046 = !DILocation(line: 285, column: 14, scope: !3038)
!3047 = !DILocation(line: 285, column: 22, scope: !3038)
!3048 = distinct !DISubprogram(name: "copy", linkageName: "_ZNSt11char_traitsIcE4copyEPcPKcm", scope: !662, file: !661, line: 346, type: !685, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !687, retainedNodes: !3049)
!3049 = !{!3050, !3051, !3052}
!3050 = !DILocalVariable(name: "__s1", arg: 1, scope: !3048, file: !661, line: 346, type: !659)
!3051 = !DILocalVariable(name: "__s2", arg: 2, scope: !3048, file: !661, line: 346, type: !677)
!3052 = !DILocalVariable(name: "__n", arg: 3, scope: !3048, file: !661, line: 346, type: !168)
!3053 = !DILocation(line: 346, column: 23, scope: !3048)
!3054 = !DILocation(line: 346, column: 46, scope: !3048)
!3055 = !DILocation(line: 346, column: 59, scope: !3048)
!3056 = !DILocation(line: 348, column: 6, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3048, file: !661, line: 348, column: 6)
!3058 = !DILocation(line: 348, column: 10, scope: !3057)
!3059 = !DILocation(line: 348, column: 6, scope: !3048)
!3060 = !DILocation(line: 349, column: 11, scope: !3057)
!3061 = !DILocation(line: 349, column: 4, scope: !3057)
!3062 = !DILocation(line: 350, column: 50, scope: !3048)
!3063 = !DILocation(line: 350, column: 56, scope: !3048)
!3064 = !DILocation(line: 350, column: 62, scope: !3048)
!3065 = !DILocation(line: 350, column: 33, scope: !3048)
!3066 = !DILocation(line: 350, column: 2, scope: !3048)
!3067 = !DILocation(line: 351, column: 7, scope: !3048)
!3068 = distinct !DISubprogram(name: "_M_length", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm", scope: !43, file: !42, line: 171, type: !2489, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !3069, retainedNodes: !3070)
!3069 = !DISubprogram(name: "_M_length", linkageName: "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm", scope: !43, file: !42, line: 171, type: !2489, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3070 = !{!3071, !3072}
!3071 = !DILocalVariable(name: "this", arg: 1, scope: !3068, type: !1901, flags: DIFlagArtificial | DIFlagObjectPointer)
!3072 = !DILocalVariable(name: "__length", arg: 2, scope: !3068, file: !42, line: 171, type: !607)
!3073 = !DILocation(line: 0, scope: !3068)
!3074 = !DILocation(line: 171, column: 27, scope: !3068)
!3075 = !DILocation(line: 172, column: 28, scope: !3068)
!3076 = !DILocation(line: 172, column: 9, scope: !3068)
!3077 = !DILocation(line: 172, column: 26, scope: !3068)
!3078 = !{!2515, !1823, i64 8}
!3079 = !DILocation(line: 172, column: 38, scope: !3068)
!3080 = distinct !DISubprogram(name: "persistent_ptr_base", linkageName: "_ZN4pmem3obj14persistent_ptrI7PMDKMapImP8_stritemEECI2NS_6detail19persistent_ptr_baseIS5_EEE7pmemoid", scope: !224, file: !225, line: 135, type: !3081, scopeLine: 135, flags: DIFlagArtificial | DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !3083, retainedNodes: !3084)
!3081 = !DISubroutineType(types: !3082)
!3082 = !{null, !408, !233}
!3083 = !DISubprogram(name: "persistent_ptr_base", scope: !224, type: !3081, flags: DIFlagPublic | DIFlagArtificial | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3084 = !{!3085, !3086}
!3085 = !DILocalVariable(name: "this", arg: 1, scope: !3080, type: !1778, flags: DIFlagArtificial | DIFlagObjectPointer)
!3086 = !DILocalVariable(arg: 2, scope: !3080, type: !233, flags: DIFlagArtificial)
!3087 = !DILocation(line: 0, scope: !3080)
!3088 = !DILocation(line: 135, column: 40, scope: !3080)
!3089 = distinct !DISubprogram(name: "persistent_ptr_base", linkageName: "_ZN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEC2E7pmemoid", scope: !228, file: !229, line: 102, type: !239, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !238, retainedNodes: !3090)
!3090 = !{!3091, !3092}
!3091 = !DILocalVariable(name: "this", arg: 1, scope: !3089, type: !2282, flags: DIFlagArtificial | DIFlagObjectPointer)
!3092 = !DILocalVariable(name: "oid", arg: 2, scope: !3089, file: !229, line: 102, type: !233)
!3093 = !DILocation(line: 0, scope: !3089)
!3094 = !DILocation(line: 102, column: 30, scope: !3089)
!3095 = !DILocation(line: 102, column: 46, scope: !3089)
!3096 = !DILocation(line: 104, column: 3, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3089, file: !229, line: 103, column: 2)
!3098 = !DILocation(line: 105, column: 2, scope: !3089)
!3099 = distinct !DISubprogram(name: "create", linkageName: "_ZN4pmem3obj9pool_base6createERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_mj", scope: !122, file: !118, line: 156, type: !166, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !165, retainedNodes: !3100)
!3100 = !{!3101, !3102, !3103, !3104, !3105}
!3101 = !DILocalVariable(name: "path", arg: 1, scope: !3099, file: !118, line: 156, type: !161)
!3102 = !DILocalVariable(name: "layout", arg: 2, scope: !3099, file: !118, line: 156, type: !161)
!3103 = !DILocalVariable(name: "size", arg: 3, scope: !3099, file: !118, line: 157, type: !168)
!3104 = !DILocalVariable(name: "mode", arg: 4, scope: !3099, file: !118, line: 157, type: !170)
!3105 = !DILocalVariable(name: "pop", scope: !3099, file: !118, line: 163, type: !82)
!3106 = !DILocation(line: 156, column: 28, scope: !3099)
!3107 = !DILocation(line: 156, column: 53, scope: !3099)
!3108 = !DILocation(line: 157, column: 21, scope: !3099)
!3109 = !DILocation(line: 157, column: 53, scope: !3099)
!3110 = !DILocation(line: 163, column: 3, scope: !3099)
!3111 = !DILocation(line: 163, column: 16, scope: !3099)
!3112 = !DILocation(line: 163, column: 37, scope: !3099)
!3113 = !DILocation(line: 163, column: 42, scope: !3099)
!3114 = !DILocation(line: 163, column: 51, scope: !3099)
!3115 = !DILocation(line: 163, column: 58, scope: !3099)
!3116 = !DILocation(line: 164, column: 9, scope: !3099)
!3117 = !DILocation(line: 164, column: 15, scope: !3099)
!3118 = !DILocation(line: 163, column: 22, scope: !3099)
!3119 = !DILocation(line: 166, column: 7, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3099, file: !118, line: 166, column: 7)
!3121 = !DILocation(line: 166, column: 11, scope: !3120)
!3122 = !DILocation(line: 166, column: 7, scope: !3099)
!3123 = !DILocation(line: 167, column: 23, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3120, file: !118, line: 166, column: 23)
!3125 = !DILocation(line: 167, column: 43, scope: !3124)
!3126 = !DILocation(line: 167, column: 40, scope: !3124)
!3127 = !DILocation(line: 167, column: 62, scope: !3124)
!3128 = !DILocation(line: 168, column: 4, scope: !3124)
!3129 = !DILocation(line: 168, column: 10, scope: !3124)
!3130 = !DILocation(line: 171, column: 2, scope: !3124)
!3131 = !DILocation(line: 171, column: 2, scope: !3099)
!3132 = !DILocation(line: 170, column: 20, scope: !3099)
!3133 = !DILocation(line: 170, column: 10, scope: !3099)
!3134 = distinct !DISubprogram(name: "operator<<<std::char_traits<char>>", linkageName: "_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc", scope: !2, file: !3135, line: 556, type: !3136, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !3144, retainedNodes: !3141)
!3135 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/ostream", directory: "")
!3136 = !DISubroutineType(types: !3137)
!3137 = !{!3138, !3138, !602}
!3138 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !3139, size: 64)
!3139 = !DICompositeType(tag: DW_TAG_class_type, name: "basic_ostream<char, std::char_traits<char>>", scope: !2, file: !3140, line: 359, flags: DIFlagFwdDecl | DIFlagNonTrivial)
!3140 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/ostream.tcc", directory: "")
!3141 = !{!3142, !3143}
!3142 = !DILocalVariable(name: "__out", arg: 1, scope: !3134, file: !3135, line: 556, type: !3138)
!3143 = !DILocalVariable(name: "__s", arg: 2, scope: !3134, file: !3135, line: 556, type: !602)
!3144 = !{!3145}
!3145 = !DITemplateTypeParameter(name: "_Traits", type: !662)
!3146 = !DILocation(line: 556, column: 46, scope: !3134)
!3147 = !DILocation(line: 556, column: 65, scope: !3134)
!3148 = !DILocation(line: 558, column: 12, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3134, file: !3135, line: 558, column: 11)
!3150 = !DILocation(line: 558, column: 11, scope: !3134)
!3151 = !DILocation(line: 559, column: 2, scope: !3149)
!3152 = !DILocation(line: 559, column: 8, scope: !3149)
!3153 = !DILocation(line: 561, column: 19, scope: !3149)
!3154 = !DILocation(line: 561, column: 26, scope: !3149)
!3155 = !DILocation(line: 562, column: 45, scope: !3149)
!3156 = !DILocation(line: 562, column: 29, scope: !3149)
!3157 = !DILocation(line: 561, column: 2, scope: !3149)
!3158 = !DILocation(line: 563, column: 14, scope: !3134)
!3159 = !DILocation(line: 563, column: 7, scope: !3134)
!3160 = distinct !DISubprogram(name: "operator<<", linkageName: "_ZNSolsEPFRSoS_E", scope: !3139, file: !3135, line: 108, type: !3161, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !3169, retainedNodes: !3170)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{!3163, !3165, !3166}
!3163 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !3164, size: 64)
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ostream_type", scope: !3139, file: !3135, line: 71, baseType: !3139)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{!3163, !3163}
!3169 = !DISubprogram(name: "operator<<", linkageName: "_ZNSolsEPFRSoS_E", scope: !3139, file: !3135, line: 108, type: !3161, scopeLine: 108, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3170 = !{!3171, !3173}
!3171 = !DILocalVariable(name: "this", arg: 1, scope: !3160, type: !3172, flags: DIFlagArtificial | DIFlagObjectPointer)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3173 = !DILocalVariable(name: "__pf", arg: 2, scope: !3160, file: !3135, line: 108, type: !3166)
!3174 = !DILocation(line: 0, scope: !3160)
!3175 = !DILocation(line: 108, column: 36, scope: !3160)
!3176 = !DILocation(line: 113, column: 9, scope: !3160)
!3177 = !DILocation(line: 113, column: 2, scope: !3160)
!3178 = distinct !DISubprogram(name: "endl<char, std::char_traits<char>>", linkageName: "_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", scope: !2, file: !3135, line: 590, type: !3179, scopeLine: 591, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !3183, retainedNodes: !3181)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{!3138, !3138}
!3181 = !{!3182}
!3182 = !DILocalVariable(name: "__os", arg: 1, scope: !3178, file: !3135, line: 590, type: !3138)
!3183 = !{!710, !3145}
!3184 = !DILocation(line: 590, column: 42, scope: !3178)
!3185 = !DILocation(line: 591, column: 20, scope: !3178)
!3186 = !DILocation(line: 591, column: 29, scope: !3178)
!3187 = !DILocation(line: 591, column: 34, scope: !3178)
!3188 = !DILocation(line: 591, column: 25, scope: !3178)
!3189 = !DILocation(line: 591, column: 14, scope: !3178)
!3190 = !DILocation(line: 591, column: 7, scope: !3178)
!3191 = distinct !DISubprogram(name: "setstate", linkageName: "_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate", scope: !3193, file: !3192, line: 157, type: !3195, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !3199, retainedNodes: !3200)
!3192 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.h", directory: "")
!3193 = !DICompositeType(tag: DW_TAG_class_type, name: "basic_ios<char, std::char_traits<char>>", scope: !2, file: !3194, line: 178, flags: DIFlagFwdDecl | DIFlagNonTrivial)
!3194 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/basic_ios.tcc", directory: "")
!3195 = !DISubroutineType(types: !3196)
!3196 = !{null, !3197, !3198}
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!3198 = !DIDerivedType(tag: DW_TAG_typedef, name: "iostate", scope: !6, file: !5, line: 398, baseType: !48)
!3199 = !DISubprogram(name: "setstate", linkageName: "_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate", scope: !3193, file: !3192, line: 157, type: !3195, scopeLine: 157, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3200 = !{!3201, !3203}
!3201 = !DILocalVariable(name: "this", arg: 1, scope: !3191, type: !3202, flags: DIFlagArtificial | DIFlagObjectPointer)
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3203 = !DILocalVariable(name: "__state", arg: 2, scope: !3191, file: !3192, line: 157, type: !3198)
!3204 = !DILocation(line: 0, scope: !3191)
!3205 = !{!3206, !3206, i64 0}
!3206 = !{!"_ZTSSt12_Ios_Iostate", !1781, i64 0}
!3207 = !DILocation(line: 157, column: 24, scope: !3191)
!3208 = !DILocation(line: 158, column: 27, scope: !3191)
!3209 = !DILocation(line: 158, column: 39, scope: !3191)
!3210 = !DILocation(line: 158, column: 37, scope: !3191)
!3211 = !DILocation(line: 158, column: 15, scope: !3191)
!3212 = !DILocation(line: 158, column: 49, scope: !3191)
!3213 = distinct !DISubprogram(name: "operator|", linkageName: "_ZStorSt12_Ios_IostateS_", scope: !2, file: !5, line: 169, type: !3214, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, retainedNodes: !3216)
!3214 = !DISubroutineType(types: !3215)
!3215 = !{!48, !48, !48}
!3216 = !{!3217, !3218}
!3217 = !DILocalVariable(name: "__a", arg: 1, scope: !3213, file: !5, line: 169, type: !48)
!3218 = !DILocalVariable(name: "__b", arg: 2, scope: !3213, file: !5, line: 169, type: !48)
!3219 = !DILocation(line: 169, column: 26, scope: !3213)
!3220 = !DILocation(line: 169, column: 44, scope: !3213)
!3221 = !DILocation(line: 170, column: 42, scope: !3213)
!3222 = !DILocation(line: 170, column: 66, scope: !3213)
!3223 = !DILocation(line: 170, column: 47, scope: !3213)
!3224 = !DILocation(line: 170, column: 5, scope: !3213)
!3225 = distinct !DISubprogram(name: "rdstate", linkageName: "_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv", scope: !3193, file: !3192, line: 137, type: !3226, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !3230, retainedNodes: !3231)
!3226 = !DISubroutineType(types: !3227)
!3227 = !{!3198, !3228}
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!3229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3193)
!3230 = !DISubprogram(name: "rdstate", linkageName: "_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv", scope: !3193, file: !3192, line: 137, type: !3226, scopeLine: 137, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3231 = !{!3232}
!3232 = !DILocalVariable(name: "this", arg: 1, scope: !3225, type: !3233, flags: DIFlagArtificial | DIFlagObjectPointer)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3234 = !DILocation(line: 0, scope: !3225)
!3235 = !DILocation(line: 138, column: 16, scope: !3225)
!3236 = !{!3237, !3206, i64 32}
!3237 = !{!"_ZTSSt8ios_base", !1823, i64 8, !1823, i64 16, !3238, i64 24, !3206, i64 28, !3206, i64 32, !1780, i64 40, !3239, i64 48, !1781, i64 64, !1999, i64 192, !1780, i64 200, !3240, i64 208}
!3238 = !{!"_ZTSSt13_Ios_Fmtflags", !1781, i64 0}
!3239 = !{!"_ZTSNSt8ios_base6_WordsE", !1780, i64 0, !1823, i64 8}
!3240 = !{!"_ZTSSt6locale", !1780, i64 0}
!3241 = !DILocation(line: 138, column: 9, scope: !3225)
!3242 = distinct !DISubprogram(name: "flush<char, std::char_traits<char>>", linkageName: "_ZSt5flushIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_", scope: !2, file: !3135, line: 612, type: !3179, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !3183, retainedNodes: !3243)
!3243 = !{!3244}
!3244 = !DILocalVariable(name: "__os", arg: 1, scope: !3242, file: !3135, line: 612, type: !3138)
!3245 = !DILocation(line: 612, column: 43, scope: !3242)
!3246 = !DILocation(line: 613, column: 14, scope: !3242)
!3247 = !DILocation(line: 613, column: 19, scope: !3242)
!3248 = !DILocation(line: 613, column: 7, scope: !3242)
!3249 = distinct !DISubprogram(name: "widen", linkageName: "_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc", scope: !3193, file: !3192, line: 449, type: !3250, scopeLine: 450, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !3253, retainedNodes: !3254)
!3250 = !DISubroutineType(types: !3251)
!3251 = !{!3252, !3228, !73}
!3252 = !DIDerivedType(tag: DW_TAG_typedef, name: "char_type", scope: !3193, file: !3192, line: 76, baseType: !73)
!3253 = !DISubprogram(name: "widen", linkageName: "_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc", scope: !3193, file: !3192, line: 449, type: !3250, scopeLine: 449, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3254 = !{!3255, !3256}
!3255 = !DILocalVariable(name: "this", arg: 1, scope: !3249, type: !3233, flags: DIFlagArtificial | DIFlagObjectPointer)
!3256 = !DILocalVariable(name: "__c", arg: 2, scope: !3249, file: !3192, line: 449, type: !73)
!3257 = !DILocation(line: 0, scope: !3249)
!3258 = !DILocation(line: 449, column: 18, scope: !3249)
!3259 = !DILocation(line: 450, column: 30, scope: !3249)
!3260 = !{!3261, !1780, i64 240}
!3261 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !1780, i64 216, !1781, i64 224, !1794, i64 225, !1780, i64 232, !1780, i64 240, !1780, i64 248, !1780, i64 256}
!3262 = !DILocation(line: 450, column: 16, scope: !3249)
!3263 = !DILocation(line: 450, column: 46, scope: !3249)
!3264 = !DILocation(line: 450, column: 40, scope: !3249)
!3265 = !DILocation(line: 450, column: 9, scope: !3249)
!3266 = distinct !DISubprogram(name: "__check_facet<std::ctype<char>>", linkageName: "_ZSt13__check_facetISt5ctypeIcEERKT_PS3_", scope: !2, file: !3192, line: 47, type: !3267, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, templateParams: !3276, retainedNodes: !3274)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{!3269, !3273}
!3269 = !DIDerivedType(tag: DW_TAG_reference_type, baseType: !3270, size: 64)
!3270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3271)
!3271 = !DICompositeType(tag: DW_TAG_class_type, name: "ctype<char>", scope: !2, file: !3272, line: 681, flags: DIFlagFwdDecl | DIFlagNonTrivial, identifier: "_ZTSSt5ctypeIcE")
!3272 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/7.5.0/../../../../include/c++/7.5.0/bits/locale_facets.h", directory: "")
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3274 = !{!3275}
!3275 = !DILocalVariable(name: "__f", arg: 1, scope: !3266, file: !3192, line: 47, type: !3273)
!3276 = !{!3277}
!3277 = !DITemplateTypeParameter(name: "_Facet", type: !3271)
!3278 = !DILocation(line: 47, column: 33, scope: !3266)
!3279 = !DILocation(line: 49, column: 12, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3266, file: !3192, line: 49, column: 11)
!3281 = !DILocation(line: 49, column: 11, scope: !3266)
!3282 = !DILocation(line: 50, column: 2, scope: !3280)
!3283 = !DILocation(line: 51, column: 15, scope: !3266)
!3284 = !DILocation(line: 51, column: 7, scope: !3266)
!3285 = distinct !DISubprogram(name: "widen", linkageName: "_ZNKSt5ctypeIcE5widenEc", scope: !3271, file: !3272, line: 872, type: !3286, scopeLine: 873, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !3290, retainedNodes: !3291)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{!3288, !3289, !73}
!3288 = !DIDerivedType(tag: DW_TAG_typedef, name: "char_type", scope: !3271, file: !3272, line: 686, baseType: !73)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64, flags: DIFlagArtificial | DIFlagObjectPointer)
!3290 = !DISubprogram(name: "widen", linkageName: "_ZNKSt5ctypeIcE5widenEc", scope: !3271, file: !3272, line: 872, type: !3286, scopeLine: 872, flags: DIFlagPublic | DIFlagPrototyped, spFlags: DISPFlagOptimized)
!3291 = !{!3292, !3293}
!3292 = !DILocalVariable(name: "this", arg: 1, scope: !3285, type: !3273, flags: DIFlagArtificial | DIFlagObjectPointer)
!3293 = !DILocalVariable(name: "__c", arg: 2, scope: !3285, file: !3272, line: 872, type: !73)
!3294 = !DILocation(line: 0, scope: !3285)
!3295 = !DILocation(line: 872, column: 18, scope: !3285)
!3296 = !DILocation(line: 874, column: 6, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3285, file: !3272, line: 874, column: 6)
!3298 = !{!3299, !1781, i64 56}
!3299 = !{!"_ZTSSt5ctypeIcE", !1780, i64 16, !1794, i64 24, !1780, i64 32, !1780, i64 40, !1780, i64 48, !1781, i64 56, !1781, i64 57, !1781, i64 313, !1781, i64 569}
!3300 = !DILocation(line: 874, column: 6, scope: !3285)
!3301 = !DILocation(line: 875, column: 11, scope: !3297)
!3302 = !DILocation(line: 875, column: 47, scope: !3297)
!3303 = !DILocation(line: 875, column: 4, scope: !3297)
!3304 = !DILocation(line: 876, column: 8, scope: !3285)
!3305 = !DILocation(line: 877, column: 24, scope: !3285)
!3306 = !DILocation(line: 877, column: 15, scope: !3285)
!3307 = !DILocation(line: 877, column: 2, scope: !3285)
!3308 = !DILocation(line: 878, column: 7, scope: !3285)
!3309 = distinct !DISubprogram(name: "get", linkageName: "_ZNK4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEE3getEv", scope: !228, file: !229, line: 286, type: !386, scopeLine: 287, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !385, retainedNodes: !3310)
!3310 = !{!3311}
!3311 = !DILocalVariable(name: "this", arg: 1, scope: !3309, type: !2047, flags: DIFlagArtificial | DIFlagObjectPointer)
!3312 = !DILocation(line: 0, scope: !3309)
!3313 = !DILocation(line: 288, column: 13, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3309, file: !229, line: 288, column: 7)
!3315 = !DILocation(line: 288, column: 17, scope: !3314)
!3316 = !{!3317, !1823, i64 0}
!3317 = !{!"_ZTSN4pmem6detail19persistent_ptr_baseI7PMDKMapImP8_stritemEEE", !1986, i64 0}
!3318 = !DILocation(line: 289, column: 7, scope: !3314)
!3319 = !DILocation(line: 288, column: 30, scope: !3314)
!3320 = !DILocation(line: 288, column: 7, scope: !3309)
!3321 = !DILocation(line: 290, column: 44, scope: !3314)
!3322 = !DILocation(line: 290, column: 48, scope: !3314)
!3323 = !{!3317, !1823, i64 8}
!3324 = !DILocation(line: 290, column: 11, scope: !3314)
!3325 = !DILocation(line: 290, column: 4, scope: !3314)
!3326 = !DILocation(line: 293, column: 26, scope: !3314)
!3327 = !DILocation(line: 293, column: 20, scope: !3314)
!3328 = !DILocation(line: 293, column: 5, scope: !3314)
!3329 = !DILocation(line: 292, column: 11, scope: !3314)
!3330 = !DILocation(line: 292, column: 4, scope: !3314)
!3331 = !DILocation(line: 294, column: 2, scope: !3309)
!3332 = distinct !DISubprogram(name: "max", linkageName: "_ZNSt14numeric_limitsImE3maxEv", scope: !3333, file: !58, line: 1208, type: !3362, scopeLine: 1208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !3364, retainedNodes: !77)
!3333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "numeric_limits<unsigned long>", scope: !2, file: !58, line: 1200, size: 8, flags: DIFlagTypePassByValue, elements: !3334, templateParams: !3372, identifier: "_ZTSSt14numeric_limitsImE")
!3334 = !{!3335, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3361, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371}
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "is_specialized", scope: !3333, file: !58, line: 1202, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 true)
!3336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "digits", scope: !3333, file: !58, line: 1215, baseType: !133, flags: DIFlagStaticMember, extraData: i32 64)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "digits10", scope: !3333, file: !58, line: 1217, baseType: !133, flags: DIFlagStaticMember, extraData: i32 19)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "max_digits10", scope: !3333, file: !58, line: 1220, baseType: !133, flags: DIFlagStaticMember, extraData: i32 0)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "is_signed", scope: !3333, file: !58, line: 1222, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 false)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "is_integer", scope: !3333, file: !58, line: 1223, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 true)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "is_exact", scope: !3333, file: !58, line: 1224, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 true)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "radix", scope: !3333, file: !58, line: 1225, baseType: !133, flags: DIFlagStaticMember, extraData: i32 2)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "min_exponent", scope: !3333, file: !58, line: 1233, baseType: !133, flags: DIFlagStaticMember, extraData: i32 0)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "min_exponent10", scope: !3333, file: !58, line: 1234, baseType: !133, flags: DIFlagStaticMember, extraData: i32 0)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "max_exponent", scope: !3333, file: !58, line: 1235, baseType: !133, flags: DIFlagStaticMember, extraData: i32 0)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "max_exponent10", scope: !3333, file: !58, line: 1236, baseType: !133, flags: DIFlagStaticMember, extraData: i32 0)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "has_infinity", scope: !3333, file: !58, line: 1238, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 false)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "has_quiet_NaN", scope: !3333, file: !58, line: 1239, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 false)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "has_signaling_NaN", scope: !3333, file: !58, line: 1240, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 false)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "has_denorm", scope: !3333, file: !58, line: 1241, baseType: !3352, flags: DIFlagStaticMember, extraData: i32 0)
!3352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !57)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "has_denorm_loss", scope: !3333, file: !58, line: 1243, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 false)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "is_iec559", scope: !3333, file: !58, line: 1261, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 false)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "is_bounded", scope: !3333, file: !58, line: 1262, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 true)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "is_modulo", scope: !3333, file: !58, line: 1263, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 true)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "traps", scope: !3333, file: !58, line: 1265, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 true)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "tinyness_before", scope: !3333, file: !58, line: 1266, baseType: !3336, flags: DIFlagStaticMember, extraData: i1 false)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "round_style", scope: !3333, file: !58, line: 1267, baseType: !3360, flags: DIFlagStaticMember, extraData: i32 0)
!3360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !63)
!3361 = !DISubprogram(name: "min", linkageName: "_ZNSt14numeric_limitsImE3minEv", scope: !3333, file: !58, line: 1205, type: !3362, scopeLine: 1205, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{!89}
!3364 = !DISubprogram(name: "max", linkageName: "_ZNSt14numeric_limitsImE3maxEv", scope: !3333, file: !58, line: 1208, type: !3362, scopeLine: 1208, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!3365 = !DISubprogram(name: "lowest", linkageName: "_ZNSt14numeric_limitsImE6lowestEv", scope: !3333, file: !58, line: 1212, type: !3362, scopeLine: 1212, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!3366 = !DISubprogram(name: "epsilon", linkageName: "_ZNSt14numeric_limitsImE7epsilonEv", scope: !3333, file: !58, line: 1228, type: !3362, scopeLine: 1228, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!3367 = !DISubprogram(name: "round_error", linkageName: "_ZNSt14numeric_limitsImE11round_errorEv", scope: !3333, file: !58, line: 1231, type: !3362, scopeLine: 1231, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!3368 = !DISubprogram(name: "infinity", linkageName: "_ZNSt14numeric_limitsImE8infinityEv", scope: !3333, file: !58, line: 1246, type: !3362, scopeLine: 1246, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!3369 = !DISubprogram(name: "quiet_NaN", linkageName: "_ZNSt14numeric_limitsImE9quiet_NaNEv", scope: !3333, file: !58, line: 1250, type: !3362, scopeLine: 1250, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!3370 = !DISubprogram(name: "signaling_NaN", linkageName: "_ZNSt14numeric_limitsImE13signaling_NaNEv", scope: !3333, file: !58, line: 1254, type: !3362, scopeLine: 1254, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!3371 = !DISubprogram(name: "denorm_min", linkageName: "_ZNSt14numeric_limitsImE10denorm_minEv", scope: !3333, file: !58, line: 1258, type: !3362, scopeLine: 1258, flags: DIFlagPrototyped | DIFlagStaticMember, spFlags: DISPFlagOptimized)
!3372 = !{!3373}
!3373 = !DITemplateTypeParameter(name: "_Tp", type: !89)
!3374 = !DILocation(line: 1208, column: 37, scope: !3332)
!3375 = distinct !DISubprogram(name: "createMap", linkageName: "_ZN7PMDKMapImP8_stritemE9createMapEP11pmemobjpool", scope: !251, file: !252, line: 27, type: !311, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !21, declaration: !310, retainedNodes: !3376)
!3376 = !{!3377, !3378}
!3377 = !DILocalVariable(name: "this", arg: 1, scope: !3375, type: !565, flags: DIFlagArtificial | DIFlagObjectPointer)
!3378 = !DILocalVariable(name: "pop", arg: 2, scope: !3375, file: !252, line: 27, type: !130)
!3379 = !DILocation(line: 0, scope: !3375)
!3380 = !DILocation(line: 27, column: 34, scope: !3375)
!3381 = !DILocation(line: 28, column: 12, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3375, file: !252, line: 28, column: 12)
!3383 = !DILocation(line: 28, column: 12, scope: !3375)
!3384 = !DILocation(line: 29, column: 23, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3382, file: !252, line: 28, column: 83)
!3386 = !DILocation(line: 29, column: 51, scope: !3385)
!3387 = !DILocation(line: 29, column: 48, scope: !3385)
!3388 = !DILocation(line: 29, column: 70, scope: !3385)
!3389 = !DILocation(line: 30, column: 13, scope: !3385)
!3390 = !DILocation(line: 32, column: 26, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3375, file: !252, line: 32, column: 13)
!3392 = !DILocation(line: 32, column: 32, scope: !3391)
!3393 = !DILocation(line: 32, column: 13, scope: !3391)
!3394 = !DILocation(line: 32, column: 13, scope: !3375)
!3395 = !DILocation(line: 33, column: 13, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3391, file: !252, line: 32, column: 45)
!3397 = !DILocation(line: 34, column: 13, scope: !3396)
!3398 = !DILocation(line: 36, column: 9, scope: !3375)
!3399 = !DILocation(line: 37, column: 5, scope: !3375)
!3400 = distinct !DISubprogram(linkageName: "_GLOBAL__sub_I_new_assoc.cpp", scope: !22, file: !22, type: !3401, flags: DIFlagArtificial | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !21, retainedNodes: !77)
!3401 = !DISubroutineType(types: !77)
!3402 = !DILocation(line: 0, scope: !3400)

=========== Module Dump End ============

[ 40%] Building C object CMakeFiles/memcached.dir/items.c.o
clang-11: warning: -lpthread: 'linker' input unused [-Wunused-command-line-argument]
(impload) Calling PaviseImpLoad Pass constructor
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:13
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:13
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:14
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:14
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:19
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:22
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:25
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:60
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:61
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:61
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:68
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:73
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:73
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:74
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:74
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:75
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:75
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:91
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:91
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:93
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:96
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:96
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:101
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:181
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:181
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:181
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:182
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:182
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:184
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:190
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:190
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:190
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:190
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:190
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:194
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:194
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:195
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:195
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:196
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:196
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:197
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:197
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:197
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:199
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:199
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:199
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:203
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:204
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:206
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:206
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:207
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:207
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:229
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:231
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:233
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:237
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:238
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:240
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:240

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:242
  %46 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !291, !tbaa !155
^Encountering ld inst of a ptr
  %slabs_clsid = getelementptr inbounds %struct._stritem, %struct._stritem* %46, i32 0, i32 9, !dbg !291
  %47 = load i8, i8* %slabs_clsid, align 8, !dbg !291, !tbaa !294
  %conv47 = zext i8 %47 to i32, !dbg !291
  %cmp48 = icmp eq i32 %conv47, 0, !dbg !291
  br i1 %cmp48, label %if.then50, label %if.else, !dbg !295
  br label %if.end51, !dbg !295
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 242, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.do_item_alloc, i64 0, i64 0)) #10, !dbg !291
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:242
  unreachable, !dbg !291

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:244
  %48 = load i32, i32* %id, align 4, !dbg !296, !tbaa !163
  %conv52 = trunc i32 %49 to i8, !dbg !296
  %50 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !297, !tbaa !155
^Encountering ld inst of a ptr
  %slabs_clsid53 = getelementptr inbounds %struct._stritem, %struct._stritem* %50, i32 0, i32 9, !dbg !298
  store i8 %conv52, i8* %slabs_clsid53, align 8, !dbg !299, !tbaa !294
inserting pavise_store in front of items.c:244, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:246

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:252
  %56 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !304, !tbaa !155
^Encountering ld inst of a ptr
  %h_next = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 2, !dbg !305
  store %struct._stritem* null, %struct._stritem** %h_next, align 8, !dbg !306, !tbaa !307
^Encountering st inst of a ptr
inserting pavise_store in front of items.c:252, fileid = 0
  %59 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !308, !tbaa !155
^Encountering ld inst of a ptr
  %prev62 = getelementptr inbounds %struct._stritem, %struct._stritem* %59, i32 0, i32 1, !dbg !309
  store %struct._stritem* null, %struct._stritem** %prev62, align 8, !dbg !310, !tbaa !273
^Encountering st inst of a ptr
inserting pavise_store in front of items.c:252, fileid = 0
  %62 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !311, !tbaa !155
^Encountering ld inst of a ptr
  %next = getelementptr inbounds %struct._stritem, %struct._stritem* %62, i32 0, i32 0, !dbg !312
  store %struct._stritem* null, %struct._stritem** %next, align 8, !dbg !313, !tbaa !314
^Encountering st inst of a ptr
inserting pavise_store in front of items.c:252, fileid = 0

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:253
  %65 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !315, !tbaa !155
^Encountering ld inst of a ptr
  %refcount63 = getelementptr inbounds %struct._stritem, %struct._stritem* %65, i32 0, i32 6, !dbg !316
  store i16 1, i16* %refcount63, align 4, !dbg !317, !tbaa !242
inserting pavise_store in front of items.c:253, fileid = 0

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:255
  %68 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !321, !tbaa !155
^Encountering ld inst of a ptr
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %68, i32 0, i32 8, !dbg !322
  store i8 0, i8* %it_flags, align 1, !dbg !323, !tbaa !324
inserting pavise_store in front of items.c:255, fileid = 0

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:256
  %70 = load i64, i64* %nkey.addr, align 8, !dbg !325, !tbaa !160
  %conv64 = trunc i64 %71 to i8, !dbg !325
  %72 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !326, !tbaa !155
^Encountering ld inst of a ptr
  %nkey65 = getelementptr inbounds %struct._stritem, %struct._stritem* %72, i32 0, i32 10, !dbg !327
  store i8 %conv64, i8* %nkey65, align 1, !dbg !328, !tbaa !329
inserting pavise_store in front of items.c:256, fileid = 0

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:257
  %74 = load i32, i32* %nbytes.addr, align 4, !dbg !330, !tbaa !163
  %76 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !331, !tbaa !155
^Encountering ld inst of a ptr
  %nbytes66 = getelementptr inbounds %struct._stritem, %struct._stritem* %76, i32 0, i32 5, !dbg !332
  store i32 %75, i32* %nbytes66, align 8, !dbg !333, !tbaa !334
inserting pavise_store in front of items.c:257, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:260

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:261
  %82 = load i32, i32* %exptime.addr, align 4, !dbg !338, !tbaa !163
  %84 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !339, !tbaa !155
^Encountering ld inst of a ptr
  %exptime69 = getelementptr inbounds %struct._stritem, %struct._stritem* %84, i32 0, i32 4, !dbg !340
  store i32 %83, i32* %exptime69, align 4, !dbg !341, !tbaa !251
inserting pavise_store in front of items.c:261, fileid = 0

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:262
  %87 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !342, !tbaa !155
^Encountering ld inst of a ptr
  %end70 = getelementptr inbounds %struct._stritem, %struct._stritem* %87, i32 0, i32 12, !dbg !342
  %arrayidx71 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end70, i64 0, i64 0, !dbg !342
  %88 = bitcast i8** %arrayidx71 to i8*, !dbg !342
  %89 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !342, !tbaa !155
^Encountering ld inst of a ptr
  %nkey72 = getelementptr inbounds %struct._stritem, %struct._stritem* %89, i32 0, i32 10, !dbg !342
  %90 = load i8, i8* %nkey72, align 1, !dbg !342, !tbaa !329
  %conv73 = zext i8 %90 to i32, !dbg !342
  %idx.ext = sext i32 %conv73 to i64, !dbg !342
  %add.ptr = getelementptr inbounds i8, i8* %88, i64 %idx.ext, !dbg !342
  %add.ptr74 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !342
  %arraydecay75 = getelementptr inbounds [40 x i8], [40 x i8]* %suffix, i64 0, i64 0, !dbg !343
  %91 = load i8, i8* %nsuffix, align 1, !dbg !344, !tbaa !345
  %conv76 = zext i8 %91 to i64, !dbg !346
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 16 %arraydecay75, i64 %conv76, i1 false), !dbg !343
inserting pavise mem*** before llvm.memcpy.p0i8.p0i8.i64
inserting pavise memcpy
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:262

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:263
  %92 = load i8, i8* %nsuffix, align 1, !dbg !347, !tbaa !345
  %93 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !348, !tbaa !155
^Encountering ld inst of a ptr
  %nsuffix77 = getelementptr inbounds %struct._stritem, %struct._stritem* %93, i32 0, i32 7, !dbg !349
  store i8 %92, i8* %nsuffix77, align 2, !dbg !350, !tbaa !351
inserting pavise_store in front of items.c:263, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:265
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:265
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:265
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:265
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:265
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../pmdk/src/include/libpmemobj/base.h:117
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../pmdk/src/include/libpmemobj/base.h:122
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../pmdk/src/include/libpmemobj/base.h:122
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../pmdk/src/include/libpmemobj/base.h:127
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/../pmdk/src/include/libpmemobj/base.h:136
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:364

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:365
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !141, !tbaa !136
^Encountering ld inst of a ptr
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 8, !dbg !143
  %1 = load i8, i8* %it_flags, align 1, !dbg !143, !tbaa !144
  %conv = zext i8 %1 to i32, !dbg !141
  %and = and i32 %conv, 1, !dbg !149
  %cmp = icmp ne i32 %and, 0, !dbg !150
  br i1 %cmp, label %if.then, label %if.end19, !dbg !151

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:366
  %2 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !152, !tbaa !136
^Encountering ld inst of a ptr
  %it_flags2 = getelementptr inbounds %struct._stritem, %struct._stritem* %2, i32 0, i32 8, !dbg !154
  %3 = load i8, i8* %it_flags2, align 1, !dbg !155, !tbaa !144
  %conv3 = zext i8 %3 to i32, !dbg !155
  %and4 = and i32 %conv3, -2, !dbg !155
  %conv5 = trunc i32 %and4 to i8, !dbg !155
  store i8 %conv5, i8* %it_flags2, align 1, !dbg !155, !tbaa !144
inserting pavise_store in front of items.c:366, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:367

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:369
  %5 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !157, !tbaa !136
^Encountering ld inst of a ptr
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 10, !dbg !157
  %6 = load i8, i8* %nkey, align 1, !dbg !157, !tbaa !159
  %conv6 = zext i8 %6 to i64, !dbg !157
  %add = add i64 120, %conv6, !dbg !157
  %add7 = add i64 %add, 1, !dbg !157
  %7 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !157, !tbaa !136
^Encountering ld inst of a ptr
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %7, i32 0, i32 7, !dbg !157
  %8 = load i8, i8* %nsuffix, align 2, !dbg !157, !tbaa !160
  %conv8 = zext i8 %8 to i64, !dbg !157
  %add9 = add i64 %add7, %conv8, !dbg !157
  %9 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !157, !tbaa !136
^Encountering ld inst of a ptr
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %9, i32 0, i32 5, !dbg !157
  %10 = load i32, i32* %nbytes, align 8, !dbg !157, !tbaa !161
  %conv10 = sext i32 %11 to i64, !dbg !157
  %add11 = add i64 %add9, %conv10, !dbg !157
  %12 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2), align 8, !dbg !162, !tbaa !163
  %sub = sub i64 %12, %add11, !dbg !162
  store i64 %sub, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2), align 8, !dbg !162, !tbaa !163
inserting pavise_store in front of items.c:369, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:372

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:373
  %15 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !168, !tbaa !136
^Encountering ld inst of a ptr
  %end = getelementptr inbounds %struct._stritem, %struct._stritem* %15, i32 0, i32 12, !dbg !168
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %end, i64 0, i64 0, !dbg !168
  %16 = bitcast i8** %arrayidx to i8*, !dbg !168
  %17 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !169, !tbaa !136
^Encountering ld inst of a ptr
  %nkey13 = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 10, !dbg !170
  %18 = load i8, i8* %nkey13, align 1, !dbg !170, !tbaa !159
  %conv14 = zext i8 %18 to i64, !dbg !169
  call void @assoc_delete(i8* %16, i64 %conv14), !dbg !171
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:373
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:374

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:375
  %20 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !174, !tbaa !136
^Encountering ld inst of a ptr
  %refcount = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 6, !dbg !176
  %21 = load i16, i16* %refcount, align 4, !dbg !176, !tbaa !177
  %conv15 = zext i16 %22 to i32, !dbg !174
  %cmp16 = icmp eq i32 %conv15, 0, !dbg !178
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !179
  %23 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !180, !tbaa !136
^Encountering ld inst of a ptr
  call void @item_free(%struct._stritem* %23), !dbg !181
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:375
  br label %if.end, !dbg !181
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:268
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:269
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:269

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:270
  %7 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !154, !tbaa !138
^Encountering ld inst of a ptr
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %7, i32 0, i32 8, !dbg !154
  %8 = load i8, i8* %it_flags, align 1, !dbg !154, !tbaa !157
  %conv6 = zext i8 %8 to i32, !dbg !154
  %and = and i32 %conv6, 1, !dbg !154
  %cmp = icmp eq i32 %and, 0, !dbg !154
  br i1 %cmp, label %if.then, label %if.else, !dbg !158
  br label %if.end, !dbg !158
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 270, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.item_free, i64 0, i64 0)) #10, !dbg !154
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:270
  unreachable, !dbg !154

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:271
  %9 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !159, !tbaa !138
^Encountering ld inst of a ptr
  %10 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !159, !tbaa !138
^Encountering ld inst of a ptr
  %slabs_clsid = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 9, !dbg !159
  %11 = load i8, i8* %slabs_clsid, align 8, !dbg !159, !tbaa !162
  %idxprom = zext i8 %11 to i64, !dbg !159
  %arrayidx = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @heads, i64 0, i64 %idxprom, !dbg !159
  %12 = load %struct._stritem*, %struct._stritem** %arrayidx, align 8, !dbg !159, !tbaa !138
^Encountering ld inst of a ptr
  %cmp8 = icmp ne %struct._stritem* %9, %12, !dbg !159
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !163
  br label %if.end12, !dbg !163
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 271, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.item_free, i64 0, i64 0)) #10, !dbg !159
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:271
  unreachable, !dbg !159
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:272

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:273
  %17 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !168, !tbaa !138
^Encountering ld inst of a ptr
  %refcount = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 6, !dbg !168
  %18 = load i16, i16* %refcount, align 4, !dbg !168, !tbaa !171
  %conv21 = zext i16 %19 to i32, !dbg !168
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !168
  br i1 %cmp22, label %if.then24, label %if.else25, !dbg !172
  br label %if.end26, !dbg !172
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 273, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.item_free, i64 0, i64 0)) #10, !dbg !168
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:273
  unreachable, !dbg !168

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:276
  %20 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !173, !tbaa !138
^Encountering ld inst of a ptr
  %slabs_clsid27 = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 9, !dbg !174
  store i8 0, i8* %slabs_clsid27, align 8, !dbg !175, !tbaa !162
inserting pavise_store in front of items.c:276, fileid = 0

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:277
  %22 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !176, !tbaa !138
^Encountering ld inst of a ptr
  %it_flags28 = getelementptr inbounds %struct._stritem, %struct._stritem* %22, i32 0, i32 8, !dbg !177
  %23 = load i8, i8* %it_flags28, align 1, !dbg !178, !tbaa !157
  %conv29 = zext i8 %23 to i32, !dbg !178
  %or = or i32 %conv29, 4, !dbg !178
  %conv30 = trunc i32 %or to i8, !dbg !178
  store i8 %conv30, i8* %it_flags28, align 1, !dbg !178, !tbaa !157
inserting pavise_store in front of items.c:277, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:279
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:279
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:279
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:280
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:281
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:281
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:287
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:287
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:287
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:288
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:288
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:289
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:289
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:291
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:291
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:293
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:293
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:296
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:297
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:297
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:297
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:297

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:299
  %2 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !147, !tbaa !139
^Encountering ld inst of a ptr
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %2, i32 0, i32 8, !dbg !147
  %3 = load i8, i8* %it_flags, align 1, !dbg !147, !tbaa !150
  %conv = zext i8 %3 to i32, !dbg !147
  %and = and i32 %conv, 4, !dbg !147
  %cmp = icmp eq i32 %and, 0, !dbg !147
  br i1 %cmp, label %if.then, label %if.else, !dbg !155
  br label %if.end, !dbg !155
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 299, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.item_link_q, i64 0, i64 0)) #10, !dbg !147
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:299
  unreachable, !dbg !147

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:301
  %4 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !156, !tbaa !139
^Encountering ld inst of a ptr
  %slabs_clsid = getelementptr inbounds %struct._stritem, %struct._stritem* %4, i32 0, i32 9, !dbg !157
  %5 = load i8, i8* %slabs_clsid, align 8, !dbg !157, !tbaa !158
  %idxprom = zext i8 %5 to i64, !dbg !159
  %arrayidx = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @heads, i64 0, i64 %idxprom, !dbg !159
  store %struct._stritem** %arrayidx, %struct._stritem*** %head, align 8, !dbg !160, !tbaa !139
^Encountering st inst of a ptr
inserting pavise_store in front of items.c:301, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:303
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:304

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:305
  %21 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !173, !tbaa !139
^Encountering ld inst of a ptr
  %prev = getelementptr inbounds %struct._stritem, %struct._stritem* %21, i32 0, i32 1, !dbg !174
  store %struct._stritem* null, %struct._stritem** %prev, align 8, !dbg !175, !tbaa !176
^Encountering st inst of a ptr
inserting pavise_store in front of items.c:305, fileid = 0

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:306
  %24 = load %struct._stritem**, %struct._stritem*** %head, align 8, !dbg !177, !tbaa !139
^Encountering ld inst of a ptr
  %25 = load %struct._stritem*, %struct._stritem** %24, align 8, !dbg !178, !tbaa !139
^Encountering ld inst of a ptr
  %26 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !179, !tbaa !139
^Encountering ld inst of a ptr
  %next = getelementptr inbounds %struct._stritem, %struct._stritem* %26, i32 0, i32 0, !dbg !180
  store %struct._stritem* %25, %struct._stritem** %next, align 8, !dbg !181, !tbaa !182
^Encountering st inst of a ptr
inserting pavise_store in front of items.c:306, fileid = 0

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:307
  %29 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !183, !tbaa !139
^Encountering ld inst of a ptr
  %next19 = getelementptr inbounds %struct._stritem, %struct._stritem* %29, i32 0, i32 0, !dbg !185
  %30 = load %struct._stritem*, %struct._stritem** %next19, align 8, !dbg !185, !tbaa !182
^Encountering ld inst of a ptr
  %tobool20 = icmp ne %struct._stritem* %30, null, !dbg !183
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !186
  %31 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !187, !tbaa !139
^Encountering ld inst of a ptr
  %32 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !188, !tbaa !139
^Encountering ld inst of a ptr
  %next22 = getelementptr inbounds %struct._stritem, %struct._stritem* %32, i32 0, i32 0, !dbg !189
  %33 = load %struct._stritem*, %struct._stritem** %next22, align 8, !dbg !189, !tbaa !182
^Encountering ld inst of a ptr
  %prev23 = getelementptr inbounds %struct._stritem, %struct._stritem* %33, i32 0, i32 1, !dbg !190
  store %struct._stritem* %31, %struct._stritem** %prev23, align 8, !dbg !191, !tbaa !176
^Encountering st inst of a ptr
inserting pavise_store in front of items.c:307, fileid = 0
  br label %if.end24, !dbg !188
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:312
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:312
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:315
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:316
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:316
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:316
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:316

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:318
  %2 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !147, !tbaa !139
^Encountering ld inst of a ptr
  %slabs_clsid = getelementptr inbounds %struct._stritem, %struct._stritem* %2, i32 0, i32 9, !dbg !148
  %3 = load i8, i8* %slabs_clsid, align 8, !dbg !148, !tbaa !149
  %idxprom = zext i8 %3 to i64, !dbg !154
  %arrayidx = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @heads, i64 0, i64 %idxprom, !dbg !154
  store %struct._stritem** %arrayidx, %struct._stritem*** %head, align 8, !dbg !155, !tbaa !139
^Encountering st inst of a ptr
inserting pavise_store in front of items.c:318, fileid = 0

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:322
  %11 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !166, !tbaa !139
^Encountering ld inst of a ptr
  %prev = getelementptr inbounds %struct._stritem, %struct._stritem* %11, i32 0, i32 1, !dbg !166
  %12 = load %struct._stritem*, %struct._stritem** %prev, align 8, !dbg !166, !tbaa !170
^Encountering ld inst of a ptr
  %cmp4 = icmp eq %struct._stritem* %12, null, !dbg !166
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !171
  br label %if.end, !dbg !171
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 322, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.item_unlink_q, i64 0, i64 0)) #10, !dbg !166
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:322
  unreachable, !dbg !166

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:323
  %13 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !172, !tbaa !139
^Encountering ld inst of a ptr
  %next = getelementptr inbounds %struct._stritem, %struct._stritem* %13, i32 0, i32 0, !dbg !173
  %14 = load %struct._stritem*, %struct._stritem** %next, align 8, !dbg !173, !tbaa !174
^Encountering ld inst of a ptr
  %15 = load %struct._stritem**, %struct._stritem*** %head, align 8, !dbg !175, !tbaa !139
^Encountering ld inst of a ptr
  store %struct._stritem* %14, %struct._stritem** %15, align 8, !dbg !176, !tbaa !139
^Encountering st inst of a ptr
inserting pavise_store in front of items.c:323, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:326

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:327
  %23 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !189, !tbaa !139
^Encountering ld inst of a ptr
  %prev14 = getelementptr inbounds %struct._stritem, %struct._stritem* %23, i32 0, i32 1, !dbg !190
  %24 = load %struct._stritem*, %struct._stritem** %prev14, align 8, !dbg !190, !tbaa !170
^Encountering ld inst of a ptr
  %25 = load %struct._stritem**, %struct._stritem*** %tail, align 8, !dbg !191, !tbaa !139
^Encountering ld inst of a ptr
  store %struct._stritem* %24, %struct._stritem** %25, align 8, !dbg !192, !tbaa !139
^Encountering st inst of a ptr
inserting pavise_store in front of items.c:327, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:329

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:330
  %31 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !198, !tbaa !139
^Encountering ld inst of a ptr
  %prev21 = getelementptr inbounds %struct._stritem, %struct._stritem* %31, i32 0, i32 1, !dbg !198
  %32 = load %struct._stritem*, %struct._stritem** %prev21, align 8, !dbg !198, !tbaa !170
^Encountering ld inst of a ptr
  %33 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !198, !tbaa !139
^Encountering ld inst of a ptr
  %cmp22 = icmp ne %struct._stritem* %32, %33, !dbg !198
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !201
  br label %if.end25, !dbg !201
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 330, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.item_unlink_q, i64 0, i64 0)) #10, !dbg !198
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:330
  unreachable, !dbg !198

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:332
  %34 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !202, !tbaa !139
^Encountering ld inst of a ptr
  %next26 = getelementptr inbounds %struct._stritem, %struct._stritem* %34, i32 0, i32 0, !dbg !204
  %35 = load %struct._stritem*, %struct._stritem** %next26, align 8, !dbg !204, !tbaa !174
^Encountering ld inst of a ptr
  %tobool = icmp ne %struct._stritem* %35, null, !dbg !202
  br i1 %tobool, label %if.then27, label %if.end31, !dbg !205
  %36 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !206, !tbaa !139
^Encountering ld inst of a ptr
  %prev28 = getelementptr inbounds %struct._stritem, %struct._stritem* %36, i32 0, i32 1, !dbg !207
  %37 = load %struct._stritem*, %struct._stritem** %prev28, align 8, !dbg !207, !tbaa !170
^Encountering ld inst of a ptr
  %38 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !208, !tbaa !139
^Encountering ld inst of a ptr
  %next29 = getelementptr inbounds %struct._stritem, %struct._stritem* %38, i32 0, i32 0, !dbg !209
  %39 = load %struct._stritem*, %struct._stritem** %next29, align 8, !dbg !209, !tbaa !174
^Encountering ld inst of a ptr
  %prev30 = getelementptr inbounds %struct._stritem, %struct._stritem* %39, i32 0, i32 1, !dbg !210
  store %struct._stritem* %37, %struct._stritem** %prev30, align 8, !dbg !211, !tbaa !170
^Encountering st inst of a ptr
inserting pavise_store in front of items.c:332, fileid = 0
  br label %if.end31, !dbg !208

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:333
  %42 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !212, !tbaa !139
^Encountering ld inst of a ptr
  %prev32 = getelementptr inbounds %struct._stritem, %struct._stritem* %42, i32 0, i32 1, !dbg !214
  %43 = load %struct._stritem*, %struct._stritem** %prev32, align 8, !dbg !214, !tbaa !170
^Encountering ld inst of a ptr
  %tobool33 = icmp ne %struct._stritem* %43, null, !dbg !212
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !215
  %44 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !216, !tbaa !139
^Encountering ld inst of a ptr
  %next35 = getelementptr inbounds %struct._stritem, %struct._stritem* %44, i32 0, i32 0, !dbg !217
  %45 = load %struct._stritem*, %struct._stritem** %next35, align 8, !dbg !217, !tbaa !174
^Encountering ld inst of a ptr
  %46 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !218, !tbaa !139
^Encountering ld inst of a ptr
  %prev36 = getelementptr inbounds %struct._stritem, %struct._stritem* %46, i32 0, i32 1, !dbg !219
  %47 = load %struct._stritem*, %struct._stritem** %prev36, align 8, !dbg !219, !tbaa !170
^Encountering ld inst of a ptr
  %next37 = getelementptr inbounds %struct._stritem, %struct._stritem* %47, i32 0, i32 0, !dbg !220
  store %struct._stritem* %45, %struct._stritem** %next37, align 8, !dbg !221, !tbaa !174
^Encountering st inst of a ptr
inserting pavise_store in front of items.c:333, fileid = 0
  br label %if.end38, !dbg !218
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:336
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:336
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:339

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:340
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !141, !tbaa !136
^Encountering ld inst of a ptr
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 8, !dbg !141
  %1 = load i8, i8* %it_flags, align 1, !dbg !141, !tbaa !144
  %conv = zext i8 %1 to i32, !dbg !141
  %and = and i32 %conv, 5, !dbg !141
  %cmp = icmp eq i32 %and, 0, !dbg !141
  br i1 %cmp, label %if.then, label %if.else, !dbg !149
  br label %if.end, !dbg !149
  call void @__assert_fail(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 340, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.do_item_link, i64 0, i64 0)) #10, !dbg !141
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:340
  unreachable, !dbg !141

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:341
  %2 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !150, !tbaa !136
^Encountering ld inst of a ptr
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %2, i32 0, i32 5, !dbg !150
  %3 = load i32, i32* %nbytes, align 8, !dbg !150, !tbaa !153
  %cmp2 = icmp slt i32 %4, 1048576, !dbg !150
  br i1 %cmp2, label %if.then4, label %if.else5, !dbg !154
  br label %if.end6, !dbg !154
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 341, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.do_item_link, i64 0, i64 0)) #10, !dbg !150
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:341
  unreachable, !dbg !150

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:342
  %5 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !155, !tbaa !136
^Encountering ld inst of a ptr
  %it_flags7 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 8, !dbg !156
  %6 = load i8, i8* %it_flags7, align 1, !dbg !157, !tbaa !144
  %conv8 = zext i8 %6 to i32, !dbg !157
  %or = or i32 %conv8, 1, !dbg !157
  %conv9 = trunc i32 %or to i8, !dbg !157
  store i8 %conv9, i8* %it_flags7, align 1, !dbg !157, !tbaa !144
inserting pavise_store in front of items.c:342, fileid = 0

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:343
  %8 = load volatile i32, i32* @current_time, align 4, !dbg !158, !tbaa !159
  %9 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !160, !tbaa !136
^Encountering ld inst of a ptr
  %time = getelementptr inbounds %struct._stritem, %struct._stritem* %9, i32 0, i32 3, !dbg !161
  store i32 %8, i32* %time, align 8, !dbg !162, !tbaa !163
inserting pavise_store in front of items.c:343, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:345
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:347

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:349
  %13 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !167, !tbaa !136
^Encountering ld inst of a ptr
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %13, i32 0, i32 10, !dbg !167
  %14 = load i8, i8* %nkey, align 1, !dbg !167, !tbaa !169
  %conv10 = zext i8 %14 to i64, !dbg !167
  %add = add i64 120, %conv10, !dbg !167
  %add11 = add i64 %add, 1, !dbg !167
  %15 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !167, !tbaa !136
^Encountering ld inst of a ptr
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %15, i32 0, i32 7, !dbg !167
  %16 = load i8, i8* %nsuffix, align 2, !dbg !167, !tbaa !170
  %conv12 = zext i8 %16 to i64, !dbg !167
  %add13 = add i64 %add11, %conv12, !dbg !167
  %17 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !167, !tbaa !136
^Encountering ld inst of a ptr
  %nbytes14 = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 5, !dbg !167
  %18 = load i32, i32* %nbytes14, align 8, !dbg !167, !tbaa !153
  %conv15 = sext i32 %19 to i64, !dbg !167
  %add16 = add i64 %add13, %conv15, !dbg !167
  %20 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2), align 8, !dbg !171, !tbaa !172
  %add17 = add i64 %20, %add16, !dbg !171
  store i64 %add17, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2), align 8, !dbg !171, !tbaa !172
inserting pavise_store in front of items.c:349, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:353

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:356
  %call20 = call i64 @get_cas_id(), !dbg !179
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:356
  %24 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !180, !tbaa !136
^Encountering ld inst of a ptr
  %cas_id = getelementptr inbounds %struct._stritem, %struct._stritem* %24, i32 0, i32 11, !dbg !181
  store i64 %call20, i64* %cas_id, align 8, !dbg !182, !tbaa !183
inserting pavise_store in front of items.c:356, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:358
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:380

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:381
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !141, !tbaa !136
^Encountering ld inst of a ptr
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 8, !dbg !141
  %1 = load i8, i8* %it_flags, align 1, !dbg !141, !tbaa !144
  %conv = zext i8 %1 to i32, !dbg !141
  %and = and i32 %conv, 4, !dbg !141
  %cmp = icmp eq i32 %and, 0, !dbg !141
  br i1 %cmp, label %if.then, label %if.else, !dbg !149
  br label %if.end, !dbg !149
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 381, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__PRETTY_FUNCTION__.do_item_remove, i64 0, i64 0)) #10, !dbg !141
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:381
  unreachable, !dbg !141

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:382
  %2 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !150, !tbaa !136
^Encountering ld inst of a ptr
  %refcount = getelementptr inbounds %struct._stritem, %struct._stritem* %2, i32 0, i32 6, !dbg !152
  %3 = load i16, i16* %refcount, align 4, !dbg !152, !tbaa !153
  %conv2 = zext i16 %4 to i32, !dbg !150
  %cmp3 = icmp ne i32 %conv2, 0, !dbg !154
  br i1 %cmp3, label %if.then5, label %if.end7, !dbg !155

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:383
  %5 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !156, !tbaa !136
^Encountering ld inst of a ptr
  %refcount6 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 6, !dbg !158
  %6 = load i16, i16* %refcount6, align 4, !dbg !159, !tbaa !153
  %dec = add i16 %7, -1, !dbg !159
  store i16 %dec, i16* %refcount6, align 4, !dbg !159, !tbaa !153
inserting pavise_store in front of items.c:383, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:386
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:388
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:393

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:394
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !141, !tbaa !136
^Encountering ld inst of a ptr
  %time = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 3, !dbg !143
  %1 = load i32, i32* %time, align 8, !dbg !143, !tbaa !144
  %3 = load volatile i32, i32* @current_time, align 4, !dbg !149, !tbaa !150
  %sub = sub i32 %3, 60, !dbg !151
  %cmp = icmp ult i32 %2, %sub, !dbg !152
  br i1 %cmp, label %if.then, label %if.end12, !dbg !153
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:395
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:398
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:400
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:406
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:406

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:407
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !143, !tbaa !137
^Encountering ld inst of a ptr
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 8, !dbg !143
  %1 = load i8, i8* %it_flags, align 1, !dbg !143, !tbaa !146
  %conv = zext i8 %1 to i32, !dbg !143
  %and = and i32 %conv, 4, !dbg !143
  %cmp = icmp eq i32 %and, 0, !dbg !143
  br i1 %cmp, label %if.then, label %if.else, !dbg !151
  br label %if.end, !dbg !151
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 407, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.do_item_replace, i64 0, i64 0)) #10, !dbg !143
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:407
  unreachable, !dbg !143
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:409
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:410
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:415
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:415
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:415
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:416
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:416
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:417
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:417
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:418
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:418
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:419
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:419
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:420
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:420
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:421
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:421
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:422
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:422
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:427
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:432
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:435
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:441
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:446
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:446
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:446
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:446
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:446
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:446
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:446
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:449
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:450
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:450
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:451
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:451
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:451
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:452
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:452
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:453
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:453
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:454
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:454
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:455
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:455
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:463
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:475
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:480
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:480
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:480
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:480
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:480
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:480
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:485
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:486
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:486
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:487
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:487
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:487
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:488
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:488
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:488
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:489
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:489
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:492
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:493
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:498
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:500
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:500
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:502
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:502
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:503
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:503
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:507
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:507
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:508
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:514
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:517
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:518
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:520
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:520
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:520
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:520
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:525
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:526
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:532
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:532
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:532
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:533
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:533
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:533

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:535
  %5 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !162, !tbaa !140
^Encountering ld inst of a ptr
  %cmp = icmp ne %struct._stritem* %5, null, !dbg !164
  br i1 %cmp, label %land.lhs.true, label %if.end9, !dbg !165
  %6 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !166, !tbaa !140
^Encountering ld inst of a ptr
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %6, i32 0, i32 8, !dbg !167
  %7 = load i8, i8* %it_flags, align 1, !dbg !167, !tbaa !168
  %conv = zext i8 %7 to i32, !dbg !166
  %and = and i32 %conv, 2, !dbg !172
  %tobool1 = icmp ne i32 %and, 0, !dbg !172
  br i1 %tobool1, label %if.then2, label %if.end9, !dbg !173
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:539
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:546

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:549
  %19 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !216, !tbaa !140
^Encountering ld inst of a ptr
  %cmp23 = icmp ne %struct._stritem* %19, null, !dbg !218
  br i1 %cmp23, label %land.lhs.true25, label %if.end33, !dbg !219
  %20 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !220, !tbaa !140
^Encountering ld inst of a ptr
  %exptime = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 4, !dbg !221
  %21 = load i32, i32* %exptime, align 4, !dbg !221, !tbaa !222
  %cmp26 = icmp ne i32 %22, 0, !dbg !223
  br i1 %cmp26, label %land.lhs.true28, label %if.end33, !dbg !224
  %23 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !225, !tbaa !140
^Encountering ld inst of a ptr
  %exptime29 = getelementptr inbounds %struct._stritem, %struct._stritem* %23, i32 0, i32 4, !dbg !226
  %24 = load i32, i32* %exptime29, align 4, !dbg !226, !tbaa !222
  %26 = load volatile i32, i32* @current_time, align 4, !dbg !227, !tbaa !202
  %cmp30 = icmp ule i32 %25, %26, !dbg !228
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !229
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:550

/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:555
  %29 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !239, !tbaa !140
^Encountering ld inst of a ptr
  %refcount = getelementptr inbounds %struct._stritem, %struct._stritem* %29, i32 0, i32 6, !dbg !241
  %30 = load i16, i16* %refcount, align 4, !dbg !242, !tbaa !243
  %inc = add i16 %31, 1, !dbg !242
  store i16 %inc, i16* %refcount, align 4, !dbg !242, !tbaa !243
inserting pavise_store in front of items.c:555, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:559
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:561
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:561
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:562
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:567
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:567
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:568
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:568
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:568
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:574
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:579
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:579
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:580
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:580
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:580
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:580
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:593
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:601
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:601
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c:601

=========== Module New Dump ============

; ModuleID = '/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c'
source_filename = "/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._stritem = type { %struct._stritem*, %struct._stritem*, %struct._stritem*, i32, i32, i32, i16, i8, i8, i8, i8, i64, [8 x i8*] }
%struct.pmemobjpool = type opaque
%struct.settings = type { i64, i32, i32, i32, %struct.in_addr, i32, i32, i8, i32, i8*, i32, double, i32, i32, i8, i32 }
%struct.in_addr = type { i32 }
%struct.pmemoid = type { i64, i64 }
%struct.stats = type { i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct._pobj_pcache = type { %struct.pmemobjpool*, i64, i32 }

@heads = internal global [255 x %struct._stritem*] zeroinitializer, align 16, !dbg !0
@tails = internal global [255 x %struct._stritem*] zeroinitializer, align 16, !dbg !107
@sizes = internal global [255 x i32] zeroinitializer, align 16, !dbg !112
@curr_pool = internal global %struct.pmemobjpool* null, align 8, !dbg !115
@settings = external dso_local global %struct.settings, align 8
@slab_sizes = dso_local global [201 x i32] zeroinitializer, align 16, !dbg !122
@get_cas_id.cas_id = internal global i64 0, align 8, !dbg !101
@.str = private unnamed_addr constant [9 x i8] c" %d %d\0D\0A\00", align 1
@item_ptr = dso_local global %struct.pmemoid zeroinitializer, align 8, !dbg !119
@current_time = external dso_local global i32, align 4
@stats = external dso_local global %struct.stats, align 8
@.str.1 = private unnamed_addr constant [21 x i8] c"it->slabs_clsid == 0\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c\00", align 1
@__PRETTY_FUNCTION__.do_item_alloc = private unnamed_addr constant [82 x i8] c"item *do_item_alloc(char *, const size_t, const int, const rel_time_t, const int)\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"it != heads[it->slabs_clsid]\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"(it->it_flags & ITEM_LINKED) == 0\00", align 1
@__PRETTY_FUNCTION__.item_free = private unnamed_addr constant [23 x i8] c"void item_free(item *)\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"it != tails[it->slabs_clsid]\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"it->refcount == 0\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"(it->it_flags & ITEM_SLABBED) == 0\00", align 1
@__PRETTY_FUNCTION__.item_link_q = private unnamed_addr constant [25 x i8] c"void item_link_q(item *)\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"it != *head\00", align 1
@.str.9 = private unnamed_addr constant [47 x i8] c"(*head && *tail) || (*head == 0 && *tail == 0)\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"it->prev == 0\00", align 1
@__PRETTY_FUNCTION__.item_unlink_q = private unnamed_addr constant [27 x i8] c"void item_unlink_q(item *)\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"it->next == 0\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"it->next != it\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"it->prev != it\00", align 1
@.str.14 = private unnamed_addr constant [49 x i8] c"(it->it_flags & (ITEM_LINKED|ITEM_SLABBED)) == 0\00", align 1
@__PRETTY_FUNCTION__.do_item_link = private unnamed_addr constant [25 x i8] c"int do_item_link(item *)\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"it->nbytes < (1024 * 1024)\00", align 1
@__PRETTY_FUNCTION__.do_item_remove = private unnamed_addr constant [28 x i8] c"void do_item_remove(item *)\00", align 1
@.str.16 = private unnamed_addr constant [56 x i8] c"(it->it_flags & ITEM_DELETED) == 0 || it->refcount != 0\00", align 1
@__PRETTY_FUNCTION__.do_item_update = private unnamed_addr constant [28 x i8] c"void do_item_update(item *)\00", align 1
@__PRETTY_FUNCTION__.do_item_replace = private unnamed_addr constant [36 x i8] c"int do_item_replace(item *, item *)\00", align 1
@.str.17 = private unnamed_addr constant [24 x i8] c"ITEM %s [%d b; %lu s]\0D\0A\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"END\0D\0A\00", align 1
@.str.19 = private unnamed_addr constant [48 x i8] c"STAT items:%d:number %u\0D\0ASTAT items:%d:age %u\0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"%d %u\0D\0A\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"it->it_flags & ITEM_DELETED\00", align 1
@__PRETTY_FUNCTION__.item_delete_lock_over = private unnamed_addr constant [36 x i8] c"_Bool item_delete_lock_over(item *)\00", align 1
@_pobj_cached_pool = external thread_local global %struct._pobj_pcache, align 8
@_pobj_cache_invalidate = external dso_local global i32, align 4

; Function Attrs: nounwind uwtable
define dso_local void @clwb_range(i8* %ptr, i64 %len) #0 !dbg !131 {
entry:
  %ptr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %start = alloca i64, align 8
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !135, metadata !DIExpression()), !dbg !142
  store i64 %len, i64* %len.addr, align 8, !tbaa !143
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !136, metadata !DIExpression()), !dbg !145
  %0 = bitcast i64* %start to i8*, !dbg !146
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9, !dbg !146
  call void @llvm.dbg.declare(metadata i64* %start, metadata !137, metadata !DIExpression()), !dbg !147
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !148, !tbaa !138
  %2 = ptrtoint i8* %1 to i64, !dbg !149
  %and = and i64 %2, -64, !dbg !150
  store i64 %and, i64* %start, align 8, !dbg !147, !tbaa !143
  br label %for.cond, !dbg !151

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i64, i64* %start, align 8, !dbg !152, !tbaa !143
  %4 = load i8*, i8** %ptr.addr, align 8, !dbg !155, !tbaa !138
  %5 = ptrtoint i8* %4 to i64, !dbg !156
  %6 = load i64, i64* %len.addr, align 8, !dbg !157, !tbaa !143
  %add = add i64 %5, %6, !dbg !158
  %cmp = icmp ult i64 %3, %add, !dbg !159
  br i1 %cmp, label %for.body, label %for.end, !dbg !160

for.body:                                         ; preds = %for.cond
  %7 = load i64, i64* %start, align 8, !dbg !161, !tbaa !143
  %8 = inttoptr i64 %7 to i8*, !dbg !163
  call void @_mm_clflushopt(i8* %8), !dbg !164
  br label %for.inc, !dbg !165

for.inc:                                          ; preds = %for.body
  %9 = load i64, i64* %start, align 8, !dbg !166, !tbaa !143
  %add1 = add i64 %9, 64, !dbg !166
  store i64 %add1, i64* %start, align 8, !dbg !166, !tbaa !143
  br label %for.cond, !dbg !167, !llvm.loop !168

for.end:                                          ; preds = %for.cond
  %10 = bitcast i64* %start to i8*, !dbg !170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9, !dbg !170
  ret void, !dbg !170
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata %0, metadata %1, metadata %2) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @_mm_clflushopt(i8* %__m) #3 {
entry:
  %__m.addr = alloca i8*, align 8
  store i8* %__m, i8** %__m.addr, align 8, !tbaa !138
  %0 = load i8*, i8** %__m.addr, align 8, !tbaa !138
  call void @llvm.x86.clflushopt(i8* %0)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #2

; Function Attrs: nounwind uwtable
define dso_local void @sfence() #0 !dbg !171 {
entry:
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !172, !srcloc !173
  ret void, !dbg !174
}

; Function Attrs: nounwind uwtable
define dso_local void @item_init(%struct.pmemobjpool* %pop) #0 !dbg !175 {
entry:
  %pop.addr = alloca %struct.pmemobjpool*, align 8
  %i = alloca i32, align 4
  store %struct.pmemobjpool* %pop, %struct.pmemobjpool** %pop.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata %struct.pmemobjpool** %pop.addr, metadata !179, metadata !DIExpression()), !dbg !181
  %0 = bitcast i32* %i to i8*, !dbg !182
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9, !dbg !182
  call void @llvm.dbg.declare(metadata i32* %i, metadata !180, metadata !DIExpression()), !dbg !183
  store i32 0, i32* %i, align 4, !dbg !184, !tbaa !186
  br label %for.cond, !dbg !188

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !189, !tbaa !186
  %cmp = icmp slt i32 %1, 255, !dbg !191
  br i1 %cmp, label %for.body, label %for.end, !dbg !192

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !193, !tbaa !186
  %idxprom = sext i32 %2 to i64, !dbg !195
  %arrayidx = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @heads, i64 0, i64 %idxprom, !dbg !195
  store %struct._stritem* null, %struct._stritem** %arrayidx, align 8, !dbg !196, !tbaa !138
  %3 = load i32, i32* %i, align 4, !dbg !197, !tbaa !186
  %idxprom1 = sext i32 %3 to i64, !dbg !198
  %arrayidx2 = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @tails, i64 0, i64 %idxprom1, !dbg !198
  store %struct._stritem* null, %struct._stritem** %arrayidx2, align 8, !dbg !199, !tbaa !138
  %4 = load i32, i32* %i, align 4, !dbg !200, !tbaa !186
  %idxprom3 = sext i32 %4 to i64, !dbg !201
  %arrayidx4 = getelementptr inbounds [255 x i32], [255 x i32]* @sizes, i64 0, i64 %idxprom3, !dbg !201
  store i32 0, i32* %arrayidx4, align 4, !dbg !202, !tbaa !186
  br label %for.inc, !dbg !203

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !204, !tbaa !186
  %inc = add nsw i32 %5, 1, !dbg !204
  store i32 %inc, i32* %i, align 4, !dbg !204, !tbaa !186
  br label %for.cond, !dbg !205, !llvm.loop !206

for.end:                                          ; preds = %for.cond
  %6 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop.addr, align 8, !dbg !208, !tbaa !138
  store %struct.pmemobjpool* %6, %struct.pmemobjpool** @curr_pool, align 8, !dbg !209, !tbaa !138
  %7 = bitcast i32* %i to i8*, !dbg !210
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %7) #9, !dbg !210
  ret void, !dbg !210
}

; Function Attrs: nounwind uwtable
define dso_local void @slabs_init(i64 %limit, double %factor) #0 !dbg !211 {
entry:
  %limit.addr = alloca i64, align 8
  %factor.addr = alloca double, align 8
  %i = alloca i32, align 4
  %size = alloca i32, align 4
  store i64 %limit, i64* %limit.addr, align 8, !tbaa !143
  call void @llvm.dbg.declare(metadata i64* %limit.addr, metadata !218, metadata !DIExpression()), !dbg !222
  store double %factor, double* %factor.addr, align 8, !tbaa !223
  call void @llvm.dbg.declare(metadata double* %factor.addr, metadata !219, metadata !DIExpression()), !dbg !225
  %0 = bitcast i32* %i to i8*, !dbg !226
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9, !dbg !226
  call void @llvm.dbg.declare(metadata i32* %i, metadata !220, metadata !DIExpression()), !dbg !227
  store i32 0, i32* %i, align 4, !dbg !227, !tbaa !186
  %1 = bitcast i32* %size to i8*, !dbg !228
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9, !dbg !228
  call void @llvm.dbg.declare(metadata i32* %size, metadata !221, metadata !DIExpression()), !dbg !229
  %2 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 12), align 8, !dbg !230, !tbaa !231
  %conv = sext i32 %2 to i64, !dbg !235
  %add = add i64 120, %conv, !dbg !236
  %conv1 = trunc i64 %add to i32, !dbg !237
  store i32 %conv1, i32* %size, align 4, !dbg !229, !tbaa !186
  %3 = load double, double* %factor.addr, align 8, !dbg !238, !tbaa !223
  %cmp = fcmp oeq double %3, 2.000000e+00, !dbg !240
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !241

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* %size, align 4, !dbg !242, !tbaa !186
  %cmp3 = icmp ult i32 %4, 128, !dbg !243
  br i1 %cmp3, label %if.then, label %if.end, !dbg !244

if.then:                                          ; preds = %land.lhs.true
  store i32 128, i32* %size, align 4, !dbg !245, !tbaa !186
  br label %if.end, !dbg !246

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  br label %while.cond, !dbg !247

while.cond:                                       ; preds = %if.end16, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !248, !tbaa !186
  %inc = add nsw i32 %5, 1, !dbg !248
  store i32 %inc, i32* %i, align 4, !dbg !248, !tbaa !186
  %cmp5 = icmp slt i32 %inc, 200, !dbg !249
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !250

land.rhs:                                         ; preds = %while.cond
  %6 = load i32, i32* %size, align 4, !dbg !251, !tbaa !186
  %cmp7 = icmp ule i32 %6, 524288, !dbg !252
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %cmp7, %land.rhs ], !dbg !253
  br i1 %7, label %while.body, label %while.end, !dbg !247

while.body:                                       ; preds = %land.end
  %8 = load i32, i32* %size, align 4, !dbg !254, !tbaa !186
  %conv9 = zext i32 %8 to i64, !dbg !254
  %rem = urem i64 %conv9, 8, !dbg !257
  %tobool = icmp ne i64 %rem, 0, !dbg !257
  br i1 %tobool, label %if.then10, label %if.end16, !dbg !258

if.then10:                                        ; preds = %while.body
  %9 = load i32, i32* %size, align 4, !dbg !259, !tbaa !186
  %conv11 = zext i32 %9 to i64, !dbg !259
  %rem12 = urem i64 %conv11, 8, !dbg !260
  %sub = sub i64 8, %rem12, !dbg !261
  %10 = load i32, i32* %size, align 4, !dbg !262, !tbaa !186
  %conv13 = zext i32 %10 to i64, !dbg !262
  %add14 = add i64 %conv13, %sub, !dbg !262
  %conv15 = trunc i64 %add14 to i32, !dbg !262
  store i32 %conv15, i32* %size, align 4, !dbg !262, !tbaa !186
  br label %if.end16, !dbg !263

if.end16:                                         ; preds = %if.then10, %while.body
  %11 = load i32, i32* %size, align 4, !dbg !264, !tbaa !186
  %12 = load i32, i32* %i, align 4, !dbg !265, !tbaa !186
  %idxprom = sext i32 %12 to i64, !dbg !266
  %arrayidx = getelementptr inbounds [201 x i32], [201 x i32]* @slab_sizes, i64 0, i64 %idxprom, !dbg !266
  store i32 %11, i32* %arrayidx, align 4, !dbg !267, !tbaa !186
  %13 = load double, double* %factor.addr, align 8, !dbg !268, !tbaa !223
  %14 = load i32, i32* %size, align 4, !dbg !269, !tbaa !186
  %conv17 = uitofp i32 %14 to double, !dbg !269
  %mul = fmul double %conv17, %13, !dbg !269
  %conv18 = fptoui double %mul to i32, !dbg !269
  store i32 %conv18, i32* %size, align 4, !dbg !269, !tbaa !186
  br label %while.cond, !dbg !247, !llvm.loop !270

while.end:                                        ; preds = %land.end
  store i32 1048576, i32* getelementptr inbounds ([201 x i32], [201 x i32]* @slab_sizes, i64 0, i64 200), align 16, !dbg !272, !tbaa !186
  %15 = bitcast i32* %size to i8*, !dbg !273
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %15) #9, !dbg !273
  %16 = bitcast i32* %i to i8*, !dbg !273
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %16) #9, !dbg !273
  ret void, !dbg !273
}

; Function Attrs: nounwind uwtable
define dso_local i32 @slabs_clsid(i64 %size) #0 !dbg !274 {
entry:
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  %res = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8, !tbaa !143
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !278, metadata !DIExpression()), !dbg !280
  %0 = load i64, i64* %size.addr, align 8, !dbg !281, !tbaa !143
  %cmp = icmp eq i64 %0, 0, !dbg !283
  br i1 %cmp, label %if.then, label %if.end, !dbg !284

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !285
  br label %return, !dbg !285

if.end:                                           ; preds = %entry
  %1 = bitcast i32* %res to i8*, !dbg !286
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9, !dbg !286
  call void @llvm.dbg.declare(metadata i32* %res, metadata !279, metadata !DIExpression()), !dbg !287
  store i32 1, i32* %res, align 4, !dbg !287, !tbaa !186
  br label %while.cond, !dbg !288

while.cond:                                       ; preds = %if.end6, %if.end
  %2 = load i64, i64* %size.addr, align 8, !dbg !289, !tbaa !143
  %3 = load i32, i32* %res, align 4, !dbg !290, !tbaa !186
  %idxprom = sext i32 %3 to i64, !dbg !291
  %arrayidx = getelementptr inbounds [201 x i32], [201 x i32]* @slab_sizes, i64 0, i64 %idxprom, !dbg !291
  %4 = load i32, i32* %arrayidx, align 4, !dbg !291, !tbaa !186
  %conv = sext i32 %4 to i64, !dbg !291
  %cmp1 = icmp ugt i64 %2, %conv, !dbg !292
  br i1 %cmp1, label %while.body, label %while.end, !dbg !288

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %res, align 4, !dbg !293, !tbaa !186
  %inc = add nsw i32 %5, 1, !dbg !293
  store i32 %inc, i32* %res, align 4, !dbg !293, !tbaa !186
  %cmp3 = icmp eq i32 %5, 200, !dbg !295
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !296

if.then5:                                         ; preds = %while.body
  store i32 0, i32* %retval, align 4, !dbg !297
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !297

if.end6:                                          ; preds = %while.body
  br label %while.cond, !dbg !288, !llvm.loop !298

while.end:                                        ; preds = %while.cond
  %6 = load i32, i32* %res, align 4, !dbg !300, !tbaa !186
  store i32 %6, i32* %retval, align 4, !dbg !301
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !301

cleanup:                                          ; preds = %while.end, %if.then5
  %7 = bitcast i32* %res to i8*, !dbg !302
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %7) #9, !dbg !302
  br label %return

return:                                           ; preds = %cleanup, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !302
  ret i32 %8, !dbg !302
}

; Function Attrs: nounwind uwtable
define dso_local i64 @get_cas_id() #0 !dbg !103 {
entry:
  %0 = load i64, i64* @get_cas_id.cas_id, align 8, !dbg !303, !tbaa !143
  %inc = add i64 %0, 1, !dbg !303
  store i64 %inc, i64* @get_cas_id.cas_id, align 8, !dbg !303, !tbaa !143
  ret i64 %inc, !dbg !304
}

; Function Attrs: nounwind uwtable
define dso_local i64 @item_make_header(i8 zeroext %nkey, i32 %flags, i32 %nbytes, i8* %suffix, i8* %nsuffix) #0 !dbg !305 {
entry:
  %nkey.addr = alloca i8, align 1
  %flags.addr = alloca i32, align 4
  %nbytes.addr = alloca i32, align 4
  %suffix.addr = alloca i8*, align 8
  %nsuffix.addr = alloca i8*, align 8
  store i8 %nkey, i8* %nkey.addr, align 1, !tbaa !317
  call void @llvm.dbg.declare(metadata i8* %nkey.addr, metadata !312, metadata !DIExpression()), !dbg !318
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !186
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !313, metadata !DIExpression()), !dbg !319
  store i32 %nbytes, i32* %nbytes.addr, align 4, !tbaa !186
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !314, metadata !DIExpression()), !dbg !320
  store i8* %suffix, i8** %suffix.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata i8** %suffix.addr, metadata !315, metadata !DIExpression()), !dbg !321
  store i8* %nsuffix, i8** %nsuffix.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata i8** %nsuffix.addr, metadata !316, metadata !DIExpression()), !dbg !322
  %0 = load i8*, i8** %suffix.addr, align 8, !dbg !323, !tbaa !138
  %1 = load i32, i32* %flags.addr, align 4, !dbg !324, !tbaa !186
  %2 = load i32, i32* %nbytes.addr, align 4, !dbg !325, !tbaa !186
  %sub = sub nsw i32 %2, 2, !dbg !326
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 %1, i32 %sub) #9, !dbg !327
  %conv = trunc i32 %call to i8, !dbg !328
  %3 = load i8*, i8** %nsuffix.addr, align 8, !dbg !329, !tbaa !138
  store i8 %conv, i8* %3, align 1, !dbg !330, !tbaa !317
  %4 = load i8, i8* %nkey.addr, align 1, !dbg !331, !tbaa !317
  %conv1 = zext i8 %4 to i64, !dbg !331
  %add = add i64 120, %conv1, !dbg !332
  %5 = load i8*, i8** %nsuffix.addr, align 8, !dbg !333, !tbaa !138
  %6 = load i8, i8* %5, align 1, !dbg !334, !tbaa !317
  %conv2 = zext i8 %6 to i64, !dbg !334
  %add3 = add i64 %add, %conv2, !dbg !335
  %7 = load i32, i32* %nbytes.addr, align 4, !dbg !336, !tbaa !186
  %conv4 = sext i32 %7 to i64, !dbg !336
  %add5 = add i64 %add3, %conv4, !dbg !337
  ret i64 %add5, !dbg !338
}

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8* %0, i64 %1, i8* %2, ...) #4

; Function Attrs: nounwind uwtable
define dso_local %struct._stritem* @do_item_alloc(i8* %key, i64 %nkey, i32 %flags, i32 %exptime, i32 %nbytes) #0 !dbg !339 {
entry:
  %retval = alloca %struct._stritem*, align 8
  %key.addr = alloca i8*, align 8
  %nkey.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %exptime.addr = alloca i32, align 4
  %nbytes.addr = alloca i32, align 4
  %nsuffix = alloca i8, align 1
  %it = alloca %struct._stritem*, align 8
  %suffix = alloca [40 x i8], align 16
  %ntotal = alloca i64, align 8
  %id = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %tries = alloca i32, align 4
  %search = alloca %struct._stritem*, align 8
  store i8* %key, i8** %key.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !344, metadata !DIExpression()), !dbg !361
  store i64 %nkey, i64* %nkey.addr, align 8, !tbaa !143
  call void @llvm.dbg.declare(metadata i64* %nkey.addr, metadata !345, metadata !DIExpression()), !dbg !362
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !186
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !346, metadata !DIExpression()), !dbg !363
  store i32 %exptime, i32* %exptime.addr, align 4, !tbaa !186
  call void @llvm.dbg.declare(metadata i32* %exptime.addr, metadata !347, metadata !DIExpression()), !dbg !364
  store i32 %nbytes, i32* %nbytes.addr, align 4, !tbaa !186
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !348, metadata !DIExpression()), !dbg !365
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %nsuffix) #9, !dbg !366
  call void @llvm.dbg.declare(metadata i8* %nsuffix, metadata !349, metadata !DIExpression()), !dbg !367
  %0 = bitcast %struct._stritem** %it to i8*, !dbg !368
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9, !dbg !368
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !350, metadata !DIExpression()), !dbg !369
  %1 = bitcast [40 x i8]* %suffix to i8*, !dbg !370
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %1) #9, !dbg !370
  call void @llvm.dbg.declare(metadata [40 x i8]* %suffix, metadata !351, metadata !DIExpression()), !dbg !371
  %2 = bitcast i64* %ntotal to i8*, !dbg !372
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9, !dbg !372
  call void @llvm.dbg.declare(metadata i64* %ntotal, metadata !355, metadata !DIExpression()), !dbg !373
  %3 = load i64, i64* %nkey.addr, align 8, !dbg !374, !tbaa !143
  %add = add i64 %3, 1, !dbg !375
  %conv = trunc i64 %add to i8, !dbg !374
  %4 = load i32, i32* %flags.addr, align 4, !dbg !376, !tbaa !186
  %5 = load i32, i32* %nbytes.addr, align 4, !dbg !377, !tbaa !186
  %arraydecay = getelementptr inbounds [40 x i8], [40 x i8]* %suffix, i64 0, i64 0, !dbg !378
  %call = call i64 @item_make_header(i8 zeroext %conv, i32 %4, i32 %5, i8* %arraydecay, i8* %nsuffix), !dbg !379
  store i64 %call, i64* %ntotal, align 8, !dbg !373, !tbaa !143
  %6 = bitcast i32* %id to i8*, !dbg !380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #9, !dbg !380
  call void @llvm.dbg.declare(metadata i32* %id, metadata !356, metadata !DIExpression()), !dbg !381
  %7 = load i64, i64* %ntotal, align 8, !dbg !382, !tbaa !143
  %call1 = call i32 @slabs_clsid(i64 %7), !dbg !383
  store i32 %call1, i32* %id, align 4, !dbg !381, !tbaa !186
  %8 = load i32, i32* %id, align 4, !dbg !384, !tbaa !186
  %cmp = icmp eq i32 %8, 0, !dbg !386
  br i1 %cmp, label %if.then, label %if.end, !dbg !387

if.then:                                          ; preds = %entry
  store %struct._stritem* null, %struct._stritem** %retval, align 8, !dbg !388
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup78, !dbg !388

if.end:                                           ; preds = %entry
  %9 = load %struct.pmemobjpool*, %struct.pmemobjpool** @curr_pool, align 8, !dbg !389, !tbaa !138
  %10 = load i64, i64* %ntotal, align 8, !dbg !390, !tbaa !143
  %call3 = call i32 @pmemobj_zalloc(%struct.pmemobjpool* %9, %struct.pmemoid* @item_ptr, i64 %10, i64 1), !dbg !391
  %11 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.pmemoid* @item_ptr to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !392
  %12 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.pmemoid* @item_ptr to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !392
  %call4 = call i8* @pmemobj_direct_inline(i64 %11, i64 %12), !dbg !392
  %13 = bitcast i8* %call4 to %struct._stritem*, !dbg !393
  store %struct._stritem* %13, %struct._stritem** %it, align 8, !dbg !394, !tbaa !138
  %14 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !395, !tbaa !138
  %cmp5 = icmp eq %struct._stritem* %14, null, !dbg !396
  br i1 %cmp5, label %if.then7, label %if.end46, !dbg !397

if.then7:                                         ; preds = %if.end
  %15 = bitcast i32* %tries to i8*, !dbg !398
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #9, !dbg !398
  call void @llvm.dbg.declare(metadata i32* %tries, metadata !357, metadata !DIExpression()), !dbg !399
  store i32 50, i32* %tries, align 4, !dbg !399, !tbaa !186
  %16 = bitcast %struct._stritem** %search to i8*, !dbg !400
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #9, !dbg !400
  call void @llvm.dbg.declare(metadata %struct._stritem** %search, metadata !360, metadata !DIExpression()), !dbg !401
  %17 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 8), align 4, !dbg !402, !tbaa !404
  %cmp8 = icmp eq i32 %17, 0, !dbg !405
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !406

if.then10:                                        ; preds = %if.then7
  store %struct._stritem* null, %struct._stritem** %retval, align 8, !dbg !407
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !407

if.end11:                                         ; preds = %if.then7
  %18 = load i32, i32* %id, align 4, !dbg !408, !tbaa !186
  %cmp12 = icmp ugt i32 %18, 255, !dbg !410
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !411

if.then14:                                        ; preds = %if.end11
  store %struct._stritem* null, %struct._stritem** %retval, align 8, !dbg !412
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !412

if.end15:                                         ; preds = %if.end11
  %19 = load i32, i32* %id, align 4, !dbg !413, !tbaa !186
  %idxprom = zext i32 %19 to i64, !dbg !415
  %arrayidx = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @tails, i64 0, i64 %idxprom, !dbg !415
  %20 = load %struct._stritem*, %struct._stritem** %arrayidx, align 8, !dbg !415, !tbaa !138
  %cmp16 = icmp eq %struct._stritem* %20, null, !dbg !416
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !417

if.then18:                                        ; preds = %if.end15
  store %struct._stritem* null, %struct._stritem** %retval, align 8, !dbg !418
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !418

if.end19:                                         ; preds = %if.end15
  %21 = load i32, i32* %id, align 4, !dbg !419, !tbaa !186
  %idxprom20 = zext i32 %21 to i64, !dbg !421
  %arrayidx21 = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @tails, i64 0, i64 %idxprom20, !dbg !421
  %22 = load %struct._stritem*, %struct._stritem** %arrayidx21, align 8, !dbg !421, !tbaa !138
  store %struct._stritem* %22, %struct._stritem** %search, align 8, !dbg !422, !tbaa !138
  br label %for.cond, !dbg !423

for.cond:                                         ; preds = %for.inc, %if.end19
  %23 = load i32, i32* %tries, align 4, !dbg !424, !tbaa !186
  %cmp22 = icmp sgt i32 %23, 0, !dbg !426
  br i1 %cmp22, label %land.rhs, label %land.end, !dbg !427

land.rhs:                                         ; preds = %for.cond
  %24 = load %struct._stritem*, %struct._stritem** %search, align 8, !dbg !428, !tbaa !138
  %cmp24 = icmp ne %struct._stritem* %24, null, !dbg !429
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %25 = phi i1 [ false, %for.cond ], [ %cmp24, %land.rhs ], !dbg !430
  br i1 %25, label %for.body, label %for.end, !dbg !431

for.body:                                         ; preds = %land.end
  %26 = load %struct._stritem*, %struct._stritem** %search, align 8, !dbg !432, !tbaa !138
  %refcount = getelementptr inbounds %struct._stritem, %struct._stritem* %26, i32 0, i32 6, !dbg !435
  %27 = load i16, i16* %refcount, align 4, !dbg !435, !tbaa !436
  %conv26 = zext i16 %27 to i32, !dbg !432
  %cmp27 = icmp eq i32 %conv26, 0, !dbg !439
  br i1 %cmp27, label %if.then29, label %if.end38, !dbg !440

if.then29:                                        ; preds = %for.body
  %28 = load %struct._stritem*, %struct._stritem** %search, align 8, !dbg !441, !tbaa !138
  %exptime30 = getelementptr inbounds %struct._stritem, %struct._stritem* %28, i32 0, i32 4, !dbg !444
  %29 = load i32, i32* %exptime30, align 4, !dbg !444, !tbaa !445
  %cmp31 = icmp eq i32 %29, 0, !dbg !446
  br i1 %cmp31, label %if.then36, label %lor.lhs.false, !dbg !447

lor.lhs.false:                                    ; preds = %if.then29
  %30 = load %struct._stritem*, %struct._stritem** %search, align 8, !dbg !448, !tbaa !138
  %exptime33 = getelementptr inbounds %struct._stritem, %struct._stritem* %30, i32 0, i32 4, !dbg !449
  %31 = load i32, i32* %exptime33, align 4, !dbg !449, !tbaa !445
  %32 = load volatile i32, i32* @current_time, align 4, !dbg !450, !tbaa !186
  %cmp34 = icmp ugt i32 %31, %32, !dbg !451
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !452

if.then36:                                        ; preds = %lor.lhs.false, %if.then29
  call void @mt_stats_lock(), !dbg !453
  %33 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 10), align 8, !dbg !455, !tbaa !456
  %inc = add i64 %33, 1, !dbg !455
  store i64 %inc, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 10), align 8, !dbg !455, !tbaa !456
  call void @mt_stats_unlock(), !dbg !458
  br label %if.end37, !dbg !459

if.end37:                                         ; preds = %if.then36, %lor.lhs.false
  %34 = load %struct._stritem*, %struct._stritem** %search, align 8, !dbg !460, !tbaa !138
  call void @do_item_unlink(%struct._stritem* %34), !dbg !461
  br label %for.end, !dbg !462

if.end38:                                         ; preds = %for.body
  br label %for.inc, !dbg !463

for.inc:                                          ; preds = %if.end38
  %35 = load i32, i32* %tries, align 4, !dbg !464, !tbaa !186
  %dec = add nsw i32 %35, -1, !dbg !464
  store i32 %dec, i32* %tries, align 4, !dbg !464, !tbaa !186
  %36 = load %struct._stritem*, %struct._stritem** %search, align 8, !dbg !465, !tbaa !138
  %prev = getelementptr inbounds %struct._stritem, %struct._stritem* %36, i32 0, i32 1, !dbg !466
  %37 = load %struct._stritem*, %struct._stritem** %prev, align 8, !dbg !466, !tbaa !467
  store %struct._stritem* %37, %struct._stritem** %search, align 8, !dbg !468, !tbaa !138
  br label %for.cond, !dbg !469, !llvm.loop !470

for.end:                                          ; preds = %if.end37, %land.end
  %38 = load %struct.pmemobjpool*, %struct.pmemobjpool** @curr_pool, align 8, !dbg !472, !tbaa !138
  %39 = load i64, i64* %ntotal, align 8, !dbg !473, !tbaa !143
  %call39 = call i32 @pmemobj_zalloc(%struct.pmemobjpool* %38, %struct.pmemoid* @item_ptr, i64 %39, i64 1), !dbg !474
  %40 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.pmemoid* @item_ptr to { i64, i64 }*), i32 0, i32 0), align 8, !dbg !475
  %41 = load i64, i64* getelementptr inbounds ({ i64, i64 }, { i64, i64 }* bitcast (%struct.pmemoid* @item_ptr to { i64, i64 }*), i32 0, i32 1), align 8, !dbg !475
  %call40 = call i8* @pmemobj_direct_inline(i64 %40, i64 %41), !dbg !475
  %42 = bitcast i8* %call40 to %struct._stritem*, !dbg !476
  store %struct._stritem* %42, %struct._stritem** %it, align 8, !dbg !477, !tbaa !138
  %43 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !478, !tbaa !138
  %cmp41 = icmp eq %struct._stritem* %43, null, !dbg !480
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !481

if.then43:                                        ; preds = %for.end
  store %struct._stritem* null, %struct._stritem** %retval, align 8, !dbg !482
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !482

if.end44:                                         ; preds = %for.end
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !483
  br label %cleanup, !dbg !483

cleanup:                                          ; preds = %if.end44, %if.then43, %if.then18, %if.then14, %if.then10
  %44 = bitcast %struct._stritem** %search to i8*, !dbg !483
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #9, !dbg !483
  %45 = bitcast i32* %tries to i8*, !dbg !483
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %45) #9, !dbg !483
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup78 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end46, !dbg !484

if.end46:                                         ; preds = %cleanup.cont, %if.end
  %46 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !485, !tbaa !138
  %slabs_clsid = getelementptr inbounds %struct._stritem, %struct._stritem* %46, i32 0, i32 9, !dbg !485
  %47 = load i8, i8* %slabs_clsid, align 8, !dbg !485, !tbaa !488
  %conv47 = zext i8 %47 to i32, !dbg !485
  %cmp48 = icmp eq i32 %conv47, 0, !dbg !485
  br i1 %cmp48, label %if.then50, label %if.else, !dbg !489

if.then50:                                        ; preds = %if.end46
  br label %if.end51, !dbg !489

if.else:                                          ; preds = %if.end46
  call void @__assert_fail(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 242, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.do_item_alloc, i64 0, i64 0)) #10, !dbg !485
  unreachable, !dbg !485

if.end51:                                         ; preds = %if.then50
  %48 = bitcast i32* %id to i8*, !dbg !490
  %49 = load i32, i32* %id, align 4, !dbg !490, !tbaa !186
  %conv52 = trunc i32 %49 to i8, !dbg !490
  %50 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !491, !tbaa !138
  %slabs_clsid53 = getelementptr inbounds %struct._stritem, %struct._stritem* %50, i32 0, i32 9, !dbg !492
  %51 = call i32 @cpavise_store_data_fileline(i8* %slabs_clsid53, i64 1, i32 0, i32 244), !dbg !493
  store i8 %conv52, i8* %slabs_clsid53, align 8, !dbg !493, !tbaa !488
  %52 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !494, !tbaa !138
  %53 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !494, !tbaa !138
  %slabs_clsid54 = getelementptr inbounds %struct._stritem, %struct._stritem* %53, i32 0, i32 9, !dbg !494
  %54 = load i8, i8* %slabs_clsid54, align 8, !dbg !494, !tbaa !488
  %idxprom55 = zext i8 %54 to i64, !dbg !494
  %arrayidx56 = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @heads, i64 0, i64 %idxprom55, !dbg !494
  %55 = load %struct._stritem*, %struct._stritem** %arrayidx56, align 8, !dbg !494, !tbaa !138
  %cmp57 = icmp ne %struct._stritem* %52, %55, !dbg !494
  br i1 %cmp57, label %if.then59, label %if.else60, !dbg !497

if.then59:                                        ; preds = %if.end51
  br label %if.end61, !dbg !497

if.else60:                                        ; preds = %if.end51
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 246, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__.do_item_alloc, i64 0, i64 0)) #10, !dbg !494
  unreachable, !dbg !494

if.end61:                                         ; preds = %if.then59
  %56 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !498, !tbaa !138
  %h_next = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 2, !dbg !499
  %57 = bitcast %struct._stritem** %h_next to i8*, !dbg !500
  %58 = call i32 @cpavise_store_data_fileline(i8* %57, i64 8, i32 0, i32 252), !dbg !500
  store %struct._stritem* null, %struct._stritem** %h_next, align 8, !dbg !500, !tbaa !501
  %59 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !502, !tbaa !138
  %prev62 = getelementptr inbounds %struct._stritem, %struct._stritem* %59, i32 0, i32 1, !dbg !503
  %60 = bitcast %struct._stritem** %prev62 to i8*, !dbg !504
  %61 = call i32 @cpavise_store_data_fileline(i8* %60, i64 8, i32 0, i32 252), !dbg !504
  store %struct._stritem* null, %struct._stritem** %prev62, align 8, !dbg !504, !tbaa !467
  %62 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !505, !tbaa !138
  %next = getelementptr inbounds %struct._stritem, %struct._stritem* %62, i32 0, i32 0, !dbg !506
  %63 = bitcast %struct._stritem** %next to i8*, !dbg !507
  %64 = call i32 @cpavise_store_data_fileline(i8* %63, i64 8, i32 0, i32 252), !dbg !507
  store %struct._stritem* null, %struct._stritem** %next, align 8, !dbg !507, !tbaa !508
  %65 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !509, !tbaa !138
  %refcount63 = getelementptr inbounds %struct._stritem, %struct._stritem* %65, i32 0, i32 6, !dbg !510
  %66 = bitcast i16* %refcount63 to i8*, !dbg !511
  %67 = call i32 @cpavise_store_data_fileline(i8* %66, i64 2, i32 0, i32 253), !dbg !511
  store i16 1, i16* %refcount63, align 4, !dbg !511, !tbaa !436
  br label %while.cond, !dbg !512

while.cond:                                       ; preds = %while.body, %if.end61
  br i1 false, label %while.body, label %while.end, !dbg !512

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !512, !llvm.loop !513

while.end:                                        ; preds = %while.cond
  %68 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !515, !tbaa !138
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %68, i32 0, i32 8, !dbg !516
  %69 = call i32 @cpavise_store_data_fileline(i8* %it_flags, i64 1, i32 0, i32 255), !dbg !517
  store i8 0, i8* %it_flags, align 1, !dbg !517, !tbaa !518
  %70 = bitcast i64* %nkey.addr to i8*, !dbg !519
  %71 = load i64, i64* %nkey.addr, align 8, !dbg !519, !tbaa !143
  %conv64 = trunc i64 %71 to i8, !dbg !519
  %72 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !520, !tbaa !138
  %nkey65 = getelementptr inbounds %struct._stritem, %struct._stritem* %72, i32 0, i32 10, !dbg !521
  %73 = call i32 @cpavise_store_data_fileline(i8* %nkey65, i64 1, i32 0, i32 256), !dbg !522
  store i8 %conv64, i8* %nkey65, align 1, !dbg !522, !tbaa !523
  %74 = bitcast i32* %nbytes.addr to i8*, !dbg !524
  %75 = load i32, i32* %nbytes.addr, align 4, !dbg !524, !tbaa !186
  %76 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !525, !tbaa !138
  %nbytes66 = getelementptr inbounds %struct._stritem, %struct._stritem* %76, i32 0, i32 5, !dbg !526
  %77 = bitcast i32* %nbytes66 to i8*, !dbg !527
  %78 = call i32 @cpavise_store_data_fileline(i8* %77, i64 4, i32 0, i32 257), !dbg !527
  store i32 %75, i32* %nbytes66, align 8, !dbg !527, !tbaa !528
  %79 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !529, !tbaa !138
  %end = getelementptr inbounds %struct._stritem, %struct._stritem* %79, i32 0, i32 12, !dbg !529
  %arrayidx67 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end, i64 0, i64 0, !dbg !529
  %80 = bitcast i8** %arrayidx67 to i8*, !dbg !529
  %81 = load i8*, i8** %key.addr, align 8, !dbg !530, !tbaa !138
  %call68 = call i8* @strcpy(i8* %80, i8* %81) #9, !dbg !531
  %82 = bitcast i32* %exptime.addr to i8*, !dbg !532
  %83 = load i32, i32* %exptime.addr, align 4, !dbg !532, !tbaa !186
  %84 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !533, !tbaa !138
  %exptime69 = getelementptr inbounds %struct._stritem, %struct._stritem* %84, i32 0, i32 4, !dbg !534
  %85 = bitcast i32* %exptime69 to i8*, !dbg !535
  %86 = call i32 @cpavise_store_data_fileline(i8* %85, i64 4, i32 0, i32 261), !dbg !535
  store i32 %83, i32* %exptime69, align 4, !dbg !535, !tbaa !445
  %87 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !536, !tbaa !138
  %end70 = getelementptr inbounds %struct._stritem, %struct._stritem* %87, i32 0, i32 12, !dbg !536
  %arrayidx71 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end70, i64 0, i64 0, !dbg !536
  %88 = bitcast i8** %arrayidx71 to i8*, !dbg !536
  %89 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !536, !tbaa !138
  %nkey72 = getelementptr inbounds %struct._stritem, %struct._stritem* %89, i32 0, i32 10, !dbg !536
  %90 = load i8, i8* %nkey72, align 1, !dbg !536, !tbaa !523
  %conv73 = zext i8 %90 to i32, !dbg !536
  %idx.ext = sext i32 %conv73 to i64, !dbg !536
  %add.ptr = getelementptr inbounds i8, i8* %88, i64 %idx.ext, !dbg !536
  %add.ptr74 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !536
  %arraydecay75 = getelementptr inbounds [40 x i8], [40 x i8]* %suffix, i64 0, i64 0, !dbg !537
  %91 = load i8, i8* %nsuffix, align 1, !dbg !538, !tbaa !317
  %conv76 = zext i8 %91 to i64, !dbg !539
  call void @cpavise_memcpy(i8* %add.ptr74, i8* %arraydecay75, i64 %conv76, i64 94134154408080), !dbg !537
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 16 %arraydecay75, i64 %conv76, i1 false), !dbg !537
  %92 = load i8, i8* %nsuffix, align 1, !dbg !540, !tbaa !317
  %93 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !541, !tbaa !138
  %nsuffix77 = getelementptr inbounds %struct._stritem, %struct._stritem* %93, i32 0, i32 7, !dbg !542
  %94 = call i32 @cpavise_store_data_fileline(i8* %nsuffix77, i64 1, i32 0, i32 263), !dbg !543
  store i8 %92, i8* %nsuffix77, align 2, !dbg !543, !tbaa !544
  %95 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !545, !tbaa !138
  store %struct._stritem* %95, %struct._stritem** %retval, align 8, !dbg !546
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup78, !dbg !546

cleanup78:                                        ; preds = %while.end, %cleanup, %if.then
  %96 = bitcast i32* %id to i8*, !dbg !547
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %96) #9, !dbg !547
  %97 = bitcast i64* %ntotal to i8*, !dbg !547
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %97) #9, !dbg !547
  %98 = bitcast [40 x i8]* %suffix to i8*, !dbg !547
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %98) #9, !dbg !547
  %99 = bitcast %struct._stritem** %it to i8*, !dbg !547
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #9, !dbg !547
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %nsuffix) #9, !dbg !547
  %100 = load %struct._stritem*, %struct._stritem** %retval, align 8, !dbg !547
  ret %struct._stritem* %100, !dbg !547
}

declare !dbg !15 dso_local i32 @pmemobj_zalloc(%struct.pmemobjpool* %0, %struct.pmemoid* %1, i64 %2, i64 %3) #5

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @pmemobj_direct_inline(i64 %oid.coerce0, i64 %oid.coerce1) #6 !dbg !548 {
entry:
  %retval = alloca i8*, align 8
  %oid = alloca %struct.pmemoid, align 8
  %cache = alloca %struct._pobj_pcache*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %0 = bitcast %struct.pmemoid* %oid to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %oid.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %oid.coerce1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata %struct.pmemoid* %oid, metadata !552, metadata !DIExpression()), !dbg !560
  %off = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 1, !dbg !561
  %3 = load i64, i64* %off, align 8, !dbg !561, !tbaa !563
  %cmp = icmp eq i64 %3, 0, !dbg !565
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !566

lor.lhs.false:                                    ; preds = %entry
  %pool_uuid_lo = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 0, !dbg !567
  %4 = load i64, i64* %pool_uuid_lo, align 8, !dbg !567, !tbaa !568
  %cmp1 = icmp eq i64 %4, 0, !dbg !569
  br i1 %cmp1, label %if.then, label %if.end, !dbg !570

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !571
  br label %return, !dbg !571

if.end:                                           ; preds = %lor.lhs.false
  %5 = bitcast %struct._pobj_pcache** %cache to i8*, !dbg !572
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9, !dbg !572
  call void @llvm.dbg.declare(metadata %struct._pobj_pcache** %cache, metadata !553, metadata !DIExpression()), !dbg !573
  store %struct._pobj_pcache* @_pobj_cached_pool, %struct._pobj_pcache** %cache, align 8, !dbg !573, !tbaa !138
  %6 = load i32, i32* @_pobj_cache_invalidate, align 4, !dbg !574, !tbaa !186
  %7 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !576, !tbaa !138
  %invalidate = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %7, i32 0, i32 2, !dbg !577
  %8 = load i32, i32* %invalidate, align 8, !dbg !577, !tbaa !578
  %cmp2 = icmp ne i32 %6, %8, !dbg !580
  br i1 %cmp2, label %if.then6, label %lor.lhs.false3, !dbg !581

lor.lhs.false3:                                   ; preds = %if.end
  %9 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !582, !tbaa !138
  %uuid_lo = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %9, i32 0, i32 1, !dbg !583
  %10 = load i64, i64* %uuid_lo, align 8, !dbg !583, !tbaa !584
  %pool_uuid_lo4 = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 0, !dbg !585
  %11 = load i64, i64* %pool_uuid_lo4, align 8, !dbg !585, !tbaa !568
  %cmp5 = icmp ne i64 %10, %11, !dbg !586
  br i1 %cmp5, label %if.then6, label %if.end13, !dbg !587

if.then6:                                         ; preds = %lor.lhs.false3, %if.end
  %12 = load i32, i32* @_pobj_cache_invalidate, align 4, !dbg !588, !tbaa !186
  %13 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !590, !tbaa !138
  %invalidate7 = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %13, i32 0, i32 2, !dbg !591
  store i32 %12, i32* %invalidate7, align 8, !dbg !592, !tbaa !578
  %14 = bitcast %struct.pmemoid* %oid to { i64, i64 }*, !dbg !593
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 0, !dbg !593
  %16 = load i64, i64* %15, align 8, !dbg !593
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i32 0, i32 1, !dbg !593
  %18 = load i64, i64* %17, align 8, !dbg !593
  %call = call %struct.pmemobjpool* @pmemobj_pool_by_oid(i64 %16, i64 %18), !dbg !593
  %19 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !595, !tbaa !138
  %pop = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %19, i32 0, i32 0, !dbg !596
  store %struct.pmemobjpool* %call, %struct.pmemobjpool** %pop, align 8, !dbg !597, !tbaa !598
  %tobool = icmp ne %struct.pmemobjpool* %call, null, !dbg !597
  br i1 %tobool, label %if.end10, label %if.then8, !dbg !599

if.then8:                                         ; preds = %if.then6
  %20 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !600, !tbaa !138
  %uuid_lo9 = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %20, i32 0, i32 1, !dbg !602
  store i64 0, i64* %uuid_lo9, align 8, !dbg !603, !tbaa !584
  store i8* null, i8** %retval, align 8, !dbg !604
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !604

if.end10:                                         ; preds = %if.then6
  %pool_uuid_lo11 = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 0, !dbg !605
  %21 = load i64, i64* %pool_uuid_lo11, align 8, !dbg !605, !tbaa !568
  %22 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !606, !tbaa !138
  %uuid_lo12 = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %22, i32 0, i32 1, !dbg !607
  store i64 %21, i64* %uuid_lo12, align 8, !dbg !608, !tbaa !584
  br label %if.end13, !dbg !609

if.end13:                                         ; preds = %if.end10, %lor.lhs.false3
  %23 = load %struct._pobj_pcache*, %struct._pobj_pcache** %cache, align 8, !dbg !610, !tbaa !138
  %pop14 = getelementptr inbounds %struct._pobj_pcache, %struct._pobj_pcache* %23, i32 0, i32 0, !dbg !611
  %24 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop14, align 8, !dbg !611, !tbaa !598
  %25 = ptrtoint %struct.pmemobjpool* %24 to i64, !dbg !612
  %off15 = getelementptr inbounds %struct.pmemoid, %struct.pmemoid* %oid, i32 0, i32 1, !dbg !613
  %26 = load i64, i64* %off15, align 8, !dbg !613, !tbaa !563
  %add = add i64 %25, %26, !dbg !614
  %27 = inttoptr i64 %add to i8*, !dbg !615
  store i8* %27, i8** %retval, align 8, !dbg !616
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !616

cleanup:                                          ; preds = %if.end13, %if.then8
  %28 = bitcast %struct._pobj_pcache** %cache to i8*, !dbg !617
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #9, !dbg !617
  br label %return

return:                                           ; preds = %cleanup, %if.then
  %29 = load i8*, i8** %retval, align 8, !dbg !617
  ret i8* %29, !dbg !617
}

declare !dbg !55 dso_local void @mt_stats_lock() #5

declare !dbg !58 dso_local void @mt_stats_unlock() #5

; Function Attrs: nounwind uwtable
define dso_local void @do_item_unlink(%struct._stritem* %it) #0 !dbg !618 {
entry:
  %it.addr = alloca %struct._stritem*, align 8
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !622, metadata !DIExpression()), !dbg !623
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !624, !tbaa !138
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 8, !dbg !626
  %1 = load i8, i8* %it_flags, align 1, !dbg !626, !tbaa !518
  %conv = zext i8 %1 to i32, !dbg !624
  %and = and i32 %conv, 1, !dbg !627
  %cmp = icmp ne i32 %and, 0, !dbg !628
  br i1 %cmp, label %if.then, label %if.end19, !dbg !629

if.then:                                          ; preds = %entry
  %2 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !630, !tbaa !138
  %it_flags2 = getelementptr inbounds %struct._stritem, %struct._stritem* %2, i32 0, i32 8, !dbg !632
  %3 = load i8, i8* %it_flags2, align 1, !dbg !633, !tbaa !518
  %conv3 = zext i8 %3 to i32, !dbg !633
  %and4 = and i32 %conv3, -2, !dbg !633
  %conv5 = trunc i32 %and4 to i8, !dbg !633
  %4 = call i32 @cpavise_store_data_fileline(i8* %it_flags2, i64 1, i32 0, i32 366), !dbg !633
  store i8 %conv5, i8* %it_flags2, align 1, !dbg !633, !tbaa !518
  call void @mt_stats_lock(), !dbg !634
  %5 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !635, !tbaa !138
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 10, !dbg !635
  %6 = load i8, i8* %nkey, align 1, !dbg !635, !tbaa !523
  %conv6 = zext i8 %6 to i64, !dbg !635
  %add = add i64 120, %conv6, !dbg !635
  %add7 = add i64 %add, 1, !dbg !635
  %7 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !635, !tbaa !138
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %7, i32 0, i32 7, !dbg !635
  %8 = load i8, i8* %nsuffix, align 2, !dbg !635, !tbaa !544
  %conv8 = zext i8 %8 to i64, !dbg !635
  %add9 = add i64 %add7, %conv8, !dbg !635
  %9 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !635, !tbaa !138
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %9, i32 0, i32 5, !dbg !635
  %10 = bitcast i32* %nbytes to i8*, !dbg !635
  %11 = load i32, i32* %nbytes, align 8, !dbg !635, !tbaa !528
  %conv10 = sext i32 %11 to i64, !dbg !635
  %add11 = add i64 %add9, %conv10, !dbg !635
  %12 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2), align 8, !dbg !637, !tbaa !638
  %sub = sub i64 %12, %add11, !dbg !637
  %13 = call i32 @cpavise_store_data_fileline(i8* bitcast (i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2) to i8*), i64 8, i32 0, i32 369), !dbg !637
  store i64 %sub, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2), align 8, !dbg !637, !tbaa !638
  %14 = load i32, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 0), align 8, !dbg !639, !tbaa !640
  %sub12 = sub i32 %14, 1, !dbg !639
  store i32 %sub12, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 0), align 8, !dbg !639, !tbaa !640
  call void @mt_stats_unlock(), !dbg !641
  %15 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !642, !tbaa !138
  %end = getelementptr inbounds %struct._stritem, %struct._stritem* %15, i32 0, i32 12, !dbg !642
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %end, i64 0, i64 0, !dbg !642
  %16 = bitcast i8** %arrayidx to i8*, !dbg !642
  %17 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !643, !tbaa !138
  %nkey13 = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 10, !dbg !644
  %18 = load i8, i8* %nkey13, align 1, !dbg !644, !tbaa !523
  %conv14 = zext i8 %18 to i64, !dbg !643
  call void @assoc_delete(i8* %16, i64 %conv14), !dbg !645
  %19 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !646, !tbaa !138
  call void @item_unlink_q(%struct._stritem* %19), !dbg !647
  %20 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !648, !tbaa !138
  %refcount = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 6, !dbg !650
  %21 = bitcast i16* %refcount to i8*, !dbg !650
  %22 = load i16, i16* %refcount, align 4, !dbg !650, !tbaa !436
  %conv15 = zext i16 %22 to i32, !dbg !648
  %cmp16 = icmp eq i32 %conv15, 0, !dbg !651
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !652

if.then18:                                        ; preds = %if.then
  %23 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !653, !tbaa !138
  call void @item_free(%struct._stritem* %23), !dbg !654
  br label %if.end, !dbg !654

if.end:                                           ; preds = %if.then18, %if.then
  br label %if.end19, !dbg !655

if.end19:                                         ; preds = %if.end, %entry
  ret void, !dbg !656
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8* %0, i8* %1, i32 %2, i8* %3) #7

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8* %0, i8* %1) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i64 %2, i1 immarg %3) #2

; Function Attrs: nounwind uwtable
define dso_local void @item_free(%struct._stritem* %it) #0 !dbg !657 {
entry:
  %it.addr = alloca %struct._stritem*, align 8
  %ntotal = alloca i64, align 8
  %freed_obj = alloca %struct.pmemoid, align 8
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !659, metadata !DIExpression()), !dbg !662
  %0 = bitcast i64* %ntotal to i8*, !dbg !663
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9, !dbg !663
  call void @llvm.dbg.declare(metadata i64* %ntotal, metadata !660, metadata !DIExpression()), !dbg !664
  %1 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !665, !tbaa !138
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %1, i32 0, i32 10, !dbg !665
  %2 = load i8, i8* %nkey, align 1, !dbg !665, !tbaa !523
  %conv = zext i8 %2 to i64, !dbg !665
  %add = add i64 120, %conv, !dbg !665
  %add1 = add i64 %add, 1, !dbg !665
  %3 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !665, !tbaa !138
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %3, i32 0, i32 7, !dbg !665
  %4 = load i8, i8* %nsuffix, align 2, !dbg !665, !tbaa !544
  %conv2 = zext i8 %4 to i64, !dbg !665
  %add3 = add i64 %add1, %conv2, !dbg !665
  %5 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !665, !tbaa !138
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 5, !dbg !665
  %6 = load i32, i32* %nbytes, align 8, !dbg !665, !tbaa !528
  %conv4 = sext i32 %6 to i64, !dbg !665
  %add5 = add i64 %add3, %conv4, !dbg !665
  store i64 %add5, i64* %ntotal, align 8, !dbg !664, !tbaa !143
  %7 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !666, !tbaa !138
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %7, i32 0, i32 8, !dbg !666
  %8 = load i8, i8* %it_flags, align 1, !dbg !666, !tbaa !518
  %conv6 = zext i8 %8 to i32, !dbg !666
  %and = and i32 %conv6, 1, !dbg !666
  %cmp = icmp eq i32 %and, 0, !dbg !666
  br i1 %cmp, label %if.then, label %if.else, !dbg !669

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !669

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 270, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.item_free, i64 0, i64 0)) #10, !dbg !666
  unreachable, !dbg !666

if.end:                                           ; preds = %if.then
  %9 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !670, !tbaa !138
  %10 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !670, !tbaa !138
  %slabs_clsid = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 9, !dbg !670
  %11 = load i8, i8* %slabs_clsid, align 8, !dbg !670, !tbaa !488
  %idxprom = zext i8 %11 to i64, !dbg !670
  %arrayidx = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @heads, i64 0, i64 %idxprom, !dbg !670
  %12 = load %struct._stritem*, %struct._stritem** %arrayidx, align 8, !dbg !670, !tbaa !138
  %cmp8 = icmp ne %struct._stritem* %9, %12, !dbg !670
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !673

if.then10:                                        ; preds = %if.end
  br label %if.end12, !dbg !673

if.else11:                                        ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 271, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.item_free, i64 0, i64 0)) #10, !dbg !670
  unreachable, !dbg !670

if.end12:                                         ; preds = %if.then10
  %13 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !674, !tbaa !138
  %14 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !674, !tbaa !138
  %slabs_clsid13 = getelementptr inbounds %struct._stritem, %struct._stritem* %14, i32 0, i32 9, !dbg !674
  %15 = load i8, i8* %slabs_clsid13, align 8, !dbg !674, !tbaa !488
  %idxprom14 = zext i8 %15 to i64, !dbg !674
  %arrayidx15 = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @tails, i64 0, i64 %idxprom14, !dbg !674
  %16 = load %struct._stritem*, %struct._stritem** %arrayidx15, align 8, !dbg !674, !tbaa !138
  %cmp16 = icmp ne %struct._stritem* %13, %16, !dbg !674
  br i1 %cmp16, label %if.then18, label %if.else19, !dbg !677

if.then18:                                        ; preds = %if.end12
  br label %if.end20, !dbg !677

if.else19:                                        ; preds = %if.end12
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 272, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.item_free, i64 0, i64 0)) #10, !dbg !674
  unreachable, !dbg !674

if.end20:                                         ; preds = %if.then18
  %17 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !678, !tbaa !138
  %refcount = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 6, !dbg !678
  %18 = bitcast i16* %refcount to i8*, !dbg !678
  %19 = load i16, i16* %refcount, align 4, !dbg !678, !tbaa !436
  %conv21 = zext i16 %19 to i32, !dbg !678
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !678
  br i1 %cmp22, label %if.then24, label %if.else25, !dbg !681

if.then24:                                        ; preds = %if.end20
  br label %if.end26, !dbg !681

if.else25:                                        ; preds = %if.end20
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 273, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.item_free, i64 0, i64 0)) #10, !dbg !678
  unreachable, !dbg !678

if.end26:                                         ; preds = %if.then24
  %20 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !682, !tbaa !138
  %slabs_clsid27 = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 9, !dbg !683
  %21 = call i32 @cpavise_store_data_fileline(i8* %slabs_clsid27, i64 1, i32 0, i32 276), !dbg !684
  store i8 0, i8* %slabs_clsid27, align 8, !dbg !684, !tbaa !488
  %22 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !685, !tbaa !138
  %it_flags28 = getelementptr inbounds %struct._stritem, %struct._stritem* %22, i32 0, i32 8, !dbg !686
  %23 = load i8, i8* %it_flags28, align 1, !dbg !687, !tbaa !518
  %conv29 = zext i8 %23 to i32, !dbg !687
  %or = or i32 %conv29, 4, !dbg !687
  %conv30 = trunc i32 %or to i8, !dbg !687
  %24 = call i32 @cpavise_store_data_fileline(i8* %it_flags28, i64 1, i32 0, i32 277), !dbg !687
  store i8 %conv30, i8* %it_flags28, align 1, !dbg !687, !tbaa !518
  br label %while.cond, !dbg !688

while.cond:                                       ; preds = %while.body, %if.end26
  br i1 false, label %while.body, label %while.end, !dbg !688

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !688, !llvm.loop !689

while.end:                                        ; preds = %while.cond
  %25 = bitcast %struct.pmemoid* %freed_obj to i8*, !dbg !691
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %25) #9, !dbg !691
  call void @llvm.dbg.declare(metadata %struct.pmemoid* %freed_obj, metadata !661, metadata !DIExpression()), !dbg !692
  %26 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !693, !tbaa !138
  %27 = bitcast %struct._stritem* %26 to i8*, !dbg !694
  %call = call { i64, i64 } @pmemobj_oid(i8* %27), !dbg !695
  %28 = bitcast %struct.pmemoid* %freed_obj to { i64, i64 }*, !dbg !695
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !695
  %30 = extractvalue { i64, i64 } %call, 0, !dbg !695
  store i64 %30, i64* %29, align 8, !dbg !695
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !695
  %32 = extractvalue { i64, i64 } %call, 1, !dbg !695
  store i64 %32, i64* %31, align 8, !dbg !695
  call void @pmemobj_free(%struct.pmemoid* %freed_obj), !dbg !696
  %33 = bitcast %struct.pmemoid* %freed_obj to i8*, !dbg !697
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %33) #9, !dbg !697
  %34 = bitcast i64* %ntotal to i8*, !dbg !697
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #9, !dbg !697
  ret void, !dbg !697
}

declare !dbg !67 dso_local { i64, i64 } @pmemobj_oid(i8* %0) #5

declare !dbg !72 dso_local void @pmemobj_free(%struct.pmemoid* %0) #5

; Function Attrs: nounwind uwtable
define dso_local zeroext i1 @item_size_ok(i64 %nkey, i32 %flags, i32 %nbytes) #0 !dbg !698 {
entry:
  %nkey.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %nbytes.addr = alloca i32, align 4
  %prefix = alloca [40 x i8], align 16
  %nsuffix = alloca i8, align 1
  store i64 %nkey, i64* %nkey.addr, align 8, !tbaa !143
  call void @llvm.dbg.declare(metadata i64* %nkey.addr, metadata !702, metadata !DIExpression()), !dbg !707
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !186
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !703, metadata !DIExpression()), !dbg !708
  store i32 %nbytes, i32* %nbytes.addr, align 4, !tbaa !186
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !704, metadata !DIExpression()), !dbg !709
  %0 = bitcast [40 x i8]* %prefix to i8*, !dbg !710
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %0) #9, !dbg !710
  call void @llvm.dbg.declare(metadata [40 x i8]* %prefix, metadata !705, metadata !DIExpression()), !dbg !711
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %nsuffix) #9, !dbg !712
  call void @llvm.dbg.declare(metadata i8* %nsuffix, metadata !706, metadata !DIExpression()), !dbg !713
  %1 = load i64, i64* %nkey.addr, align 8, !dbg !714, !tbaa !143
  %add = add i64 %1, 1, !dbg !715
  %conv = trunc i64 %add to i8, !dbg !714
  %2 = load i32, i32* %flags.addr, align 4, !dbg !716, !tbaa !186
  %3 = load i32, i32* %nbytes.addr, align 4, !dbg !717, !tbaa !186
  %arraydecay = getelementptr inbounds [40 x i8], [40 x i8]* %prefix, i64 0, i64 0, !dbg !718
  %call = call i64 @item_make_header(i8 zeroext %conv, i32 %2, i32 %3, i8* %arraydecay, i8* %nsuffix), !dbg !719
  %call1 = call i32 @slabs_clsid(i64 %call), !dbg !720
  %cmp = icmp ne i32 %call1, 0, !dbg !721
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %nsuffix) #9, !dbg !722
  %4 = bitcast [40 x i8]* %prefix to i8*, !dbg !722
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %4) #9, !dbg !722
  ret i1 %cmp, !dbg !723
}

; Function Attrs: nounwind uwtable
define dso_local void @item_link_q(%struct._stritem* %it) #0 !dbg !724 {
entry:
  %it.addr = alloca %struct._stritem*, align 8
  %head = alloca %struct._stritem**, align 8
  %tail = alloca %struct._stritem**, align 8
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !726, metadata !DIExpression()), !dbg !730
  %0 = bitcast %struct._stritem*** %head to i8*, !dbg !731
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9, !dbg !731
  call void @llvm.dbg.declare(metadata %struct._stritem*** %head, metadata !727, metadata !DIExpression()), !dbg !732
  %1 = bitcast %struct._stritem*** %tail to i8*, !dbg !731
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9, !dbg !731
  call void @llvm.dbg.declare(metadata %struct._stritem*** %tail, metadata !729, metadata !DIExpression()), !dbg !733
  %2 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !734, !tbaa !138
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %2, i32 0, i32 8, !dbg !734
  %3 = load i8, i8* %it_flags, align 1, !dbg !734, !tbaa !518
  %conv = zext i8 %3 to i32, !dbg !734
  %and = and i32 %conv, 4, !dbg !734
  %cmp = icmp eq i32 %and, 0, !dbg !734
  br i1 %cmp, label %if.then, label %if.else, !dbg !737

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !737

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 299, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.item_link_q, i64 0, i64 0)) #10, !dbg !734
  unreachable, !dbg !734

if.end:                                           ; preds = %if.then
  %4 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !738, !tbaa !138
  %slabs_clsid = getelementptr inbounds %struct._stritem, %struct._stritem* %4, i32 0, i32 9, !dbg !739
  %5 = load i8, i8* %slabs_clsid, align 8, !dbg !739, !tbaa !488
  %idxprom = zext i8 %5 to i64, !dbg !740
  %arrayidx = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @heads, i64 0, i64 %idxprom, !dbg !740
  %6 = bitcast %struct._stritem*** %head to i8*, !dbg !741
  %7 = call i32 @cpavise_store_data_fileline(i8* %6, i64 8, i32 0, i32 301), !dbg !741
  store %struct._stritem** %arrayidx, %struct._stritem*** %head, align 8, !dbg !741, !tbaa !138
  %8 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !742, !tbaa !138
  %slabs_clsid2 = getelementptr inbounds %struct._stritem, %struct._stritem* %8, i32 0, i32 9, !dbg !743
  %9 = load i8, i8* %slabs_clsid2, align 8, !dbg !743, !tbaa !488
  %idxprom3 = zext i8 %9 to i64, !dbg !744
  %arrayidx4 = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @tails, i64 0, i64 %idxprom3, !dbg !744
  store %struct._stritem** %arrayidx4, %struct._stritem*** %tail, align 8, !dbg !745, !tbaa !138
  %10 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !746, !tbaa !138
  %11 = load %struct._stritem**, %struct._stritem*** %head, align 8, !dbg !746, !tbaa !138
  %12 = load %struct._stritem*, %struct._stritem** %11, align 8, !dbg !746, !tbaa !138
  %cmp5 = icmp ne %struct._stritem* %10, %12, !dbg !746
  br i1 %cmp5, label %if.then7, label %if.else8, !dbg !749

if.then7:                                         ; preds = %if.end
  br label %if.end9, !dbg !749

if.else8:                                         ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.item_link_q, i64 0, i64 0)) #10, !dbg !746
  unreachable, !dbg !746

if.end9:                                          ; preds = %if.then7
  %13 = load %struct._stritem**, %struct._stritem*** %head, align 8, !dbg !750, !tbaa !138
  %14 = load %struct._stritem*, %struct._stritem** %13, align 8, !dbg !750, !tbaa !138
  %tobool = icmp ne %struct._stritem* %14, null, !dbg !750
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !750

land.lhs.true:                                    ; preds = %if.end9
  %15 = load %struct._stritem**, %struct._stritem*** %tail, align 8, !dbg !750, !tbaa !138
  %16 = load %struct._stritem*, %struct._stritem** %15, align 8, !dbg !750, !tbaa !138
  %tobool10 = icmp ne %struct._stritem* %16, null, !dbg !750
  br i1 %tobool10, label %if.then16, label %lor.lhs.false, !dbg !750

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end9
  %17 = load %struct._stritem**, %struct._stritem*** %head, align 8, !dbg !750, !tbaa !138
  %18 = load %struct._stritem*, %struct._stritem** %17, align 8, !dbg !750, !tbaa !138
  %cmp11 = icmp eq %struct._stritem* %18, null, !dbg !750
  br i1 %cmp11, label %land.lhs.true13, label %if.else17, !dbg !750

land.lhs.true13:                                  ; preds = %lor.lhs.false
  %19 = load %struct._stritem**, %struct._stritem*** %tail, align 8, !dbg !750, !tbaa !138
  %20 = load %struct._stritem*, %struct._stritem** %19, align 8, !dbg !750, !tbaa !138
  %cmp14 = icmp eq %struct._stritem* %20, null, !dbg !750
  br i1 %cmp14, label %if.then16, label %if.else17, !dbg !753

if.then16:                                        ; preds = %land.lhs.true13, %land.lhs.true
  br label %if.end18, !dbg !753

if.else17:                                        ; preds = %land.lhs.true13, %lor.lhs.false
  call void @__assert_fail(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 304, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.item_link_q, i64 0, i64 0)) #10, !dbg !750
  unreachable, !dbg !750

if.end18:                                         ; preds = %if.then16
  %21 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !754, !tbaa !138
  %prev = getelementptr inbounds %struct._stritem, %struct._stritem* %21, i32 0, i32 1, !dbg !755
  %22 = bitcast %struct._stritem** %prev to i8*, !dbg !756
  %23 = call i32 @cpavise_store_data_fileline(i8* %22, i64 8, i32 0, i32 305), !dbg !756
  store %struct._stritem* null, %struct._stritem** %prev, align 8, !dbg !756, !tbaa !467
  %24 = load %struct._stritem**, %struct._stritem*** %head, align 8, !dbg !757, !tbaa !138
  %25 = load %struct._stritem*, %struct._stritem** %24, align 8, !dbg !758, !tbaa !138
  %26 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !759, !tbaa !138
  %next = getelementptr inbounds %struct._stritem, %struct._stritem* %26, i32 0, i32 0, !dbg !760
  %27 = bitcast %struct._stritem** %next to i8*, !dbg !761
  %28 = call i32 @cpavise_store_data_fileline(i8* %27, i64 8, i32 0, i32 306), !dbg !761
  store %struct._stritem* %25, %struct._stritem** %next, align 8, !dbg !761, !tbaa !508
  %29 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !762, !tbaa !138
  %next19 = getelementptr inbounds %struct._stritem, %struct._stritem* %29, i32 0, i32 0, !dbg !764
  %30 = load %struct._stritem*, %struct._stritem** %next19, align 8, !dbg !764, !tbaa !508
  %tobool20 = icmp ne %struct._stritem* %30, null, !dbg !762
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !765

if.then21:                                        ; preds = %if.end18
  %31 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !766, !tbaa !138
  %32 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !767, !tbaa !138
  %next22 = getelementptr inbounds %struct._stritem, %struct._stritem* %32, i32 0, i32 0, !dbg !768
  %33 = load %struct._stritem*, %struct._stritem** %next22, align 8, !dbg !768, !tbaa !508
  %prev23 = getelementptr inbounds %struct._stritem, %struct._stritem* %33, i32 0, i32 1, !dbg !769
  %34 = bitcast %struct._stritem** %prev23 to i8*, !dbg !770
  %35 = call i32 @cpavise_store_data_fileline(i8* %34, i64 8, i32 0, i32 307), !dbg !770
  store %struct._stritem* %31, %struct._stritem** %prev23, align 8, !dbg !770, !tbaa !467
  br label %if.end24, !dbg !767

if.end24:                                         ; preds = %if.then21, %if.end18
  %36 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !771, !tbaa !138
  %37 = load %struct._stritem**, %struct._stritem*** %head, align 8, !dbg !772, !tbaa !138
  store %struct._stritem* %36, %struct._stritem** %37, align 8, !dbg !773, !tbaa !138
  %38 = load %struct._stritem**, %struct._stritem*** %tail, align 8, !dbg !774, !tbaa !138
  %39 = load %struct._stritem*, %struct._stritem** %38, align 8, !dbg !776, !tbaa !138
  %cmp25 = icmp eq %struct._stritem* %39, null, !dbg !777
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !778

if.then27:                                        ; preds = %if.end24
  %40 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !779, !tbaa !138
  %41 = load %struct._stritem**, %struct._stritem*** %tail, align 8, !dbg !780, !tbaa !138
  store %struct._stritem* %40, %struct._stritem** %41, align 8, !dbg !781, !tbaa !138
  br label %if.end28, !dbg !782

if.end28:                                         ; preds = %if.then27, %if.end24
  %42 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !783, !tbaa !138
  %slabs_clsid29 = getelementptr inbounds %struct._stritem, %struct._stritem* %42, i32 0, i32 9, !dbg !784
  %43 = load i8, i8* %slabs_clsid29, align 8, !dbg !784, !tbaa !488
  %idxprom30 = zext i8 %43 to i64, !dbg !785
  %arrayidx31 = getelementptr inbounds [255 x i32], [255 x i32]* @sizes, i64 0, i64 %idxprom30, !dbg !785
  %44 = load i32, i32* %arrayidx31, align 4, !dbg !786, !tbaa !186
  %inc = add i32 %44, 1, !dbg !786
  store i32 %inc, i32* %arrayidx31, align 4, !dbg !786, !tbaa !186
  %45 = bitcast %struct._stritem*** %tail to i8*, !dbg !787
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #9, !dbg !787
  %46 = bitcast %struct._stritem*** %head to i8*, !dbg !787
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #9, !dbg !787
  ret void, !dbg !787
}

; Function Attrs: nounwind uwtable
define dso_local void @item_unlink_q(%struct._stritem* %it) #0 !dbg !788 {
entry:
  %it.addr = alloca %struct._stritem*, align 8
  %head = alloca %struct._stritem**, align 8
  %tail = alloca %struct._stritem**, align 8
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !790, metadata !DIExpression()), !dbg !793
  %0 = bitcast %struct._stritem*** %head to i8*, !dbg !794
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9, !dbg !794
  call void @llvm.dbg.declare(metadata %struct._stritem*** %head, metadata !791, metadata !DIExpression()), !dbg !795
  %1 = bitcast %struct._stritem*** %tail to i8*, !dbg !794
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9, !dbg !794
  call void @llvm.dbg.declare(metadata %struct._stritem*** %tail, metadata !792, metadata !DIExpression()), !dbg !796
  %2 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !797, !tbaa !138
  %slabs_clsid = getelementptr inbounds %struct._stritem, %struct._stritem* %2, i32 0, i32 9, !dbg !798
  %3 = load i8, i8* %slabs_clsid, align 8, !dbg !798, !tbaa !488
  %idxprom = zext i8 %3 to i64, !dbg !799
  %arrayidx = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @heads, i64 0, i64 %idxprom, !dbg !799
  %4 = bitcast %struct._stritem*** %head to i8*, !dbg !800
  %5 = call i32 @cpavise_store_data_fileline(i8* %4, i64 8, i32 0, i32 318), !dbg !800
  store %struct._stritem** %arrayidx, %struct._stritem*** %head, align 8, !dbg !800, !tbaa !138
  %6 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !801, !tbaa !138
  %slabs_clsid1 = getelementptr inbounds %struct._stritem, %struct._stritem* %6, i32 0, i32 9, !dbg !802
  %7 = load i8, i8* %slabs_clsid1, align 8, !dbg !802, !tbaa !488
  %idxprom2 = zext i8 %7 to i64, !dbg !803
  %arrayidx3 = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @tails, i64 0, i64 %idxprom2, !dbg !803
  store %struct._stritem** %arrayidx3, %struct._stritem*** %tail, align 8, !dbg !804, !tbaa !138
  %8 = load %struct._stritem**, %struct._stritem*** %head, align 8, !dbg !805, !tbaa !138
  %9 = load %struct._stritem*, %struct._stritem** %8, align 8, !dbg !807, !tbaa !138
  %10 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !808, !tbaa !138
  %cmp = icmp eq %struct._stritem* %9, %10, !dbg !809
  br i1 %cmp, label %if.then, label %if.end6, !dbg !810

if.then:                                          ; preds = %entry
  %11 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !811, !tbaa !138
  %prev = getelementptr inbounds %struct._stritem, %struct._stritem* %11, i32 0, i32 1, !dbg !811
  %12 = load %struct._stritem*, %struct._stritem** %prev, align 8, !dbg !811, !tbaa !467
  %cmp4 = icmp eq %struct._stritem* %12, null, !dbg !811
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !815

if.then5:                                         ; preds = %if.then
  br label %if.end, !dbg !815

if.else:                                          ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 322, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.item_unlink_q, i64 0, i64 0)) #10, !dbg !811
  unreachable, !dbg !811

if.end:                                           ; preds = %if.then5
  %13 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !816, !tbaa !138
  %next = getelementptr inbounds %struct._stritem, %struct._stritem* %13, i32 0, i32 0, !dbg !817
  %14 = load %struct._stritem*, %struct._stritem** %next, align 8, !dbg !817, !tbaa !508
  %15 = load %struct._stritem**, %struct._stritem*** %head, align 8, !dbg !818, !tbaa !138
  %16 = bitcast %struct._stritem** %15 to i8*, !dbg !819
  %17 = call i32 @cpavise_store_data_fileline(i8* %16, i64 8, i32 0, i32 323), !dbg !819
  store %struct._stritem* %14, %struct._stritem** %15, align 8, !dbg !819, !tbaa !138
  br label %if.end6, !dbg !820

if.end6:                                          ; preds = %if.end, %entry
  %18 = load %struct._stritem**, %struct._stritem*** %tail, align 8, !dbg !821, !tbaa !138
  %19 = load %struct._stritem*, %struct._stritem** %18, align 8, !dbg !823, !tbaa !138
  %20 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !824, !tbaa !138
  %cmp7 = icmp eq %struct._stritem* %19, %20, !dbg !825
  br i1 %cmp7, label %if.then8, label %if.end15, !dbg !826

if.then8:                                         ; preds = %if.end6
  %21 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !827, !tbaa !138
  %next9 = getelementptr inbounds %struct._stritem, %struct._stritem* %21, i32 0, i32 0, !dbg !827
  %22 = load %struct._stritem*, %struct._stritem** %next9, align 8, !dbg !827, !tbaa !508
  %cmp10 = icmp eq %struct._stritem* %22, null, !dbg !827
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !831

if.then11:                                        ; preds = %if.then8
  br label %if.end13, !dbg !831

if.else12:                                        ; preds = %if.then8
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 326, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.item_unlink_q, i64 0, i64 0)) #10, !dbg !827
  unreachable, !dbg !827

if.end13:                                         ; preds = %if.then11
  %23 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !832, !tbaa !138
  %prev14 = getelementptr inbounds %struct._stritem, %struct._stritem* %23, i32 0, i32 1, !dbg !833
  %24 = load %struct._stritem*, %struct._stritem** %prev14, align 8, !dbg !833, !tbaa !467
  %25 = load %struct._stritem**, %struct._stritem*** %tail, align 8, !dbg !834, !tbaa !138
  %26 = bitcast %struct._stritem** %25 to i8*, !dbg !835
  %27 = call i32 @cpavise_store_data_fileline(i8* %26, i64 8, i32 0, i32 327), !dbg !835
  store %struct._stritem* %24, %struct._stritem** %25, align 8, !dbg !835, !tbaa !138
  br label %if.end15, !dbg !836

if.end15:                                         ; preds = %if.end13, %if.end6
  %28 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !837, !tbaa !138
  %next16 = getelementptr inbounds %struct._stritem, %struct._stritem* %28, i32 0, i32 0, !dbg !837
  %29 = load %struct._stritem*, %struct._stritem** %next16, align 8, !dbg !837, !tbaa !508
  %30 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !837, !tbaa !138
  %cmp17 = icmp ne %struct._stritem* %29, %30, !dbg !837
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !840

if.then18:                                        ; preds = %if.end15
  br label %if.end20, !dbg !840

if.else19:                                        ; preds = %if.end15
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 329, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.item_unlink_q, i64 0, i64 0)) #10, !dbg !837
  unreachable, !dbg !837

if.end20:                                         ; preds = %if.then18
  %31 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !841, !tbaa !138
  %prev21 = getelementptr inbounds %struct._stritem, %struct._stritem* %31, i32 0, i32 1, !dbg !841
  %32 = load %struct._stritem*, %struct._stritem** %prev21, align 8, !dbg !841, !tbaa !467
  %33 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !841, !tbaa !138
  %cmp22 = icmp ne %struct._stritem* %32, %33, !dbg !841
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !844

if.then23:                                        ; preds = %if.end20
  br label %if.end25, !dbg !844

if.else24:                                        ; preds = %if.end20
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 330, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.item_unlink_q, i64 0, i64 0)) #10, !dbg !841
  unreachable, !dbg !841

if.end25:                                         ; preds = %if.then23
  %34 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !845, !tbaa !138
  %next26 = getelementptr inbounds %struct._stritem, %struct._stritem* %34, i32 0, i32 0, !dbg !847
  %35 = load %struct._stritem*, %struct._stritem** %next26, align 8, !dbg !847, !tbaa !508
  %tobool = icmp ne %struct._stritem* %35, null, !dbg !845
  br i1 %tobool, label %if.then27, label %if.end31, !dbg !848

if.then27:                                        ; preds = %if.end25
  %36 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !849, !tbaa !138
  %prev28 = getelementptr inbounds %struct._stritem, %struct._stritem* %36, i32 0, i32 1, !dbg !850
  %37 = load %struct._stritem*, %struct._stritem** %prev28, align 8, !dbg !850, !tbaa !467
  %38 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !851, !tbaa !138
  %next29 = getelementptr inbounds %struct._stritem, %struct._stritem* %38, i32 0, i32 0, !dbg !852
  %39 = load %struct._stritem*, %struct._stritem** %next29, align 8, !dbg !852, !tbaa !508
  %prev30 = getelementptr inbounds %struct._stritem, %struct._stritem* %39, i32 0, i32 1, !dbg !853
  %40 = bitcast %struct._stritem** %prev30 to i8*, !dbg !854
  %41 = call i32 @cpavise_store_data_fileline(i8* %40, i64 8, i32 0, i32 332), !dbg !854
  store %struct._stritem* %37, %struct._stritem** %prev30, align 8, !dbg !854, !tbaa !467
  br label %if.end31, !dbg !851

if.end31:                                         ; preds = %if.then27, %if.end25
  %42 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !855, !tbaa !138
  %prev32 = getelementptr inbounds %struct._stritem, %struct._stritem* %42, i32 0, i32 1, !dbg !857
  %43 = load %struct._stritem*, %struct._stritem** %prev32, align 8, !dbg !857, !tbaa !467
  %tobool33 = icmp ne %struct._stritem* %43, null, !dbg !855
  br i1 %tobool33, label %if.then34, label %if.end38, !dbg !858

if.then34:                                        ; preds = %if.end31
  %44 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !859, !tbaa !138
  %next35 = getelementptr inbounds %struct._stritem, %struct._stritem* %44, i32 0, i32 0, !dbg !860
  %45 = load %struct._stritem*, %struct._stritem** %next35, align 8, !dbg !860, !tbaa !508
  %46 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !861, !tbaa !138
  %prev36 = getelementptr inbounds %struct._stritem, %struct._stritem* %46, i32 0, i32 1, !dbg !862
  %47 = load %struct._stritem*, %struct._stritem** %prev36, align 8, !dbg !862, !tbaa !467
  %next37 = getelementptr inbounds %struct._stritem, %struct._stritem* %47, i32 0, i32 0, !dbg !863
  %48 = bitcast %struct._stritem** %next37 to i8*, !dbg !864
  %49 = call i32 @cpavise_store_data_fileline(i8* %48, i64 8, i32 0, i32 333), !dbg !864
  store %struct._stritem* %45, %struct._stritem** %next37, align 8, !dbg !864, !tbaa !508
  br label %if.end38, !dbg !861

if.end38:                                         ; preds = %if.then34, %if.end31
  %50 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !865, !tbaa !138
  %slabs_clsid39 = getelementptr inbounds %struct._stritem, %struct._stritem* %50, i32 0, i32 9, !dbg !866
  %51 = load i8, i8* %slabs_clsid39, align 8, !dbg !866, !tbaa !488
  %idxprom40 = zext i8 %51 to i64, !dbg !867
  %arrayidx41 = getelementptr inbounds [255 x i32], [255 x i32]* @sizes, i64 0, i64 %idxprom40, !dbg !867
  %52 = load i32, i32* %arrayidx41, align 4, !dbg !868, !tbaa !186
  %dec = add i32 %52, -1, !dbg !868
  store i32 %dec, i32* %arrayidx41, align 4, !dbg !868, !tbaa !186
  %53 = bitcast %struct._stritem*** %tail to i8*, !dbg !869
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53) #9, !dbg !869
  %54 = bitcast %struct._stritem*** %head to i8*, !dbg !869
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %54) #9, !dbg !869
  ret void, !dbg !869
}

; Function Attrs: nounwind uwtable
define dso_local i32 @do_item_link(%struct._stritem* %it) #0 !dbg !870 {
entry:
  %it.addr = alloca %struct._stritem*, align 8
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !874, metadata !DIExpression()), !dbg !875
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !876, !tbaa !138
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 8, !dbg !876
  %1 = load i8, i8* %it_flags, align 1, !dbg !876, !tbaa !518
  %conv = zext i8 %1 to i32, !dbg !876
  %and = and i32 %conv, 5, !dbg !876
  %cmp = icmp eq i32 %and, 0, !dbg !876
  br i1 %cmp, label %if.then, label %if.else, !dbg !879

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !879

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 340, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.do_item_link, i64 0, i64 0)) #10, !dbg !876
  unreachable, !dbg !876

if.end:                                           ; preds = %if.then
  %2 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !880, !tbaa !138
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %2, i32 0, i32 5, !dbg !880
  %3 = bitcast i32* %nbytes to i8*, !dbg !880
  %4 = load i32, i32* %nbytes, align 8, !dbg !880, !tbaa !528
  %cmp2 = icmp slt i32 %4, 1048576, !dbg !880
  br i1 %cmp2, label %if.then4, label %if.else5, !dbg !883

if.then4:                                         ; preds = %if.end
  br label %if.end6, !dbg !883

if.else5:                                         ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 341, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.do_item_link, i64 0, i64 0)) #10, !dbg !880
  unreachable, !dbg !880

if.end6:                                          ; preds = %if.then4
  %5 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !884, !tbaa !138
  %it_flags7 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 8, !dbg !885
  %6 = load i8, i8* %it_flags7, align 1, !dbg !886, !tbaa !518
  %conv8 = zext i8 %6 to i32, !dbg !886
  %or = or i32 %conv8, 1, !dbg !886
  %conv9 = trunc i32 %or to i8, !dbg !886
  %7 = call i32 @cpavise_store_data_fileline(i8* %it_flags7, i64 1, i32 0, i32 342), !dbg !886
  store i8 %conv9, i8* %it_flags7, align 1, !dbg !886, !tbaa !518
  %8 = load volatile i32, i32* @current_time, align 4, !dbg !887, !tbaa !186
  %9 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !888, !tbaa !138
  %time = getelementptr inbounds %struct._stritem, %struct._stritem* %9, i32 0, i32 3, !dbg !889
  %10 = bitcast i32* %time to i8*, !dbg !890
  %11 = call i32 @cpavise_store_data_fileline(i8* %10, i64 4, i32 0, i32 343), !dbg !890
  store i32 %8, i32* %time, align 8, !dbg !890, !tbaa !891
  %12 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !892, !tbaa !138
  %call = call i32 @assoc_insert(%struct._stritem* %12), !dbg !893
  call void @mt_stats_lock(), !dbg !894
  %13 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !895, !tbaa !138
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %13, i32 0, i32 10, !dbg !895
  %14 = load i8, i8* %nkey, align 1, !dbg !895, !tbaa !523
  %conv10 = zext i8 %14 to i64, !dbg !895
  %add = add i64 120, %conv10, !dbg !895
  %add11 = add i64 %add, 1, !dbg !895
  %15 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !895, !tbaa !138
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %15, i32 0, i32 7, !dbg !895
  %16 = load i8, i8* %nsuffix, align 2, !dbg !895, !tbaa !544
  %conv12 = zext i8 %16 to i64, !dbg !895
  %add13 = add i64 %add11, %conv12, !dbg !895
  %17 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !895, !tbaa !138
  %nbytes14 = getelementptr inbounds %struct._stritem, %struct._stritem* %17, i32 0, i32 5, !dbg !895
  %18 = bitcast i32* %nbytes14 to i8*, !dbg !895
  %19 = load i32, i32* %nbytes14, align 8, !dbg !895, !tbaa !528
  %conv15 = sext i32 %19 to i64, !dbg !895
  %add16 = add i64 %add13, %conv15, !dbg !895
  %20 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2), align 8, !dbg !897, !tbaa !638
  %add17 = add i64 %20, %add16, !dbg !897
  %21 = call i32 @cpavise_store_data_fileline(i8* bitcast (i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2) to i8*), i64 8, i32 0, i32 349), !dbg !897
  store i64 %add17, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2), align 8, !dbg !897, !tbaa !638
  %22 = load i32, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 0), align 8, !dbg !898, !tbaa !640
  %add18 = add i32 %22, 1, !dbg !898
  store i32 %add18, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 0), align 8, !dbg !898, !tbaa !640
  %23 = load i32, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 1), align 4, !dbg !899, !tbaa !900
  %add19 = add i32 %23, 1, !dbg !899
  store i32 %add19, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 1), align 4, !dbg !899, !tbaa !900
  call void @mt_stats_unlock(), !dbg !901
  %call20 = call i64 @get_cas_id(), !dbg !902
  %24 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !903, !tbaa !138
  %cas_id = getelementptr inbounds %struct._stritem, %struct._stritem* %24, i32 0, i32 11, !dbg !904
  %25 = bitcast i64* %cas_id to i8*, !dbg !905
  %26 = call i32 @cpavise_store_data_fileline(i8* %25, i64 8, i32 0, i32 356), !dbg !905
  store i64 %call20, i64* %cas_id, align 8, !dbg !905, !tbaa !906
  %27 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !907, !tbaa !138
  call void @item_link_q(%struct._stritem* %27), !dbg !908
  ret i32 1, !dbg !909
}

declare !dbg !75 dso_local i32 @assoc_insert(%struct._stritem* %0) #5

declare !dbg !79 dso_local void @assoc_delete(i8* %0, i64 %1) #5

; Function Attrs: nounwind uwtable
define dso_local void @do_item_remove(%struct._stritem* %it) #0 !dbg !910 {
entry:
  %it.addr = alloca %struct._stritem*, align 8
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !912, metadata !DIExpression()), !dbg !913
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !914, !tbaa !138
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 8, !dbg !914
  %1 = load i8, i8* %it_flags, align 1, !dbg !914, !tbaa !518
  %conv = zext i8 %1 to i32, !dbg !914
  %and = and i32 %conv, 4, !dbg !914
  %cmp = icmp eq i32 %and, 0, !dbg !914
  br i1 %cmp, label %if.then, label %if.else, !dbg !917

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !917

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 381, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__PRETTY_FUNCTION__.do_item_remove, i64 0, i64 0)) #10, !dbg !914
  unreachable, !dbg !914

if.end:                                           ; preds = %if.then
  %2 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !918, !tbaa !138
  %refcount = getelementptr inbounds %struct._stritem, %struct._stritem* %2, i32 0, i32 6, !dbg !920
  %3 = bitcast i16* %refcount to i8*, !dbg !920
  %4 = load i16, i16* %refcount, align 4, !dbg !920, !tbaa !436
  %conv2 = zext i16 %4 to i32, !dbg !918
  %cmp3 = icmp ne i32 %conv2, 0, !dbg !921
  br i1 %cmp3, label %if.then5, label %if.end7, !dbg !922

if.then5:                                         ; preds = %if.end
  %5 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !923, !tbaa !138
  %refcount6 = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 6, !dbg !925
  %6 = bitcast i16* %refcount6 to i8*, !dbg !926
  %7 = load i16, i16* %refcount6, align 4, !dbg !926, !tbaa !436
  %dec = add i16 %7, -1, !dbg !926
  %8 = bitcast i16* %refcount6 to i8*, !dbg !926
  %9 = call i32 @cpavise_store_data_fileline(i8* %8, i64 2, i32 0, i32 383), !dbg !926
  store i16 %dec, i16* %refcount6, align 4, !dbg !926, !tbaa !436
  br label %while.cond, !dbg !927

while.cond:                                       ; preds = %while.body, %if.then5
  br i1 false, label %while.body, label %while.end, !dbg !927

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !927, !llvm.loop !928

while.end:                                        ; preds = %while.cond
  br label %if.end7, !dbg !930

if.end7:                                          ; preds = %while.end, %if.end
  %10 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !931, !tbaa !138
  %it_flags8 = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 8, !dbg !931
  %11 = load i8, i8* %it_flags8, align 1, !dbg !931, !tbaa !518
  %conv9 = zext i8 %11 to i32, !dbg !931
  %and10 = and i32 %conv9, 2, !dbg !931
  %cmp11 = icmp eq i32 %and10, 0, !dbg !931
  br i1 %cmp11, label %if.then17, label %lor.lhs.false, !dbg !931

lor.lhs.false:                                    ; preds = %if.end7
  %12 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !931, !tbaa !138
  %refcount13 = getelementptr inbounds %struct._stritem, %struct._stritem* %12, i32 0, i32 6, !dbg !931
  %13 = load i16, i16* %refcount13, align 4, !dbg !931, !tbaa !436
  %conv14 = zext i16 %13 to i32, !dbg !931
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !931
  br i1 %cmp15, label %if.then17, label %if.else18, !dbg !934

if.then17:                                        ; preds = %lor.lhs.false, %if.end7
  br label %if.end19, !dbg !934

if.else18:                                        ; preds = %lor.lhs.false
  call void @__assert_fail(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 386, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__PRETTY_FUNCTION__.do_item_remove, i64 0, i64 0)) #10, !dbg !931
  unreachable, !dbg !931

if.end19:                                         ; preds = %if.then17
  %14 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !935, !tbaa !138
  %refcount20 = getelementptr inbounds %struct._stritem, %struct._stritem* %14, i32 0, i32 6, !dbg !937
  %15 = load i16, i16* %refcount20, align 4, !dbg !937, !tbaa !436
  %conv21 = zext i16 %15 to i32, !dbg !935
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !938
  br i1 %cmp22, label %land.lhs.true, label %if.end30, !dbg !939

land.lhs.true:                                    ; preds = %if.end19
  %16 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !940, !tbaa !138
  %it_flags24 = getelementptr inbounds %struct._stritem, %struct._stritem* %16, i32 0, i32 8, !dbg !941
  %17 = load i8, i8* %it_flags24, align 1, !dbg !941, !tbaa !518
  %conv25 = zext i8 %17 to i32, !dbg !940
  %and26 = and i32 %conv25, 1, !dbg !942
  %cmp27 = icmp eq i32 %and26, 0, !dbg !943
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !944

if.then29:                                        ; preds = %land.lhs.true
  %18 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !945, !tbaa !138
  call void @item_free(%struct._stritem* %18), !dbg !947
  br label %if.end30, !dbg !948

if.end30:                                         ; preds = %if.then29, %land.lhs.true, %if.end19
  ret void, !dbg !949
}

; Function Attrs: nounwind uwtable
define dso_local void @do_item_update(%struct._stritem* %it) #0 !dbg !950 {
entry:
  %it.addr = alloca %struct._stritem*, align 8
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !952, metadata !DIExpression()), !dbg !953
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !954, !tbaa !138
  %time = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 3, !dbg !956
  %1 = bitcast i32* %time to i8*, !dbg !956
  %2 = load i32, i32* %time, align 8, !dbg !956, !tbaa !891
  %3 = load volatile i32, i32* @current_time, align 4, !dbg !957, !tbaa !186
  %sub = sub i32 %3, 60, !dbg !958
  %cmp = icmp ult i32 %2, %sub, !dbg !959
  br i1 %cmp, label %if.then, label %if.end12, !dbg !960

if.then:                                          ; preds = %entry
  %4 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !961, !tbaa !138
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %4, i32 0, i32 8, !dbg !961
  %5 = load i8, i8* %it_flags, align 1, !dbg !961, !tbaa !518
  %conv = zext i8 %5 to i32, !dbg !961
  %and = and i32 %conv, 4, !dbg !961
  %cmp1 = icmp eq i32 %and, 0, !dbg !961
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !965

if.then3:                                         ; preds = %if.then
  br label %if.end, !dbg !965

if.else:                                          ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 395, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__PRETTY_FUNCTION__.do_item_update, i64 0, i64 0)) #10, !dbg !961
  unreachable, !dbg !961

if.end:                                           ; preds = %if.then3
  %6 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !966, !tbaa !138
  %it_flags4 = getelementptr inbounds %struct._stritem, %struct._stritem* %6, i32 0, i32 8, !dbg !968
  %7 = load i8, i8* %it_flags4, align 1, !dbg !968, !tbaa !518
  %conv5 = zext i8 %7 to i32, !dbg !966
  %and6 = and i32 %conv5, 1, !dbg !969
  %cmp7 = icmp ne i32 %and6, 0, !dbg !970
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !971

if.then9:                                         ; preds = %if.end
  %8 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !972, !tbaa !138
  call void @item_unlink_q(%struct._stritem* %8), !dbg !974
  %9 = load volatile i32, i32* @current_time, align 4, !dbg !975, !tbaa !186
  %10 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !976, !tbaa !138
  %time10 = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 3, !dbg !977
  store i32 %9, i32* %time10, align 8, !dbg !978, !tbaa !891
  %11 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !979, !tbaa !138
  call void @item_link_q(%struct._stritem* %11), !dbg !980
  br label %if.end11, !dbg !981

if.end11:                                         ; preds = %if.then9, %if.end
  br label %if.end12, !dbg !982

if.end12:                                         ; preds = %if.end11, %entry
  ret void, !dbg !983
}

; Function Attrs: nounwind uwtable
define dso_local i32 @do_item_replace(%struct._stritem* %it, %struct._stritem* %new_it) #0 !dbg !984 {
entry:
  %it.addr = alloca %struct._stritem*, align 8
  %new_it.addr = alloca %struct._stritem*, align 8
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !988, metadata !DIExpression()), !dbg !990
  store %struct._stritem* %new_it, %struct._stritem** %new_it.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata %struct._stritem** %new_it.addr, metadata !989, metadata !DIExpression()), !dbg !991
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !992, !tbaa !138
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 8, !dbg !992
  %1 = load i8, i8* %it_flags, align 1, !dbg !992, !tbaa !518
  %conv = zext i8 %1 to i32, !dbg !992
  %and = and i32 %conv, 4, !dbg !992
  %cmp = icmp eq i32 %and, 0, !dbg !992
  br i1 %cmp, label %if.then, label %if.else, !dbg !995

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !995

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 407, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.do_item_replace, i64 0, i64 0)) #10, !dbg !992
  unreachable, !dbg !992

if.end:                                           ; preds = %if.then
  %2 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !996, !tbaa !138
  call void @do_item_unlink(%struct._stritem* %2), !dbg !997
  %3 = load %struct._stritem*, %struct._stritem** %new_it.addr, align 8, !dbg !998, !tbaa !138
  %call = call i32 @do_item_link(%struct._stritem* %3), !dbg !999
  ret i32 %call, !dbg !1000
}

; Function Attrs: nounwind uwtable
define dso_local i8* @do_item_cachedump(i32 %slabs_clsid, i32 %limit, i32* %bytes) #0 !dbg !1001 {
entry:
  %retval = alloca i8*, align 8
  %slabs_clsid.addr = alloca i32, align 4
  %limit.addr = alloca i32, align 4
  %bytes.addr = alloca i32*, align 8
  %memlimit = alloca i32, align 4
  %buffer = alloca i8*, align 8
  %bufcurr = alloca i32, align 4
  %it = alloca %struct._stritem*, align 8
  %len = alloca i32, align 4
  %shown = alloca i32, align 4
  %temp = alloca [512 x i8], align 16
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %slabs_clsid, i32* %slabs_clsid.addr, align 4, !tbaa !186
  call void @llvm.dbg.declare(metadata i32* %slabs_clsid.addr, metadata !1006, metadata !DIExpression()), !dbg !1019
  store i32 %limit, i32* %limit.addr, align 4, !tbaa !186
  call void @llvm.dbg.declare(metadata i32* %limit.addr, metadata !1007, metadata !DIExpression()), !dbg !1020
  store i32* %bytes, i32** %bytes.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata i32** %bytes.addr, metadata !1008, metadata !DIExpression()), !dbg !1021
  %0 = bitcast i32* %memlimit to i8*, !dbg !1022
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9, !dbg !1022
  call void @llvm.dbg.declare(metadata i32* %memlimit, metadata !1009, metadata !DIExpression()), !dbg !1023
  store i32 2097152, i32* %memlimit, align 4, !dbg !1023, !tbaa !186
  %1 = bitcast i8** %buffer to i8*, !dbg !1024
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9, !dbg !1024
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !1010, metadata !DIExpression()), !dbg !1025
  %2 = bitcast i32* %bufcurr to i8*, !dbg !1026
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #9, !dbg !1026
  call void @llvm.dbg.declare(metadata i32* %bufcurr, metadata !1011, metadata !DIExpression()), !dbg !1027
  %3 = bitcast %struct._stritem** %it to i8*, !dbg !1028
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #9, !dbg !1028
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !1012, metadata !DIExpression()), !dbg !1029
  %4 = bitcast i32* %len to i8*, !dbg !1030
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #9, !dbg !1030
  call void @llvm.dbg.declare(metadata i32* %len, metadata !1013, metadata !DIExpression()), !dbg !1031
  %5 = bitcast i32* %shown to i8*, !dbg !1032
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #9, !dbg !1032
  call void @llvm.dbg.declare(metadata i32* %shown, metadata !1014, metadata !DIExpression()), !dbg !1033
  store i32 0, i32* %shown, align 4, !dbg !1033, !tbaa !186
  %6 = bitcast [512 x i8]* %temp to i8*, !dbg !1034
  call void @llvm.lifetime.start.p0i8(i64 512, i8* %6) #9, !dbg !1034
  call void @llvm.dbg.declare(metadata [512 x i8]* %temp, metadata !1015, metadata !DIExpression()), !dbg !1035
  %7 = load i32, i32* %slabs_clsid.addr, align 4, !dbg !1036, !tbaa !186
  %cmp = icmp ugt i32 %7, 255, !dbg !1038
  br i1 %cmp, label %if.then, label %if.end, !dbg !1039

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !1040
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1040

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %slabs_clsid.addr, align 4, !dbg !1041, !tbaa !186
  %idxprom = zext i32 %8 to i64, !dbg !1042
  %arrayidx = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @heads, i64 0, i64 %idxprom, !dbg !1042
  %9 = load %struct._stritem*, %struct._stritem** %arrayidx, align 8, !dbg !1042, !tbaa !138
  store %struct._stritem* %9, %struct._stritem** %it, align 8, !dbg !1043, !tbaa !138
  %10 = load i32, i32* %memlimit, align 4, !dbg !1044, !tbaa !186
  %conv = zext i32 %10 to i64, !dbg !1045
  %call = call noalias i8* @malloc(i64 %conv) #9, !dbg !1046
  store i8* %call, i8** %buffer, align 8, !dbg !1047, !tbaa !138
  %11 = load i8*, i8** %buffer, align 8, !dbg !1048, !tbaa !138
  %cmp1 = icmp eq i8* %11, null, !dbg !1050
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !1051

if.then3:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !1052
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1052

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %bufcurr, align 4, !dbg !1053, !tbaa !186
  br label %while.cond, !dbg !1054

while.cond:                                       ; preds = %if.end19, %if.end4
  %12 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1055, !tbaa !138
  %cmp5 = icmp ne %struct._stritem* %12, null, !dbg !1056
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !1057

land.rhs:                                         ; preds = %while.cond
  %13 = load i32, i32* %limit.addr, align 4, !dbg !1058, !tbaa !186
  %cmp7 = icmp eq i32 %13, 0, !dbg !1059
  br i1 %cmp7, label %lor.end, label %lor.rhs, !dbg !1060

lor.rhs:                                          ; preds = %land.rhs
  %14 = load i32, i32* %shown, align 4, !dbg !1061, !tbaa !186
  %15 = load i32, i32* %limit.addr, align 4, !dbg !1062, !tbaa !186
  %cmp9 = icmp ult i32 %14, %15, !dbg !1063
  br label %lor.end, !dbg !1060

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %16 = phi i1 [ true, %land.rhs ], [ %cmp9, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %17 = phi i1 [ false, %while.cond ], [ %16, %lor.end ], !dbg !1064
  br i1 %17, label %while.body, label %while.end, !dbg !1054

while.body:                                       ; preds = %land.end
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %temp, i64 0, i64 0, !dbg !1065
  %18 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1067, !tbaa !138
  %end = getelementptr inbounds %struct._stritem, %struct._stritem* %18, i32 0, i32 12, !dbg !1067
  %arrayidx11 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end, i64 0, i64 0, !dbg !1067
  %19 = bitcast i8** %arrayidx11 to i8*, !dbg !1067
  %20 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1068, !tbaa !138
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 5, !dbg !1069
  %21 = load i32, i32* %nbytes, align 8, !dbg !1069, !tbaa !528
  %sub = sub nsw i32 %21, 2, !dbg !1070
  %22 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1071, !tbaa !138
  %exptime = getelementptr inbounds %struct._stritem, %struct._stritem* %22, i32 0, i32 4, !dbg !1072
  %23 = load i32, i32* %exptime, align 4, !dbg !1072, !tbaa !445
  %conv12 = zext i32 %23 to i64, !dbg !1071
  %24 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 11), align 8, !dbg !1073, !tbaa !1074
  %add = add nsw i64 %conv12, %24, !dbg !1075
  %call13 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 512, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.17, i64 0, i64 0), i8* %19, i32 %sub, i64 %add) #9, !dbg !1076
  store i32 %call13, i32* %len, align 4, !dbg !1077, !tbaa !186
  %25 = load i32, i32* %bufcurr, align 4, !dbg !1078, !tbaa !186
  %26 = load i32, i32* %len, align 4, !dbg !1080, !tbaa !186
  %add14 = add i32 %25, %26, !dbg !1081
  %add15 = add i32 %add14, 6, !dbg !1082
  %27 = load i32, i32* %memlimit, align 4, !dbg !1083, !tbaa !186
  %cmp16 = icmp ugt i32 %add15, %27, !dbg !1084
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !1085

if.then18:                                        ; preds = %while.body
  br label %while.end, !dbg !1086

if.end19:                                         ; preds = %while.body
  %28 = load i8*, i8** %buffer, align 8, !dbg !1087, !tbaa !138
  %29 = load i32, i32* %bufcurr, align 4, !dbg !1088, !tbaa !186
  %idx.ext = zext i32 %29 to i64, !dbg !1089
  %add.ptr = getelementptr inbounds i8, i8* %28, i64 %idx.ext, !dbg !1089
  %arraydecay20 = getelementptr inbounds [512 x i8], [512 x i8]* %temp, i64 0, i64 0, !dbg !1090
  %call21 = call i8* @strcpy(i8* %add.ptr, i8* %arraydecay20) #9, !dbg !1091
  %30 = load i32, i32* %len, align 4, !dbg !1092, !tbaa !186
  %31 = load i32, i32* %bufcurr, align 4, !dbg !1093, !tbaa !186
  %add22 = add i32 %31, %30, !dbg !1093
  store i32 %add22, i32* %bufcurr, align 4, !dbg !1093, !tbaa !186
  %32 = load i32, i32* %shown, align 4, !dbg !1094, !tbaa !186
  %inc = add i32 %32, 1, !dbg !1094
  store i32 %inc, i32* %shown, align 4, !dbg !1094, !tbaa !186
  %33 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1095, !tbaa !138
  %next = getelementptr inbounds %struct._stritem, %struct._stritem* %33, i32 0, i32 0, !dbg !1096
  %34 = load %struct._stritem*, %struct._stritem** %next, align 8, !dbg !1096, !tbaa !508
  store %struct._stritem* %34, %struct._stritem** %it, align 8, !dbg !1097, !tbaa !138
  br label %while.cond, !dbg !1054, !llvm.loop !1098

while.end:                                        ; preds = %if.then18, %land.end
  %35 = load i8*, i8** %buffer, align 8, !dbg !1100, !tbaa !138
  %36 = load i32, i32* %bufcurr, align 4, !dbg !1101, !tbaa !186
  %idx.ext23 = zext i32 %36 to i64, !dbg !1102
  %add.ptr24 = getelementptr inbounds i8, i8* %35, i64 %idx.ext23, !dbg !1102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr24, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i64 6, i1 false), !dbg !1103
  %37 = load i32, i32* %bufcurr, align 4, !dbg !1104, !tbaa !186
  %add25 = add i32 %37, 5, !dbg !1104
  store i32 %add25, i32* %bufcurr, align 4, !dbg !1104, !tbaa !186
  %38 = load i32, i32* %bufcurr, align 4, !dbg !1105, !tbaa !186
  %39 = load i32*, i32** %bytes.addr, align 8, !dbg !1106, !tbaa !138
  store i32 %38, i32* %39, align 4, !dbg !1107, !tbaa !186
  %40 = load i8*, i8** %buffer, align 8, !dbg !1108, !tbaa !138
  store i8* %40, i8** %retval, align 8, !dbg !1109
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1109

cleanup:                                          ; preds = %while.end, %if.then3, %if.then
  %41 = bitcast [512 x i8]* %temp to i8*, !dbg !1110
  call void @llvm.lifetime.end.p0i8(i64 512, i8* %41) #9, !dbg !1110
  %42 = bitcast i32* %shown to i8*, !dbg !1110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %42) #9, !dbg !1110
  %43 = bitcast i32* %len to i8*, !dbg !1110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %43) #9, !dbg !1110
  %44 = bitcast %struct._stritem** %it to i8*, !dbg !1110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #9, !dbg !1110
  %45 = bitcast i32* %bufcurr to i8*, !dbg !1110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %45) #9, !dbg !1110
  %46 = bitcast i8** %buffer to i8*, !dbg !1110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #9, !dbg !1110
  %47 = bitcast i32* %memlimit to i8*, !dbg !1110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %47) #9, !dbg !1110
  %48 = load i8*, i8** %retval, align 8, !dbg !1110
  ret i8* %48, !dbg !1110
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64 %0) #4

; Function Attrs: nounwind uwtable
define dso_local i8* @do_item_stats(i32* %bytes) #0 !dbg !1111 {
entry:
  %retval = alloca i8*, align 8
  %bytes.addr = alloca i32*, align 8
  %bufleft = alloca i64, align 8
  %buffer = alloca i8*, align 8
  %bufcurr = alloca i8*, align 8
  %now = alloca i32, align 4
  %i = alloca i32, align 4
  %linelen = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store i32* %bytes, i32** %bytes.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata i32** %bytes.addr, metadata !1116, metadata !DIExpression()), !dbg !1123
  %0 = bitcast i64* %bufleft to i8*, !dbg !1124
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9, !dbg !1124
  call void @llvm.dbg.declare(metadata i64* %bufleft, metadata !1117, metadata !DIExpression()), !dbg !1125
  store i64 20400, i64* %bufleft, align 8, !dbg !1125, !tbaa !143
  %1 = bitcast i8** %buffer to i8*, !dbg !1126
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9, !dbg !1126
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !1118, metadata !DIExpression()), !dbg !1127
  %2 = load i64, i64* %bufleft, align 8, !dbg !1128, !tbaa !143
  %call = call noalias i8* @malloc(i64 %2) #9, !dbg !1129
  store i8* %call, i8** %buffer, align 8, !dbg !1127, !tbaa !138
  %3 = bitcast i8** %bufcurr to i8*, !dbg !1130
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #9, !dbg !1130
  call void @llvm.dbg.declare(metadata i8** %bufcurr, metadata !1119, metadata !DIExpression()), !dbg !1131
  %4 = load i8*, i8** %buffer, align 8, !dbg !1132, !tbaa !138
  store i8* %4, i8** %bufcurr, align 8, !dbg !1131, !tbaa !138
  %5 = bitcast i32* %now to i8*, !dbg !1133
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #9, !dbg !1133
  call void @llvm.dbg.declare(metadata i32* %now, metadata !1120, metadata !DIExpression()), !dbg !1134
  %6 = load volatile i32, i32* @current_time, align 4, !dbg !1135, !tbaa !186
  store i32 %6, i32* %now, align 4, !dbg !1134, !tbaa !186
  %7 = bitcast i32* %i to i8*, !dbg !1136
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #9, !dbg !1136
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1121, metadata !DIExpression()), !dbg !1137
  %8 = bitcast i32* %linelen to i8*, !dbg !1138
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #9, !dbg !1138
  call void @llvm.dbg.declare(metadata i32* %linelen, metadata !1122, metadata !DIExpression()), !dbg !1139
  %9 = load i8*, i8** %buffer, align 8, !dbg !1140, !tbaa !138
  %cmp = icmp eq i8* %9, null, !dbg !1142
  br i1 %cmp, label %if.then, label %if.end, !dbg !1143

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !1144
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1144

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !1146, !tbaa !186
  br label %for.cond, !dbg !1148

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !1149, !tbaa !186
  %cmp1 = icmp slt i32 %10, 255, !dbg !1151
  br i1 %cmp1, label %for.body, label %for.end, !dbg !1152

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !1153, !tbaa !186
  %idxprom = sext i32 %11 to i64, !dbg !1156
  %arrayidx = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @tails, i64 0, i64 %idxprom, !dbg !1156
  %12 = load %struct._stritem*, %struct._stritem** %arrayidx, align 8, !dbg !1156, !tbaa !138
  %cmp2 = icmp ne %struct._stritem* %12, null, !dbg !1157
  br i1 %cmp2, label %if.then3, label %if.end15, !dbg !1158

if.then3:                                         ; preds = %for.body
  %13 = load i8*, i8** %bufcurr, align 8, !dbg !1159, !tbaa !138
  %14 = load i64, i64* %bufleft, align 8, !dbg !1161, !tbaa !143
  %15 = load i32, i32* %i, align 4, !dbg !1162, !tbaa !186
  %16 = load i32, i32* %i, align 4, !dbg !1163, !tbaa !186
  %idxprom4 = sext i32 %16 to i64, !dbg !1164
  %arrayidx5 = getelementptr inbounds [255 x i32], [255 x i32]* @sizes, i64 0, i64 %idxprom4, !dbg !1164
  %17 = load i32, i32* %arrayidx5, align 4, !dbg !1164, !tbaa !186
  %18 = load i32, i32* %i, align 4, !dbg !1165, !tbaa !186
  %19 = load i32, i32* %now, align 4, !dbg !1166, !tbaa !186
  %20 = load i32, i32* %i, align 4, !dbg !1167, !tbaa !186
  %idxprom6 = sext i32 %20 to i64, !dbg !1168
  %arrayidx7 = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @tails, i64 0, i64 %idxprom6, !dbg !1168
  %21 = load %struct._stritem*, %struct._stritem** %arrayidx7, align 8, !dbg !1168, !tbaa !138
  %time = getelementptr inbounds %struct._stritem, %struct._stritem* %21, i32 0, i32 3, !dbg !1169
  %22 = load i32, i32* %time, align 8, !dbg !1169, !tbaa !891
  %sub = sub i32 %19, %22, !dbg !1170
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %13, i64 %14, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19, i64 0, i64 0), i32 %15, i32 %17, i32 %18, i32 %sub) #9, !dbg !1171
  store i32 %call8, i32* %linelen, align 4, !dbg !1172, !tbaa !186
  %23 = load i32, i32* %linelen, align 4, !dbg !1173, !tbaa !186
  %conv = sext i32 %23 to i64, !dbg !1173
  %add = add i64 %conv, 6, !dbg !1175
  %24 = load i64, i64* %bufleft, align 8, !dbg !1176, !tbaa !143
  %cmp9 = icmp ult i64 %add, %24, !dbg !1177
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !1178

if.then11:                                        ; preds = %if.then3
  %25 = load i32, i32* %linelen, align 4, !dbg !1179, !tbaa !186
  %26 = load i8*, i8** %bufcurr, align 8, !dbg !1181, !tbaa !138
  %idx.ext = sext i32 %25 to i64, !dbg !1181
  %add.ptr = getelementptr inbounds i8, i8* %26, i64 %idx.ext, !dbg !1181
  store i8* %add.ptr, i8** %bufcurr, align 8, !dbg !1181, !tbaa !138
  %27 = load i32, i32* %linelen, align 4, !dbg !1182, !tbaa !186
  %conv12 = sext i32 %27 to i64, !dbg !1182
  %28 = load i64, i64* %bufleft, align 8, !dbg !1183, !tbaa !143
  %sub13 = sub i64 %28, %conv12, !dbg !1183
  store i64 %sub13, i64* %bufleft, align 8, !dbg !1183, !tbaa !143
  br label %if.end14, !dbg !1184

if.else:                                          ; preds = %if.then3
  br label %for.end, !dbg !1185

if.end14:                                         ; preds = %if.then11
  br label %if.end15, !dbg !1187

if.end15:                                         ; preds = %if.end14, %for.body
  br label %for.inc, !dbg !1188

for.inc:                                          ; preds = %if.end15
  %29 = load i32, i32* %i, align 4, !dbg !1189, !tbaa !186
  %inc = add nsw i32 %29, 1, !dbg !1189
  store i32 %inc, i32* %i, align 4, !dbg !1189, !tbaa !186
  br label %for.cond, !dbg !1190, !llvm.loop !1191

for.end:                                          ; preds = %if.else, %for.cond
  %30 = load i8*, i8** %bufcurr, align 8, !dbg !1193, !tbaa !138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i64 6, i1 false), !dbg !1194
  %31 = load i8*, i8** %bufcurr, align 8, !dbg !1195, !tbaa !138
  %add.ptr16 = getelementptr inbounds i8, i8* %31, i64 5, !dbg !1195
  store i8* %add.ptr16, i8** %bufcurr, align 8, !dbg !1195, !tbaa !138
  %32 = load i8*, i8** %bufcurr, align 8, !dbg !1196, !tbaa !138
  %33 = load i8*, i8** %buffer, align 8, !dbg !1197, !tbaa !138
  %sub.ptr.lhs.cast = ptrtoint i8* %32 to i64, !dbg !1198
  %sub.ptr.rhs.cast = ptrtoint i8* %33 to i64, !dbg !1198
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1198
  %conv17 = trunc i64 %sub.ptr.sub to i32, !dbg !1196
  %34 = load i32*, i32** %bytes.addr, align 8, !dbg !1199, !tbaa !138
  store i32 %conv17, i32* %34, align 4, !dbg !1200, !tbaa !186
  %35 = load i8*, i8** %buffer, align 8, !dbg !1201, !tbaa !138
  store i8* %35, i8** %retval, align 8, !dbg !1202
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1202

cleanup:                                          ; preds = %for.end, %if.then
  %36 = bitcast i32* %linelen to i8*, !dbg !1203
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %36) #9, !dbg !1203
  %37 = bitcast i32* %i to i8*, !dbg !1203
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %37) #9, !dbg !1203
  %38 = bitcast i32* %now to i8*, !dbg !1203
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %38) #9, !dbg !1203
  %39 = bitcast i8** %bufcurr to i8*, !dbg !1203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #9, !dbg !1203
  %40 = bitcast i8** %buffer to i8*, !dbg !1203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #9, !dbg !1203
  %41 = bitcast i64* %bufleft to i8*, !dbg !1203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %41) #9, !dbg !1203
  %42 = load i8*, i8** %retval, align 8, !dbg !1203
  ret i8* %42, !dbg !1203
}

; Function Attrs: nounwind uwtable
define dso_local i8* @do_item_stats_sizes(i32* %bytes) #0 !dbg !1204 {
entry:
  %retval = alloca i8*, align 8
  %bytes.addr = alloca i32*, align 8
  %num_buckets = alloca i32, align 4
  %histogram = alloca i32*, align 8
  %buf = alloca i8*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %iter = alloca %struct._stritem*, align 8
  %ntotal = alloca i32, align 4
  %bucket = alloca i32, align 4
  store i32* %bytes, i32** %bytes.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata i32** %bytes.addr, metadata !1206, metadata !DIExpression()), !dbg !1218
  %0 = bitcast i32* %num_buckets to i8*, !dbg !1219
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9, !dbg !1219
  call void @llvm.dbg.declare(metadata i32* %num_buckets, metadata !1207, metadata !DIExpression()), !dbg !1220
  store i32 32768, i32* %num_buckets, align 4, !dbg !1220, !tbaa !186
  %1 = bitcast i32** %histogram to i8*, !dbg !1221
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9, !dbg !1221
  call void @llvm.dbg.declare(metadata i32** %histogram, metadata !1208, metadata !DIExpression()), !dbg !1222
  %call = call noalias i8* @malloc(i64 131072) #9, !dbg !1223
  %2 = bitcast i8* %call to i32*, !dbg !1224
  store i32* %2, i32** %histogram, align 8, !dbg !1222, !tbaa !138
  %3 = bitcast i8** %buf to i8*, !dbg !1225
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #9, !dbg !1225
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !1209, metadata !DIExpression()), !dbg !1226
  %call1 = call noalias i8* @malloc(i64 2097152) #9, !dbg !1227
  store i8* %call1, i8** %buf, align 8, !dbg !1226, !tbaa !138
  %4 = bitcast i32* %i to i8*, !dbg !1228
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #9, !dbg !1228
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1210, metadata !DIExpression()), !dbg !1229
  %5 = load i32*, i32** %histogram, align 8, !dbg !1230, !tbaa !138
  %cmp = icmp eq i32* %5, null, !dbg !1232
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1233

lor.lhs.false:                                    ; preds = %entry
  %6 = load i8*, i8** %buf, align 8, !dbg !1234, !tbaa !138
  %cmp2 = icmp eq i8* %6, null, !dbg !1235
  br i1 %cmp2, label %if.then, label %if.end7, !dbg !1236

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load i32*, i32** %histogram, align 8, !dbg !1237, !tbaa !138
  %tobool = icmp ne i32* %7, null, !dbg !1237
  br i1 %tobool, label %if.then3, label %if.end, !dbg !1240

if.then3:                                         ; preds = %if.then
  %8 = load i32*, i32** %histogram, align 8, !dbg !1241, !tbaa !138
  %9 = bitcast i32* %8 to i8*, !dbg !1241
  call void @free(i8* %9) #9, !dbg !1242
  br label %if.end, !dbg !1242

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load i8*, i8** %buf, align 8, !dbg !1243, !tbaa !138
  %tobool4 = icmp ne i8* %10, null, !dbg !1243
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !1245

if.then5:                                         ; preds = %if.end
  %11 = load i8*, i8** %buf, align 8, !dbg !1246, !tbaa !138
  call void @free(i8* %11) #9, !dbg !1247
  br label %if.end6, !dbg !1247

if.end6:                                          ; preds = %if.then5, %if.end
  store i8* null, i8** %retval, align 8, !dbg !1248
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1248

if.end7:                                          ; preds = %lor.lhs.false
  %12 = load i32*, i32** %histogram, align 8, !dbg !1249, !tbaa !138
  %13 = bitcast i32* %12 to i8*, !dbg !1250
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 131072, i1 false), !dbg !1250
  store i32 0, i32* %i, align 4, !dbg !1251, !tbaa !186
  br label %for.cond, !dbg !1252

for.cond:                                         ; preds = %for.inc, %if.end7
  %14 = load i32, i32* %i, align 4, !dbg !1253, !tbaa !186
  %cmp8 = icmp slt i32 %14, 255, !dbg !1254
  br i1 %cmp8, label %for.body, label %for.end, !dbg !1255

for.body:                                         ; preds = %for.cond
  %15 = bitcast %struct._stritem** %iter to i8*, !dbg !1256
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #9, !dbg !1256
  call void @llvm.dbg.declare(metadata %struct._stritem** %iter, metadata !1211, metadata !DIExpression()), !dbg !1257
  %16 = load i32, i32* %i, align 4, !dbg !1258, !tbaa !186
  %idxprom = sext i32 %16 to i64, !dbg !1259
  %arrayidx = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @heads, i64 0, i64 %idxprom, !dbg !1259
  %17 = load %struct._stritem*, %struct._stritem** %arrayidx, align 8, !dbg !1259, !tbaa !138
  store %struct._stritem* %17, %struct._stritem** %iter, align 8, !dbg !1257, !tbaa !138
  br label %while.cond, !dbg !1260

while.cond:                                       ; preds = %if.end26, %for.body
  %18 = load %struct._stritem*, %struct._stritem** %iter, align 8, !dbg !1261, !tbaa !138
  %tobool9 = icmp ne %struct._stritem* %18, null, !dbg !1260
  br i1 %tobool9, label %while.body, label %while.end, !dbg !1260

while.body:                                       ; preds = %while.cond
  %19 = bitcast i32* %ntotal to i8*, !dbg !1262
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #9, !dbg !1262
  call void @llvm.dbg.declare(metadata i32* %ntotal, metadata !1215, metadata !DIExpression()), !dbg !1263
  %20 = load %struct._stritem*, %struct._stritem** %iter, align 8, !dbg !1264, !tbaa !138
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 10, !dbg !1264
  %21 = load i8, i8* %nkey, align 1, !dbg !1264, !tbaa !523
  %conv = zext i8 %21 to i64, !dbg !1264
  %add = add i64 120, %conv, !dbg !1264
  %add10 = add i64 %add, 1, !dbg !1264
  %22 = load %struct._stritem*, %struct._stritem** %iter, align 8, !dbg !1264, !tbaa !138
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %22, i32 0, i32 7, !dbg !1264
  %23 = load i8, i8* %nsuffix, align 2, !dbg !1264, !tbaa !544
  %conv11 = zext i8 %23 to i64, !dbg !1264
  %add12 = add i64 %add10, %conv11, !dbg !1264
  %24 = load %struct._stritem*, %struct._stritem** %iter, align 8, !dbg !1264, !tbaa !138
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %24, i32 0, i32 5, !dbg !1264
  %25 = load i32, i32* %nbytes, align 8, !dbg !1264, !tbaa !528
  %conv13 = sext i32 %25 to i64, !dbg !1264
  %add14 = add i64 %add12, %conv13, !dbg !1264
  %conv15 = trunc i64 %add14 to i32, !dbg !1264
  store i32 %conv15, i32* %ntotal, align 4, !dbg !1263, !tbaa !186
  %26 = bitcast i32* %bucket to i8*, !dbg !1265
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #9, !dbg !1265
  call void @llvm.dbg.declare(metadata i32* %bucket, metadata !1217, metadata !DIExpression()), !dbg !1266
  %27 = load i32, i32* %ntotal, align 4, !dbg !1267, !tbaa !186
  %div = sdiv i32 %27, 32, !dbg !1268
  store i32 %div, i32* %bucket, align 4, !dbg !1266, !tbaa !186
  %28 = load i32, i32* %ntotal, align 4, !dbg !1269, !tbaa !186
  %rem = srem i32 %28, 32, !dbg !1271
  %cmp16 = icmp ne i32 %rem, 0, !dbg !1272
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !1273

if.then18:                                        ; preds = %while.body
  %29 = load i32, i32* %bucket, align 4, !dbg !1274, !tbaa !186
  %inc = add nsw i32 %29, 1, !dbg !1274
  store i32 %inc, i32* %bucket, align 4, !dbg !1274, !tbaa !186
  br label %if.end19, !dbg !1275

if.end19:                                         ; preds = %if.then18, %while.body
  %30 = load i32, i32* %bucket, align 4, !dbg !1276, !tbaa !186
  %cmp20 = icmp slt i32 %30, 32768, !dbg !1278
  br i1 %cmp20, label %if.then22, label %if.end26, !dbg !1279

if.then22:                                        ; preds = %if.end19
  %31 = load i32*, i32** %histogram, align 8, !dbg !1280, !tbaa !138
  %32 = load i32, i32* %bucket, align 4, !dbg !1281, !tbaa !186
  %idxprom23 = sext i32 %32 to i64, !dbg !1280
  %arrayidx24 = getelementptr inbounds i32, i32* %31, i64 %idxprom23, !dbg !1280
  %33 = load i32, i32* %arrayidx24, align 4, !dbg !1282, !tbaa !186
  %inc25 = add i32 %33, 1, !dbg !1282
  store i32 %inc25, i32* %arrayidx24, align 4, !dbg !1282, !tbaa !186
  br label %if.end26, !dbg !1280

if.end26:                                         ; preds = %if.then22, %if.end19
  %34 = load %struct._stritem*, %struct._stritem** %iter, align 8, !dbg !1283, !tbaa !138
  %next = getelementptr inbounds %struct._stritem, %struct._stritem* %34, i32 0, i32 0, !dbg !1284
  %35 = load %struct._stritem*, %struct._stritem** %next, align 8, !dbg !1284, !tbaa !508
  store %struct._stritem* %35, %struct._stritem** %iter, align 8, !dbg !1285, !tbaa !138
  %36 = bitcast i32* %bucket to i8*, !dbg !1286
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %36) #9, !dbg !1286
  %37 = bitcast i32* %ntotal to i8*, !dbg !1286
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %37) #9, !dbg !1286
  br label %while.cond, !dbg !1260, !llvm.loop !1287

while.end:                                        ; preds = %while.cond
  %38 = bitcast %struct._stritem** %iter to i8*, !dbg !1288
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #9, !dbg !1288
  br label %for.inc, !dbg !1289

for.inc:                                          ; preds = %while.end
  %39 = load i32, i32* %i, align 4, !dbg !1290, !tbaa !186
  %inc27 = add nsw i32 %39, 1, !dbg !1290
  store i32 %inc27, i32* %i, align 4, !dbg !1290, !tbaa !186
  br label %for.cond, !dbg !1291, !llvm.loop !1292

for.end:                                          ; preds = %for.cond
  %40 = load i32*, i32** %bytes.addr, align 8, !dbg !1294, !tbaa !138
  store i32 0, i32* %40, align 4, !dbg !1295, !tbaa !186
  store i32 0, i32* %i, align 4, !dbg !1296, !tbaa !186
  br label %for.cond28, !dbg !1298

for.cond28:                                       ; preds = %for.inc44, %for.end
  %41 = load i32, i32* %i, align 4, !dbg !1299, !tbaa !186
  %cmp29 = icmp slt i32 %41, 32768, !dbg !1301
  br i1 %cmp29, label %for.body31, label %for.end46, !dbg !1302

for.body31:                                       ; preds = %for.cond28
  %42 = load i32*, i32** %histogram, align 8, !dbg !1303, !tbaa !138
  %43 = load i32, i32* %i, align 4, !dbg !1306, !tbaa !186
  %idxprom32 = sext i32 %43 to i64, !dbg !1303
  %arrayidx33 = getelementptr inbounds i32, i32* %42, i64 %idxprom32, !dbg !1303
  %44 = load i32, i32* %arrayidx33, align 4, !dbg !1303, !tbaa !186
  %cmp34 = icmp ne i32 %44, 0, !dbg !1307
  br i1 %cmp34, label %if.then36, label %if.end43, !dbg !1308

if.then36:                                        ; preds = %for.body31
  %45 = load i8*, i8** %buf, align 8, !dbg !1309, !tbaa !138
  %46 = load i32*, i32** %bytes.addr, align 8, !dbg !1311, !tbaa !138
  %47 = load i32, i32* %46, align 4, !dbg !1312, !tbaa !186
  %idxprom37 = sext i32 %47 to i64, !dbg !1309
  %arrayidx38 = getelementptr inbounds i8, i8* %45, i64 %idxprom37, !dbg !1309
  %48 = load i32, i32* %i, align 4, !dbg !1313, !tbaa !186
  %mul = mul nsw i32 %48, 32, !dbg !1314
  %49 = load i32*, i32** %histogram, align 8, !dbg !1315, !tbaa !138
  %50 = load i32, i32* %i, align 4, !dbg !1316, !tbaa !186
  %idxprom39 = sext i32 %50 to i64, !dbg !1315
  %arrayidx40 = getelementptr inbounds i32, i32* %49, i64 %idxprom39, !dbg !1315
  %51 = load i32, i32* %arrayidx40, align 4, !dbg !1315, !tbaa !186
  %call41 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i32 %mul, i32 %51) #9, !dbg !1317
  %52 = load i32*, i32** %bytes.addr, align 8, !dbg !1318, !tbaa !138
  %53 = load i32, i32* %52, align 4, !dbg !1319, !tbaa !186
  %add42 = add nsw i32 %53, %call41, !dbg !1319
  store i32 %add42, i32* %52, align 4, !dbg !1319, !tbaa !186
  br label %if.end43, !dbg !1320

if.end43:                                         ; preds = %if.then36, %for.body31
  br label %for.inc44, !dbg !1321

for.inc44:                                        ; preds = %if.end43
  %54 = load i32, i32* %i, align 4, !dbg !1322, !tbaa !186
  %inc45 = add nsw i32 %54, 1, !dbg !1322
  store i32 %inc45, i32* %i, align 4, !dbg !1322, !tbaa !186
  br label %for.cond28, !dbg !1323, !llvm.loop !1324

for.end46:                                        ; preds = %for.cond28
  %55 = load i8*, i8** %buf, align 8, !dbg !1326, !tbaa !138
  %56 = load i32*, i32** %bytes.addr, align 8, !dbg !1327, !tbaa !138
  %57 = load i32, i32* %56, align 4, !dbg !1328, !tbaa !186
  %idxprom47 = sext i32 %57 to i64, !dbg !1326
  %arrayidx48 = getelementptr inbounds i8, i8* %55, i64 %idxprom47, !dbg !1326
  %call49 = call i32 (i8*, i8*, ...) @sprintf(i8* %arrayidx48, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0)) #9, !dbg !1329
  %58 = load i32*, i32** %bytes.addr, align 8, !dbg !1330, !tbaa !138
  %59 = load i32, i32* %58, align 4, !dbg !1331, !tbaa !186
  %add50 = add nsw i32 %59, %call49, !dbg !1331
  store i32 %add50, i32* %58, align 4, !dbg !1331, !tbaa !186
  %60 = load i32*, i32** %histogram, align 8, !dbg !1332, !tbaa !138
  %61 = bitcast i32* %60 to i8*, !dbg !1332
  call void @free(i8* %61) #9, !dbg !1333
  %62 = load i8*, i8** %buf, align 8, !dbg !1334, !tbaa !138
  store i8* %62, i8** %retval, align 8, !dbg !1335
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1335

cleanup:                                          ; preds = %for.end46, %if.end6
  %63 = bitcast i32* %i to i8*, !dbg !1336
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #9, !dbg !1336
  %64 = bitcast i8** %buf to i8*, !dbg !1336
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #9, !dbg !1336
  %65 = bitcast i32** %histogram to i8*, !dbg !1336
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65) #9, !dbg !1336
  %66 = bitcast i32* %num_buckets to i8*, !dbg !1336
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #9, !dbg !1336
  %67 = load i8*, i8** %retval, align 8, !dbg !1336
  ret i8* %67, !dbg !1336
}

; Function Attrs: nounwind
declare !dbg !85 dso_local void @free(i8* %0) #4

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly %0, i8 %1, i64 %2, i1 immarg %3) #8

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8* %0, i8* %1, ...) #4

; Function Attrs: nounwind uwtable
define dso_local zeroext i1 @item_delete_lock_over(%struct._stritem* %it) #0 !dbg !1337 {
entry:
  %it.addr = alloca %struct._stritem*, align 8
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !1341, metadata !DIExpression()), !dbg !1342
  %0 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1343, !tbaa !138
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %0, i32 0, i32 8, !dbg !1343
  %1 = load i8, i8* %it_flags, align 1, !dbg !1343, !tbaa !518
  %conv = zext i8 %1 to i32, !dbg !1343
  %and = and i32 %conv, 2, !dbg !1343
  %tobool = icmp ne i32 %and, 0, !dbg !1343
  br i1 %tobool, label %if.then, label %if.else, !dbg !1346

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !1346

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0), i32 526, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.item_delete_lock_over, i64 0, i64 0)) #10, !dbg !1343
  unreachable, !dbg !1343

if.end:                                           ; preds = %if.then
  %2 = load volatile i32, i32* @current_time, align 4, !dbg !1347, !tbaa !186
  %3 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1348, !tbaa !138
  %exptime = getelementptr inbounds %struct._stritem, %struct._stritem* %3, i32 0, i32 4, !dbg !1349
  %4 = load i32, i32* %exptime, align 4, !dbg !1349, !tbaa !445
  %cmp = icmp uge i32 %2, %4, !dbg !1350
  ret i1 %cmp, !dbg !1351
}

; Function Attrs: nounwind uwtable
define dso_local %struct._stritem* @do_item_get_notedeleted(i8* %key, i64 %nkey, i8* %delete_locked) #0 !dbg !1352 {
entry:
  %key.addr = alloca i8*, align 8
  %nkey.addr = alloca i64, align 8
  %delete_locked.addr = alloca i8*, align 8
  %it = alloca %struct._stritem*, align 8
  store i8* %key, i8** %key.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !1356, metadata !DIExpression()), !dbg !1360
  store i64 %nkey, i64* %nkey.addr, align 8, !tbaa !143
  call void @llvm.dbg.declare(metadata i64* %nkey.addr, metadata !1357, metadata !DIExpression()), !dbg !1361
  store i8* %delete_locked, i8** %delete_locked.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata i8** %delete_locked.addr, metadata !1358, metadata !DIExpression()), !dbg !1362
  %0 = bitcast %struct._stritem** %it to i8*, !dbg !1363
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9, !dbg !1363
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !1359, metadata !DIExpression()), !dbg !1364
  %1 = load i8*, i8** %key.addr, align 8, !dbg !1365, !tbaa !138
  %2 = load i64, i64* %nkey.addr, align 8, !dbg !1366, !tbaa !143
  %call = call %struct._stritem* @assoc_find(i8* %1, i64 %2), !dbg !1367
  store %struct._stritem* %call, %struct._stritem** %it, align 8, !dbg !1364, !tbaa !138
  %3 = load i8*, i8** %delete_locked.addr, align 8, !dbg !1368, !tbaa !138
  %tobool = icmp ne i8* %3, null, !dbg !1368
  br i1 %tobool, label %if.then, label %if.end, !dbg !1370

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %delete_locked.addr, align 8, !dbg !1371, !tbaa !138
  store i8 0, i8* %4, align 1, !dbg !1372, !tbaa !1373
  br label %if.end, !dbg !1374

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1375, !tbaa !138
  %cmp = icmp ne %struct._stritem* %5, null, !dbg !1377
  br i1 %cmp, label %land.lhs.true, label %if.end9, !dbg !1378

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1379, !tbaa !138
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %6, i32 0, i32 8, !dbg !1380
  %7 = load i8, i8* %it_flags, align 1, !dbg !1380, !tbaa !518
  %conv = zext i8 %7 to i32, !dbg !1379
  %and = and i32 %conv, 2, !dbg !1381
  %tobool1 = icmp ne i32 %and, 0, !dbg !1381
  br i1 %tobool1, label %if.then2, label %if.end9, !dbg !1382

if.then2:                                         ; preds = %land.lhs.true
  %8 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1383, !tbaa !138
  %call3 = call zeroext i1 @item_delete_lock_over(%struct._stritem* %8), !dbg !1386
  br i1 %call3, label %if.end8, label %if.then4, !dbg !1387

if.then4:                                         ; preds = %if.then2
  %9 = load i8*, i8** %delete_locked.addr, align 8, !dbg !1388, !tbaa !138
  %tobool5 = icmp ne i8* %9, null, !dbg !1388
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !1391

if.then6:                                         ; preds = %if.then4
  %10 = load i8*, i8** %delete_locked.addr, align 8, !dbg !1392, !tbaa !138
  store i8 1, i8* %10, align 1, !dbg !1393, !tbaa !1373
  br label %if.end7, !dbg !1394

if.end7:                                          ; preds = %if.then6, %if.then4
  store %struct._stritem* null, %struct._stritem** %it, align 8, !dbg !1395, !tbaa !138
  br label %if.end8, !dbg !1396

if.end8:                                          ; preds = %if.end7, %if.then2
  br label %if.end9, !dbg !1397

if.end9:                                          ; preds = %if.end8, %land.lhs.true, %if.end
  %11 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1398, !tbaa !138
  %cmp10 = icmp ne %struct._stritem* %11, null, !dbg !1400
  br i1 %cmp10, label %land.lhs.true12, label %if.end22, !dbg !1401

land.lhs.true12:                                  ; preds = %if.end9
  %12 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4, !dbg !1402, !tbaa !1403
  %cmp13 = icmp ne i32 %12, 0, !dbg !1404
  br i1 %cmp13, label %land.lhs.true15, label %if.end22, !dbg !1405

land.lhs.true15:                                  ; preds = %land.lhs.true12
  %13 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4, !dbg !1406, !tbaa !1403
  %14 = load volatile i32, i32* @current_time, align 4, !dbg !1407, !tbaa !186
  %cmp16 = icmp ule i32 %13, %14, !dbg !1408
  br i1 %cmp16, label %land.lhs.true18, label %if.end22, !dbg !1409

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %15 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1410, !tbaa !138
  %time = getelementptr inbounds %struct._stritem, %struct._stritem* %15, i32 0, i32 3, !dbg !1411
  %16 = load i32, i32* %time, align 8, !dbg !1411, !tbaa !891
  %17 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4, !dbg !1412, !tbaa !1403
  %cmp19 = icmp ule i32 %16, %17, !dbg !1413
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !1414

if.then21:                                        ; preds = %land.lhs.true18
  %18 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1415, !tbaa !138
  call void @do_item_unlink(%struct._stritem* %18), !dbg !1417
  store %struct._stritem* null, %struct._stritem** %it, align 8, !dbg !1418, !tbaa !138
  br label %if.end22, !dbg !1419

if.end22:                                         ; preds = %if.then21, %land.lhs.true18, %land.lhs.true15, %land.lhs.true12, %if.end9
  %19 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1420, !tbaa !138
  %cmp23 = icmp ne %struct._stritem* %19, null, !dbg !1422
  br i1 %cmp23, label %land.lhs.true25, label %if.end33, !dbg !1423

land.lhs.true25:                                  ; preds = %if.end22
  %20 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1424, !tbaa !138
  %exptime = getelementptr inbounds %struct._stritem, %struct._stritem* %20, i32 0, i32 4, !dbg !1425
  %21 = bitcast i32* %exptime to i8*, !dbg !1425
  %22 = load i32, i32* %exptime, align 4, !dbg !1425, !tbaa !445
  %cmp26 = icmp ne i32 %22, 0, !dbg !1426
  br i1 %cmp26, label %land.lhs.true28, label %if.end33, !dbg !1427

land.lhs.true28:                                  ; preds = %land.lhs.true25
  %23 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1428, !tbaa !138
  %exptime29 = getelementptr inbounds %struct._stritem, %struct._stritem* %23, i32 0, i32 4, !dbg !1429
  %24 = bitcast i32* %exptime29 to i8*, !dbg !1429
  %25 = load i32, i32* %exptime29, align 4, !dbg !1429, !tbaa !445
  %26 = load volatile i32, i32* @current_time, align 4, !dbg !1430, !tbaa !186
  %cmp30 = icmp ule i32 %25, %26, !dbg !1431
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !1432

if.then32:                                        ; preds = %land.lhs.true28
  %27 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1433, !tbaa !138
  call void @do_item_unlink(%struct._stritem* %27), !dbg !1435
  store %struct._stritem* null, %struct._stritem** %it, align 8, !dbg !1436, !tbaa !138
  br label %if.end33, !dbg !1437

if.end33:                                         ; preds = %if.then32, %land.lhs.true28, %land.lhs.true25, %if.end22
  %28 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1438, !tbaa !138
  %cmp34 = icmp ne %struct._stritem* %28, null, !dbg !1440
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !1441

if.then36:                                        ; preds = %if.end33
  %29 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1442, !tbaa !138
  %refcount = getelementptr inbounds %struct._stritem, %struct._stritem* %29, i32 0, i32 6, !dbg !1444
  %30 = bitcast i16* %refcount to i8*, !dbg !1445
  %31 = load i16, i16* %refcount, align 4, !dbg !1445, !tbaa !436
  %inc = add i16 %31, 1, !dbg !1445
  %32 = bitcast i16* %refcount to i8*, !dbg !1445
  %33 = call i32 @cpavise_store_data_fileline(i8* %32, i64 2, i32 0, i32 555), !dbg !1445
  store i16 %inc, i16* %refcount, align 4, !dbg !1445, !tbaa !436
  br label %while.cond, !dbg !1446

while.cond:                                       ; preds = %while.body, %if.then36
  br i1 false, label %while.body, label %while.end, !dbg !1446

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !1446, !llvm.loop !1447

while.end:                                        ; preds = %while.cond
  br label %if.end37, !dbg !1449

if.end37:                                         ; preds = %while.end, %if.end33
  %34 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1450, !tbaa !138
  %35 = bitcast %struct._stritem** %it to i8*, !dbg !1451
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #9, !dbg !1451
  ret %struct._stritem* %34, !dbg !1452
}

declare !dbg !89 dso_local %struct._stritem* @assoc_find(i8* %0, i64 %1) #5

; Function Attrs: nounwind uwtable
define dso_local %struct._stritem* @item_get(i8* %key, i64 %nkey) #0 !dbg !1453 {
entry:
  %key.addr = alloca i8*, align 8
  %nkey.addr = alloca i64, align 8
  store i8* %key, i8** %key.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !1457, metadata !DIExpression()), !dbg !1459
  store i64 %nkey, i64* %nkey.addr, align 8, !tbaa !143
  call void @llvm.dbg.declare(metadata i64* %nkey.addr, metadata !1458, metadata !DIExpression()), !dbg !1460
  %0 = load i8*, i8** %key.addr, align 8, !dbg !1461, !tbaa !138
  %1 = load i64, i64* %nkey.addr, align 8, !dbg !1461, !tbaa !143
  %call = call %struct._stritem* @mt_item_get_notedeleted(i8* %0, i64 %1, i8* null), !dbg !1461
  ret %struct._stritem* %call, !dbg !1462
}

declare !dbg !92 dso_local %struct._stritem* @mt_item_get_notedeleted(i8* %0, i64 %1, i8* %2) #5

; Function Attrs: nounwind uwtable
define dso_local %struct._stritem* @do_item_get_nocheck(i8* %key, i64 %nkey) #0 !dbg !1463 {
entry:
  %key.addr = alloca i8*, align 8
  %nkey.addr = alloca i64, align 8
  %it = alloca %struct._stritem*, align 8
  store i8* %key, i8** %key.addr, align 8, !tbaa !138
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !1465, metadata !DIExpression()), !dbg !1468
  store i64 %nkey, i64* %nkey.addr, align 8, !tbaa !143
  call void @llvm.dbg.declare(metadata i64* %nkey.addr, metadata !1466, metadata !DIExpression()), !dbg !1469
  %0 = bitcast %struct._stritem** %it to i8*, !dbg !1470
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9, !dbg !1470
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !1467, metadata !DIExpression()), !dbg !1471
  %1 = load i8*, i8** %key.addr, align 8, !dbg !1472, !tbaa !138
  %2 = load i64, i64* %nkey.addr, align 8, !dbg !1473, !tbaa !143
  %call = call %struct._stritem* @assoc_find(i8* %1, i64 %2), !dbg !1474
  store %struct._stritem* %call, %struct._stritem** %it, align 8, !dbg !1471, !tbaa !138
  %3 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1475, !tbaa !138
  %tobool = icmp ne %struct._stritem* %3, null, !dbg !1475
  br i1 %tobool, label %if.then, label %if.end, !dbg !1477

if.then:                                          ; preds = %entry
  %4 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1478, !tbaa !138
  %refcount = getelementptr inbounds %struct._stritem, %struct._stritem* %4, i32 0, i32 6, !dbg !1480
  %5 = load i16, i16* %refcount, align 4, !dbg !1481, !tbaa !436
  %inc = add i16 %5, 1, !dbg !1481
  store i16 %inc, i16* %refcount, align 4, !dbg !1481, !tbaa !436
  br label %while.cond, !dbg !1482

while.cond:                                       ; preds = %while.body, %if.then
  br i1 false, label %while.body, label %while.end, !dbg !1482

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !1482, !llvm.loop !1483

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !1485

if.end:                                           ; preds = %while.end, %entry
  %6 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1486, !tbaa !138
  %7 = bitcast %struct._stritem** %it to i8*, !dbg !1487
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9, !dbg !1487
  ret %struct._stritem* %6, !dbg !1488
}

; Function Attrs: nounwind uwtable
define dso_local void @do_item_flush_expired() #0 !dbg !1489 {
entry:
  %i = alloca i32, align 4
  %iter = alloca %struct._stritem*, align 8
  %next = alloca %struct._stritem*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %0 = bitcast i32* %i to i8*, !dbg !1494
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9, !dbg !1494
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1491, metadata !DIExpression()), !dbg !1495
  %1 = bitcast %struct._stritem** %iter to i8*, !dbg !1496
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9, !dbg !1496
  call void @llvm.dbg.declare(metadata %struct._stritem** %iter, metadata !1492, metadata !DIExpression()), !dbg !1497
  %2 = bitcast %struct._stritem** %next to i8*, !dbg !1496
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9, !dbg !1496
  call void @llvm.dbg.declare(metadata %struct._stritem** %next, metadata !1493, metadata !DIExpression()), !dbg !1498
  %3 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4, !dbg !1499, !tbaa !1403
  %cmp = icmp eq i32 %3, 0, !dbg !1501
  br i1 %cmp, label %if.then, label %if.end, !dbg !1502

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1503

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !1504, !tbaa !186
  br label %for.cond, !dbg !1506

for.cond:                                         ; preds = %for.inc13, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !1507, !tbaa !186
  %cmp1 = icmp slt i32 %4, 255, !dbg !1509
  br i1 %cmp1, label %for.body, label %for.end14, !dbg !1510

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !1511, !tbaa !186
  %idxprom = sext i32 %5 to i64, !dbg !1514
  %arrayidx = getelementptr inbounds [255 x %struct._stritem*], [255 x %struct._stritem*]* @heads, i64 0, i64 %idxprom, !dbg !1514
  %6 = load %struct._stritem*, %struct._stritem** %arrayidx, align 8, !dbg !1514, !tbaa !138
  store %struct._stritem* %6, %struct._stritem** %iter, align 8, !dbg !1515, !tbaa !138
  br label %for.cond2, !dbg !1516

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load %struct._stritem*, %struct._stritem** %iter, align 8, !dbg !1517, !tbaa !138
  %cmp3 = icmp ne %struct._stritem* %7, null, !dbg !1519
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !1520

for.body4:                                        ; preds = %for.cond2
  %8 = load %struct._stritem*, %struct._stritem** %iter, align 8, !dbg !1521, !tbaa !138
  %time = getelementptr inbounds %struct._stritem, %struct._stritem* %8, i32 0, i32 3, !dbg !1524
  %9 = load i32, i32* %time, align 8, !dbg !1524, !tbaa !891
  %10 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4, !dbg !1525, !tbaa !1403
  %cmp5 = icmp uge i32 %9, %10, !dbg !1526
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !1527

if.then6:                                         ; preds = %for.body4
  %11 = load %struct._stritem*, %struct._stritem** %iter, align 8, !dbg !1528, !tbaa !138
  %next7 = getelementptr inbounds %struct._stritem, %struct._stritem* %11, i32 0, i32 0, !dbg !1530
  %12 = load %struct._stritem*, %struct._stritem** %next7, align 8, !dbg !1530, !tbaa !508
  store %struct._stritem* %12, %struct._stritem** %next, align 8, !dbg !1531, !tbaa !138
  %13 = load %struct._stritem*, %struct._stritem** %iter, align 8, !dbg !1532, !tbaa !138
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %13, i32 0, i32 8, !dbg !1534
  %14 = load i8, i8* %it_flags, align 1, !dbg !1534, !tbaa !518
  %conv = zext i8 %14 to i32, !dbg !1532
  %and = and i32 %conv, 4, !dbg !1535
  %cmp8 = icmp eq i32 %and, 0, !dbg !1536
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !1537

if.then10:                                        ; preds = %if.then6
  %15 = load %struct._stritem*, %struct._stritem** %iter, align 8, !dbg !1538, !tbaa !138
  call void @do_item_unlink(%struct._stritem* %15), !dbg !1540
  br label %if.end11, !dbg !1541

if.end11:                                         ; preds = %if.then10, %if.then6
  br label %if.end12, !dbg !1542

if.else:                                          ; preds = %for.body4
  br label %for.end, !dbg !1543

if.end12:                                         ; preds = %if.end11
  br label %for.inc, !dbg !1545

for.inc:                                          ; preds = %if.end12
  %16 = load %struct._stritem*, %struct._stritem** %next, align 8, !dbg !1546, !tbaa !138
  store %struct._stritem* %16, %struct._stritem** %iter, align 8, !dbg !1547, !tbaa !138
  br label %for.cond2, !dbg !1548, !llvm.loop !1549

for.end:                                          ; preds = %if.else, %for.cond2
  br label %for.inc13, !dbg !1551

for.inc13:                                        ; preds = %for.end
  %17 = load i32, i32* %i, align 4, !dbg !1552, !tbaa !186
  %inc = add nsw i32 %17, 1, !dbg !1552
  store i32 %inc, i32* %i, align 4, !dbg !1552, !tbaa !186
  br label %for.cond, !dbg !1553, !llvm.loop !1554

for.end14:                                        ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !1556
  br label %cleanup, !dbg !1556

cleanup:                                          ; preds = %for.end14, %if.then
  %18 = bitcast %struct._stritem** %next to i8*, !dbg !1556
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #9, !dbg !1556
  %19 = bitcast %struct._stritem** %iter to i8*, !dbg !1556
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %19) #9, !dbg !1556
  %20 = bitcast i32* %i to i8*, !dbg !1556
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %20) #9, !dbg !1556
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !1556

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind
declare void @llvm.x86.clflushopt(i8* %0) #9

declare !dbg !97 dso_local %struct.pmemobjpool* @pmemobj_pool_by_oid(i64 %0, i64 %1) #5

declare i32 @cpavise_load_data(i8* %0, i64 %1, i64 %2)

declare i32 @cpavise_store_data_fileline(i8* %0, i64 %1, i32 %2, i32 %3)

declare void @cpavise_memcpy(i8* %0, i8* %1, i64 %2, i64 %3)

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind willreturn writeonly }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!127, !128, !129}
!llvm.ident = !{!130}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "heads", scope: !2, file: !104, line: 45, type: !109, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 11.0.0 (https://github.com/hjjq/LLVM-Pavise.git 3d210af9293f24d5e7772804ba7d1c4b26f9bb1a)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !100, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/ssd1/hanjie/mod-pavise/memcached-pmdk/items.c", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk/tx-build")
!4 = !{}
!5 = !{!6, !9, !10, !15, !30, !55, !58, !59, !63, !65, !67, !72, !75, !79, !84, !85, !89, !92, !97}
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !7, line: 100, baseType: !8)
!7 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!8 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !11, line: 24, baseType: !12)
!11 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !13, line: 37, baseType: !14)
!13 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!14 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!15 = !DISubprogram(name: "pmemobj_zalloc", scope: !16, file: !16, line: 75, type: !17, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!16 = !DIFile(filename: "../pmdk/src/include/libpmemobj/atomic_base.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!17 = !DISubroutineType(types: !18)
!18 = !{!19, !20, !23, !8, !8}
!19 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!21 = !DICompositeType(tag: DW_TAG_structure_type, name: "pmemobjpool", file: !22, line: 67, flags: DIFlagFwdDecl)
!22 = !DIFile(filename: "../pmdk/src/include/libpmemobj/base.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!24 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pmemoid", file: !22, line: 90, size: 128, elements: !25)
!25 = !{!26, !29}
!26 = !DIDerivedType(tag: DW_TAG_member, name: "pool_uuid_lo", scope: !24, file: !22, line: 91, baseType: !27, size: 64)
!27 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !11, line: 27, baseType: !28)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !13, line: 44, baseType: !8)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !24, file: !22, line: 92, baseType: !27, size: 64, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "item", file: !32, line: 143, baseType: !33)
!32 = !DIFile(filename: "memcached.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!33 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_stritem", file: !32, line: 126, size: 960, elements: !34)
!34 = !{!35, !37, !38, !39, !42, !43, !44, !46, !47, !48, !49, !50, !51}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !33, file: !32, line: 127, baseType: !36, size: 64)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !33, file: !32, line: 128, baseType: !36, size: 64, offset: 64)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "h_next", scope: !33, file: !32, line: 129, baseType: !36, size: 64, offset: 128)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !33, file: !32, line: 130, baseType: !40, size: 32, offset: 192)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "rel_time_t", file: !32, line: 73, baseType: !41)
!41 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "exptime", scope: !33, file: !32, line: 131, baseType: !40, size: 32, offset: 224)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !33, file: !32, line: 132, baseType: !19, size: 32, offset: 256)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !33, file: !32, line: 133, baseType: !45, size: 16, offset: 288)
!45 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "nsuffix", scope: !33, file: !32, line: 134, baseType: !10, size: 8, offset: 304)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "it_flags", scope: !33, file: !32, line: 135, baseType: !10, size: 8, offset: 312)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "slabs_clsid", scope: !33, file: !32, line: 136, baseType: !10, size: 8, offset: 320)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "nkey", scope: !33, file: !32, line: 137, baseType: !10, size: 8, offset: 328)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "cas_id", scope: !33, file: !32, line: 138, baseType: !27, size: 64, offset: 384)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !33, file: !32, line: 139, baseType: !52, size: 512, offset: 448)
!52 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 512, elements: !53)
!53 = !{!54}
!54 = !DISubrange(count: 8)
!55 = !DISubprogram(name: "mt_stats_lock", scope: !32, file: !32, line: 316, type: !56, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!56 = !DISubroutineType(types: !57)
!57 = !{null}
!58 = !DISubprogram(name: "mt_stats_unlock", scope: !32, file: !32, line: 317, type: !56, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!59 = !DISubprogram(name: "do_item_unlink", scope: !60, file: !60, line: 10, type: !61, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!60 = !DIFile(filename: "items.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!61 = !DISubroutineType(types: !62)
!62 = !{null, !36}
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64)
!64 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !66, line: 46, baseType: !8)
!66 = !DIFile(filename: "llvm-project/build/lib/clang/11.0.0/include/stddef.h", directory: "/ssd1")
!67 = !DISubprogram(name: "pmemobj_oid", scope: !22, file: !22, line: 170, type: !68, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!68 = !DISubroutineType(types: !69)
!69 = !{!24, !70}
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!72 = !DISubprogram(name: "pmemobj_free", scope: !16, file: !16, line: 105, type: !73, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!73 = !DISubroutineType(types: !74)
!74 = !{null, !23}
!75 = !DISubprogram(name: "assoc_insert", scope: !76, file: !76, line: 7, type: !77, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!76 = !DIFile(filename: "assoc.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!77 = !DISubroutineType(types: !78)
!78 = !{!19, !36}
!79 = !DISubprogram(name: "assoc_delete", scope: !76, file: !76, line: 8, type: !80, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!80 = !DISubroutineType(types: !81)
!81 = !{null, !82, !8}
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!83 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !64)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!85 = !DISubprogram(name: "free", scope: !86, file: !86, line: 563, type: !87, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!86 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!87 = !DISubroutineType(types: !88)
!88 = !{null, !9}
!89 = !DISubprogram(name: "assoc_find", scope: !76, file: !76, line: 6, type: !90, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!90 = !DISubroutineType(types: !91)
!91 = !{!36, !82, !8}
!92 = !DISubprogram(name: "mt_item_get_notedeleted", scope: !32, file: !32, line: 303, type: !93, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!93 = !DISubroutineType(types: !94)
!94 = !{!36, !82, !8, !95}
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!96 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!97 = !DISubprogram(name: "pmemobj_pool_by_oid", scope: !22, file: !22, line: 102, type: !98, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!98 = !DISubroutineType(types: !99)
!99 = !{!20, !24}
!100 = !{!101, !0, !107, !112, !115, !119, !122}
!101 = !DIGlobalVariableExpression(var: !102, expr: !DIExpression())
!102 = distinct !DIGlobalVariable(name: "cas_id", scope: !103, file: !104, line: 151, type: !27, isLocal: true, isDefinition: true)
!103 = distinct !DISubprogram(name: "get_cas_id", scope: !104, file: !104, line: 150, type: !105, scopeLine: 150, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4)
!104 = !DIFile(filename: "items.c", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!105 = !DISubroutineType(types: !106)
!106 = !{!27}
!107 = !DIGlobalVariableExpression(var: !108, expr: !DIExpression())
!108 = distinct !DIGlobalVariable(name: "tails", scope: !2, file: !104, line: 46, type: !109, isLocal: true, isDefinition: true)
!109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 16320, elements: !110)
!110 = !{!111}
!111 = !DISubrange(count: 255)
!112 = !DIGlobalVariableExpression(var: !113, expr: !DIExpression())
!113 = distinct !DIGlobalVariable(name: "sizes", scope: !2, file: !104, line: 47, type: !114, isLocal: true, isDefinition: true)
!114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !41, size: 8160, elements: !110)
!115 = !DIGlobalVariableExpression(var: !116, expr: !DIExpression())
!116 = distinct !DIGlobalVariable(name: "curr_pool", scope: !2, file: !104, line: 50, type: !117, isLocal: true, isDefinition: true)
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMEMobjpool", file: !22, line: 67, baseType: !21)
!119 = !DIGlobalVariableExpression(var: !120, expr: !DIExpression())
!120 = distinct !DIGlobalVariable(name: "item_ptr", scope: !2, file: !104, line: 51, type: !121, isLocal: false, isDefinition: true)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMEMoid", file: !22, line: 93, baseType: !24)
!122 = !DIGlobalVariableExpression(var: !123, expr: !DIExpression())
!123 = distinct !DIGlobalVariable(name: "slab_sizes", scope: !2, file: !104, line: 58, type: !124, isLocal: false, isDefinition: true)
!124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 6432, elements: !125)
!125 = !{!126}
!126 = !DISubrange(count: 201)
!127 = !{i32 7, !"Dwarf Version", i32 4}
!128 = !{i32 2, !"Debug Info Version", i32 3}
!129 = !{i32 1, !"wchar_size", i32 4}
!130 = !{!"clang version 11.0.0 (https://github.com/hjjq/LLVM-Pavise.git 3d210af9293f24d5e7772804ba7d1c4b26f9bb1a)"}
!131 = distinct !DISubprogram(name: "clwb_range", scope: !104, file: !104, line: 13, type: !132, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !134)
!132 = !DISubroutineType(types: !133)
!133 = !{null, !70, !27}
!134 = !{!135, !136, !137}
!135 = !DILocalVariable(name: "ptr", arg: 1, scope: !131, file: !104, line: 13, type: !70)
!136 = !DILocalVariable(name: "len", arg: 2, scope: !131, file: !104, line: 13, type: !27)
!137 = !DILocalVariable(name: "start", scope: !131, file: !104, line: 14, type: !6)
!138 = !{!139, !139, i64 0}
!139 = !{!"any pointer", !140, i64 0}
!140 = !{!"omnipotent char", !141, i64 0}
!141 = !{!"Simple C/C++ TBAA"}
!142 = !DILocation(line: 13, column: 29, scope: !131)
!143 = !{!144, !144, i64 0}
!144 = !{!"long", !140, i64 0}
!145 = !DILocation(line: 13, column: 43, scope: !131)
!146 = !DILocation(line: 14, column: 5, scope: !131)
!147 = !DILocation(line: 14, column: 15, scope: !131)
!148 = !DILocation(line: 14, column: 34, scope: !131)
!149 = !DILocation(line: 14, column: 23, scope: !131)
!150 = !DILocation(line: 14, column: 38, scope: !131)
!151 = !DILocation(line: 15, column: 5, scope: !131)
!152 = !DILocation(line: 15, column: 12, scope: !153)
!153 = distinct !DILexicalBlock(scope: !154, file: !104, line: 15, column: 5)
!154 = distinct !DILexicalBlock(scope: !131, file: !104, line: 15, column: 5)
!155 = !DILocation(line: 15, column: 31, scope: !153)
!156 = !DILocation(line: 15, column: 20, scope: !153)
!157 = !DILocation(line: 15, column: 37, scope: !153)
!158 = !DILocation(line: 15, column: 35, scope: !153)
!159 = !DILocation(line: 15, column: 18, scope: !153)
!160 = !DILocation(line: 15, column: 5, scope: !154)
!161 = !DILocation(line: 19, column: 31, scope: !162)
!162 = distinct !DILexicalBlock(scope: !153, file: !104, line: 15, column: 68)
!163 = !DILocation(line: 19, column: 24, scope: !162)
!164 = !DILocation(line: 19, column: 9, scope: !162)
!165 = !DILocation(line: 21, column: 5, scope: !162)
!166 = !DILocation(line: 15, column: 48, scope: !153)
!167 = !DILocation(line: 15, column: 5, scope: !153)
!168 = distinct !{!168, !160, !169}
!169 = !DILocation(line: 21, column: 5, scope: !154)
!170 = !DILocation(line: 22, column: 1, scope: !131)
!171 = distinct !DISubprogram(name: "sfence", scope: !104, file: !104, line: 24, type: !56, scopeLine: 24, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4)
!172 = !DILocation(line: 25, column: 9, scope: !171)
!173 = !{i32 670}
!174 = !DILocation(line: 26, column: 1, scope: !171)
!175 = distinct !DISubprogram(name: "item_init", scope: !104, file: !104, line: 60, type: !176, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !178)
!176 = !DISubroutineType(types: !177)
!177 = !{null, !117}
!178 = !{!179, !180}
!179 = !DILocalVariable(name: "pop", arg: 1, scope: !175, file: !104, line: 60, type: !117)
!180 = !DILocalVariable(name: "i", scope: !175, file: !104, line: 61, type: !19)
!181 = !DILocation(line: 60, column: 29, scope: !175)
!182 = !DILocation(line: 61, column: 5, scope: !175)
!183 = !DILocation(line: 61, column: 9, scope: !175)
!184 = !DILocation(line: 62, column: 11, scope: !185)
!185 = distinct !DILexicalBlock(scope: !175, file: !104, line: 62, column: 5)
!186 = !{!187, !187, i64 0}
!187 = !{!"int", !140, i64 0}
!188 = !DILocation(line: 62, column: 9, scope: !185)
!189 = !DILocation(line: 62, column: 16, scope: !190)
!190 = distinct !DILexicalBlock(scope: !185, file: !104, line: 62, column: 5)
!191 = !DILocation(line: 62, column: 18, scope: !190)
!192 = !DILocation(line: 62, column: 5, scope: !185)
!193 = !DILocation(line: 63, column: 15, scope: !194)
!194 = distinct !DILexicalBlock(scope: !190, file: !104, line: 62, column: 37)
!195 = !DILocation(line: 63, column: 9, scope: !194)
!196 = !DILocation(line: 63, column: 18, scope: !194)
!197 = !DILocation(line: 64, column: 15, scope: !194)
!198 = !DILocation(line: 64, column: 9, scope: !194)
!199 = !DILocation(line: 64, column: 18, scope: !194)
!200 = !DILocation(line: 65, column: 15, scope: !194)
!201 = !DILocation(line: 65, column: 9, scope: !194)
!202 = !DILocation(line: 65, column: 18, scope: !194)
!203 = !DILocation(line: 66, column: 5, scope: !194)
!204 = !DILocation(line: 62, column: 33, scope: !190)
!205 = !DILocation(line: 62, column: 5, scope: !190)
!206 = distinct !{!206, !192, !207}
!207 = !DILocation(line: 66, column: 5, scope: !185)
!208 = !DILocation(line: 67, column: 17, scope: !175)
!209 = !DILocation(line: 67, column: 15, scope: !175)
!210 = !DILocation(line: 68, column: 1, scope: !175)
!211 = distinct !DISubprogram(name: "slabs_init", scope: !104, file: !104, line: 73, type: !212, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !217)
!212 = !DISubroutineType(types: !213)
!213 = !{null, !214, !215}
!214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !65)
!215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !216)
!216 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!217 = !{!218, !219, !220, !221}
!218 = !DILocalVariable(name: "limit", arg: 1, scope: !211, file: !104, line: 73, type: !214)
!219 = !DILocalVariable(name: "factor", arg: 2, scope: !211, file: !104, line: 73, type: !215)
!220 = !DILocalVariable(name: "i", scope: !211, file: !104, line: 74, type: !19)
!221 = !DILocalVariable(name: "size", scope: !211, file: !104, line: 75, type: !41)
!222 = !DILocation(line: 73, column: 30, scope: !211)
!223 = !{!224, !224, i64 0}
!224 = !{!"double", !140, i64 0}
!225 = !DILocation(line: 73, column: 50, scope: !211)
!226 = !DILocation(line: 74, column: 5, scope: !211)
!227 = !DILocation(line: 74, column: 9, scope: !211)
!228 = !DILocation(line: 75, column: 5, scope: !211)
!229 = !DILocation(line: 75, column: 18, scope: !211)
!230 = !DILocation(line: 75, column: 49, scope: !211)
!231 = !{!232, !187, i64 64}
!232 = !{!"settings", !144, i64 0, !187, i64 8, !187, i64 12, !187, i64 16, !233, i64 20, !187, i64 24, !187, i64 28, !234, i64 32, !187, i64 36, !139, i64 40, !187, i64 48, !224, i64 56, !187, i64 64, !187, i64 68, !140, i64 72, !187, i64 76}
!233 = !{!"in_addr", !187, i64 0}
!234 = !{!"_Bool", !140, i64 0}
!235 = !DILocation(line: 75, column: 40, scope: !211)
!236 = !DILocation(line: 75, column: 38, scope: !211)
!237 = !DILocation(line: 75, column: 25, scope: !211)
!238 = !DILocation(line: 79, column: 9, scope: !239)
!239 = distinct !DILexicalBlock(scope: !211, file: !104, line: 79, column: 9)
!240 = !DILocation(line: 79, column: 16, scope: !239)
!241 = !DILocation(line: 79, column: 23, scope: !239)
!242 = !DILocation(line: 79, column: 26, scope: !239)
!243 = !DILocation(line: 79, column: 31, scope: !239)
!244 = !DILocation(line: 79, column: 9, scope: !211)
!245 = !DILocation(line: 80, column: 14, scope: !239)
!246 = !DILocation(line: 80, column: 9, scope: !239)
!247 = !DILocation(line: 82, column: 5, scope: !211)
!248 = !DILocation(line: 82, column: 12, scope: !211)
!249 = !DILocation(line: 82, column: 16, scope: !211)
!250 = !DILocation(line: 82, column: 32, scope: !211)
!251 = !DILocation(line: 82, column: 35, scope: !211)
!252 = !DILocation(line: 82, column: 40, scope: !211)
!253 = !DILocation(line: 0, scope: !211)
!254 = !DILocation(line: 84, column: 13, scope: !255)
!255 = distinct !DILexicalBlock(scope: !256, file: !104, line: 84, column: 13)
!256 = distinct !DILexicalBlock(scope: !211, file: !104, line: 82, column: 60)
!257 = !DILocation(line: 84, column: 18, scope: !255)
!258 = !DILocation(line: 84, column: 13, scope: !256)
!259 = !DILocation(line: 85, column: 42, scope: !255)
!260 = !DILocation(line: 85, column: 47, scope: !255)
!261 = !DILocation(line: 85, column: 39, scope: !255)
!262 = !DILocation(line: 85, column: 18, scope: !255)
!263 = !DILocation(line: 85, column: 13, scope: !255)
!264 = !DILocation(line: 87, column: 25, scope: !256)
!265 = !DILocation(line: 87, column: 20, scope: !256)
!266 = !DILocation(line: 87, column: 9, scope: !256)
!267 = !DILocation(line: 87, column: 23, scope: !256)
!268 = !DILocation(line: 88, column: 17, scope: !256)
!269 = !DILocation(line: 88, column: 14, scope: !256)
!270 = distinct !{!270, !247, !271}
!271 = !DILocation(line: 89, column: 5, scope: !211)
!272 = !DILocation(line: 90, column: 31, scope: !211)
!273 = !DILocation(line: 91, column: 1, scope: !211)
!274 = distinct !DISubprogram(name: "slabs_clsid", scope: !104, file: !104, line: 93, type: !275, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !277)
!275 = !DISubroutineType(types: !276)
!276 = !{!41, !214}
!277 = !{!278, !279}
!278 = !DILocalVariable(name: "size", arg: 1, scope: !274, file: !104, line: 93, type: !214)
!279 = !DILocalVariable(name: "res", scope: !274, file: !104, line: 96, type: !19)
!280 = !DILocation(line: 93, column: 39, scope: !274)
!281 = !DILocation(line: 94, column: 9, scope: !282)
!282 = distinct !DILexicalBlock(scope: !274, file: !104, line: 94, column: 9)
!283 = !DILocation(line: 94, column: 14, scope: !282)
!284 = !DILocation(line: 94, column: 9, scope: !274)
!285 = !DILocation(line: 95, column: 9, scope: !282)
!286 = !DILocation(line: 96, column: 5, scope: !274)
!287 = !DILocation(line: 96, column: 9, scope: !274)
!288 = !DILocation(line: 97, column: 5, scope: !274)
!289 = !DILocation(line: 97, column: 12, scope: !274)
!290 = !DILocation(line: 97, column: 30, scope: !274)
!291 = !DILocation(line: 97, column: 19, scope: !274)
!292 = !DILocation(line: 97, column: 17, scope: !274)
!293 = !DILocation(line: 98, column: 16, scope: !294)
!294 = distinct !DILexicalBlock(scope: !274, file: !104, line: 98, column: 13)
!295 = !DILocation(line: 98, column: 19, scope: !294)
!296 = !DILocation(line: 98, column: 13, scope: !274)
!297 = !DILocation(line: 99, column: 13, scope: !294)
!298 = distinct !{!298, !288, !299}
!299 = !DILocation(line: 99, column: 20, scope: !274)
!300 = !DILocation(line: 100, column: 12, scope: !274)
!301 = !DILocation(line: 100, column: 5, scope: !274)
!302 = !DILocation(line: 101, column: 1, scope: !274)
!303 = !DILocation(line: 152, column: 12, scope: !103)
!304 = !DILocation(line: 152, column: 5, scope: !103)
!305 = distinct !DISubprogram(name: "item_make_header", scope: !104, file: !104, line: 181, type: !306, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !311)
!306 = !DISubroutineType(types: !307)
!307 = !{!65, !308, !309, !309, !63, !310}
!308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !19)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!311 = !{!312, !313, !314, !315, !316}
!312 = !DILocalVariable(name: "nkey", arg: 1, scope: !305, file: !104, line: 181, type: !308)
!313 = !DILocalVariable(name: "flags", arg: 2, scope: !305, file: !104, line: 181, type: !309)
!314 = !DILocalVariable(name: "nbytes", arg: 3, scope: !305, file: !104, line: 181, type: !309)
!315 = !DILocalVariable(name: "suffix", arg: 4, scope: !305, file: !104, line: 182, type: !63)
!316 = !DILocalVariable(name: "nsuffix", arg: 5, scope: !305, file: !104, line: 182, type: !310)
!317 = !{!140, !140, i64 0}
!318 = !DILocation(line: 181, column: 39, scope: !305)
!319 = !DILocation(line: 181, column: 55, scope: !305)
!320 = !DILocation(line: 181, column: 72, scope: !305)
!321 = !DILocation(line: 182, column: 28, scope: !305)
!322 = !DILocation(line: 182, column: 45, scope: !305)
!323 = !DILocation(line: 184, column: 35, scope: !305)
!324 = !DILocation(line: 184, column: 61, scope: !305)
!325 = !DILocation(line: 184, column: 68, scope: !305)
!326 = !DILocation(line: 184, column: 75, scope: !305)
!327 = !DILocation(line: 184, column: 26, scope: !305)
!328 = !DILocation(line: 184, column: 16, scope: !305)
!329 = !DILocation(line: 184, column: 6, scope: !305)
!330 = !DILocation(line: 184, column: 14, scope: !305)
!331 = !DILocation(line: 185, column: 27, scope: !305)
!332 = !DILocation(line: 185, column: 25, scope: !305)
!333 = !DILocation(line: 185, column: 35, scope: !305)
!334 = !DILocation(line: 185, column: 34, scope: !305)
!335 = !DILocation(line: 185, column: 32, scope: !305)
!336 = !DILocation(line: 185, column: 45, scope: !305)
!337 = !DILocation(line: 185, column: 43, scope: !305)
!338 = !DILocation(line: 185, column: 5, scope: !305)
!339 = distinct !DISubprogram(name: "do_item_alloc", scope: !104, file: !104, line: 190, type: !340, scopeLine: 190, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !343)
!340 = !DISubroutineType(types: !341)
!341 = !{!30, !63, !214, !309, !342, !309}
!342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !40)
!343 = !{!344, !345, !346, !347, !348, !349, !350, !351, !355, !356, !357, !360}
!344 = !DILocalVariable(name: "key", arg: 1, scope: !339, file: !104, line: 190, type: !63)
!345 = !DILocalVariable(name: "nkey", arg: 2, scope: !339, file: !104, line: 190, type: !214)
!346 = !DILocalVariable(name: "flags", arg: 3, scope: !339, file: !104, line: 190, type: !309)
!347 = !DILocalVariable(name: "exptime", arg: 4, scope: !339, file: !104, line: 190, type: !342)
!348 = !DILocalVariable(name: "nbytes", arg: 5, scope: !339, file: !104, line: 190, type: !309)
!349 = !DILocalVariable(name: "nsuffix", scope: !339, file: !104, line: 194, type: !10)
!350 = !DILocalVariable(name: "it", scope: !339, file: !104, line: 195, type: !30)
!351 = !DILocalVariable(name: "suffix", scope: !339, file: !104, line: 196, type: !352)
!352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 320, elements: !353)
!353 = !{!354}
!354 = !DISubrange(count: 40)
!355 = !DILocalVariable(name: "ntotal", scope: !339, file: !104, line: 197, type: !65)
!356 = !DILocalVariable(name: "id", scope: !339, file: !104, line: 199, type: !41)
!357 = !DILocalVariable(name: "tries", scope: !358, file: !104, line: 206, type: !19)
!358 = distinct !DILexicalBlock(scope: !359, file: !104, line: 205, column: 18)
!359 = distinct !DILexicalBlock(scope: !339, file: !104, line: 205, column: 9)
!360 = !DILocalVariable(name: "search", scope: !358, file: !104, line: 207, type: !30)
!361 = !DILocation(line: 190, column: 27, scope: !339)
!362 = !DILocation(line: 190, column: 45, scope: !339)
!363 = !DILocation(line: 190, column: 61, scope: !339)
!364 = !DILocation(line: 190, column: 85, scope: !339)
!365 = !DILocation(line: 190, column: 104, scope: !339)
!366 = !DILocation(line: 194, column: 5, scope: !339)
!367 = !DILocation(line: 194, column: 13, scope: !339)
!368 = !DILocation(line: 195, column: 5, scope: !339)
!369 = !DILocation(line: 195, column: 11, scope: !339)
!370 = !DILocation(line: 196, column: 5, scope: !339)
!371 = !DILocation(line: 196, column: 10, scope: !339)
!372 = !DILocation(line: 197, column: 5, scope: !339)
!373 = !DILocation(line: 197, column: 12, scope: !339)
!374 = !DILocation(line: 197, column: 38, scope: !339)
!375 = !DILocation(line: 197, column: 43, scope: !339)
!376 = !DILocation(line: 197, column: 48, scope: !339)
!377 = !DILocation(line: 197, column: 55, scope: !339)
!378 = !DILocation(line: 197, column: 63, scope: !339)
!379 = !DILocation(line: 197, column: 21, scope: !339)
!380 = !DILocation(line: 199, column: 5, scope: !339)
!381 = !DILocation(line: 199, column: 18, scope: !339)
!382 = !DILocation(line: 199, column: 35, scope: !339)
!383 = !DILocation(line: 199, column: 23, scope: !339)
!384 = !DILocation(line: 200, column: 9, scope: !385)
!385 = distinct !DILexicalBlock(scope: !339, file: !104, line: 200, column: 9)
!386 = !DILocation(line: 200, column: 12, scope: !385)
!387 = !DILocation(line: 200, column: 9, scope: !339)
!388 = !DILocation(line: 201, column: 9, scope: !385)
!389 = !DILocation(line: 203, column: 20, scope: !339)
!390 = !DILocation(line: 203, column: 42, scope: !339)
!391 = !DILocation(line: 203, column: 5, scope: !339)
!392 = !DILocation(line: 204, column: 18, scope: !339)
!393 = !DILocation(line: 204, column: 10, scope: !339)
!394 = !DILocation(line: 204, column: 8, scope: !339)
!395 = !DILocation(line: 205, column: 9, scope: !359)
!396 = !DILocation(line: 205, column: 12, scope: !359)
!397 = !DILocation(line: 205, column: 9, scope: !339)
!398 = !DILocation(line: 206, column: 9, scope: !358)
!399 = !DILocation(line: 206, column: 13, scope: !358)
!400 = !DILocation(line: 207, column: 9, scope: !358)
!401 = !DILocation(line: 207, column: 15, scope: !358)
!402 = !DILocation(line: 213, column: 22, scope: !403)
!403 = distinct !DILexicalBlock(scope: !358, file: !104, line: 213, column: 13)
!404 = !{!232, !187, i64 36}
!405 = !DILocation(line: 213, column: 36, scope: !403)
!406 = !DILocation(line: 213, column: 13, scope: !358)
!407 = !DILocation(line: 213, column: 42, scope: !403)
!408 = !DILocation(line: 222, column: 13, scope: !409)
!409 = distinct !DILexicalBlock(scope: !358, file: !104, line: 222, column: 13)
!410 = !DILocation(line: 222, column: 16, scope: !409)
!411 = !DILocation(line: 222, column: 13, scope: !358)
!412 = !DILocation(line: 222, column: 30, scope: !409)
!413 = !DILocation(line: 223, column: 19, scope: !414)
!414 = distinct !DILexicalBlock(scope: !358, file: !104, line: 223, column: 13)
!415 = !DILocation(line: 223, column: 13, scope: !414)
!416 = !DILocation(line: 223, column: 23, scope: !414)
!417 = !DILocation(line: 223, column: 13, scope: !358)
!418 = !DILocation(line: 223, column: 29, scope: !414)
!419 = !DILocation(line: 226, column: 29, scope: !420)
!420 = distinct !DILexicalBlock(scope: !358, file: !104, line: 226, column: 9)
!421 = !DILocation(line: 226, column: 23, scope: !420)
!422 = !DILocation(line: 226, column: 21, scope: !420)
!423 = !DILocation(line: 226, column: 14, scope: !420)
!424 = !DILocation(line: 226, column: 34, scope: !425)
!425 = distinct !DILexicalBlock(scope: !420, file: !104, line: 226, column: 9)
!426 = !DILocation(line: 226, column: 40, scope: !425)
!427 = !DILocation(line: 226, column: 44, scope: !425)
!428 = !DILocation(line: 226, column: 47, scope: !425)
!429 = !DILocation(line: 226, column: 54, scope: !425)
!430 = !DILocation(line: 0, scope: !425)
!431 = !DILocation(line: 226, column: 9, scope: !420)
!432 = !DILocation(line: 227, column: 17, scope: !433)
!433 = distinct !DILexicalBlock(scope: !434, file: !104, line: 227, column: 17)
!434 = distinct !DILexicalBlock(scope: !425, file: !104, line: 226, column: 93)
!435 = !DILocation(line: 227, column: 25, scope: !433)
!436 = !{!437, !438, i64 36}
!437 = !{!"_stritem", !139, i64 0, !139, i64 8, !139, i64 16, !187, i64 24, !187, i64 28, !187, i64 32, !438, i64 36, !140, i64 38, !140, i64 39, !140, i64 40, !140, i64 41, !144, i64 48, !140, i64 56}
!438 = !{!"short", !140, i64 0}
!439 = !DILocation(line: 227, column: 34, scope: !433)
!440 = !DILocation(line: 227, column: 17, scope: !434)
!441 = !DILocation(line: 228, column: 20, scope: !442)
!442 = distinct !DILexicalBlock(scope: !443, file: !104, line: 228, column: 20)
!443 = distinct !DILexicalBlock(scope: !433, file: !104, line: 227, column: 40)
!444 = !DILocation(line: 228, column: 28, scope: !442)
!445 = !{!437, !187, i64 28}
!446 = !DILocation(line: 228, column: 36, scope: !442)
!447 = !DILocation(line: 228, column: 41, scope: !442)
!448 = !DILocation(line: 228, column: 44, scope: !442)
!449 = !DILocation(line: 228, column: 52, scope: !442)
!450 = !DILocation(line: 228, column: 62, scope: !442)
!451 = !DILocation(line: 228, column: 60, scope: !442)
!452 = !DILocation(line: 228, column: 20, scope: !443)
!453 = !DILocation(line: 229, column: 24, scope: !454)
!454 = distinct !DILexicalBlock(scope: !442, file: !104, line: 228, column: 76)
!455 = !DILocation(line: 230, column: 40, scope: !454)
!456 = !{!457, !144, i64 64}
!457 = !{!"stats", !187, i64 0, !187, i64 4, !144, i64 8, !187, i64 16, !187, i64 20, !187, i64 24, !144, i64 32, !144, i64 40, !144, i64 48, !144, i64 56, !144, i64 64, !144, i64 72, !144, i64 80, !144, i64 88}
!458 = !DILocation(line: 231, column: 24, scope: !454)
!459 = !DILocation(line: 232, column: 17, scope: !454)
!460 = !DILocation(line: 233, column: 32, scope: !443)
!461 = !DILocation(line: 233, column: 17, scope: !443)
!462 = !DILocation(line: 234, column: 17, scope: !443)
!463 = !DILocation(line: 236, column: 9, scope: !434)
!464 = !DILocation(line: 226, column: 68, scope: !425)
!465 = !DILocation(line: 226, column: 79, scope: !425)
!466 = !DILocation(line: 226, column: 87, scope: !425)
!467 = !{!437, !139, i64 8}
!468 = !DILocation(line: 226, column: 78, scope: !425)
!469 = !DILocation(line: 226, column: 9, scope: !425)
!470 = distinct !{!470, !431, !471}
!471 = !DILocation(line: 236, column: 9, scope: !420)
!472 = !DILocation(line: 237, column: 24, scope: !358)
!473 = !DILocation(line: 237, column: 46, scope: !358)
!474 = !DILocation(line: 237, column: 9, scope: !358)
!475 = !DILocation(line: 238, column: 22, scope: !358)
!476 = !DILocation(line: 238, column: 14, scope: !358)
!477 = !DILocation(line: 238, column: 12, scope: !358)
!478 = !DILocation(line: 239, column: 13, scope: !479)
!479 = distinct !DILexicalBlock(scope: !358, file: !104, line: 239, column: 13)
!480 = !DILocation(line: 239, column: 16, scope: !479)
!481 = !DILocation(line: 239, column: 13, scope: !358)
!482 = !DILocation(line: 239, column: 22, scope: !479)
!483 = !DILocation(line: 240, column: 5, scope: !359)
!484 = !DILocation(line: 240, column: 5, scope: !358)
!485 = !DILocation(line: 242, column: 5, scope: !486)
!486 = distinct !DILexicalBlock(scope: !487, file: !104, line: 242, column: 5)
!487 = distinct !DILexicalBlock(scope: !339, file: !104, line: 242, column: 5)
!488 = !{!437, !140, i64 40}
!489 = !DILocation(line: 242, column: 5, scope: !487)
!490 = !DILocation(line: 244, column: 23, scope: !339)
!491 = !DILocation(line: 244, column: 5, scope: !339)
!492 = !DILocation(line: 244, column: 9, scope: !339)
!493 = !DILocation(line: 244, column: 21, scope: !339)
!494 = !DILocation(line: 246, column: 5, scope: !495)
!495 = distinct !DILexicalBlock(scope: !496, file: !104, line: 246, column: 5)
!496 = distinct !DILexicalBlock(scope: !339, file: !104, line: 246, column: 5)
!497 = !DILocation(line: 246, column: 5, scope: !496)
!498 = !DILocation(line: 252, column: 27, scope: !339)
!499 = !DILocation(line: 252, column: 31, scope: !339)
!500 = !DILocation(line: 252, column: 38, scope: !339)
!501 = !{!437, !139, i64 16}
!502 = !DILocation(line: 252, column: 16, scope: !339)
!503 = !DILocation(line: 252, column: 20, scope: !339)
!504 = !DILocation(line: 252, column: 25, scope: !339)
!505 = !DILocation(line: 252, column: 5, scope: !339)
!506 = !DILocation(line: 252, column: 9, scope: !339)
!507 = !DILocation(line: 252, column: 14, scope: !339)
!508 = !{!437, !139, i64 0}
!509 = !DILocation(line: 253, column: 5, scope: !339)
!510 = !DILocation(line: 253, column: 9, scope: !339)
!511 = !DILocation(line: 253, column: 18, scope: !339)
!512 = !DILocation(line: 254, column: 5, scope: !339)
!513 = distinct !{!513, !512, !514}
!514 = !DILocation(line: 254, column: 26, scope: !339)
!515 = !DILocation(line: 255, column: 5, scope: !339)
!516 = !DILocation(line: 255, column: 9, scope: !339)
!517 = !DILocation(line: 255, column: 18, scope: !339)
!518 = !{!437, !140, i64 39}
!519 = !DILocation(line: 256, column: 16, scope: !339)
!520 = !DILocation(line: 256, column: 5, scope: !339)
!521 = !DILocation(line: 256, column: 9, scope: !339)
!522 = !DILocation(line: 256, column: 14, scope: !339)
!523 = !{!437, !140, i64 41}
!524 = !DILocation(line: 257, column: 18, scope: !339)
!525 = !DILocation(line: 257, column: 5, scope: !339)
!526 = !DILocation(line: 257, column: 9, scope: !339)
!527 = !DILocation(line: 257, column: 16, scope: !339)
!528 = !{!437, !187, i64 32}
!529 = !DILocation(line: 260, column: 12, scope: !339)
!530 = !DILocation(line: 260, column: 26, scope: !339)
!531 = !DILocation(line: 260, column: 5, scope: !339)
!532 = !DILocation(line: 261, column: 19, scope: !339)
!533 = !DILocation(line: 261, column: 5, scope: !339)
!534 = !DILocation(line: 261, column: 9, scope: !339)
!535 = !DILocation(line: 261, column: 17, scope: !339)
!536 = !DILocation(line: 262, column: 12, scope: !339)
!537 = !DILocation(line: 262, column: 5, scope: !339)
!538 = !DILocation(line: 262, column: 45, scope: !339)
!539 = !DILocation(line: 262, column: 37, scope: !339)
!540 = !DILocation(line: 263, column: 19, scope: !339)
!541 = !DILocation(line: 263, column: 5, scope: !339)
!542 = !DILocation(line: 263, column: 9, scope: !339)
!543 = !DILocation(line: 263, column: 17, scope: !339)
!544 = !{!437, !140, i64 38}
!545 = !DILocation(line: 264, column: 12, scope: !339)
!546 = !DILocation(line: 264, column: 5, scope: !339)
!547 = !DILocation(line: 265, column: 1, scope: !339)
!548 = distinct !DISubprogram(name: "pmemobj_direct_inline", scope: !22, file: !22, line: 117, type: !549, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !551)
!549 = !DISubroutineType(types: !550)
!550 = !{!9, !121}
!551 = !{!552, !553}
!552 = !DILocalVariable(name: "oid", arg: 1, scope: !548, file: !22, line: 117, type: !121)
!553 = !DILocalVariable(name: "cache", scope: !548, file: !22, line: 122, type: !554)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_pobj_pcache", file: !22, line: 107, size: 192, elements: !556)
!556 = !{!557, !558, !559}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "pop", scope: !555, file: !22, line: 108, baseType: !117, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "uuid_lo", scope: !555, file: !22, line: 109, baseType: !27, size: 64, offset: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "invalidate", scope: !555, file: !22, line: 110, baseType: !19, size: 32, offset: 128)
!560 = !DILocation(line: 117, column: 31, scope: !548)
!561 = !DILocation(line: 119, column: 10, scope: !562)
!562 = distinct !DILexicalBlock(scope: !548, file: !22, line: 119, column: 6)
!563 = !{!564, !144, i64 8}
!564 = !{!"pmemoid", !144, i64 0, !144, i64 8}
!565 = !DILocation(line: 119, column: 14, scope: !562)
!566 = !DILocation(line: 119, column: 19, scope: !562)
!567 = !DILocation(line: 119, column: 26, scope: !562)
!568 = !{!564, !144, i64 0}
!569 = !DILocation(line: 119, column: 39, scope: !562)
!570 = !DILocation(line: 119, column: 6, scope: !548)
!571 = !DILocation(line: 120, column: 3, scope: !562)
!572 = !DILocation(line: 122, column: 2, scope: !548)
!573 = !DILocation(line: 122, column: 23, scope: !548)
!574 = !DILocation(line: 123, column: 6, scope: !575)
!575 = distinct !DILexicalBlock(scope: !548, file: !22, line: 123, column: 6)
!576 = !DILocation(line: 123, column: 32, scope: !575)
!577 = !DILocation(line: 123, column: 39, scope: !575)
!578 = !{!579, !187, i64 16}
!579 = !{!"_pobj_pcache", !139, i64 0, !144, i64 8, !187, i64 16}
!580 = !DILocation(line: 123, column: 29, scope: !575)
!581 = !DILocation(line: 123, column: 50, scope: !575)
!582 = !DILocation(line: 124, column: 4, scope: !575)
!583 = !DILocation(line: 124, column: 11, scope: !575)
!584 = !{!579, !144, i64 8}
!585 = !DILocation(line: 124, column: 26, scope: !575)
!586 = !DILocation(line: 124, column: 19, scope: !575)
!587 = !DILocation(line: 123, column: 6, scope: !548)
!588 = !DILocation(line: 125, column: 23, scope: !589)
!589 = distinct !DILexicalBlock(scope: !575, file: !22, line: 124, column: 40)
!590 = !DILocation(line: 125, column: 3, scope: !589)
!591 = !DILocation(line: 125, column: 10, scope: !589)
!592 = !DILocation(line: 125, column: 21, scope: !589)
!593 = !DILocation(line: 127, column: 22, scope: !594)
!594 = distinct !DILexicalBlock(scope: !589, file: !22, line: 127, column: 7)
!595 = !DILocation(line: 127, column: 9, scope: !594)
!596 = !DILocation(line: 127, column: 16, scope: !594)
!597 = !DILocation(line: 127, column: 20, scope: !594)
!598 = !{!579, !139, i64 0}
!599 = !DILocation(line: 127, column: 7, scope: !589)
!600 = !DILocation(line: 128, column: 4, scope: !601)
!601 = distinct !DILexicalBlock(scope: !594, file: !22, line: 127, column: 49)
!602 = !DILocation(line: 128, column: 11, scope: !601)
!603 = !DILocation(line: 128, column: 19, scope: !601)
!604 = !DILocation(line: 129, column: 4, scope: !601)
!605 = !DILocation(line: 132, column: 24, scope: !589)
!606 = !DILocation(line: 132, column: 3, scope: !589)
!607 = !DILocation(line: 132, column: 10, scope: !589)
!608 = !DILocation(line: 132, column: 18, scope: !589)
!609 = !DILocation(line: 133, column: 2, scope: !589)
!610 = !DILocation(line: 135, column: 29, scope: !548)
!611 = !DILocation(line: 135, column: 36, scope: !548)
!612 = !DILocation(line: 135, column: 18, scope: !548)
!613 = !DILocation(line: 135, column: 46, scope: !548)
!614 = !DILocation(line: 135, column: 40, scope: !548)
!615 = !DILocation(line: 135, column: 9, scope: !548)
!616 = !DILocation(line: 135, column: 2, scope: !548)
!617 = !DILocation(line: 136, column: 1, scope: !548)
!618 = distinct !DISubprogram(name: "do_item_unlink", scope: !104, file: !104, line: 364, type: !619, scopeLine: 364, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !621)
!619 = !DISubroutineType(types: !620)
!620 = !{null, !30}
!621 = !{!622}
!622 = !DILocalVariable(name: "it", arg: 1, scope: !618, file: !104, line: 364, type: !30)
!623 = !DILocation(line: 364, column: 27, scope: !618)
!624 = !DILocation(line: 365, column: 10, scope: !625)
!625 = distinct !DILexicalBlock(scope: !618, file: !104, line: 365, column: 9)
!626 = !DILocation(line: 365, column: 14, scope: !625)
!627 = !DILocation(line: 365, column: 23, scope: !625)
!628 = !DILocation(line: 365, column: 38, scope: !625)
!629 = !DILocation(line: 365, column: 9, scope: !618)
!630 = !DILocation(line: 366, column: 9, scope: !631)
!631 = distinct !DILexicalBlock(scope: !625, file: !104, line: 365, column: 44)
!632 = !DILocation(line: 366, column: 13, scope: !631)
!633 = !DILocation(line: 366, column: 22, scope: !631)
!634 = !DILocation(line: 367, column: 9, scope: !631)
!635 = !DILocation(line: 369, column: 30, scope: !636)
!636 = distinct !DILexicalBlock(scope: !631, file: !104, line: 368, column: 3)
!637 = !DILocation(line: 369, column: 27, scope: !636)
!638 = !{!457, !144, i64 8}
!639 = !DILocation(line: 370, column: 27, scope: !636)
!640 = !{!457, !187, i64 0}
!641 = !DILocation(line: 372, column: 9, scope: !631)
!642 = !DILocation(line: 373, column: 22, scope: !631)
!643 = !DILocation(line: 373, column: 36, scope: !631)
!644 = !DILocation(line: 373, column: 40, scope: !631)
!645 = !DILocation(line: 373, column: 9, scope: !631)
!646 = !DILocation(line: 374, column: 23, scope: !631)
!647 = !DILocation(line: 374, column: 9, scope: !631)
!648 = !DILocation(line: 375, column: 13, scope: !649)
!649 = distinct !DILexicalBlock(scope: !631, file: !104, line: 375, column: 13)
!650 = !DILocation(line: 375, column: 17, scope: !649)
!651 = !DILocation(line: 375, column: 26, scope: !649)
!652 = !DILocation(line: 375, column: 13, scope: !631)
!653 = !DILocation(line: 375, column: 42, scope: !649)
!654 = !DILocation(line: 375, column: 32, scope: !649)
!655 = !DILocation(line: 376, column: 5, scope: !631)
!656 = !DILocation(line: 377, column: 1, scope: !618)
!657 = distinct !DISubprogram(name: "item_free", scope: !104, file: !104, line: 268, type: !619, scopeLine: 268, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !658)
!658 = !{!659, !660, !661}
!659 = !DILocalVariable(name: "it", arg: 1, scope: !657, file: !104, line: 268, type: !30)
!660 = !DILocalVariable(name: "ntotal", scope: !657, file: !104, line: 269, type: !65)
!661 = !DILocalVariable(name: "freed_obj", scope: !657, file: !104, line: 279, type: !121)
!662 = !DILocation(line: 268, column: 22, scope: !657)
!663 = !DILocation(line: 269, column: 5, scope: !657)
!664 = !DILocation(line: 269, column: 12, scope: !657)
!665 = !DILocation(line: 269, column: 21, scope: !657)
!666 = !DILocation(line: 270, column: 5, scope: !667)
!667 = distinct !DILexicalBlock(scope: !668, file: !104, line: 270, column: 5)
!668 = distinct !DILexicalBlock(scope: !657, file: !104, line: 270, column: 5)
!669 = !DILocation(line: 270, column: 5, scope: !668)
!670 = !DILocation(line: 271, column: 5, scope: !671)
!671 = distinct !DILexicalBlock(scope: !672, file: !104, line: 271, column: 5)
!672 = distinct !DILexicalBlock(scope: !657, file: !104, line: 271, column: 5)
!673 = !DILocation(line: 271, column: 5, scope: !672)
!674 = !DILocation(line: 272, column: 5, scope: !675)
!675 = distinct !DILexicalBlock(scope: !676, file: !104, line: 272, column: 5)
!676 = distinct !DILexicalBlock(scope: !657, file: !104, line: 272, column: 5)
!677 = !DILocation(line: 272, column: 5, scope: !676)
!678 = !DILocation(line: 273, column: 5, scope: !679)
!679 = distinct !DILexicalBlock(scope: !680, file: !104, line: 273, column: 5)
!680 = distinct !DILexicalBlock(scope: !657, file: !104, line: 273, column: 5)
!681 = !DILocation(line: 273, column: 5, scope: !680)
!682 = !DILocation(line: 276, column: 5, scope: !657)
!683 = !DILocation(line: 276, column: 9, scope: !657)
!684 = !DILocation(line: 276, column: 21, scope: !657)
!685 = !DILocation(line: 277, column: 5, scope: !657)
!686 = !DILocation(line: 277, column: 9, scope: !657)
!687 = !DILocation(line: 277, column: 18, scope: !657)
!688 = !DILocation(line: 278, column: 5, scope: !657)
!689 = distinct !{!689, !688, !690}
!690 = !DILocation(line: 278, column: 26, scope: !657)
!691 = !DILocation(line: 279, column: 5, scope: !657)
!692 = !DILocation(line: 279, column: 13, scope: !657)
!693 = !DILocation(line: 279, column: 45, scope: !657)
!694 = !DILocation(line: 279, column: 37, scope: !657)
!695 = !DILocation(line: 279, column: 25, scope: !657)
!696 = !DILocation(line: 280, column: 5, scope: !657)
!697 = !DILocation(line: 281, column: 1, scope: !657)
!698 = distinct !DISubprogram(name: "item_size_ok", scope: !104, file: !104, line: 287, type: !699, scopeLine: 287, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !701)
!699 = !DISubroutineType(types: !700)
!700 = !{!96, !214, !309, !309}
!701 = !{!702, !703, !704, !705, !706}
!702 = !DILocalVariable(name: "nkey", arg: 1, scope: !698, file: !104, line: 287, type: !214)
!703 = !DILocalVariable(name: "flags", arg: 2, scope: !698, file: !104, line: 287, type: !309)
!704 = !DILocalVariable(name: "nbytes", arg: 3, scope: !698, file: !104, line: 287, type: !309)
!705 = !DILocalVariable(name: "prefix", scope: !698, file: !104, line: 288, type: !352)
!706 = !DILocalVariable(name: "nsuffix", scope: !698, file: !104, line: 289, type: !10)
!707 = !DILocation(line: 287, column: 32, scope: !698)
!708 = !DILocation(line: 287, column: 48, scope: !698)
!709 = !DILocation(line: 287, column: 65, scope: !698)
!710 = !DILocation(line: 288, column: 5, scope: !698)
!711 = !DILocation(line: 288, column: 10, scope: !698)
!712 = !DILocation(line: 289, column: 5, scope: !698)
!713 = !DILocation(line: 289, column: 13, scope: !698)
!714 = !DILocation(line: 291, column: 41, scope: !698)
!715 = !DILocation(line: 291, column: 46, scope: !698)
!716 = !DILocation(line: 291, column: 51, scope: !698)
!717 = !DILocation(line: 291, column: 58, scope: !698)
!718 = !DILocation(line: 292, column: 41, scope: !698)
!719 = !DILocation(line: 291, column: 24, scope: !698)
!720 = !DILocation(line: 291, column: 12, scope: !698)
!721 = !DILocation(line: 292, column: 60, scope: !698)
!722 = !DILocation(line: 293, column: 1, scope: !698)
!723 = !DILocation(line: 291, column: 5, scope: !698)
!724 = distinct !DISubprogram(name: "item_link_q", scope: !104, file: !104, line: 296, type: !619, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !725)
!725 = !{!726, !727, !729}
!726 = !DILocalVariable(name: "it", arg: 1, scope: !724, file: !104, line: 296, type: !30)
!727 = !DILocalVariable(name: "head", scope: !724, file: !104, line: 297, type: !728)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!729 = !DILocalVariable(name: "tail", scope: !724, file: !104, line: 297, type: !728)
!730 = !DILocation(line: 296, column: 24, scope: !724)
!731 = !DILocation(line: 297, column: 5, scope: !724)
!732 = !DILocation(line: 297, column: 12, scope: !724)
!733 = !DILocation(line: 297, column: 20, scope: !724)
!734 = !DILocation(line: 299, column: 5, scope: !735)
!735 = distinct !DILexicalBlock(scope: !736, file: !104, line: 299, column: 5)
!736 = distinct !DILexicalBlock(scope: !724, file: !104, line: 299, column: 5)
!737 = !DILocation(line: 299, column: 5, scope: !736)
!738 = !DILocation(line: 301, column: 19, scope: !724)
!739 = !DILocation(line: 301, column: 23, scope: !724)
!740 = !DILocation(line: 301, column: 13, scope: !724)
!741 = !DILocation(line: 301, column: 10, scope: !724)
!742 = !DILocation(line: 302, column: 19, scope: !724)
!743 = !DILocation(line: 302, column: 23, scope: !724)
!744 = !DILocation(line: 302, column: 13, scope: !724)
!745 = !DILocation(line: 302, column: 10, scope: !724)
!746 = !DILocation(line: 303, column: 5, scope: !747)
!747 = distinct !DILexicalBlock(scope: !748, file: !104, line: 303, column: 5)
!748 = distinct !DILexicalBlock(scope: !724, file: !104, line: 303, column: 5)
!749 = !DILocation(line: 303, column: 5, scope: !748)
!750 = !DILocation(line: 304, column: 5, scope: !751)
!751 = distinct !DILexicalBlock(scope: !752, file: !104, line: 304, column: 5)
!752 = distinct !DILexicalBlock(scope: !724, file: !104, line: 304, column: 5)
!753 = !DILocation(line: 304, column: 5, scope: !752)
!754 = !DILocation(line: 305, column: 5, scope: !724)
!755 = !DILocation(line: 305, column: 9, scope: !724)
!756 = !DILocation(line: 305, column: 14, scope: !724)
!757 = !DILocation(line: 306, column: 17, scope: !724)
!758 = !DILocation(line: 306, column: 16, scope: !724)
!759 = !DILocation(line: 306, column: 5, scope: !724)
!760 = !DILocation(line: 306, column: 9, scope: !724)
!761 = !DILocation(line: 306, column: 14, scope: !724)
!762 = !DILocation(line: 307, column: 9, scope: !763)
!763 = distinct !DILexicalBlock(scope: !724, file: !104, line: 307, column: 9)
!764 = !DILocation(line: 307, column: 13, scope: !763)
!765 = !DILocation(line: 307, column: 9, scope: !724)
!766 = !DILocation(line: 307, column: 36, scope: !763)
!767 = !DILocation(line: 307, column: 19, scope: !763)
!768 = !DILocation(line: 307, column: 23, scope: !763)
!769 = !DILocation(line: 307, column: 29, scope: !763)
!770 = !DILocation(line: 307, column: 34, scope: !763)
!771 = !DILocation(line: 308, column: 13, scope: !724)
!772 = !DILocation(line: 308, column: 6, scope: !724)
!773 = !DILocation(line: 308, column: 11, scope: !724)
!774 = !DILocation(line: 309, column: 10, scope: !775)
!775 = distinct !DILexicalBlock(scope: !724, file: !104, line: 309, column: 9)
!776 = !DILocation(line: 309, column: 9, scope: !775)
!777 = !DILocation(line: 309, column: 15, scope: !775)
!778 = !DILocation(line: 309, column: 9, scope: !724)
!779 = !DILocation(line: 309, column: 29, scope: !775)
!780 = !DILocation(line: 309, column: 22, scope: !775)
!781 = !DILocation(line: 309, column: 27, scope: !775)
!782 = !DILocation(line: 309, column: 21, scope: !775)
!783 = !DILocation(line: 310, column: 11, scope: !724)
!784 = !DILocation(line: 310, column: 15, scope: !724)
!785 = !DILocation(line: 310, column: 5, scope: !724)
!786 = !DILocation(line: 310, column: 27, scope: !724)
!787 = !DILocation(line: 312, column: 1, scope: !724)
!788 = distinct !DISubprogram(name: "item_unlink_q", scope: !104, file: !104, line: 315, type: !619, scopeLine: 315, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !789)
!789 = !{!790, !791, !792}
!790 = !DILocalVariable(name: "it", arg: 1, scope: !788, file: !104, line: 315, type: !30)
!791 = !DILocalVariable(name: "head", scope: !788, file: !104, line: 316, type: !728)
!792 = !DILocalVariable(name: "tail", scope: !788, file: !104, line: 316, type: !728)
!793 = !DILocation(line: 315, column: 26, scope: !788)
!794 = !DILocation(line: 316, column: 5, scope: !788)
!795 = !DILocation(line: 316, column: 12, scope: !788)
!796 = !DILocation(line: 316, column: 20, scope: !788)
!797 = !DILocation(line: 318, column: 19, scope: !788)
!798 = !DILocation(line: 318, column: 23, scope: !788)
!799 = !DILocation(line: 318, column: 13, scope: !788)
!800 = !DILocation(line: 318, column: 10, scope: !788)
!801 = !DILocation(line: 319, column: 19, scope: !788)
!802 = !DILocation(line: 319, column: 23, scope: !788)
!803 = !DILocation(line: 319, column: 13, scope: !788)
!804 = !DILocation(line: 319, column: 10, scope: !788)
!805 = !DILocation(line: 321, column: 10, scope: !806)
!806 = distinct !DILexicalBlock(scope: !788, file: !104, line: 321, column: 9)
!807 = !DILocation(line: 321, column: 9, scope: !806)
!808 = !DILocation(line: 321, column: 18, scope: !806)
!809 = !DILocation(line: 321, column: 15, scope: !806)
!810 = !DILocation(line: 321, column: 9, scope: !788)
!811 = !DILocation(line: 322, column: 9, scope: !812)
!812 = distinct !DILexicalBlock(scope: !813, file: !104, line: 322, column: 9)
!813 = distinct !DILexicalBlock(scope: !814, file: !104, line: 322, column: 9)
!814 = distinct !DILexicalBlock(scope: !806, file: !104, line: 321, column: 22)
!815 = !DILocation(line: 322, column: 9, scope: !813)
!816 = !DILocation(line: 323, column: 17, scope: !814)
!817 = !DILocation(line: 323, column: 21, scope: !814)
!818 = !DILocation(line: 323, column: 10, scope: !814)
!819 = !DILocation(line: 323, column: 15, scope: !814)
!820 = !DILocation(line: 324, column: 5, scope: !814)
!821 = !DILocation(line: 325, column: 10, scope: !822)
!822 = distinct !DILexicalBlock(scope: !788, file: !104, line: 325, column: 9)
!823 = !DILocation(line: 325, column: 9, scope: !822)
!824 = !DILocation(line: 325, column: 18, scope: !822)
!825 = !DILocation(line: 325, column: 15, scope: !822)
!826 = !DILocation(line: 325, column: 9, scope: !788)
!827 = !DILocation(line: 326, column: 9, scope: !828)
!828 = distinct !DILexicalBlock(scope: !829, file: !104, line: 326, column: 9)
!829 = distinct !DILexicalBlock(scope: !830, file: !104, line: 326, column: 9)
!830 = distinct !DILexicalBlock(scope: !822, file: !104, line: 325, column: 22)
!831 = !DILocation(line: 326, column: 9, scope: !829)
!832 = !DILocation(line: 327, column: 17, scope: !830)
!833 = !DILocation(line: 327, column: 21, scope: !830)
!834 = !DILocation(line: 327, column: 10, scope: !830)
!835 = !DILocation(line: 327, column: 15, scope: !830)
!836 = !DILocation(line: 328, column: 5, scope: !830)
!837 = !DILocation(line: 329, column: 5, scope: !838)
!838 = distinct !DILexicalBlock(scope: !839, file: !104, line: 329, column: 5)
!839 = distinct !DILexicalBlock(scope: !788, file: !104, line: 329, column: 5)
!840 = !DILocation(line: 329, column: 5, scope: !839)
!841 = !DILocation(line: 330, column: 5, scope: !842)
!842 = distinct !DILexicalBlock(scope: !843, file: !104, line: 330, column: 5)
!843 = distinct !DILexicalBlock(scope: !788, file: !104, line: 330, column: 5)
!844 = !DILocation(line: 330, column: 5, scope: !843)
!845 = !DILocation(line: 332, column: 9, scope: !846)
!846 = distinct !DILexicalBlock(scope: !788, file: !104, line: 332, column: 9)
!847 = !DILocation(line: 332, column: 13, scope: !846)
!848 = !DILocation(line: 332, column: 9, scope: !788)
!849 = !DILocation(line: 332, column: 36, scope: !846)
!850 = !DILocation(line: 332, column: 40, scope: !846)
!851 = !DILocation(line: 332, column: 19, scope: !846)
!852 = !DILocation(line: 332, column: 23, scope: !846)
!853 = !DILocation(line: 332, column: 29, scope: !846)
!854 = !DILocation(line: 332, column: 34, scope: !846)
!855 = !DILocation(line: 333, column: 9, scope: !856)
!856 = distinct !DILexicalBlock(scope: !788, file: !104, line: 333, column: 9)
!857 = !DILocation(line: 333, column: 13, scope: !856)
!858 = !DILocation(line: 333, column: 9, scope: !788)
!859 = !DILocation(line: 333, column: 36, scope: !856)
!860 = !DILocation(line: 333, column: 40, scope: !856)
!861 = !DILocation(line: 333, column: 19, scope: !856)
!862 = !DILocation(line: 333, column: 23, scope: !856)
!863 = !DILocation(line: 333, column: 29, scope: !856)
!864 = !DILocation(line: 333, column: 34, scope: !856)
!865 = !DILocation(line: 334, column: 11, scope: !788)
!866 = !DILocation(line: 334, column: 15, scope: !788)
!867 = !DILocation(line: 334, column: 5, scope: !788)
!868 = !DILocation(line: 334, column: 27, scope: !788)
!869 = !DILocation(line: 336, column: 1, scope: !788)
!870 = distinct !DISubprogram(name: "do_item_link", scope: !104, file: !104, line: 339, type: !871, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !873)
!871 = !DISubroutineType(types: !872)
!872 = !{!19, !30}
!873 = !{!874}
!874 = !DILocalVariable(name: "it", arg: 1, scope: !870, file: !104, line: 339, type: !30)
!875 = !DILocation(line: 339, column: 24, scope: !870)
!876 = !DILocation(line: 340, column: 5, scope: !877)
!877 = distinct !DILexicalBlock(scope: !878, file: !104, line: 340, column: 5)
!878 = distinct !DILexicalBlock(scope: !870, file: !104, line: 340, column: 5)
!879 = !DILocation(line: 340, column: 5, scope: !878)
!880 = !DILocation(line: 341, column: 5, scope: !881)
!881 = distinct !DILexicalBlock(scope: !882, file: !104, line: 341, column: 5)
!882 = distinct !DILexicalBlock(scope: !870, file: !104, line: 341, column: 5)
!883 = !DILocation(line: 341, column: 5, scope: !882)
!884 = !DILocation(line: 342, column: 5, scope: !870)
!885 = !DILocation(line: 342, column: 9, scope: !870)
!886 = !DILocation(line: 342, column: 18, scope: !870)
!887 = !DILocation(line: 343, column: 16, scope: !870)
!888 = !DILocation(line: 343, column: 5, scope: !870)
!889 = !DILocation(line: 343, column: 9, scope: !870)
!890 = !DILocation(line: 343, column: 14, scope: !870)
!891 = !{!437, !187, i64 24}
!892 = !DILocation(line: 345, column: 18, scope: !870)
!893 = !DILocation(line: 345, column: 5, scope: !870)
!894 = !DILocation(line: 347, column: 5, scope: !870)
!895 = !DILocation(line: 349, column: 26, scope: !896)
!896 = distinct !DILexicalBlock(scope: !870, file: !104, line: 348, column: 2)
!897 = !DILocation(line: 349, column: 23, scope: !896)
!898 = !DILocation(line: 350, column: 23, scope: !896)
!899 = !DILocation(line: 351, column: 24, scope: !896)
!900 = !{!457, !187, i64 4}
!901 = !DILocation(line: 353, column: 5, scope: !870)
!902 = !DILocation(line: 356, column: 18, scope: !870)
!903 = !DILocation(line: 356, column: 5, scope: !870)
!904 = !DILocation(line: 356, column: 9, scope: !870)
!905 = !DILocation(line: 356, column: 16, scope: !870)
!906 = !{!437, !144, i64 48}
!907 = !DILocation(line: 358, column: 17, scope: !870)
!908 = !DILocation(line: 358, column: 5, scope: !870)
!909 = !DILocation(line: 360, column: 5, scope: !870)
!910 = distinct !DISubprogram(name: "do_item_remove", scope: !104, file: !104, line: 380, type: !619, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !911)
!911 = !{!912}
!912 = !DILocalVariable(name: "it", arg: 1, scope: !910, file: !104, line: 380, type: !30)
!913 = !DILocation(line: 380, column: 27, scope: !910)
!914 = !DILocation(line: 381, column: 5, scope: !915)
!915 = distinct !DILexicalBlock(scope: !916, file: !104, line: 381, column: 5)
!916 = distinct !DILexicalBlock(scope: !910, file: !104, line: 381, column: 5)
!917 = !DILocation(line: 381, column: 5, scope: !916)
!918 = !DILocation(line: 382, column: 9, scope: !919)
!919 = distinct !DILexicalBlock(scope: !910, file: !104, line: 382, column: 9)
!920 = !DILocation(line: 382, column: 13, scope: !919)
!921 = !DILocation(line: 382, column: 22, scope: !919)
!922 = !DILocation(line: 382, column: 9, scope: !910)
!923 = !DILocation(line: 383, column: 9, scope: !924)
!924 = distinct !DILexicalBlock(scope: !919, file: !104, line: 382, column: 28)
!925 = !DILocation(line: 383, column: 13, scope: !924)
!926 = !DILocation(line: 383, column: 21, scope: !924)
!927 = !DILocation(line: 384, column: 9, scope: !924)
!928 = distinct !{!928, !927, !929}
!929 = !DILocation(line: 384, column: 30, scope: !924)
!930 = !DILocation(line: 385, column: 5, scope: !924)
!931 = !DILocation(line: 386, column: 5, scope: !932)
!932 = distinct !DILexicalBlock(scope: !933, file: !104, line: 386, column: 5)
!933 = distinct !DILexicalBlock(scope: !910, file: !104, line: 386, column: 5)
!934 = !DILocation(line: 386, column: 5, scope: !933)
!935 = !DILocation(line: 387, column: 9, scope: !936)
!936 = distinct !DILexicalBlock(scope: !910, file: !104, line: 387, column: 9)
!937 = !DILocation(line: 387, column: 13, scope: !936)
!938 = !DILocation(line: 387, column: 22, scope: !936)
!939 = !DILocation(line: 387, column: 27, scope: !936)
!940 = !DILocation(line: 387, column: 31, scope: !936)
!941 = !DILocation(line: 387, column: 35, scope: !936)
!942 = !DILocation(line: 387, column: 44, scope: !936)
!943 = !DILocation(line: 387, column: 59, scope: !936)
!944 = !DILocation(line: 387, column: 9, scope: !910)
!945 = !DILocation(line: 388, column: 19, scope: !946)
!946 = distinct !DILexicalBlock(scope: !936, file: !104, line: 387, column: 65)
!947 = !DILocation(line: 388, column: 9, scope: !946)
!948 = !DILocation(line: 389, column: 5, scope: !946)
!949 = !DILocation(line: 390, column: 1, scope: !910)
!950 = distinct !DISubprogram(name: "do_item_update", scope: !104, file: !104, line: 393, type: !619, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !951)
!951 = !{!952}
!952 = !DILocalVariable(name: "it", arg: 1, scope: !950, file: !104, line: 393, type: !30)
!953 = !DILocation(line: 393, column: 27, scope: !950)
!954 = !DILocation(line: 394, column: 9, scope: !955)
!955 = distinct !DILexicalBlock(scope: !950, file: !104, line: 394, column: 9)
!956 = !DILocation(line: 394, column: 13, scope: !955)
!957 = !DILocation(line: 394, column: 20, scope: !955)
!958 = !DILocation(line: 394, column: 33, scope: !955)
!959 = !DILocation(line: 394, column: 18, scope: !955)
!960 = !DILocation(line: 394, column: 9, scope: !950)
!961 = !DILocation(line: 395, column: 9, scope: !962)
!962 = distinct !DILexicalBlock(scope: !963, file: !104, line: 395, column: 9)
!963 = distinct !DILexicalBlock(scope: !964, file: !104, line: 395, column: 9)
!964 = distinct !DILexicalBlock(scope: !955, file: !104, line: 394, column: 57)
!965 = !DILocation(line: 395, column: 9, scope: !963)
!966 = !DILocation(line: 397, column: 14, scope: !967)
!967 = distinct !DILexicalBlock(scope: !964, file: !104, line: 397, column: 13)
!968 = !DILocation(line: 397, column: 18, scope: !967)
!969 = !DILocation(line: 397, column: 27, scope: !967)
!970 = !DILocation(line: 397, column: 42, scope: !967)
!971 = !DILocation(line: 397, column: 13, scope: !964)
!972 = !DILocation(line: 398, column: 27, scope: !973)
!973 = distinct !DILexicalBlock(scope: !967, file: !104, line: 397, column: 48)
!974 = !DILocation(line: 398, column: 13, scope: !973)
!975 = !DILocation(line: 399, column: 24, scope: !973)
!976 = !DILocation(line: 399, column: 13, scope: !973)
!977 = !DILocation(line: 399, column: 17, scope: !973)
!978 = !DILocation(line: 399, column: 22, scope: !973)
!979 = !DILocation(line: 400, column: 25, scope: !973)
!980 = !DILocation(line: 400, column: 13, scope: !973)
!981 = !DILocation(line: 401, column: 9, scope: !973)
!982 = !DILocation(line: 402, column: 5, scope: !964)
!983 = !DILocation(line: 403, column: 1, scope: !950)
!984 = distinct !DISubprogram(name: "do_item_replace", scope: !104, file: !104, line: 406, type: !985, scopeLine: 406, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !987)
!985 = !DISubroutineType(types: !986)
!986 = !{!19, !30, !30}
!987 = !{!988, !989}
!988 = !DILocalVariable(name: "it", arg: 1, scope: !984, file: !104, line: 406, type: !30)
!989 = !DILocalVariable(name: "new_it", arg: 2, scope: !984, file: !104, line: 406, type: !30)
!990 = !DILocation(line: 406, column: 27, scope: !984)
!991 = !DILocation(line: 406, column: 37, scope: !984)
!992 = !DILocation(line: 407, column: 5, scope: !993)
!993 = distinct !DILexicalBlock(scope: !994, file: !104, line: 407, column: 5)
!994 = distinct !DILexicalBlock(scope: !984, file: !104, line: 407, column: 5)
!995 = !DILocation(line: 407, column: 5, scope: !994)
!996 = !DILocation(line: 409, column: 20, scope: !984)
!997 = !DILocation(line: 409, column: 5, scope: !984)
!998 = !DILocation(line: 410, column: 25, scope: !984)
!999 = !DILocation(line: 410, column: 12, scope: !984)
!1000 = !DILocation(line: 410, column: 5, scope: !984)
!1001 = distinct !DISubprogram(name: "do_item_cachedump", scope: !104, file: !104, line: 415, type: !1002, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1005)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!63, !1004, !1004, !84}
!1004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !41)
!1005 = !{!1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015}
!1006 = !DILocalVariable(name: "slabs_clsid", arg: 1, scope: !1001, file: !104, line: 415, type: !1004)
!1007 = !DILocalVariable(name: "limit", arg: 2, scope: !1001, file: !104, line: 415, type: !1004)
!1008 = !DILocalVariable(name: "bytes", arg: 3, scope: !1001, file: !104, line: 415, type: !84)
!1009 = !DILocalVariable(name: "memlimit", scope: !1001, file: !104, line: 416, type: !41)
!1010 = !DILocalVariable(name: "buffer", scope: !1001, file: !104, line: 417, type: !63)
!1011 = !DILocalVariable(name: "bufcurr", scope: !1001, file: !104, line: 418, type: !41)
!1012 = !DILocalVariable(name: "it", scope: !1001, file: !104, line: 419, type: !30)
!1013 = !DILocalVariable(name: "len", scope: !1001, file: !104, line: 420, type: !41)
!1014 = !DILocalVariable(name: "shown", scope: !1001, file: !104, line: 421, type: !41)
!1015 = !DILocalVariable(name: "temp", scope: !1001, file: !104, line: 422, type: !1016)
!1016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 4096, elements: !1017)
!1017 = !{!1018}
!1018 = !DISubrange(count: 512)
!1019 = !DILocation(line: 415, column: 44, scope: !1001)
!1020 = !DILocation(line: 415, column: 76, scope: !1001)
!1021 = !DILocation(line: 415, column: 97, scope: !1001)
!1022 = !DILocation(line: 416, column: 5, scope: !1001)
!1023 = !DILocation(line: 416, column: 18, scope: !1001)
!1024 = !DILocation(line: 417, column: 5, scope: !1001)
!1025 = !DILocation(line: 417, column: 11, scope: !1001)
!1026 = !DILocation(line: 418, column: 5, scope: !1001)
!1027 = !DILocation(line: 418, column: 18, scope: !1001)
!1028 = !DILocation(line: 419, column: 5, scope: !1001)
!1029 = !DILocation(line: 419, column: 11, scope: !1001)
!1030 = !DILocation(line: 420, column: 5, scope: !1001)
!1031 = !DILocation(line: 420, column: 18, scope: !1001)
!1032 = !DILocation(line: 421, column: 5, scope: !1001)
!1033 = !DILocation(line: 421, column: 18, scope: !1001)
!1034 = !DILocation(line: 422, column: 5, scope: !1001)
!1035 = !DILocation(line: 422, column: 10, scope: !1001)
!1036 = !DILocation(line: 424, column: 9, scope: !1037)
!1037 = distinct !DILexicalBlock(scope: !1001, file: !104, line: 424, column: 9)
!1038 = !DILocation(line: 424, column: 21, scope: !1037)
!1039 = !DILocation(line: 424, column: 9, scope: !1001)
!1040 = !DILocation(line: 424, column: 35, scope: !1037)
!1041 = !DILocation(line: 425, column: 16, scope: !1001)
!1042 = !DILocation(line: 425, column: 10, scope: !1001)
!1043 = !DILocation(line: 425, column: 8, scope: !1001)
!1044 = !DILocation(line: 427, column: 29, scope: !1001)
!1045 = !DILocation(line: 427, column: 21, scope: !1001)
!1046 = !DILocation(line: 427, column: 14, scope: !1001)
!1047 = !DILocation(line: 427, column: 12, scope: !1001)
!1048 = !DILocation(line: 428, column: 9, scope: !1049)
!1049 = distinct !DILexicalBlock(scope: !1001, file: !104, line: 428, column: 9)
!1050 = !DILocation(line: 428, column: 16, scope: !1049)
!1051 = !DILocation(line: 428, column: 9, scope: !1001)
!1052 = !DILocation(line: 428, column: 22, scope: !1049)
!1053 = !DILocation(line: 429, column: 13, scope: !1001)
!1054 = !DILocation(line: 431, column: 5, scope: !1001)
!1055 = !DILocation(line: 431, column: 12, scope: !1001)
!1056 = !DILocation(line: 431, column: 15, scope: !1001)
!1057 = !DILocation(line: 431, column: 23, scope: !1001)
!1058 = !DILocation(line: 431, column: 27, scope: !1001)
!1059 = !DILocation(line: 431, column: 33, scope: !1001)
!1060 = !DILocation(line: 431, column: 38, scope: !1001)
!1061 = !DILocation(line: 431, column: 41, scope: !1001)
!1062 = !DILocation(line: 431, column: 49, scope: !1001)
!1063 = !DILocation(line: 431, column: 47, scope: !1001)
!1064 = !DILocation(line: 0, scope: !1001)
!1065 = !DILocation(line: 432, column: 24, scope: !1066)
!1066 = distinct !DILexicalBlock(scope: !1001, file: !104, line: 431, column: 57)
!1067 = !DILocation(line: 432, column: 73, scope: !1066)
!1068 = !DILocation(line: 432, column: 87, scope: !1066)
!1069 = !DILocation(line: 432, column: 91, scope: !1066)
!1070 = !DILocation(line: 432, column: 98, scope: !1066)
!1071 = !DILocation(line: 432, column: 103, scope: !1066)
!1072 = !DILocation(line: 432, column: 107, scope: !1066)
!1073 = !DILocation(line: 432, column: 123, scope: !1066)
!1074 = !{!457, !144, i64 72}
!1075 = !DILocation(line: 432, column: 115, scope: !1066)
!1076 = !DILocation(line: 432, column: 15, scope: !1066)
!1077 = !DILocation(line: 432, column: 13, scope: !1066)
!1078 = !DILocation(line: 433, column: 13, scope: !1079)
!1079 = distinct !DILexicalBlock(scope: !1066, file: !104, line: 433, column: 13)
!1080 = !DILocation(line: 433, column: 23, scope: !1079)
!1081 = !DILocation(line: 433, column: 21, scope: !1079)
!1082 = !DILocation(line: 433, column: 27, scope: !1079)
!1083 = !DILocation(line: 433, column: 33, scope: !1079)
!1084 = !DILocation(line: 433, column: 31, scope: !1079)
!1085 = !DILocation(line: 433, column: 13, scope: !1066)
!1086 = !DILocation(line: 434, column: 13, scope: !1079)
!1087 = !DILocation(line: 435, column: 16, scope: !1066)
!1088 = !DILocation(line: 435, column: 25, scope: !1066)
!1089 = !DILocation(line: 435, column: 23, scope: !1066)
!1090 = !DILocation(line: 435, column: 34, scope: !1066)
!1091 = !DILocation(line: 435, column: 9, scope: !1066)
!1092 = !DILocation(line: 436, column: 20, scope: !1066)
!1093 = !DILocation(line: 436, column: 17, scope: !1066)
!1094 = !DILocation(line: 437, column: 14, scope: !1066)
!1095 = !DILocation(line: 438, column: 14, scope: !1066)
!1096 = !DILocation(line: 438, column: 18, scope: !1066)
!1097 = !DILocation(line: 438, column: 12, scope: !1066)
!1098 = distinct !{!1098, !1054, !1099}
!1099 = !DILocation(line: 439, column: 5, scope: !1001)
!1100 = !DILocation(line: 441, column: 12, scope: !1001)
!1101 = !DILocation(line: 441, column: 21, scope: !1001)
!1102 = !DILocation(line: 441, column: 19, scope: !1001)
!1103 = !DILocation(line: 441, column: 5, scope: !1001)
!1104 = !DILocation(line: 442, column: 13, scope: !1001)
!1105 = !DILocation(line: 444, column: 14, scope: !1001)
!1106 = !DILocation(line: 444, column: 6, scope: !1001)
!1107 = !DILocation(line: 444, column: 12, scope: !1001)
!1108 = !DILocation(line: 445, column: 12, scope: !1001)
!1109 = !DILocation(line: 445, column: 5, scope: !1001)
!1110 = !DILocation(line: 446, column: 1, scope: !1001)
!1111 = distinct !DISubprogram(name: "do_item_stats", scope: !104, file: !104, line: 449, type: !1112, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1115)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!63, !1114}
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64)
!1115 = !{!1116, !1117, !1118, !1119, !1120, !1121, !1122}
!1116 = !DILocalVariable(name: "bytes", arg: 1, scope: !1111, file: !104, line: 449, type: !1114)
!1117 = !DILocalVariable(name: "bufleft", scope: !1111, file: !104, line: 450, type: !65)
!1118 = !DILocalVariable(name: "buffer", scope: !1111, file: !104, line: 451, type: !63)
!1119 = !DILocalVariable(name: "bufcurr", scope: !1111, file: !104, line: 452, type: !63)
!1120 = !DILocalVariable(name: "now", scope: !1111, file: !104, line: 453, type: !40)
!1121 = !DILocalVariable(name: "i", scope: !1111, file: !104, line: 454, type: !19)
!1122 = !DILocalVariable(name: "linelen", scope: !1111, file: !104, line: 455, type: !19)
!1123 = !DILocation(line: 449, column: 26, scope: !1111)
!1124 = !DILocation(line: 450, column: 5, scope: !1111)
!1125 = !DILocation(line: 450, column: 12, scope: !1111)
!1126 = !DILocation(line: 451, column: 5, scope: !1111)
!1127 = !DILocation(line: 451, column: 11, scope: !1111)
!1128 = !DILocation(line: 451, column: 27, scope: !1111)
!1129 = !DILocation(line: 451, column: 20, scope: !1111)
!1130 = !DILocation(line: 452, column: 5, scope: !1111)
!1131 = !DILocation(line: 452, column: 11, scope: !1111)
!1132 = !DILocation(line: 452, column: 21, scope: !1111)
!1133 = !DILocation(line: 453, column: 5, scope: !1111)
!1134 = !DILocation(line: 453, column: 16, scope: !1111)
!1135 = !DILocation(line: 453, column: 22, scope: !1111)
!1136 = !DILocation(line: 454, column: 5, scope: !1111)
!1137 = !DILocation(line: 454, column: 9, scope: !1111)
!1138 = !DILocation(line: 455, column: 5, scope: !1111)
!1139 = !DILocation(line: 455, column: 9, scope: !1111)
!1140 = !DILocation(line: 457, column: 9, scope: !1141)
!1141 = distinct !DILexicalBlock(scope: !1111, file: !104, line: 457, column: 9)
!1142 = !DILocation(line: 457, column: 16, scope: !1141)
!1143 = !DILocation(line: 457, column: 9, scope: !1111)
!1144 = !DILocation(line: 458, column: 9, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1141, file: !104, line: 457, column: 25)
!1146 = !DILocation(line: 461, column: 12, scope: !1147)
!1147 = distinct !DILexicalBlock(scope: !1111, file: !104, line: 461, column: 5)
!1148 = !DILocation(line: 461, column: 10, scope: !1147)
!1149 = !DILocation(line: 461, column: 17, scope: !1150)
!1150 = distinct !DILexicalBlock(scope: !1147, file: !104, line: 461, column: 5)
!1151 = !DILocation(line: 461, column: 19, scope: !1150)
!1152 = !DILocation(line: 461, column: 5, scope: !1147)
!1153 = !DILocation(line: 462, column: 19, scope: !1154)
!1154 = distinct !DILexicalBlock(scope: !1155, file: !104, line: 462, column: 13)
!1155 = distinct !DILexicalBlock(scope: !1150, file: !104, line: 461, column: 38)
!1156 = !DILocation(line: 462, column: 13, scope: !1154)
!1157 = !DILocation(line: 462, column: 22, scope: !1154)
!1158 = !DILocation(line: 462, column: 13, scope: !1155)
!1159 = !DILocation(line: 463, column: 32, scope: !1160)
!1160 = distinct !DILexicalBlock(scope: !1154, file: !104, line: 462, column: 31)
!1161 = !DILocation(line: 463, column: 41, scope: !1160)
!1162 = !DILocation(line: 464, column: 32, scope: !1160)
!1163 = !DILocation(line: 464, column: 41, scope: !1160)
!1164 = !DILocation(line: 464, column: 35, scope: !1160)
!1165 = !DILocation(line: 464, column: 45, scope: !1160)
!1166 = !DILocation(line: 464, column: 48, scope: !1160)
!1167 = !DILocation(line: 464, column: 60, scope: !1160)
!1168 = !DILocation(line: 464, column: 54, scope: !1160)
!1169 = !DILocation(line: 464, column: 64, scope: !1160)
!1170 = !DILocation(line: 464, column: 52, scope: !1160)
!1171 = !DILocation(line: 463, column: 23, scope: !1160)
!1172 = !DILocation(line: 463, column: 21, scope: !1160)
!1173 = !DILocation(line: 465, column: 17, scope: !1174)
!1174 = distinct !DILexicalBlock(scope: !1160, file: !104, line: 465, column: 17)
!1175 = !DILocation(line: 465, column: 25, scope: !1174)
!1176 = !DILocation(line: 465, column: 47, scope: !1174)
!1177 = !DILocation(line: 465, column: 45, scope: !1174)
!1178 = !DILocation(line: 465, column: 17, scope: !1160)
!1179 = !DILocation(line: 466, column: 28, scope: !1180)
!1180 = distinct !DILexicalBlock(scope: !1174, file: !104, line: 465, column: 56)
!1181 = !DILocation(line: 466, column: 25, scope: !1180)
!1182 = !DILocation(line: 467, column: 28, scope: !1180)
!1183 = !DILocation(line: 467, column: 25, scope: !1180)
!1184 = !DILocation(line: 468, column: 13, scope: !1180)
!1185 = !DILocation(line: 471, column: 17, scope: !1186)
!1186 = distinct !DILexicalBlock(scope: !1174, file: !104, line: 469, column: 18)
!1187 = !DILocation(line: 473, column: 9, scope: !1160)
!1188 = !DILocation(line: 474, column: 5, scope: !1155)
!1189 = !DILocation(line: 461, column: 34, scope: !1150)
!1190 = !DILocation(line: 461, column: 5, scope: !1150)
!1191 = distinct !{!1191, !1152, !1192}
!1192 = !DILocation(line: 474, column: 5, scope: !1147)
!1193 = !DILocation(line: 475, column: 12, scope: !1111)
!1194 = !DILocation(line: 475, column: 5, scope: !1111)
!1195 = !DILocation(line: 476, column: 13, scope: !1111)
!1196 = !DILocation(line: 478, column: 14, scope: !1111)
!1197 = !DILocation(line: 478, column: 24, scope: !1111)
!1198 = !DILocation(line: 478, column: 22, scope: !1111)
!1199 = !DILocation(line: 478, column: 6, scope: !1111)
!1200 = !DILocation(line: 478, column: 12, scope: !1111)
!1201 = !DILocation(line: 479, column: 12, scope: !1111)
!1202 = !DILocation(line: 479, column: 5, scope: !1111)
!1203 = !DILocation(line: 480, column: 1, scope: !1111)
!1204 = distinct !DISubprogram(name: "do_item_stats_sizes", scope: !104, file: !104, line: 485, type: !1112, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1205)
!1205 = !{!1206, !1207, !1208, !1209, !1210, !1211, !1215, !1217}
!1206 = !DILocalVariable(name: "bytes", arg: 1, scope: !1204, file: !104, line: 485, type: !1114)
!1207 = !DILocalVariable(name: "num_buckets", scope: !1204, file: !104, line: 486, type: !309)
!1208 = !DILocalVariable(name: "histogram", scope: !1204, file: !104, line: 487, type: !84)
!1209 = !DILocalVariable(name: "buf", scope: !1204, file: !104, line: 488, type: !63)
!1210 = !DILocalVariable(name: "i", scope: !1204, file: !104, line: 489, type: !19)
!1211 = !DILocalVariable(name: "iter", scope: !1212, file: !104, line: 500, type: !30)
!1212 = distinct !DILexicalBlock(scope: !1213, file: !104, line: 499, column: 38)
!1213 = distinct !DILexicalBlock(scope: !1214, file: !104, line: 499, column: 5)
!1214 = distinct !DILexicalBlock(scope: !1204, file: !104, line: 499, column: 5)
!1215 = !DILocalVariable(name: "ntotal", scope: !1216, file: !104, line: 502, type: !19)
!1216 = distinct !DILexicalBlock(scope: !1212, file: !104, line: 501, column: 22)
!1217 = !DILocalVariable(name: "bucket", scope: !1216, file: !104, line: 503, type: !19)
!1218 = !DILocation(line: 485, column: 32, scope: !1204)
!1219 = !DILocation(line: 486, column: 5, scope: !1204)
!1220 = !DILocation(line: 486, column: 15, scope: !1204)
!1221 = !DILocation(line: 487, column: 5, scope: !1204)
!1222 = !DILocation(line: 487, column: 19, scope: !1204)
!1223 = !DILocation(line: 487, column: 47, scope: !1204)
!1224 = !DILocation(line: 487, column: 31, scope: !1204)
!1225 = !DILocation(line: 488, column: 5, scope: !1204)
!1226 = !DILocation(line: 488, column: 11, scope: !1204)
!1227 = !DILocation(line: 488, column: 25, scope: !1204)
!1228 = !DILocation(line: 489, column: 5, scope: !1204)
!1229 = !DILocation(line: 489, column: 9, scope: !1204)
!1230 = !DILocation(line: 491, column: 9, scope: !1231)
!1231 = distinct !DILexicalBlock(scope: !1204, file: !104, line: 491, column: 9)
!1232 = !DILocation(line: 491, column: 19, scope: !1231)
!1233 = !DILocation(line: 491, column: 24, scope: !1231)
!1234 = !DILocation(line: 491, column: 27, scope: !1231)
!1235 = !DILocation(line: 491, column: 31, scope: !1231)
!1236 = !DILocation(line: 491, column: 9, scope: !1204)
!1237 = !DILocation(line: 492, column: 13, scope: !1238)
!1238 = distinct !DILexicalBlock(scope: !1239, file: !104, line: 492, column: 13)
!1239 = distinct !DILexicalBlock(scope: !1231, file: !104, line: 491, column: 37)
!1240 = !DILocation(line: 492, column: 13, scope: !1239)
!1241 = !DILocation(line: 492, column: 29, scope: !1238)
!1242 = !DILocation(line: 492, column: 24, scope: !1238)
!1243 = !DILocation(line: 493, column: 13, scope: !1244)
!1244 = distinct !DILexicalBlock(scope: !1239, file: !104, line: 493, column: 13)
!1245 = !DILocation(line: 493, column: 13, scope: !1239)
!1246 = !DILocation(line: 493, column: 23, scope: !1244)
!1247 = !DILocation(line: 493, column: 18, scope: !1244)
!1248 = !DILocation(line: 494, column: 9, scope: !1239)
!1249 = !DILocation(line: 498, column: 12, scope: !1204)
!1250 = !DILocation(line: 498, column: 5, scope: !1204)
!1251 = !DILocation(line: 499, column: 12, scope: !1214)
!1252 = !DILocation(line: 499, column: 10, scope: !1214)
!1253 = !DILocation(line: 499, column: 17, scope: !1213)
!1254 = !DILocation(line: 499, column: 19, scope: !1213)
!1255 = !DILocation(line: 499, column: 5, scope: !1214)
!1256 = !DILocation(line: 500, column: 9, scope: !1212)
!1257 = !DILocation(line: 500, column: 15, scope: !1212)
!1258 = !DILocation(line: 500, column: 28, scope: !1212)
!1259 = !DILocation(line: 500, column: 22, scope: !1212)
!1260 = !DILocation(line: 501, column: 9, scope: !1212)
!1261 = !DILocation(line: 501, column: 16, scope: !1212)
!1262 = !DILocation(line: 502, column: 13, scope: !1216)
!1263 = !DILocation(line: 502, column: 17, scope: !1216)
!1264 = !DILocation(line: 502, column: 26, scope: !1216)
!1265 = !DILocation(line: 503, column: 13, scope: !1216)
!1266 = !DILocation(line: 503, column: 17, scope: !1216)
!1267 = !DILocation(line: 503, column: 26, scope: !1216)
!1268 = !DILocation(line: 503, column: 33, scope: !1216)
!1269 = !DILocation(line: 504, column: 18, scope: !1270)
!1270 = distinct !DILexicalBlock(scope: !1216, file: !104, line: 504, column: 17)
!1271 = !DILocation(line: 504, column: 25, scope: !1270)
!1272 = !DILocation(line: 504, column: 31, scope: !1270)
!1273 = !DILocation(line: 504, column: 17, scope: !1216)
!1274 = !DILocation(line: 504, column: 43, scope: !1270)
!1275 = !DILocation(line: 504, column: 37, scope: !1270)
!1276 = !DILocation(line: 505, column: 17, scope: !1277)
!1277 = distinct !DILexicalBlock(scope: !1216, file: !104, line: 505, column: 17)
!1278 = !DILocation(line: 505, column: 24, scope: !1277)
!1279 = !DILocation(line: 505, column: 17, scope: !1216)
!1280 = !DILocation(line: 505, column: 39, scope: !1277)
!1281 = !DILocation(line: 505, column: 49, scope: !1277)
!1282 = !DILocation(line: 505, column: 56, scope: !1277)
!1283 = !DILocation(line: 506, column: 20, scope: !1216)
!1284 = !DILocation(line: 506, column: 26, scope: !1216)
!1285 = !DILocation(line: 506, column: 18, scope: !1216)
!1286 = !DILocation(line: 507, column: 9, scope: !1212)
!1287 = distinct !{!1287, !1260, !1286}
!1288 = !DILocation(line: 508, column: 5, scope: !1213)
!1289 = !DILocation(line: 508, column: 5, scope: !1212)
!1290 = !DILocation(line: 499, column: 34, scope: !1213)
!1291 = !DILocation(line: 499, column: 5, scope: !1213)
!1292 = distinct !{!1292, !1255, !1293}
!1293 = !DILocation(line: 508, column: 5, scope: !1214)
!1294 = !DILocation(line: 511, column: 6, scope: !1204)
!1295 = !DILocation(line: 511, column: 12, scope: !1204)
!1296 = !DILocation(line: 512, column: 12, scope: !1297)
!1297 = distinct !DILexicalBlock(scope: !1204, file: !104, line: 512, column: 5)
!1298 = !DILocation(line: 512, column: 10, scope: !1297)
!1299 = !DILocation(line: 512, column: 17, scope: !1300)
!1300 = distinct !DILexicalBlock(scope: !1297, file: !104, line: 512, column: 5)
!1301 = !DILocation(line: 512, column: 19, scope: !1300)
!1302 = !DILocation(line: 512, column: 5, scope: !1297)
!1303 = !DILocation(line: 513, column: 13, scope: !1304)
!1304 = distinct !DILexicalBlock(scope: !1305, file: !104, line: 513, column: 13)
!1305 = distinct !DILexicalBlock(scope: !1300, file: !104, line: 512, column: 39)
!1306 = !DILocation(line: 513, column: 23, scope: !1304)
!1307 = !DILocation(line: 513, column: 26, scope: !1304)
!1308 = !DILocation(line: 513, column: 13, scope: !1305)
!1309 = !DILocation(line: 514, column: 32, scope: !1310)
!1310 = distinct !DILexicalBlock(scope: !1304, file: !104, line: 513, column: 32)
!1311 = !DILocation(line: 514, column: 37, scope: !1310)
!1312 = !DILocation(line: 514, column: 36, scope: !1310)
!1313 = !DILocation(line: 514, column: 58, scope: !1310)
!1314 = !DILocation(line: 514, column: 60, scope: !1310)
!1315 = !DILocation(line: 514, column: 66, scope: !1310)
!1316 = !DILocation(line: 514, column: 76, scope: !1310)
!1317 = !DILocation(line: 514, column: 23, scope: !1310)
!1318 = !DILocation(line: 514, column: 14, scope: !1310)
!1319 = !DILocation(line: 514, column: 20, scope: !1310)
!1320 = !DILocation(line: 515, column: 9, scope: !1310)
!1321 = !DILocation(line: 516, column: 5, scope: !1305)
!1322 = !DILocation(line: 512, column: 35, scope: !1300)
!1323 = !DILocation(line: 512, column: 5, scope: !1300)
!1324 = distinct !{!1324, !1302, !1325}
!1325 = !DILocation(line: 516, column: 5, scope: !1297)
!1326 = !DILocation(line: 517, column: 24, scope: !1204)
!1327 = !DILocation(line: 517, column: 29, scope: !1204)
!1328 = !DILocation(line: 517, column: 28, scope: !1204)
!1329 = !DILocation(line: 517, column: 15, scope: !1204)
!1330 = !DILocation(line: 517, column: 6, scope: !1204)
!1331 = !DILocation(line: 517, column: 12, scope: !1204)
!1332 = !DILocation(line: 518, column: 10, scope: !1204)
!1333 = !DILocation(line: 518, column: 5, scope: !1204)
!1334 = !DILocation(line: 519, column: 12, scope: !1204)
!1335 = !DILocation(line: 519, column: 5, scope: !1204)
!1336 = !DILocation(line: 520, column: 1, scope: !1204)
!1337 = distinct !DISubprogram(name: "item_delete_lock_over", scope: !104, file: !104, line: 525, type: !1338, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1340)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!96, !30}
!1340 = !{!1341}
!1341 = !DILocalVariable(name: "it", arg: 1, scope: !1337, file: !104, line: 525, type: !30)
!1342 = !DILocation(line: 525, column: 35, scope: !1337)
!1343 = !DILocation(line: 526, column: 5, scope: !1344)
!1344 = distinct !DILexicalBlock(scope: !1345, file: !104, line: 526, column: 5)
!1345 = distinct !DILexicalBlock(scope: !1337, file: !104, line: 526, column: 5)
!1346 = !DILocation(line: 526, column: 5, scope: !1345)
!1347 = !DILocation(line: 527, column: 13, scope: !1337)
!1348 = !DILocation(line: 527, column: 29, scope: !1337)
!1349 = !DILocation(line: 527, column: 33, scope: !1337)
!1350 = !DILocation(line: 527, column: 26, scope: !1337)
!1351 = !DILocation(line: 527, column: 5, scope: !1337)
!1352 = distinct !DISubprogram(name: "do_item_get_notedeleted", scope: !104, file: !104, line: 532, type: !1353, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1355)
!1353 = !DISubroutineType(types: !1354)
!1354 = !{!30, !82, !214, !95}
!1355 = !{!1356, !1357, !1358, !1359}
!1356 = !DILocalVariable(name: "key", arg: 1, scope: !1352, file: !104, line: 532, type: !82)
!1357 = !DILocalVariable(name: "nkey", arg: 2, scope: !1352, file: !104, line: 532, type: !214)
!1358 = !DILocalVariable(name: "delete_locked", arg: 3, scope: !1352, file: !104, line: 532, type: !95)
!1359 = !DILocalVariable(name: "it", scope: !1352, file: !104, line: 533, type: !30)
!1360 = !DILocation(line: 532, column: 43, scope: !1352)
!1361 = !DILocation(line: 532, column: 61, scope: !1352)
!1362 = !DILocation(line: 532, column: 73, scope: !1352)
!1363 = !DILocation(line: 533, column: 5, scope: !1352)
!1364 = !DILocation(line: 533, column: 11, scope: !1352)
!1365 = !DILocation(line: 533, column: 27, scope: !1352)
!1366 = !DILocation(line: 533, column: 32, scope: !1352)
!1367 = !DILocation(line: 533, column: 16, scope: !1352)
!1368 = !DILocation(line: 534, column: 9, scope: !1369)
!1369 = distinct !DILexicalBlock(scope: !1352, file: !104, line: 534, column: 9)
!1370 = !DILocation(line: 534, column: 9, scope: !1352)
!1371 = !DILocation(line: 534, column: 25, scope: !1369)
!1372 = !DILocation(line: 534, column: 39, scope: !1369)
!1373 = !{!234, !234, i64 0}
!1374 = !DILocation(line: 534, column: 24, scope: !1369)
!1375 = !DILocation(line: 535, column: 9, scope: !1376)
!1376 = distinct !DILexicalBlock(scope: !1352, file: !104, line: 535, column: 9)
!1377 = !DILocation(line: 535, column: 12, scope: !1376)
!1378 = !DILocation(line: 535, column: 20, scope: !1376)
!1379 = !DILocation(line: 535, column: 24, scope: !1376)
!1380 = !DILocation(line: 535, column: 28, scope: !1376)
!1381 = !DILocation(line: 535, column: 37, scope: !1376)
!1382 = !DILocation(line: 535, column: 9, scope: !1352)
!1383 = !DILocation(line: 539, column: 36, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1385, file: !104, line: 539, column: 13)
!1385 = distinct !DILexicalBlock(scope: !1376, file: !104, line: 535, column: 54)
!1386 = !DILocation(line: 539, column: 14, scope: !1384)
!1387 = !DILocation(line: 539, column: 13, scope: !1385)
!1388 = !DILocation(line: 540, column: 17, scope: !1389)
!1389 = distinct !DILexicalBlock(scope: !1390, file: !104, line: 540, column: 17)
!1390 = distinct !DILexicalBlock(scope: !1384, file: !104, line: 539, column: 41)
!1391 = !DILocation(line: 540, column: 17, scope: !1390)
!1392 = !DILocation(line: 540, column: 33, scope: !1389)
!1393 = !DILocation(line: 540, column: 47, scope: !1389)
!1394 = !DILocation(line: 540, column: 32, scope: !1389)
!1395 = !DILocation(line: 541, column: 16, scope: !1390)
!1396 = !DILocation(line: 542, column: 9, scope: !1390)
!1397 = !DILocation(line: 543, column: 5, scope: !1385)
!1398 = !DILocation(line: 544, column: 9, scope: !1399)
!1399 = distinct !DILexicalBlock(scope: !1352, file: !104, line: 544, column: 9)
!1400 = !DILocation(line: 544, column: 12, scope: !1399)
!1401 = !DILocation(line: 544, column: 20, scope: !1399)
!1402 = !DILocation(line: 544, column: 32, scope: !1399)
!1403 = !{!232, !187, i64 28}
!1404 = !DILocation(line: 544, column: 44, scope: !1399)
!1405 = !DILocation(line: 544, column: 49, scope: !1399)
!1406 = !DILocation(line: 544, column: 61, scope: !1399)
!1407 = !DILocation(line: 544, column: 76, scope: !1399)
!1408 = !DILocation(line: 544, column: 73, scope: !1399)
!1409 = !DILocation(line: 544, column: 89, scope: !1399)
!1410 = !DILocation(line: 545, column: 9, scope: !1399)
!1411 = !DILocation(line: 545, column: 13, scope: !1399)
!1412 = !DILocation(line: 545, column: 30, scope: !1399)
!1413 = !DILocation(line: 545, column: 18, scope: !1399)
!1414 = !DILocation(line: 544, column: 9, scope: !1352)
!1415 = !DILocation(line: 546, column: 24, scope: !1416)
!1416 = distinct !DILexicalBlock(scope: !1399, file: !104, line: 545, column: 43)
!1417 = !DILocation(line: 546, column: 9, scope: !1416)
!1418 = !DILocation(line: 547, column: 12, scope: !1416)
!1419 = !DILocation(line: 548, column: 5, scope: !1416)
!1420 = !DILocation(line: 549, column: 9, scope: !1421)
!1421 = distinct !DILexicalBlock(scope: !1352, file: !104, line: 549, column: 9)
!1422 = !DILocation(line: 549, column: 12, scope: !1421)
!1423 = !DILocation(line: 549, column: 20, scope: !1421)
!1424 = !DILocation(line: 549, column: 23, scope: !1421)
!1425 = !DILocation(line: 549, column: 27, scope: !1421)
!1426 = !DILocation(line: 549, column: 35, scope: !1421)
!1427 = !DILocation(line: 549, column: 40, scope: !1421)
!1428 = !DILocation(line: 549, column: 43, scope: !1421)
!1429 = !DILocation(line: 549, column: 47, scope: !1421)
!1430 = !DILocation(line: 549, column: 58, scope: !1421)
!1431 = !DILocation(line: 549, column: 55, scope: !1421)
!1432 = !DILocation(line: 549, column: 9, scope: !1352)
!1433 = !DILocation(line: 550, column: 24, scope: !1434)
!1434 = distinct !DILexicalBlock(scope: !1421, file: !104, line: 549, column: 72)
!1435 = !DILocation(line: 550, column: 9, scope: !1434)
!1436 = !DILocation(line: 551, column: 12, scope: !1434)
!1437 = !DILocation(line: 552, column: 5, scope: !1434)
!1438 = !DILocation(line: 554, column: 9, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !1352, file: !104, line: 554, column: 9)
!1440 = !DILocation(line: 554, column: 12, scope: !1439)
!1441 = !DILocation(line: 554, column: 9, scope: !1352)
!1442 = !DILocation(line: 555, column: 9, scope: !1443)
!1443 = distinct !DILexicalBlock(scope: !1439, file: !104, line: 554, column: 21)
!1444 = !DILocation(line: 555, column: 13, scope: !1443)
!1445 = !DILocation(line: 555, column: 21, scope: !1443)
!1446 = !DILocation(line: 556, column: 9, scope: !1443)
!1447 = distinct !{!1447, !1446, !1448}
!1448 = !DILocation(line: 556, column: 30, scope: !1443)
!1449 = !DILocation(line: 557, column: 5, scope: !1443)
!1450 = !DILocation(line: 558, column: 12, scope: !1352)
!1451 = !DILocation(line: 559, column: 1, scope: !1352)
!1452 = !DILocation(line: 558, column: 5, scope: !1352)
!1453 = distinct !DISubprogram(name: "item_get", scope: !104, file: !104, line: 561, type: !1454, scopeLine: 561, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1456)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!30, !82, !214}
!1456 = !{!1457, !1458}
!1457 = !DILocalVariable(name: "key", arg: 1, scope: !1453, file: !104, line: 561, type: !82)
!1458 = !DILocalVariable(name: "nkey", arg: 2, scope: !1453, file: !104, line: 561, type: !214)
!1459 = !DILocation(line: 561, column: 28, scope: !1453)
!1460 = !DILocation(line: 561, column: 46, scope: !1453)
!1461 = !DILocation(line: 562, column: 12, scope: !1453)
!1462 = !DILocation(line: 562, column: 5, scope: !1453)
!1463 = distinct !DISubprogram(name: "do_item_get_nocheck", scope: !104, file: !104, line: 567, type: !1454, scopeLine: 567, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1464)
!1464 = !{!1465, !1466, !1467}
!1465 = !DILocalVariable(name: "key", arg: 1, scope: !1463, file: !104, line: 567, type: !82)
!1466 = !DILocalVariable(name: "nkey", arg: 2, scope: !1463, file: !104, line: 567, type: !214)
!1467 = !DILocalVariable(name: "it", scope: !1463, file: !104, line: 568, type: !30)
!1468 = !DILocation(line: 567, column: 39, scope: !1463)
!1469 = !DILocation(line: 567, column: 57, scope: !1463)
!1470 = !DILocation(line: 568, column: 5, scope: !1463)
!1471 = !DILocation(line: 568, column: 11, scope: !1463)
!1472 = !DILocation(line: 568, column: 27, scope: !1463)
!1473 = !DILocation(line: 568, column: 32, scope: !1463)
!1474 = !DILocation(line: 568, column: 16, scope: !1463)
!1475 = !DILocation(line: 569, column: 9, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1463, file: !104, line: 569, column: 9)
!1477 = !DILocation(line: 569, column: 9, scope: !1463)
!1478 = !DILocation(line: 570, column: 9, scope: !1479)
!1479 = distinct !DILexicalBlock(scope: !1476, file: !104, line: 569, column: 13)
!1480 = !DILocation(line: 570, column: 13, scope: !1479)
!1481 = !DILocation(line: 570, column: 21, scope: !1479)
!1482 = !DILocation(line: 571, column: 9, scope: !1479)
!1483 = distinct !{!1483, !1482, !1484}
!1484 = !DILocation(line: 571, column: 30, scope: !1479)
!1485 = !DILocation(line: 572, column: 5, scope: !1479)
!1486 = !DILocation(line: 573, column: 12, scope: !1463)
!1487 = !DILocation(line: 574, column: 1, scope: !1463)
!1488 = !DILocation(line: 573, column: 5, scope: !1463)
!1489 = distinct !DISubprogram(name: "do_item_flush_expired", scope: !104, file: !104, line: 578, type: !56, scopeLine: 578, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1490)
!1490 = !{!1491, !1492, !1493}
!1491 = !DILocalVariable(name: "i", scope: !1489, file: !104, line: 579, type: !19)
!1492 = !DILocalVariable(name: "iter", scope: !1489, file: !104, line: 580, type: !30)
!1493 = !DILocalVariable(name: "next", scope: !1489, file: !104, line: 580, type: !30)
!1494 = !DILocation(line: 579, column: 5, scope: !1489)
!1495 = !DILocation(line: 579, column: 9, scope: !1489)
!1496 = !DILocation(line: 580, column: 5, scope: !1489)
!1497 = !DILocation(line: 580, column: 11, scope: !1489)
!1498 = !DILocation(line: 580, column: 18, scope: !1489)
!1499 = !DILocation(line: 581, column: 18, scope: !1500)
!1500 = distinct !DILexicalBlock(scope: !1489, file: !104, line: 581, column: 9)
!1501 = !DILocation(line: 581, column: 30, scope: !1500)
!1502 = !DILocation(line: 581, column: 9, scope: !1489)
!1503 = !DILocation(line: 582, column: 9, scope: !1500)
!1504 = !DILocation(line: 583, column: 12, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1489, file: !104, line: 583, column: 5)
!1506 = !DILocation(line: 583, column: 10, scope: !1505)
!1507 = !DILocation(line: 583, column: 17, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1505, file: !104, line: 583, column: 5)
!1509 = !DILocation(line: 583, column: 19, scope: !1508)
!1510 = !DILocation(line: 583, column: 5, scope: !1505)
!1511 = !DILocation(line: 589, column: 27, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !1513, file: !104, line: 589, column: 9)
!1513 = distinct !DILexicalBlock(scope: !1508, file: !104, line: 583, column: 38)
!1514 = !DILocation(line: 589, column: 21, scope: !1512)
!1515 = !DILocation(line: 589, column: 19, scope: !1512)
!1516 = !DILocation(line: 589, column: 14, scope: !1512)
!1517 = !DILocation(line: 589, column: 31, scope: !1518)
!1518 = distinct !DILexicalBlock(scope: !1512, file: !104, line: 589, column: 9)
!1519 = !DILocation(line: 589, column: 36, scope: !1518)
!1520 = !DILocation(line: 589, column: 9, scope: !1512)
!1521 = !DILocation(line: 590, column: 17, scope: !1522)
!1522 = distinct !DILexicalBlock(scope: !1523, file: !104, line: 590, column: 17)
!1523 = distinct !DILexicalBlock(scope: !1518, file: !104, line: 589, column: 58)
!1524 = !DILocation(line: 590, column: 23, scope: !1522)
!1525 = !DILocation(line: 590, column: 40, scope: !1522)
!1526 = !DILocation(line: 590, column: 28, scope: !1522)
!1527 = !DILocation(line: 590, column: 17, scope: !1523)
!1528 = !DILocation(line: 591, column: 24, scope: !1529)
!1529 = distinct !DILexicalBlock(scope: !1522, file: !104, line: 590, column: 53)
!1530 = !DILocation(line: 591, column: 30, scope: !1529)
!1531 = !DILocation(line: 591, column: 22, scope: !1529)
!1532 = !DILocation(line: 592, column: 22, scope: !1533)
!1533 = distinct !DILexicalBlock(scope: !1529, file: !104, line: 592, column: 21)
!1534 = !DILocation(line: 592, column: 28, scope: !1533)
!1535 = !DILocation(line: 592, column: 37, scope: !1533)
!1536 = !DILocation(line: 592, column: 53, scope: !1533)
!1537 = !DILocation(line: 592, column: 21, scope: !1529)
!1538 = !DILocation(line: 593, column: 36, scope: !1539)
!1539 = distinct !DILexicalBlock(scope: !1533, file: !104, line: 592, column: 59)
!1540 = !DILocation(line: 593, column: 21, scope: !1539)
!1541 = !DILocation(line: 594, column: 17, scope: !1539)
!1542 = !DILocation(line: 595, column: 13, scope: !1529)
!1543 = !DILocation(line: 597, column: 17, scope: !1544)
!1544 = distinct !DILexicalBlock(scope: !1522, file: !104, line: 595, column: 20)
!1545 = !DILocation(line: 599, column: 9, scope: !1523)
!1546 = !DILocation(line: 589, column: 52, scope: !1518)
!1547 = !DILocation(line: 589, column: 50, scope: !1518)
!1548 = !DILocation(line: 589, column: 9, scope: !1518)
!1549 = distinct !{!1549, !1520, !1550}
!1550 = !DILocation(line: 599, column: 9, scope: !1512)
!1551 = !DILocation(line: 600, column: 5, scope: !1513)
!1552 = !DILocation(line: 583, column: 34, scope: !1508)
!1553 = !DILocation(line: 583, column: 5, scope: !1508)
!1554 = distinct !{!1554, !1510, !1555}
!1555 = !DILocation(line: 600, column: 5, scope: !1505)
!1556 = !DILocation(line: 601, column: 1, scope: !1489)

=========== Module Dump End ============

[ 60%] Building C object CMakeFiles/memcached.dir/memcached.c.o
clang-11: warning: -lpthread: 'linker' input unused [-Wunused-command-line-argument]
(impload) Calling PaviseImpLoad Pass constructor
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:143
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:278
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:278
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:287
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:293
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:299
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:299
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:299
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:306
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:310
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:310
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:310
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:311
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:311
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:311
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:312
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:312
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:312
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:315
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:316
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:334
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:335
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:336
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:337
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:338
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:339
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:343
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:344
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:345
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:346
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:347
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:348
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:349
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:350
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:354
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:356
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:362
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:364
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:366
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:392
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:393
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:396
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:397
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:398
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:403
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:406
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:409
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2371
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2371
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2371
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2372
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2372
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2375
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2382
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2383
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2397
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2409
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:442
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:445
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:447
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:449
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:451
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:453
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:455
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:457
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:458
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:589
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:589
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:596
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:600
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:606
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:612
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:612
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:612
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:619
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:819
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:819
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:820
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:820
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:821
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:821

/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:826
  %3 = bitcast %struct._stritem** %old_it to i8*, !dbg !935
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #12, !dbg !935
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:826
  call void @llvm.dbg.declare(metadata %struct._stritem** %old_it, metadata !1579, metadata !DIExpression()), !dbg !1591
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:826
  %4 = load i8*, i8** %key, align 8, !dbg !937, !tbaa !920
^Encountering ld inst of a ptr
  %5 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !938, !tbaa !920
^Encountering ld inst of a ptr
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 10, !dbg !939
  %6 = load i8, i8* %nkey, align 1, !dbg !939, !tbaa !940
  %conv = zext i8 %6 to i64, !dbg !938
  %call = call %struct._stritem* @do_item_get_notedeleted(i8* %4, i64 %conv, i8* %delete_locked), !dbg !944
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:826
  store %struct._stritem* %call, %struct._stritem** %old_it, align 8, !dbg !936, !tbaa !920
^Encountering st inst of a ptr
inserting pavise_store in front of memcached.c:826, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:827
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:827
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:829
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:829
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:830
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:830
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:834
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:846
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:854
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:872
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:874
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:884
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:885
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:888
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:889
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:900
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:903
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:905
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:912
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:914
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:917
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:917
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:917
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:917
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:917
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:917
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1523
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1523
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1523
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1523
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1524
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1524
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1525
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1525
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1526
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1526
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1531
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1533
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1543
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1544
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1546
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1546
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1547
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1547
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1551
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1552
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1553
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1554
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1555
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1556
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1557
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1561
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1561
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1561
 LLVM parsing call inst:
//usr/include/stdlib.h:361
 LLVM parsing call inst:
//usr/include/stdlib.h:363
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1628
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1628
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1631
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1631
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1631
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1640
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1643
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1646
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2584
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2584
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2585
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2586
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2587
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2588
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2588
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2589
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2650
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2650
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2650
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2650
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2653
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2653
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2654
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2655
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2657
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2658
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2662
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2664
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2664
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2798
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2799
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2799
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2800
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2802
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2802
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2803
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2804
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2804
 LLVM parsing call inst:
//usr/include/x86_64-linux-gnu/sys/stat.h:449
 LLVM parsing call inst:
//usr/include/x86_64-linux-gnu/sys/stat.h:449
 LLVM parsing call inst:
//usr/include/x86_64-linux-gnu/sys/stat.h:451
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2808
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2808
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2808
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2808
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2808
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2808
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2808
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2809
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2809
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2809
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2809
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2809
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2809
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2809
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2812
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2812
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2813
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2813
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2813
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2813
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2814
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2814
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2815
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2815
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2816
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2816
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2817
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2817
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2818
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2818
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2819
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2819
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2820
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2820
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2821
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2821
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2822
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2822
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2824
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2827
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2830
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2832
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2832
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2834
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2838
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2841
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2847
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2853
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2859
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2862
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2863
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2865
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2866
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2874
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2875
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2878
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2894
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2896
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2901
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2903
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2908
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2910
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2916
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2921
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2924
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2929
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2929
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2929
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2947
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2947
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2952
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2954
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2957
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2966
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2967
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2968
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2970
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2977
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2978
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2979
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2981
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2981
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2986
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2987
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2988
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2990
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3001
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3003
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3004
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3010
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3012
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3013
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3018
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3018
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3020
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3023
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3024
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3027
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3027
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3028
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3035
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3037
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3038
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3045
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3045
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3046
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3048
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3051
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3055
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3059
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3059
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3059
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3060
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3061
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3063
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3064
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3068
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3070
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3071
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3073
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3079
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3091
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3092
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3093
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3094
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3097
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3099
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3100
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3103
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3107
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3107
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3109
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3113
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3114
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3115
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3117
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3122
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3127
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3129
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3132
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:3134
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2793
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2794
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2795
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:191
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:191
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:191
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:191
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:191
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:191
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:191
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:191
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2667
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2668
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2690
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2696
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2697
 LLVM parsing call inst:
//usr/include/x86_64-linux-gnu/bits/stdlib-float.h:25
 LLVM parsing call inst:
//usr/include/x86_64-linux-gnu/bits/stdlib-float.h:27
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2465
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2465
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2466
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2466
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2467
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2467
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2467
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2468
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2468
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2469
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2469
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2471
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2475
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2477
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2479
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2480
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2481
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2488
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2491
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2491
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2491
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2491
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2491
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2491
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2491
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2491
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2492
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2493
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2494
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2495
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2498
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2499
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2500
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2504
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2504
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2504
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2504
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2524
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2524
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2525
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2525
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2526
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2526
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2526
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2527
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2527
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2528
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2528
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2529
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2529
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2530
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2530
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2536
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2543
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2545
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2548
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2549
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2550
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2556
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2559
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2560
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2561
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2562
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2563
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2564
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2567
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2568
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2569
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2570
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2574
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2574
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2574
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2574
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2574
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2574
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:267
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:268
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:577
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:579
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2766
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2766
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2767
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2767
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2771
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2772
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2776
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2777
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2778
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2781
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2609
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2609
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2609
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2610
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2610
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2610
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2615
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2620
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2621
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2622
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2624
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2625
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2629
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2629
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2629
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2630
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2630
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2630
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2636
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2641
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2642
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2643
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2644
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2645
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2783
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2787
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2788
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:462
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:463
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:466
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:470
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:473
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:474
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:475
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:478
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:479
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:482
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:484
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2106
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2109
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2109
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2110
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2110
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2110
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2110
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2111
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2111
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2112
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2112
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2113
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2113
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2115
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2123
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2124
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2124
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2127
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2129
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2130
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2133
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2138
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2139
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2140
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2141
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2144
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2150
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2155
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2155
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2165
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2167
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2168
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2183
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2190
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2190
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2195
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2202
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2207
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2209
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2211
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2218
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2221
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2221
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2222
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2224
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2225
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2233
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2234
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2242
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2248
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2248
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2253
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2256
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2258
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2260
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2265
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2268
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2268
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2269
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2271
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2272
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2280
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2281
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2292
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2293
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2295
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2296
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2305
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2310
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2310

/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2311
  %169 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1371, !tbaa !934
^Encountering ld inst of a ptr
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %169, i32 0, i32 8, !dbg !1371
  %170 = load i8, i8* %it_flags, align 1, !dbg !1371, !tbaa !1374
  %conv234 = zext i8 %170 to i32, !dbg !1371
  %and = and i32 %conv234, 4, !dbg !1371
  %cmp235 = icmp eq i32 %and, 0, !dbg !1371
  br i1 %cmp235, label %if.then237, label %if.else238, !dbg !1376
  br label %if.end239, !dbg !1376
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 2311, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.drive_machine, i64 0, i64 0)) #13, !dbg !1371
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2311
  unreachable, !dbg !1371
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2312
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2315
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2317
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2317
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2318
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2320
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2324
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2325
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2328
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2331
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2334
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2335
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2355
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2357
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2364
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2364
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2364
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2364
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2364
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2364
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2018
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2019
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2022
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2023
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2024
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2028
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2029
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2030
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:411
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:412
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:415
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:421
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:427
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:428
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:434
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2001
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2001
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2002
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2004
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2004
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2007
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2008
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2009
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2011
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2013
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1860
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1862
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1862
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1862
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1862
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1864
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1865
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1871
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1881
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1884
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1889
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1891
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1891
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1896
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1896
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1896
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1902
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1903
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1903
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1905
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1908
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1911
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1911
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1912
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1914
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1921
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1927
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1932
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1934
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1943
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1944
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1944
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1945
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1945
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1947
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1951
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1957
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1957
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1957
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1960
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1962
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1968
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1979
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1981
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1983
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1990
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1994
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1994
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1999
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1999
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:553
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:553
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:554
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:558
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:779
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:780
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:782
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:782
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:783
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:783
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:784
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:784
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:786
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:788

/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:790
  %10 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !953, !tbaa !916
^Encountering ld inst of a ptr
  %end = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 12, !dbg !953
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %end, i64 0, i64 0, !dbg !953
  %11 = bitcast i8** %arrayidx to i8*, !dbg !953
  %12 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !953, !tbaa !916
^Encountering ld inst of a ptr
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %12, i32 0, i32 10, !dbg !953
  %13 = load i8, i8* %nkey, align 1, !dbg !953, !tbaa !955
  %conv = zext i8 %13 to i32, !dbg !953
  %idx.ext = sext i32 %conv to i64, !dbg !953
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !953
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !953
  %14 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !953, !tbaa !916
^Encountering ld inst of a ptr
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %14, i32 0, i32 7, !dbg !953
  %15 = load i8, i8* %nsuffix, align 2, !dbg !953, !tbaa !957
  %conv2 = zext i8 %15 to i32, !dbg !953
  %idx.ext3 = sext i32 %conv2 to i64, !dbg !953
  %add.ptr4 = getelementptr inbounds i8, i8* %add.ptr1, i64 %idx.ext3, !dbg !953
  %16 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !958, !tbaa !916
^Encountering ld inst of a ptr
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %16, i32 0, i32 5, !dbg !959
  %17 = load i32, i32* %nbytes, align 8, !dbg !959, !tbaa !960
  %idx.ext5 = sext i32 %18 to i64, !dbg !961
  %add.ptr6 = getelementptr inbounds i8, i8* %add.ptr4, i64 %idx.ext5, !dbg !961
  %add.ptr7 = getelementptr inbounds i8, i8* %add.ptr6, i64 -2, !dbg !962
  %call = call i32 @strncmp(i8* %add.ptr7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #14, !dbg !963
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:790
  %cmp8 = icmp ne i32 %call, 0, !dbg !964
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !965
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:791
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:797
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:799
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:801
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:803
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:805
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:808
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:810
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:810
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:810
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:659
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:659
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:659
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:660
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:660
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:661
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:661
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:662
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:662
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:664
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:678
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:682
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:706
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:706
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:706
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:712
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:713
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:713
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:714
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:714
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:716
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:719
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:719
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:721
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:723
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:728
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:742
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:746
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:746
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2045
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2046
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2054
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2054
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2055
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2055
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2057
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2059
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2061
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2079
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2079
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2080
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2082
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2083
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2091
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2094
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2096
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2098
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2098
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1664
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1664
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1666
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1666
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1667
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1667
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1668
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1668
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1670
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1673
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1683
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1684
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1688
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1690
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1691
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1693
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1696
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1697
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1698
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1699
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1700
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1702
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1704
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1706
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1708
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1710
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1712
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1714
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1716
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1718
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1720
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1722
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1724
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1725
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1725
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1725
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1725
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1727
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1731
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1733
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1737
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1740
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1744
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1744
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1744
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1746
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1746
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1748
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1751
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1753
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1757
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1760
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1764
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1764
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1765
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1765
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1765
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1765
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1767
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1770
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1778
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1781
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1785
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1785
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1785
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1787
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1789
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1790
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1790
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1791
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1795
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1796
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1800
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1801
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1802
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1806
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1807
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1808
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1811
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1811
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1813
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1815
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1817
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1819
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1820
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1847
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1849
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1850
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1852
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1855
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1855
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1855
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:216
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:218
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:218
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:220
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:223
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:234
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:248
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:252
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:749
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:749
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:750
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:750
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:752
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:755
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:757
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:761
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:764
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:765
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:769
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:772
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:948
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:948
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:948
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:949
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:949
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:949
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:949
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:950
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:950
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:952
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:984
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:984
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:984
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1208
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1208
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1208
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1208
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1209
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1209
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1210
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1210
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1211
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1211
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1212
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1212
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1213
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1213
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1214
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1214
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1215
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1215
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1216
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1216
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1217
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1217
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1218
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1221
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1221
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1223
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1228
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1231
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1240
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1244
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1245
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1250
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1258
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1258
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1258
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1263
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1277
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1277
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1277
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1283
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1285
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1287
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1291
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1292
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1296
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1297
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1298
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1299
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1300
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1300
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1301
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1308

/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1309
  %117 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1209, !tbaa !946
^Encountering ld inst of a ptr
  %118 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1210, !tbaa !946
^Encountering ld inst of a ptr
  %end127 = getelementptr inbounds %struct._stritem, %struct._stritem* %118, i32 0, i32 12, !dbg !1210
  %arrayidx128 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end127, i64 0, i64 0, !dbg !1210
  %119 = bitcast i8** %arrayidx128 to i8*, !dbg !1210
  %120 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1211, !tbaa !946
^Encountering ld inst of a ptr
  %nkey129 = getelementptr inbounds %struct._stritem, %struct._stritem* %120, i32 0, i32 10, !dbg !1212
  %121 = load i8, i8* %nkey129, align 1, !dbg !1212, !tbaa !1172
  %conv130 = zext i8 %121 to i32, !dbg !1211
  %call131 = call i32 @add_iov(%struct.conn* %117, i8* %119, i32 %conv130), !dbg !1213
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1309
  %cmp132 = icmp ne i32 %call131, 0, !dbg !1214
  br i1 %cmp132, label %if.then149, label %lor.lhs.false134, !dbg !1215

/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1310
  %122 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1216, !tbaa !946
^Encountering ld inst of a ptr
  %123 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1217, !tbaa !946
^Encountering ld inst of a ptr
  %end135 = getelementptr inbounds %struct._stritem, %struct._stritem* %123, i32 0, i32 12, !dbg !1217
  %arrayidx136 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end135, i64 0, i64 0, !dbg !1217
  %124 = bitcast i8** %arrayidx136 to i8*, !dbg !1217
  %125 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1217, !tbaa !946
^Encountering ld inst of a ptr
  %nkey137 = getelementptr inbounds %struct._stritem, %struct._stritem* %125, i32 0, i32 10, !dbg !1217
  %126 = load i8, i8* %nkey137, align 1, !dbg !1217, !tbaa !1172
  %conv138 = zext i8 %126 to i32, !dbg !1217
  %idx.ext139 = sext i32 %conv138 to i64, !dbg !1217
  %add.ptr140 = getelementptr inbounds i8, i8* %124, i64 %idx.ext139, !dbg !1217
  %add.ptr141 = getelementptr inbounds i8, i8* %add.ptr140, i64 1, !dbg !1217
  %127 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1218, !tbaa !946
^Encountering ld inst of a ptr
  %nsuffix142 = getelementptr inbounds %struct._stritem, %struct._stritem* %127, i32 0, i32 7, !dbg !1219
  %128 = load i8, i8* %nsuffix142, align 2, !dbg !1219, !tbaa !1180
  %conv143 = zext i8 %128 to i32, !dbg !1218
  %129 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1220, !tbaa !946
^Encountering ld inst of a ptr
  %nbytes144 = getelementptr inbounds %struct._stritem, %struct._stritem* %129, i32 0, i32 5, !dbg !1221
  %130 = load i32, i32* %nbytes144, align 8, !dbg !1221, !tbaa !1196
  %add145 = add nsw i32 %conv143, %131, !dbg !1222
  %call146 = call i32 @add_iov(%struct.conn* %122, i8* %add.ptr141, i32 %add145), !dbg !1223
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1310
  %cmp147 = icmp ne i32 %call146, 0, !dbg !1224
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1318
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1322
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1338
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1352
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1359
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1360
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1361
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1364
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1368
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1372
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1375
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1375
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1375
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1375
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1375
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1375
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1375
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1375
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1375
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1377
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1377
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1377
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1377
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1377
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1378
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1378
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1379
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1379
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1380
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1380
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1381
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1381
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1382
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1382
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1382
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1382
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1383
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1383
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1384
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1384
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1384
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1384
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1386
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1389
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1396
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1397
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1398
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1406
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1409
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1409
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1410
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1421
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1421
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1423
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1428
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1431
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1438
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1438
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1441
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1442
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1444

/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1454
  %65 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1114, !tbaa !936
^Encountering ld inst of a ptr
  %end = getelementptr inbounds %struct._stritem, %struct._stritem* %65, i32 0, i32 12, !dbg !1114
  %arrayidx63 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end, i64 0, i64 0, !dbg !1114
  %66 = bitcast i8** %arrayidx63 to i8*, !dbg !1114
  %67 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1114, !tbaa !936
^Encountering ld inst of a ptr
  %nkey64 = getelementptr inbounds %struct._stritem, %struct._stritem* %67, i32 0, i32 10, !dbg !1114
  %68 = load i8, i8* %nkey64, align 1, !dbg !1114, !tbaa !1115
  %conv65 = zext i8 %68 to i32, !dbg !1114
  %idx.ext = sext i32 %conv65 to i64, !dbg !1114
  %add.ptr = getelementptr inbounds i8, i8* %66, i64 %idx.ext, !dbg !1114
  %add.ptr66 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !1114
  %69 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1114, !tbaa !936
^Encountering ld inst of a ptr
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %69, i32 0, i32 7, !dbg !1114
  %70 = load i8, i8* %nsuffix, align 2, !dbg !1114, !tbaa !1116
  %conv67 = zext i8 %70 to i32, !dbg !1114
  %idx.ext68 = sext i32 %conv67 to i64, !dbg !1114
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr66, i64 %idx.ext68, !dbg !1114
  %71 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1117, !tbaa !936
^Encountering ld inst of a ptr
  %ritem = getelementptr inbounds %struct.conn, %struct.conn* %71, i32 0, i32 15, !dbg !1118
  store i8* %add.ptr69, i8** %ritem, align 8, !dbg !1119, !tbaa !1120
^Encountering st inst of a ptr
inserting pavise_store in front of memcached.c:1454, fileid = 0

/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1455
  %74 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !1121, !tbaa !936
^Encountering ld inst of a ptr
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %74, i32 0, i32 5, !dbg !1122
  %75 = load i32, i32* %nbytes, align 8, !dbg !1122, !tbaa !1123
  %77 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1124, !tbaa !936
^Encountering ld inst of a ptr
  %rlbytes = getelementptr inbounds %struct.conn, %struct.conn* %77, i32 0, i32 16, !dbg !1125
  store i32 %76, i32* %rlbytes, align 8, !dbg !1126, !tbaa !1127
inserting pavise_store in front of memcached.c:1455, fileid = 0
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1460
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1463
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1463
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1463
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1463
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1463
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1463
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1463
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1463
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1463
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1465
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1465
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1465
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1465
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1466
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1466
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1467
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1467
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1468
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1468
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1469
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1469
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1470
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1470
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1472
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1475
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1483
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1483
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1485
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1490
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1493
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1495
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1497
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1498
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1502
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1504
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1508
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1508
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1509
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1510
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1510
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1510
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1510
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1510
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1563
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1563
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1563
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1564
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1564
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1565
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1565
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1566
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1566
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1567
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1567
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1569
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1572
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1572
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1574
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1579
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1582
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1588
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1593
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1595
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1596
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1607
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1610
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1611
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1612
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1615
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1615
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1618
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1620
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1620
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1620
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1620
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1021
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1021
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1021
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1023
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1023
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1025
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1025
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1026
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1026
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1028
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1031
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1037
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1038
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1038
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1039
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1039
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1039
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1040
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1040
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1043
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1043
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1044
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1047
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1048
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1049
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1050
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1051
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1052
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1054
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1055
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1057
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1058
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1059
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1060
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1061
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1062
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1063
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1064
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1065
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1066
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1067
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1068
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1069
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1070
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1071
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1072
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1073
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1074
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1076
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1076
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1076
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1076
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1080
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1081
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1089
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1090
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1090
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1091
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1091
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1092
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1092
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1094
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1094
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1094
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1094
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1095
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1096
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1097
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1098
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1099
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1100
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1101
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1102
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1103
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1104
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1105
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1107
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1107
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1107
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1112
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1113
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1113
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1114
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1114
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1115
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1115
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1116
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1116
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1118
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1119
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1123
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1125
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1126
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1130
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1132
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1133
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1133
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1137
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1138
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1138
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1141
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1142
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1143
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1145
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1145
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1145
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1145
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1148
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1150
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1150
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1151
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1151
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1151
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1151
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1151
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1151
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1154
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1158
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1159
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1161
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1162
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1166
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1167
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1169
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1169
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1169
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1169
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1171
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1172
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1172
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1173
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1179
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1180
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1180
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1181
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1181
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1181
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1182
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1184
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1184
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1186
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1187
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1197
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1198
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1198
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1199
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1199
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1199
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1200
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1202
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1202
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1204
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1205
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1205
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1205
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2605
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1653
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1653
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1653
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1654
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1654
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1656
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1658
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1660
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:1662
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:987
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:987
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:987
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:992
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:995
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:498
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:499
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:505
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:505
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:508
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:510
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:518
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:521
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:521
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:521
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:527
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:530
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:530
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:530
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:536
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:539
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:539
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:539
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:545
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:629
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:630
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:633
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:633
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:633
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:633
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:634
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:634
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:634
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:646
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:646
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:646
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2411
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2412
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2412
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2413
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2413
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2415
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2416
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2420
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2421
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2422
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2423
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2427
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2427
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2433
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2434
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2434
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2435
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2435
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2436
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2436
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2436
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2436
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2436
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2436
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2437
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2437
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2440
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2442
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2452
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2461
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2462
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2462
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2462
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2462
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2462
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2462
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2507
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2507
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2508
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2508
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2510
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2511
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2515
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2516
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2517
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2518
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2522
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c:2522
 LLVM parsing call inst:
//usr/include/x86_64-linux-gnu/sys/stat.h:456
 LLVM parsing call inst:
//usr/include/x86_64-linux-gnu/sys/stat.h:456
 LLVM parsing call inst:
//usr/include/x86_64-linux-gnu/sys/stat.h:458

=========== Module New Dump ============

; ModuleID = '/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c'
source_filename = "/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stats = type { i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.conn = type { i32, i32, %struct.event, i16, i16, i8*, i8*, i32, i32, i8*, i8*, i32, i32, i32, i8*, i8*, i32, i8*, i32, i32, %struct.iovec*, i32, i32, %struct.msghdr*, i32, i32, i32, i32, %struct._stritem**, i32, %struct._stritem**, i32, i8**, i32, i8**, i32, i8, i32, %struct.sockaddr, i32, i8*, i32, i32, i32, i32 }
%struct.event = type { %struct.event_callback, %union.anon.0, i32, %struct.event_base*, %union.anon.2, i16, i16, %struct.timeval }
%struct.event_callback = type { %struct.anon, i16, i8, i8, %union.anon, i8* }
%struct.anon = type { %struct.event_callback*, %struct.event_callback** }
%union.anon = type { void (i32, i16, i8*)* }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { %struct.event*, %struct.event** }
%struct.event_base = type opaque
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.anon.4, %struct.timeval }
%struct.anon.4 = type { %struct.event*, %struct.event** }
%struct.timeval = type { i64, i64 }
%struct.iovec = type { i8*, i64 }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i64, i8*, i64, i32 }
%struct._stritem = type { %struct._stritem*, %struct._stritem*, %struct._stritem*, i32, i32, i32, i16, i8, i8, i8, i8, i64, [8 x i8*] }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.settings = type { i64, i32, i32, i32, %struct.in_addr, i32, i32, i8, i32, i8*, i32, double, i32, i32, i8, i32 }
%struct.in_addr = type { i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.sigaction = type { %union.anon.7, %struct.__sigset_t, i32, void ()* }
%union.anon.7 = type { void (i32)* }
%struct.__sigset_t = type { [16 x i64] }
%struct.rlimit = type { i64, i64 }
%struct.pmemobjpool = type opaque
%struct.linger = type { i32, i32 }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.sockaddr_un = type { i16, [108 x i8] }
%struct.token_s = type { i8*, i64 }
%struct.rusage = type { %struct.timeval, %struct.timeval, %union.anon.18, %union.anon.19, %union.anon.20, %union.anon.21, %union.anon.22, %union.anon.23, %union.anon.24, %union.anon.25, %union.anon.26, %union.anon.27, %union.anon.28, %union.anon.29, %union.anon.30, %union.anon.31 }
%union.anon.18 = type { i64 }
%union.anon.19 = type { i64 }
%union.anon.20 = type { i64 }
%union.anon.21 = type { i64 }
%union.anon.22 = type { i64 }
%union.anon.23 = type { i64 }
%union.anon.24 = type { i64 }
%union.anon.25 = type { i64 }
%union.anon.26 = type { i64 }
%union.anon.27 = type { i64 }
%union.anon.28 = type { i64 }
%union.anon.29 = type { i64 }
%union.anon.30 = type { i64 }
%union.anon.31 = type { i64 }
%struct.mallinfo = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@stats = dso_local global %struct.stats zeroinitializer, align 8, !dbg !0
@current_time = dso_local global i32 0, align 4, !dbg !851
@freecurr = internal global i32 0, align 4, !dbg !843
@freeconns = internal global %struct.conn** null, align 8, !dbg !839
@freetotal = internal global i32 0, align 4, !dbg !841
@.str = private unnamed_addr constant [9 x i8] c"malloc()\00", align 1
@settings = dso_local global %struct.settings zeroinitializer, align 8, !dbg !808
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [22 x i8] c"<%d server listening\0A\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"<%d server listening (udp)\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"<%d new client connection\0A\00", align 1
@freesuffixcurr = internal global i32 0, align 4, !dbg !849
@freesuffix = internal global i8** null, align 8, !dbg !845
@freesuffixtotal = internal global i32 0, align 4, !dbg !847
@.str.4 = private unnamed_addr constant [61 x i8] c"CLIENT_ERROR cannot increment or decrement non-numeric value\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"SERVER_ERROR out of memory\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@delcurr = internal global i32 0, align 4, !dbg !831
@deltotal = internal global i32 0, align 4, !dbg !833
@todelete = internal global %struct._stritem** null, align 8, !dbg !854
@.str.8 = private unnamed_addr constant [8 x i8] c"DELETED\00", align 1
@trace = dso_local global i8 0, align 1, !dbg !803
@n_drv_mc = dso_local global i32 0, align 4, !dbg !806
@l_socket = internal global i32 0, align 4, !dbg !856
@u_socket = internal global i32 -1, align 4, !dbg !858
@.str.9 = private unnamed_addr constant [17 x i8] c"it->refcount > 0\00", align 1
@.str.10 = private unnamed_addr constant [51 x i8] c"/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c\00", align 1
@__PRETTY_FUNCTION__.do_run_deferred_deletes = private unnamed_addr constant [35 x i8] c"void do_run_deferred_deletes(void)\00", align 1
@.str.11 = private unnamed_addr constant [37 x i8] c"a:bp:s:U:m:Mc:khirvdl:u:P:f:s:n:t:D:\00", align 1
@optarg = external dso_local global i8*, align 8
@.str.12 = private unnamed_addr constant [21 x i8] c"Illegal address: %s\0A\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"Factor must be greater than 1\0A\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c"Chunk size must be greater than 0\0A\00", align 1
@.str.15 = private unnamed_addr constant [42 x i8] c"Number of threads must be greater than 0\0A\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"No delimiter specified\0A\00", align 1
@.str.17 = private unnamed_addr constant [36 x i8] c"0 && \22Detailed stats not available\22\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"Illegal argument \22%c\22\0A\00", align 1
@.str.19 = private unnamed_addr constant [36 x i8] c"failed to ensure corefile creation\0A\00", align 1
@.str.20 = private unnamed_addr constant [37 x i8] c"failed to getrlimit number of files\0A\00", align 1
@.str.21 = private unnamed_addr constant [96 x i8] c"failed to set rlimit for open files. Try running as root or requesting smaller maxconns value.\0A\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"failed to listen\0A\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"failed to listen on UDP port %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [41 x i8] c"can't run as root without the -u switch\0A\00", align 1
@.str.25 = private unnamed_addr constant [37 x i8] c"can't find the user %s to switch to\0A\00", align 1
@.str.26 = private unnamed_addr constant [38 x i8] c"failed to assume identity of user %s\0A\00", align 1
@.str.27 = private unnamed_addr constant [42 x i8] c"failed to daemon() in order to daemonize\0A\00", align 1
@main_base = internal global %struct.event_base* null, align 8, !dbg !837
@buckets = internal global i32* null, align 8, !dbg !860
@.str.28 = private unnamed_addr constant [36 x i8] c"failed to allocate the bucket array\00", align 1
@.str.29 = private unnamed_addr constant [36 x i8] c"failed to ignore SIGPIPE; sigaction\00", align 1
@listen_conn = internal global %struct.conn* null, align 8, !dbg !835
@.str.30 = private unnamed_addr constant [38 x i8] c"failed to create listening connection\00", align 1
@.str.31 = private unnamed_addr constant [45 x i8] c"failed to allocate memory for deletion array\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"c != NULL\00", align 1
@__PRETTY_FUNCTION__.event_handler = private unnamed_addr constant [51 x i8] c"void event_handler(const int, const short, void *)\00", align 1
@.str.33 = private unnamed_addr constant [47 x i8] c"Catastrophic: event fd doesn't match conn fd!\0A\00", align 1
@__PRETTY_FUNCTION__.conn_close = private unnamed_addr constant [24 x i8] c"void conn_close(conn *)\00", align 1
@.str.34 = private unnamed_addr constant [24 x i8] c"<%d connection closed.\0A\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"listen\00", align 1
@__PRETTY_FUNCTION__.update_event = private unnamed_addr constant [38 x i8] c"_Bool update_event(conn *, const int)\00", align 1
@__PRETTY_FUNCTION__.conn_cleanup = private unnamed_addr constant [26 x i8] c"void conn_cleanup(conn *)\00", align 1
@__PRETTY_FUNCTION__.drive_machine = private unnamed_addr constant [27 x i8] c"void drive_machine(conn *)\00", align 1
@.str.36 = private unnamed_addr constant [27 x i8] c"Too many open connections\0A\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"accept()\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"setting O_NONBLOCK\00", align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"Couldn't update event\0A\00", align 1
@.str.40 = private unnamed_addr constant [41 x i8] c"Failed to read, and not due to blocking\0A\00", align 1
@.str.41 = private unnamed_addr constant [25 x i8] c"Couldn't build response\0A\00", align 1
@.str.42 = private unnamed_addr constant [35 x i8] c"(it->it_flags & ITEM_SLABBED) == 0\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"Unexpected state %d\0A\00", align 1
@__PRETTY_FUNCTION__.try_read_command = private unnamed_addr constant [29 x i8] c"int try_read_command(conn *)\00", align 1
@.str.44 = private unnamed_addr constant [33 x i8] c"c->rcurr <= (c->rbuf + c->rsize)\00", align 1
@.str.45 = private unnamed_addr constant [31 x i8] c"cont <= (c->rcurr + c->rbytes)\00", align 1
@__PRETTY_FUNCTION__.process_command = private unnamed_addr constant [37 x i8] c"void process_command(conn *, char *)\00", align 1
@.str.46 = private unnamed_addr constant [24 x i8] c"<%d process_command %s\0A\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"bget\00", align 1
@.str.49 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.52 = private unnamed_addr constant [8 x i8] c"prepend\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"append\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"cas\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"incr\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"gets\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"decr\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"own\00", align 1
@.str.60 = private unnamed_addr constant [36 x i8] c"CLIENT_ERROR not a managed instance\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"%u:%u\00", align 1
@.str.62 = private unnamed_addr constant [40 x i8] c"CLIENT_ERROR bucket number out of range\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"OWNED\00", align 1
@.str.64 = private unnamed_addr constant [24 x i8] c"CLIENT_ERROR bad format\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"disown\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.67 = private unnamed_addr constant [9 x i8] c"DISOWNED\00", align 1
@.str.68 = private unnamed_addr constant [3 x i8] c"bg\00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"stats\00", align 1
@.str.70 = private unnamed_addr constant [10 x i8] c"flush_all\00", align 1
@.str.71 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.72 = private unnamed_addr constant [37 x i8] c"CLIENT_ERROR bad command line format\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.74 = private unnamed_addr constant [14 x i8] c"VERSION 1.2.4\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"slabs\00", align 1
@.str.77 = private unnamed_addr constant [9 x i8] c"reassign\00", align 1
@.str.78 = private unnamed_addr constant [45 x i8] c"CLIENT_ERROR Slab reassignment not supported\00", align 1
@.str.79 = private unnamed_addr constant [10 x i8] c"verbosity\00", align 1
@.str.80 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@__PRETTY_FUNCTION__.add_msghdr = private unnamed_addr constant [23 x i8] c"int add_msghdr(conn *)\00", align 1
@__PRETTY_FUNCTION__.out_string = private unnamed_addr constant [38 x i8] c"void out_string(conn *, const char *)\00", align 1
@.str.81 = private unnamed_addr constant [19 x i8] c">%d out_string %s\0A\00", align 1
@.str.82 = private unnamed_addr constant [34 x i8] c"SERVER_ERROR output line too long\00", align 1
@.str.83 = private unnamed_addr constant [52 x i8] c"command != NULL && tokens != NULL && max_tokens > 1\00", align 1
@__PRETTY_FUNCTION__.tokenize_command = private unnamed_addr constant [57 x i8] c"size_t tokenize_command(char *, token_t *, const size_t)\00", align 1
@__PRETTY_FUNCTION__.process_get_command = private unnamed_addr constant [59 x i8] c"void process_get_command(conn *, token_t *, size_t, _Bool)\00", align 1
@.str.84 = private unnamed_addr constant [40 x i8] c"CLIENT_ERROR no BG data in managed mode\00", align 1
@.str.85 = private unnamed_addr constant [16 x i8] c"ERROR_NOT_OWNER\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c" %lu\0D\0A\00", align 1
@.str.87 = private unnamed_addr constant [7 x i8] c"VALUE \00", align 1
@.str.88 = private unnamed_addr constant [20 x i8] c">%d sending key %s\0A\00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c">%d END\0A\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"END\0D\0A\00", align 1
@__PRETTY_FUNCTION__.process_update_command = private unnamed_addr constant [73 x i8] c"void process_update_command(conn *, token_t *, const size_t, int, _Bool)\00", align 1
@.str.91 = private unnamed_addr constant [40 x i8] c"SERVER_ERROR object too large for cache\00", align 1
@.str.92 = private unnamed_addr constant [31 x i8] c"XXX SERVER_ERROR out of memory\00", align 1
@__PRETTY_FUNCTION__.process_arithmetic_command = private unnamed_addr constant [78 x i8] c"void process_arithmetic_command(conn *, token_t *, const size_t, const _Bool)\00", align 1
@.str.93 = private unnamed_addr constant [10 x i8] c"NOT_FOUND\00", align 1
@__PRETTY_FUNCTION__.process_delete_command = private unnamed_addr constant [61 x i8] c"void process_delete_command(conn *, token_t *, const size_t)\00", align 1
@__PRETTY_FUNCTION__.process_stat = private unnamed_addr constant [51 x i8] c"void process_stat(conn *, token_t *, const size_t)\00", align 1
@.str.94 = private unnamed_addr constant [30 x i8] c"CLIENT_ERROR bad command line\00", align 1
@.str.95 = private unnamed_addr constant [14 x i8] c"STAT pid %u\0D\0A\00", align 1
@.str.96 = private unnamed_addr constant [17 x i8] c"STAT uptime %u\0D\0A\00", align 1
@.str.97 = private unnamed_addr constant [16 x i8] c"STAT time %ld\0D\0A\00", align 1
@.str.98 = private unnamed_addr constant [21 x i8] c"STAT version 1.2.4\0D\0A\00", align 1
@.str.99 = private unnamed_addr constant [24 x i8] c"STAT pointer_size %lu\0D\0A\00", align 1
@.str.100 = private unnamed_addr constant [29 x i8] c"STAT rusage_user %ld.%06ld\0D\0A\00", align 1
@.str.101 = private unnamed_addr constant [31 x i8] c"STAT rusage_system %ld.%06ld\0D\0A\00", align 1
@.str.102 = private unnamed_addr constant [21 x i8] c"STAT curr_items %u\0D\0A\00", align 1
@.str.103 = private unnamed_addr constant [22 x i8] c"STAT total_items %u\0D\0A\00", align 1
@.str.104 = private unnamed_addr constant [17 x i8] c"STAT bytes %lu\0D\0A\00", align 1
@.str.105 = private unnamed_addr constant [27 x i8] c"STAT curr_connections %u\0D\0A\00", align 1
@.str.106 = private unnamed_addr constant [28 x i8] c"STAT total_connections %u\0D\0A\00", align 1
@.str.107 = private unnamed_addr constant [32 x i8] c"STAT connection_structures %u\0D\0A\00", align 1
@.str.108 = private unnamed_addr constant [19 x i8] c"STAT cmd_get %lu\0D\0A\00", align 1
@.str.109 = private unnamed_addr constant [19 x i8] c"STAT cmd_set %lu\0D\0A\00", align 1
@.str.110 = private unnamed_addr constant [20 x i8] c"STAT get_hits %lu\0D\0A\00", align 1
@.str.111 = private unnamed_addr constant [22 x i8] c"STAT get_misses %lu\0D\0A\00", align 1
@.str.112 = private unnamed_addr constant [21 x i8] c"STAT evictions %lu\0D\0A\00", align 1
@.str.113 = private unnamed_addr constant [22 x i8] c"STAT bytes_read %lu\0D\0A\00", align 1
@.str.114 = private unnamed_addr constant [25 x i8] c"STAT bytes_written %lu\0D\0A\00", align 1
@.str.115 = private unnamed_addr constant [26 x i8] c"STAT limit_maxbytes %lu\0D\0A\00", align 1
@.str.116 = private unnamed_addr constant [18 x i8] c"STAT threads %u\0D\0A\00", align 1
@.str.117 = private unnamed_addr constant [4 x i8] c"END\00", align 1
@.str.118 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.119 = private unnamed_addr constant [33 x i8] c"0 && \22stats reset not available\22\00", align 1
@.str.120 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1
@.str.121 = private unnamed_addr constant [21 x i8] c"STAT arena_size %d\0D\0A\00", align 1
@.str.122 = private unnamed_addr constant [22 x i8] c"STAT free_chunks %d\0D\0A\00", align 1
@.str.123 = private unnamed_addr constant [25 x i8] c"STAT fastbin_blocks %d\0D\0A\00", align 1
@.str.124 = private unnamed_addr constant [26 x i8] c"STAT mmapped_regions %d\0D\0A\00", align 1
@.str.125 = private unnamed_addr constant [24 x i8] c"STAT mmapped_space %d\0D\0A\00", align 1
@.str.126 = private unnamed_addr constant [26 x i8] c"STAT max_total_alloc %d\0D\0A\00", align 1
@.str.127 = private unnamed_addr constant [24 x i8] c"STAT fastbin_space %d\0D\0A\00", align 1
@.str.128 = private unnamed_addr constant [22 x i8] c"STAT total_alloc %d\0D\0A\00", align 1
@.str.129 = private unnamed_addr constant [21 x i8] c"STAT total_free %d\0D\0A\00", align 1
@.str.130 = private unnamed_addr constant [30 x i8] c"STAT releasable_space %d\0D\0AEND\00", align 1
@.str.131 = private unnamed_addr constant [5 x i8] c"maps\00", align 1
@.str.132 = private unnamed_addr constant [16 x i8] c"/proc/self/maps\00", align 1
@.str.133 = private unnamed_addr constant [39 x i8] c"SERVER_ERROR cannot open the maps file\00", align 1
@.str.134 = private unnamed_addr constant [29 x i8] c"SERVER_ERROR buffer overflow\00", align 1
@.str.135 = private unnamed_addr constant [38 x i8] c"SERVER_ERROR can't read the maps file\00", align 1
@.str.136 = private unnamed_addr constant [10 x i8] c"cachedump\00", align 1
@.str.137 = private unnamed_addr constant [33 x i8] c"0 && \22slabs stats not supported\22\00", align 1
@.str.138 = private unnamed_addr constant [6 x i8] c"items\00", align 1
@.str.139 = private unnamed_addr constant [7 x i8] c"detail\00", align 1
@.str.140 = private unnamed_addr constant [36 x i8] c"0 && \22detailed stats not available\22\00", align 1
@.str.141 = private unnamed_addr constant [6 x i8] c"sizes\00", align 1
@__PRETTY_FUNCTION__.process_verbosity_command = private unnamed_addr constant [64 x i8] c"void process_verbosity_command(conn *, token_t *, const size_t)\00", align 1
@__PRETTY_FUNCTION__.try_read_udp = private unnamed_addr constant [25 x i8] c"int try_read_udp(conn *)\00", align 1
@.str.142 = private unnamed_addr constant [48 x i8] c"SERVER_ERROR multi-packet request not supported\00", align 1
@__PRETTY_FUNCTION__.try_read_network = private unnamed_addr constant [29 x i8] c"int try_read_network(conn *)\00", align 1
@.str.143 = private unnamed_addr constant [31 x i8] c"Couldn't realloc input buffer\0A\00", align 1
@__PRETTY_FUNCTION__.conn_set_state = private unnamed_addr constant [33 x i8] c"void conn_set_state(conn *, int)\00", align 1
@__PRETTY_FUNCTION__.conn_shrink = private unnamed_addr constant [25 x i8] c"void conn_shrink(conn *)\00", align 1
@__PRETTY_FUNCTION__.complete_nread = private unnamed_addr constant [28 x i8] c"void complete_nread(conn *)\00", align 1
@.str.144 = private unnamed_addr constant [28 x i8] c"CLIENT_ERROR bad data chunk\00", align 1
@.str.145 = private unnamed_addr constant [7 x i8] c"STORED\00", align 1
@.str.146 = private unnamed_addr constant [7 x i8] c"EXISTS\00", align 1
@.str.147 = private unnamed_addr constant [11 x i8] c"NOT_STORED\00", align 1
@__PRETTY_FUNCTION__.add_iov = private unnamed_addr constant [39 x i8] c"int add_iov(conn *, const void *, int)\00", align 1
@__PRETTY_FUNCTION__.ensure_iov_space = private unnamed_addr constant [29 x i8] c"int ensure_iov_space(conn *)\00", align 1
@__PRETTY_FUNCTION__.build_udp_headers = private unnamed_addr constant [30 x i8] c"int build_udp_headers(conn *)\00", align 1
@.str.148 = private unnamed_addr constant [76 x i8] c"(void *) hdr == (void *)c->msglist[i].msg_iov[0].iov_base + UDP_HEADER_SIZE\00", align 1
@__PRETTY_FUNCTION__.transmit = private unnamed_addr constant [21 x i8] c"int transmit(conn *)\00", align 1
@.str.149 = private unnamed_addr constant [41 x i8] c"Failed to write, and not due to blocking\00", align 1
@.str.150 = private unnamed_addr constant [17 x i8] c"SIGINT handled.\0A\00", align 1
@.str.151 = private unnamed_addr constant [17 x i8] c"memcached 1.2.4\0A\00", align 1
@.str.152 = private unnamed_addr constant [1212 x i8] c"-p <num>      TCP port number to listen on (default: 11211)\0A-U <num>      UDP port number to listen on (default: 0, off)\0A-s <file>     unix socket path to listen on (disables network support)\0A-a <mask>     access mask for unix socket, in octal (default 0700)\0A-l <ip_addr>  interface to listen on, default is INDRR_ANY\0A-d            run as a daemon\0A-r            maximize core file limit\0A-u <username> assume identity of <username> (only when run as root)\0A-m <num>      max memory to use for items in megabytes, default is 64 MB\0A-M            return error on memory exhausted (rather than removing items)\0A-c <num>      max simultaneous connections, default is 1024\0A-k            lock down all paged memory\0A-v            verbose (print errors/warnings while in event loop)\0A-vv           very verbose (also print client commands/reponses)\0A-h            print this help and exit\0A-i            print memcached and libevent license\0A-b            run a managed instanced (mnemonic: buckets)\0A-P <file>     save PID in <file>, only used with -d option\0A-f <factor>   chunk size growth factor, default 1.25\0A-n <bytes>    minimum space allocated for key+value+flags, default 48\0A-x            enable trace (default:disable)\0A\00", align 1
@.str.153 = private unnamed_addr constant [51 x i8] c"-t <num>      number of threads to use, default 4\0A\00", align 1
@.str.154 = private unnamed_addr constant [18 x i8] c"memcached 1.2.4\0A\0A\00", align 1
@.str.155 = private unnamed_addr constant [3203 x i8] c"Copyright (c) 2003, Danga Interactive, Inc. <http://www.danga.com/>\0AAll rights reserved.\0A\0ARedistribution and use in source and binary forms, with or without\0Amodification, are permitted provided that the following conditions are\0Amet:\0A\0A    * Redistributions of source code must retain the above copyright\0Anotice, this list of conditions and the following disclaimer.\0A\0A    * Redistributions in binary form must reproduce the above\0Acopyright notice, this list of conditions and the following disclaimer\0Ain the documentation and/or other materials provided with the\0Adistribution.\0A\0A    * Neither the name of the Danga Interactive nor the names of its\0Acontributors may be used to endorse or promote products derived from\0Athis software without specific prior written permission.\0A\0ATHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\0A\22AS IS\22 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\0ALIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\0AA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\0AOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\0ASPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\0ALIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\0ADATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\0ATHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\0A(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\0AOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\0A\0A\0AThis product includes software developed by Niels Provos.\0A\0A[ libevent ]\0A\0ACopyright 2000-2003 Niels Provos <provos@citi.umich.edu>\0AAll rights reserved.\0A\0ARedistribution and use in source and binary forms, with or without\0Amodification, are permitted provided that the following conditions\0Aare met:\0A1. Redistributions of source code must retain the above copyright\0A   notice, this list of conditions and the following disclaimer.\0A2. Redistributions in binary form must reproduce the above copyright\0A   notice, this list of conditions and the following disclaimer in the\0A   documentation and/or other materials provided with the distribution.\0A3. All advertising materials mentioning features or use of this software\0A   must display the following acknowledgement:\0A      This product includes software developed by Niels Provos.\0A4. The name of the author may not be used to endorse or promote products\0A   derived from this software without specific prior written permission.\0A\0ATHIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\0AIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\0AOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\0AIN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\0AINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\0ANOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\0ADATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\0ATHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\0A(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\0ATHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\0A\00", align 1
@.str.156 = private unnamed_addr constant [7 x i8] c"bind()\00", align 1
@.str.157 = private unnamed_addr constant [9 x i8] c"listen()\00", align 1
@.str.158 = private unnamed_addr constant [9 x i8] c"socket()\00", align 1
@.str.159 = private unnamed_addr constant [22 x i8] c"getsockopt(SO_SNDBUF)\00", align 1
@.str.160 = private unnamed_addr constant [32 x i8] c"<%d send buffer was %d, now %d\0A\00", align 1
@.str.161 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.162 = private unnamed_addr constant [44 x i8] c"Could not open the pid file %s for writing\0A\00", align 1
@.str.163 = private unnamed_addr constant [5 x i8] c"%ld\0A\00", align 1
@.str.164 = private unnamed_addr constant [34 x i8] c"Could not close the pid file %s.\0A\00", align 1
@__const.clock_handler.t = private unnamed_addr constant %struct.timeval { i64 1, i64 0 }, align 8
@clock_handler.initialized = internal global i8 0, align 1, !dbg !862
@clockevent = internal global %struct.event zeroinitializer, align 8, !dbg !874
@__const.delete_handler.t = private unnamed_addr constant %struct.timeval { i64 5, i64 0 }, align 8
@delete_handler.initialized = internal global i8 0, align 1, !dbg !876
@deleteevent = internal global %struct.event zeroinitializer, align 8, !dbg !884
@.str.165 = private unnamed_addr constant [35 x i8] c"Could not remove the pid file %s.\0A\00", align 1

; Function Attrs: nounwind uwtable
define dso_local i32 @realtime(i64 %exptime) #0 !dbg !908 {
entry:
  %retval = alloca i32, align 4
  %exptime.addr = alloca i64, align 8
  store i64 %exptime, i64* %exptime.addr, align 8, !tbaa !914
  call void @llvm.dbg.declare(metadata i64* %exptime.addr, metadata !913, metadata !DIExpression()), !dbg !918
  %0 = load i64, i64* %exptime.addr, align 8, !dbg !919, !tbaa !914
  %cmp = icmp eq i64 %0, 0, !dbg !921
  br i1 %cmp, label %if.then, label %if.end, !dbg !922

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !923
  br label %return, !dbg !923

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %exptime.addr, align 8, !dbg !924, !tbaa !914
  %cmp1 = icmp sgt i64 %1, 2592000, !dbg !926
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !927

if.then2:                                         ; preds = %if.end
  %2 = load i64, i64* %exptime.addr, align 8, !dbg !928, !tbaa !914
  %3 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 11), align 8, !dbg !931, !tbaa !932
  %cmp3 = icmp sle i64 %2, %3, !dbg !935
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !936

if.then4:                                         ; preds = %if.then2
  store i32 1, i32* %retval, align 4, !dbg !937
  br label %return, !dbg !937

if.end5:                                          ; preds = %if.then2
  %4 = load i64, i64* %exptime.addr, align 8, !dbg !938, !tbaa !914
  %5 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 11), align 8, !dbg !939, !tbaa !932
  %sub = sub nsw i64 %4, %5, !dbg !940
  %conv = trunc i64 %sub to i32, !dbg !941
  store i32 %conv, i32* %retval, align 4, !dbg !942
  br label %return, !dbg !942

if.else:                                          ; preds = %if.end
  %6 = load i64, i64* %exptime.addr, align 8, !dbg !943, !tbaa !914
  %7 = load volatile i32, i32* @current_time, align 4, !dbg !945, !tbaa !946
  %conv6 = zext i32 %7 to i64, !dbg !945
  %add = add nsw i64 %6, %conv6, !dbg !947
  %conv7 = trunc i64 %add to i32, !dbg !948
  store i32 %conv7, i32* %retval, align 4, !dbg !949
  br label %return, !dbg !949

return:                                           ; preds = %if.else, %if.end5, %if.then4, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !950
  ret i32 %8, !dbg !950
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata %0, metadata %1, metadata %2) #1

; Function Attrs: nounwind uwtable
define dso_local %struct.conn* @do_conn_from_freelist() #0 !dbg !951 {
entry:
  %c = alloca %struct.conn*, align 8
  %0 = bitcast %struct.conn** %c to i8*, !dbg !956
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !956
  call void @llvm.dbg.declare(metadata %struct.conn** %c, metadata !955, metadata !DIExpression()), !dbg !957
  %1 = load i32, i32* @freecurr, align 4, !dbg !958, !tbaa !946
  %cmp = icmp sgt i32 %1, 0, !dbg !960
  br i1 %cmp, label %if.then, label %if.else, !dbg !961

if.then:                                          ; preds = %entry
  %2 = load %struct.conn**, %struct.conn*** @freeconns, align 8, !dbg !962, !tbaa !964
  %3 = load i32, i32* @freecurr, align 4, !dbg !966, !tbaa !946
  %dec = add nsw i32 %3, -1, !dbg !966
  store i32 %dec, i32* @freecurr, align 4, !dbg !966, !tbaa !946
  %idxprom = sext i32 %dec to i64, !dbg !962
  %arrayidx = getelementptr inbounds %struct.conn*, %struct.conn** %2, i64 %idxprom, !dbg !962
  %4 = load %struct.conn*, %struct.conn** %arrayidx, align 8, !dbg !962, !tbaa !964
  store %struct.conn* %4, %struct.conn** %c, align 8, !dbg !967, !tbaa !964
  br label %if.end, !dbg !968

if.else:                                          ; preds = %entry
  store %struct.conn* null, %struct.conn** %c, align 8, !dbg !969, !tbaa !964
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !971, !tbaa !964
  %6 = bitcast %struct.conn** %c to i8*, !dbg !972
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #12, !dbg !972
  ret %struct.conn* %5, !dbg !973
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i1 @do_conn_add_to_freelist(%struct.conn* %c) #0 !dbg !974 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca %struct.conn*, align 8
  %new_freeconns = alloca %struct.conn**, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !978, metadata !DIExpression()), !dbg !982
  %0 = load i32, i32* @freecurr, align 4, !dbg !983, !tbaa !946
  %1 = load i32, i32* @freetotal, align 4, !dbg !984, !tbaa !946
  %cmp = icmp slt i32 %0, %1, !dbg !985
  br i1 %cmp, label %if.then, label %if.else, !dbg !986

if.then:                                          ; preds = %entry
  %2 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !987, !tbaa !964
  %3 = load %struct.conn**, %struct.conn*** @freeconns, align 8, !dbg !989, !tbaa !964
  %4 = load i32, i32* @freecurr, align 4, !dbg !990, !tbaa !946
  %inc = add nsw i32 %4, 1, !dbg !990
  store i32 %inc, i32* @freecurr, align 4, !dbg !990, !tbaa !946
  %idxprom = sext i32 %4 to i64, !dbg !989
  %arrayidx = getelementptr inbounds %struct.conn*, %struct.conn** %3, i64 %idxprom, !dbg !989
  store %struct.conn* %2, %struct.conn** %arrayidx, align 8, !dbg !991, !tbaa !964
  store i1 false, i1* %retval, align 1, !dbg !992
  br label %return, !dbg !992

if.else:                                          ; preds = %entry
  %5 = bitcast %struct.conn*** %new_freeconns to i8*, !dbg !993
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #12, !dbg !993
  call void @llvm.dbg.declare(metadata %struct.conn*** %new_freeconns, metadata !979, metadata !DIExpression()), !dbg !994
  %6 = load %struct.conn**, %struct.conn*** @freeconns, align 8, !dbg !995, !tbaa !964
  %7 = bitcast %struct.conn** %6 to i8*, !dbg !995
  %8 = load i32, i32* @freetotal, align 4, !dbg !996, !tbaa !946
  %conv = sext i32 %8 to i64, !dbg !996
  %mul = mul i64 8, %conv, !dbg !997
  %mul1 = mul i64 %mul, 2, !dbg !998
  %call = call i8* @realloc(i8* %7, i64 %mul1) #12, !dbg !999
  %9 = bitcast i8* %call to %struct.conn**, !dbg !999
  store %struct.conn** %9, %struct.conn*** %new_freeconns, align 8, !dbg !994, !tbaa !964
  %10 = load %struct.conn**, %struct.conn*** %new_freeconns, align 8, !dbg !1000, !tbaa !964
  %tobool = icmp ne %struct.conn** %10, null, !dbg !1000
  br i1 %tobool, label %if.then2, label %if.end, !dbg !1002

if.then2:                                         ; preds = %if.else
  %11 = load i32, i32* @freetotal, align 4, !dbg !1003, !tbaa !946
  %mul3 = mul nsw i32 %11, 2, !dbg !1003
  store i32 %mul3, i32* @freetotal, align 4, !dbg !1003, !tbaa !946
  %12 = load %struct.conn**, %struct.conn*** %new_freeconns, align 8, !dbg !1005, !tbaa !964
  store %struct.conn** %12, %struct.conn*** @freeconns, align 8, !dbg !1006, !tbaa !964
  %13 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1007, !tbaa !964
  %14 = load %struct.conn**, %struct.conn*** @freeconns, align 8, !dbg !1008, !tbaa !964
  %15 = load i32, i32* @freecurr, align 4, !dbg !1009, !tbaa !946
  %inc4 = add nsw i32 %15, 1, !dbg !1009
  store i32 %inc4, i32* @freecurr, align 4, !dbg !1009, !tbaa !946
  %idxprom5 = sext i32 %15 to i64, !dbg !1008
  %arrayidx6 = getelementptr inbounds %struct.conn*, %struct.conn** %14, i64 %idxprom5, !dbg !1008
  store %struct.conn* %13, %struct.conn** %arrayidx6, align 8, !dbg !1010, !tbaa !964
  store i1 false, i1* %retval, align 1, !dbg !1011
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1011

if.end:                                           ; preds = %if.else
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !1012
  br label %cleanup, !dbg !1012

cleanup:                                          ; preds = %if.end, %if.then2
  %16 = bitcast %struct.conn*** %new_freeconns to i8*, !dbg !1012
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %16) #12, !dbg !1012
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end7

if.end7:                                          ; preds = %cleanup.cont
  store i1 true, i1* %retval, align 1, !dbg !1013
  br label %return, !dbg !1013

return:                                           ; preds = %if.end7, %cleanup, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !1014
  ret i1 %17, !dbg !1014

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8* %0, i64 %1) #3

; Function Attrs: nounwind uwtable
define dso_local %struct.conn* @conn_new(i32 %sfd, i32 %init_state, i32 %event_flags, i32 %read_buffer_size, i1 zeroext %is_udp, %struct.event_base* %base) #0 !dbg !1015 {
entry:
  %retval = alloca %struct.conn*, align 8
  %sfd.addr = alloca i32, align 4
  %init_state.addr = alloca i32, align 4
  %event_flags.addr = alloca i32, align 4
  %read_buffer_size.addr = alloca i32, align 4
  %is_udp.addr = alloca i8, align 1
  %base.addr = alloca %struct.event_base*, align 8
  %c = alloca %struct.conn*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %sfd, i32* %sfd.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %sfd.addr, metadata !1020, metadata !DIExpression()), !dbg !1027
  store i32 %init_state, i32* %init_state.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %init_state.addr, metadata !1021, metadata !DIExpression()), !dbg !1028
  store i32 %event_flags, i32* %event_flags.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %event_flags.addr, metadata !1022, metadata !DIExpression()), !dbg !1029
  store i32 %read_buffer_size, i32* %read_buffer_size.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %read_buffer_size.addr, metadata !1023, metadata !DIExpression()), !dbg !1030
  %frombool = zext i1 %is_udp to i8
  store i8 %frombool, i8* %is_udp.addr, align 1, !tbaa !1031
  call void @llvm.dbg.declare(metadata i8* %is_udp.addr, metadata !1024, metadata !DIExpression()), !dbg !1033
  store %struct.event_base* %base, %struct.event_base** %base.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.event_base** %base.addr, metadata !1025, metadata !DIExpression()), !dbg !1034
  %0 = bitcast %struct.conn** %c to i8*, !dbg !1035
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !1035
  call void @llvm.dbg.declare(metadata %struct.conn** %c, metadata !1026, metadata !DIExpression()), !dbg !1036
  %call = call %struct.conn* @mt_conn_from_freelist(), !dbg !1037
  store %struct.conn* %call, %struct.conn** %c, align 8, !dbg !1036, !tbaa !964
  %1 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1038, !tbaa !964
  %cmp = icmp eq %struct.conn* null, %1, !dbg !1040
  br i1 %cmp, label %if.then, label %if.end89, !dbg !1041

if.then:                                          ; preds = %entry
  %call1 = call noalias i8* @malloc(i64 392) #12, !dbg !1042
  %2 = bitcast i8* %call1 to %struct.conn*, !dbg !1045
  store %struct.conn* %2, %struct.conn** %c, align 8, !dbg !1046, !tbaa !964
  %tobool = icmp ne %struct.conn* %2, null, !dbg !1046
  br i1 %tobool, label %if.end, label %if.then2, !dbg !1047

if.then2:                                         ; preds = %if.then
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !1048
  store %struct.conn* null, %struct.conn** %retval, align 8, !dbg !1050
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1050

if.end:                                           ; preds = %if.then
  %3 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1051, !tbaa !964
  %wbuf = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 9, !dbg !1052
  store i8* null, i8** %wbuf, align 8, !dbg !1053, !tbaa !1054
  %4 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1062, !tbaa !964
  %rbuf = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 5, !dbg !1063
  store i8* null, i8** %rbuf, align 8, !dbg !1064, !tbaa !1065
  %5 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1066, !tbaa !964
  %ilist = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 28, !dbg !1067
  store %struct._stritem** null, %struct._stritem*** %ilist, align 8, !dbg !1068, !tbaa !1069
  %6 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1070, !tbaa !964
  %suffixlist = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 32, !dbg !1071
  store i8** null, i8*** %suffixlist, align 8, !dbg !1072, !tbaa !1073
  %7 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1074, !tbaa !964
  %iov = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 20, !dbg !1075
  store %struct.iovec* null, %struct.iovec** %iov, align 8, !dbg !1076, !tbaa !1077
  %8 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1078, !tbaa !964
  %msglist = getelementptr inbounds %struct.conn, %struct.conn* %8, i32 0, i32 23, !dbg !1079
  store %struct.msghdr* null, %struct.msghdr** %msglist, align 8, !dbg !1080, !tbaa !1081
  %9 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1082, !tbaa !964
  %hdrbuf = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 40, !dbg !1083
  store i8* null, i8** %hdrbuf, align 8, !dbg !1084, !tbaa !1085
  %10 = load i32, i32* %read_buffer_size.addr, align 4, !dbg !1086, !tbaa !946
  %11 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1087, !tbaa !964
  %rsize = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 7, !dbg !1088
  store i32 %10, i32* %rsize, align 8, !dbg !1089, !tbaa !1090
  %12 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1091, !tbaa !964
  %wsize = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 11, !dbg !1092
  store i32 2048, i32* %wsize, align 8, !dbg !1093, !tbaa !1094
  %13 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1095, !tbaa !964
  %isize = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 29, !dbg !1096
  store i32 200, i32* %isize, align 8, !dbg !1097, !tbaa !1098
  %14 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1099, !tbaa !964
  %suffixsize = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 33, !dbg !1100
  store i32 20, i32* %suffixsize, align 8, !dbg !1101, !tbaa !1102
  %15 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1103, !tbaa !964
  %iovsize = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 21, !dbg !1104
  store i32 400, i32* %iovsize, align 8, !dbg !1105, !tbaa !1106
  %16 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1107, !tbaa !964
  %msgsize = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 24, !dbg !1108
  store i32 10, i32* %msgsize, align 8, !dbg !1109, !tbaa !1110
  %17 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1111, !tbaa !964
  %hdrsize = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 41, !dbg !1112
  store i32 0, i32* %hdrsize, align 8, !dbg !1113, !tbaa !1114
  %18 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1115, !tbaa !964
  %rsize3 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 7, !dbg !1116
  %19 = load i32, i32* %rsize3, align 8, !dbg !1116, !tbaa !1090
  %conv = sext i32 %19 to i64, !dbg !1117
  %call4 = call noalias i8* @malloc(i64 %conv) #12, !dbg !1118
  %20 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1119, !tbaa !964
  %rbuf5 = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 5, !dbg !1120
  store i8* %call4, i8** %rbuf5, align 8, !dbg !1121, !tbaa !1065
  %21 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1122, !tbaa !964
  %wsize6 = getelementptr inbounds %struct.conn, %struct.conn* %21, i32 0, i32 11, !dbg !1123
  %22 = load i32, i32* %wsize6, align 8, !dbg !1123, !tbaa !1094
  %conv7 = sext i32 %22 to i64, !dbg !1124
  %call8 = call noalias i8* @malloc(i64 %conv7) #12, !dbg !1125
  %23 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1126, !tbaa !964
  %wbuf9 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 9, !dbg !1127
  store i8* %call8, i8** %wbuf9, align 8, !dbg !1128, !tbaa !1054
  %24 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1129, !tbaa !964
  %isize10 = getelementptr inbounds %struct.conn, %struct.conn* %24, i32 0, i32 29, !dbg !1130
  %25 = load i32, i32* %isize10, align 8, !dbg !1130, !tbaa !1098
  %conv11 = sext i32 %25 to i64, !dbg !1129
  %mul = mul i64 8, %conv11, !dbg !1131
  %call12 = call noalias i8* @malloc(i64 %mul) #12, !dbg !1132
  %26 = bitcast i8* %call12 to %struct._stritem**, !dbg !1133
  %27 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1134, !tbaa !964
  %ilist13 = getelementptr inbounds %struct.conn, %struct.conn* %27, i32 0, i32 28, !dbg !1135
  store %struct._stritem** %26, %struct._stritem*** %ilist13, align 8, !dbg !1136, !tbaa !1069
  %28 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1137, !tbaa !964
  %suffixsize14 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 33, !dbg !1138
  %29 = load i32, i32* %suffixsize14, align 8, !dbg !1138, !tbaa !1102
  %conv15 = sext i32 %29 to i64, !dbg !1137
  %mul16 = mul i64 8, %conv15, !dbg !1139
  %call17 = call noalias i8* @malloc(i64 %mul16) #12, !dbg !1140
  %30 = bitcast i8* %call17 to i8**, !dbg !1141
  %31 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1142, !tbaa !964
  %suffixlist18 = getelementptr inbounds %struct.conn, %struct.conn* %31, i32 0, i32 32, !dbg !1143
  store i8** %30, i8*** %suffixlist18, align 8, !dbg !1144, !tbaa !1073
  %32 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1145, !tbaa !964
  %iovsize19 = getelementptr inbounds %struct.conn, %struct.conn* %32, i32 0, i32 21, !dbg !1146
  %33 = load i32, i32* %iovsize19, align 8, !dbg !1146, !tbaa !1106
  %conv20 = sext i32 %33 to i64, !dbg !1145
  %mul21 = mul i64 16, %conv20, !dbg !1147
  %call22 = call noalias i8* @malloc(i64 %mul21) #12, !dbg !1148
  %34 = bitcast i8* %call22 to %struct.iovec*, !dbg !1149
  %35 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1150, !tbaa !964
  %iov23 = getelementptr inbounds %struct.conn, %struct.conn* %35, i32 0, i32 20, !dbg !1151
  store %struct.iovec* %34, %struct.iovec** %iov23, align 8, !dbg !1152, !tbaa !1077
  %36 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1153, !tbaa !964
  %msgsize24 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 24, !dbg !1154
  %37 = load i32, i32* %msgsize24, align 8, !dbg !1154, !tbaa !1110
  %conv25 = sext i32 %37 to i64, !dbg !1153
  %mul26 = mul i64 56, %conv25, !dbg !1155
  %call27 = call noalias i8* @malloc(i64 %mul26) #12, !dbg !1156
  %38 = bitcast i8* %call27 to %struct.msghdr*, !dbg !1157
  %39 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1158, !tbaa !964
  %msglist28 = getelementptr inbounds %struct.conn, %struct.conn* %39, i32 0, i32 23, !dbg !1159
  store %struct.msghdr* %38, %struct.msghdr** %msglist28, align 8, !dbg !1160, !tbaa !1081
  %40 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1161, !tbaa !964
  %rbuf29 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 5, !dbg !1163
  %41 = load i8*, i8** %rbuf29, align 8, !dbg !1163, !tbaa !1065
  %cmp30 = icmp eq i8* %41, null, !dbg !1164
  br i1 %cmp30, label %if.then51, label %lor.lhs.false, !dbg !1165

lor.lhs.false:                                    ; preds = %if.end
  %42 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1166, !tbaa !964
  %wbuf32 = getelementptr inbounds %struct.conn, %struct.conn* %42, i32 0, i32 9, !dbg !1167
  %43 = load i8*, i8** %wbuf32, align 8, !dbg !1167, !tbaa !1054
  %cmp33 = icmp eq i8* %43, null, !dbg !1168
  br i1 %cmp33, label %if.then51, label %lor.lhs.false35, !dbg !1169

lor.lhs.false35:                                  ; preds = %lor.lhs.false
  %44 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1170, !tbaa !964
  %ilist36 = getelementptr inbounds %struct.conn, %struct.conn* %44, i32 0, i32 28, !dbg !1171
  %45 = load %struct._stritem**, %struct._stritem*** %ilist36, align 8, !dbg !1171, !tbaa !1069
  %cmp37 = icmp eq %struct._stritem** %45, null, !dbg !1172
  br i1 %cmp37, label %if.then51, label %lor.lhs.false39, !dbg !1173

lor.lhs.false39:                                  ; preds = %lor.lhs.false35
  %46 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1174, !tbaa !964
  %iov40 = getelementptr inbounds %struct.conn, %struct.conn* %46, i32 0, i32 20, !dbg !1175
  %47 = load %struct.iovec*, %struct.iovec** %iov40, align 8, !dbg !1175, !tbaa !1077
  %cmp41 = icmp eq %struct.iovec* %47, null, !dbg !1176
  br i1 %cmp41, label %if.then51, label %lor.lhs.false43, !dbg !1177

lor.lhs.false43:                                  ; preds = %lor.lhs.false39
  %48 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1178, !tbaa !964
  %msglist44 = getelementptr inbounds %struct.conn, %struct.conn* %48, i32 0, i32 23, !dbg !1179
  %49 = load %struct.msghdr*, %struct.msghdr** %msglist44, align 8, !dbg !1179, !tbaa !1081
  %cmp45 = icmp eq %struct.msghdr* %49, null, !dbg !1180
  br i1 %cmp45, label %if.then51, label %lor.lhs.false47, !dbg !1181

lor.lhs.false47:                                  ; preds = %lor.lhs.false43
  %50 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1182, !tbaa !964
  %suffixlist48 = getelementptr inbounds %struct.conn, %struct.conn* %50, i32 0, i32 32, !dbg !1183
  %51 = load i8**, i8*** %suffixlist48, align 8, !dbg !1183, !tbaa !1073
  %cmp49 = icmp eq i8** %51, null, !dbg !1184
  br i1 %cmp49, label %if.then51, label %if.end88, !dbg !1185

if.then51:                                        ; preds = %lor.lhs.false47, %lor.lhs.false43, %lor.lhs.false39, %lor.lhs.false35, %lor.lhs.false, %if.end
  %52 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1186, !tbaa !964
  %rbuf52 = getelementptr inbounds %struct.conn, %struct.conn* %52, i32 0, i32 5, !dbg !1189
  %53 = load i8*, i8** %rbuf52, align 8, !dbg !1189, !tbaa !1065
  %cmp53 = icmp ne i8* %53, null, !dbg !1190
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !1191

if.then55:                                        ; preds = %if.then51
  %54 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1192, !tbaa !964
  %rbuf56 = getelementptr inbounds %struct.conn, %struct.conn* %54, i32 0, i32 5, !dbg !1193
  %55 = load i8*, i8** %rbuf56, align 8, !dbg !1193, !tbaa !1065
  call void @free(i8* %55) #12, !dbg !1194
  br label %if.end57, !dbg !1194

if.end57:                                         ; preds = %if.then55, %if.then51
  %56 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1195, !tbaa !964
  %wbuf58 = getelementptr inbounds %struct.conn, %struct.conn* %56, i32 0, i32 9, !dbg !1197
  %57 = load i8*, i8** %wbuf58, align 8, !dbg !1197, !tbaa !1054
  %cmp59 = icmp ne i8* %57, null, !dbg !1198
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !1199

if.then61:                                        ; preds = %if.end57
  %58 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1200, !tbaa !964
  %wbuf62 = getelementptr inbounds %struct.conn, %struct.conn* %58, i32 0, i32 9, !dbg !1201
  %59 = load i8*, i8** %wbuf62, align 8, !dbg !1201, !tbaa !1054
  call void @free(i8* %59) #12, !dbg !1202
  br label %if.end63, !dbg !1202

if.end63:                                         ; preds = %if.then61, %if.end57
  %60 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1203, !tbaa !964
  %ilist64 = getelementptr inbounds %struct.conn, %struct.conn* %60, i32 0, i32 28, !dbg !1205
  %61 = load %struct._stritem**, %struct._stritem*** %ilist64, align 8, !dbg !1205, !tbaa !1069
  %cmp65 = icmp ne %struct._stritem** %61, null, !dbg !1206
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !1207

if.then67:                                        ; preds = %if.end63
  %62 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1208, !tbaa !964
  %ilist68 = getelementptr inbounds %struct.conn, %struct.conn* %62, i32 0, i32 28, !dbg !1209
  %63 = load %struct._stritem**, %struct._stritem*** %ilist68, align 8, !dbg !1209, !tbaa !1069
  %64 = bitcast %struct._stritem** %63 to i8*, !dbg !1208
  call void @free(i8* %64) #12, !dbg !1210
  br label %if.end69, !dbg !1210

if.end69:                                         ; preds = %if.then67, %if.end63
  %65 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1211, !tbaa !964
  %suffixlist70 = getelementptr inbounds %struct.conn, %struct.conn* %65, i32 0, i32 32, !dbg !1213
  %66 = load i8**, i8*** %suffixlist70, align 8, !dbg !1213, !tbaa !1073
  %cmp71 = icmp ne i8** %66, null, !dbg !1214
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !1215

if.then73:                                        ; preds = %if.end69
  %67 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1216, !tbaa !964
  %suffixlist74 = getelementptr inbounds %struct.conn, %struct.conn* %67, i32 0, i32 32, !dbg !1217
  %68 = load i8**, i8*** %suffixlist74, align 8, !dbg !1217, !tbaa !1073
  %69 = bitcast i8** %68 to i8*, !dbg !1216
  call void @free(i8* %69) #12, !dbg !1218
  br label %if.end75, !dbg !1218

if.end75:                                         ; preds = %if.then73, %if.end69
  %70 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1219, !tbaa !964
  %iov76 = getelementptr inbounds %struct.conn, %struct.conn* %70, i32 0, i32 20, !dbg !1221
  %71 = load %struct.iovec*, %struct.iovec** %iov76, align 8, !dbg !1221, !tbaa !1077
  %cmp77 = icmp ne %struct.iovec* %71, null, !dbg !1222
  br i1 %cmp77, label %if.then79, label %if.end81, !dbg !1223

if.then79:                                        ; preds = %if.end75
  %72 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1224, !tbaa !964
  %iov80 = getelementptr inbounds %struct.conn, %struct.conn* %72, i32 0, i32 20, !dbg !1225
  %73 = load %struct.iovec*, %struct.iovec** %iov80, align 8, !dbg !1225, !tbaa !1077
  %74 = bitcast %struct.iovec* %73 to i8*, !dbg !1224
  call void @free(i8* %74) #12, !dbg !1226
  br label %if.end81, !dbg !1226

if.end81:                                         ; preds = %if.then79, %if.end75
  %75 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1227, !tbaa !964
  %msglist82 = getelementptr inbounds %struct.conn, %struct.conn* %75, i32 0, i32 23, !dbg !1229
  %76 = load %struct.msghdr*, %struct.msghdr** %msglist82, align 8, !dbg !1229, !tbaa !1081
  %cmp83 = icmp ne %struct.msghdr* %76, null, !dbg !1230
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !1231

if.then85:                                        ; preds = %if.end81
  %77 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1232, !tbaa !964
  %msglist86 = getelementptr inbounds %struct.conn, %struct.conn* %77, i32 0, i32 23, !dbg !1233
  %78 = load %struct.msghdr*, %struct.msghdr** %msglist86, align 8, !dbg !1233, !tbaa !1081
  %79 = bitcast %struct.msghdr* %78 to i8*, !dbg !1232
  call void @free(i8* %79) #12, !dbg !1234
  br label %if.end87, !dbg !1234

if.end87:                                         ; preds = %if.then85, %if.end81
  %80 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1235, !tbaa !964
  %81 = bitcast %struct.conn* %80 to i8*, !dbg !1235
  call void @free(i8* %81) #12, !dbg !1236
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !1237
  store %struct.conn* null, %struct.conn** %retval, align 8, !dbg !1238
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1238

if.end88:                                         ; preds = %lor.lhs.false47
  call void @mt_stats_lock(), !dbg !1239
  %82 = load i32, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 5), align 8, !dbg !1240, !tbaa !1241
  %inc = add i32 %82, 1, !dbg !1240
  store i32 %inc, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 5), align 8, !dbg !1240, !tbaa !1241
  call void @mt_stats_unlock(), !dbg !1242
  br label %if.end89, !dbg !1243

if.end89:                                         ; preds = %if.end88, %entry
  %83 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !1244, !tbaa !1246
  %cmp90 = icmp sgt i32 %83, 1, !dbg !1250
  br i1 %cmp90, label %if.then92, label %if.end104, !dbg !1251

if.then92:                                        ; preds = %if.end89
  %84 = load i32, i32* %init_state.addr, align 4, !dbg !1252, !tbaa !946
  %cmp93 = icmp eq i32 %84, 0, !dbg !1255
  br i1 %cmp93, label %if.then95, label %if.else, !dbg !1256

if.then95:                                        ; preds = %if.then92
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1257, !tbaa !964
  %86 = load i32, i32* %sfd.addr, align 4, !dbg !1258, !tbaa !946
  %call96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i32 %86), !dbg !1259
  br label %if.end103, !dbg !1259

if.else:                                          ; preds = %if.then92
  %87 = load i8, i8* %is_udp.addr, align 1, !dbg !1260, !tbaa !1031, !range !1262
  %tobool97 = trunc i8 %87 to i1, !dbg !1260
  br i1 %tobool97, label %if.then98, label %if.else100, !dbg !1263

if.then98:                                        ; preds = %if.else
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1264, !tbaa !964
  %89 = load i32, i32* %sfd.addr, align 4, !dbg !1265, !tbaa !946
  %call99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0), i32 %89), !dbg !1266
  br label %if.end102, !dbg !1266

if.else100:                                       ; preds = %if.else
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1267, !tbaa !964
  %91 = load i32, i32* %sfd.addr, align 4, !dbg !1268, !tbaa !946
  %call101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %90, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %91), !dbg !1269
  br label %if.end102

if.end102:                                        ; preds = %if.else100, %if.then98
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then95
  br label %if.end104, !dbg !1270

if.end104:                                        ; preds = %if.end103, %if.end89
  %92 = load i32, i32* %sfd.addr, align 4, !dbg !1271, !tbaa !946
  %93 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1272, !tbaa !964
  %sfd105 = getelementptr inbounds %struct.conn, %struct.conn* %93, i32 0, i32 0, !dbg !1273
  store i32 %92, i32* %sfd105, align 8, !dbg !1274, !tbaa !1275
  %94 = load i8, i8* %is_udp.addr, align 1, !dbg !1276, !tbaa !1031, !range !1262
  %tobool106 = trunc i8 %94 to i1, !dbg !1276
  %95 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1277, !tbaa !964
  %udp = getelementptr inbounds %struct.conn, %struct.conn* %95, i32 0, i32 36, !dbg !1278
  %frombool107 = zext i1 %tobool106 to i8, !dbg !1279
  store i8 %frombool107, i8* %udp, align 4, !dbg !1279, !tbaa !1280
  %96 = load i32, i32* %init_state.addr, align 4, !dbg !1281, !tbaa !946
  %97 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1282, !tbaa !964
  %state = getelementptr inbounds %struct.conn, %struct.conn* %97, i32 0, i32 1, !dbg !1283
  store i32 %96, i32* %state, align 4, !dbg !1284, !tbaa !1285
  %98 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1286, !tbaa !964
  %rlbytes = getelementptr inbounds %struct.conn, %struct.conn* %98, i32 0, i32 16, !dbg !1287
  store i32 0, i32* %rlbytes, align 8, !dbg !1288, !tbaa !1289
  %99 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1290, !tbaa !964
  %wbytes = getelementptr inbounds %struct.conn, %struct.conn* %99, i32 0, i32 12, !dbg !1291
  store i32 0, i32* %wbytes, align 4, !dbg !1292, !tbaa !1293
  %100 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1294, !tbaa !964
  %rbytes = getelementptr inbounds %struct.conn, %struct.conn* %100, i32 0, i32 8, !dbg !1295
  store i32 0, i32* %rbytes, align 4, !dbg !1296, !tbaa !1297
  %101 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1298, !tbaa !964
  %wbuf108 = getelementptr inbounds %struct.conn, %struct.conn* %101, i32 0, i32 9, !dbg !1299
  %102 = load i8*, i8** %wbuf108, align 8, !dbg !1299, !tbaa !1054
  %103 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1300, !tbaa !964
  %wcurr = getelementptr inbounds %struct.conn, %struct.conn* %103, i32 0, i32 10, !dbg !1301
  store i8* %102, i8** %wcurr, align 8, !dbg !1302, !tbaa !1303
  %104 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1304, !tbaa !964
  %rbuf109 = getelementptr inbounds %struct.conn, %struct.conn* %104, i32 0, i32 5, !dbg !1305
  %105 = load i8*, i8** %rbuf109, align 8, !dbg !1305, !tbaa !1065
  %106 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1306, !tbaa !964
  %rcurr = getelementptr inbounds %struct.conn, %struct.conn* %106, i32 0, i32 6, !dbg !1307
  store i8* %105, i8** %rcurr, align 8, !dbg !1308, !tbaa !1309
  %107 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1310, !tbaa !964
  %ritem = getelementptr inbounds %struct.conn, %struct.conn* %107, i32 0, i32 15, !dbg !1311
  store i8* null, i8** %ritem, align 8, !dbg !1312, !tbaa !1313
  %108 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1314, !tbaa !964
  %ilist110 = getelementptr inbounds %struct.conn, %struct.conn* %108, i32 0, i32 28, !dbg !1315
  %109 = load %struct._stritem**, %struct._stritem*** %ilist110, align 8, !dbg !1315, !tbaa !1069
  %110 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1316, !tbaa !964
  %icurr = getelementptr inbounds %struct.conn, %struct.conn* %110, i32 0, i32 30, !dbg !1317
  store %struct._stritem** %109, %struct._stritem*** %icurr, align 8, !dbg !1318, !tbaa !1319
  %111 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1320, !tbaa !964
  %suffixlist111 = getelementptr inbounds %struct.conn, %struct.conn* %111, i32 0, i32 32, !dbg !1321
  %112 = load i8**, i8*** %suffixlist111, align 8, !dbg !1321, !tbaa !1073
  %113 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1322, !tbaa !964
  %suffixcurr = getelementptr inbounds %struct.conn, %struct.conn* %113, i32 0, i32 34, !dbg !1323
  store i8** %112, i8*** %suffixcurr, align 8, !dbg !1324, !tbaa !1325
  %114 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1326, !tbaa !964
  %ileft = getelementptr inbounds %struct.conn, %struct.conn* %114, i32 0, i32 31, !dbg !1327
  store i32 0, i32* %ileft, align 8, !dbg !1328, !tbaa !1329
  %115 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1330, !tbaa !964
  %suffixleft = getelementptr inbounds %struct.conn, %struct.conn* %115, i32 0, i32 35, !dbg !1331
  store i32 0, i32* %suffixleft, align 8, !dbg !1332, !tbaa !1333
  %116 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1334, !tbaa !964
  %iovused = getelementptr inbounds %struct.conn, %struct.conn* %116, i32 0, i32 22, !dbg !1335
  store i32 0, i32* %iovused, align 4, !dbg !1336, !tbaa !1337
  %117 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1338, !tbaa !964
  %msgcurr = getelementptr inbounds %struct.conn, %struct.conn* %117, i32 0, i32 26, !dbg !1339
  store i32 0, i32* %msgcurr, align 8, !dbg !1340, !tbaa !1341
  %118 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1342, !tbaa !964
  %msgused = getelementptr inbounds %struct.conn, %struct.conn* %118, i32 0, i32 25, !dbg !1343
  store i32 0, i32* %msgused, align 4, !dbg !1344, !tbaa !1345
  %119 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1346, !tbaa !964
  %write_and_go = getelementptr inbounds %struct.conn, %struct.conn* %119, i32 0, i32 13, !dbg !1347
  store i32 1, i32* %write_and_go, align 8, !dbg !1348, !tbaa !1349
  %120 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1350, !tbaa !964
  %write_and_free = getelementptr inbounds %struct.conn, %struct.conn* %120, i32 0, i32 14, !dbg !1351
  store i8* null, i8** %write_and_free, align 8, !dbg !1352, !tbaa !1353
  %121 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1354, !tbaa !964
  %item_ptr = getelementptr inbounds %struct.conn, %struct.conn* %121, i32 0, i32 17, !dbg !1355
  store i8* null, i8** %item_ptr, align 8, !dbg !1356, !tbaa !1357
  %122 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1358, !tbaa !964
  %bucket = getelementptr inbounds %struct.conn, %struct.conn* %122, i32 0, i32 43, !dbg !1359
  store i32 -1, i32* %bucket, align 8, !dbg !1360, !tbaa !1361
  %123 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1362, !tbaa !964
  %gen = getelementptr inbounds %struct.conn, %struct.conn* %123, i32 0, i32 44, !dbg !1363
  store i32 0, i32* %gen, align 4, !dbg !1364, !tbaa !1365
  %124 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1366, !tbaa !964
  %event = getelementptr inbounds %struct.conn, %struct.conn* %124, i32 0, i32 2, !dbg !1367
  %125 = load i32, i32* %sfd.addr, align 4, !dbg !1368, !tbaa !946
  %126 = load i32, i32* %event_flags.addr, align 4, !dbg !1369, !tbaa !946
  %conv112 = trunc i32 %126 to i16, !dbg !1369
  %127 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1370, !tbaa !964
  %128 = bitcast %struct.conn* %127 to i8*, !dbg !1371
  call void @event_set(%struct.event* %event, i32 %125, i16 signext %conv112, void (i32, i16, i8*)* @event_handler, i8* %128), !dbg !1372
  %129 = load %struct.event_base*, %struct.event_base** %base.addr, align 8, !dbg !1373, !tbaa !964
  %130 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1374, !tbaa !964
  %event113 = getelementptr inbounds %struct.conn, %struct.conn* %130, i32 0, i32 2, !dbg !1375
  %call114 = call i32 @event_base_set(%struct.event_base* %129, %struct.event* %event113), !dbg !1376
  %131 = load i32, i32* %event_flags.addr, align 4, !dbg !1377, !tbaa !946
  %conv115 = trunc i32 %131 to i16, !dbg !1377
  %132 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1378, !tbaa !964
  %ev_flags = getelementptr inbounds %struct.conn, %struct.conn* %132, i32 0, i32 3, !dbg !1379
  store i16 %conv115, i16* %ev_flags, align 8, !dbg !1380, !tbaa !1381
  %133 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1382, !tbaa !964
  %event116 = getelementptr inbounds %struct.conn, %struct.conn* %133, i32 0, i32 2, !dbg !1384
  %call117 = call i32 @event_add(%struct.event* %event116, %struct.timeval* null), !dbg !1385
  %cmp118 = icmp eq i32 %call117, -1, !dbg !1386
  br i1 %cmp118, label %if.then120, label %if.end124, !dbg !1387

if.then120:                                       ; preds = %if.end104
  %134 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1388, !tbaa !964
  %call121 = call zeroext i1 @mt_conn_add_to_freelist(%struct.conn* %134), !dbg !1388
  br i1 %call121, label %if.then122, label %if.end123, !dbg !1391

if.then122:                                       ; preds = %if.then120
  %135 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1392, !tbaa !964
  call void @conn_free(%struct.conn* %135), !dbg !1394
  br label %if.end123, !dbg !1395

if.end123:                                        ; preds = %if.then122, %if.then120
  store %struct.conn* null, %struct.conn** %retval, align 8, !dbg !1396
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1396

if.end124:                                        ; preds = %if.end104
  call void @mt_stats_lock(), !dbg !1397
  %136 = load i32, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8, !dbg !1398, !tbaa !1399
  %inc125 = add i32 %136, 1, !dbg !1398
  store i32 %inc125, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8, !dbg !1398, !tbaa !1399
  %137 = load i32, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 4), align 4, !dbg !1400, !tbaa !1401
  %inc126 = add i32 %137, 1, !dbg !1400
  store i32 %inc126, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 4), align 4, !dbg !1400, !tbaa !1401
  call void @mt_stats_unlock(), !dbg !1402
  %138 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1403, !tbaa !964
  store %struct.conn* %138, %struct.conn** %retval, align 8, !dbg !1404
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1404

cleanup:                                          ; preds = %if.end124, %if.end123, %if.end87, %if.then2
  %139 = bitcast %struct.conn** %c to i8*, !dbg !1405
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %139) #12, !dbg !1405
  %140 = load %struct.conn*, %struct.conn** %retval, align 8, !dbg !1405
  ret %struct.conn* %140, !dbg !1405
}

declare !dbg !94 dso_local %struct.conn* @mt_conn_from_freelist() #4

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64 %0) #3

declare !dbg !298 dso_local void @perror(i8* %0) #4

; Function Attrs: nounwind
declare !dbg !304 dso_local void @free(i8* %0) #3

declare !dbg !308 dso_local void @mt_stats_lock() #4

declare !dbg !311 dso_local void @mt_stats_unlock() #4

declare dso_local i32 @fprintf(%struct._IO_FILE* %0, i8* %1, ...) #4

declare !dbg !312 dso_local void @event_set(%struct.event* %0, i32 %1, i16 signext %2, void (i32, i16, i8*)* %3, i8* %4) #4

; Function Attrs: nounwind uwtable
define internal void @event_handler(i32 %fd, i16 signext %which, i8* %arg) #0 !dbg !1406 {
entry:
  %fd.addr = alloca i32, align 4
  %which.addr = alloca i16, align 2
  %arg.addr = alloca i8*, align 8
  %c = alloca %struct.conn*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !1408, metadata !DIExpression()), !dbg !1412
  store i16 %which, i16* %which.addr, align 2, !tbaa !1413
  call void @llvm.dbg.declare(metadata i16* %which.addr, metadata !1409, metadata !DIExpression()), !dbg !1414
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1410, metadata !DIExpression()), !dbg !1415
  %0 = bitcast %struct.conn** %c to i8*, !dbg !1416
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !1416
  call void @llvm.dbg.declare(metadata %struct.conn** %c, metadata !1411, metadata !DIExpression()), !dbg !1417
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !1418, !tbaa !964
  %2 = bitcast i8* %1 to %struct.conn*, !dbg !1419
  store %struct.conn* %2, %struct.conn** %c, align 8, !dbg !1420, !tbaa !964
  %3 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1421, !tbaa !964
  %cmp = icmp ne %struct.conn* %3, null, !dbg !1421
  br i1 %cmp, label %if.then, label %if.else, !dbg !1424

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !1424

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 2375, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.event_handler, i64 0, i64 0)) #13, !dbg !1421
  unreachable, !dbg !1421

if.end:                                           ; preds = %if.then
  %4 = load i16, i16* %which.addr, align 2, !dbg !1425, !tbaa !1413
  %5 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1426, !tbaa !964
  %which1 = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 4, !dbg !1427
  store i16 %4, i16* %which1, align 2, !dbg !1428, !tbaa !1429
  %6 = load i32, i32* %fd.addr, align 4, !dbg !1430, !tbaa !946
  %7 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1432, !tbaa !964
  %sfd = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 0, !dbg !1433
  %8 = load i32, i32* %sfd, align 8, !dbg !1433, !tbaa !1275
  %cmp2 = icmp ne i32 %6, %8, !dbg !1434
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !1435

if.then3:                                         ; preds = %if.end
  %9 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !1436, !tbaa !1246
  %cmp4 = icmp sgt i32 %9, 0, !dbg !1439
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !1440

if.then5:                                         ; preds = %if.then3
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1441, !tbaa !964
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.33, i64 0, i64 0)), !dbg !1442
  br label %if.end6, !dbg !1442

if.end6:                                          ; preds = %if.then5, %if.then3
  %11 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1443, !tbaa !964
  call void @conn_close(%struct.conn* %11), !dbg !1444
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1445

if.end7:                                          ; preds = %if.end
  %12 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1446, !tbaa !964
  call void @drive_machine(%struct.conn* %12), !dbg !1447
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1448

cleanup:                                          ; preds = %if.end7, %if.end6
  %13 = bitcast %struct.conn** %c to i8*, !dbg !1449
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #12, !dbg !1449
  ret void, !dbg !1449
}

declare !dbg !316 dso_local i32 @event_base_set(%struct.event_base* %0, %struct.event* %1) #4

declare !dbg !320 dso_local i32 @event_add(%struct.event* %0, %struct.timeval* %1) #4

declare !dbg !325 dso_local zeroext i1 @mt_conn_add_to_freelist(%struct.conn* %0) #4

; Function Attrs: nounwind uwtable
define internal void @conn_free(%struct.conn* %c) #0 !dbg !1450 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !1454, metadata !DIExpression()), !dbg !1455
  %0 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1456, !tbaa !964
  %tobool = icmp ne %struct.conn* %0, null, !dbg !1456
  br i1 %tobool, label %if.then, label %if.end28, !dbg !1458

if.then:                                          ; preds = %entry
  %1 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1459, !tbaa !964
  %hdrbuf = getelementptr inbounds %struct.conn, %struct.conn* %1, i32 0, i32 40, !dbg !1462
  %2 = load i8*, i8** %hdrbuf, align 8, !dbg !1462, !tbaa !1085
  %tobool1 = icmp ne i8* %2, null, !dbg !1459
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !1463

if.then2:                                         ; preds = %if.then
  %3 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1464, !tbaa !964
  %hdrbuf3 = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 40, !dbg !1465
  %4 = load i8*, i8** %hdrbuf3, align 8, !dbg !1465, !tbaa !1085
  call void @free(i8* %4) #12, !dbg !1466
  br label %if.end, !dbg !1466

if.end:                                           ; preds = %if.then2, %if.then
  %5 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1467, !tbaa !964
  %msglist = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 23, !dbg !1469
  %6 = load %struct.msghdr*, %struct.msghdr** %msglist, align 8, !dbg !1469, !tbaa !1081
  %tobool4 = icmp ne %struct.msghdr* %6, null, !dbg !1467
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !1470

if.then5:                                         ; preds = %if.end
  %7 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1471, !tbaa !964
  %msglist6 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 23, !dbg !1472
  %8 = load %struct.msghdr*, %struct.msghdr** %msglist6, align 8, !dbg !1472, !tbaa !1081
  %9 = bitcast %struct.msghdr* %8 to i8*, !dbg !1471
  call void @free(i8* %9) #12, !dbg !1473
  br label %if.end7, !dbg !1473

if.end7:                                          ; preds = %if.then5, %if.end
  %10 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1474, !tbaa !964
  %rbuf = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 5, !dbg !1476
  %11 = load i8*, i8** %rbuf, align 8, !dbg !1476, !tbaa !1065
  %tobool8 = icmp ne i8* %11, null, !dbg !1474
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !1477

if.then9:                                         ; preds = %if.end7
  %12 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1478, !tbaa !964
  %rbuf10 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 5, !dbg !1479
  %13 = load i8*, i8** %rbuf10, align 8, !dbg !1479, !tbaa !1065
  call void @free(i8* %13) #12, !dbg !1480
  br label %if.end11, !dbg !1480

if.end11:                                         ; preds = %if.then9, %if.end7
  %14 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1481, !tbaa !964
  %wbuf = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 9, !dbg !1483
  %15 = load i8*, i8** %wbuf, align 8, !dbg !1483, !tbaa !1054
  %tobool12 = icmp ne i8* %15, null, !dbg !1481
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !1484

if.then13:                                        ; preds = %if.end11
  %16 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1485, !tbaa !964
  %wbuf14 = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 9, !dbg !1486
  %17 = load i8*, i8** %wbuf14, align 8, !dbg !1486, !tbaa !1054
  call void @free(i8* %17) #12, !dbg !1487
  br label %if.end15, !dbg !1487

if.end15:                                         ; preds = %if.then13, %if.end11
  %18 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1488, !tbaa !964
  %ilist = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 28, !dbg !1490
  %19 = load %struct._stritem**, %struct._stritem*** %ilist, align 8, !dbg !1490, !tbaa !1069
  %tobool16 = icmp ne %struct._stritem** %19, null, !dbg !1488
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !1491

if.then17:                                        ; preds = %if.end15
  %20 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1492, !tbaa !964
  %ilist18 = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 28, !dbg !1493
  %21 = load %struct._stritem**, %struct._stritem*** %ilist18, align 8, !dbg !1493, !tbaa !1069
  %22 = bitcast %struct._stritem** %21 to i8*, !dbg !1492
  call void @free(i8* %22) #12, !dbg !1494
  br label %if.end19, !dbg !1494

if.end19:                                         ; preds = %if.then17, %if.end15
  %23 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1495, !tbaa !964
  %suffixlist = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 32, !dbg !1497
  %24 = load i8**, i8*** %suffixlist, align 8, !dbg !1497, !tbaa !1073
  %tobool20 = icmp ne i8** %24, null, !dbg !1495
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !1498

if.then21:                                        ; preds = %if.end19
  %25 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1499, !tbaa !964
  %suffixlist22 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 32, !dbg !1500
  %26 = load i8**, i8*** %suffixlist22, align 8, !dbg !1500, !tbaa !1073
  %27 = bitcast i8** %26 to i8*, !dbg !1499
  call void @free(i8* %27) #12, !dbg !1501
  br label %if.end23, !dbg !1501

if.end23:                                         ; preds = %if.then21, %if.end19
  %28 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1502, !tbaa !964
  %iov = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 20, !dbg !1504
  %29 = load %struct.iovec*, %struct.iovec** %iov, align 8, !dbg !1504, !tbaa !1077
  %tobool24 = icmp ne %struct.iovec* %29, null, !dbg !1502
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !1505

if.then25:                                        ; preds = %if.end23
  %30 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1506, !tbaa !964
  %iov26 = getelementptr inbounds %struct.conn, %struct.conn* %30, i32 0, i32 20, !dbg !1507
  %31 = load %struct.iovec*, %struct.iovec** %iov26, align 8, !dbg !1507, !tbaa !1077
  %32 = bitcast %struct.iovec* %31 to i8*, !dbg !1506
  call void @free(i8* %32) #12, !dbg !1508
  br label %if.end27, !dbg !1508

if.end27:                                         ; preds = %if.then25, %if.end23
  %33 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !1509, !tbaa !964
  %34 = bitcast %struct.conn* %33 to i8*, !dbg !1509
  call void @free(i8* %34) #12, !dbg !1510
  br label %if.end28, !dbg !1511

if.end28:                                         ; preds = %if.end27, %entry
  ret void, !dbg !1512
}

; Function Attrs: nounwind uwtable
define dso_local i8* @do_suffix_from_freelist() #0 !dbg !1513 {
entry:
  %s = alloca i8*, align 8
  %0 = bitcast i8** %s to i8*, !dbg !1516
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !1516
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1515, metadata !DIExpression()), !dbg !1517
  %1 = load i32, i32* @freesuffixcurr, align 4, !dbg !1518, !tbaa !946
  %cmp = icmp sgt i32 %1, 0, !dbg !1520
  br i1 %cmp, label %if.then, label %if.else, !dbg !1521

if.then:                                          ; preds = %entry
  %2 = load i8**, i8*** @freesuffix, align 8, !dbg !1522, !tbaa !964
  %3 = load i32, i32* @freesuffixcurr, align 4, !dbg !1524, !tbaa !946
  %dec = add nsw i32 %3, -1, !dbg !1524
  store i32 %dec, i32* @freesuffixcurr, align 4, !dbg !1524, !tbaa !946
  %idxprom = sext i32 %dec to i64, !dbg !1522
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !1522
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !1522, !tbaa !964
  store i8* %4, i8** %s, align 8, !dbg !1525, !tbaa !964
  br label %if.end, !dbg !1526

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 24) #12, !dbg !1527
  store i8* %call, i8** %s, align 8, !dbg !1529, !tbaa !964
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %s, align 8, !dbg !1530, !tbaa !964
  %6 = bitcast i8** %s to i8*, !dbg !1531
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #12, !dbg !1531
  ret i8* %5, !dbg !1532
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i1 @do_suffix_add_to_freelist(i8* %s) #0 !dbg !1533 {
entry:
  %retval = alloca i1, align 1
  %s.addr = alloca i8*, align 8
  %new_freesuffix = alloca i8**, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !1535, metadata !DIExpression()), !dbg !1539
  %0 = load i32, i32* @freesuffixcurr, align 4, !dbg !1540, !tbaa !946
  %1 = load i32, i32* @freesuffixtotal, align 4, !dbg !1541, !tbaa !946
  %cmp = icmp slt i32 %0, %1, !dbg !1542
  br i1 %cmp, label %if.then, label %if.else, !dbg !1543

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %s.addr, align 8, !dbg !1544, !tbaa !964
  %3 = load i8**, i8*** @freesuffix, align 8, !dbg !1546, !tbaa !964
  %4 = load i32, i32* @freesuffixcurr, align 4, !dbg !1547, !tbaa !946
  %inc = add nsw i32 %4, 1, !dbg !1547
  store i32 %inc, i32* @freesuffixcurr, align 4, !dbg !1547, !tbaa !946
  %idxprom = sext i32 %4 to i64, !dbg !1546
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !1546
  store i8* %2, i8** %arrayidx, align 8, !dbg !1548, !tbaa !964
  store i1 false, i1* %retval, align 1, !dbg !1549
  br label %return, !dbg !1549

if.else:                                          ; preds = %entry
  %5 = bitcast i8*** %new_freesuffix to i8*, !dbg !1550
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #12, !dbg !1550
  call void @llvm.dbg.declare(metadata i8*** %new_freesuffix, metadata !1536, metadata !DIExpression()), !dbg !1551
  %6 = load i8**, i8*** @freesuffix, align 8, !dbg !1552, !tbaa !964
  %7 = bitcast i8** %6 to i8*, !dbg !1552
  %8 = load i32, i32* @freesuffixtotal, align 4, !dbg !1553, !tbaa !946
  %mul = mul nsw i32 %8, 2, !dbg !1554
  %conv = sext i32 %mul to i64, !dbg !1553
  %call = call i8* @realloc(i8* %7, i64 %conv) #12, !dbg !1555
  %9 = bitcast i8* %call to i8**, !dbg !1555
  store i8** %9, i8*** %new_freesuffix, align 8, !dbg !1551, !tbaa !964
  %10 = load i8**, i8*** %new_freesuffix, align 8, !dbg !1556, !tbaa !964
  %tobool = icmp ne i8** %10, null, !dbg !1556
  br i1 %tobool, label %if.then1, label %if.end, !dbg !1558

if.then1:                                         ; preds = %if.else
  %11 = load i32, i32* @freesuffixtotal, align 4, !dbg !1559, !tbaa !946
  %mul2 = mul nsw i32 %11, 2, !dbg !1559
  store i32 %mul2, i32* @freesuffixtotal, align 4, !dbg !1559, !tbaa !946
  %12 = load i8**, i8*** %new_freesuffix, align 8, !dbg !1561, !tbaa !964
  store i8** %12, i8*** @freesuffix, align 8, !dbg !1562, !tbaa !964
  %13 = load i8*, i8** %s.addr, align 8, !dbg !1563, !tbaa !964
  %14 = load i8**, i8*** @freesuffix, align 8, !dbg !1564, !tbaa !964
  %15 = load i32, i32* @freesuffixcurr, align 4, !dbg !1565, !tbaa !946
  %inc3 = add nsw i32 %15, 1, !dbg !1565
  store i32 %inc3, i32* @freesuffixcurr, align 4, !dbg !1565, !tbaa !946
  %idxprom4 = sext i32 %15 to i64, !dbg !1564
  %arrayidx5 = getelementptr inbounds i8*, i8** %14, i64 %idxprom4, !dbg !1564
  store i8* %13, i8** %arrayidx5, align 8, !dbg !1566, !tbaa !964
  store i1 false, i1* %retval, align 1, !dbg !1567
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1567

if.end:                                           ; preds = %if.else
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !1568
  br label %cleanup, !dbg !1568

cleanup:                                          ; preds = %if.end, %if.then1
  %16 = bitcast i8*** %new_freesuffix to i8*, !dbg !1568
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %16) #12, !dbg !1568
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end6

if.end6:                                          ; preds = %cleanup.cont
  store i1 true, i1* %retval, align 1, !dbg !1569
  br label %return, !dbg !1569

return:                                           ; preds = %if.end6, %cleanup, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !1570
  ret i1 %17, !dbg !1570

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local i32 @do_store_item(%struct._stritem* %it, i32 %comm) #0 !dbg !1571 {
entry:
  %retval = alloca i32, align 4
  %it.addr = alloca %struct._stritem*, align 8
  %comm.addr = alloca i32, align 4
  %key = alloca i8*, align 8
  %delete_locked = alloca i8, align 1
  %old_it = alloca %struct._stritem*, align 8
  %stored = alloca i32, align 4
  %new_it = alloca %struct._stritem*, align 8
  %flags = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !1575, metadata !DIExpression()), !dbg !1583
  store i32 %comm, i32* %comm.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %comm.addr, metadata !1576, metadata !DIExpression()), !dbg !1584
  %0 = bitcast i8** %key to i8*, !dbg !1585
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !1585
  call void @llvm.dbg.declare(metadata i8** %key, metadata !1577, metadata !DIExpression()), !dbg !1586
  %1 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1587, !tbaa !964
  %end = getelementptr inbounds %struct._stritem, %struct._stritem* %1, i32 0, i32 12, !dbg !1587
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %end, i64 0, i64 0, !dbg !1587
  %2 = bitcast i8** %arrayidx to i8*, !dbg !1587
  store i8* %2, i8** %key, align 8, !dbg !1586, !tbaa !964
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %delete_locked) #12, !dbg !1588
  call void @llvm.dbg.declare(metadata i8* %delete_locked, metadata !1578, metadata !DIExpression()), !dbg !1589
  store i8 0, i8* %delete_locked, align 1, !dbg !1589, !tbaa !1031
  %3 = bitcast %struct._stritem** %old_it to i8*, !dbg !1590
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #12, !dbg !1590
  call void @llvm.dbg.declare(metadata %struct._stritem** %old_it, metadata !1579, metadata !DIExpression()), !dbg !1591
  %4 = load i8*, i8** %key, align 8, !dbg !1592, !tbaa !964
  %5 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1593, !tbaa !964
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 10, !dbg !1594
  %6 = load i8, i8* %nkey, align 1, !dbg !1594, !tbaa !1595
  %conv = zext i8 %6 to i64, !dbg !1593
  %call = call %struct._stritem* @do_item_get_notedeleted(i8* %4, i64 %conv, i8* %delete_locked), !dbg !1597
  %7 = bitcast %struct._stritem** %old_it to i8*, !dbg !1591
  %8 = call i32 @cpavise_store_data_fileline(i8* %7, i64 8, i32 0, i32 826), !dbg !1591
  store %struct._stritem* %call, %struct._stritem** %old_it, align 8, !dbg !1591, !tbaa !964
  %9 = bitcast i32* %stored to i8*, !dbg !1598
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #12, !dbg !1598
  call void @llvm.dbg.declare(metadata i32* %stored, metadata !1580, metadata !DIExpression()), !dbg !1599
  store i32 0, i32* %stored, align 4, !dbg !1599, !tbaa !946
  %10 = bitcast %struct._stritem** %new_it to i8*, !dbg !1600
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #12, !dbg !1600
  call void @llvm.dbg.declare(metadata %struct._stritem** %new_it, metadata !1581, metadata !DIExpression()), !dbg !1601
  store %struct._stritem* null, %struct._stritem** %new_it, align 8, !dbg !1601, !tbaa !964
  %11 = bitcast i32* %flags to i8*, !dbg !1602
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #12, !dbg !1602
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !1582, metadata !DIExpression()), !dbg !1603
  %12 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1604, !tbaa !964
  %cmp = icmp ne %struct._stritem* %12, null, !dbg !1606
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !1607

land.lhs.true:                                    ; preds = %entry
  %13 = load i32, i32* %comm.addr, align 4, !dbg !1608, !tbaa !946
  %cmp2 = icmp eq i32 %13, 1, !dbg !1609
  br i1 %cmp2, label %if.then, label %if.else, !dbg !1610

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1611, !tbaa !964
  call void @do_item_update(%struct._stritem* %14), !dbg !1613
  br label %if.end197, !dbg !1614

if.else:                                          ; preds = %land.lhs.true, %entry
  %15 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1615, !tbaa !964
  %tobool = icmp ne %struct._stritem* %15, null, !dbg !1615
  br i1 %tobool, label %if.else13, label %land.lhs.true4, !dbg !1617

land.lhs.true4:                                   ; preds = %if.else
  %16 = load i32, i32* %comm.addr, align 4, !dbg !1618, !tbaa !946
  %cmp5 = icmp eq i32 %16, 3, !dbg !1619
  br i1 %cmp5, label %if.then12, label %lor.lhs.false, !dbg !1620

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %17 = load i32, i32* %comm.addr, align 4, !dbg !1621, !tbaa !946
  %cmp7 = icmp eq i32 %17, 4, !dbg !1622
  br i1 %cmp7, label %if.then12, label %lor.lhs.false9, !dbg !1623

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %18 = load i32, i32* %comm.addr, align 4, !dbg !1624, !tbaa !946
  %cmp10 = icmp eq i32 %18, 5, !dbg !1625
  br i1 %cmp10, label %if.then12, label %if.else13, !dbg !1626

if.then12:                                        ; preds = %lor.lhs.false9, %lor.lhs.false, %land.lhs.true4
  br label %if.end196, !dbg !1627

if.else13:                                        ; preds = %lor.lhs.false9, %if.else
  %19 = load i8, i8* %delete_locked, align 1, !dbg !1629, !tbaa !1031, !range !1262
  %tobool14 = trunc i8 %19 to i1, !dbg !1629
  br i1 %tobool14, label %land.lhs.true16, label %if.else29, !dbg !1631

land.lhs.true16:                                  ; preds = %if.else13
  %20 = load i32, i32* %comm.addr, align 4, !dbg !1632, !tbaa !946
  %cmp17 = icmp eq i32 %20, 3, !dbg !1633
  br i1 %cmp17, label %if.then28, label %lor.lhs.false19, !dbg !1634

lor.lhs.false19:                                  ; preds = %land.lhs.true16
  %21 = load i32, i32* %comm.addr, align 4, !dbg !1635, !tbaa !946
  %cmp20 = icmp eq i32 %21, 1, !dbg !1636
  br i1 %cmp20, label %if.then28, label %lor.lhs.false22, !dbg !1637

lor.lhs.false22:                                  ; preds = %lor.lhs.false19
  %22 = load i32, i32* %comm.addr, align 4, !dbg !1638, !tbaa !946
  %cmp23 = icmp eq i32 %22, 4, !dbg !1639
  br i1 %cmp23, label %if.then28, label %lor.lhs.false25, !dbg !1640

lor.lhs.false25:                                  ; preds = %lor.lhs.false22
  %23 = load i32, i32* %comm.addr, align 4, !dbg !1641, !tbaa !946
  %cmp26 = icmp eq i32 %23, 5, !dbg !1642
  br i1 %cmp26, label %if.then28, label %if.else29, !dbg !1643

if.then28:                                        ; preds = %lor.lhs.false25, %lor.lhs.false22, %lor.lhs.false19, %land.lhs.true16
  br label %if.end195, !dbg !1644

if.else29:                                        ; preds = %lor.lhs.false25, %if.else13
  %24 = load i32, i32* %comm.addr, align 4, !dbg !1646, !tbaa !946
  %cmp30 = icmp eq i32 %24, 6, !dbg !1648
  br i1 %cmp30, label %if.then32, label %if.else50, !dbg !1649

if.then32:                                        ; preds = %if.else29
  %25 = load i8, i8* %delete_locked, align 1, !dbg !1650, !tbaa !1031, !range !1262
  %tobool33 = trunc i8 %25 to i1, !dbg !1650
  br i1 %tobool33, label %if.then34, label %if.end, !dbg !1653

if.then34:                                        ; preds = %if.then32
  %26 = load i8*, i8** %key, align 8, !dbg !1654, !tbaa !964
  %27 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1655, !tbaa !964
  %nkey35 = getelementptr inbounds %struct._stritem, %struct._stritem* %27, i32 0, i32 10, !dbg !1656
  %28 = load i8, i8* %nkey35, align 1, !dbg !1656, !tbaa !1595
  %conv36 = zext i8 %28 to i64, !dbg !1655
  %call37 = call %struct._stritem* @do_item_get_nocheck(i8* %26, i64 %conv36), !dbg !1657
  store %struct._stritem* %call37, %struct._stritem** %old_it, align 8, !dbg !1658, !tbaa !964
  br label %if.end, !dbg !1659

if.end:                                           ; preds = %if.then34, %if.then32
  %29 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1660, !tbaa !964
  %cmp38 = icmp eq %struct._stritem* %29, null, !dbg !1662
  br i1 %cmp38, label %if.then40, label %if.else41, !dbg !1663

if.then40:                                        ; preds = %if.end
  store i32 3, i32* %stored, align 4, !dbg !1664, !tbaa !946
  br label %if.end49, !dbg !1666

if.else41:                                        ; preds = %if.end
  %30 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1667, !tbaa !964
  %cas_id = getelementptr inbounds %struct._stritem, %struct._stritem* %30, i32 0, i32 11, !dbg !1669
  %31 = load i64, i64* %cas_id, align 8, !dbg !1669, !tbaa !1670
  %32 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1671, !tbaa !964
  %cas_id42 = getelementptr inbounds %struct._stritem, %struct._stritem* %32, i32 0, i32 11, !dbg !1672
  %33 = load i64, i64* %cas_id42, align 8, !dbg !1672, !tbaa !1670
  %cmp43 = icmp eq i64 %31, %33, !dbg !1673
  br i1 %cmp43, label %if.then45, label %if.else47, !dbg !1674

if.then45:                                        ; preds = %if.else41
  %34 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1675, !tbaa !964
  %35 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1677, !tbaa !964
  %call46 = call i32 @do_item_replace(%struct._stritem* %34, %struct._stritem* %35), !dbg !1678
  store i32 1, i32* %stored, align 4, !dbg !1679, !tbaa !946
  br label %if.end48, !dbg !1680

if.else47:                                        ; preds = %if.else41
  store i32 2, i32* %stored, align 4, !dbg !1681, !tbaa !946
  br label %if.end48

if.end48:                                         ; preds = %if.else47, %if.then45
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then40
  br label %if.end194, !dbg !1683

if.else50:                                        ; preds = %if.else29
  %36 = load i32, i32* %comm.addr, align 4, !dbg !1684, !tbaa !946
  %cmp51 = icmp eq i32 %36, 4, !dbg !1687
  br i1 %cmp51, label %if.then56, label %lor.lhs.false53, !dbg !1688

lor.lhs.false53:                                  ; preds = %if.else50
  %37 = load i32, i32* %comm.addr, align 4, !dbg !1689, !tbaa !946
  %cmp54 = icmp eq i32 %37, 5, !dbg !1690
  br i1 %cmp54, label %if.then56, label %if.end180, !dbg !1691

if.then56:                                        ; preds = %lor.lhs.false53, %if.else50
  %38 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1692, !tbaa !964
  %end57 = getelementptr inbounds %struct._stritem, %struct._stritem* %38, i32 0, i32 12, !dbg !1692
  %arrayidx58 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end57, i64 0, i64 0, !dbg !1692
  %39 = bitcast i8** %arrayidx58 to i8*, !dbg !1692
  %40 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1692, !tbaa !964
  %nkey59 = getelementptr inbounds %struct._stritem, %struct._stritem* %40, i32 0, i32 10, !dbg !1692
  %41 = load i8, i8* %nkey59, align 1, !dbg !1692, !tbaa !1595
  %conv60 = zext i8 %41 to i32, !dbg !1692
  %idx.ext = sext i32 %conv60 to i64, !dbg !1692
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %idx.ext, !dbg !1692
  %add.ptr61 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !1692
  %call62 = call i64 @strtol(i8* %add.ptr61, i8** null, i32 10) #12, !dbg !1694
  %conv63 = trunc i64 %call62 to i32, !dbg !1695
  store i32 %conv63, i32* %flags, align 4, !dbg !1696, !tbaa !946
  %42 = load i8*, i8** %key, align 8, !dbg !1697, !tbaa !964
  %43 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1698, !tbaa !964
  %nkey64 = getelementptr inbounds %struct._stritem, %struct._stritem* %43, i32 0, i32 10, !dbg !1699
  %44 = load i8, i8* %nkey64, align 1, !dbg !1699, !tbaa !1595
  %conv65 = zext i8 %44 to i64, !dbg !1698
  %45 = load i32, i32* %flags, align 4, !dbg !1700, !tbaa !946
  %46 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1701, !tbaa !964
  %exptime = getelementptr inbounds %struct._stritem, %struct._stritem* %46, i32 0, i32 4, !dbg !1702
  %47 = load i32, i32* %exptime, align 4, !dbg !1702, !tbaa !1703
  %48 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1704, !tbaa !964
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %48, i32 0, i32 5, !dbg !1705
  %49 = load i32, i32* %nbytes, align 8, !dbg !1705, !tbaa !1706
  %50 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1707, !tbaa !964
  %nbytes66 = getelementptr inbounds %struct._stritem, %struct._stritem* %50, i32 0, i32 5, !dbg !1708
  %51 = load i32, i32* %nbytes66, align 8, !dbg !1708, !tbaa !1706
  %add = add nsw i32 %49, %51, !dbg !1709
  %sub = sub nsw i32 %add, 2, !dbg !1710
  %call67 = call %struct._stritem* @do_item_alloc(i8* %42, i64 %conv65, i32 %45, i32 %47, i32 %sub), !dbg !1711
  store %struct._stritem* %call67, %struct._stritem** %new_it, align 8, !dbg !1712, !tbaa !964
  %52 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1713, !tbaa !964
  %cmp68 = icmp eq %struct._stritem* %52, null, !dbg !1715
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !1716

if.then70:                                        ; preds = %if.then56
  store i32 0, i32* %retval, align 4, !dbg !1717
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1717

if.end71:                                         ; preds = %if.then56
  %53 = load i32, i32* %comm.addr, align 4, !dbg !1719, !tbaa !946
  %cmp72 = icmp eq i32 %53, 4, !dbg !1721
  br i1 %cmp72, label %if.then74, label %if.else126, !dbg !1722

if.then74:                                        ; preds = %if.end71
  %54 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1723, !tbaa !964
  %end75 = getelementptr inbounds %struct._stritem, %struct._stritem* %54, i32 0, i32 12, !dbg !1723
  %arrayidx76 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end75, i64 0, i64 0, !dbg !1723
  %55 = bitcast i8** %arrayidx76 to i8*, !dbg !1723
  %56 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1723, !tbaa !964
  %nkey77 = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 10, !dbg !1723
  %57 = load i8, i8* %nkey77, align 1, !dbg !1723, !tbaa !1595
  %conv78 = zext i8 %57 to i32, !dbg !1723
  %idx.ext79 = sext i32 %conv78 to i64, !dbg !1723
  %add.ptr80 = getelementptr inbounds i8, i8* %55, i64 %idx.ext79, !dbg !1723
  %add.ptr81 = getelementptr inbounds i8, i8* %add.ptr80, i64 1, !dbg !1723
  %58 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1723, !tbaa !964
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %58, i32 0, i32 7, !dbg !1723
  %59 = load i8, i8* %nsuffix, align 2, !dbg !1723, !tbaa !1725
  %conv82 = zext i8 %59 to i32, !dbg !1723
  %idx.ext83 = sext i32 %conv82 to i64, !dbg !1723
  %add.ptr84 = getelementptr inbounds i8, i8* %add.ptr81, i64 %idx.ext83, !dbg !1723
  %60 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1726, !tbaa !964
  %end85 = getelementptr inbounds %struct._stritem, %struct._stritem* %60, i32 0, i32 12, !dbg !1726
  %arrayidx86 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end85, i64 0, i64 0, !dbg !1726
  %61 = bitcast i8** %arrayidx86 to i8*, !dbg !1726
  %62 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1726, !tbaa !964
  %nkey87 = getelementptr inbounds %struct._stritem, %struct._stritem* %62, i32 0, i32 10, !dbg !1726
  %63 = load i8, i8* %nkey87, align 1, !dbg !1726, !tbaa !1595
  %conv88 = zext i8 %63 to i32, !dbg !1726
  %idx.ext89 = sext i32 %conv88 to i64, !dbg !1726
  %add.ptr90 = getelementptr inbounds i8, i8* %61, i64 %idx.ext89, !dbg !1726
  %add.ptr91 = getelementptr inbounds i8, i8* %add.ptr90, i64 1, !dbg !1726
  %64 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1726, !tbaa !964
  %nsuffix92 = getelementptr inbounds %struct._stritem, %struct._stritem* %64, i32 0, i32 7, !dbg !1726
  %65 = load i8, i8* %nsuffix92, align 2, !dbg !1726, !tbaa !1725
  %conv93 = zext i8 %65 to i32, !dbg !1726
  %idx.ext94 = sext i32 %conv93 to i64, !dbg !1726
  %add.ptr95 = getelementptr inbounds i8, i8* %add.ptr91, i64 %idx.ext94, !dbg !1726
  %66 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1727, !tbaa !964
  %nbytes96 = getelementptr inbounds %struct._stritem, %struct._stritem* %66, i32 0, i32 5, !dbg !1728
  %67 = load i32, i32* %nbytes96, align 8, !dbg !1728, !tbaa !1706
  %conv97 = sext i32 %67 to i64, !dbg !1727
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr84, i8* align 1 %add.ptr95, i64 %conv97, i1 false), !dbg !1729
  %68 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1730, !tbaa !964
  %end98 = getelementptr inbounds %struct._stritem, %struct._stritem* %68, i32 0, i32 12, !dbg !1730
  %arrayidx99 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end98, i64 0, i64 0, !dbg !1730
  %69 = bitcast i8** %arrayidx99 to i8*, !dbg !1730
  %70 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1730, !tbaa !964
  %nkey100 = getelementptr inbounds %struct._stritem, %struct._stritem* %70, i32 0, i32 10, !dbg !1730
  %71 = load i8, i8* %nkey100, align 1, !dbg !1730, !tbaa !1595
  %conv101 = zext i8 %71 to i32, !dbg !1730
  %idx.ext102 = sext i32 %conv101 to i64, !dbg !1730
  %add.ptr103 = getelementptr inbounds i8, i8* %69, i64 %idx.ext102, !dbg !1730
  %add.ptr104 = getelementptr inbounds i8, i8* %add.ptr103, i64 1, !dbg !1730
  %72 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1730, !tbaa !964
  %nsuffix105 = getelementptr inbounds %struct._stritem, %struct._stritem* %72, i32 0, i32 7, !dbg !1730
  %73 = load i8, i8* %nsuffix105, align 2, !dbg !1730, !tbaa !1725
  %conv106 = zext i8 %73 to i32, !dbg !1730
  %idx.ext107 = sext i32 %conv106 to i64, !dbg !1730
  %add.ptr108 = getelementptr inbounds i8, i8* %add.ptr104, i64 %idx.ext107, !dbg !1730
  %74 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1731, !tbaa !964
  %nbytes109 = getelementptr inbounds %struct._stritem, %struct._stritem* %74, i32 0, i32 5, !dbg !1732
  %75 = load i32, i32* %nbytes109, align 8, !dbg !1732, !tbaa !1706
  %idx.ext110 = sext i32 %75 to i64, !dbg !1733
  %add.ptr111 = getelementptr inbounds i8, i8* %add.ptr108, i64 %idx.ext110, !dbg !1733
  %add.ptr112 = getelementptr inbounds i8, i8* %add.ptr111, i64 -2, !dbg !1734
  %76 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1735, !tbaa !964
  %end113 = getelementptr inbounds %struct._stritem, %struct._stritem* %76, i32 0, i32 12, !dbg !1735
  %arrayidx114 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end113, i64 0, i64 0, !dbg !1735
  %77 = bitcast i8** %arrayidx114 to i8*, !dbg !1735
  %78 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1735, !tbaa !964
  %nkey115 = getelementptr inbounds %struct._stritem, %struct._stritem* %78, i32 0, i32 10, !dbg !1735
  %79 = load i8, i8* %nkey115, align 1, !dbg !1735, !tbaa !1595
  %conv116 = zext i8 %79 to i32, !dbg !1735
  %idx.ext117 = sext i32 %conv116 to i64, !dbg !1735
  %add.ptr118 = getelementptr inbounds i8, i8* %77, i64 %idx.ext117, !dbg !1735
  %add.ptr119 = getelementptr inbounds i8, i8* %add.ptr118, i64 1, !dbg !1735
  %80 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1735, !tbaa !964
  %nsuffix120 = getelementptr inbounds %struct._stritem, %struct._stritem* %80, i32 0, i32 7, !dbg !1735
  %81 = load i8, i8* %nsuffix120, align 2, !dbg !1735, !tbaa !1725
  %conv121 = zext i8 %81 to i32, !dbg !1735
  %idx.ext122 = sext i32 %conv121 to i64, !dbg !1735
  %add.ptr123 = getelementptr inbounds i8, i8* %add.ptr119, i64 %idx.ext122, !dbg !1735
  %82 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1736, !tbaa !964
  %nbytes124 = getelementptr inbounds %struct._stritem, %struct._stritem* %82, i32 0, i32 5, !dbg !1737
  %83 = load i32, i32* %nbytes124, align 8, !dbg !1737, !tbaa !1706
  %conv125 = sext i32 %83 to i64, !dbg !1736
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr112, i8* align 1 %add.ptr123, i64 %conv125, i1 false), !dbg !1738
  br label %if.end179, !dbg !1739

if.else126:                                       ; preds = %if.end71
  %84 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1740, !tbaa !964
  %end127 = getelementptr inbounds %struct._stritem, %struct._stritem* %84, i32 0, i32 12, !dbg !1740
  %arrayidx128 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end127, i64 0, i64 0, !dbg !1740
  %85 = bitcast i8** %arrayidx128 to i8*, !dbg !1740
  %86 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1740, !tbaa !964
  %nkey129 = getelementptr inbounds %struct._stritem, %struct._stritem* %86, i32 0, i32 10, !dbg !1740
  %87 = load i8, i8* %nkey129, align 1, !dbg !1740, !tbaa !1595
  %conv130 = zext i8 %87 to i32, !dbg !1740
  %idx.ext131 = sext i32 %conv130 to i64, !dbg !1740
  %add.ptr132 = getelementptr inbounds i8, i8* %85, i64 %idx.ext131, !dbg !1740
  %add.ptr133 = getelementptr inbounds i8, i8* %add.ptr132, i64 1, !dbg !1740
  %88 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1740, !tbaa !964
  %nsuffix134 = getelementptr inbounds %struct._stritem, %struct._stritem* %88, i32 0, i32 7, !dbg !1740
  %89 = load i8, i8* %nsuffix134, align 2, !dbg !1740, !tbaa !1725
  %conv135 = zext i8 %89 to i32, !dbg !1740
  %idx.ext136 = sext i32 %conv135 to i64, !dbg !1740
  %add.ptr137 = getelementptr inbounds i8, i8* %add.ptr133, i64 %idx.ext136, !dbg !1740
  %90 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1742, !tbaa !964
  %end138 = getelementptr inbounds %struct._stritem, %struct._stritem* %90, i32 0, i32 12, !dbg !1742
  %arrayidx139 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end138, i64 0, i64 0, !dbg !1742
  %91 = bitcast i8** %arrayidx139 to i8*, !dbg !1742
  %92 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1742, !tbaa !964
  %nkey140 = getelementptr inbounds %struct._stritem, %struct._stritem* %92, i32 0, i32 10, !dbg !1742
  %93 = load i8, i8* %nkey140, align 1, !dbg !1742, !tbaa !1595
  %conv141 = zext i8 %93 to i32, !dbg !1742
  %idx.ext142 = sext i32 %conv141 to i64, !dbg !1742
  %add.ptr143 = getelementptr inbounds i8, i8* %91, i64 %idx.ext142, !dbg !1742
  %add.ptr144 = getelementptr inbounds i8, i8* %add.ptr143, i64 1, !dbg !1742
  %94 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1742, !tbaa !964
  %nsuffix145 = getelementptr inbounds %struct._stritem, %struct._stritem* %94, i32 0, i32 7, !dbg !1742
  %95 = load i8, i8* %nsuffix145, align 2, !dbg !1742, !tbaa !1725
  %conv146 = zext i8 %95 to i32, !dbg !1742
  %idx.ext147 = sext i32 %conv146 to i64, !dbg !1742
  %add.ptr148 = getelementptr inbounds i8, i8* %add.ptr144, i64 %idx.ext147, !dbg !1742
  %96 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1743, !tbaa !964
  %nbytes149 = getelementptr inbounds %struct._stritem, %struct._stritem* %96, i32 0, i32 5, !dbg !1744
  %97 = load i32, i32* %nbytes149, align 8, !dbg !1744, !tbaa !1706
  %conv150 = sext i32 %97 to i64, !dbg !1743
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr137, i8* align 1 %add.ptr148, i64 %conv150, i1 false), !dbg !1745
  %98 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1746, !tbaa !964
  %end151 = getelementptr inbounds %struct._stritem, %struct._stritem* %98, i32 0, i32 12, !dbg !1746
  %arrayidx152 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end151, i64 0, i64 0, !dbg !1746
  %99 = bitcast i8** %arrayidx152 to i8*, !dbg !1746
  %100 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1746, !tbaa !964
  %nkey153 = getelementptr inbounds %struct._stritem, %struct._stritem* %100, i32 0, i32 10, !dbg !1746
  %101 = load i8, i8* %nkey153, align 1, !dbg !1746, !tbaa !1595
  %conv154 = zext i8 %101 to i32, !dbg !1746
  %idx.ext155 = sext i32 %conv154 to i64, !dbg !1746
  %add.ptr156 = getelementptr inbounds i8, i8* %99, i64 %idx.ext155, !dbg !1746
  %add.ptr157 = getelementptr inbounds i8, i8* %add.ptr156, i64 1, !dbg !1746
  %102 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1746, !tbaa !964
  %nsuffix158 = getelementptr inbounds %struct._stritem, %struct._stritem* %102, i32 0, i32 7, !dbg !1746
  %103 = load i8, i8* %nsuffix158, align 2, !dbg !1746, !tbaa !1725
  %conv159 = zext i8 %103 to i32, !dbg !1746
  %idx.ext160 = sext i32 %conv159 to i64, !dbg !1746
  %add.ptr161 = getelementptr inbounds i8, i8* %add.ptr157, i64 %idx.ext160, !dbg !1746
  %104 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1747, !tbaa !964
  %nbytes162 = getelementptr inbounds %struct._stritem, %struct._stritem* %104, i32 0, i32 5, !dbg !1748
  %105 = load i32, i32* %nbytes162, align 8, !dbg !1748, !tbaa !1706
  %idx.ext163 = sext i32 %105 to i64, !dbg !1749
  %add.ptr164 = getelementptr inbounds i8, i8* %add.ptr161, i64 %idx.ext163, !dbg !1749
  %add.ptr165 = getelementptr inbounds i8, i8* %add.ptr164, i64 -2, !dbg !1750
  %106 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1751, !tbaa !964
  %end166 = getelementptr inbounds %struct._stritem, %struct._stritem* %106, i32 0, i32 12, !dbg !1751
  %arrayidx167 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end166, i64 0, i64 0, !dbg !1751
  %107 = bitcast i8** %arrayidx167 to i8*, !dbg !1751
  %108 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1751, !tbaa !964
  %nkey168 = getelementptr inbounds %struct._stritem, %struct._stritem* %108, i32 0, i32 10, !dbg !1751
  %109 = load i8, i8* %nkey168, align 1, !dbg !1751, !tbaa !1595
  %conv169 = zext i8 %109 to i32, !dbg !1751
  %idx.ext170 = sext i32 %conv169 to i64, !dbg !1751
  %add.ptr171 = getelementptr inbounds i8, i8* %107, i64 %idx.ext170, !dbg !1751
  %add.ptr172 = getelementptr inbounds i8, i8* %add.ptr171, i64 1, !dbg !1751
  %110 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1751, !tbaa !964
  %nsuffix173 = getelementptr inbounds %struct._stritem, %struct._stritem* %110, i32 0, i32 7, !dbg !1751
  %111 = load i8, i8* %nsuffix173, align 2, !dbg !1751, !tbaa !1725
  %conv174 = zext i8 %111 to i32, !dbg !1751
  %idx.ext175 = sext i32 %conv174 to i64, !dbg !1751
  %add.ptr176 = getelementptr inbounds i8, i8* %add.ptr172, i64 %idx.ext175, !dbg !1751
  %112 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1752, !tbaa !964
  %nbytes177 = getelementptr inbounds %struct._stritem, %struct._stritem* %112, i32 0, i32 5, !dbg !1753
  %113 = load i32, i32* %nbytes177, align 8, !dbg !1753, !tbaa !1706
  %conv178 = sext i32 %113 to i64, !dbg !1752
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr165, i8* align 1 %add.ptr176, i64 %conv178, i1 false), !dbg !1754
  br label %if.end179

if.end179:                                        ; preds = %if.else126, %if.then74
  %114 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1755, !tbaa !964
  store %struct._stritem* %114, %struct._stritem** %it.addr, align 8, !dbg !1756, !tbaa !964
  br label %if.end180, !dbg !1757

if.end180:                                        ; preds = %if.end179, %lor.lhs.false53
  %115 = load i8, i8* %delete_locked, align 1, !dbg !1758, !tbaa !1031, !range !1262
  %tobool181 = trunc i8 %115 to i1, !dbg !1758
  br i1 %tobool181, label %if.then182, label %if.end186, !dbg !1760

if.then182:                                       ; preds = %if.end180
  %116 = load i8*, i8** %key, align 8, !dbg !1761, !tbaa !964
  %117 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1762, !tbaa !964
  %nkey183 = getelementptr inbounds %struct._stritem, %struct._stritem* %117, i32 0, i32 10, !dbg !1763
  %118 = load i8, i8* %nkey183, align 1, !dbg !1763, !tbaa !1595
  %conv184 = zext i8 %118 to i64, !dbg !1762
  %call185 = call %struct._stritem* @do_item_get_nocheck(i8* %116, i64 %conv184), !dbg !1764
  store %struct._stritem* %call185, %struct._stritem** %old_it, align 8, !dbg !1765, !tbaa !964
  br label %if.end186, !dbg !1766

if.end186:                                        ; preds = %if.then182, %if.end180
  %119 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1767, !tbaa !964
  %cmp187 = icmp ne %struct._stritem* %119, null, !dbg !1769
  br i1 %cmp187, label %if.then189, label %if.else191, !dbg !1770

if.then189:                                       ; preds = %if.end186
  %120 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1771, !tbaa !964
  %121 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1772, !tbaa !964
  %call190 = call i32 @do_item_replace(%struct._stritem* %120, %struct._stritem* %121), !dbg !1773
  br label %if.end193, !dbg !1773

if.else191:                                       ; preds = %if.end186
  %122 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1774, !tbaa !964
  %call192 = call i32 @do_item_link(%struct._stritem* %122), !dbg !1775
  br label %if.end193

if.end193:                                        ; preds = %if.else191, %if.then189
  store i32 1, i32* %stored, align 4, !dbg !1776, !tbaa !946
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.end49
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %if.then28
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.then12
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %if.then
  %123 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1777, !tbaa !964
  %cmp198 = icmp ne %struct._stritem* %123, null, !dbg !1779
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !1780

if.then200:                                       ; preds = %if.end197
  %124 = load %struct._stritem*, %struct._stritem** %old_it, align 8, !dbg !1781, !tbaa !964
  call void @do_item_remove(%struct._stritem* %124), !dbg !1782
  br label %if.end201, !dbg !1782

if.end201:                                        ; preds = %if.then200, %if.end197
  %125 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1783, !tbaa !964
  %cmp202 = icmp ne %struct._stritem* %125, null, !dbg !1785
  br i1 %cmp202, label %if.then204, label %if.end205, !dbg !1786

if.then204:                                       ; preds = %if.end201
  %126 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1787, !tbaa !964
  call void @do_item_remove(%struct._stritem* %126), !dbg !1788
  br label %if.end205, !dbg !1788

if.end205:                                        ; preds = %if.then204, %if.end201
  %127 = load i32, i32* %stored, align 4, !dbg !1789, !tbaa !946
  store i32 %127, i32* %retval, align 4, !dbg !1790
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1790

cleanup:                                          ; preds = %if.end205, %if.then70
  %128 = bitcast i32* %flags to i8*, !dbg !1791
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %128) #12, !dbg !1791
  %129 = bitcast %struct._stritem** %new_it to i8*, !dbg !1791
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %129) #12, !dbg !1791
  %130 = bitcast i32* %stored to i8*, !dbg !1791
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %130) #12, !dbg !1791
  %131 = bitcast %struct._stritem** %old_it to i8*, !dbg !1791
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131) #12, !dbg !1791
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %delete_locked) #12, !dbg !1791
  %132 = bitcast i8** %key to i8*, !dbg !1791
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %132) #12, !dbg !1791
  %133 = load i32, i32* %retval, align 4, !dbg !1791
  ret i32 %133, !dbg !1791
}

declare !dbg !328 dso_local %struct._stritem* @do_item_get_notedeleted(i8* %0, i64 %1, i8* %2) #4

declare !dbg !333 dso_local void @do_item_update(%struct._stritem* %0) #4

declare !dbg !336 dso_local %struct._stritem* @do_item_get_nocheck(i8* %0, i64 %1) #4

declare !dbg !339 dso_local i32 @do_item_replace(%struct._stritem* %0, %struct._stritem* %1) #4

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8* %0, i8** %1, i32 %2) #3

declare !dbg !342 dso_local %struct._stritem* @do_item_alloc(i8* %0, i64 %1, i32 %2, i32 %3, i32 %4) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly %0, i8* noalias nocapture readonly %1, i64 %2, i1 immarg %3) #2

declare !dbg !345 dso_local i32 @do_item_link(%struct._stritem* %0) #4

declare !dbg !348 dso_local void @do_item_remove(%struct._stritem* %0) #4

; Function Attrs: nounwind uwtable
define dso_local i8* @do_add_delta(%struct._stritem* %it, i1 zeroext %incr, i64 %delta, i8* %buf) #0 !dbg !1792 {
entry:
  %retval = alloca i8*, align 8
  %it.addr = alloca %struct._stritem*, align 8
  %incr.addr = alloca i8, align 1
  %delta.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %ptr = alloca i8*, align 8
  %value = alloca i64, align 8
  %res = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %new_it = alloca %struct._stritem*, align 8
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !1800, metadata !DIExpression()), !dbg !1810
  %frombool = zext i1 %incr to i8
  store i8 %frombool, i8* %incr.addr, align 1, !tbaa !1031
  call void @llvm.dbg.declare(metadata i8* %incr.addr, metadata !1801, metadata !DIExpression()), !dbg !1811
  store i64 %delta, i64* %delta.addr, align 8, !tbaa !914
  call void @llvm.dbg.declare(metadata i64* %delta.addr, metadata !1802, metadata !DIExpression()), !dbg !1812
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !1803, metadata !DIExpression()), !dbg !1813
  %0 = bitcast i8** %ptr to i8*, !dbg !1814
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !1814
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !1804, metadata !DIExpression()), !dbg !1815
  %1 = bitcast i64* %value to i8*, !dbg !1816
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !1816
  call void @llvm.dbg.declare(metadata i64* %value, metadata !1805, metadata !DIExpression()), !dbg !1817
  %2 = bitcast i32* %res to i8*, !dbg !1818
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #12, !dbg !1818
  call void @llvm.dbg.declare(metadata i32* %res, metadata !1806, metadata !DIExpression()), !dbg !1819
  %3 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1820, !tbaa !964
  %end = getelementptr inbounds %struct._stritem, %struct._stritem* %3, i32 0, i32 12, !dbg !1820
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %end, i64 0, i64 0, !dbg !1820
  %4 = bitcast i8** %arrayidx to i8*, !dbg !1820
  %5 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1820, !tbaa !964
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %5, i32 0, i32 10, !dbg !1820
  %6 = load i8, i8* %nkey, align 1, !dbg !1820, !tbaa !1595
  %conv = zext i8 %6 to i32, !dbg !1820
  %idx.ext = sext i32 %conv to i64, !dbg !1820
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext, !dbg !1820
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !1820
  %7 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1820, !tbaa !964
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %7, i32 0, i32 7, !dbg !1820
  %8 = load i8, i8* %nsuffix, align 2, !dbg !1820, !tbaa !1725
  %conv2 = zext i8 %8 to i32, !dbg !1820
  %idx.ext3 = sext i32 %conv2 to i64, !dbg !1820
  %add.ptr4 = getelementptr inbounds i8, i8* %add.ptr1, i64 %idx.ext3, !dbg !1820
  store i8* %add.ptr4, i8** %ptr, align 8, !dbg !1821, !tbaa !964
  br label %while.cond, !dbg !1822

while.cond:                                       ; preds = %while.body, %entry
  %9 = load i8*, i8** %ptr, align 8, !dbg !1823, !tbaa !964
  %10 = load i8, i8* %9, align 1, !dbg !1824, !tbaa !1825
  %conv5 = sext i8 %10 to i32, !dbg !1824
  %cmp = icmp ne i32 %conv5, 0, !dbg !1826
  br i1 %cmp, label %land.rhs, label %land.end14, !dbg !1827

land.rhs:                                         ; preds = %while.cond
  %11 = load i8*, i8** %ptr, align 8, !dbg !1828, !tbaa !964
  %12 = load i8, i8* %11, align 1, !dbg !1829, !tbaa !1825
  %conv7 = sext i8 %12 to i32, !dbg !1829
  %cmp8 = icmp slt i32 %conv7, 48, !dbg !1830
  br i1 %cmp8, label %land.rhs10, label %land.end, !dbg !1831

land.rhs10:                                       ; preds = %land.rhs
  %13 = load i8*, i8** %ptr, align 8, !dbg !1832, !tbaa !964
  %14 = load i8, i8* %13, align 1, !dbg !1833, !tbaa !1825
  %conv11 = sext i8 %14 to i32, !dbg !1833
  %cmp12 = icmp sgt i32 %conv11, 57, !dbg !1834
  br label %land.end

land.end:                                         ; preds = %land.rhs10, %land.rhs
  %15 = phi i1 [ false, %land.rhs ], [ %cmp12, %land.rhs10 ], !dbg !1835
  br label %land.end14

land.end14:                                       ; preds = %land.end, %while.cond
  %16 = phi i1 [ false, %while.cond ], [ %15, %land.end ], !dbg !1835
  br i1 %16, label %while.body, label %while.end, !dbg !1822

while.body:                                       ; preds = %land.end14
  %17 = load i8*, i8** %ptr, align 8, !dbg !1836, !tbaa !964
  %incdec.ptr = getelementptr inbounds i8, i8* %17, i32 1, !dbg !1836
  store i8* %incdec.ptr, i8** %ptr, align 8, !dbg !1836, !tbaa !964
  br label %while.cond, !dbg !1822, !llvm.loop !1837

while.end:                                        ; preds = %land.end14
  %18 = load i8*, i8** %ptr, align 8, !dbg !1838, !tbaa !964
  %call = call i64 @strtoull(i8* %18, i8** null, i32 10) #12, !dbg !1839
  store i64 %call, i64* %value, align 8, !dbg !1840, !tbaa !914
  %call15 = call i32* @__errno_location() #14, !dbg !1841
  %19 = load i32, i32* %call15, align 4, !dbg !1841, !tbaa !946
  %cmp16 = icmp eq i32 %19, 34, !dbg !1843
  br i1 %cmp16, label %if.then, label %if.end, !dbg !1844

if.then:                                          ; preds = %while.end
  store i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i8** %retval, align 8, !dbg !1845
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !1845

if.end:                                           ; preds = %while.end
  %20 = load i8, i8* %incr.addr, align 1, !dbg !1847, !tbaa !1031, !range !1262
  %tobool = trunc i8 %20 to i1, !dbg !1847
  br i1 %tobool, label %if.then18, label %if.else, !dbg !1849

if.then18:                                        ; preds = %if.end
  %21 = load i64, i64* %delta.addr, align 8, !dbg !1850, !tbaa !914
  %22 = load i64, i64* %value, align 8, !dbg !1851, !tbaa !914
  %add = add nsw i64 %22, %21, !dbg !1851
  store i64 %add, i64* %value, align 8, !dbg !1851, !tbaa !914
  br label %if.end24, !dbg !1852

if.else:                                          ; preds = %if.end
  %23 = load i64, i64* %delta.addr, align 8, !dbg !1853, !tbaa !914
  %24 = load i64, i64* %value, align 8, !dbg !1856, !tbaa !914
  %cmp19 = icmp sge i64 %23, %24, !dbg !1857
  br i1 %cmp19, label %if.then21, label %if.else22, !dbg !1858

if.then21:                                        ; preds = %if.else
  store i64 0, i64* %value, align 8, !dbg !1859, !tbaa !914
  br label %if.end23, !dbg !1860

if.else22:                                        ; preds = %if.else
  %25 = load i64, i64* %delta.addr, align 8, !dbg !1861, !tbaa !914
  %26 = load i64, i64* %value, align 8, !dbg !1862, !tbaa !914
  %sub = sub nsw i64 %26, %25, !dbg !1862
  store i64 %sub, i64* %value, align 8, !dbg !1862, !tbaa !914
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then21
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then18
  %27 = load i8*, i8** %buf.addr, align 8, !dbg !1863, !tbaa !964
  %28 = load i64, i64* %value, align 8, !dbg !1864, !tbaa !914
  %call25 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 %28) #12, !dbg !1865
  %29 = load i8*, i8** %buf.addr, align 8, !dbg !1866, !tbaa !964
  %call26 = call i64 @strlen(i8* %29) #15, !dbg !1867
  %conv27 = trunc i64 %call26 to i32, !dbg !1867
  store i32 %conv27, i32* %res, align 4, !dbg !1868, !tbaa !946
  %30 = load i32, i32* %res, align 4, !dbg !1869, !tbaa !946
  %add28 = add nsw i32 %30, 2, !dbg !1870
  %31 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1871, !tbaa !964
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %31, i32 0, i32 5, !dbg !1872
  %32 = load i32, i32* %nbytes, align 8, !dbg !1872, !tbaa !1706
  %cmp29 = icmp sgt i32 %add28, %32, !dbg !1873
  br i1 %cmp29, label %if.then31, label %if.else77, !dbg !1874

if.then31:                                        ; preds = %if.end24
  %33 = bitcast %struct._stritem** %new_it to i8*, !dbg !1875
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %33) #12, !dbg !1875
  call void @llvm.dbg.declare(metadata %struct._stritem** %new_it, metadata !1807, metadata !DIExpression()), !dbg !1876
  %34 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1877, !tbaa !964
  %end32 = getelementptr inbounds %struct._stritem, %struct._stritem* %34, i32 0, i32 12, !dbg !1877
  %arrayidx33 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end32, i64 0, i64 0, !dbg !1877
  %35 = bitcast i8** %arrayidx33 to i8*, !dbg !1877
  %36 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1878, !tbaa !964
  %nkey34 = getelementptr inbounds %struct._stritem, %struct._stritem* %36, i32 0, i32 10, !dbg !1879
  %37 = load i8, i8* %nkey34, align 1, !dbg !1879, !tbaa !1595
  %conv35 = zext i8 %37 to i64, !dbg !1878
  %38 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1880, !tbaa !964
  %end36 = getelementptr inbounds %struct._stritem, %struct._stritem* %38, i32 0, i32 12, !dbg !1880
  %arrayidx37 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end36, i64 0, i64 0, !dbg !1880
  %39 = bitcast i8** %arrayidx37 to i8*, !dbg !1880
  %40 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1880, !tbaa !964
  %nkey38 = getelementptr inbounds %struct._stritem, %struct._stritem* %40, i32 0, i32 10, !dbg !1880
  %41 = load i8, i8* %nkey38, align 1, !dbg !1880, !tbaa !1595
  %conv39 = zext i8 %41 to i32, !dbg !1880
  %idx.ext40 = sext i32 %conv39 to i64, !dbg !1880
  %add.ptr41 = getelementptr inbounds i8, i8* %39, i64 %idx.ext40, !dbg !1880
  %add.ptr42 = getelementptr inbounds i8, i8* %add.ptr41, i64 1, !dbg !1880
  %add.ptr43 = getelementptr inbounds i8, i8* %add.ptr42, i64 1, !dbg !1881
  %call44 = call i32 @atoi(i8* %add.ptr43) #15, !dbg !1882
  %42 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1883, !tbaa !964
  %exptime = getelementptr inbounds %struct._stritem, %struct._stritem* %42, i32 0, i32 4, !dbg !1884
  %43 = load i32, i32* %exptime, align 4, !dbg !1884, !tbaa !1703
  %44 = load i32, i32* %res, align 4, !dbg !1885, !tbaa !946
  %add45 = add nsw i32 %44, 2, !dbg !1886
  %call46 = call %struct._stritem* @do_item_alloc(i8* %35, i64 %conv35, i32 %call44, i32 %43, i32 %add45), !dbg !1887
  store %struct._stritem* %call46, %struct._stritem** %new_it, align 8, !dbg !1888, !tbaa !964
  %45 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1889, !tbaa !964
  %cmp47 = icmp eq %struct._stritem* %45, null, !dbg !1891
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !1892

if.then49:                                        ; preds = %if.then31
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8** %retval, align 8, !dbg !1893
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1893

if.end50:                                         ; preds = %if.then31
  %46 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1895, !tbaa !964
  %end51 = getelementptr inbounds %struct._stritem, %struct._stritem* %46, i32 0, i32 12, !dbg !1895
  %arrayidx52 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end51, i64 0, i64 0, !dbg !1895
  %47 = bitcast i8** %arrayidx52 to i8*, !dbg !1895
  %48 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1895, !tbaa !964
  %nkey53 = getelementptr inbounds %struct._stritem, %struct._stritem* %48, i32 0, i32 10, !dbg !1895
  %49 = load i8, i8* %nkey53, align 1, !dbg !1895, !tbaa !1595
  %conv54 = zext i8 %49 to i32, !dbg !1895
  %idx.ext55 = sext i32 %conv54 to i64, !dbg !1895
  %add.ptr56 = getelementptr inbounds i8, i8* %47, i64 %idx.ext55, !dbg !1895
  %add.ptr57 = getelementptr inbounds i8, i8* %add.ptr56, i64 1, !dbg !1895
  %50 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1895, !tbaa !964
  %nsuffix58 = getelementptr inbounds %struct._stritem, %struct._stritem* %50, i32 0, i32 7, !dbg !1895
  %51 = load i8, i8* %nsuffix58, align 2, !dbg !1895, !tbaa !1725
  %conv59 = zext i8 %51 to i32, !dbg !1895
  %idx.ext60 = sext i32 %conv59 to i64, !dbg !1895
  %add.ptr61 = getelementptr inbounds i8, i8* %add.ptr57, i64 %idx.ext60, !dbg !1895
  %52 = load i8*, i8** %buf.addr, align 8, !dbg !1896, !tbaa !964
  %53 = load i32, i32* %res, align 4, !dbg !1897, !tbaa !946
  %conv62 = sext i32 %53 to i64, !dbg !1897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr61, i8* align 1 %52, i64 %conv62, i1 false), !dbg !1898
  %54 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1899, !tbaa !964
  %end63 = getelementptr inbounds %struct._stritem, %struct._stritem* %54, i32 0, i32 12, !dbg !1899
  %arrayidx64 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end63, i64 0, i64 0, !dbg !1899
  %55 = bitcast i8** %arrayidx64 to i8*, !dbg !1899
  %56 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1899, !tbaa !964
  %nkey65 = getelementptr inbounds %struct._stritem, %struct._stritem* %56, i32 0, i32 10, !dbg !1899
  %57 = load i8, i8* %nkey65, align 1, !dbg !1899, !tbaa !1595
  %conv66 = zext i8 %57 to i32, !dbg !1899
  %idx.ext67 = sext i32 %conv66 to i64, !dbg !1899
  %add.ptr68 = getelementptr inbounds i8, i8* %55, i64 %idx.ext67, !dbg !1899
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 1, !dbg !1899
  %58 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1899, !tbaa !964
  %nsuffix70 = getelementptr inbounds %struct._stritem, %struct._stritem* %58, i32 0, i32 7, !dbg !1899
  %59 = load i8, i8* %nsuffix70, align 2, !dbg !1899, !tbaa !1725
  %conv71 = zext i8 %59 to i32, !dbg !1899
  %idx.ext72 = sext i32 %conv71 to i64, !dbg !1899
  %add.ptr73 = getelementptr inbounds i8, i8* %add.ptr69, i64 %idx.ext72, !dbg !1899
  %60 = load i32, i32* %res, align 4, !dbg !1900, !tbaa !946
  %idx.ext74 = sext i32 %60 to i64, !dbg !1901
  %add.ptr75 = getelementptr inbounds i8, i8* %add.ptr73, i64 %idx.ext74, !dbg !1901
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr75, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 3, i1 false), !dbg !1902
  %61 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1903, !tbaa !964
  %62 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1904, !tbaa !964
  %call76 = call i32 @do_item_replace(%struct._stritem* %61, %struct._stritem* %62), !dbg !1905
  %63 = load %struct._stritem*, %struct._stritem** %new_it, align 8, !dbg !1906, !tbaa !964
  call void @do_item_remove(%struct._stritem* %63), !dbg !1907
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !1908
  br label %cleanup, !dbg !1908

cleanup:                                          ; preds = %if.end50, %if.then49
  %64 = bitcast %struct._stritem** %new_it to i8*, !dbg !1908
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #12, !dbg !1908
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup108 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end107, !dbg !1909

if.else77:                                        ; preds = %if.end24
  %65 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1910, !tbaa !964
  %end78 = getelementptr inbounds %struct._stritem, %struct._stritem* %65, i32 0, i32 12, !dbg !1910
  %arrayidx79 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end78, i64 0, i64 0, !dbg !1910
  %66 = bitcast i8** %arrayidx79 to i8*, !dbg !1910
  %67 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1910, !tbaa !964
  %nkey80 = getelementptr inbounds %struct._stritem, %struct._stritem* %67, i32 0, i32 10, !dbg !1910
  %68 = load i8, i8* %nkey80, align 1, !dbg !1910, !tbaa !1595
  %conv81 = zext i8 %68 to i32, !dbg !1910
  %idx.ext82 = sext i32 %conv81 to i64, !dbg !1910
  %add.ptr83 = getelementptr inbounds i8, i8* %66, i64 %idx.ext82, !dbg !1910
  %add.ptr84 = getelementptr inbounds i8, i8* %add.ptr83, i64 1, !dbg !1910
  %69 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1910, !tbaa !964
  %nsuffix85 = getelementptr inbounds %struct._stritem, %struct._stritem* %69, i32 0, i32 7, !dbg !1910
  %70 = load i8, i8* %nsuffix85, align 2, !dbg !1910, !tbaa !1725
  %conv86 = zext i8 %70 to i32, !dbg !1910
  %idx.ext87 = sext i32 %conv86 to i64, !dbg !1910
  %add.ptr88 = getelementptr inbounds i8, i8* %add.ptr84, i64 %idx.ext87, !dbg !1910
  %71 = load i8*, i8** %buf.addr, align 8, !dbg !1912, !tbaa !964
  %72 = load i32, i32* %res, align 4, !dbg !1913, !tbaa !946
  %conv89 = sext i32 %72 to i64, !dbg !1913
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr88, i8* align 1 %71, i64 %conv89, i1 false), !dbg !1914
  %73 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1915, !tbaa !964
  %end90 = getelementptr inbounds %struct._stritem, %struct._stritem* %73, i32 0, i32 12, !dbg !1915
  %arrayidx91 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end90, i64 0, i64 0, !dbg !1915
  %74 = bitcast i8** %arrayidx91 to i8*, !dbg !1915
  %75 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1915, !tbaa !964
  %nkey92 = getelementptr inbounds %struct._stritem, %struct._stritem* %75, i32 0, i32 10, !dbg !1915
  %76 = load i8, i8* %nkey92, align 1, !dbg !1915, !tbaa !1595
  %conv93 = zext i8 %76 to i32, !dbg !1915
  %idx.ext94 = sext i32 %conv93 to i64, !dbg !1915
  %add.ptr95 = getelementptr inbounds i8, i8* %74, i64 %idx.ext94, !dbg !1915
  %add.ptr96 = getelementptr inbounds i8, i8* %add.ptr95, i64 1, !dbg !1915
  %77 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1915, !tbaa !964
  %nsuffix97 = getelementptr inbounds %struct._stritem, %struct._stritem* %77, i32 0, i32 7, !dbg !1915
  %78 = load i8, i8* %nsuffix97, align 2, !dbg !1915, !tbaa !1725
  %conv98 = zext i8 %78 to i32, !dbg !1915
  %idx.ext99 = sext i32 %conv98 to i64, !dbg !1915
  %add.ptr100 = getelementptr inbounds i8, i8* %add.ptr96, i64 %idx.ext99, !dbg !1915
  %79 = load i32, i32* %res, align 4, !dbg !1916, !tbaa !946
  %idx.ext101 = sext i32 %79 to i64, !dbg !1917
  %add.ptr102 = getelementptr inbounds i8, i8* %add.ptr100, i64 %idx.ext101, !dbg !1917
  %80 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1918, !tbaa !964
  %nbytes103 = getelementptr inbounds %struct._stritem, %struct._stritem* %80, i32 0, i32 5, !dbg !1919
  %81 = load i32, i32* %nbytes103, align 8, !dbg !1919, !tbaa !1706
  %82 = load i32, i32* %res, align 4, !dbg !1920, !tbaa !946
  %sub104 = sub nsw i32 %81, %82, !dbg !1921
  %sub105 = sub nsw i32 %sub104, 2, !dbg !1922
  %conv106 = sext i32 %sub105 to i64, !dbg !1918
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr102, i8 32, i64 %conv106, i1 false), !dbg !1923
  br label %if.end107

if.end107:                                        ; preds = %if.else77, %cleanup.cont
  %83 = load i8*, i8** %buf.addr, align 8, !dbg !1924, !tbaa !964
  store i8* %83, i8** %retval, align 8, !dbg !1925
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup108, !dbg !1925

cleanup108:                                       ; preds = %if.end107, %cleanup, %if.then
  %84 = bitcast i32* %res to i8*, !dbg !1926
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %84) #12, !dbg !1926
  %85 = bitcast i64* %value to i8*, !dbg !1926
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #12, !dbg !1926
  %86 = bitcast i8** %ptr to i8*, !dbg !1926
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #12, !dbg !1926
  %87 = load i8*, i8** %retval, align 8, !dbg !1926
  ret i8* %87, !dbg !1926
}

; Function Attrs: nounwind
declare dso_local i64 @strtoull(i8* %0, i8** %1, i32 %2) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #5

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8* %0, i8* %1, ...) #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8* %0) #6

; Function Attrs: inlinehint nounwind readonly uwtable
define available_externally dso_local i32 @atoi(i8* nonnull %__nptr) #7 !dbg !1927 {
entry:
  %__nptr.addr = alloca i8*, align 8
  store i8* %__nptr, i8** %__nptr.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %__nptr.addr, metadata !1930, metadata !DIExpression()), !dbg !1931
  %0 = load i8*, i8** %__nptr.addr, align 8, !dbg !1932, !tbaa !964
  %call = call i64 @strtol(i8* %0, i8** null, i32 10) #12, !dbg !1933
  %conv = trunc i64 %call to i32, !dbg !1934
  ret i32 %conv, !dbg !1935
}

; Function Attrs: argmemonly nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly %0, i8 %1, i64 %2, i1 immarg %3) #8

; Function Attrs: nounwind uwtable
define dso_local i8* @do_defer_delete(%struct._stritem* %it, i64 %exptime) #0 !dbg !1936 {
entry:
  %retval = alloca i8*, align 8
  %it.addr = alloca %struct._stritem*, align 8
  %exptime.addr = alloca i64, align 8
  %new_delete = alloca %struct._stritem**, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store %struct._stritem* %it, %struct._stritem** %it.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct._stritem** %it.addr, metadata !1940, metadata !DIExpression()), !dbg !1945
  store i64 %exptime, i64* %exptime.addr, align 8, !tbaa !914
  call void @llvm.dbg.declare(metadata i64* %exptime.addr, metadata !1941, metadata !DIExpression()), !dbg !1946
  %0 = load i32, i32* @delcurr, align 4, !dbg !1947, !tbaa !946
  %1 = load i32, i32* @deltotal, align 4, !dbg !1948, !tbaa !946
  %cmp = icmp sge i32 %0, %1, !dbg !1949
  br i1 %cmp, label %if.then, label %if.end4, !dbg !1950

if.then:                                          ; preds = %entry
  %2 = bitcast %struct._stritem*** %new_delete to i8*, !dbg !1951
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #12, !dbg !1951
  call void @llvm.dbg.declare(metadata %struct._stritem*** %new_delete, metadata !1942, metadata !DIExpression()), !dbg !1952
  %3 = load %struct._stritem**, %struct._stritem*** @todelete, align 8, !dbg !1953, !tbaa !964
  %4 = bitcast %struct._stritem** %3 to i8*, !dbg !1953
  %5 = load i32, i32* @deltotal, align 4, !dbg !1954, !tbaa !946
  %conv = sext i32 %5 to i64, !dbg !1954
  %mul = mul i64 8, %conv, !dbg !1955
  %mul1 = mul i64 %mul, 2, !dbg !1956
  %call = call i8* @realloc(i8* %4, i64 %mul1) #12, !dbg !1957
  %6 = bitcast i8* %call to %struct._stritem**, !dbg !1957
  store %struct._stritem** %6, %struct._stritem*** %new_delete, align 8, !dbg !1952, !tbaa !964
  %7 = load %struct._stritem**, %struct._stritem*** %new_delete, align 8, !dbg !1958, !tbaa !964
  %tobool = icmp ne %struct._stritem** %7, null, !dbg !1958
  br i1 %tobool, label %if.then2, label %if.else, !dbg !1960

if.then2:                                         ; preds = %if.then
  %8 = load %struct._stritem**, %struct._stritem*** %new_delete, align 8, !dbg !1961, !tbaa !964
  store %struct._stritem** %8, %struct._stritem*** @todelete, align 8, !dbg !1963, !tbaa !964
  %9 = load i32, i32* @deltotal, align 4, !dbg !1964, !tbaa !946
  %mul3 = mul nsw i32 %9, 2, !dbg !1964
  store i32 %mul3, i32* @deltotal, align 4, !dbg !1964, !tbaa !946
  br label %if.end, !dbg !1965

if.else:                                          ; preds = %if.then
  %10 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1966, !tbaa !964
  call void @do_item_remove(%struct._stritem* %10), !dbg !1968
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8** %retval, align 8, !dbg !1969
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1969

if.end:                                           ; preds = %if.then2
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !1970
  br label %cleanup, !dbg !1970

cleanup:                                          ; preds = %if.end, %if.else
  %11 = bitcast %struct._stritem*** %new_delete to i8*, !dbg !1970
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #12, !dbg !1970
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end4, !dbg !1971

if.end4:                                          ; preds = %cleanup.cont, %entry
  %12 = load i64, i64* %exptime.addr, align 8, !dbg !1972, !tbaa !914
  %call5 = call i32 @realtime(i64 %12), !dbg !1973
  %13 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1974, !tbaa !964
  %exptime6 = getelementptr inbounds %struct._stritem, %struct._stritem* %13, i32 0, i32 4, !dbg !1975
  store i32 %call5, i32* %exptime6, align 4, !dbg !1976, !tbaa !1703
  %14 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1977, !tbaa !964
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %14, i32 0, i32 8, !dbg !1978
  %15 = load i8, i8* %it_flags, align 1, !dbg !1979, !tbaa !1980
  %conv7 = zext i8 %15 to i32, !dbg !1979
  %or = or i32 %conv7, 2, !dbg !1979
  %conv8 = trunc i32 %or to i8, !dbg !1979
  store i8 %conv8, i8* %it_flags, align 1, !dbg !1979, !tbaa !1980
  %16 = load %struct._stritem*, %struct._stritem** %it.addr, align 8, !dbg !1981, !tbaa !964
  %17 = load %struct._stritem**, %struct._stritem*** @todelete, align 8, !dbg !1982, !tbaa !964
  %18 = load i32, i32* @delcurr, align 4, !dbg !1983, !tbaa !946
  %inc = add nsw i32 %18, 1, !dbg !1983
  store i32 %inc, i32* @delcurr, align 4, !dbg !1983, !tbaa !946
  %idxprom = sext i32 %18 to i64, !dbg !1982
  %arrayidx = getelementptr inbounds %struct._stritem*, %struct._stritem** %17, i64 %idxprom, !dbg !1982
  store %struct._stritem* %16, %struct._stritem** %arrayidx, align 8, !dbg !1984, !tbaa !964
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8** %retval, align 8, !dbg !1985
  br label %return, !dbg !1985

return:                                           ; preds = %if.end4, %cleanup
  %19 = load i8*, i8** %retval, align 8, !dbg !1986
  ret i8* %19, !dbg !1986

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @pre_gdb() #0 !dbg !1987 {
entry:
  %i = alloca i32, align 4
  %0 = bitcast i32* %i to i8*, !dbg !1990
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !1990
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1989, metadata !DIExpression()), !dbg !1991
  %1 = load i32, i32* @l_socket, align 4, !dbg !1992, !tbaa !946
  %cmp = icmp sgt i32 %1, -1, !dbg !1994
  br i1 %cmp, label %if.then, label %if.end, !dbg !1995

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @l_socket, align 4, !dbg !1996, !tbaa !946
  %call = call i32 @close(i32 %2), !dbg !1997
  br label %if.end, !dbg !1997

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* @u_socket, align 4, !dbg !1998, !tbaa !946
  %cmp1 = icmp sgt i32 %3, -1, !dbg !2000
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !2001

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* @u_socket, align 4, !dbg !2002, !tbaa !946
  %call3 = call i32 @close(i32 %4), !dbg !2003
  br label %if.end4, !dbg !2003

if.end4:                                          ; preds = %if.then2, %if.end
  store i32 3, i32* %i, align 4, !dbg !2004, !tbaa !946
  br label %for.cond, !dbg !2006

for.cond:                                         ; preds = %for.inc, %if.end4
  %5 = load i32, i32* %i, align 4, !dbg !2007, !tbaa !946
  %cmp5 = icmp sle i32 %5, 500, !dbg !2009
  br i1 %cmp5, label %for.body, label %for.end, !dbg !2010

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !2011, !tbaa !946
  %call6 = call i32 @close(i32 %6), !dbg !2012
  br label %for.inc, !dbg !2012

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !2013, !tbaa !946
  %inc = add nsw i32 %7, 1, !dbg !2013
  store i32 %inc, i32* %i, align 4, !dbg !2013, !tbaa !946
  br label %for.cond, !dbg !2014, !llvm.loop !2015

for.end:                                          ; preds = %for.cond
  %call7 = call i32 @getpid() #12, !dbg !2017
  %call8 = call i32 @kill(i32 %call7, i32 6) #12, !dbg !2018
  %8 = bitcast i32* %i to i8*, !dbg !2019
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %8) #12, !dbg !2019
  ret void, !dbg !2019
}

declare !dbg !349 dso_local i32 @close(i32 %0) #4

; Function Attrs: nounwind
declare !dbg !356 dso_local i32 @kill(i32 %0, i32 %1) #3

; Function Attrs: nounwind
declare !dbg !353 dso_local i32 @getpid() #3

; Function Attrs: nounwind uwtable
define dso_local void @do_run_deferred_deletes() #0 !dbg !2020 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %it = alloca %struct._stritem*, align 8
  %0 = bitcast i32* %i to i8*, !dbg !2028
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !2028
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2022, metadata !DIExpression()), !dbg !2029
  %1 = bitcast i32* %j to i8*, !dbg !2028
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #12, !dbg !2028
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2023, metadata !DIExpression()), !dbg !2030
  store i32 0, i32* %j, align 4, !dbg !2030, !tbaa !946
  store i32 0, i32* %i, align 4, !dbg !2031, !tbaa !946
  br label %for.cond, !dbg !2032

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !2033, !tbaa !946
  %3 = load i32, i32* @delcurr, align 4, !dbg !2034, !tbaa !946
  %cmp = icmp slt i32 %2, %3, !dbg !2035
  br i1 %cmp, label %for.body, label %for.end, !dbg !2036

for.body:                                         ; preds = %for.cond
  %4 = bitcast %struct._stritem** %it to i8*, !dbg !2037
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #12, !dbg !2037
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !2024, metadata !DIExpression()), !dbg !2038
  %5 = load %struct._stritem**, %struct._stritem*** @todelete, align 8, !dbg !2039, !tbaa !964
  %6 = load i32, i32* %i, align 4, !dbg !2040, !tbaa !946
  %idxprom = sext i32 %6 to i64, !dbg !2039
  %arrayidx = getelementptr inbounds %struct._stritem*, %struct._stritem** %5, i64 %idxprom, !dbg !2039
  %7 = load %struct._stritem*, %struct._stritem** %arrayidx, align 8, !dbg !2039, !tbaa !964
  store %struct._stritem* %7, %struct._stritem** %it, align 8, !dbg !2038, !tbaa !964
  %8 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !2041, !tbaa !964
  %call = call zeroext i1 @item_delete_lock_over(%struct._stritem* %8), !dbg !2043
  br i1 %call, label %if.then, label %if.else6, !dbg !2044

if.then:                                          ; preds = %for.body
  %9 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !2045, !tbaa !964
  %refcount = getelementptr inbounds %struct._stritem, %struct._stritem* %9, i32 0, i32 6, !dbg !2045
  %10 = load i16, i16* %refcount, align 4, !dbg !2045, !tbaa !2049
  %conv = zext i16 %10 to i32, !dbg !2045
  %cmp1 = icmp sgt i32 %conv, 0, !dbg !2045
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !2050

if.then3:                                         ; preds = %if.then
  br label %if.end, !dbg !2050

if.else:                                          ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 2655, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__PRETTY_FUNCTION__.do_run_deferred_deletes, i64 0, i64 0)) #13, !dbg !2045
  unreachable, !dbg !2045

if.end:                                           ; preds = %if.then3
  %11 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !2051, !tbaa !964
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %11, i32 0, i32 8, !dbg !2052
  %12 = load i8, i8* %it_flags, align 1, !dbg !2053, !tbaa !1980
  %conv4 = zext i8 %12 to i32, !dbg !2053
  %and = and i32 %conv4, -3, !dbg !2053
  %conv5 = trunc i32 %and to i8, !dbg !2053
  store i8 %conv5, i8* %it_flags, align 1, !dbg !2053, !tbaa !1980
  %13 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !2054, !tbaa !964
  call void @do_item_unlink(%struct._stritem* %13), !dbg !2055
  %14 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !2056, !tbaa !964
  call void @do_item_remove(%struct._stritem* %14), !dbg !2057
  br label %if.end9, !dbg !2058

if.else6:                                         ; preds = %for.body
  %15 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !2059, !tbaa !964
  %16 = load %struct._stritem**, %struct._stritem*** @todelete, align 8, !dbg !2061, !tbaa !964
  %17 = load i32, i32* %j, align 4, !dbg !2062, !tbaa !946
  %inc = add nsw i32 %17, 1, !dbg !2062
  store i32 %inc, i32* %j, align 4, !dbg !2062, !tbaa !946
  %idxprom7 = sext i32 %17 to i64, !dbg !2061
  %arrayidx8 = getelementptr inbounds %struct._stritem*, %struct._stritem** %16, i64 %idxprom7, !dbg !2061
  store %struct._stritem* %15, %struct._stritem** %arrayidx8, align 8, !dbg !2063, !tbaa !964
  br label %if.end9

if.end9:                                          ; preds = %if.else6, %if.end
  %18 = bitcast %struct._stritem** %it to i8*, !dbg !2064
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #12, !dbg !2064
  br label %for.inc, !dbg !2065

for.inc:                                          ; preds = %if.end9
  %19 = load i32, i32* %i, align 4, !dbg !2066, !tbaa !946
  %inc10 = add nsw i32 %19, 1, !dbg !2066
  store i32 %inc10, i32* %i, align 4, !dbg !2066, !tbaa !946
  br label %for.cond, !dbg !2067, !llvm.loop !2068

for.end:                                          ; preds = %for.cond
  %20 = load i32, i32* %j, align 4, !dbg !2070, !tbaa !946
  store i32 %20, i32* @delcurr, align 4, !dbg !2071, !tbaa !946
  %21 = bitcast i32* %j to i8*, !dbg !2072
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #12, !dbg !2072
  %22 = bitcast i32* %i to i8*, !dbg !2072
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %22) #12, !dbg !2072
  ret void, !dbg !2072
}

declare !dbg !360 dso_local zeroext i1 @item_delete_lock_over(%struct._stritem* %0) #4

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8* %0, i8* %1, i32 %2, i8* %3) #9

declare !dbg !363 dso_local void @do_item_unlink(%struct._stritem* %0) #4

; Function Attrs: nounwind uwtable
define dso_local zeroext i1 @BackingFileExists(i8* %path) #0 !dbg !2073 {
entry:
  %path.addr = alloca i8*, align 8
  %backing_file = alloca [60 x i8], align 16
  %buffer = alloca %struct.stat, align 8
  store i8* %path, i8** %path.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !2077, metadata !DIExpression()), !dbg !2115
  %0 = bitcast [60 x i8]* %backing_file to i8*, !dbg !2116
  call void @llvm.lifetime.start.p0i8(i64 60, i8* %0) #12, !dbg !2116
  call void @llvm.dbg.declare(metadata [60 x i8]* %backing_file, metadata !2078, metadata !DIExpression()), !dbg !2117
  %arraydecay = getelementptr inbounds [60 x i8], [60 x i8]* %backing_file, i64 0, i64 0, !dbg !2118
  %1 = load i8*, i8** %path.addr, align 8, !dbg !2119, !tbaa !964
  %call = call i8* @strcpy(i8* %arraydecay, i8* %1) #12, !dbg !2120
  %2 = bitcast %struct.stat* %buffer to i8*, !dbg !2121
  call void @llvm.lifetime.start.p0i8(i64 144, i8* %2) #12, !dbg !2121
  call void @llvm.dbg.declare(metadata %struct.stat* %buffer, metadata !2082, metadata !DIExpression()), !dbg !2122
  %arraydecay1 = getelementptr inbounds [60 x i8], [60 x i8]* %backing_file, i64 0, i64 0, !dbg !2123
  %call2 = call i32 @stat(i8* %arraydecay1, %struct.stat* %buffer) #12, !dbg !2124
  %cmp = icmp eq i32 %call2, 0, !dbg !2125
  %3 = bitcast %struct.stat* %buffer to i8*, !dbg !2126
  call void @llvm.lifetime.end.p0i8(i64 144, i8* %3) #12, !dbg !2126
  %4 = bitcast [60 x i8]* %backing_file to i8*, !dbg !2126
  call void @llvm.lifetime.end.p0i8(i64 60, i8* %4) #12, !dbg !2126
  ret i1 %cmp, !dbg !2127
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8* %0, i8* %1) #3

; Function Attrs: inlinehint nounwind uwtable
define available_externally dso_local i32 @stat(i8* nonnull %__path, %struct.stat* nonnull %__statbuf) #10 !dbg !2128 {
entry:
  %__path.addr = alloca i8*, align 8
  %__statbuf.addr = alloca %struct.stat*, align 8
  store i8* %__path, i8** %__path.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %__path.addr, metadata !2133, metadata !DIExpression()), !dbg !2135
  store %struct.stat* %__statbuf, %struct.stat** %__statbuf.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.stat** %__statbuf.addr, metadata !2134, metadata !DIExpression()), !dbg !2135
  %0 = load i8*, i8** %__path.addr, align 8, !dbg !2136, !tbaa !964
  %1 = load %struct.stat*, %struct.stat** %__statbuf.addr, align 8, !dbg !2137, !tbaa !964
  %call = call i32 @__xstat(i32 1, i8* %0, %struct.stat* %1) #12, !dbg !2138
  ret i32 %call, !dbg !2139
}

; Function Attrs: nounwind uwtable
define dso_local void @BeginValgrindInstrumentation() #0 !dbg !2140 {
entry:
  %_zzq_args = alloca [6 x i64], align 16
  %_zzq_result = alloca i64, align 8
  %tmp = alloca i64, align 8
  %_zzq_args8 = alloca [6 x i64], align 16
  %_zzq_result9 = alloca i64, align 8
  %tmp17 = alloca i64, align 8
  br label %do.body, !dbg !2154

do.body:                                          ; preds = %entry
  %0 = bitcast [6 x i64]* %_zzq_args to i8*, !dbg !2155
  call void @llvm.lifetime.start.p0i8(i64 48, i8* %0) #12, !dbg !2155
  call void @llvm.dbg.declare(metadata [6 x i64]* %_zzq_args, metadata !2142, metadata !DIExpression()), !dbg !2155
  %1 = bitcast i64* %_zzq_result to i8*, !dbg !2155
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !2155
  call void @llvm.dbg.declare(metadata i64* %_zzq_result, metadata !2149, metadata !DIExpression()), !dbg !2155
  %arrayidx = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args, i64 0, i64 0, !dbg !2155
  store volatile i64 1279983618, i64* %arrayidx, align 16, !dbg !2155, !tbaa !914
  %arrayidx1 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args, i64 0, i64 1, !dbg !2155
  store volatile i64 0, i64* %arrayidx1, align 8, !dbg !2155, !tbaa !914
  %arrayidx2 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args, i64 0, i64 2, !dbg !2155
  store volatile i64 0, i64* %arrayidx2, align 16, !dbg !2155, !tbaa !914
  %arrayidx3 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args, i64 0, i64 3, !dbg !2155
  store volatile i64 0, i64* %arrayidx3, align 8, !dbg !2155, !tbaa !914
  %arrayidx4 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args, i64 0, i64 4, !dbg !2155
  store volatile i64 0, i64* %arrayidx4, align 16, !dbg !2155, !tbaa !914
  %arrayidx5 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args, i64 0, i64 5, !dbg !2155
  store volatile i64 0, i64* %arrayidx5, align 8, !dbg !2155, !tbaa !914
  %arrayidx6 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args, i64 0, i64 0, !dbg !2155
  %2 = call i64 asm sideeffect "rolq $$3,  %rdi ; rolq $$13, %rdi\0A\09rolq $$61, %rdi ; rolq $$51, %rdi\0A\09xchgq %rbx,%rbx", "={dx},{ax},0,~{cc},~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %arrayidx6, i64 0) #12, !dbg !2155, !srcloc !2156
  store volatile i64 %2, i64* %_zzq_result, align 8, !dbg !2155, !tbaa !914
  %3 = load volatile i64, i64* %_zzq_result, align 8, !dbg !2155, !tbaa !914
  store i64 %3, i64* %tmp, align 8, !dbg !2155, !tbaa !914
  %4 = bitcast i64* %_zzq_result to i8*, !dbg !2157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #12, !dbg !2157
  %5 = bitcast [6 x i64]* %_zzq_args to i8*, !dbg !2157
  call void @llvm.lifetime.end.p0i8(i64 48, i8* %5) #12, !dbg !2157
  %6 = load i64, i64* %tmp, align 8, !dbg !2155, !tbaa !914
  br label %do.end, !dbg !2157

do.end:                                           ; preds = %do.body
  br label %do.body7, !dbg !2158

do.body7:                                         ; preds = %do.end
  %7 = bitcast [6 x i64]* %_zzq_args8 to i8*, !dbg !2159
  call void @llvm.lifetime.start.p0i8(i64 48, i8* %7) #12, !dbg !2159
  call void @llvm.dbg.declare(metadata [6 x i64]* %_zzq_args8, metadata !2150, metadata !DIExpression()), !dbg !2159
  %8 = bitcast i64* %_zzq_result9 to i8*, !dbg !2159
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #12, !dbg !2159
  call void @llvm.dbg.declare(metadata i64* %_zzq_result9, metadata !2153, metadata !DIExpression()), !dbg !2159
  %arrayidx10 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args8, i64 0, i64 0, !dbg !2159
  store volatile i64 1279983617, i64* %arrayidx10, align 16, !dbg !2159, !tbaa !914
  %arrayidx11 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args8, i64 0, i64 1, !dbg !2159
  store volatile i64 0, i64* %arrayidx11, align 8, !dbg !2159, !tbaa !914
  %arrayidx12 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args8, i64 0, i64 2, !dbg !2159
  store volatile i64 0, i64* %arrayidx12, align 16, !dbg !2159, !tbaa !914
  %arrayidx13 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args8, i64 0, i64 3, !dbg !2159
  store volatile i64 0, i64* %arrayidx13, align 8, !dbg !2159, !tbaa !914
  %arrayidx14 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args8, i64 0, i64 4, !dbg !2159
  store volatile i64 0, i64* %arrayidx14, align 16, !dbg !2159, !tbaa !914
  %arrayidx15 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args8, i64 0, i64 5, !dbg !2159
  store volatile i64 0, i64* %arrayidx15, align 8, !dbg !2159, !tbaa !914
  %arrayidx16 = getelementptr inbounds [6 x i64], [6 x i64]* %_zzq_args8, i64 0, i64 0, !dbg !2159
  %9 = call i64 asm sideeffect "rolq $$3,  %rdi ; rolq $$13, %rdi\0A\09rolq $$61, %rdi ; rolq $$51, %rdi\0A\09xchgq %rbx,%rbx", "={dx},{ax},0,~{cc},~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %arrayidx16, i64 0) #12, !dbg !2159, !srcloc !2160
  store volatile i64 %9, i64* %_zzq_result9, align 8, !dbg !2159, !tbaa !914
  %10 = load volatile i64, i64* %_zzq_result9, align 8, !dbg !2159, !tbaa !914
  store i64 %10, i64* %tmp17, align 8, !dbg !2159, !tbaa !914
  %11 = bitcast i64* %_zzq_result9 to i8*, !dbg !2161
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #12, !dbg !2161
  %12 = bitcast [6 x i64]* %_zzq_args8 to i8*, !dbg !2161
  call void @llvm.lifetime.end.p0i8(i64 48, i8* %12) #12, !dbg !2161
  %13 = load i64, i64* %tmp17, align 8, !dbg !2159, !tbaa !914
  br label %do.end18, !dbg !2161

do.end18:                                         ; preds = %do.body7
  ret void, !dbg !2162
}

; Function Attrs: nounwind uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #0 !dbg !2163 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %c = alloca i32, align 4
  %is_enable_trace = alloca i32, align 4
  %addr = alloca %struct.in_addr, align 4
  %lock_memory = alloca i8, align 1
  %daemonize = alloca i8, align 1
  %maxcore = alloca i32, align 4
  %username = alloca i8*, align 8
  %pid_file = alloca i8*, align 8
  %pw = alloca %struct.passwd*, align 8
  %sa = alloca %struct.sigaction, align 8
  %rlim = alloca %struct.rlimit, align 8
  %path = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %recover = alloca i8, align 1
  %rlim_new = alloca %struct.rlimit, align 8
  %maxfiles = alloca i32, align 4
  %res = alloca i32, align 4
  %pop = alloca %struct.pmemobjpool*, align 8
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2167, metadata !DIExpression()), !dbg !2194
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2168, metadata !DIExpression()), !dbg !2195
  %0 = bitcast i32* %c to i8*, !dbg !2196
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !2196
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2169, metadata !DIExpression()), !dbg !2197
  %1 = bitcast i32* %is_enable_trace to i8*, !dbg !2196
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #12, !dbg !2196
  call void @llvm.dbg.declare(metadata i32* %is_enable_trace, metadata !2170, metadata !DIExpression()), !dbg !2198
  store i32 0, i32* %is_enable_trace, align 4, !dbg !2198, !tbaa !946
  %2 = bitcast %struct.in_addr* %addr to i8*, !dbg !2199
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #12, !dbg !2199
  call void @llvm.dbg.declare(metadata %struct.in_addr* %addr, metadata !2171, metadata !DIExpression()), !dbg !2200
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %lock_memory) #12, !dbg !2201
  call void @llvm.dbg.declare(metadata i8* %lock_memory, metadata !2172, metadata !DIExpression()), !dbg !2202
  store i8 0, i8* %lock_memory, align 1, !dbg !2202, !tbaa !1031
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %daemonize) #12, !dbg !2203
  call void @llvm.dbg.declare(metadata i8* %daemonize, metadata !2173, metadata !DIExpression()), !dbg !2204
  store i8 0, i8* %daemonize, align 1, !dbg !2204, !tbaa !1031
  %3 = bitcast i32* %maxcore to i8*, !dbg !2205
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #12, !dbg !2205
  call void @llvm.dbg.declare(metadata i32* %maxcore, metadata !2174, metadata !DIExpression()), !dbg !2206
  store i32 0, i32* %maxcore, align 4, !dbg !2206, !tbaa !946
  %4 = bitcast i8** %username to i8*, !dbg !2207
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #12, !dbg !2207
  call void @llvm.dbg.declare(metadata i8** %username, metadata !2175, metadata !DIExpression()), !dbg !2208
  store i8* null, i8** %username, align 8, !dbg !2208, !tbaa !964
  %5 = bitcast i8** %pid_file to i8*, !dbg !2209
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #12, !dbg !2209
  call void @llvm.dbg.declare(metadata i8** %pid_file, metadata !2176, metadata !DIExpression()), !dbg !2210
  store i8* null, i8** %pid_file, align 8, !dbg !2210, !tbaa !964
  %6 = bitcast %struct.passwd** %pw to i8*, !dbg !2211
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #12, !dbg !2211
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !2177, metadata !DIExpression()), !dbg !2212
  %7 = bitcast %struct.sigaction* %sa to i8*, !dbg !2213
  call void @llvm.lifetime.start.p0i8(i64 152, i8* %7) #12, !dbg !2213
  call void @llvm.dbg.declare(metadata %struct.sigaction* %sa, metadata !2178, metadata !DIExpression()), !dbg !2214
  %8 = bitcast %struct.rlimit* %rlim to i8*, !dbg !2215
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %8) #12, !dbg !2215
  call void @llvm.dbg.declare(metadata %struct.rlimit* %rlim, metadata !2179, metadata !DIExpression()), !dbg !2216
  %call = call void (i32)* @signal(i32 2, void (i32)* @sigint_handler) #12, !dbg !2217
  call void @settings_init(), !dbg !2218
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2219, !tbaa !964
  call void @setbuf(%struct._IO_FILE* %9, i8* null) #12, !dbg !2220
  %10 = bitcast i8** %path to i8*, !dbg !2221
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #12, !dbg !2221
  call void @llvm.dbg.declare(metadata i8** %path, metadata !2180, metadata !DIExpression()), !dbg !2222
  %11 = load i8**, i8*** %argv.addr, align 8, !dbg !2223, !tbaa !964
  %arrayidx = getelementptr inbounds i8*, i8** %11, i64 1, !dbg !2223
  %12 = load i8*, i8** %arrayidx, align 8, !dbg !2223, !tbaa !964
  store i8* %12, i8** %path, align 8, !dbg !2222, !tbaa !964
  br label %while.cond, !dbg !2224

while.cond:                                       ; preds = %sw.epilog, %entry
  %13 = load i32, i32* %argc.addr, align 4, !dbg !2225, !tbaa !946
  %14 = load i8**, i8*** %argv.addr, align 8, !dbg !2226, !tbaa !964
  %call1 = call i32 @getopt(i32 %13, i8** %14, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !2227
  store i32 %call1, i32* %c, align 4, !dbg !2228, !tbaa !946
  %cmp = icmp ne i32 %call1, -1, !dbg !2229
  br i1 %cmp, label %while.body, label %while.end, !dbg !2224

while.body:                                       ; preds = %while.cond
  %15 = load i32, i32* %c, align 4, !dbg !2230, !tbaa !946
  switch i32 %15, label %sw.default [
    i32 97, label %sw.bb
    i32 85, label %sw.bb3
    i32 98, label %sw.bb5
    i32 112, label %sw.bb6
    i32 115, label %sw.bb8
    i32 109, label %sw.bb9
    i32 77, label %sw.bb13
    i32 99, label %sw.bb14
    i32 104, label %sw.bb16
    i32 105, label %sw.bb17
    i32 107, label %sw.bb18
    i32 118, label %sw.bb19
    i32 108, label %sw.bb20
    i32 100, label %sw.bb25
    i32 114, label %sw.bb26
    i32 117, label %sw.bb27
    i32 80, label %sw.bb28
    i32 102, label %sw.bb29
    i32 110, label %sw.bb36
    i32 116, label %sw.bb43
    i32 68, label %sw.bb50
  ], !dbg !2232

sw.bb:                                            ; preds = %while.body
  %16 = load i8*, i8** @optarg, align 8, !dbg !2233, !tbaa !964
  %call2 = call i64 @strtol(i8* %16, i8** null, i32 8) #12, !dbg !2235
  %conv = trunc i64 %call2 to i32, !dbg !2235
  store i32 %conv, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8, !dbg !2236, !tbaa !2237
  br label %sw.epilog, !dbg !2238

sw.bb3:                                           ; preds = %while.body
  %17 = load i8*, i8** @optarg, align 8, !dbg !2239, !tbaa !964
  %call4 = call i32 @atoi(i8* %17) #15, !dbg !2240
  store i32 %call4, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8, !dbg !2241, !tbaa !2242
  br label %sw.epilog, !dbg !2243

sw.bb5:                                           ; preds = %while.body
  store i8 1, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8, !dbg !2244, !tbaa !2245
  br label %sw.epilog, !dbg !2246

sw.bb6:                                           ; preds = %while.body
  %18 = load i8*, i8** @optarg, align 8, !dbg !2247, !tbaa !964
  %call7 = call i32 @atoi(i8* %18) #15, !dbg !2248
  store i32 %call7, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 2), align 4, !dbg !2249, !tbaa !2250
  br label %sw.epilog, !dbg !2251

sw.bb8:                                           ; preds = %while.body
  %19 = load i8*, i8** @optarg, align 8, !dbg !2252, !tbaa !964
  store i8* %19, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8, !dbg !2253, !tbaa !2254
  br label %sw.epilog, !dbg !2255

sw.bb9:                                           ; preds = %while.body
  %20 = load i8*, i8** @optarg, align 8, !dbg !2256, !tbaa !964
  %call10 = call i32 @atoi(i8* %20) #15, !dbg !2257
  %conv11 = sext i32 %call10 to i64, !dbg !2258
  %mul = mul i64 %conv11, 1024, !dbg !2259
  %mul12 = mul i64 %mul, 1024, !dbg !2260
  store i64 %mul12, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8, !dbg !2261, !tbaa !2262
  br label %sw.epilog, !dbg !2263

sw.bb13:                                          ; preds = %while.body
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 8), align 4, !dbg !2264, !tbaa !2265
  br label %sw.epilog, !dbg !2266

sw.bb14:                                          ; preds = %while.body
  %21 = load i8*, i8** @optarg, align 8, !dbg !2267, !tbaa !964
  %call15 = call i32 @atoi(i8* %21) #15, !dbg !2268
  store i32 %call15, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8, !dbg !2269, !tbaa !2270
  br label %sw.epilog, !dbg !2271

sw.bb16:                                          ; preds = %while.body
  call void @usage(), !dbg !2272
  call void @exit(i32 0) #13, !dbg !2273
  unreachable, !dbg !2273

sw.bb17:                                          ; preds = %while.body
  call void @usage_license(), !dbg !2274
  call void @exit(i32 0) #13, !dbg !2275
  unreachable, !dbg !2275

sw.bb18:                                          ; preds = %while.body
  store i8 1, i8* %lock_memory, align 1, !dbg !2276, !tbaa !1031
  br label %sw.epilog, !dbg !2277

sw.bb19:                                          ; preds = %while.body
  %22 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !2278, !tbaa !1246
  %inc = add nsw i32 %22, 1, !dbg !2278
  store i32 %inc, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !2278, !tbaa !1246
  br label %sw.epilog, !dbg !2279

sw.bb20:                                          ; preds = %while.body
  %23 = load i8*, i8** @optarg, align 8, !dbg !2280, !tbaa !964
  %24 = bitcast %struct.in_addr* %addr to i8*, !dbg !2282
  %call21 = call i32 @inet_pton(i32 2, i8* %23, i8* %24) #12, !dbg !2283
  %cmp22 = icmp sle i32 %call21, 0, !dbg !2284
  br i1 %cmp22, label %if.then, label %if.else, !dbg !2285

if.then:                                          ; preds = %sw.bb20
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2286, !tbaa !964
  %26 = load i8*, i8** @optarg, align 8, !dbg !2288, !tbaa !964
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i8* %26), !dbg !2289
  store i32 1, i32* %retval, align 4, !dbg !2290
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup245, !dbg !2290

if.else:                                          ; preds = %sw.bb20
  %27 = bitcast %struct.in_addr* %addr to i8*, !dbg !2291
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 bitcast (%struct.in_addr* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4) to i8*), i8* align 4 %27, i64 4, i1 false), !dbg !2291, !tbaa.struct !2293
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %sw.epilog, !dbg !2294

sw.bb25:                                          ; preds = %while.body
  store i8 1, i8* %daemonize, align 1, !dbg !2295, !tbaa !1031
  br label %sw.epilog, !dbg !2296

sw.bb26:                                          ; preds = %while.body
  store i32 1, i32* %maxcore, align 4, !dbg !2297, !tbaa !946
  br label %sw.epilog, !dbg !2298

sw.bb27:                                          ; preds = %while.body
  %28 = load i8*, i8** @optarg, align 8, !dbg !2299, !tbaa !964
  store i8* %28, i8** %username, align 8, !dbg !2300, !tbaa !964
  br label %sw.epilog, !dbg !2301

sw.bb28:                                          ; preds = %while.body
  %29 = load i8*, i8** @optarg, align 8, !dbg !2302, !tbaa !964
  store i8* %29, i8** %pid_file, align 8, !dbg !2303, !tbaa !964
  br label %sw.epilog, !dbg !2304

sw.bb29:                                          ; preds = %while.body
  %30 = load i8*, i8** @optarg, align 8, !dbg !2305, !tbaa !964
  %call30 = call double @atof(i8* %30) #15, !dbg !2306
  store double %call30, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 11), align 8, !dbg !2307, !tbaa !2308
  %31 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 11), align 8, !dbg !2309, !tbaa !2308
  %cmp31 = fcmp ole double %31, 1.000000e+00, !dbg !2311
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !2312

if.then33:                                        ; preds = %sw.bb29
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2313, !tbaa !964
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0)), !dbg !2315
  store i32 1, i32* %retval, align 4, !dbg !2316
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup245, !dbg !2316

if.end35:                                         ; preds = %sw.bb29
  br label %sw.epilog, !dbg !2317

sw.bb36:                                          ; preds = %while.body
  %33 = load i8*, i8** @optarg, align 8, !dbg !2318, !tbaa !964
  %call37 = call i32 @atoi(i8* %33) #15, !dbg !2319
  store i32 %call37, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 12), align 8, !dbg !2320, !tbaa !2321
  %34 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 12), align 8, !dbg !2322, !tbaa !2321
  %cmp38 = icmp eq i32 %34, 0, !dbg !2324
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !2325

if.then40:                                        ; preds = %sw.bb36
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2326, !tbaa !964
  %call41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0)), !dbg !2328
  store i32 1, i32* %retval, align 4, !dbg !2329
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup245, !dbg !2329

if.end42:                                         ; preds = %sw.bb36
  br label %sw.epilog, !dbg !2330

sw.bb43:                                          ; preds = %while.body
  %36 = load i8*, i8** @optarg, align 8, !dbg !2331, !tbaa !964
  %call44 = call i32 @atoi(i8* %36) #15, !dbg !2332
  store i32 %call44, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 4, !dbg !2333, !tbaa !2334
  %37 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 4, !dbg !2335, !tbaa !2334
  %cmp45 = icmp eq i32 %37, 0, !dbg !2337
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !2338

if.then47:                                        ; preds = %sw.bb43
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2339, !tbaa !964
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15, i64 0, i64 0)), !dbg !2341
  store i32 1, i32* %retval, align 4, !dbg !2342
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup245, !dbg !2342

if.end49:                                         ; preds = %sw.bb43
  br label %sw.epilog, !dbg !2343

sw.bb50:                                          ; preds = %while.body
  %39 = load i8*, i8** @optarg, align 8, !dbg !2344, !tbaa !964
  %tobool = icmp ne i8* %39, null, !dbg !2344
  br i1 %tobool, label %lor.lhs.false, label %if.then53, !dbg !2346

lor.lhs.false:                                    ; preds = %sw.bb50
  %40 = load i8*, i8** @optarg, align 8, !dbg !2347, !tbaa !964
  %arrayidx51 = getelementptr inbounds i8, i8* %40, i64 0, !dbg !2347
  %41 = load i8, i8* %arrayidx51, align 1, !dbg !2347, !tbaa !1825
  %tobool52 = icmp ne i8 %41, 0, !dbg !2347
  br i1 %tobool52, label %if.end55, label %if.then53, !dbg !2348

if.then53:                                        ; preds = %lor.lhs.false, %sw.bb50
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2349, !tbaa !964
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)), !dbg !2351
  store i32 1, i32* %retval, align 4, !dbg !2352
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup245, !dbg !2352

if.end55:                                         ; preds = %lor.lhs.false
  %43 = load i8*, i8** @optarg, align 8, !dbg !2353, !tbaa !964
  %arrayidx56 = getelementptr inbounds i8, i8* %43, i64 0, !dbg !2353
  %44 = load i8, i8* %arrayidx56, align 1, !dbg !2353, !tbaa !1825
  store i8 %44, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 8, !dbg !2354, !tbaa !2355
  store i32 1, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 15), align 4, !dbg !2356, !tbaa !2357
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 2921, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #13, !dbg !2358
  unreachable, !dbg !2358

sw.default:                                       ; preds = %while.body
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2361, !tbaa !964
  %46 = load i32, i32* %c, align 4, !dbg !2362, !tbaa !946
  %call57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i32 %46), !dbg !2363
  store i32 1, i32* %retval, align 4, !dbg !2364
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup245, !dbg !2364

sw.epilog:                                        ; preds = %if.end49, %if.end42, %if.end35, %sw.bb28, %sw.bb27, %sw.bb26, %sw.bb25, %if.end, %sw.bb19, %sw.bb18, %sw.bb14, %sw.bb13, %sw.bb9, %sw.bb8, %sw.bb6, %sw.bb5, %sw.bb3, %sw.bb
  br label %while.cond, !dbg !2224, !llvm.loop !2365

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %recover) #12, !dbg !2367
  call void @llvm.dbg.declare(metadata i8* %recover, metadata !2181, metadata !DIExpression()), !dbg !2368
  %47 = load i8*, i8** %path, align 8, !dbg !2369, !tbaa !964
  %call58 = call zeroext i1 @BackingFileExists(i8* %47), !dbg !2370
  %frombool = zext i1 %call58 to i8, !dbg !2368
  store i8 %frombool, i8* %recover, align 1, !dbg !2368, !tbaa !1031
  %48 = load i32, i32* %maxcore, align 4, !dbg !2371, !tbaa !946
  %cmp59 = icmp ne i32 %48, 0, !dbg !2372
  br i1 %cmp59, label %if.then61, label %if.end86, !dbg !2373

if.then61:                                        ; preds = %while.end
  %49 = bitcast %struct.rlimit* %rlim_new to i8*, !dbg !2374
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %49) #12, !dbg !2374
  call void @llvm.dbg.declare(metadata %struct.rlimit* %rlim_new, metadata !2182, metadata !DIExpression()), !dbg !2375
  %call62 = call i32 @getrlimit(i32 4, %struct.rlimit* %rlim) #12, !dbg !2376
  %cmp63 = icmp eq i32 %call62, 0, !dbg !2378
  br i1 %cmp63, label %if.then65, label %if.end75, !dbg !2379

if.then65:                                        ; preds = %if.then61
  %rlim_max = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rlim_new, i32 0, i32 1, !dbg !2380
  store i64 -1, i64* %rlim_max, align 8, !dbg !2382, !tbaa !2383
  %rlim_cur = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rlim_new, i32 0, i32 0, !dbg !2385
  store i64 -1, i64* %rlim_cur, align 8, !dbg !2386, !tbaa !2387
  %call66 = call i32 @setrlimit(i32 4, %struct.rlimit* %rlim_new) #12, !dbg !2388
  %cmp67 = icmp ne i32 %call66, 0, !dbg !2390
  br i1 %cmp67, label %if.then69, label %if.end74, !dbg !2391

if.then69:                                        ; preds = %if.then65
  %rlim_max70 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rlim, i32 0, i32 1, !dbg !2392
  %50 = load i64, i64* %rlim_max70, align 8, !dbg !2392, !tbaa !2383
  %rlim_max71 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rlim_new, i32 0, i32 1, !dbg !2394
  store i64 %50, i64* %rlim_max71, align 8, !dbg !2395, !tbaa !2383
  %rlim_cur72 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rlim_new, i32 0, i32 0, !dbg !2396
  store i64 %50, i64* %rlim_cur72, align 8, !dbg !2397, !tbaa !2387
  %call73 = call i32 @setrlimit(i32 4, %struct.rlimit* %rlim_new) #12, !dbg !2398
  br label %if.end74, !dbg !2399

if.end74:                                         ; preds = %if.then69, %if.then65
  br label %if.end75, !dbg !2400

if.end75:                                         ; preds = %if.end74, %if.then61
  %call76 = call i32 @getrlimit(i32 4, %struct.rlimit* %rlim) #12, !dbg !2401
  %cmp77 = icmp ne i32 %call76, 0, !dbg !2403
  br i1 %cmp77, label %if.then83, label %lor.lhs.false79, !dbg !2404

lor.lhs.false79:                                  ; preds = %if.end75
  %rlim_cur80 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rlim, i32 0, i32 0, !dbg !2405
  %51 = load i64, i64* %rlim_cur80, align 8, !dbg !2405, !tbaa !2387
  %cmp81 = icmp eq i64 %51, 0, !dbg !2406
  br i1 %cmp81, label %if.then83, label %if.end85, !dbg !2407

if.then83:                                        ; preds = %lor.lhs.false79, %if.end75
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2408, !tbaa !964
  %call84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19, i64 0, i64 0)), !dbg !2410
  call void @exit(i32 1) #13, !dbg !2411
  unreachable, !dbg !2411

if.end85:                                         ; preds = %lor.lhs.false79
  %53 = bitcast %struct.rlimit* %rlim_new to i8*, !dbg !2412
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %53) #12, !dbg !2412
  br label %if.end86, !dbg !2413

if.end86:                                         ; preds = %if.end85, %while.end
  %call87 = call i32 @getrlimit(i32 7, %struct.rlimit* %rlim) #12, !dbg !2414
  %cmp88 = icmp ne i32 %call87, 0, !dbg !2415
  br i1 %cmp88, label %if.then90, label %if.else92, !dbg !2416

if.then90:                                        ; preds = %if.end86
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2417, !tbaa !964
  %call91 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20, i64 0, i64 0)), !dbg !2419
  call void @exit(i32 1) #13, !dbg !2420
  unreachable, !dbg !2420

if.else92:                                        ; preds = %if.end86
  %55 = bitcast i32* %maxfiles to i8*, !dbg !2421
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %55) #12, !dbg !2421
  call void @llvm.dbg.declare(metadata i32* %maxfiles, metadata !2185, metadata !DIExpression()), !dbg !2422
  %56 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8, !dbg !2423, !tbaa !2270
  store i32 %56, i32* %maxfiles, align 4, !dbg !2422, !tbaa !946
  %rlim_cur93 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rlim, i32 0, i32 0, !dbg !2424
  %57 = load i64, i64* %rlim_cur93, align 8, !dbg !2424, !tbaa !2387
  %58 = load i32, i32* %maxfiles, align 4, !dbg !2426, !tbaa !946
  %conv94 = sext i32 %58 to i64, !dbg !2426
  %cmp95 = icmp ult i64 %57, %conv94, !dbg !2427
  br i1 %cmp95, label %if.then97, label %if.end100, !dbg !2428

if.then97:                                        ; preds = %if.else92
  %59 = load i32, i32* %maxfiles, align 4, !dbg !2429, !tbaa !946
  %add = add nsw i32 %59, 3, !dbg !2430
  %conv98 = sext i32 %add to i64, !dbg !2429
  %rlim_cur99 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rlim, i32 0, i32 0, !dbg !2431
  store i64 %conv98, i64* %rlim_cur99, align 8, !dbg !2432, !tbaa !2387
  br label %if.end100, !dbg !2433

if.end100:                                        ; preds = %if.then97, %if.else92
  %rlim_max101 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rlim, i32 0, i32 1, !dbg !2434
  %60 = load i64, i64* %rlim_max101, align 8, !dbg !2434, !tbaa !2383
  %rlim_cur102 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rlim, i32 0, i32 0, !dbg !2436
  %61 = load i64, i64* %rlim_cur102, align 8, !dbg !2436, !tbaa !2387
  %cmp103 = icmp ult i64 %60, %61, !dbg !2437
  br i1 %cmp103, label %if.then105, label %if.end108, !dbg !2438

if.then105:                                       ; preds = %if.end100
  %rlim_cur106 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rlim, i32 0, i32 0, !dbg !2439
  %62 = load i64, i64* %rlim_cur106, align 8, !dbg !2439, !tbaa !2387
  %rlim_max107 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %rlim, i32 0, i32 1, !dbg !2440
  store i64 %62, i64* %rlim_max107, align 8, !dbg !2441, !tbaa !2383
  br label %if.end108, !dbg !2442

if.end108:                                        ; preds = %if.then105, %if.end100
  %call109 = call i32 @setrlimit(i32 7, %struct.rlimit* %rlim) #12, !dbg !2443
  %cmp110 = icmp ne i32 %call109, 0, !dbg !2445
  br i1 %cmp110, label %if.then112, label %if.end114, !dbg !2446

if.then112:                                       ; preds = %if.end108
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2447, !tbaa !964
  %call113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.21, i64 0, i64 0)), !dbg !2449
  call void @exit(i32 1) #13, !dbg !2450
  unreachable, !dbg !2450

if.end114:                                        ; preds = %if.end108
  %64 = bitcast i32* %maxfiles to i8*, !dbg !2451
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %64) #12, !dbg !2451
  br label %if.end115

if.end115:                                        ; preds = %if.end114
  %65 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8, !dbg !2452, !tbaa !2254
  %cmp116 = icmp eq i8* %65, null, !dbg !2454
  br i1 %cmp116, label %if.then118, label %if.end125, !dbg !2455

if.then118:                                       ; preds = %if.end115
  %66 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 2), align 4, !dbg !2456, !tbaa !2250
  %call119 = call i32 @server_socket(i32 %66, i1 zeroext false), !dbg !2458
  store i32 %call119, i32* @l_socket, align 4, !dbg !2459, !tbaa !946
  %67 = load i32, i32* @l_socket, align 4, !dbg !2460, !tbaa !946
  %cmp120 = icmp eq i32 %67, -1, !dbg !2462
  br i1 %cmp120, label %if.then122, label %if.end124, !dbg !2463

if.then122:                                       ; preds = %if.then118
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2464, !tbaa !964
  %call123 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0)), !dbg !2466
  call void @exit(i32 1) #13, !dbg !2467
  unreachable, !dbg !2467

if.end124:                                        ; preds = %if.then118
  br label %if.end125, !dbg !2468

if.end125:                                        ; preds = %if.end124, %if.end115
  %69 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8, !dbg !2469, !tbaa !2242
  %cmp126 = icmp sgt i32 %69, 0, !dbg !2471
  br i1 %cmp126, label %land.lhs.true, label %if.end137, !dbg !2472

land.lhs.true:                                    ; preds = %if.end125
  %70 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8, !dbg !2473, !tbaa !2254
  %cmp128 = icmp eq i8* %70, null, !dbg !2474
  br i1 %cmp128, label %if.then130, label %if.end137, !dbg !2475

if.then130:                                       ; preds = %land.lhs.true
  %71 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8, !dbg !2476, !tbaa !2242
  %call131 = call i32 @server_socket(i32 %71, i1 zeroext true), !dbg !2478
  store i32 %call131, i32* @u_socket, align 4, !dbg !2479, !tbaa !946
  %72 = load i32, i32* @u_socket, align 4, !dbg !2480, !tbaa !946
  %cmp132 = icmp eq i32 %72, -1, !dbg !2482
  br i1 %cmp132, label %if.then134, label %if.end136, !dbg !2483

if.then134:                                       ; preds = %if.then130
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2484, !tbaa !964
  %74 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8, !dbg !2486, !tbaa !2242
  %call135 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0), i32 %74), !dbg !2487
  call void @exit(i32 1) #13, !dbg !2488
  unreachable, !dbg !2488

if.end136:                                        ; preds = %if.then130
  br label %if.end137, !dbg !2489

if.end137:                                        ; preds = %if.end136, %land.lhs.true, %if.end125
  %call138 = call i32 @getuid() #12, !dbg !2490
  %cmp139 = icmp eq i32 %call138, 0, !dbg !2492
  br i1 %cmp139, label %if.then145, label %lor.lhs.false141, !dbg !2493

lor.lhs.false141:                                 ; preds = %if.end137
  %call142 = call i32 @geteuid() #12, !dbg !2494
  %cmp143 = icmp eq i32 %call142, 0, !dbg !2495
  br i1 %cmp143, label %if.then145, label %if.end171, !dbg !2496

if.then145:                                       ; preds = %lor.lhs.false141, %if.end137
  %75 = load i8*, i8** %username, align 8, !dbg !2497, !tbaa !964
  %cmp146 = icmp eq i8* %75, null, !dbg !2500
  br i1 %cmp146, label %if.then152, label %lor.lhs.false148, !dbg !2501

lor.lhs.false148:                                 ; preds = %if.then145
  %76 = load i8*, i8** %username, align 8, !dbg !2502, !tbaa !964
  %77 = load i8, i8* %76, align 1, !dbg !2503, !tbaa !1825
  %conv149 = sext i8 %77 to i32, !dbg !2503
  %cmp150 = icmp eq i32 %conv149, 0, !dbg !2504
  br i1 %cmp150, label %if.then152, label %if.end154, !dbg !2505

if.then152:                                       ; preds = %lor.lhs.false148, %if.then145
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2506, !tbaa !964
  %call153 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %78, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.24, i64 0, i64 0)), !dbg !2508
  store i32 1, i32* %retval, align 4, !dbg !2509
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup244, !dbg !2509

if.end154:                                        ; preds = %lor.lhs.false148
  %79 = load i8*, i8** %username, align 8, !dbg !2510, !tbaa !964
  %call155 = call %struct.passwd* @getpwnam(i8* %79), !dbg !2512
  store %struct.passwd* %call155, %struct.passwd** %pw, align 8, !dbg !2513, !tbaa !964
  %cmp156 = icmp eq %struct.passwd* %call155, null, !dbg !2514
  br i1 %cmp156, label %if.then158, label %if.end160, !dbg !2515

if.then158:                                       ; preds = %if.end154
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2516, !tbaa !964
  %81 = load i8*, i8** %username, align 8, !dbg !2518, !tbaa !964
  %call159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25, i64 0, i64 0), i8* %81), !dbg !2519
  store i32 1, i32* %retval, align 4, !dbg !2520
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup244, !dbg !2520

if.end160:                                        ; preds = %if.end154
  %82 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !2521, !tbaa !964
  %pw_gid = getelementptr inbounds %struct.passwd, %struct.passwd* %82, i32 0, i32 3, !dbg !2523
  %83 = load i32, i32* %pw_gid, align 4, !dbg !2523, !tbaa !2524
  %call161 = call i32 @setgid(i32 %83) #12, !dbg !2526
  %cmp162 = icmp slt i32 %call161, 0, !dbg !2527
  br i1 %cmp162, label %if.then168, label %lor.lhs.false164, !dbg !2528

lor.lhs.false164:                                 ; preds = %if.end160
  %84 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !2529, !tbaa !964
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %84, i32 0, i32 2, !dbg !2530
  %85 = load i32, i32* %pw_uid, align 8, !dbg !2530, !tbaa !2531
  %call165 = call i32 @setuid(i32 %85) #12, !dbg !2532
  %cmp166 = icmp slt i32 %call165, 0, !dbg !2533
  br i1 %cmp166, label %if.then168, label %if.end170, !dbg !2534

if.then168:                                       ; preds = %lor.lhs.false164, %if.end160
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2535, !tbaa !964
  %87 = load i8*, i8** %username, align 8, !dbg !2537, !tbaa !964
  %call169 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.26, i64 0, i64 0), i8* %87), !dbg !2538
  store i32 1, i32* %retval, align 4, !dbg !2539
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup244, !dbg !2539

if.end170:                                        ; preds = %lor.lhs.false164
  br label %if.end171, !dbg !2540

if.end171:                                        ; preds = %if.end170, %lor.lhs.false141
  %88 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8, !dbg !2541, !tbaa !2254
  %cmp172 = icmp ne i8* %88, null, !dbg !2543
  br i1 %cmp172, label %if.then174, label %if.end181, !dbg !2544

if.then174:                                       ; preds = %if.end171
  %89 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8, !dbg !2545, !tbaa !2254
  %90 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8, !dbg !2547, !tbaa !2237
  %call175 = call i32 @server_socket_unix(i8* %89, i32 %90), !dbg !2548
  store i32 %call175, i32* @l_socket, align 4, !dbg !2549, !tbaa !946
  %91 = load i32, i32* @l_socket, align 4, !dbg !2550, !tbaa !946
  %cmp176 = icmp eq i32 %91, -1, !dbg !2552
  br i1 %cmp176, label %if.then178, label %if.end180, !dbg !2553

if.then178:                                       ; preds = %if.then174
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2554, !tbaa !964
  %call179 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0)), !dbg !2556
  call void @exit(i32 1) #13, !dbg !2557
  unreachable, !dbg !2557

if.end180:                                        ; preds = %if.then174
  br label %if.end181, !dbg !2558

if.end181:                                        ; preds = %if.end180, %if.end171
  %93 = load i8, i8* %daemonize, align 1, !dbg !2559, !tbaa !1031, !range !1262
  %tobool182 = trunc i8 %93 to i1, !dbg !2559
  br i1 %tobool182, label %if.then183, label %if.end190, !dbg !2560

if.then183:                                       ; preds = %if.end181
  %94 = bitcast i32* %res to i8*, !dbg !2561
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %94) #12, !dbg !2561
  call void @llvm.dbg.declare(metadata i32* %res, metadata !2188, metadata !DIExpression()), !dbg !2562
  %95 = load i32, i32* %maxcore, align 4, !dbg !2563, !tbaa !946
  %96 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !2564, !tbaa !1246
  %call184 = call i32 @daemon(i32 %95, i32 %96) #12, !dbg !2565
  store i32 %call184, i32* %res, align 4, !dbg !2566, !tbaa !946
  %97 = load i32, i32* %res, align 4, !dbg !2567, !tbaa !946
  %cmp185 = icmp eq i32 %97, -1, !dbg !2569
  br i1 %cmp185, label %if.then187, label %if.end189, !dbg !2570

if.then187:                                       ; preds = %if.then183
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2571, !tbaa !964
  %call188 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %98, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.27, i64 0, i64 0)), !dbg !2573
  store i32 1, i32* %retval, align 4, !dbg !2574
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2574

if.end189:                                        ; preds = %if.then183
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !2575
  br label %cleanup, !dbg !2575

cleanup:                                          ; preds = %if.end189, %if.then187
  %99 = bitcast i32* %res to i8*, !dbg !2575
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %99) #12, !dbg !2575
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup244 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end190, !dbg !2576

if.end190:                                        ; preds = %cleanup.cont, %if.end181
  %call191 = call %struct.event_base* @event_init(), !dbg !2577
  store %struct.event_base* %call191, %struct.event_base** @main_base, align 8, !dbg !2578, !tbaa !964
  %100 = bitcast %struct.pmemobjpool** %pop to i8*, !dbg !2579
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %100) #12, !dbg !2579
  call void @llvm.dbg.declare(metadata %struct.pmemobjpool** %pop, metadata !2191, metadata !DIExpression()), !dbg !2580
  %101 = load i8, i8* %recover, align 1, !dbg !2581, !tbaa !1031, !range !1262
  %tobool192 = trunc i8 %101 to i1, !dbg !2581
  %102 = load i8*, i8** %path, align 8, !dbg !2582, !tbaa !964
  %call193 = call %struct.pmemobjpool* @assoc_init(i1 zeroext %tobool192, i8* %102), !dbg !2583
  store %struct.pmemobjpool* %call193, %struct.pmemobjpool** %pop, align 8, !dbg !2580, !tbaa !964
  %103 = load %struct.pmemobjpool*, %struct.pmemobjpool** %pop, align 8, !dbg !2584, !tbaa !964
  call void @item_init(%struct.pmemobjpool* %103), !dbg !2585
  call void @conn_init(), !dbg !2586
  call void @suffix_init(), !dbg !2587
  %104 = load i64, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8, !dbg !2588, !tbaa !2262
  %105 = load double, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 11), align 8, !dbg !2589, !tbaa !2308
  call void @slabs_init(i64 %104, double %105), !dbg !2590
  %106 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8, !dbg !2591, !tbaa !2245, !range !1262
  %tobool194 = trunc i8 %106 to i1, !dbg !2591
  br i1 %tobool194, label %if.then195, label %if.end202, !dbg !2593

if.then195:                                       ; preds = %if.end190
  %call196 = call noalias i8* @malloc(i64 131072) #12, !dbg !2594
  %107 = bitcast i8* %call196 to i32*, !dbg !2594
  store i32* %107, i32** @buckets, align 8, !dbg !2596, !tbaa !964
  %108 = load i32*, i32** @buckets, align 8, !dbg !2597, !tbaa !964
  %cmp197 = icmp eq i32* %108, null, !dbg !2599
  br i1 %cmp197, label %if.then199, label %if.end201, !dbg !2600

if.then199:                                       ; preds = %if.then195
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2601, !tbaa !964
  %call200 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28, i64 0, i64 0)), !dbg !2603
  call void @exit(i32 1) #13, !dbg !2604
  unreachable, !dbg !2604

if.end201:                                        ; preds = %if.then195
  %110 = load i32*, i32** @buckets, align 8, !dbg !2605, !tbaa !964
  %111 = bitcast i32* %110 to i8*, !dbg !2606
  call void @llvm.memset.p0i8.i64(i8* align 4 %111, i8 0, i64 131072, i1 false), !dbg !2606
  br label %if.end202, !dbg !2607

if.end202:                                        ; preds = %if.end201, %if.end190
  %112 = load i8, i8* %lock_memory, align 1, !dbg !2608, !tbaa !1031, !range !1262
  %tobool203 = trunc i8 %112 to i1, !dbg !2608
  br i1 %tobool203, label %if.then204, label %if.end206, !dbg !2610

if.then204:                                       ; preds = %if.end202
  %call205 = call i32 @mlockall(i32 3) #12, !dbg !2611
  br label %if.end206, !dbg !2613

if.end206:                                        ; preds = %if.then204, %if.end202
  %__sigaction_handler = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 0, !dbg !2614
  %sa_handler = bitcast %union.anon.7* %__sigaction_handler to void (i32)**, !dbg !2614
  store void (i32)* inttoptr (i64 1 to void (i32)*), void (i32)** %sa_handler, align 8, !dbg !2615, !tbaa !1825
  %sa_flags = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 2, !dbg !2616
  store i32 0, i32* %sa_flags, align 8, !dbg !2617, !tbaa !2618
  %sa_mask = getelementptr inbounds %struct.sigaction, %struct.sigaction* %sa, i32 0, i32 1, !dbg !2621
  %call207 = call i32 @sigemptyset(%struct.__sigset_t* %sa_mask) #12, !dbg !2623
  %cmp208 = icmp eq i32 %call207, -1, !dbg !2624
  br i1 %cmp208, label %if.then214, label %lor.lhs.false210, !dbg !2625

lor.lhs.false210:                                 ; preds = %if.end206
  %call211 = call i32 @sigaction(i32 13, %struct.sigaction* %sa, %struct.sigaction* null) #12, !dbg !2626
  %cmp212 = icmp eq i32 %call211, -1, !dbg !2627
  br i1 %cmp212, label %if.then214, label %if.end215, !dbg !2628

if.then214:                                       ; preds = %lor.lhs.false210, %if.end206
  call void @perror(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i64 0, i64 0)), !dbg !2629
  call void @exit(i32 1) #13, !dbg !2631
  unreachable, !dbg !2631

if.end215:                                        ; preds = %lor.lhs.false210
  %113 = load i32, i32* @l_socket, align 4, !dbg !2632, !tbaa !946
  %114 = load %struct.event_base*, %struct.event_base** @main_base, align 8, !dbg !2634, !tbaa !964
  %call216 = call %struct.conn* @conn_new(i32 %113, i32 0, i32 18, i32 1, i1 zeroext false, %struct.event_base* %114), !dbg !2635
  store %struct.conn* %call216, %struct.conn** @listen_conn, align 8, !dbg !2636, !tbaa !964
  %tobool217 = icmp ne %struct.conn* %call216, null, !dbg !2636
  br i1 %tobool217, label %if.end220, label %if.then218, !dbg !2637

if.then218:                                       ; preds = %if.end215
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2638, !tbaa !964
  %call219 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %115, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.30, i64 0, i64 0)), !dbg !2640
  call void @exit(i32 1) #13, !dbg !2641
  unreachable, !dbg !2641

if.end220:                                        ; preds = %if.end215
  %116 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 4, !dbg !2642, !tbaa !2334
  %117 = load %struct.event_base*, %struct.event_base** @main_base, align 8, !dbg !2643, !tbaa !964
  call void @thread_init(i32 %116, %struct.event_base* %117), !dbg !2644
  %118 = load i8, i8* %daemonize, align 1, !dbg !2645, !tbaa !1031, !range !1262
  %tobool221 = trunc i8 %118 to i1, !dbg !2645
  br i1 %tobool221, label %if.then222, label %if.end224, !dbg !2647

if.then222:                                       ; preds = %if.end220
  %call223 = call i32 @getpid() #12, !dbg !2648
  %119 = load i8*, i8** %pid_file, align 8, !dbg !2649, !tbaa !964
  call void @save_pid(i32 %call223, i8* %119), !dbg !2650
  br label %if.end224, !dbg !2650

if.end224:                                        ; preds = %if.then222, %if.end220
  call void @clock_handler(i32 0, i16 signext 0, i8* null), !dbg !2651
  store i32 200, i32* @deltotal, align 4, !dbg !2652, !tbaa !946
  store i32 0, i32* @delcurr, align 4, !dbg !2653, !tbaa !946
  %120 = load i32, i32* @deltotal, align 4, !dbg !2654, !tbaa !946
  %conv225 = sext i32 %120 to i64, !dbg !2654
  %mul226 = mul i64 8, %conv225, !dbg !2656
  %call227 = call noalias i8* @malloc(i64 %mul226) #12, !dbg !2657
  %121 = bitcast i8* %call227 to %struct._stritem**, !dbg !2657
  store %struct._stritem** %121, %struct._stritem*** @todelete, align 8, !dbg !2658, !tbaa !964
  %cmp228 = icmp eq %struct._stritem** %121, null, !dbg !2659
  br i1 %cmp228, label %if.then230, label %if.end231, !dbg !2660

if.then230:                                       ; preds = %if.end224
  call void @perror(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.31, i64 0, i64 0)), !dbg !2661
  call void @exit(i32 1) #13, !dbg !2663
  unreachable, !dbg !2663

if.end231:                                        ; preds = %if.end224
  call void @delete_handler(i32 0, i16 signext 0, i8* null), !dbg !2664
  %122 = load i32, i32* @u_socket, align 4, !dbg !2665, !tbaa !946
  %cmp232 = icmp sgt i32 %122, -1, !dbg !2667
  br i1 %cmp232, label %if.then234, label %if.end238, !dbg !2668

if.then234:                                       ; preds = %if.end231
  store i32 0, i32* %c, align 4, !dbg !2669, !tbaa !946
  br label %for.cond, !dbg !2672

for.cond:                                         ; preds = %for.inc, %if.then234
  %123 = load i32, i32* %c, align 4, !dbg !2673, !tbaa !946
  %124 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 4, !dbg !2675, !tbaa !2334
  %cmp235 = icmp slt i32 %123, %124, !dbg !2676
  br i1 %cmp235, label %for.body, label %for.end, !dbg !2677

for.body:                                         ; preds = %for.cond
  %125 = load i32, i32* @u_socket, align 4, !dbg !2678, !tbaa !946
  call void @dispatch_conn_new(i32 %125, i32 1, i32 18, i32 65536, i32 1), !dbg !2680
  br label %for.inc, !dbg !2681

for.inc:                                          ; preds = %for.body
  %126 = load i32, i32* %c, align 4, !dbg !2682, !tbaa !946
  %inc237 = add nsw i32 %126, 1, !dbg !2682
  store i32 %inc237, i32* %c, align 4, !dbg !2682, !tbaa !946
  br label %for.cond, !dbg !2683, !llvm.loop !2684

for.end:                                          ; preds = %for.cond
  br label %if.end238, !dbg !2686

if.end238:                                        ; preds = %for.end, %if.end231
  call void @BeginValgrindInstrumentation(), !dbg !2687
  %127 = load %struct.event_base*, %struct.event_base** @main_base, align 8, !dbg !2688, !tbaa !964
  %call239 = call i32 @event_base_loop(%struct.event_base* %127, i32 0), !dbg !2689
  %128 = load i8, i8* %daemonize, align 1, !dbg !2690, !tbaa !1031, !range !1262
  %tobool240 = trunc i8 %128 to i1, !dbg !2690
  br i1 %tobool240, label %if.then241, label %if.end242, !dbg !2692

if.then241:                                       ; preds = %if.end238
  %129 = load i8*, i8** %pid_file, align 8, !dbg !2693, !tbaa !964
  call void @remove_pidfile(i8* %129), !dbg !2694
  br label %if.end242, !dbg !2694

if.end242:                                        ; preds = %if.then241, %if.end238
  store i32 0, i32* %retval, align 4, !dbg !2695
  store i32 1, i32* %cleanup.dest.slot, align 4
  %130 = bitcast %struct.pmemobjpool** %pop to i8*, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %130) #12, !dbg !2696
  br label %cleanup244

cleanup244:                                       ; preds = %if.end242, %cleanup, %if.then168, %if.then158, %if.then152
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %recover) #12, !dbg !2696
  br label %cleanup245

cleanup245:                                       ; preds = %cleanup244, %sw.default, %if.then53, %if.then47, %if.then40, %if.then33, %if.then
  %131 = bitcast i8** %path to i8*, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131) #12, !dbg !2696
  %132 = bitcast %struct.rlimit* %rlim to i8*, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %132) #12, !dbg !2696
  %133 = bitcast %struct.sigaction* %sa to i8*, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 152, i8* %133) #12, !dbg !2696
  %134 = bitcast %struct.passwd** %pw to i8*, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %134) #12, !dbg !2696
  %135 = bitcast i8** %pid_file to i8*, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %135) #12, !dbg !2696
  %136 = bitcast i8** %username to i8*, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #12, !dbg !2696
  %137 = bitcast i32* %maxcore to i8*, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %137) #12, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %daemonize) #12, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %lock_memory) #12, !dbg !2696
  %138 = bitcast %struct.in_addr* %addr to i8*, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %138) #12, !dbg !2696
  %139 = bitcast i32* %is_enable_trace to i8*, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %139) #12, !dbg !2696
  %140 = bitcast i32* %c to i8*, !dbg !2696
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %140) #12, !dbg !2696
  %141 = load i32, i32* %retval, align 4, !dbg !2696
  ret i32 %141, !dbg !2696
}

; Function Attrs: nounwind
declare !dbg !364 dso_local void (i32)* @signal(i32 %0, void (i32)* %1) #3

; Function Attrs: nounwind uwtable
define internal void @sigint_handler(i32 %sig) #0 !dbg !2697 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %sig.addr, metadata !2701, metadata !DIExpression()), !dbg !2702
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2703, !tbaa !964
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.150, i64 0, i64 0)), !dbg !2704
  call void @exit(i32 0) #13, !dbg !2705
  unreachable, !dbg !2705
}

; Function Attrs: nounwind uwtable
define internal void @settings_init() #0 !dbg !2706 {
entry:
  %__v = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 448, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 10), align 8, !dbg !2711, !tbaa !2237
  store i32 11211, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 2), align 4, !dbg !2712, !tbaa !2250
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 3), align 8, !dbg !2713, !tbaa !2242
  %0 = bitcast i32* %__v to i8*, !dbg !2714
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !2714
  call void @llvm.dbg.declare(metadata i32* %__v, metadata !2708, metadata !DIExpression()), !dbg !2714
  %1 = bitcast i32* %__x to i8*, !dbg !2714
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #12, !dbg !2714
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !2710, metadata !DIExpression()), !dbg !2714
  store i32 0, i32* %__x, align 4, !dbg !2714, !tbaa !946
  %2 = load i32, i32* %__x, align 4, !dbg !2715, !tbaa !946
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !2715
  br i1 %3, label %if.then, label %if.else, !dbg !2714

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %__x, align 4, !dbg !2715, !tbaa !946
  %and = and i32 %4, -16777216, !dbg !2715
  %shr = lshr i32 %and, 24, !dbg !2715
  %5 = load i32, i32* %__x, align 4, !dbg !2715, !tbaa !946
  %and1 = and i32 %5, 16711680, !dbg !2715
  %shr2 = lshr i32 %and1, 8, !dbg !2715
  %or = or i32 %shr, %shr2, !dbg !2715
  %6 = load i32, i32* %__x, align 4, !dbg !2715, !tbaa !946
  %and3 = and i32 %6, 65280, !dbg !2715
  %shl = shl i32 %and3, 8, !dbg !2715
  %or4 = or i32 %or, %shl, !dbg !2715
  %7 = load i32, i32* %__x, align 4, !dbg !2715, !tbaa !946
  %and5 = and i32 %7, 255, !dbg !2715
  %shl6 = shl i32 %and5, 24, !dbg !2715
  %or7 = or i32 %or4, %shl6, !dbg !2715
  store i32 %or7, i32* %__v, align 4, !dbg !2715, !tbaa !946
  br label %if.end, !dbg !2715

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %__x, align 4, !dbg !2715, !tbaa !946
  %9 = call i32 asm "bswap $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %8) #14, !dbg !2715, !srcloc !2717
  store i32 %9, i32* %__v, align 4, !dbg !2715, !tbaa !946
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %__v, align 4, !dbg !2714, !tbaa !946
  store i32 %10, i32* %tmp, align 4, !dbg !2715, !tbaa !946
  %11 = bitcast i32* %__x to i8*, !dbg !2718
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %11) #12, !dbg !2718
  %12 = bitcast i32* %__v to i8*, !dbg !2718
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %12) #12, !dbg !2718
  %13 = load i32, i32* %tmp, align 4, !dbg !2714, !tbaa !946
  store i32 %13, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4, i32 0), align 4, !dbg !2719, !tbaa !2720
  store i64 67108864, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8, !dbg !2721, !tbaa !2262
  store i32 1024, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 1), align 8, !dbg !2722, !tbaa !2270
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !2723, !tbaa !1246
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4, !dbg !2724, !tbaa !2725
  store i32 1, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 8), align 4, !dbg !2726, !tbaa !2265
  store i8* null, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8, !dbg !2727, !tbaa !2254
  store i8 0, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8, !dbg !2728, !tbaa !2245
  store double 1.250000e+00, double* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 11), align 8, !dbg !2729, !tbaa !2308
  store i32 48, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 12), align 8, !dbg !2730, !tbaa !2321
  store i32 4, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 4, !dbg !2731, !tbaa !2334
  store i8 58, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 14), align 8, !dbg !2732, !tbaa !2355
  store i32 0, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 15), align 4, !dbg !2733, !tbaa !2357
  ret void, !dbg !2734
}

; Function Attrs: nounwind
declare !dbg !370 dso_local void @setbuf(%struct._IO_FILE* %0, i8* %1) #3

; Function Attrs: nounwind
declare !dbg !423 dso_local i32 @getopt(i32 %0, i8** %1, i8* %2) #3

; Function Attrs: nounwind uwtable
define internal void @usage() #0 !dbg !2735 {
entry:
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.151, i64 0, i64 0)), !dbg !2736
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([1212 x i8], [1212 x i8]* @.str.152, i64 0, i64 0)), !dbg !2737
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.153, i64 0, i64 0)), !dbg !2738
  ret void, !dbg !2739
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32 %0) #9

; Function Attrs: nounwind uwtable
define internal void @usage_license() #0 !dbg !2740 {
entry:
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.154, i64 0, i64 0)), !dbg !2741
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3203 x i8], [3203 x i8]* @.str.155, i64 0, i64 0)), !dbg !2742
  ret void, !dbg !2743
}

; Function Attrs: nounwind
declare !dbg !429 dso_local i32 @inet_pton(i32 %0, i8* %1, i8* %2) #3

; Function Attrs: inlinehint nounwind readonly uwtable
define available_externally dso_local double @atof(i8* nonnull %__nptr) #7 !dbg !2744 {
entry:
  %__nptr.addr = alloca i8*, align 8
  store i8* %__nptr, i8** %__nptr.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %__nptr.addr, metadata !2749, metadata !DIExpression()), !dbg !2750
  %0 = load i8*, i8** %__nptr.addr, align 8, !dbg !2751, !tbaa !964
  %call = call double @strtod(i8* %0, i8** null) #12, !dbg !2752
  ret double %call, !dbg !2753
}

; Function Attrs: nounwind
declare !dbg !433 dso_local i32 @getrlimit(i32 %0, %struct.rlimit* %1) #3

; Function Attrs: nounwind
declare !dbg !444 dso_local i32 @setrlimit(i32 %0, %struct.rlimit* %1) #3

; Function Attrs: nounwind uwtable
define internal i32 @server_socket(i32 %port, i1 zeroext %is_udp) #0 !dbg !2754 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca i32, align 4
  %is_udp.addr = alloca i8, align 1
  %sfd = alloca i32, align 4
  %ling = alloca %struct.linger, align 4
  %addr = alloca %struct.sockaddr_in, align 4
  %flags = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %__v = alloca i16, align 2
  %__x = alloca i16, align 2
  %tmp = alloca i16, align 2
  store i32 %port, i32* %port.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !2758, metadata !DIExpression()), !dbg !2781
  %frombool = zext i1 %is_udp to i8
  store i8 %frombool, i8* %is_udp.addr, align 1, !tbaa !1031
  call void @llvm.dbg.declare(metadata i8* %is_udp.addr, metadata !2759, metadata !DIExpression()), !dbg !2782
  %0 = bitcast i32* %sfd to i8*, !dbg !2783
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !2783
  call void @llvm.dbg.declare(metadata i32* %sfd, metadata !2760, metadata !DIExpression()), !dbg !2784
  %1 = bitcast %struct.linger* %ling to i8*, !dbg !2785
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !2785
  call void @llvm.dbg.declare(metadata %struct.linger* %ling, metadata !2761, metadata !DIExpression()), !dbg !2786
  %2 = bitcast %struct.linger* %ling to i8*, !dbg !2786
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 8, i1 false), !dbg !2786
  %3 = bitcast %struct.sockaddr_in* %addr to i8*, !dbg !2787
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %3) #12, !dbg !2787
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in* %addr, metadata !2766, metadata !DIExpression()), !dbg !2788
  %4 = bitcast i32* %flags to i8*, !dbg !2789
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #12, !dbg !2789
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !2777, metadata !DIExpression()), !dbg !2790
  store i32 1, i32* %flags, align 4, !dbg !2790, !tbaa !946
  %5 = load i8, i8* %is_udp.addr, align 1, !dbg !2791, !tbaa !1031, !range !1262
  %tobool = trunc i8 %5 to i1, !dbg !2791
  %call = call i32 @new_socket(i1 zeroext %tobool), !dbg !2793
  store i32 %call, i32* %sfd, align 4, !dbg !2794, !tbaa !946
  %cmp = icmp eq i32 %call, -1, !dbg !2795
  br i1 %cmp, label %if.then, label %if.end, !dbg !2796

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !2797
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2797

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %sfd, align 4, !dbg !2799, !tbaa !946
  %7 = bitcast i32* %flags to i8*, !dbg !2800
  %call1 = call i32 @setsockopt(i32 %6, i32 1, i32 2, i8* %7, i32 4) #12, !dbg !2801
  %8 = load i8, i8* %is_udp.addr, align 1, !dbg !2802, !tbaa !1031, !range !1262
  %tobool2 = trunc i8 %8 to i1, !dbg !2802
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !2804

if.then3:                                         ; preds = %if.end
  %9 = load i32, i32* %sfd, align 4, !dbg !2805, !tbaa !946
  call void @maximize_sndbuf(i32 %9), !dbg !2807
  br label %if.end7, !dbg !2808

if.else:                                          ; preds = %if.end
  %10 = load i32, i32* %sfd, align 4, !dbg !2809, !tbaa !946
  %11 = bitcast i32* %flags to i8*, !dbg !2811
  %call4 = call i32 @setsockopt(i32 %10, i32 1, i32 9, i8* %11, i32 4) #12, !dbg !2812
  %12 = load i32, i32* %sfd, align 4, !dbg !2813, !tbaa !946
  %13 = bitcast %struct.linger* %ling to i8*, !dbg !2814
  %call5 = call i32 @setsockopt(i32 %12, i32 1, i32 13, i8* %13, i32 8) #12, !dbg !2815
  %14 = load i32, i32* %sfd, align 4, !dbg !2816, !tbaa !946
  %15 = bitcast i32* %flags to i8*, !dbg !2817
  %call6 = call i32 @setsockopt(i32 %14, i32 6, i32 1, i8* %15, i32 4) #12, !dbg !2818
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then3
  %16 = bitcast %struct.sockaddr_in* %addr to i8*, !dbg !2819
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 16, i1 false), !dbg !2819
  %sin_family = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %addr, i32 0, i32 0, !dbg !2820
  store i16 2, i16* %sin_family, align 4, !dbg !2821, !tbaa !2822
  %17 = bitcast i16* %__v to i8*, !dbg !2824
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %17) #12, !dbg !2824
  call void @llvm.dbg.declare(metadata i16* %__v, metadata !2778, metadata !DIExpression()), !dbg !2824
  %18 = bitcast i16* %__x to i8*, !dbg !2824
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %18) #12, !dbg !2824
  call void @llvm.dbg.declare(metadata i16* %__x, metadata !2780, metadata !DIExpression()), !dbg !2824
  %19 = load i32, i32* %port.addr, align 4, !dbg !2824, !tbaa !946
  %conv = trunc i32 %19 to i16, !dbg !2824
  store i16 %conv, i16* %__x, align 2, !dbg !2824, !tbaa !1413
  %20 = load i16, i16* %__x, align 2, !dbg !2825, !tbaa !1413
  %21 = call i1 @llvm.is.constant.i16(i16 %20), !dbg !2825
  br i1 %21, label %if.then8, label %if.else13, !dbg !2824

if.then8:                                         ; preds = %if.end7
  %22 = load i16, i16* %__x, align 2, !dbg !2825, !tbaa !1413
  %conv9 = zext i16 %22 to i32, !dbg !2825
  %shr = ashr i32 %conv9, 8, !dbg !2825
  %and = and i32 %shr, 255, !dbg !2825
  %23 = load i16, i16* %__x, align 2, !dbg !2825, !tbaa !1413
  %conv10 = zext i16 %23 to i32, !dbg !2825
  %and11 = and i32 %conv10, 255, !dbg !2825
  %shl = shl i32 %and11, 8, !dbg !2825
  %or = or i32 %and, %shl, !dbg !2825
  %conv12 = trunc i32 %or to i16, !dbg !2825
  store i16 %conv12, i16* %__v, align 2, !dbg !2825, !tbaa !1413
  br label %if.end14, !dbg !2825

if.else13:                                        ; preds = %if.end7
  %24 = load i16, i16* %__x, align 2, !dbg !2825, !tbaa !1413
  %25 = call i16 asm "rorw $$8, ${0:w}", "=r,0,~{cc},~{dirflag},~{fpsr},~{flags}"(i16 %24) #14, !dbg !2825, !srcloc !2827
  store i16 %25, i16* %__v, align 2, !dbg !2825, !tbaa !1413
  br label %if.end14

if.end14:                                         ; preds = %if.else13, %if.then8
  %26 = load i16, i16* %__v, align 2, !dbg !2824, !tbaa !1413
  store i16 %26, i16* %tmp, align 2, !dbg !2825, !tbaa !1413
  %27 = bitcast i16* %__x to i8*, !dbg !2828
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %27) #12, !dbg !2828
  %28 = bitcast i16* %__v to i8*, !dbg !2828
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %28) #12, !dbg !2828
  %29 = load i16, i16* %tmp, align 2, !dbg !2824, !tbaa !1413
  %sin_port = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %addr, i32 0, i32 1, !dbg !2829
  store i16 %29, i16* %sin_port, align 2, !dbg !2830, !tbaa !2831
  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %addr, i32 0, i32 2, !dbg !2832
  %30 = bitcast %struct.in_addr* %sin_addr to i8*, !dbg !2833
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 bitcast (%struct.in_addr* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 4) to i8*), i64 4, i1 false), !dbg !2833, !tbaa.struct !2293
  %31 = load i32, i32* %sfd, align 4, !dbg !2834, !tbaa !946
  %32 = bitcast %struct.sockaddr_in* %addr to %struct.sockaddr*, !dbg !2836
  %call15 = call i32 @bind(i32 %31, %struct.sockaddr* %32, i32 16) #12, !dbg !2837
  %cmp16 = icmp eq i32 %call15, -1, !dbg !2838
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !2839

if.then18:                                        ; preds = %if.end14
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.156, i64 0, i64 0)), !dbg !2840
  %33 = load i32, i32* %sfd, align 4, !dbg !2842, !tbaa !946
  %call19 = call i32 @close(i32 %33), !dbg !2843
  store i32 -1, i32* %retval, align 4, !dbg !2844
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2844

if.end20:                                         ; preds = %if.end14
  %34 = load i8, i8* %is_udp.addr, align 1, !dbg !2845, !tbaa !1031, !range !1262
  %tobool21 = trunc i8 %34 to i1, !dbg !2845
  br i1 %tobool21, label %if.end27, label %land.lhs.true, !dbg !2847

land.lhs.true:                                    ; preds = %if.end20
  %35 = load i32, i32* %sfd, align 4, !dbg !2848, !tbaa !946
  %call22 = call i32 @listen(i32 %35, i32 1024) #12, !dbg !2849
  %cmp23 = icmp eq i32 %call22, -1, !dbg !2850
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !2851

if.then25:                                        ; preds = %land.lhs.true
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.157, i64 0, i64 0)), !dbg !2852
  %36 = load i32, i32* %sfd, align 4, !dbg !2854, !tbaa !946
  %call26 = call i32 @close(i32 %36), !dbg !2855
  store i32 -1, i32* %retval, align 4, !dbg !2856
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2856

if.end27:                                         ; preds = %land.lhs.true, %if.end20
  %37 = load i32, i32* %sfd, align 4, !dbg !2857, !tbaa !946
  store i32 %37, i32* %retval, align 4, !dbg !2858
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2858

cleanup:                                          ; preds = %if.end27, %if.then25, %if.then18, %if.then
  %38 = bitcast i32* %flags to i8*, !dbg !2859
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %38) #12, !dbg !2859
  %39 = bitcast %struct.sockaddr_in* %addr to i8*, !dbg !2859
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %39) #12, !dbg !2859
  %40 = bitcast %struct.linger* %ling to i8*, !dbg !2859
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #12, !dbg !2859
  %41 = bitcast i32* %sfd to i8*, !dbg !2859
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %41) #12, !dbg !2859
  %42 = load i32, i32* %retval, align 4, !dbg !2859
  ret i32 %42, !dbg !2859
}

; Function Attrs: nounwind
declare !dbg !449 dso_local i32 @getuid() #3

; Function Attrs: nounwind
declare !dbg !452 dso_local i32 @geteuid() #3

declare !dbg !453 dso_local %struct.passwd* @getpwnam(i8* %0) #4

; Function Attrs: nounwind
declare !dbg !469 dso_local i32 @setgid(i32 %0) #3

; Function Attrs: nounwind
declare !dbg !472 dso_local i32 @setuid(i32 %0) #3

; Function Attrs: nounwind uwtable
define internal i32 @server_socket_unix(i8* %path, i32 %access_mask) #0 !dbg !2860 {
entry:
  %retval = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %access_mask.addr = alloca i32, align 4
  %sfd = alloca i32, align 4
  %ling = alloca %struct.linger, align 4
  %addr = alloca %struct.sockaddr_un, align 2
  %tstat = alloca %struct.stat, align 8
  %flags = alloca i32, align 4
  %old_umask = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !2864, metadata !DIExpression()), !dbg !2880
  store i32 %access_mask, i32* %access_mask.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %access_mask.addr, metadata !2865, metadata !DIExpression()), !dbg !2881
  %0 = bitcast i32* %sfd to i8*, !dbg !2882
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !2882
  call void @llvm.dbg.declare(metadata i32* %sfd, metadata !2866, metadata !DIExpression()), !dbg !2883
  %1 = bitcast %struct.linger* %ling to i8*, !dbg !2884
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !2884
  call void @llvm.dbg.declare(metadata %struct.linger* %ling, metadata !2867, metadata !DIExpression()), !dbg !2885
  %2 = bitcast %struct.linger* %ling to i8*, !dbg !2885
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 8, i1 false), !dbg !2885
  %3 = bitcast %struct.sockaddr_un* %addr to i8*, !dbg !2886
  call void @llvm.lifetime.start.p0i8(i64 110, i8* %3) #12, !dbg !2886
  call void @llvm.dbg.declare(metadata %struct.sockaddr_un* %addr, metadata !2868, metadata !DIExpression()), !dbg !2887
  %4 = bitcast %struct.stat* %tstat to i8*, !dbg !2888
  call void @llvm.lifetime.start.p0i8(i64 144, i8* %4) #12, !dbg !2888
  call void @llvm.dbg.declare(metadata %struct.stat* %tstat, metadata !2877, metadata !DIExpression()), !dbg !2889
  %5 = bitcast i32* %flags to i8*, !dbg !2890
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #12, !dbg !2890
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !2878, metadata !DIExpression()), !dbg !2891
  store i32 1, i32* %flags, align 4, !dbg !2891, !tbaa !946
  %6 = bitcast i32* %old_umask to i8*, !dbg !2892
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #12, !dbg !2892
  call void @llvm.dbg.declare(metadata i32* %old_umask, metadata !2879, metadata !DIExpression()), !dbg !2893
  %7 = load i8*, i8** %path.addr, align 8, !dbg !2894, !tbaa !964
  %tobool = icmp ne i8* %7, null, !dbg !2894
  br i1 %tobool, label %if.end, label %if.then, !dbg !2896

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !2897
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2897

if.end:                                           ; preds = %entry
  %call = call i32 @new_socket_unix(), !dbg !2899
  store i32 %call, i32* %sfd, align 4, !dbg !2901, !tbaa !946
  %cmp = icmp eq i32 %call, -1, !dbg !2902
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !2903

if.then1:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !2904
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2904

if.end2:                                          ; preds = %if.end
  %8 = load i8*, i8** %path.addr, align 8, !dbg !2906, !tbaa !964
  %call3 = call i32 @lstat(i8* %8, %struct.stat* %tstat) #12, !dbg !2908
  %cmp4 = icmp eq i32 %call3, 0, !dbg !2909
  br i1 %cmp4, label %if.then5, label %if.end10, !dbg !2910

if.then5:                                         ; preds = %if.end2
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %tstat, i32 0, i32 3, !dbg !2911
  %9 = load i32, i32* %st_mode, align 8, !dbg !2911, !tbaa !2914
  %and = and i32 %9, 61440, !dbg !2911
  %cmp6 = icmp eq i32 %and, 49152, !dbg !2911
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !2917

if.then7:                                         ; preds = %if.then5
  %10 = load i8*, i8** %path.addr, align 8, !dbg !2918, !tbaa !964
  %call8 = call i32 @unlink(i8* %10) #12, !dbg !2919
  br label %if.end9, !dbg !2919

if.end9:                                          ; preds = %if.then7, %if.then5
  br label %if.end10, !dbg !2920

if.end10:                                         ; preds = %if.end9, %if.end2
  %11 = load i32, i32* %sfd, align 4, !dbg !2921, !tbaa !946
  %12 = bitcast i32* %flags to i8*, !dbg !2922
  %call11 = call i32 @setsockopt(i32 %11, i32 1, i32 2, i8* %12, i32 4) #12, !dbg !2923
  %13 = load i32, i32* %sfd, align 4, !dbg !2924, !tbaa !946
  %14 = bitcast i32* %flags to i8*, !dbg !2925
  %call12 = call i32 @setsockopt(i32 %13, i32 1, i32 9, i8* %14, i32 4) #12, !dbg !2926
  %15 = load i32, i32* %sfd, align 4, !dbg !2927, !tbaa !946
  %16 = bitcast %struct.linger* %ling to i8*, !dbg !2928
  %call13 = call i32 @setsockopt(i32 %15, i32 1, i32 13, i8* %16, i32 8) #12, !dbg !2929
  %17 = bitcast %struct.sockaddr_un* %addr to i8*, !dbg !2930
  call void @llvm.memset.p0i8.i64(i8* align 2 %17, i8 0, i64 110, i1 false), !dbg !2930
  %sun_family = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %addr, i32 0, i32 0, !dbg !2931
  store i16 1, i16* %sun_family, align 2, !dbg !2932, !tbaa !2933
  %sun_path = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %addr, i32 0, i32 1, !dbg !2935
  %arraydecay = getelementptr inbounds [108 x i8], [108 x i8]* %sun_path, i64 0, i64 0, !dbg !2936
  %18 = load i8*, i8** %path.addr, align 8, !dbg !2937, !tbaa !964
  %call14 = call i8* @strcpy(i8* %arraydecay, i8* %18) #12, !dbg !2938
  %19 = load i32, i32* %access_mask.addr, align 4, !dbg !2939, !tbaa !946
  %and15 = and i32 %19, 511, !dbg !2940
  %neg = xor i32 %and15, -1, !dbg !2941
  %call16 = call i32 @umask(i32 %neg) #12, !dbg !2942
  store i32 %call16, i32* %old_umask, align 4, !dbg !2943, !tbaa !946
  %20 = load i32, i32* %sfd, align 4, !dbg !2944, !tbaa !946
  %21 = bitcast %struct.sockaddr_un* %addr to %struct.sockaddr*, !dbg !2946
  %call17 = call i32 @bind(i32 %20, %struct.sockaddr* %21, i32 110) #12, !dbg !2947
  %cmp18 = icmp eq i32 %call17, -1, !dbg !2948
  br i1 %cmp18, label %if.then19, label %if.end22, !dbg !2949

if.then19:                                        ; preds = %if.end10
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.156, i64 0, i64 0)), !dbg !2950
  %22 = load i32, i32* %sfd, align 4, !dbg !2952, !tbaa !946
  %call20 = call i32 @close(i32 %22), !dbg !2953
  %23 = load i32, i32* %old_umask, align 4, !dbg !2954, !tbaa !946
  %call21 = call i32 @umask(i32 %23) #12, !dbg !2955
  store i32 -1, i32* %retval, align 4, !dbg !2956
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2956

if.end22:                                         ; preds = %if.end10
  %24 = load i32, i32* %old_umask, align 4, !dbg !2957, !tbaa !946
  %call23 = call i32 @umask(i32 %24) #12, !dbg !2958
  %25 = load i32, i32* %sfd, align 4, !dbg !2959, !tbaa !946
  %call24 = call i32 @listen(i32 %25, i32 1024) #12, !dbg !2961
  %cmp25 = icmp eq i32 %call24, -1, !dbg !2962
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !2963

if.then26:                                        ; preds = %if.end22
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.157, i64 0, i64 0)), !dbg !2964
  %26 = load i32, i32* %sfd, align 4, !dbg !2966, !tbaa !946
  %call27 = call i32 @close(i32 %26), !dbg !2967
  store i32 -1, i32* %retval, align 4, !dbg !2968
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2968

if.end28:                                         ; preds = %if.end22
  %27 = load i32, i32* %sfd, align 4, !dbg !2969, !tbaa !946
  store i32 %27, i32* %retval, align 4, !dbg !2970
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !2970

cleanup:                                          ; preds = %if.end28, %if.then26, %if.then19, %if.then1, %if.then
  %28 = bitcast i32* %old_umask to i8*, !dbg !2971
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %28) #12, !dbg !2971
  %29 = bitcast i32* %flags to i8*, !dbg !2971
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %29) #12, !dbg !2971
  %30 = bitcast %struct.stat* %tstat to i8*, !dbg !2971
  call void @llvm.lifetime.end.p0i8(i64 144, i8* %30) #12, !dbg !2971
  %31 = bitcast %struct.sockaddr_un* %addr to i8*, !dbg !2971
  call void @llvm.lifetime.end.p0i8(i64 110, i8* %31) #12, !dbg !2971
  %32 = bitcast %struct.linger* %ling to i8*, !dbg !2971
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #12, !dbg !2971
  %33 = bitcast i32* %sfd to i8*, !dbg !2971
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %33) #12, !dbg !2971
  %34 = load i32, i32* %retval, align 4, !dbg !2971
  ret i32 %34, !dbg !2971
}

; Function Attrs: nounwind
declare !dbg !473 dso_local i32 @daemon(i32 %0, i32 %1) #3

declare !dbg !474 dso_local %struct.event_base* @event_init() #4

declare !dbg !477 dso_local %struct.pmemobjpool* @assoc_init(i1 zeroext %0, i8* %1) #4

declare !dbg !484 dso_local void @item_init(%struct.pmemobjpool* %0) #4

; Function Attrs: nounwind uwtable
define internal void @conn_init() #0 !dbg !2972 {
entry:
  store i32 200, i32* @freetotal, align 4, !dbg !2973, !tbaa !946
  store i32 0, i32* @freecurr, align 4, !dbg !2974, !tbaa !946
  %0 = load i32, i32* @freetotal, align 4, !dbg !2975, !tbaa !946
  %conv = sext i32 %0 to i64, !dbg !2975
  %mul = mul i64 8, %conv, !dbg !2977
  %call = call noalias i8* @malloc(i64 %mul) #12, !dbg !2978
  %1 = bitcast i8* %call to %struct.conn**, !dbg !2979
  store %struct.conn** %1, %struct.conn*** @freeconns, align 8, !dbg !2980, !tbaa !964
  %cmp = icmp eq %struct.conn** %1, null, !dbg !2981
  br i1 %cmp, label %if.then, label %if.end, !dbg !2982

if.then:                                          ; preds = %entry
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !2983
  br label %if.end, !dbg !2985

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2986
}

; Function Attrs: nounwind uwtable
define internal void @suffix_init() #0 !dbg !2987 {
entry:
  store i32 500, i32* @freesuffixtotal, align 4, !dbg !2988, !tbaa !946
  store i32 0, i32* @freesuffixcurr, align 4, !dbg !2989, !tbaa !946
  %0 = load i32, i32* @freesuffixtotal, align 4, !dbg !2990, !tbaa !946
  %conv = sext i32 %0 to i64, !dbg !2990
  %mul = mul i64 8, %conv, !dbg !2991
  %call = call noalias i8* @malloc(i64 %mul) #12, !dbg !2992
  %1 = bitcast i8* %call to i8**, !dbg !2993
  store i8** %1, i8*** @freesuffix, align 8, !dbg !2994, !tbaa !964
  %2 = load i8**, i8*** @freesuffix, align 8, !dbg !2995, !tbaa !964
  %cmp = icmp eq i8** %2, null, !dbg !2997
  br i1 %cmp, label %if.then, label %if.end, !dbg !2998

if.then:                                          ; preds = %entry
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)), !dbg !2999
  br label %if.end, !dbg !3001

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3002
}

declare !dbg !487 dso_local void @slabs_init(i64 %0, double %1) #4

; Function Attrs: nounwind
declare !dbg !491 dso_local i32 @mlockall(i32 %0) #3

; Function Attrs: nounwind
declare !dbg !494 dso_local i32 @sigemptyset(%struct.__sigset_t* %0) #3

; Function Attrs: nounwind
declare !dbg !505 dso_local i32 @sigaction(i32 %0, %struct.sigaction* %1, %struct.sigaction* %2) #3

declare !dbg !602 dso_local void @thread_init(i32 %0, %struct.event_base* %1) #4

; Function Attrs: nounwind uwtable
define internal void @save_pid(i32 %pid, i8* %pid_file) #0 !dbg !3003 {
entry:
  %pid.addr = alloca i32, align 4
  %pid_file.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %pid, i32* %pid.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %pid.addr, metadata !3010, metadata !DIExpression()), !dbg !3016
  store i8* %pid_file, i8** %pid_file.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %pid_file.addr, metadata !3011, metadata !DIExpression()), !dbg !3017
  %0 = bitcast %struct._IO_FILE** %fp to i8*, !dbg !3018
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !3018
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !3012, metadata !DIExpression()), !dbg !3019
  %1 = load i8*, i8** %pid_file.addr, align 8, !dbg !3020, !tbaa !964
  %cmp = icmp eq i8* %1, null, !dbg !3022
  br i1 %cmp, label %if.then, label %if.end, !dbg !3023

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3024

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %pid_file.addr, align 8, !dbg !3025, !tbaa !964
  %call = call %struct._IO_FILE* @fopen(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.161, i64 0, i64 0)), !dbg !3027
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !3028, !tbaa !964
  %cmp1 = icmp eq %struct._IO_FILE* %call, null, !dbg !3029
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !3030

if.then2:                                         ; preds = %if.end
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3031, !tbaa !964
  %4 = load i8*, i8** %pid_file.addr, align 8, !dbg !3033, !tbaa !964
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.162, i64 0, i64 0), i8* %4), !dbg !3034
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3035

if.end4:                                          ; preds = %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !3036, !tbaa !964
  %6 = load i32, i32* %pid.addr, align 4, !dbg !3037, !tbaa !946
  %conv = sext i32 %6 to i64, !dbg !3038
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.163, i64 0, i64 0), i64 %conv), !dbg !3039
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !3040, !tbaa !964
  %call6 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !3042
  %cmp7 = icmp eq i32 %call6, -1, !dbg !3043
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !3044

if.then9:                                         ; preds = %if.end4
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3045, !tbaa !964
  %9 = load i8*, i8** %pid_file.addr, align 8, !dbg !3047, !tbaa !964
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.164, i64 0, i64 0), i8* %9), !dbg !3048
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3049

if.end11:                                         ; preds = %if.end4
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !3050
  br label %cleanup, !dbg !3050

cleanup:                                          ; preds = %if.end11, %if.then9, %if.then2, %if.then
  %10 = bitcast %struct._IO_FILE** %fp to i8*, !dbg !3050
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #12, !dbg !3050
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !3050

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @clock_handler(i32 %fd, i16 signext %which, i8* %arg) #0 !dbg !864 {
entry:
  %fd.addr = alloca i32, align 4
  %which.addr = alloca i16, align 2
  %arg.addr = alloca i8*, align 8
  %t = alloca %struct.timeval, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !870, metadata !DIExpression()), !dbg !3051
  store i16 %which, i16* %which.addr, align 2, !tbaa !1413
  call void @llvm.dbg.declare(metadata i16* %which.addr, metadata !871, metadata !DIExpression()), !dbg !3052
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !872, metadata !DIExpression()), !dbg !3053
  %0 = bitcast %struct.timeval* %t to i8*, !dbg !3054
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #12, !dbg !3054
  call void @llvm.dbg.declare(metadata %struct.timeval* %t, metadata !873, metadata !DIExpression()), !dbg !3055
  %1 = bitcast %struct.timeval* %t to i8*, !dbg !3055
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 bitcast (%struct.timeval* @__const.clock_handler.t to i8*), i64 16, i1 false), !dbg !3055
  %2 = load i8, i8* @clock_handler.initialized, align 1, !dbg !3056, !tbaa !1031, !range !1262
  %tobool = trunc i8 %2 to i1, !dbg !3056
  br i1 %tobool, label %if.then, label %if.else, !dbg !3058

if.then:                                          ; preds = %entry
  %call = call i32 @event_del(%struct.event* @clockevent), !dbg !3059
  br label %if.end, !dbg !3061

if.else:                                          ; preds = %entry
  store i8 1, i8* @clock_handler.initialized, align 1, !dbg !3062, !tbaa !1031
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @event_set(%struct.event* @clockevent, i32 -1, i16 signext 0, void (i32, i16, i8*)* @clock_handler, i8* null), !dbg !3064
  %3 = load %struct.event_base*, %struct.event_base** @main_base, align 8, !dbg !3065, !tbaa !964
  %call1 = call i32 @event_base_set(%struct.event_base* %3, %struct.event* @clockevent), !dbg !3066
  %call2 = call i32 @event_add(%struct.event* @clockevent, %struct.timeval* %t), !dbg !3067
  call void @set_current_time(), !dbg !3068
  %4 = bitcast %struct.timeval* %t to i8*, !dbg !3069
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %4) #12, !dbg !3069
  ret void, !dbg !3069
}

; Function Attrs: nounwind uwtable
define internal void @delete_handler(i32 %fd, i16 signext %which, i8* %arg) #0 !dbg !878 {
entry:
  %fd.addr = alloca i32, align 4
  %which.addr = alloca i16, align 2
  %arg.addr = alloca i8*, align 8
  %t = alloca %struct.timeval, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !880, metadata !DIExpression()), !dbg !3070
  store i16 %which, i16* %which.addr, align 2, !tbaa !1413
  call void @llvm.dbg.declare(metadata i16* %which.addr, metadata !881, metadata !DIExpression()), !dbg !3071
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !882, metadata !DIExpression()), !dbg !3072
  %0 = bitcast %struct.timeval* %t to i8*, !dbg !3073
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #12, !dbg !3073
  call void @llvm.dbg.declare(metadata %struct.timeval* %t, metadata !883, metadata !DIExpression()), !dbg !3074
  %1 = bitcast %struct.timeval* %t to i8*, !dbg !3074
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 bitcast (%struct.timeval* @__const.delete_handler.t to i8*), i64 16, i1 false), !dbg !3074
  %2 = load i8, i8* @delete_handler.initialized, align 1, !dbg !3075, !tbaa !1031, !range !1262
  %tobool = trunc i8 %2 to i1, !dbg !3075
  br i1 %tobool, label %if.then, label %if.else, !dbg !3077

if.then:                                          ; preds = %entry
  %call = call i32 @event_del(%struct.event* @deleteevent), !dbg !3078
  br label %if.end, !dbg !3080

if.else:                                          ; preds = %entry
  store i8 1, i8* @delete_handler.initialized, align 1, !dbg !3081, !tbaa !1031
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @event_set(%struct.event* @deleteevent, i32 -1, i16 signext 0, void (i32, i16, i8*)* @delete_handler, i8* null), !dbg !3083
  %3 = load %struct.event_base*, %struct.event_base** @main_base, align 8, !dbg !3084, !tbaa !964
  %call1 = call i32 @event_base_set(%struct.event_base* %3, %struct.event* @deleteevent), !dbg !3085
  %call2 = call i32 @event_add(%struct.event* @deleteevent, %struct.timeval* %t), !dbg !3086
  call void @mt_run_deferred_deletes(), !dbg !3087
  %4 = bitcast %struct.timeval* %t to i8*, !dbg !3088
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %4) #12, !dbg !3088
  ret void, !dbg !3088
}

declare !dbg !605 dso_local void @dispatch_conn_new(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) #4

declare !dbg !608 dso_local i32 @event_base_loop(%struct.event_base* %0, i32 %1) #4

; Function Attrs: nounwind uwtable
define internal void @remove_pidfile(i8* %pid_file) #0 !dbg !3089 {
entry:
  %pid_file.addr = alloca i8*, align 8
  store i8* %pid_file, i8** %pid_file.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %pid_file.addr, metadata !3091, metadata !DIExpression()), !dbg !3092
  %0 = load i8*, i8** %pid_file.addr, align 8, !dbg !3093, !tbaa !964
  %cmp = icmp eq i8* %0, null, !dbg !3095
  br i1 %cmp, label %if.then, label %if.end, !dbg !3096

if.then:                                          ; preds = %entry
  br label %if.end4, !dbg !3097

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %pid_file.addr, align 8, !dbg !3098, !tbaa !964
  %call = call i32 @unlink(i8* %1) #12, !dbg !3100
  %cmp1 = icmp ne i32 %call, 0, !dbg !3101
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !3102

if.then2:                                         ; preds = %if.end
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3103, !tbaa !964
  %3 = load i8*, i8** %pid_file.addr, align 8, !dbg !3105, !tbaa !964
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.165, i64 0, i64 0), i8* %3), !dbg !3106
  br label %if.end4, !dbg !3107

if.end4:                                          ; preds = %if.then, %if.then2, %if.end
  ret void, !dbg !3108
}

; Function Attrs: nounwind uwtable
define internal void @conn_close(%struct.conn* %c) #0 !dbg !3109 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !3111, metadata !DIExpression()), !dbg !3112
  %0 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3113, !tbaa !964
  %cmp = icmp ne %struct.conn* %0, null, !dbg !3113
  br i1 %cmp, label %if.then, label %if.else, !dbg !3116

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !3116

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 463, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__PRETTY_FUNCTION__.conn_close, i64 0, i64 0)) #13, !dbg !3113
  unreachable, !dbg !3113

if.end:                                           ; preds = %if.then
  %1 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3117, !tbaa !964
  %event = getelementptr inbounds %struct.conn, %struct.conn* %1, i32 0, i32 2, !dbg !3118
  %call = call i32 @event_del(%struct.event* %event), !dbg !3119
  %2 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !3120, !tbaa !1246
  %cmp1 = icmp sgt i32 %2, 1, !dbg !3122
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !3123

if.then2:                                         ; preds = %if.end
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3124, !tbaa !964
  %4 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3125, !tbaa !964
  %sfd = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 0, !dbg !3126
  %5 = load i32, i32* %sfd, align 8, !dbg !3126, !tbaa !1275
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i64 0, i64 0), i32 %5), !dbg !3127
  br label %if.end4, !dbg !3127

if.end4:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3128, !tbaa !964
  %sfd5 = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 0, !dbg !3129
  %7 = load i32, i32* %sfd5, align 8, !dbg !3129, !tbaa !1275
  %call6 = call i32 @close(i32 %7), !dbg !3130
  call void @accept_new_conns(i1 zeroext true), !dbg !3131
  %8 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3132, !tbaa !964
  call void @conn_cleanup(%struct.conn* %8), !dbg !3133
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3134, !tbaa !964
  %rsize = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 7, !dbg !3136
  %10 = load i32, i32* %rsize, align 8, !dbg !3136, !tbaa !1090
  %cmp7 = icmp sgt i32 %10, 8192, !dbg !3137
  br i1 %cmp7, label %if.then9, label %lor.lhs.false, !dbg !3138

lor.lhs.false:                                    ; preds = %if.end4
  %11 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3139, !tbaa !964
  %call8 = call zeroext i1 @mt_conn_add_to_freelist(%struct.conn* %11), !dbg !3139
  br i1 %call8, label %if.then9, label %if.end10, !dbg !3140

if.then9:                                         ; preds = %lor.lhs.false, %if.end4
  %12 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3141, !tbaa !964
  call void @conn_free(%struct.conn* %12), !dbg !3143
  br label %if.end10, !dbg !3144

if.end10:                                         ; preds = %if.then9, %lor.lhs.false
  call void @mt_stats_lock(), !dbg !3145
  %13 = load i32, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8, !dbg !3146, !tbaa !1399
  %dec = add i32 %13, -1, !dbg !3146
  store i32 %dec, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8, !dbg !3146, !tbaa !1399
  call void @mt_stats_unlock(), !dbg !3147
  ret void, !dbg !3148
}

; Function Attrs: nounwind uwtable
define internal void @drive_machine(%struct.conn* %c) #0 !dbg !3149 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %stop = alloca i8, align 1
  %sfd = alloca i32, align 4
  %flags = alloca i32, align 4
  %addrlen = alloca i32, align 4
  %addr = alloca %struct.sockaddr, align 2
  %res = alloca i32, align 4
  %tocopy = alloca i32, align 4
  %tocopy123 = alloca i32, align 4
  %it = alloca %struct._stritem*, align 8
  %suffix = alloca i8*, align 8
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !3151, metadata !DIExpression()), !dbg !3173
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %stop) #12, !dbg !3174
  call void @llvm.dbg.declare(metadata i8* %stop, metadata !3152, metadata !DIExpression()), !dbg !3175
  store i8 0, i8* %stop, align 1, !dbg !3175, !tbaa !1031
  %0 = bitcast i32* %sfd to i8*, !dbg !3176
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !3176
  call void @llvm.dbg.declare(metadata i32* %sfd, metadata !3153, metadata !DIExpression()), !dbg !3177
  %1 = bitcast i32* %flags to i8*, !dbg !3176
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #12, !dbg !3176
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !3154, metadata !DIExpression()), !dbg !3178
  store i32 1, i32* %flags, align 4, !dbg !3178, !tbaa !946
  %2 = bitcast i32* %addrlen to i8*, !dbg !3179
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #12, !dbg !3179
  call void @llvm.dbg.declare(metadata i32* %addrlen, metadata !3155, metadata !DIExpression()), !dbg !3180
  %3 = bitcast %struct.sockaddr* %addr to i8*, !dbg !3181
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %3) #12, !dbg !3181
  call void @llvm.dbg.declare(metadata %struct.sockaddr* %addr, metadata !3156, metadata !DIExpression()), !dbg !3182
  %4 = bitcast i32* %res to i8*, !dbg !3183
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #12, !dbg !3183
  call void @llvm.dbg.declare(metadata i32* %res, metadata !3157, metadata !DIExpression()), !dbg !3184
  %5 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3185, !tbaa !964
  %cmp = icmp ne %struct.conn* %5, null, !dbg !3185
  br i1 %cmp, label %if.then, label %if.else, !dbg !3188

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !3188

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 2115, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.drive_machine, i64 0, i64 0)) #13, !dbg !3185
  unreachable, !dbg !3185

if.end:                                           ; preds = %if.then
  br label %while.cond, !dbg !3189

while.cond:                                       ; preds = %sw.epilog281, %if.then38, %if.then32, %if.end
  %6 = load i8, i8* %stop, align 1, !dbg !3190, !tbaa !1031, !range !1262
  %tobool = trunc i8 %6 to i1, !dbg !3190
  %lnot = xor i1 %tobool, true, !dbg !3191
  br i1 %lnot, label %while.body, label %while.end282, !dbg !3189

while.body:                                       ; preds = %while.cond
  %7 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3192, !tbaa !964
  %state = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 1, !dbg !3193
  %8 = load i32, i32* %state, align 4, !dbg !3193, !tbaa !1285
  switch i32 %8, label %sw.epilog281 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb29
    i32 3, label %sw.bb47
    i32 4, label %sw.bb114
    i32 2, label %sw.bb192
    i32 6, label %sw.bb223
    i32 5, label %sw.bb275
  ], !dbg !3194

sw.bb:                                            ; preds = %while.body
  store i32 16, i32* %addrlen, align 4, !dbg !3195, !tbaa !946
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3196, !tbaa !964
  %sfd1 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 0, !dbg !3198
  %10 = load i32, i32* %sfd1, align 8, !dbg !3198, !tbaa !1275
  %call = call i32 @accept(i32 %10, %struct.sockaddr* %addr, i32* %addrlen), !dbg !3199
  store i32 %call, i32* %sfd, align 4, !dbg !3200, !tbaa !946
  %cmp2 = icmp eq i32 %call, -1, !dbg !3201
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !3202

if.then3:                                         ; preds = %sw.bb
  %call4 = call i32* @__errno_location() #14, !dbg !3203
  %11 = load i32, i32* %call4, align 4, !dbg !3203, !tbaa !946
  %cmp5 = icmp eq i32 %11, 11, !dbg !3206
  br i1 %cmp5, label %if.then8, label %lor.lhs.false, !dbg !3207

lor.lhs.false:                                    ; preds = %if.then3
  %call6 = call i32* @__errno_location() #14, !dbg !3208
  %12 = load i32, i32* %call6, align 4, !dbg !3208, !tbaa !946
  %cmp7 = icmp eq i32 %12, 11, !dbg !3209
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !3210

if.then8:                                         ; preds = %lor.lhs.false, %if.then3
  store i8 1, i8* %stop, align 1, !dbg !3211, !tbaa !1031
  br label %if.end19, !dbg !3213

if.else9:                                         ; preds = %lor.lhs.false
  %call10 = call i32* @__errno_location() #14, !dbg !3214
  %13 = load i32, i32* %call10, align 4, !dbg !3214, !tbaa !946
  %cmp11 = icmp eq i32 %13, 24, !dbg !3216
  br i1 %cmp11, label %if.then12, label %if.else17, !dbg !3217

if.then12:                                        ; preds = %if.else9
  %14 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !3218, !tbaa !1246
  %cmp13 = icmp sgt i32 %14, 0, !dbg !3221
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !3222

if.then14:                                        ; preds = %if.then12
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3223, !tbaa !964
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36, i64 0, i64 0)), !dbg !3224
  br label %if.end16, !dbg !3224

if.end16:                                         ; preds = %if.then14, %if.then12
  call void @accept_new_conns(i1 zeroext false), !dbg !3225
  store i8 1, i8* %stop, align 1, !dbg !3226, !tbaa !1031
  br label %if.end18, !dbg !3227

if.else17:                                        ; preds = %if.else9
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0)), !dbg !3228
  store i8 1, i8* %stop, align 1, !dbg !3230, !tbaa !1031
  br label %if.end18

if.end18:                                         ; preds = %if.else17, %if.end16
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then8
  br label %sw.epilog281, !dbg !3231

if.end20:                                         ; preds = %sw.bb
  %16 = load i32, i32* %sfd, align 4, !dbg !3232, !tbaa !946
  %call21 = call i32 (i32, i32, ...) @fcntl(i32 %16, i32 3, i32 0), !dbg !3234
  store i32 %call21, i32* %flags, align 4, !dbg !3235, !tbaa !946
  %cmp22 = icmp slt i32 %call21, 0, !dbg !3236
  br i1 %cmp22, label %if.then26, label %lor.lhs.false23, !dbg !3237

lor.lhs.false23:                                  ; preds = %if.end20
  %17 = load i32, i32* %sfd, align 4, !dbg !3238, !tbaa !946
  %18 = load i32, i32* %flags, align 4, !dbg !3239, !tbaa !946
  %or = or i32 %18, 2048, !dbg !3240
  %call24 = call i32 (i32, i32, ...) @fcntl(i32 %17, i32 4, i32 %or), !dbg !3241
  %cmp25 = icmp slt i32 %call24, 0, !dbg !3242
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !3243

if.then26:                                        ; preds = %lor.lhs.false23, %if.end20
  call void @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0)), !dbg !3244
  %19 = load i32, i32* %sfd, align 4, !dbg !3246, !tbaa !946
  %call27 = call i32 @close(i32 %19), !dbg !3247
  br label %sw.epilog281, !dbg !3248

if.end28:                                         ; preds = %lor.lhs.false23
  %20 = load i32, i32* %sfd, align 4, !dbg !3249, !tbaa !946
  call void @dispatch_conn_new(i32 %20, i32 1, i32 18, i32 2048, i32 0), !dbg !3250
  br label %sw.epilog281, !dbg !3251

sw.bb29:                                          ; preds = %while.body
  %21 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3252, !tbaa !964
  %call30 = call i32 @try_read_command(%struct.conn* %21), !dbg !3254
  %cmp31 = icmp ne i32 %call30, 0, !dbg !3255
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !3256

if.then32:                                        ; preds = %sw.bb29
  br label %while.cond, !dbg !3257, !llvm.loop !3259

if.end33:                                         ; preds = %sw.bb29
  %22 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3261, !tbaa !964
  %udp = getelementptr inbounds %struct.conn, %struct.conn* %22, i32 0, i32 36, !dbg !3263
  %23 = load i8, i8* %udp, align 4, !dbg !3263, !tbaa !1280, !range !1262
  %tobool34 = trunc i8 %23 to i1, !dbg !3263
  br i1 %tobool34, label %cond.true, label %cond.false, !dbg !3261

cond.true:                                        ; preds = %if.end33
  %24 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3264, !tbaa !964
  %call35 = call i32 @try_read_udp(%struct.conn* %24), !dbg !3265
  br label %cond.end, !dbg !3261

cond.false:                                       ; preds = %if.end33
  %25 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3266, !tbaa !964
  %call36 = call i32 @try_read_network(%struct.conn* %25), !dbg !3267
  br label %cond.end, !dbg !3261

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call35, %cond.true ], [ %call36, %cond.false ], !dbg !3261
  %cmp37 = icmp ne i32 %cond, 0, !dbg !3268
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !3269

if.then38:                                        ; preds = %cond.end
  br label %while.cond, !dbg !3270, !llvm.loop !3259

if.end39:                                         ; preds = %cond.end
  %26 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3272, !tbaa !964
  %call40 = call zeroext i1 @update_event(%struct.conn* %26, i32 18), !dbg !3274
  br i1 %call40, label %if.end46, label %if.then41, !dbg !3275

if.then41:                                        ; preds = %if.end39
  %27 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !3276, !tbaa !1246
  %cmp42 = icmp sgt i32 %27, 0, !dbg !3279
  br i1 %cmp42, label %if.then43, label %if.end45, !dbg !3280

if.then43:                                        ; preds = %if.then41
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3281, !tbaa !964
  %call44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0)), !dbg !3282
  br label %if.end45, !dbg !3282

if.end45:                                         ; preds = %if.then43, %if.then41
  %29 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3283, !tbaa !964
  call void @conn_set_state(%struct.conn* %29, i32 5), !dbg !3284
  br label %sw.epilog281, !dbg !3285

if.end46:                                         ; preds = %if.end39
  store i8 1, i8* %stop, align 1, !dbg !3286, !tbaa !1031
  br label %sw.epilog281, !dbg !3287

sw.bb47:                                          ; preds = %while.body
  %30 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3288, !tbaa !964
  %rlbytes = getelementptr inbounds %struct.conn, %struct.conn* %30, i32 0, i32 16, !dbg !3290
  %31 = load i32, i32* %rlbytes, align 8, !dbg !3290, !tbaa !1289
  %cmp48 = icmp eq i32 %31, 0, !dbg !3291
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !3292

if.then49:                                        ; preds = %sw.bb47
  %32 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3293, !tbaa !964
  call void @complete_nread(%struct.conn* %32), !dbg !3295
  br label %sw.epilog281, !dbg !3296

if.end50:                                         ; preds = %sw.bb47
  %33 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3297, !tbaa !964
  %rbytes = getelementptr inbounds %struct.conn, %struct.conn* %33, i32 0, i32 8, !dbg !3298
  %34 = load i32, i32* %rbytes, align 4, !dbg !3298, !tbaa !1297
  %cmp51 = icmp sgt i32 %34, 0, !dbg !3299
  br i1 %cmp51, label %if.then52, label %if.end69, !dbg !3300

if.then52:                                        ; preds = %if.end50
  %35 = bitcast i32* %tocopy to i8*, !dbg !3301
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %35) #12, !dbg !3301
  call void @llvm.dbg.declare(metadata i32* %tocopy, metadata !3158, metadata !DIExpression()), !dbg !3302
  %36 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3303, !tbaa !964
  %rbytes53 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 8, !dbg !3304
  %37 = load i32, i32* %rbytes53, align 4, !dbg !3304, !tbaa !1297
  %38 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3305, !tbaa !964
  %rlbytes54 = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 16, !dbg !3306
  %39 = load i32, i32* %rlbytes54, align 8, !dbg !3306, !tbaa !1289
  %cmp55 = icmp sgt i32 %37, %39, !dbg !3307
  br i1 %cmp55, label %cond.true56, label %cond.false58, !dbg !3303

cond.true56:                                      ; preds = %if.then52
  %40 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3308, !tbaa !964
  %rlbytes57 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 16, !dbg !3309
  %41 = load i32, i32* %rlbytes57, align 8, !dbg !3309, !tbaa !1289
  br label %cond.end60, !dbg !3303

cond.false58:                                     ; preds = %if.then52
  %42 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3310, !tbaa !964
  %rbytes59 = getelementptr inbounds %struct.conn, %struct.conn* %42, i32 0, i32 8, !dbg !3311
  %43 = load i32, i32* %rbytes59, align 4, !dbg !3311, !tbaa !1297
  br label %cond.end60, !dbg !3303

cond.end60:                                       ; preds = %cond.false58, %cond.true56
  %cond61 = phi i32 [ %41, %cond.true56 ], [ %43, %cond.false58 ], !dbg !3303
  store i32 %cond61, i32* %tocopy, align 4, !dbg !3302, !tbaa !946
  %44 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3312, !tbaa !964
  %ritem = getelementptr inbounds %struct.conn, %struct.conn* %44, i32 0, i32 15, !dbg !3313
  %45 = load i8*, i8** %ritem, align 8, !dbg !3313, !tbaa !1313
  %46 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3314, !tbaa !964
  %rcurr = getelementptr inbounds %struct.conn, %struct.conn* %46, i32 0, i32 6, !dbg !3315
  %47 = load i8*, i8** %rcurr, align 8, !dbg !3315, !tbaa !1309
  %48 = load i32, i32* %tocopy, align 4, !dbg !3316, !tbaa !946
  %conv = sext i32 %48 to i64, !dbg !3316
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 %47, i64 %conv, i1 false), !dbg !3317
  %49 = load i32, i32* %tocopy, align 4, !dbg !3318, !tbaa !946
  %50 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3319, !tbaa !964
  %ritem62 = getelementptr inbounds %struct.conn, %struct.conn* %50, i32 0, i32 15, !dbg !3320
  %51 = load i8*, i8** %ritem62, align 8, !dbg !3321, !tbaa !1313
  %idx.ext = sext i32 %49 to i64, !dbg !3321
  %add.ptr = getelementptr inbounds i8, i8* %51, i64 %idx.ext, !dbg !3321
  store i8* %add.ptr, i8** %ritem62, align 8, !dbg !3321, !tbaa !1313
  %52 = load i32, i32* %tocopy, align 4, !dbg !3322, !tbaa !946
  %53 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3323, !tbaa !964
  %rlbytes63 = getelementptr inbounds %struct.conn, %struct.conn* %53, i32 0, i32 16, !dbg !3324
  %54 = load i32, i32* %rlbytes63, align 8, !dbg !3325, !tbaa !1289
  %sub = sub nsw i32 %54, %52, !dbg !3325
  store i32 %sub, i32* %rlbytes63, align 8, !dbg !3325, !tbaa !1289
  %55 = load i32, i32* %tocopy, align 4, !dbg !3326, !tbaa !946
  %56 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3327, !tbaa !964
  %rcurr64 = getelementptr inbounds %struct.conn, %struct.conn* %56, i32 0, i32 6, !dbg !3328
  %57 = load i8*, i8** %rcurr64, align 8, !dbg !3329, !tbaa !1309
  %idx.ext65 = sext i32 %55 to i64, !dbg !3329
  %add.ptr66 = getelementptr inbounds i8, i8* %57, i64 %idx.ext65, !dbg !3329
  store i8* %add.ptr66, i8** %rcurr64, align 8, !dbg !3329, !tbaa !1309
  %58 = load i32, i32* %tocopy, align 4, !dbg !3330, !tbaa !946
  %59 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3331, !tbaa !964
  %rbytes67 = getelementptr inbounds %struct.conn, %struct.conn* %59, i32 0, i32 8, !dbg !3332
  %60 = load i32, i32* %rbytes67, align 4, !dbg !3333, !tbaa !1297
  %sub68 = sub nsw i32 %60, %58, !dbg !3333
  store i32 %sub68, i32* %rbytes67, align 4, !dbg !3333, !tbaa !1297
  %61 = bitcast i32* %tocopy to i8*, !dbg !3334
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #12, !dbg !3334
  br label %sw.epilog281

if.end69:                                         ; preds = %if.end50
  %62 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3335, !tbaa !964
  %sfd70 = getelementptr inbounds %struct.conn, %struct.conn* %62, i32 0, i32 0, !dbg !3336
  %63 = load i32, i32* %sfd70, align 8, !dbg !3336, !tbaa !1275
  %64 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3337, !tbaa !964
  %ritem71 = getelementptr inbounds %struct.conn, %struct.conn* %64, i32 0, i32 15, !dbg !3338
  %65 = load i8*, i8** %ritem71, align 8, !dbg !3338, !tbaa !1313
  %66 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3339, !tbaa !964
  %rlbytes72 = getelementptr inbounds %struct.conn, %struct.conn* %66, i32 0, i32 16, !dbg !3340
  %67 = load i32, i32* %rlbytes72, align 8, !dbg !3340, !tbaa !1289
  %conv73 = sext i32 %67 to i64, !dbg !3339
  %call74 = call i64 @read(i32 %63, i8* %65, i64 %conv73), !dbg !3341
  %conv75 = trunc i64 %call74 to i32, !dbg !3341
  store i32 %conv75, i32* %res, align 4, !dbg !3342, !tbaa !946
  %68 = load i32, i32* %res, align 4, !dbg !3343, !tbaa !946
  %cmp76 = icmp sgt i32 %68, 0, !dbg !3345
  br i1 %cmp76, label %if.then78, label %if.end85, !dbg !3346

if.then78:                                        ; preds = %if.end69
  call void @mt_stats_lock(), !dbg !3347
  %69 = load i32, i32* %res, align 4, !dbg !3349, !tbaa !946
  %conv79 = sext i32 %69 to i64, !dbg !3349
  %70 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 12), align 8, !dbg !3350, !tbaa !3351
  %add = add i64 %70, %conv79, !dbg !3350
  store i64 %add, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 12), align 8, !dbg !3350, !tbaa !3351
  call void @mt_stats_unlock(), !dbg !3352
  %71 = load i32, i32* %res, align 4, !dbg !3353, !tbaa !946
  %72 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3354, !tbaa !964
  %ritem80 = getelementptr inbounds %struct.conn, %struct.conn* %72, i32 0, i32 15, !dbg !3355
  %73 = load i8*, i8** %ritem80, align 8, !dbg !3356, !tbaa !1313
  %idx.ext81 = sext i32 %71 to i64, !dbg !3356
  %add.ptr82 = getelementptr inbounds i8, i8* %73, i64 %idx.ext81, !dbg !3356
  store i8* %add.ptr82, i8** %ritem80, align 8, !dbg !3356, !tbaa !1313
  %74 = load i32, i32* %res, align 4, !dbg !3357, !tbaa !946
  %75 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3358, !tbaa !964
  %rlbytes83 = getelementptr inbounds %struct.conn, %struct.conn* %75, i32 0, i32 16, !dbg !3359
  %76 = load i32, i32* %rlbytes83, align 8, !dbg !3360, !tbaa !1289
  %sub84 = sub nsw i32 %76, %74, !dbg !3360
  store i32 %sub84, i32* %rlbytes83, align 8, !dbg !3360, !tbaa !1289
  br label %sw.epilog281, !dbg !3361

if.end85:                                         ; preds = %if.end69
  %77 = load i32, i32* %res, align 4, !dbg !3362, !tbaa !946
  %cmp86 = icmp eq i32 %77, 0, !dbg !3364
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !3365

if.then88:                                        ; preds = %if.end85
  %78 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3366, !tbaa !964
  call void @conn_set_state(%struct.conn* %78, i32 5), !dbg !3368
  br label %sw.epilog281, !dbg !3369

if.end89:                                         ; preds = %if.end85
  %79 = load i32, i32* %res, align 4, !dbg !3370, !tbaa !946
  %cmp90 = icmp eq i32 %79, -1, !dbg !3372
  br i1 %cmp90, label %land.lhs.true, label %if.end108, !dbg !3373

land.lhs.true:                                    ; preds = %if.end89
  %call92 = call i32* @__errno_location() #14, !dbg !3374
  %80 = load i32, i32* %call92, align 4, !dbg !3374, !tbaa !946
  %cmp93 = icmp eq i32 %80, 11, !dbg !3375
  br i1 %cmp93, label %if.then99, label %lor.lhs.false95, !dbg !3376

lor.lhs.false95:                                  ; preds = %land.lhs.true
  %call96 = call i32* @__errno_location() #14, !dbg !3377
  %81 = load i32, i32* %call96, align 4, !dbg !3377, !tbaa !946
  %cmp97 = icmp eq i32 %81, 11, !dbg !3378
  br i1 %cmp97, label %if.then99, label %if.end108, !dbg !3379

if.then99:                                        ; preds = %lor.lhs.false95, %land.lhs.true
  %82 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3380, !tbaa !964
  %call100 = call zeroext i1 @update_event(%struct.conn* %82, i32 18), !dbg !3383
  br i1 %call100, label %if.end107, label %if.then101, !dbg !3384

if.then101:                                       ; preds = %if.then99
  %83 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !3385, !tbaa !1246
  %cmp102 = icmp sgt i32 %83, 0, !dbg !3388
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !3389

if.then104:                                       ; preds = %if.then101
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3390, !tbaa !964
  %call105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %84, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0)), !dbg !3391
  br label %if.end106, !dbg !3391

if.end106:                                        ; preds = %if.then104, %if.then101
  %85 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3392, !tbaa !964
  call void @conn_set_state(%struct.conn* %85, i32 5), !dbg !3393
  br label %sw.epilog281, !dbg !3394

if.end107:                                        ; preds = %if.then99
  store i8 1, i8* %stop, align 1, !dbg !3395, !tbaa !1031
  br label %sw.epilog281, !dbg !3396

if.end108:                                        ; preds = %lor.lhs.false95, %if.end89
  %86 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !3397, !tbaa !1246
  %cmp109 = icmp sgt i32 %86, 0, !dbg !3399
  br i1 %cmp109, label %if.then111, label %if.end113, !dbg !3400

if.then111:                                       ; preds = %if.end108
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3401, !tbaa !964
  %call112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.40, i64 0, i64 0)), !dbg !3402
  br label %if.end113, !dbg !3402

if.end113:                                        ; preds = %if.then111, %if.end108
  %88 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3403, !tbaa !964
  call void @conn_set_state(%struct.conn* %88, i32 5), !dbg !3404
  br label %sw.epilog281, !dbg !3405

sw.bb114:                                         ; preds = %while.body
  %89 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3406, !tbaa !964
  %sbytes = getelementptr inbounds %struct.conn, %struct.conn* %89, i32 0, i32 19, !dbg !3408
  %90 = load i32, i32* %sbytes, align 4, !dbg !3408, !tbaa !3409
  %cmp115 = icmp eq i32 %90, 0, !dbg !3410
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !3411

if.then117:                                       ; preds = %sw.bb114
  %91 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3412, !tbaa !964
  call void @conn_set_state(%struct.conn* %91, i32 1), !dbg !3414
  br label %sw.epilog281, !dbg !3415

if.end118:                                        ; preds = %sw.bb114
  %92 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3416, !tbaa !964
  %rbytes119 = getelementptr inbounds %struct.conn, %struct.conn* %92, i32 0, i32 8, !dbg !3417
  %93 = load i32, i32* %rbytes119, align 4, !dbg !3417, !tbaa !1297
  %cmp120 = icmp sgt i32 %93, 0, !dbg !3418
  br i1 %cmp120, label %if.then122, label %if.end141, !dbg !3419

if.then122:                                       ; preds = %if.end118
  %94 = bitcast i32* %tocopy123 to i8*, !dbg !3420
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %94) #12, !dbg !3420
  call void @llvm.dbg.declare(metadata i32* %tocopy123, metadata !3163, metadata !DIExpression()), !dbg !3421
  %95 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3422, !tbaa !964
  %rbytes124 = getelementptr inbounds %struct.conn, %struct.conn* %95, i32 0, i32 8, !dbg !3423
  %96 = load i32, i32* %rbytes124, align 4, !dbg !3423, !tbaa !1297
  %97 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3424, !tbaa !964
  %sbytes125 = getelementptr inbounds %struct.conn, %struct.conn* %97, i32 0, i32 19, !dbg !3425
  %98 = load i32, i32* %sbytes125, align 4, !dbg !3425, !tbaa !3409
  %cmp126 = icmp sgt i32 %96, %98, !dbg !3426
  br i1 %cmp126, label %cond.true128, label %cond.false130, !dbg !3422

cond.true128:                                     ; preds = %if.then122
  %99 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3427, !tbaa !964
  %sbytes129 = getelementptr inbounds %struct.conn, %struct.conn* %99, i32 0, i32 19, !dbg !3428
  %100 = load i32, i32* %sbytes129, align 4, !dbg !3428, !tbaa !3409
  br label %cond.end132, !dbg !3422

cond.false130:                                    ; preds = %if.then122
  %101 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3429, !tbaa !964
  %rbytes131 = getelementptr inbounds %struct.conn, %struct.conn* %101, i32 0, i32 8, !dbg !3430
  %102 = load i32, i32* %rbytes131, align 4, !dbg !3430, !tbaa !1297
  br label %cond.end132, !dbg !3422

cond.end132:                                      ; preds = %cond.false130, %cond.true128
  %cond133 = phi i32 [ %100, %cond.true128 ], [ %102, %cond.false130 ], !dbg !3422
  store i32 %cond133, i32* %tocopy123, align 4, !dbg !3421, !tbaa !946
  %103 = load i32, i32* %tocopy123, align 4, !dbg !3431, !tbaa !946
  %104 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3432, !tbaa !964
  %sbytes134 = getelementptr inbounds %struct.conn, %struct.conn* %104, i32 0, i32 19, !dbg !3433
  %105 = load i32, i32* %sbytes134, align 4, !dbg !3434, !tbaa !3409
  %sub135 = sub nsw i32 %105, %103, !dbg !3434
  store i32 %sub135, i32* %sbytes134, align 4, !dbg !3434, !tbaa !3409
  %106 = load i32, i32* %tocopy123, align 4, !dbg !3435, !tbaa !946
  %107 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3436, !tbaa !964
  %rcurr136 = getelementptr inbounds %struct.conn, %struct.conn* %107, i32 0, i32 6, !dbg !3437
  %108 = load i8*, i8** %rcurr136, align 8, !dbg !3438, !tbaa !1309
  %idx.ext137 = sext i32 %106 to i64, !dbg !3438
  %add.ptr138 = getelementptr inbounds i8, i8* %108, i64 %idx.ext137, !dbg !3438
  store i8* %add.ptr138, i8** %rcurr136, align 8, !dbg !3438, !tbaa !1309
  %109 = load i32, i32* %tocopy123, align 4, !dbg !3439, !tbaa !946
  %110 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3440, !tbaa !964
  %rbytes139 = getelementptr inbounds %struct.conn, %struct.conn* %110, i32 0, i32 8, !dbg !3441
  %111 = load i32, i32* %rbytes139, align 4, !dbg !3442, !tbaa !1297
  %sub140 = sub nsw i32 %111, %109, !dbg !3442
  store i32 %sub140, i32* %rbytes139, align 4, !dbg !3442, !tbaa !1297
  %112 = bitcast i32* %tocopy123 to i8*, !dbg !3443
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %112) #12, !dbg !3443
  br label %sw.epilog281

if.end141:                                        ; preds = %if.end118
  %113 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3444, !tbaa !964
  %sfd142 = getelementptr inbounds %struct.conn, %struct.conn* %113, i32 0, i32 0, !dbg !3445
  %114 = load i32, i32* %sfd142, align 8, !dbg !3445, !tbaa !1275
  %115 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3446, !tbaa !964
  %rbuf = getelementptr inbounds %struct.conn, %struct.conn* %115, i32 0, i32 5, !dbg !3447
  %116 = load i8*, i8** %rbuf, align 8, !dbg !3447, !tbaa !1065
  %117 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3448, !tbaa !964
  %rsize = getelementptr inbounds %struct.conn, %struct.conn* %117, i32 0, i32 7, !dbg !3449
  %118 = load i32, i32* %rsize, align 8, !dbg !3449, !tbaa !1090
  %119 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3450, !tbaa !964
  %sbytes143 = getelementptr inbounds %struct.conn, %struct.conn* %119, i32 0, i32 19, !dbg !3451
  %120 = load i32, i32* %sbytes143, align 4, !dbg !3451, !tbaa !3409
  %cmp144 = icmp sgt i32 %118, %120, !dbg !3452
  br i1 %cmp144, label %cond.true146, label %cond.false148, !dbg !3448

cond.true146:                                     ; preds = %if.end141
  %121 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3453, !tbaa !964
  %sbytes147 = getelementptr inbounds %struct.conn, %struct.conn* %121, i32 0, i32 19, !dbg !3454
  %122 = load i32, i32* %sbytes147, align 4, !dbg !3454, !tbaa !3409
  br label %cond.end150, !dbg !3448

cond.false148:                                    ; preds = %if.end141
  %123 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3455, !tbaa !964
  %rsize149 = getelementptr inbounds %struct.conn, %struct.conn* %123, i32 0, i32 7, !dbg !3456
  %124 = load i32, i32* %rsize149, align 8, !dbg !3456, !tbaa !1090
  br label %cond.end150, !dbg !3448

cond.end150:                                      ; preds = %cond.false148, %cond.true146
  %cond151 = phi i32 [ %122, %cond.true146 ], [ %124, %cond.false148 ], !dbg !3448
  %conv152 = sext i32 %cond151 to i64, !dbg !3448
  %call153 = call i64 @read(i32 %114, i8* %116, i64 %conv152), !dbg !3457
  %conv154 = trunc i64 %call153 to i32, !dbg !3457
  store i32 %conv154, i32* %res, align 4, !dbg !3458, !tbaa !946
  %125 = load i32, i32* %res, align 4, !dbg !3459, !tbaa !946
  %cmp155 = icmp sgt i32 %125, 0, !dbg !3461
  br i1 %cmp155, label %if.then157, label %if.end162, !dbg !3462

if.then157:                                       ; preds = %cond.end150
  call void @mt_stats_lock(), !dbg !3463
  %126 = load i32, i32* %res, align 4, !dbg !3465, !tbaa !946
  %conv158 = sext i32 %126 to i64, !dbg !3465
  %127 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 12), align 8, !dbg !3466, !tbaa !3351
  %add159 = add i64 %127, %conv158, !dbg !3466
  store i64 %add159, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 12), align 8, !dbg !3466, !tbaa !3351
  call void @mt_stats_unlock(), !dbg !3467
  %128 = load i32, i32* %res, align 4, !dbg !3468, !tbaa !946
  %129 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3469, !tbaa !964
  %sbytes160 = getelementptr inbounds %struct.conn, %struct.conn* %129, i32 0, i32 19, !dbg !3470
  %130 = load i32, i32* %sbytes160, align 4, !dbg !3471, !tbaa !3409
  %sub161 = sub nsw i32 %130, %128, !dbg !3471
  store i32 %sub161, i32* %sbytes160, align 4, !dbg !3471, !tbaa !3409
  br label %sw.epilog281, !dbg !3472

if.end162:                                        ; preds = %cond.end150
  %131 = load i32, i32* %res, align 4, !dbg !3473, !tbaa !946
  %cmp163 = icmp eq i32 %131, 0, !dbg !3475
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !3476

if.then165:                                       ; preds = %if.end162
  %132 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3477, !tbaa !964
  call void @conn_set_state(%struct.conn* %132, i32 5), !dbg !3479
  br label %sw.epilog281, !dbg !3480

if.end166:                                        ; preds = %if.end162
  %133 = load i32, i32* %res, align 4, !dbg !3481, !tbaa !946
  %cmp167 = icmp eq i32 %133, -1, !dbg !3483
  br i1 %cmp167, label %land.lhs.true169, label %if.end186, !dbg !3484

land.lhs.true169:                                 ; preds = %if.end166
  %call170 = call i32* @__errno_location() #14, !dbg !3485
  %134 = load i32, i32* %call170, align 4, !dbg !3485, !tbaa !946
  %cmp171 = icmp eq i32 %134, 11, !dbg !3486
  br i1 %cmp171, label %if.then177, label %lor.lhs.false173, !dbg !3487

lor.lhs.false173:                                 ; preds = %land.lhs.true169
  %call174 = call i32* @__errno_location() #14, !dbg !3488
  %135 = load i32, i32* %call174, align 4, !dbg !3488, !tbaa !946
  %cmp175 = icmp eq i32 %135, 11, !dbg !3489
  br i1 %cmp175, label %if.then177, label %if.end186, !dbg !3490

if.then177:                                       ; preds = %lor.lhs.false173, %land.lhs.true169
  %136 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3491, !tbaa !964
  %call178 = call zeroext i1 @update_event(%struct.conn* %136, i32 18), !dbg !3494
  br i1 %call178, label %if.end185, label %if.then179, !dbg !3495

if.then179:                                       ; preds = %if.then177
  %137 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !3496, !tbaa !1246
  %cmp180 = icmp sgt i32 %137, 0, !dbg !3499
  br i1 %cmp180, label %if.then182, label %if.end184, !dbg !3500

if.then182:                                       ; preds = %if.then179
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3501, !tbaa !964
  %call183 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %138, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0)), !dbg !3502
  br label %if.end184, !dbg !3502

if.end184:                                        ; preds = %if.then182, %if.then179
  %139 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3503, !tbaa !964
  call void @conn_set_state(%struct.conn* %139, i32 5), !dbg !3504
  br label %sw.epilog281, !dbg !3505

if.end185:                                        ; preds = %if.then177
  store i8 1, i8* %stop, align 1, !dbg !3506, !tbaa !1031
  br label %sw.epilog281, !dbg !3507

if.end186:                                        ; preds = %lor.lhs.false173, %if.end166
  %140 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !3508, !tbaa !1246
  %cmp187 = icmp sgt i32 %140, 0, !dbg !3510
  br i1 %cmp187, label %if.then189, label %if.end191, !dbg !3511

if.then189:                                       ; preds = %if.end186
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3512, !tbaa !964
  %call190 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %141, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.40, i64 0, i64 0)), !dbg !3513
  br label %if.end191, !dbg !3513

if.end191:                                        ; preds = %if.then189, %if.end186
  %142 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3514, !tbaa !964
  call void @conn_set_state(%struct.conn* %142, i32 5), !dbg !3515
  br label %sw.epilog281, !dbg !3516

sw.bb192:                                         ; preds = %while.body
  %143 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3517, !tbaa !964
  %iovused = getelementptr inbounds %struct.conn, %struct.conn* %143, i32 0, i32 22, !dbg !3519
  %144 = load i32, i32* %iovused, align 4, !dbg !3519, !tbaa !1337
  %cmp193 = icmp eq i32 %144, 0, !dbg !3520
  br i1 %cmp193, label %if.then203, label %lor.lhs.false195, !dbg !3521

lor.lhs.false195:                                 ; preds = %sw.bb192
  %145 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3522, !tbaa !964
  %udp196 = getelementptr inbounds %struct.conn, %struct.conn* %145, i32 0, i32 36, !dbg !3523
  %146 = load i8, i8* %udp196, align 4, !dbg !3523, !tbaa !1280, !range !1262
  %tobool197 = trunc i8 %146 to i1, !dbg !3523
  br i1 %tobool197, label %land.lhs.true199, label %if.end222, !dbg !3524

land.lhs.true199:                                 ; preds = %lor.lhs.false195
  %147 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3525, !tbaa !964
  %iovused200 = getelementptr inbounds %struct.conn, %struct.conn* %147, i32 0, i32 22, !dbg !3526
  %148 = load i32, i32* %iovused200, align 4, !dbg !3526, !tbaa !1337
  %cmp201 = icmp eq i32 %148, 1, !dbg !3527
  br i1 %cmp201, label %if.then203, label %if.end222, !dbg !3528

if.then203:                                       ; preds = %land.lhs.true199, %sw.bb192
  %149 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3529, !tbaa !964
  %150 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3532, !tbaa !964
  %wcurr = getelementptr inbounds %struct.conn, %struct.conn* %150, i32 0, i32 10, !dbg !3533
  %151 = load i8*, i8** %wcurr, align 8, !dbg !3533, !tbaa !1303
  %152 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3534, !tbaa !964
  %wbytes = getelementptr inbounds %struct.conn, %struct.conn* %152, i32 0, i32 12, !dbg !3535
  %153 = load i32, i32* %wbytes, align 4, !dbg !3535, !tbaa !1293
  %call204 = call i32 @add_iov(%struct.conn* %149, i8* %151, i32 %153), !dbg !3536
  %cmp205 = icmp ne i32 %call204, 0, !dbg !3537
  br i1 %cmp205, label %if.then215, label %lor.lhs.false207, !dbg !3538

lor.lhs.false207:                                 ; preds = %if.then203
  %154 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3539, !tbaa !964
  %udp208 = getelementptr inbounds %struct.conn, %struct.conn* %154, i32 0, i32 36, !dbg !3540
  %155 = load i8, i8* %udp208, align 4, !dbg !3540, !tbaa !1280, !range !1262
  %tobool209 = trunc i8 %155 to i1, !dbg !3540
  br i1 %tobool209, label %land.lhs.true211, label %if.end221, !dbg !3541

land.lhs.true211:                                 ; preds = %lor.lhs.false207
  %156 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3542, !tbaa !964
  %call212 = call i32 @build_udp_headers(%struct.conn* %156), !dbg !3543
  %cmp213 = icmp ne i32 %call212, 0, !dbg !3544
  br i1 %cmp213, label %if.then215, label %if.end221, !dbg !3545

if.then215:                                       ; preds = %land.lhs.true211, %if.then203
  %157 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !3546, !tbaa !1246
  %cmp216 = icmp sgt i32 %157, 0, !dbg !3549
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !3550

if.then218:                                       ; preds = %if.then215
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3551, !tbaa !964
  %call219 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %158, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41, i64 0, i64 0)), !dbg !3552
  br label %if.end220, !dbg !3552

if.end220:                                        ; preds = %if.then218, %if.then215
  %159 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3553, !tbaa !964
  call void @conn_set_state(%struct.conn* %159, i32 5), !dbg !3554
  br label %sw.epilog281, !dbg !3555

if.end221:                                        ; preds = %land.lhs.true211, %lor.lhs.false207
  br label %if.end222, !dbg !3556

if.end222:                                        ; preds = %if.end221, %land.lhs.true199, %lor.lhs.false195
  br label %sw.bb223, !dbg !3557

sw.bb223:                                         ; preds = %while.body, %if.end222
  %160 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3558, !tbaa !964
  %call224 = call i32 @transmit(%struct.conn* %160), !dbg !3559
  switch i32 %call224, label %sw.epilog [
    i32 0, label %sw.bb225
    i32 1, label %sw.bb273
    i32 3, label %sw.bb273
    i32 2, label %sw.bb274
  ], !dbg !3560

sw.bb225:                                         ; preds = %sw.bb223
  %161 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3561, !tbaa !964
  %state226 = getelementptr inbounds %struct.conn, %struct.conn* %161, i32 0, i32 1, !dbg !3562
  %162 = load i32, i32* %state226, align 4, !dbg !3562, !tbaa !1285
  %cmp227 = icmp eq i32 %162, 6, !dbg !3563
  br i1 %cmp227, label %if.then229, label %if.else254, !dbg !3564

if.then229:                                       ; preds = %sw.bb225
  br label %while.cond230, !dbg !3565

while.cond230:                                    ; preds = %if.end239, %if.then229
  %163 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3566, !tbaa !964
  %ileft = getelementptr inbounds %struct.conn, %struct.conn* %163, i32 0, i32 31, !dbg !3567
  %164 = load i32, i32* %ileft, align 8, !dbg !3567, !tbaa !1329
  %cmp231 = icmp sgt i32 %164, 0, !dbg !3568
  br i1 %cmp231, label %while.body233, label %while.end, !dbg !3565

while.body233:                                    ; preds = %while.cond230
  %165 = bitcast %struct._stritem** %it to i8*, !dbg !3569
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %165) #12, !dbg !3569
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !3166, metadata !DIExpression()), !dbg !3570
  %166 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3571, !tbaa !964
  %icurr = getelementptr inbounds %struct.conn, %struct.conn* %166, i32 0, i32 30, !dbg !3572
  %167 = load %struct._stritem**, %struct._stritem*** %icurr, align 8, !dbg !3572, !tbaa !1319
  %168 = load %struct._stritem*, %struct._stritem** %167, align 8, !dbg !3573, !tbaa !964
  store %struct._stritem* %168, %struct._stritem** %it, align 8, !dbg !3570, !tbaa !964
  %169 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !3574, !tbaa !964
  %it_flags = getelementptr inbounds %struct._stritem, %struct._stritem* %169, i32 0, i32 8, !dbg !3574
  %170 = load i8, i8* %it_flags, align 1, !dbg !3574, !tbaa !1980
  %conv234 = zext i8 %170 to i32, !dbg !3574
  %and = and i32 %conv234, 4, !dbg !3574
  %cmp235 = icmp eq i32 %and, 0, !dbg !3574
  br i1 %cmp235, label %if.then237, label %if.else238, !dbg !3577

if.then237:                                       ; preds = %while.body233
  br label %if.end239, !dbg !3577

if.else238:                                       ; preds = %while.body233
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 2311, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__PRETTY_FUNCTION__.drive_machine, i64 0, i64 0)) #13, !dbg !3574
  unreachable, !dbg !3574

if.end239:                                        ; preds = %if.then237
  %171 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !3578, !tbaa !964
  call void @mt_item_remove(%struct._stritem* %171), !dbg !3578
  %172 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3579, !tbaa !964
  %icurr240 = getelementptr inbounds %struct.conn, %struct.conn* %172, i32 0, i32 30, !dbg !3580
  %173 = load %struct._stritem**, %struct._stritem*** %icurr240, align 8, !dbg !3581, !tbaa !1319
  %incdec.ptr = getelementptr inbounds %struct._stritem*, %struct._stritem** %173, i32 1, !dbg !3581
  store %struct._stritem** %incdec.ptr, %struct._stritem*** %icurr240, align 8, !dbg !3581, !tbaa !1319
  %174 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3582, !tbaa !964
  %ileft241 = getelementptr inbounds %struct.conn, %struct.conn* %174, i32 0, i32 31, !dbg !3583
  %175 = load i32, i32* %ileft241, align 8, !dbg !3584, !tbaa !1329
  %dec = add nsw i32 %175, -1, !dbg !3584
  store i32 %dec, i32* %ileft241, align 8, !dbg !3584, !tbaa !1329
  %176 = bitcast %struct._stritem** %it to i8*, !dbg !3585
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %176) #12, !dbg !3585
  br label %while.cond230, !dbg !3565, !llvm.loop !3586

while.end:                                        ; preds = %while.cond230
  br label %while.cond242, !dbg !3587

while.cond242:                                    ; preds = %if.end248, %while.end
  %177 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3588, !tbaa !964
  %suffixleft = getelementptr inbounds %struct.conn, %struct.conn* %177, i32 0, i32 35, !dbg !3589
  %178 = load i32, i32* %suffixleft, align 8, !dbg !3589, !tbaa !1333
  %cmp243 = icmp sgt i32 %178, 0, !dbg !3590
  br i1 %cmp243, label %while.body245, label %while.end253, !dbg !3587

while.body245:                                    ; preds = %while.cond242
  %179 = bitcast i8** %suffix to i8*, !dbg !3591
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %179) #12, !dbg !3591
  call void @llvm.dbg.declare(metadata i8** %suffix, metadata !3171, metadata !DIExpression()), !dbg !3592
  %180 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3593, !tbaa !964
  %suffixcurr = getelementptr inbounds %struct.conn, %struct.conn* %180, i32 0, i32 34, !dbg !3594
  %181 = load i8**, i8*** %suffixcurr, align 8, !dbg !3594, !tbaa !1325
  %182 = load i8*, i8** %181, align 8, !dbg !3595, !tbaa !964
  store i8* %182, i8** %suffix, align 8, !dbg !3592, !tbaa !964
  %183 = load i8*, i8** %suffix, align 8, !dbg !3596, !tbaa !964
  %call246 = call zeroext i1 @mt_suffix_add_to_freelist(i8* %183), !dbg !3596
  br i1 %call246, label %if.then247, label %if.end248, !dbg !3598

if.then247:                                       ; preds = %while.body245
  %184 = load i8*, i8** %suffix, align 8, !dbg !3599, !tbaa !964
  call void @free(i8* %184) #12, !dbg !3601
  br label %if.end248, !dbg !3602

if.end248:                                        ; preds = %if.then247, %while.body245
  %185 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3603, !tbaa !964
  %suffixcurr249 = getelementptr inbounds %struct.conn, %struct.conn* %185, i32 0, i32 34, !dbg !3604
  %186 = load i8**, i8*** %suffixcurr249, align 8, !dbg !3605, !tbaa !1325
  %incdec.ptr250 = getelementptr inbounds i8*, i8** %186, i32 1, !dbg !3605
  store i8** %incdec.ptr250, i8*** %suffixcurr249, align 8, !dbg !3605, !tbaa !1325
  %187 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3606, !tbaa !964
  %suffixleft251 = getelementptr inbounds %struct.conn, %struct.conn* %187, i32 0, i32 35, !dbg !3607
  %188 = load i32, i32* %suffixleft251, align 8, !dbg !3608, !tbaa !1333
  %dec252 = add nsw i32 %188, -1, !dbg !3608
  store i32 %dec252, i32* %suffixleft251, align 8, !dbg !3608, !tbaa !1333
  %189 = bitcast i8** %suffix to i8*, !dbg !3609
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %189) #12, !dbg !3609
  br label %while.cond242, !dbg !3587, !llvm.loop !3610

while.end253:                                     ; preds = %while.cond242
  %190 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3611, !tbaa !964
  call void @conn_set_state(%struct.conn* %190, i32 1), !dbg !3612
  br label %if.end272, !dbg !3613

if.else254:                                       ; preds = %sw.bb225
  %191 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3614, !tbaa !964
  %state255 = getelementptr inbounds %struct.conn, %struct.conn* %191, i32 0, i32 1, !dbg !3616
  %192 = load i32, i32* %state255, align 4, !dbg !3616, !tbaa !1285
  %cmp256 = icmp eq i32 %192, 2, !dbg !3617
  br i1 %cmp256, label %if.then258, label %if.else264, !dbg !3618

if.then258:                                       ; preds = %if.else254
  %193 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3619, !tbaa !964
  %write_and_free = getelementptr inbounds %struct.conn, %struct.conn* %193, i32 0, i32 14, !dbg !3622
  %194 = load i8*, i8** %write_and_free, align 8, !dbg !3622, !tbaa !1353
  %tobool259 = icmp ne i8* %194, null, !dbg !3619
  br i1 %tobool259, label %if.then260, label %if.end263, !dbg !3623

if.then260:                                       ; preds = %if.then258
  %195 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3624, !tbaa !964
  %write_and_free261 = getelementptr inbounds %struct.conn, %struct.conn* %195, i32 0, i32 14, !dbg !3626
  %196 = load i8*, i8** %write_and_free261, align 8, !dbg !3626, !tbaa !1353
  call void @free(i8* %196) #12, !dbg !3627
  %197 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3628, !tbaa !964
  %write_and_free262 = getelementptr inbounds %struct.conn, %struct.conn* %197, i32 0, i32 14, !dbg !3629
  store i8* null, i8** %write_and_free262, align 8, !dbg !3630, !tbaa !1353
  br label %if.end263, !dbg !3631

if.end263:                                        ; preds = %if.then260, %if.then258
  %198 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3632, !tbaa !964
  %199 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3633, !tbaa !964
  %write_and_go = getelementptr inbounds %struct.conn, %struct.conn* %199, i32 0, i32 13, !dbg !3634
  %200 = load i32, i32* %write_and_go, align 8, !dbg !3634, !tbaa !1349
  call void @conn_set_state(%struct.conn* %198, i32 %200), !dbg !3635
  br label %if.end271, !dbg !3636

if.else264:                                       ; preds = %if.else254
  %201 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !3637, !tbaa !1246
  %cmp265 = icmp sgt i32 %201, 0, !dbg !3640
  br i1 %cmp265, label %if.then267, label %if.end270, !dbg !3641

if.then267:                                       ; preds = %if.else264
  %202 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3642, !tbaa !964
  %203 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3643, !tbaa !964
  %state268 = getelementptr inbounds %struct.conn, %struct.conn* %203, i32 0, i32 1, !dbg !3644
  %204 = load i32, i32* %state268, align 4, !dbg !3644, !tbaa !1285
  %call269 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %202, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0), i32 %204), !dbg !3645
  br label %if.end270, !dbg !3645

if.end270:                                        ; preds = %if.then267, %if.else264
  %205 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3646, !tbaa !964
  call void @conn_set_state(%struct.conn* %205, i32 5), !dbg !3647
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.end263
  br label %if.end272

if.end272:                                        ; preds = %if.end271, %while.end253
  br label %sw.epilog, !dbg !3648

sw.bb273:                                         ; preds = %sw.bb223, %sw.bb223
  br label %sw.epilog, !dbg !3649

sw.bb274:                                         ; preds = %sw.bb223
  store i8 1, i8* %stop, align 1, !dbg !3650, !tbaa !1031
  br label %sw.epilog, !dbg !3651

sw.epilog:                                        ; preds = %sw.bb223, %sw.bb274, %sw.bb273, %if.end272
  br label %sw.epilog281, !dbg !3652

sw.bb275:                                         ; preds = %while.body
  %206 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3653, !tbaa !964
  %udp276 = getelementptr inbounds %struct.conn, %struct.conn* %206, i32 0, i32 36, !dbg !3655
  %207 = load i8, i8* %udp276, align 4, !dbg !3655, !tbaa !1280, !range !1262
  %tobool277 = trunc i8 %207 to i1, !dbg !3655
  br i1 %tobool277, label %if.then278, label %if.else279, !dbg !3656

if.then278:                                       ; preds = %sw.bb275
  %208 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3657, !tbaa !964
  call void @conn_cleanup(%struct.conn* %208), !dbg !3658
  br label %if.end280, !dbg !3658

if.else279:                                       ; preds = %sw.bb275
  %209 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3659, !tbaa !964
  call void @conn_close(%struct.conn* %209), !dbg !3660
  br label %if.end280

if.end280:                                        ; preds = %if.else279, %if.then278
  store i8 1, i8* %stop, align 1, !dbg !3661, !tbaa !1031
  br label %sw.epilog281, !dbg !3662

sw.epilog281:                                     ; preds = %while.body, %if.end280, %sw.epilog, %if.end220, %if.end191, %if.end185, %if.end184, %if.then165, %if.then157, %cond.end132, %if.then117, %if.end113, %if.end107, %if.end106, %if.then88, %if.then78, %cond.end60, %if.then49, %if.end46, %if.end45, %if.end28, %if.then26, %if.end19
  br label %while.cond, !dbg !3189, !llvm.loop !3259

while.end282:                                     ; preds = %while.cond
  %210 = bitcast i32* %res to i8*, !dbg !3663
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %210) #12, !dbg !3663
  %211 = bitcast %struct.sockaddr* %addr to i8*, !dbg !3663
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %211) #12, !dbg !3663
  %212 = bitcast i32* %addrlen to i8*, !dbg !3663
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %212) #12, !dbg !3663
  %213 = bitcast i32* %flags to i8*, !dbg !3663
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %213) #12, !dbg !3663
  %214 = bitcast i32* %sfd to i8*, !dbg !3663
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %214) #12, !dbg !3663
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %stop) #12, !dbg !3663
  ret void, !dbg !3663
}

declare !dbg !611 dso_local i32 @event_del(%struct.event* %0) #4

; Function Attrs: nounwind uwtable
define internal void @accept_new_conns(i1 zeroext %do_accept) #0 !dbg !3664 {
entry:
  %do_accept.addr = alloca i8, align 1
  %frombool = zext i1 %do_accept to i8
  store i8 %frombool, i8* %do_accept.addr, align 1, !tbaa !1031
  call void @llvm.dbg.declare(metadata i8* %do_accept.addr, metadata !3668, metadata !DIExpression()), !dbg !3669
  %call = call i32 @mt_is_listen_thread(), !dbg !3670
  %tobool = icmp ne i32 %call, 0, !dbg !3670
  br i1 %tobool, label %if.end, label %if.then, !dbg !3672

if.then:                                          ; preds = %entry
  br label %if.end13, !dbg !3673

if.end:                                           ; preds = %entry
  %0 = load i8, i8* %do_accept.addr, align 1, !dbg !3674, !tbaa !1031, !range !1262
  %tobool1 = trunc i8 %0 to i1, !dbg !3674
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3676

if.then2:                                         ; preds = %if.end
  %1 = load %struct.conn*, %struct.conn** @listen_conn, align 8, !dbg !3677, !tbaa !964
  %call3 = call zeroext i1 @update_event(%struct.conn* %1, i32 18), !dbg !3679
  %2 = load %struct.conn*, %struct.conn** @listen_conn, align 8, !dbg !3680, !tbaa !964
  %sfd = getelementptr inbounds %struct.conn, %struct.conn* %2, i32 0, i32 0, !dbg !3682
  %3 = load i32, i32* %sfd, align 8, !dbg !3682, !tbaa !1275
  %call4 = call i32 @listen(i32 %3, i32 1024) #12, !dbg !3683
  %cmp = icmp ne i32 %call4, 0, !dbg !3684
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !3685

if.then5:                                         ; preds = %if.then2
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0)), !dbg !3686
  br label %if.end6, !dbg !3688

if.end6:                                          ; preds = %if.then5, %if.then2
  br label %if.end13, !dbg !3689

if.else:                                          ; preds = %if.end
  %4 = load %struct.conn*, %struct.conn** @listen_conn, align 8, !dbg !3690, !tbaa !964
  %call7 = call zeroext i1 @update_event(%struct.conn* %4, i32 0), !dbg !3692
  %5 = load %struct.conn*, %struct.conn** @listen_conn, align 8, !dbg !3693, !tbaa !964
  %sfd8 = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 0, !dbg !3695
  %6 = load i32, i32* %sfd8, align 8, !dbg !3695, !tbaa !1275
  %call9 = call i32 @listen(i32 %6, i32 0) #12, !dbg !3696
  %cmp10 = icmp ne i32 %call9, 0, !dbg !3697
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3698

if.then11:                                        ; preds = %if.else
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0)), !dbg !3699
  br label %if.end12, !dbg !3701

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.then, %if.end12, %if.end6
  ret void, !dbg !3702
}

; Function Attrs: nounwind uwtable
define internal void @conn_cleanup(%struct.conn* %c) #0 !dbg !3703 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !3705, metadata !DIExpression()), !dbg !3706
  %0 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3707, !tbaa !964
  %cmp = icmp ne %struct.conn* %0, null, !dbg !3707
  br i1 %cmp, label %if.then, label %if.else, !dbg !3710

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !3710

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 412, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__PRETTY_FUNCTION__.conn_cleanup, i64 0, i64 0)) #13, !dbg !3707
  unreachable, !dbg !3707

if.end:                                           ; preds = %if.then
  %1 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3711, !tbaa !964
  %item_ptr = getelementptr inbounds %struct.conn, %struct.conn* %1, i32 0, i32 17, !dbg !3713
  %2 = load i8*, i8** %item_ptr, align 8, !dbg !3713, !tbaa !1357
  %tobool = icmp ne i8* %2, null, !dbg !3711
  br i1 %tobool, label %if.then1, label %if.end4, !dbg !3714

if.then1:                                         ; preds = %if.end
  %3 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3715, !tbaa !964
  %item_ptr2 = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 17, !dbg !3715
  %4 = load i8*, i8** %item_ptr2, align 8, !dbg !3715, !tbaa !1357
  %5 = bitcast i8* %4 to %struct._stritem*, !dbg !3715
  call void @mt_item_remove(%struct._stritem* %5), !dbg !3715
  %6 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3717, !tbaa !964
  %item_ptr3 = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 17, !dbg !3718
  store i8* null, i8** %item_ptr3, align 8, !dbg !3719, !tbaa !1357
  br label %if.end4, !dbg !3720

if.end4:                                          ; preds = %if.then1, %if.end
  %7 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3721, !tbaa !964
  %ileft = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 31, !dbg !3723
  %8 = load i32, i32* %ileft, align 8, !dbg !3723, !tbaa !1329
  %cmp5 = icmp ne i32 %8, 0, !dbg !3724
  br i1 %cmp5, label %if.then6, label %if.end11, !dbg !3725

if.then6:                                         ; preds = %if.end4
  br label %for.cond, !dbg !3726

for.cond:                                         ; preds = %for.inc, %if.then6
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3728, !tbaa !964
  %ileft7 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 31, !dbg !3731
  %10 = load i32, i32* %ileft7, align 8, !dbg !3731, !tbaa !1329
  %cmp8 = icmp sgt i32 %10, 0, !dbg !3732
  br i1 %cmp8, label %for.body, label %for.end, !dbg !3733

for.body:                                         ; preds = %for.cond
  %11 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3734, !tbaa !964
  %icurr = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 30, !dbg !3734
  %12 = load %struct._stritem**, %struct._stritem*** %icurr, align 8, !dbg !3734, !tbaa !1319
  %13 = load %struct._stritem*, %struct._stritem** %12, align 8, !dbg !3734, !tbaa !964
  call void @mt_item_remove(%struct._stritem* %13), !dbg !3734
  br label %for.inc, !dbg !3736

for.inc:                                          ; preds = %for.body
  %14 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3737, !tbaa !964
  %ileft9 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 31, !dbg !3738
  %15 = load i32, i32* %ileft9, align 8, !dbg !3739, !tbaa !1329
  %dec = add nsw i32 %15, -1, !dbg !3739
  store i32 %dec, i32* %ileft9, align 8, !dbg !3739, !tbaa !1329
  %16 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3740, !tbaa !964
  %icurr10 = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 30, !dbg !3741
  %17 = load %struct._stritem**, %struct._stritem*** %icurr10, align 8, !dbg !3742, !tbaa !1319
  %incdec.ptr = getelementptr inbounds %struct._stritem*, %struct._stritem** %17, i32 1, !dbg !3742
  store %struct._stritem** %incdec.ptr, %struct._stritem*** %icurr10, align 8, !dbg !3742, !tbaa !1319
  br label %for.cond, !dbg !3743, !llvm.loop !3744

for.end:                                          ; preds = %for.cond
  br label %if.end11, !dbg !3746

if.end11:                                         ; preds = %for.end, %if.end4
  %18 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3747, !tbaa !964
  %suffixleft = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 35, !dbg !3749
  %19 = load i32, i32* %suffixleft, align 8, !dbg !3749, !tbaa !1333
  %cmp12 = icmp ne i32 %19, 0, !dbg !3750
  br i1 %cmp12, label %if.then13, label %if.end27, !dbg !3751

if.then13:                                        ; preds = %if.end11
  br label %for.cond14, !dbg !3752

for.cond14:                                       ; preds = %for.inc21, %if.then13
  %20 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3754, !tbaa !964
  %suffixleft15 = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 35, !dbg !3757
  %21 = load i32, i32* %suffixleft15, align 8, !dbg !3757, !tbaa !1333
  %cmp16 = icmp sgt i32 %21, 0, !dbg !3758
  br i1 %cmp16, label %for.body17, label %for.end26, !dbg !3759

for.body17:                                       ; preds = %for.cond14
  %22 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3760, !tbaa !964
  %suffixcurr = getelementptr inbounds %struct.conn, %struct.conn* %22, i32 0, i32 34, !dbg !3760
  %23 = load i8**, i8*** %suffixcurr, align 8, !dbg !3760, !tbaa !1325
  %24 = load i8*, i8** %23, align 8, !dbg !3760, !tbaa !964
  %call = call zeroext i1 @mt_suffix_add_to_freelist(i8* %24), !dbg !3760
  br i1 %call, label %if.then18, label %if.end20, !dbg !3763

if.then18:                                        ; preds = %for.body17
  %25 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3764, !tbaa !964
  %suffixcurr19 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 34, !dbg !3766
  %26 = load i8**, i8*** %suffixcurr19, align 8, !dbg !3766, !tbaa !1325
  %27 = load i8*, i8** %26, align 8, !dbg !3767, !tbaa !964
  call void @free(i8* %27) #12, !dbg !3768
  br label %if.end20, !dbg !3769

if.end20:                                         ; preds = %if.then18, %for.body17
  br label %for.inc21, !dbg !3770

for.inc21:                                        ; preds = %if.end20
  %28 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3771, !tbaa !964
  %suffixleft22 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 35, !dbg !3772
  %29 = load i32, i32* %suffixleft22, align 8, !dbg !3773, !tbaa !1333
  %dec23 = add nsw i32 %29, -1, !dbg !3773
  store i32 %dec23, i32* %suffixleft22, align 8, !dbg !3773, !tbaa !1333
  %30 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3774, !tbaa !964
  %suffixcurr24 = getelementptr inbounds %struct.conn, %struct.conn* %30, i32 0, i32 34, !dbg !3775
  %31 = load i8**, i8*** %suffixcurr24, align 8, !dbg !3776, !tbaa !1325
  %incdec.ptr25 = getelementptr inbounds i8*, i8** %31, i32 1, !dbg !3776
  store i8** %incdec.ptr25, i8*** %suffixcurr24, align 8, !dbg !3776, !tbaa !1325
  br label %for.cond14, !dbg !3777, !llvm.loop !3778

for.end26:                                        ; preds = %for.cond14
  br label %if.end27, !dbg !3780

if.end27:                                         ; preds = %for.end26, %if.end11
  %32 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3781, !tbaa !964
  %write_and_free = getelementptr inbounds %struct.conn, %struct.conn* %32, i32 0, i32 14, !dbg !3783
  %33 = load i8*, i8** %write_and_free, align 8, !dbg !3783, !tbaa !1353
  %tobool28 = icmp ne i8* %33, null, !dbg !3781
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !3784

if.then29:                                        ; preds = %if.end27
  %34 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3785, !tbaa !964
  %write_and_free30 = getelementptr inbounds %struct.conn, %struct.conn* %34, i32 0, i32 14, !dbg !3787
  %35 = load i8*, i8** %write_and_free30, align 8, !dbg !3787, !tbaa !1353
  call void @free(i8* %35) #12, !dbg !3788
  %36 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3789, !tbaa !964
  %write_and_free31 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 14, !dbg !3790
  store i8* null, i8** %write_and_free31, align 8, !dbg !3791, !tbaa !1353
  br label %if.end32, !dbg !3792

if.end32:                                         ; preds = %if.then29, %if.end27
  ret void, !dbg !3793
}

declare !dbg !614 dso_local i32 @mt_is_listen_thread() #4

; Function Attrs: nounwind uwtable
define internal zeroext i1 @update_event(%struct.conn* %c, i32 %new_flags) #0 !dbg !3794 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca %struct.conn*, align 8
  %new_flags.addr = alloca i32, align 4
  %base = alloca %struct.event_base*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !3798, metadata !DIExpression()), !dbg !3801
  store i32 %new_flags, i32* %new_flags.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %new_flags.addr, metadata !3799, metadata !DIExpression()), !dbg !3802
  %0 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3803, !tbaa !964
  %cmp = icmp ne %struct.conn* %0, null, !dbg !3803
  br i1 %cmp, label %if.then, label %if.else, !dbg !3806

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !3806

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 2002, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__PRETTY_FUNCTION__.update_event, i64 0, i64 0)) #13, !dbg !3803
  unreachable, !dbg !3803

if.end:                                           ; preds = %if.then
  %1 = bitcast %struct.event_base** %base to i8*, !dbg !3807
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !3807
  call void @llvm.dbg.declare(metadata %struct.event_base** %base, metadata !3800, metadata !DIExpression()), !dbg !3808
  %2 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3809, !tbaa !964
  %event = getelementptr inbounds %struct.conn, %struct.conn* %2, i32 0, i32 2, !dbg !3810
  %ev_base = getelementptr inbounds %struct.event, %struct.event* %event, i32 0, i32 3, !dbg !3811
  %3 = load %struct.event_base*, %struct.event_base** %ev_base, align 8, !dbg !3811, !tbaa !3812
  store %struct.event_base* %3, %struct.event_base** %base, align 8, !dbg !3808, !tbaa !964
  %4 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3813, !tbaa !964
  %ev_flags = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 3, !dbg !3815
  %5 = load i16, i16* %ev_flags, align 8, !dbg !3815, !tbaa !1381
  %conv = sext i16 %5 to i32, !dbg !3813
  %6 = load i32, i32* %new_flags.addr, align 4, !dbg !3816, !tbaa !946
  %cmp1 = icmp eq i32 %conv, %6, !dbg !3817
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !3818

if.then3:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !3819
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3819

if.end4:                                          ; preds = %if.end
  %7 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3820, !tbaa !964
  %event5 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 2, !dbg !3822
  %call = call i32 @event_del(%struct.event* %event5), !dbg !3823
  %cmp6 = icmp eq i32 %call, -1, !dbg !3824
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !3825

if.then8:                                         ; preds = %if.end4
  store i1 false, i1* %retval, align 1, !dbg !3826
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3826

if.end9:                                          ; preds = %if.end4
  %8 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3827, !tbaa !964
  %event10 = getelementptr inbounds %struct.conn, %struct.conn* %8, i32 0, i32 2, !dbg !3828
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3829, !tbaa !964
  %sfd = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 0, !dbg !3830
  %10 = load i32, i32* %sfd, align 8, !dbg !3830, !tbaa !1275
  %11 = load i32, i32* %new_flags.addr, align 4, !dbg !3831, !tbaa !946
  %conv11 = trunc i32 %11 to i16, !dbg !3831
  %12 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3832, !tbaa !964
  %13 = bitcast %struct.conn* %12 to i8*, !dbg !3833
  call void @event_set(%struct.event* %event10, i32 %10, i16 signext %conv11, void (i32, i16, i8*)* @event_handler, i8* %13), !dbg !3834
  %14 = load %struct.event_base*, %struct.event_base** %base, align 8, !dbg !3835, !tbaa !964
  %15 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3836, !tbaa !964
  %event12 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 2, !dbg !3837
  %call13 = call i32 @event_base_set(%struct.event_base* %14, %struct.event* %event12), !dbg !3838
  %16 = load i32, i32* %new_flags.addr, align 4, !dbg !3839, !tbaa !946
  %conv14 = trunc i32 %16 to i16, !dbg !3839
  %17 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3840, !tbaa !964
  %ev_flags15 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 3, !dbg !3841
  store i16 %conv14, i16* %ev_flags15, align 8, !dbg !3842, !tbaa !1381
  %18 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3843, !tbaa !964
  %event16 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 2, !dbg !3845
  %call17 = call i32 @event_add(%struct.event* %event16, %struct.timeval* null), !dbg !3846
  %cmp18 = icmp eq i32 %call17, -1, !dbg !3847
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !3848

if.then20:                                        ; preds = %if.end9
  store i1 false, i1* %retval, align 1, !dbg !3849
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3849

if.end21:                                         ; preds = %if.end9
  store i1 true, i1* %retval, align 1, !dbg !3850
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3850

cleanup:                                          ; preds = %if.end21, %if.then20, %if.then8, %if.then3
  %19 = bitcast %struct.event_base** %base to i8*, !dbg !3851
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %19) #12, !dbg !3851
  %20 = load i1, i1* %retval, align 1, !dbg !3851
  ret i1 %20, !dbg !3851
}

; Function Attrs: nounwind
declare !dbg !615 dso_local i32 @listen(i32 %0, i32 %1) #3

declare !dbg !617 dso_local void @mt_item_remove(%struct._stritem* %0) #4

declare !dbg !618 dso_local zeroext i1 @mt_suffix_add_to_freelist(i8* %0) #4

declare !dbg !621 dso_local i32 @accept(i32 %0, %struct.sockaddr* %1, i32* %2) #4

declare !dbg !626 dso_local i32 @fcntl(i32 %0, i32 %1, ...) #4

; Function Attrs: nounwind uwtable
define internal i32 @try_read_command(%struct.conn* %c) #0 !dbg !3852 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.conn*, align 8
  %el = alloca i8*, align 8
  %cont = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %it = alloca %struct._stritem*, align 8
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !3856, metadata !DIExpression()), !dbg !3860
  %0 = bitcast i8** %el to i8*, !dbg !3861
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !3861
  call void @llvm.dbg.declare(metadata i8** %el, metadata !3857, metadata !DIExpression()), !dbg !3862
  %1 = bitcast i8** %cont to i8*, !dbg !3861
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !3861
  call void @llvm.dbg.declare(metadata i8** %cont, metadata !3858, metadata !DIExpression()), !dbg !3863
  %2 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3864, !tbaa !964
  %cmp = icmp ne %struct.conn* %2, null, !dbg !3864
  br i1 %cmp, label %if.then, label %if.else, !dbg !3867

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !3867

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1864, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__PRETTY_FUNCTION__.try_read_command, i64 0, i64 0)) #13, !dbg !3864
  unreachable, !dbg !3864

if.end:                                           ; preds = %if.then
  %3 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3868, !tbaa !964
  %rcurr = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 6, !dbg !3868
  %4 = load i8*, i8** %rcurr, align 8, !dbg !3868, !tbaa !1309
  %5 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3868, !tbaa !964
  %rbuf = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 5, !dbg !3868
  %6 = load i8*, i8** %rbuf, align 8, !dbg !3868, !tbaa !1065
  %7 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3868, !tbaa !964
  %rsize = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 7, !dbg !3868
  %8 = load i32, i32* %rsize, align 8, !dbg !3868, !tbaa !1090
  %idx.ext = sext i32 %8 to i64, !dbg !3868
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %idx.ext, !dbg !3868
  %cmp1 = icmp ule i8* %4, %add.ptr, !dbg !3868
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !3871

if.then2:                                         ; preds = %if.end
  br label %if.end4, !dbg !3871

if.else3:                                         ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1865, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__PRETTY_FUNCTION__.try_read_command, i64 0, i64 0)) #13, !dbg !3868
  unreachable, !dbg !3868

if.end4:                                          ; preds = %if.then2
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3872, !tbaa !964
  %rbytes = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 8, !dbg !3874
  %10 = load i32, i32* %rbytes, align 4, !dbg !3874, !tbaa !1297
  %cmp5 = icmp eq i32 %10, 0, !dbg !3875
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3876

if.then6:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !3877
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3877

if.end7:                                          ; preds = %if.end4
  %11 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3878, !tbaa !964
  %rcurr8 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 6, !dbg !3879
  %12 = load i8*, i8** %rcurr8, align 8, !dbg !3879, !tbaa !1309
  %13 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3880, !tbaa !964
  %rbytes9 = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 8, !dbg !3881
  %14 = load i32, i32* %rbytes9, align 4, !dbg !3881, !tbaa !1297
  %conv = sext i32 %14 to i64, !dbg !3880
  %call = call i8* @memchr(i8* %12, i32 10, i64 %conv) #15, !dbg !3882
  store i8* %call, i8** %el, align 8, !dbg !3883, !tbaa !964
  %15 = load i8*, i8** %el, align 8, !dbg !3884, !tbaa !964
  %tobool = icmp ne i8* %15, null, !dbg !3884
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !3886

if.then10:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !3887
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3887

if.end11:                                         ; preds = %if.end7
  %16 = load i8*, i8** %el, align 8, !dbg !3888, !tbaa !964
  %add.ptr12 = getelementptr inbounds i8, i8* %16, i64 1, !dbg !3889
  store i8* %add.ptr12, i8** %cont, align 8, !dbg !3890, !tbaa !964
  %17 = load i8*, i8** %el, align 8, !dbg !3891, !tbaa !964
  %18 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3893, !tbaa !964
  %rcurr13 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 6, !dbg !3894
  %19 = load i8*, i8** %rcurr13, align 8, !dbg !3894, !tbaa !1309
  %sub.ptr.lhs.cast = ptrtoint i8* %17 to i64, !dbg !3895
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !3895
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3895
  %cmp14 = icmp sgt i64 %sub.ptr.sub, 1, !dbg !3896
  br i1 %cmp14, label %land.lhs.true, label %if.end21, !dbg !3897

land.lhs.true:                                    ; preds = %if.end11
  %20 = load i8*, i8** %el, align 8, !dbg !3898, !tbaa !964
  %add.ptr16 = getelementptr inbounds i8, i8* %20, i64 -1, !dbg !3899
  %21 = load i8, i8* %add.ptr16, align 1, !dbg !3900, !tbaa !1825
  %conv17 = sext i8 %21 to i32, !dbg !3900
  %cmp18 = icmp eq i32 %conv17, 13, !dbg !3901
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !3902

if.then20:                                        ; preds = %land.lhs.true
  %22 = load i8*, i8** %el, align 8, !dbg !3903, !tbaa !964
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 -1, !dbg !3903
  store i8* %incdec.ptr, i8** %el, align 8, !dbg !3903, !tbaa !964
  br label %if.end21, !dbg !3905

if.end21:                                         ; preds = %if.then20, %land.lhs.true, %if.end11
  %23 = load i8*, i8** %el, align 8, !dbg !3906, !tbaa !964
  store i8 0, i8* %23, align 1, !dbg !3907, !tbaa !1825
  %24 = load i8*, i8** %cont, align 8, !dbg !3908, !tbaa !964
  %25 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3908, !tbaa !964
  %rcurr22 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 6, !dbg !3908
  %26 = load i8*, i8** %rcurr22, align 8, !dbg !3908, !tbaa !1309
  %27 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3908, !tbaa !964
  %rbytes23 = getelementptr inbounds %struct.conn, %struct.conn* %27, i32 0, i32 8, !dbg !3908
  %28 = load i32, i32* %rbytes23, align 4, !dbg !3908, !tbaa !1297
  %idx.ext24 = sext i32 %28 to i64, !dbg !3908
  %add.ptr25 = getelementptr inbounds i8, i8* %26, i64 %idx.ext24, !dbg !3908
  %cmp26 = icmp ule i8* %24, %add.ptr25, !dbg !3908
  br i1 %cmp26, label %if.then28, label %if.else29, !dbg !3911

if.then28:                                        ; preds = %if.end21
  br label %if.end30, !dbg !3911

if.else29:                                        ; preds = %if.end21
  call void @__assert_fail(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1881, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__PRETTY_FUNCTION__.try_read_command, i64 0, i64 0)) #13, !dbg !3908
  unreachable, !dbg !3908

if.end30:                                         ; preds = %if.then28
  %29 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3912, !tbaa !964
  %30 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3913, !tbaa !964
  %rcurr31 = getelementptr inbounds %struct.conn, %struct.conn* %30, i32 0, i32 6, !dbg !3914
  %31 = load i8*, i8** %rcurr31, align 8, !dbg !3914, !tbaa !1309
  call void @process_command(%struct.conn* %29, i8* %31), !dbg !3915
  %32 = load i8*, i8** %cont, align 8, !dbg !3916, !tbaa !964
  %33 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3917, !tbaa !964
  %rcurr32 = getelementptr inbounds %struct.conn, %struct.conn* %33, i32 0, i32 6, !dbg !3918
  %34 = load i8*, i8** %rcurr32, align 8, !dbg !3918, !tbaa !1309
  %sub.ptr.lhs.cast33 = ptrtoint i8* %32 to i64, !dbg !3919
  %sub.ptr.rhs.cast34 = ptrtoint i8* %34 to i64, !dbg !3919
  %sub.ptr.sub35 = sub i64 %sub.ptr.lhs.cast33, %sub.ptr.rhs.cast34, !dbg !3919
  %35 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3920, !tbaa !964
  %rbytes36 = getelementptr inbounds %struct.conn, %struct.conn* %35, i32 0, i32 8, !dbg !3921
  %36 = load i32, i32* %rbytes36, align 4, !dbg !3922, !tbaa !1297
  %conv37 = sext i32 %36 to i64, !dbg !3922
  %sub = sub nsw i64 %conv37, %sub.ptr.sub35, !dbg !3922
  %conv38 = trunc i64 %sub to i32, !dbg !3922
  store i32 %conv38, i32* %rbytes36, align 4, !dbg !3922, !tbaa !1297
  %37 = load i8*, i8** %cont, align 8, !dbg !3923, !tbaa !964
  %38 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3924, !tbaa !964
  %rcurr39 = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 6, !dbg !3925
  store i8* %37, i8** %rcurr39, align 8, !dbg !3926, !tbaa !1309
  %39 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3927, !tbaa !964
  %rcurr40 = getelementptr inbounds %struct.conn, %struct.conn* %39, i32 0, i32 6, !dbg !3927
  %40 = load i8*, i8** %rcurr40, align 8, !dbg !3927, !tbaa !1309
  %41 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3927, !tbaa !964
  %rbuf41 = getelementptr inbounds %struct.conn, %struct.conn* %41, i32 0, i32 5, !dbg !3927
  %42 = load i8*, i8** %rbuf41, align 8, !dbg !3927, !tbaa !1065
  %43 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3927, !tbaa !964
  %rsize42 = getelementptr inbounds %struct.conn, %struct.conn* %43, i32 0, i32 7, !dbg !3927
  %44 = load i32, i32* %rsize42, align 8, !dbg !3927, !tbaa !1090
  %idx.ext43 = sext i32 %44 to i64, !dbg !3927
  %add.ptr44 = getelementptr inbounds i8, i8* %42, i64 %idx.ext43, !dbg !3927
  %cmp45 = icmp ule i8* %40, %add.ptr44, !dbg !3927
  br i1 %cmp45, label %if.then47, label %if.else48, !dbg !3930

if.then47:                                        ; preds = %if.end30
  br label %if.end49, !dbg !3930

if.else48:                                        ; preds = %if.end30
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1889, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__PRETTY_FUNCTION__.try_read_command, i64 0, i64 0)) #13, !dbg !3927
  unreachable, !dbg !3927

if.end49:                                         ; preds = %if.then47
  %45 = bitcast %struct._stritem** %it to i8*, !dbg !3931
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #12, !dbg !3931
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !3859, metadata !DIExpression()), !dbg !3932
  %46 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3933, !tbaa !964
  %item_ptr = getelementptr inbounds %struct.conn, %struct.conn* %46, i32 0, i32 17, !dbg !3934
  %47 = load i8*, i8** %item_ptr, align 8, !dbg !3934, !tbaa !1357
  %48 = bitcast i8* %47 to %struct._stritem*, !dbg !3933
  store %struct._stritem* %48, %struct._stritem** %it, align 8, !dbg !3932, !tbaa !964
  store i32 1, i32* %retval, align 4, !dbg !3935
  store i32 1, i32* %cleanup.dest.slot, align 4
  %49 = bitcast %struct._stritem** %it to i8*, !dbg !3936
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #12, !dbg !3936
  br label %cleanup

cleanup:                                          ; preds = %if.end49, %if.then10, %if.then6
  %50 = bitcast i8** %cont to i8*, !dbg !3936
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #12, !dbg !3936
  %51 = bitcast i8** %el to i8*, !dbg !3936
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #12, !dbg !3936
  %52 = load i32, i32* %retval, align 4, !dbg !3936
  ret i32 %52, !dbg !3936
}

; Function Attrs: nounwind uwtable
define internal i32 @try_read_udp(%struct.conn* %c) #0 !dbg !3937 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.conn*, align 8
  %res = alloca i32, align 4
  %buf = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !3939, metadata !DIExpression()), !dbg !3944
  %0 = bitcast i32* %res to i8*, !dbg !3945
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !3945
  call void @llvm.dbg.declare(metadata i32* %res, metadata !3940, metadata !DIExpression()), !dbg !3946
  %1 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3947, !tbaa !964
  %cmp = icmp ne %struct.conn* %1, null, !dbg !3947
  br i1 %cmp, label %if.then, label %if.else, !dbg !3950

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !3950

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1905, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.try_read_udp, i64 0, i64 0)) #13, !dbg !3947
  unreachable, !dbg !3947

if.end:                                           ; preds = %if.then
  %2 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3951, !tbaa !964
  %request_addr_size = getelementptr inbounds %struct.conn, %struct.conn* %2, i32 0, i32 39, !dbg !3952
  store i32 16, i32* %request_addr_size, align 4, !dbg !3953, !tbaa !3954
  %3 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3955, !tbaa !964
  %sfd = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 0, !dbg !3956
  %4 = load i32, i32* %sfd, align 8, !dbg !3956, !tbaa !1275
  %5 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3957, !tbaa !964
  %rbuf = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 5, !dbg !3958
  %6 = load i8*, i8** %rbuf, align 8, !dbg !3958, !tbaa !1065
  %7 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3959, !tbaa !964
  %rsize = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 7, !dbg !3960
  %8 = load i32, i32* %rsize, align 8, !dbg !3960, !tbaa !1090
  %conv = sext i32 %8 to i64, !dbg !3959
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3961, !tbaa !964
  %request_addr = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 38, !dbg !3962
  %10 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3963, !tbaa !964
  %request_addr_size1 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 39, !dbg !3964
  %call = call i64 @recvfrom(i32 %4, i8* %6, i64 %conv, i32 0, %struct.sockaddr* %request_addr, i32* %request_addr_size1), !dbg !3965
  %conv2 = trunc i64 %call to i32, !dbg !3965
  store i32 %conv2, i32* %res, align 4, !dbg !3966, !tbaa !946
  %11 = load i32, i32* %res, align 4, !dbg !3967, !tbaa !946
  %cmp3 = icmp sgt i32 %11, 8, !dbg !3968
  br i1 %cmp3, label %if.then5, label %if.end27, !dbg !3969

if.then5:                                         ; preds = %if.end
  %12 = bitcast i8** %buf to i8*, !dbg !3970
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #12, !dbg !3970
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3941, metadata !DIExpression()), !dbg !3971
  %13 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3972, !tbaa !964
  %rbuf6 = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 5, !dbg !3973
  %14 = load i8*, i8** %rbuf6, align 8, !dbg !3973, !tbaa !1065
  store i8* %14, i8** %buf, align 8, !dbg !3971, !tbaa !964
  call void @mt_stats_lock(), !dbg !3974
  %15 = load i32, i32* %res, align 4, !dbg !3975, !tbaa !946
  %conv7 = sext i32 %15 to i64, !dbg !3975
  %16 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 12), align 8, !dbg !3976, !tbaa !3351
  %add = add i64 %16, %conv7, !dbg !3976
  store i64 %add, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 12), align 8, !dbg !3976, !tbaa !3351
  call void @mt_stats_unlock(), !dbg !3977
  %17 = load i8*, i8** %buf, align 8, !dbg !3978, !tbaa !964
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 0, !dbg !3978
  %18 = load i8, i8* %arrayidx, align 1, !dbg !3978, !tbaa !1825
  %conv8 = zext i8 %18 to i32, !dbg !3978
  %mul = mul nsw i32 %conv8, 256, !dbg !3979
  %19 = load i8*, i8** %buf, align 8, !dbg !3980, !tbaa !964
  %arrayidx9 = getelementptr inbounds i8, i8* %19, i64 1, !dbg !3980
  %20 = load i8, i8* %arrayidx9, align 1, !dbg !3980, !tbaa !1825
  %conv10 = zext i8 %20 to i32, !dbg !3980
  %add11 = add nsw i32 %mul, %conv10, !dbg !3981
  %21 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3982, !tbaa !964
  %request_id = getelementptr inbounds %struct.conn, %struct.conn* %21, i32 0, i32 37, !dbg !3983
  store i32 %add11, i32* %request_id, align 8, !dbg !3984, !tbaa !3985
  %22 = load i8*, i8** %buf, align 8, !dbg !3986, !tbaa !964
  %arrayidx12 = getelementptr inbounds i8, i8* %22, i64 4, !dbg !3986
  %23 = load i8, i8* %arrayidx12, align 1, !dbg !3986, !tbaa !1825
  %conv13 = zext i8 %23 to i32, !dbg !3986
  %cmp14 = icmp ne i32 %conv13, 0, !dbg !3988
  br i1 %cmp14, label %if.then20, label %lor.lhs.false, !dbg !3989

lor.lhs.false:                                    ; preds = %if.then5
  %24 = load i8*, i8** %buf, align 8, !dbg !3990, !tbaa !964
  %arrayidx16 = getelementptr inbounds i8, i8* %24, i64 5, !dbg !3990
  %25 = load i8, i8* %arrayidx16, align 1, !dbg !3990, !tbaa !1825
  %conv17 = zext i8 %25 to i32, !dbg !3990
  %cmp18 = icmp ne i32 %conv17, 1, !dbg !3991
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !3992

if.then20:                                        ; preds = %lor.lhs.false, %if.then5
  %26 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3993, !tbaa !964
  call void @out_string(%struct.conn* %26, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.142, i64 0, i64 0)), !dbg !3995
  store i32 0, i32* %retval, align 4, !dbg !3996
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3996

if.end21:                                         ; preds = %lor.lhs.false
  %27 = load i32, i32* %res, align 4, !dbg !3997, !tbaa !946
  %sub = sub nsw i32 %27, 8, !dbg !3997
  store i32 %sub, i32* %res, align 4, !dbg !3997, !tbaa !946
  %28 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !3998, !tbaa !964
  %rbuf22 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 5, !dbg !3999
  %29 = load i8*, i8** %rbuf22, align 8, !dbg !3999, !tbaa !1065
  %30 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4000, !tbaa !964
  %rbuf23 = getelementptr inbounds %struct.conn, %struct.conn* %30, i32 0, i32 5, !dbg !4001
  %31 = load i8*, i8** %rbuf23, align 8, !dbg !4001, !tbaa !1065
  %add.ptr = getelementptr inbounds i8, i8* %31, i64 8, !dbg !4002
  %32 = load i32, i32* %res, align 4, !dbg !4003, !tbaa !946
  %conv24 = sext i32 %32 to i64, !dbg !4003
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %add.ptr, i64 %conv24, i1 false), !dbg !4004
  %33 = load i32, i32* %res, align 4, !dbg !4005, !tbaa !946
  %34 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4006, !tbaa !964
  %rbytes = getelementptr inbounds %struct.conn, %struct.conn* %34, i32 0, i32 8, !dbg !4007
  %35 = load i32, i32* %rbytes, align 4, !dbg !4008, !tbaa !1297
  %add25 = add nsw i32 %35, %33, !dbg !4008
  store i32 %add25, i32* %rbytes, align 4, !dbg !4008, !tbaa !1297
  %36 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4009, !tbaa !964
  %rbuf26 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 5, !dbg !4010
  %37 = load i8*, i8** %rbuf26, align 8, !dbg !4010, !tbaa !1065
  %38 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4011, !tbaa !964
  %rcurr = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 6, !dbg !4012
  store i8* %37, i8** %rcurr, align 8, !dbg !4013, !tbaa !1309
  store i32 1, i32* %retval, align 4, !dbg !4014
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4014

cleanup:                                          ; preds = %if.end21, %if.then20
  %39 = bitcast i8** %buf to i8*, !dbg !4015
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #12, !dbg !4015
  br label %cleanup28

if.end27:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4016
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup28, !dbg !4016

cleanup28:                                        ; preds = %if.end27, %cleanup
  %40 = bitcast i32* %res to i8*, !dbg !4017
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %40) #12, !dbg !4017
  %41 = load i32, i32* %retval, align 4, !dbg !4017
  ret i32 %41, !dbg !4017
}

; Function Attrs: nounwind uwtable
define internal i32 @try_read_network(%struct.conn* %c) #0 !dbg !4018 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.conn*, align 8
  %gotdata = alloca i32, align 4
  %res = alloca i32, align 4
  %new_rbuf = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !4020, metadata !DIExpression()), !dbg !4027
  %0 = bitcast i32* %gotdata to i8*, !dbg !4028
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !4028
  call void @llvm.dbg.declare(metadata i32* %gotdata, metadata !4021, metadata !DIExpression()), !dbg !4029
  store i32 0, i32* %gotdata, align 4, !dbg !4029, !tbaa !946
  %1 = bitcast i32* %res to i8*, !dbg !4030
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #12, !dbg !4030
  call void @llvm.dbg.declare(metadata i32* %res, metadata !4022, metadata !DIExpression()), !dbg !4031
  %2 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4032, !tbaa !964
  %cmp = icmp ne %struct.conn* %2, null, !dbg !4032
  br i1 %cmp, label %if.then, label %if.else, !dbg !4035

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4035

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1947, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__PRETTY_FUNCTION__.try_read_network, i64 0, i64 0)) #13, !dbg !4032
  unreachable, !dbg !4032

if.end:                                           ; preds = %if.then
  %3 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4036, !tbaa !964
  %rcurr = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 6, !dbg !4038
  %4 = load i8*, i8** %rcurr, align 8, !dbg !4038, !tbaa !1309
  %5 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4039, !tbaa !964
  %rbuf = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 5, !dbg !4040
  %6 = load i8*, i8** %rbuf, align 8, !dbg !4040, !tbaa !1065
  %cmp1 = icmp ne i8* %4, %6, !dbg !4041
  br i1 %cmp1, label %if.then2, label %if.end11, !dbg !4042

if.then2:                                         ; preds = %if.end
  %7 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4043, !tbaa !964
  %rbytes = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 8, !dbg !4046
  %8 = load i32, i32* %rbytes, align 4, !dbg !4046, !tbaa !1297
  %cmp3 = icmp ne i32 %8, 0, !dbg !4047
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !4048

if.then4:                                         ; preds = %if.then2
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4049, !tbaa !964
  %rbuf5 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 5, !dbg !4050
  %10 = load i8*, i8** %rbuf5, align 8, !dbg !4050, !tbaa !1065
  %11 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4051, !tbaa !964
  %rcurr6 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 6, !dbg !4052
  %12 = load i8*, i8** %rcurr6, align 8, !dbg !4052, !tbaa !1309
  %13 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4053, !tbaa !964
  %rbytes7 = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 8, !dbg !4054
  %14 = load i32, i32* %rbytes7, align 4, !dbg !4054, !tbaa !1297
  %conv = sext i32 %14 to i64, !dbg !4053
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %12, i64 %conv, i1 false), !dbg !4055
  br label %if.end8, !dbg !4055

if.end8:                                          ; preds = %if.then4, %if.then2
  %15 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4056, !tbaa !964
  %rbuf9 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 5, !dbg !4057
  %16 = load i8*, i8** %rbuf9, align 8, !dbg !4057, !tbaa !1065
  %17 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4058, !tbaa !964
  %rcurr10 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 6, !dbg !4059
  store i8* %16, i8** %rcurr10, align 8, !dbg !4060, !tbaa !1309
  br label %if.end11, !dbg !4061

if.end11:                                         ; preds = %if.end8, %if.end
  br label %while.cond, !dbg !4062

while.cond:                                       ; preds = %if.end66, %if.then46, %if.end11
  br label %while.body, !dbg !4062

while.body:                                       ; preds = %while.cond
  %18 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4063, !tbaa !964
  %rbytes12 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 8, !dbg !4064
  %19 = load i32, i32* %rbytes12, align 4, !dbg !4064, !tbaa !1297
  %20 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4065, !tbaa !964
  %rsize = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 7, !dbg !4066
  %21 = load i32, i32* %rsize, align 8, !dbg !4066, !tbaa !1090
  %cmp13 = icmp sge i32 %19, %21, !dbg !4067
  br i1 %cmp13, label %if.then15, label %if.end31, !dbg !4068

if.then15:                                        ; preds = %while.body
  %22 = bitcast i8** %new_rbuf to i8*, !dbg !4069
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #12, !dbg !4069
  call void @llvm.dbg.declare(metadata i8** %new_rbuf, metadata !4023, metadata !DIExpression()), !dbg !4070
  %23 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4071, !tbaa !964
  %rbuf16 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 5, !dbg !4072
  %24 = load i8*, i8** %rbuf16, align 8, !dbg !4072, !tbaa !1065
  %25 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4073, !tbaa !964
  %rsize17 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 7, !dbg !4074
  %26 = load i32, i32* %rsize17, align 8, !dbg !4074, !tbaa !1090
  %mul = mul nsw i32 %26, 2, !dbg !4075
  %conv18 = sext i32 %mul to i64, !dbg !4073
  %call = call i8* @realloc(i8* %24, i64 %conv18) #12, !dbg !4076
  store i8* %call, i8** %new_rbuf, align 8, !dbg !4070, !tbaa !964
  %27 = load i8*, i8** %new_rbuf, align 8, !dbg !4077, !tbaa !964
  %tobool = icmp ne i8* %27, null, !dbg !4077
  br i1 %tobool, label %if.end26, label %if.then19, !dbg !4079

if.then19:                                        ; preds = %if.then15
  %28 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !4080, !tbaa !1246
  %cmp20 = icmp sgt i32 %28, 0, !dbg !4083
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !4084

if.then22:                                        ; preds = %if.then19
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4085, !tbaa !964
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.143, i64 0, i64 0)), !dbg !4086
  br label %if.end24, !dbg !4086

if.end24:                                         ; preds = %if.then22, %if.then19
  %30 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4087, !tbaa !964
  %rbytes25 = getelementptr inbounds %struct.conn, %struct.conn* %30, i32 0, i32 8, !dbg !4088
  store i32 0, i32* %rbytes25, align 4, !dbg !4089, !tbaa !1297
  %31 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4090, !tbaa !964
  call void @out_string(%struct.conn* %31, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)), !dbg !4091
  %32 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4092, !tbaa !964
  %write_and_go = getelementptr inbounds %struct.conn, %struct.conn* %32, i32 0, i32 13, !dbg !4093
  store i32 5, i32* %write_and_go, align 8, !dbg !4094, !tbaa !1349
  store i32 1, i32* %retval, align 4, !dbg !4095
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4095

if.end26:                                         ; preds = %if.then15
  %33 = load i8*, i8** %new_rbuf, align 8, !dbg !4096, !tbaa !964
  %34 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4097, !tbaa !964
  %rbuf27 = getelementptr inbounds %struct.conn, %struct.conn* %34, i32 0, i32 5, !dbg !4098
  store i8* %33, i8** %rbuf27, align 8, !dbg !4099, !tbaa !1065
  %35 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4100, !tbaa !964
  %rcurr28 = getelementptr inbounds %struct.conn, %struct.conn* %35, i32 0, i32 6, !dbg !4101
  store i8* %33, i8** %rcurr28, align 8, !dbg !4102, !tbaa !1309
  %36 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4103, !tbaa !964
  %rsize29 = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 7, !dbg !4104
  %37 = load i32, i32* %rsize29, align 8, !dbg !4105, !tbaa !1090
  %mul30 = mul nsw i32 %37, 2, !dbg !4105
  store i32 %mul30, i32* %rsize29, align 8, !dbg !4105, !tbaa !1090
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !4106
  br label %cleanup, !dbg !4106

cleanup:                                          ; preds = %if.end26, %if.end24
  %38 = bitcast i8** %new_rbuf to i8*, !dbg !4106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %38) #12, !dbg !4106
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup67 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end31, !dbg !4107

if.end31:                                         ; preds = %cleanup.cont, %while.body
  %39 = load i8*, i8** getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 9), align 8, !dbg !4108, !tbaa !2254
  %tobool32 = icmp ne i8* %39, null, !dbg !4110
  br i1 %tobool32, label %if.else34, label %if.then33, !dbg !4111

if.then33:                                        ; preds = %if.end31
  %40 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4112, !tbaa !964
  %request_addr_size = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 39, !dbg !4114
  store i32 16, i32* %request_addr_size, align 4, !dbg !4115, !tbaa !3954
  br label %if.end36, !dbg !4116

if.else34:                                        ; preds = %if.end31
  %41 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4117, !tbaa !964
  %request_addr_size35 = getelementptr inbounds %struct.conn, %struct.conn* %41, i32 0, i32 39, !dbg !4119
  store i32 0, i32* %request_addr_size35, align 4, !dbg !4120, !tbaa !3954
  br label %if.end36

if.end36:                                         ; preds = %if.else34, %if.then33
  %42 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4121, !tbaa !964
  %sfd = getelementptr inbounds %struct.conn, %struct.conn* %42, i32 0, i32 0, !dbg !4122
  %43 = load i32, i32* %sfd, align 8, !dbg !4122, !tbaa !1275
  %44 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4123, !tbaa !964
  %rbuf37 = getelementptr inbounds %struct.conn, %struct.conn* %44, i32 0, i32 5, !dbg !4124
  %45 = load i8*, i8** %rbuf37, align 8, !dbg !4124, !tbaa !1065
  %46 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4125, !tbaa !964
  %rbytes38 = getelementptr inbounds %struct.conn, %struct.conn* %46, i32 0, i32 8, !dbg !4126
  %47 = load i32, i32* %rbytes38, align 4, !dbg !4126, !tbaa !1297
  %idx.ext = sext i32 %47 to i64, !dbg !4127
  %add.ptr = getelementptr inbounds i8, i8* %45, i64 %idx.ext, !dbg !4127
  %48 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4128, !tbaa !964
  %rsize39 = getelementptr inbounds %struct.conn, %struct.conn* %48, i32 0, i32 7, !dbg !4129
  %49 = load i32, i32* %rsize39, align 8, !dbg !4129, !tbaa !1090
  %50 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4130, !tbaa !964
  %rbytes40 = getelementptr inbounds %struct.conn, %struct.conn* %50, i32 0, i32 8, !dbg !4131
  %51 = load i32, i32* %rbytes40, align 4, !dbg !4131, !tbaa !1297
  %sub = sub nsw i32 %49, %51, !dbg !4132
  %conv41 = sext i32 %sub to i64, !dbg !4128
  %call42 = call i64 @read(i32 %43, i8* %add.ptr, i64 %conv41), !dbg !4133
  %conv43 = trunc i64 %call42 to i32, !dbg !4133
  store i32 %conv43, i32* %res, align 4, !dbg !4134, !tbaa !946
  %52 = load i32, i32* %res, align 4, !dbg !4135, !tbaa !946
  %cmp44 = icmp sgt i32 %52, 0, !dbg !4137
  br i1 %cmp44, label %if.then46, label %if.end50, !dbg !4138

if.then46:                                        ; preds = %if.end36
  call void @mt_stats_lock(), !dbg !4139
  %53 = load i32, i32* %res, align 4, !dbg !4141, !tbaa !946
  %conv47 = sext i32 %53 to i64, !dbg !4141
  %54 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 12), align 8, !dbg !4142, !tbaa !3351
  %add = add i64 %54, %conv47, !dbg !4142
  store i64 %add, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 12), align 8, !dbg !4142, !tbaa !3351
  call void @mt_stats_unlock(), !dbg !4143
  store i32 1, i32* %gotdata, align 4, !dbg !4144, !tbaa !946
  %55 = load i32, i32* %res, align 4, !dbg !4145, !tbaa !946
  %56 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4146, !tbaa !964
  %rbytes48 = getelementptr inbounds %struct.conn, %struct.conn* %56, i32 0, i32 8, !dbg !4147
  %57 = load i32, i32* %rbytes48, align 4, !dbg !4148, !tbaa !1297
  %add49 = add nsw i32 %57, %55, !dbg !4148
  store i32 %add49, i32* %rbytes48, align 4, !dbg !4148, !tbaa !1297
  br label %while.cond, !dbg !4149, !llvm.loop !4150

if.end50:                                         ; preds = %if.end36
  %58 = load i32, i32* %res, align 4, !dbg !4152, !tbaa !946
  %cmp51 = icmp eq i32 %58, 0, !dbg !4154
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !4155

if.then53:                                        ; preds = %if.end50
  %59 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4156, !tbaa !964
  call void @conn_set_state(%struct.conn* %59, i32 5), !dbg !4158
  store i32 1, i32* %retval, align 4, !dbg !4159
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !4159

if.end54:                                         ; preds = %if.end50
  %60 = load i32, i32* %res, align 4, !dbg !4160, !tbaa !946
  %cmp55 = icmp eq i32 %60, -1, !dbg !4162
  br i1 %cmp55, label %if.then57, label %if.end66, !dbg !4163

if.then57:                                        ; preds = %if.end54
  %call58 = call i32* @__errno_location() #14, !dbg !4164
  %61 = load i32, i32* %call58, align 4, !dbg !4164, !tbaa !946
  %cmp59 = icmp eq i32 %61, 11, !dbg !4167
  br i1 %cmp59, label %if.then64, label %lor.lhs.false, !dbg !4168

lor.lhs.false:                                    ; preds = %if.then57
  %call61 = call i32* @__errno_location() #14, !dbg !4169
  %62 = load i32, i32* %call61, align 4, !dbg !4169, !tbaa !946
  %cmp62 = icmp eq i32 %62, 11, !dbg !4170
  br i1 %cmp62, label %if.then64, label %if.else65, !dbg !4171

if.then64:                                        ; preds = %lor.lhs.false, %if.then57
  br label %while.end, !dbg !4172

if.else65:                                        ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !4173
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !4173

if.end66:                                         ; preds = %if.end54
  br label %while.cond, !dbg !4062, !llvm.loop !4150

while.end:                                        ; preds = %if.then64
  %63 = load i32, i32* %gotdata, align 4, !dbg !4174, !tbaa !946
  store i32 %63, i32* %retval, align 4, !dbg !4175
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup67, !dbg !4175

cleanup67:                                        ; preds = %while.end, %if.else65, %if.then53, %cleanup
  %64 = bitcast i32* %res to i8*, !dbg !4176
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %64) #12, !dbg !4176
  %65 = bitcast i32* %gotdata to i8*, !dbg !4176
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %65) #12, !dbg !4176
  %66 = load i32, i32* %retval, align 4, !dbg !4176
  ret i32 %66, !dbg !4176
}

; Function Attrs: nounwind uwtable
define internal void @conn_set_state(%struct.conn* %c, i32 %state) #0 !dbg !4177 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %state.addr = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !4181, metadata !DIExpression()), !dbg !4183
  store i32 %state, i32* %state.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !4182, metadata !DIExpression()), !dbg !4184
  %0 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4185, !tbaa !964
  %cmp = icmp ne %struct.conn* %0, null, !dbg !4185
  br i1 %cmp, label %if.then, label %if.else, !dbg !4188

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4188

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 554, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__PRETTY_FUNCTION__.conn_set_state, i64 0, i64 0)) #13, !dbg !4185
  unreachable, !dbg !4185

if.end:                                           ; preds = %if.then
  %1 = load i32, i32* %state.addr, align 4, !dbg !4189, !tbaa !946
  %2 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4191, !tbaa !964
  %state1 = getelementptr inbounds %struct.conn, %struct.conn* %2, i32 0, i32 1, !dbg !4192
  %3 = load i32, i32* %state1, align 4, !dbg !4192, !tbaa !1285
  %cmp2 = icmp ne i32 %1, %3, !dbg !4193
  br i1 %cmp2, label %if.then3, label %if.end8, !dbg !4194

if.then3:                                         ; preds = %if.end
  %4 = load i32, i32* %state.addr, align 4, !dbg !4195, !tbaa !946
  %cmp4 = icmp eq i32 %4, 1, !dbg !4198
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4199

if.then5:                                         ; preds = %if.then3
  %5 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4200, !tbaa !964
  call void @conn_shrink(%struct.conn* %5), !dbg !4202
  br label %if.end6, !dbg !4203

if.end6:                                          ; preds = %if.then5, %if.then3
  %6 = load i32, i32* %state.addr, align 4, !dbg !4204, !tbaa !946
  %7 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4205, !tbaa !964
  %state7 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 1, !dbg !4206
  store i32 %6, i32* %state7, align 4, !dbg !4207, !tbaa !1285
  br label %if.end8, !dbg !4208

if.end8:                                          ; preds = %if.end6, %if.end
  ret void, !dbg !4209
}

; Function Attrs: nounwind uwtable
define internal void @complete_nread(%struct.conn* %c) #0 !dbg !4210 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %it = alloca %struct._stritem*, align 8
  %comm = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !4212, metadata !DIExpression()), !dbg !4216
  %0 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4217, !tbaa !964
  %cmp = icmp ne %struct.conn* %0, null, !dbg !4217
  br i1 %cmp, label %if.then, label %if.else, !dbg !4220

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4220

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 780, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__PRETTY_FUNCTION__.complete_nread, i64 0, i64 0)) #13, !dbg !4217
  unreachable, !dbg !4217

if.end:                                           ; preds = %if.then
  %1 = bitcast %struct._stritem** %it to i8*, !dbg !4221
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !4221
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !4213, metadata !DIExpression()), !dbg !4222
  %2 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4223, !tbaa !964
  %item_ptr = getelementptr inbounds %struct.conn, %struct.conn* %2, i32 0, i32 17, !dbg !4224
  %3 = load i8*, i8** %item_ptr, align 8, !dbg !4224, !tbaa !1357
  %4 = bitcast i8* %3 to %struct._stritem*, !dbg !4223
  store %struct._stritem* %4, %struct._stritem** %it, align 8, !dbg !4222, !tbaa !964
  %5 = bitcast i32* %comm to i8*, !dbg !4225
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #12, !dbg !4225
  call void @llvm.dbg.declare(metadata i32* %comm, metadata !4214, metadata !DIExpression()), !dbg !4226
  %6 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4227, !tbaa !964
  %item_comm = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 18, !dbg !4228
  %7 = load i32, i32* %item_comm, align 8, !dbg !4228, !tbaa !4229
  store i32 %7, i32* %comm, align 4, !dbg !4226, !tbaa !946
  %8 = bitcast i32* %ret to i8*, !dbg !4230
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #12, !dbg !4230
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4215, metadata !DIExpression()), !dbg !4231
  call void @mt_stats_lock(), !dbg !4232
  %9 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 7), align 8, !dbg !4233, !tbaa !4234
  %inc = add i64 %9, 1, !dbg !4233
  store i64 %inc, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 7), align 8, !dbg !4233, !tbaa !4234
  call void @mt_stats_unlock(), !dbg !4235
  %10 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !4236, !tbaa !964
  %end = getelementptr inbounds %struct._stritem, %struct._stritem* %10, i32 0, i32 12, !dbg !4236
  %arrayidx = getelementptr inbounds [8 x i8*], [8 x i8*]* %end, i64 0, i64 0, !dbg !4236
  %11 = bitcast i8** %arrayidx to i8*, !dbg !4236
  %12 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !4236, !tbaa !964
  %nkey = getelementptr inbounds %struct._stritem, %struct._stritem* %12, i32 0, i32 10, !dbg !4236
  %13 = load i8, i8* %nkey, align 1, !dbg !4236, !tbaa !1595
  %conv = zext i8 %13 to i32, !dbg !4236
  %idx.ext = sext i32 %conv to i64, !dbg !4236
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !4236
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !4236
  %14 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !4236, !tbaa !964
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %14, i32 0, i32 7, !dbg !4236
  %15 = load i8, i8* %nsuffix, align 2, !dbg !4236, !tbaa !1725
  %conv2 = zext i8 %15 to i32, !dbg !4236
  %idx.ext3 = sext i32 %conv2 to i64, !dbg !4236
  %add.ptr4 = getelementptr inbounds i8, i8* %add.ptr1, i64 %idx.ext3, !dbg !4236
  %16 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !4238, !tbaa !964
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %16, i32 0, i32 5, !dbg !4239
  %17 = bitcast i32* %nbytes to i8*, !dbg !4239
  %18 = load i32, i32* %nbytes, align 8, !dbg !4239, !tbaa !1706
  %idx.ext5 = sext i32 %18 to i64, !dbg !4240
  %add.ptr6 = getelementptr inbounds i8, i8* %add.ptr4, i64 %idx.ext5, !dbg !4240
  %add.ptr7 = getelementptr inbounds i8, i8* %add.ptr6, i64 -2, !dbg !4241
  %call = call i32 @strncmp(i8* %add.ptr7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 2) #15, !dbg !4242
  %cmp8 = icmp ne i32 %call, 0, !dbg !4243
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !4244

if.then10:                                        ; preds = %if.end
  %19 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4245, !tbaa !964
  call void @out_string(%struct.conn* %19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.144, i64 0, i64 0)), !dbg !4247
  br label %if.end28, !dbg !4248

if.else11:                                        ; preds = %if.end
  %20 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !4249, !tbaa !964
  %21 = load i32, i32* %comm, align 4, !dbg !4249, !tbaa !946
  %call12 = call i32 @mt_store_item(%struct._stritem* %20, i32 %21), !dbg !4249
  store i32 %call12, i32* %ret, align 4, !dbg !4251, !tbaa !946
  %22 = load i32, i32* %ret, align 4, !dbg !4252, !tbaa !946
  %cmp13 = icmp eq i32 %22, 1, !dbg !4254
  br i1 %cmp13, label %if.then15, label %if.else16, !dbg !4255

if.then15:                                        ; preds = %if.else11
  %23 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4256, !tbaa !964
  call void @out_string(%struct.conn* %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.145, i64 0, i64 0)), !dbg !4257
  br label %if.end27, !dbg !4257

if.else16:                                        ; preds = %if.else11
  %24 = load i32, i32* %ret, align 4, !dbg !4258, !tbaa !946
  %cmp17 = icmp eq i32 %24, 2, !dbg !4260
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !4261

if.then19:                                        ; preds = %if.else16
  %25 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4262, !tbaa !964
  call void @out_string(%struct.conn* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i64 0, i64 0)), !dbg !4263
  br label %if.end26, !dbg !4263

if.else20:                                        ; preds = %if.else16
  %26 = load i32, i32* %ret, align 4, !dbg !4264, !tbaa !946
  %cmp21 = icmp eq i32 %26, 3, !dbg !4266
  br i1 %cmp21, label %if.then23, label %if.else24, !dbg !4267

if.then23:                                        ; preds = %if.else20
  %27 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4268, !tbaa !964
  call void @out_string(%struct.conn* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.93, i64 0, i64 0)), !dbg !4269
  br label %if.end25, !dbg !4269

if.else24:                                        ; preds = %if.else20
  %28 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4270, !tbaa !964
  call void @out_string(%struct.conn* %28, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.147, i64 0, i64 0)), !dbg !4271
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then23
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then19
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then15
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then10
  %29 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4272, !tbaa !964
  %item_ptr29 = getelementptr inbounds %struct.conn, %struct.conn* %29, i32 0, i32 17, !dbg !4272
  %30 = load i8*, i8** %item_ptr29, align 8, !dbg !4272, !tbaa !1357
  %31 = bitcast i8* %30 to %struct._stritem*, !dbg !4272
  call void @mt_item_remove(%struct._stritem* %31), !dbg !4272
  %32 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4273, !tbaa !964
  %item_ptr30 = getelementptr inbounds %struct.conn, %struct.conn* %32, i32 0, i32 17, !dbg !4274
  store i8* null, i8** %item_ptr30, align 8, !dbg !4275, !tbaa !1357
  %33 = bitcast i32* %ret to i8*, !dbg !4276
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %33) #12, !dbg !4276
  %34 = bitcast i32* %comm to i8*, !dbg !4276
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %34) #12, !dbg !4276
  %35 = bitcast %struct._stritem** %it to i8*, !dbg !4276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #12, !dbg !4276
  ret void, !dbg !4276
}

declare !dbg !630 dso_local i64 @read(i32 %0, i8* %1, i64 %2) #4

; Function Attrs: nounwind uwtable
define internal i32 @add_iov(%struct.conn* %c, i8* %buf, i32 %len) #0 !dbg !4277 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.conn*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %m = alloca %struct.msghdr*, align 8
  %leftover = alloca i32, align 4
  %limit_to_mtu = alloca i8, align 1
  %cleanup.dest.slot = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !4281, metadata !DIExpression()), !dbg !4287
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4282, metadata !DIExpression()), !dbg !4288
  store i32 %len, i32* %len.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !4283, metadata !DIExpression()), !dbg !4289
  %0 = bitcast %struct.msghdr** %m to i8*, !dbg !4290
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !4290
  call void @llvm.dbg.declare(metadata %struct.msghdr** %m, metadata !4284, metadata !DIExpression()), !dbg !4291
  %1 = bitcast i32* %leftover to i8*, !dbg !4292
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #12, !dbg !4292
  call void @llvm.dbg.declare(metadata i32* %leftover, metadata !4285, metadata !DIExpression()), !dbg !4293
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %limit_to_mtu) #12, !dbg !4294
  call void @llvm.dbg.declare(metadata i8* %limit_to_mtu, metadata !4286, metadata !DIExpression()), !dbg !4295
  %2 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4296, !tbaa !964
  %cmp = icmp ne %struct.conn* %2, null, !dbg !4296
  br i1 %cmp, label %if.then, label %if.else, !dbg !4299

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4299

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 664, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__PRETTY_FUNCTION__.add_iov, i64 0, i64 0)) #13, !dbg !4296
  unreachable, !dbg !4296

if.end:                                           ; preds = %if.then
  br label %do.body, !dbg !4300

do.body:                                          ; preds = %do.cond, %if.end
  %3 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4301, !tbaa !964
  %msglist = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 23, !dbg !4303
  %4 = load %struct.msghdr*, %struct.msghdr** %msglist, align 8, !dbg !4303, !tbaa !1081
  %5 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4304, !tbaa !964
  %msgused = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 25, !dbg !4305
  %6 = load i32, i32* %msgused, align 4, !dbg !4305, !tbaa !1345
  %sub = sub nsw i32 %6, 1, !dbg !4306
  %idxprom = sext i32 %sub to i64, !dbg !4301
  %arrayidx = getelementptr inbounds %struct.msghdr, %struct.msghdr* %4, i64 %idxprom, !dbg !4301
  store %struct.msghdr* %arrayidx, %struct.msghdr** %m, align 8, !dbg !4307, !tbaa !964
  %7 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4308, !tbaa !964
  %udp = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 36, !dbg !4309
  %8 = load i8, i8* %udp, align 4, !dbg !4309, !tbaa !1280, !range !1262
  %tobool = trunc i8 %8 to i1, !dbg !4309
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !4310

lor.rhs:                                          ; preds = %do.body
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4311, !tbaa !964
  %msgused1 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 25, !dbg !4312
  %10 = load i32, i32* %msgused1, align 4, !dbg !4312, !tbaa !1345
  %cmp2 = icmp eq i32 1, %10, !dbg !4313
  br label %lor.end, !dbg !4310

lor.end:                                          ; preds = %lor.rhs, %do.body
  %11 = phi i1 [ true, %do.body ], [ %cmp2, %lor.rhs ]
  %frombool = zext i1 %11 to i8, !dbg !4314
  store i8 %frombool, i8* %limit_to_mtu, align 1, !dbg !4314, !tbaa !1031
  %12 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4315, !tbaa !964
  %msg_iovlen = getelementptr inbounds %struct.msghdr, %struct.msghdr* %12, i32 0, i32 3, !dbg !4317
  %13 = load i64, i64* %msg_iovlen, align 8, !dbg !4317, !tbaa !4318
  %cmp3 = icmp eq i64 %13, 1024, !dbg !4320
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !4321

lor.lhs.false:                                    ; preds = %lor.end
  %14 = load i8, i8* %limit_to_mtu, align 1, !dbg !4322, !tbaa !1031, !range !1262
  %tobool4 = trunc i8 %14 to i1, !dbg !4322
  br i1 %tobool4, label %land.lhs.true, label %if.end12, !dbg !4323

land.lhs.true:                                    ; preds = %lor.lhs.false
  %15 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4324, !tbaa !964
  %msgbytes = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 27, !dbg !4325
  %16 = load i32, i32* %msgbytes, align 4, !dbg !4325, !tbaa !4326
  %cmp5 = icmp sge i32 %16, 1400, !dbg !4327
  br i1 %cmp5, label %if.then6, label %if.end12, !dbg !4328

if.then6:                                         ; preds = %land.lhs.true, %lor.end
  %17 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4329, !tbaa !964
  %call = call i32 @add_msghdr(%struct.conn* %17), !dbg !4331
  %18 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4332, !tbaa !964
  %msglist7 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 23, !dbg !4333
  %19 = load %struct.msghdr*, %struct.msghdr** %msglist7, align 8, !dbg !4333, !tbaa !1081
  %20 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4334, !tbaa !964
  %msgused8 = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 25, !dbg !4335
  %21 = load i32, i32* %msgused8, align 4, !dbg !4335, !tbaa !1345
  %sub9 = sub nsw i32 %21, 1, !dbg !4336
  %idxprom10 = sext i32 %sub9 to i64, !dbg !4332
  %arrayidx11 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %19, i64 %idxprom10, !dbg !4332
  store %struct.msghdr* %arrayidx11, %struct.msghdr** %m, align 8, !dbg !4337, !tbaa !964
  br label %if.end12, !dbg !4338

if.end12:                                         ; preds = %if.then6, %land.lhs.true, %lor.lhs.false
  %22 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4339, !tbaa !964
  %call13 = call i32 @ensure_iov_space(%struct.conn* %22), !dbg !4341
  %cmp14 = icmp ne i32 %call13, 0, !dbg !4342
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !4343

if.then15:                                        ; preds = %if.end12
  store i32 -1, i32* %retval, align 4, !dbg !4344
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4344

if.end16:                                         ; preds = %if.end12
  %23 = load i8, i8* %limit_to_mtu, align 1, !dbg !4345, !tbaa !1031, !range !1262
  %tobool17 = trunc i8 %23 to i1, !dbg !4345
  br i1 %tobool17, label %land.lhs.true18, label %if.else26, !dbg !4347

land.lhs.true18:                                  ; preds = %if.end16
  %24 = load i32, i32* %len.addr, align 4, !dbg !4348, !tbaa !946
  %25 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4349, !tbaa !964
  %msgbytes19 = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 27, !dbg !4350
  %26 = load i32, i32* %msgbytes19, align 4, !dbg !4350, !tbaa !4326
  %add = add nsw i32 %24, %26, !dbg !4351
  %cmp20 = icmp sgt i32 %add, 1400, !dbg !4352
  br i1 %cmp20, label %if.then21, label %if.else26, !dbg !4353

if.then21:                                        ; preds = %land.lhs.true18
  %27 = load i32, i32* %len.addr, align 4, !dbg !4354, !tbaa !946
  %28 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4356, !tbaa !964
  %msgbytes22 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 27, !dbg !4357
  %29 = load i32, i32* %msgbytes22, align 4, !dbg !4357, !tbaa !4326
  %add23 = add nsw i32 %27, %29, !dbg !4358
  %sub24 = sub nsw i32 %add23, 1400, !dbg !4359
  store i32 %sub24, i32* %leftover, align 4, !dbg !4360, !tbaa !946
  %30 = load i32, i32* %leftover, align 4, !dbg !4361, !tbaa !946
  %31 = load i32, i32* %len.addr, align 4, !dbg !4362, !tbaa !946
  %sub25 = sub nsw i32 %31, %30, !dbg !4362
  store i32 %sub25, i32* %len.addr, align 4, !dbg !4362, !tbaa !946
  br label %if.end27, !dbg !4363

if.else26:                                        ; preds = %land.lhs.true18, %if.end16
  store i32 0, i32* %leftover, align 4, !dbg !4364, !tbaa !946
  br label %if.end27

if.end27:                                         ; preds = %if.else26, %if.then21
  %32 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4366, !tbaa !964
  %msglist28 = getelementptr inbounds %struct.conn, %struct.conn* %32, i32 0, i32 23, !dbg !4367
  %33 = load %struct.msghdr*, %struct.msghdr** %msglist28, align 8, !dbg !4367, !tbaa !1081
  %34 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4368, !tbaa !964
  %msgused29 = getelementptr inbounds %struct.conn, %struct.conn* %34, i32 0, i32 25, !dbg !4369
  %35 = load i32, i32* %msgused29, align 4, !dbg !4369, !tbaa !1345
  %sub30 = sub nsw i32 %35, 1, !dbg !4370
  %idxprom31 = sext i32 %sub30 to i64, !dbg !4366
  %arrayidx32 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %33, i64 %idxprom31, !dbg !4366
  store %struct.msghdr* %arrayidx32, %struct.msghdr** %m, align 8, !dbg !4371, !tbaa !964
  %36 = load i8*, i8** %buf.addr, align 8, !dbg !4372, !tbaa !964
  %37 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4373, !tbaa !964
  %msg_iov = getelementptr inbounds %struct.msghdr, %struct.msghdr* %37, i32 0, i32 2, !dbg !4374
  %38 = load %struct.iovec*, %struct.iovec** %msg_iov, align 8, !dbg !4374, !tbaa !4375
  %39 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4376, !tbaa !964
  %msg_iovlen33 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %39, i32 0, i32 3, !dbg !4377
  %40 = load i64, i64* %msg_iovlen33, align 8, !dbg !4377, !tbaa !4318
  %arrayidx34 = getelementptr inbounds %struct.iovec, %struct.iovec* %38, i64 %40, !dbg !4373
  %iov_base = getelementptr inbounds %struct.iovec, %struct.iovec* %arrayidx34, i32 0, i32 0, !dbg !4378
  store i8* %36, i8** %iov_base, align 8, !dbg !4379, !tbaa !4380
  %41 = load i32, i32* %len.addr, align 4, !dbg !4382, !tbaa !946
  %conv = sext i32 %41 to i64, !dbg !4382
  %42 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4383, !tbaa !964
  %msg_iov35 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %42, i32 0, i32 2, !dbg !4384
  %43 = load %struct.iovec*, %struct.iovec** %msg_iov35, align 8, !dbg !4384, !tbaa !4375
  %44 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4385, !tbaa !964
  %msg_iovlen36 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %44, i32 0, i32 3, !dbg !4386
  %45 = load i64, i64* %msg_iovlen36, align 8, !dbg !4386, !tbaa !4318
  %arrayidx37 = getelementptr inbounds %struct.iovec, %struct.iovec* %43, i64 %45, !dbg !4383
  %iov_len = getelementptr inbounds %struct.iovec, %struct.iovec* %arrayidx37, i32 0, i32 1, !dbg !4387
  store i64 %conv, i64* %iov_len, align 8, !dbg !4388, !tbaa !4389
  %46 = load i32, i32* %len.addr, align 4, !dbg !4390, !tbaa !946
  %47 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4391, !tbaa !964
  %msgbytes38 = getelementptr inbounds %struct.conn, %struct.conn* %47, i32 0, i32 27, !dbg !4392
  %48 = load i32, i32* %msgbytes38, align 4, !dbg !4393, !tbaa !4326
  %add39 = add nsw i32 %48, %46, !dbg !4393
  store i32 %add39, i32* %msgbytes38, align 4, !dbg !4393, !tbaa !4326
  %49 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4394, !tbaa !964
  %iovused = getelementptr inbounds %struct.conn, %struct.conn* %49, i32 0, i32 22, !dbg !4395
  %50 = load i32, i32* %iovused, align 4, !dbg !4396, !tbaa !1337
  %inc = add nsw i32 %50, 1, !dbg !4396
  store i32 %inc, i32* %iovused, align 4, !dbg !4396, !tbaa !1337
  %51 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4397, !tbaa !964
  %msg_iovlen40 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %51, i32 0, i32 3, !dbg !4398
  %52 = load i64, i64* %msg_iovlen40, align 8, !dbg !4399, !tbaa !4318
  %inc41 = add i64 %52, 1, !dbg !4399
  store i64 %inc41, i64* %msg_iovlen40, align 8, !dbg !4399, !tbaa !4318
  %53 = load i8*, i8** %buf.addr, align 8, !dbg !4400, !tbaa !964
  %54 = load i32, i32* %len.addr, align 4, !dbg !4401, !tbaa !946
  %idx.ext = sext i32 %54 to i64, !dbg !4402
  %add.ptr = getelementptr inbounds i8, i8* %53, i64 %idx.ext, !dbg !4402
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !4403, !tbaa !964
  %55 = load i32, i32* %leftover, align 4, !dbg !4404, !tbaa !946
  store i32 %55, i32* %len.addr, align 4, !dbg !4405, !tbaa !946
  br label %do.cond, !dbg !4406

do.cond:                                          ; preds = %if.end27
  %56 = load i32, i32* %leftover, align 4, !dbg !4407, !tbaa !946
  %cmp42 = icmp sgt i32 %56, 0, !dbg !4408
  br i1 %cmp42, label %do.body, label %do.end, !dbg !4406, !llvm.loop !4409

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, align 4, !dbg !4411
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4411

cleanup:                                          ; preds = %do.end, %if.then15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %limit_to_mtu) #12, !dbg !4412
  %57 = bitcast i32* %leftover to i8*, !dbg !4412
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %57) #12, !dbg !4412
  %58 = bitcast %struct.msghdr** %m to i8*, !dbg !4412
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #12, !dbg !4412
  %59 = load i32, i32* %retval, align 4, !dbg !4412
  ret i32 %59, !dbg !4412
}

; Function Attrs: nounwind uwtable
define internal i32 @build_udp_headers(%struct.conn* %c) #0 !dbg !4413 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.conn*, align 8
  %i = alloca i32, align 4
  %hdr = alloca i8*, align 8
  %new_hdrbuf = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !4415, metadata !DIExpression()), !dbg !4421
  %0 = bitcast i32* %i to i8*, !dbg !4422
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !4422
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4416, metadata !DIExpression()), !dbg !4423
  %1 = bitcast i8** %hdr to i8*, !dbg !4424
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !4424
  call void @llvm.dbg.declare(metadata i8** %hdr, metadata !4417, metadata !DIExpression()), !dbg !4425
  %2 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4426, !tbaa !964
  %cmp = icmp ne %struct.conn* %2, null, !dbg !4426
  br i1 %cmp, label %if.then, label %if.else, !dbg !4429

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4429

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 716, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__PRETTY_FUNCTION__.build_udp_headers, i64 0, i64 0)) #13, !dbg !4426
  unreachable, !dbg !4426

if.end:                                           ; preds = %if.then
  %3 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4430, !tbaa !964
  %msgused = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 25, !dbg !4431
  %4 = load i32, i32* %msgused, align 4, !dbg !4431, !tbaa !1345
  %5 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4432, !tbaa !964
  %hdrsize = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 41, !dbg !4433
  %6 = load i32, i32* %hdrsize, align 8, !dbg !4433, !tbaa !1114
  %cmp1 = icmp sgt i32 %4, %6, !dbg !4434
  br i1 %cmp1, label %if.then2, label %if.end21, !dbg !4435

if.then2:                                         ; preds = %if.end
  %7 = bitcast i8** %new_hdrbuf to i8*, !dbg !4436
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #12, !dbg !4436
  call void @llvm.dbg.declare(metadata i8** %new_hdrbuf, metadata !4418, metadata !DIExpression()), !dbg !4437
  %8 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4438, !tbaa !964
  %hdrbuf = getelementptr inbounds %struct.conn, %struct.conn* %8, i32 0, i32 40, !dbg !4440
  %9 = load i8*, i8** %hdrbuf, align 8, !dbg !4440, !tbaa !1085
  %tobool = icmp ne i8* %9, null, !dbg !4438
  br i1 %tobool, label %if.then3, label %if.else7, !dbg !4441

if.then3:                                         ; preds = %if.then2
  %10 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4442, !tbaa !964
  %hdrbuf4 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 40, !dbg !4443
  %11 = load i8*, i8** %hdrbuf4, align 8, !dbg !4443, !tbaa !1085
  %12 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4444, !tbaa !964
  %msgused5 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 25, !dbg !4445
  %13 = load i32, i32* %msgused5, align 4, !dbg !4445, !tbaa !1345
  %mul = mul nsw i32 %13, 2, !dbg !4446
  %mul6 = mul nsw i32 %mul, 8, !dbg !4447
  %conv = sext i32 %mul6 to i64, !dbg !4444
  %call = call i8* @realloc(i8* %11, i64 %conv) #12, !dbg !4448
  store i8* %call, i8** %new_hdrbuf, align 8, !dbg !4449, !tbaa !964
  br label %if.end13, !dbg !4450

if.else7:                                         ; preds = %if.then2
  %14 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4451, !tbaa !964
  %msgused8 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 25, !dbg !4452
  %15 = load i32, i32* %msgused8, align 4, !dbg !4452, !tbaa !1345
  %mul9 = mul nsw i32 %15, 2, !dbg !4453
  %mul10 = mul nsw i32 %mul9, 8, !dbg !4454
  %conv11 = sext i32 %mul10 to i64, !dbg !4451
  %call12 = call noalias i8* @malloc(i64 %conv11) #12, !dbg !4455
  store i8* %call12, i8** %new_hdrbuf, align 8, !dbg !4456, !tbaa !964
  br label %if.end13

if.end13:                                         ; preds = %if.else7, %if.then3
  %16 = load i8*, i8** %new_hdrbuf, align 8, !dbg !4457, !tbaa !964
  %tobool14 = icmp ne i8* %16, null, !dbg !4457
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !4459

if.then15:                                        ; preds = %if.end13
  store i32 -1, i32* %retval, align 4, !dbg !4460
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4460

if.end16:                                         ; preds = %if.end13
  %17 = load i8*, i8** %new_hdrbuf, align 8, !dbg !4461, !tbaa !964
  %18 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4462, !tbaa !964
  %hdrbuf17 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 40, !dbg !4463
  store i8* %17, i8** %hdrbuf17, align 8, !dbg !4464, !tbaa !1085
  %19 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4465, !tbaa !964
  %msgused18 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 25, !dbg !4466
  %20 = load i32, i32* %msgused18, align 4, !dbg !4466, !tbaa !1345
  %mul19 = mul nsw i32 %20, 2, !dbg !4467
  %21 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4468, !tbaa !964
  %hdrsize20 = getelementptr inbounds %struct.conn, %struct.conn* %21, i32 0, i32 41, !dbg !4469
  store i32 %mul19, i32* %hdrsize20, align 8, !dbg !4470, !tbaa !1114
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !4471
  br label %cleanup, !dbg !4471

cleanup:                                          ; preds = %if.end16, %if.then15
  %22 = bitcast i8** %new_hdrbuf to i8*, !dbg !4471
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #12, !dbg !4471
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup63 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end21, !dbg !4472

if.end21:                                         ; preds = %cleanup.cont, %if.end
  %23 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4473, !tbaa !964
  %hdrbuf22 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 40, !dbg !4474
  %24 = load i8*, i8** %hdrbuf22, align 8, !dbg !4474, !tbaa !1085
  store i8* %24, i8** %hdr, align 8, !dbg !4475, !tbaa !964
  store i32 0, i32* %i, align 4, !dbg !4476, !tbaa !946
  br label %for.cond, !dbg !4478

for.cond:                                         ; preds = %for.inc, %if.end21
  %25 = load i32, i32* %i, align 4, !dbg !4479, !tbaa !946
  %26 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4481, !tbaa !964
  %msgused23 = getelementptr inbounds %struct.conn, %struct.conn* %26, i32 0, i32 25, !dbg !4482
  %27 = load i32, i32* %msgused23, align 4, !dbg !4482, !tbaa !1345
  %cmp24 = icmp slt i32 %25, %27, !dbg !4483
  br i1 %cmp24, label %for.body, label %for.end, !dbg !4484

for.body:                                         ; preds = %for.cond
  %28 = load i8*, i8** %hdr, align 8, !dbg !4485, !tbaa !964
  %29 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4487, !tbaa !964
  %msglist = getelementptr inbounds %struct.conn, %struct.conn* %29, i32 0, i32 23, !dbg !4488
  %30 = load %struct.msghdr*, %struct.msghdr** %msglist, align 8, !dbg !4488, !tbaa !1081
  %31 = load i32, i32* %i, align 4, !dbg !4489, !tbaa !946
  %idxprom = sext i32 %31 to i64, !dbg !4487
  %arrayidx = getelementptr inbounds %struct.msghdr, %struct.msghdr* %30, i64 %idxprom, !dbg !4487
  %msg_iov = getelementptr inbounds %struct.msghdr, %struct.msghdr* %arrayidx, i32 0, i32 2, !dbg !4490
  %32 = load %struct.iovec*, %struct.iovec** %msg_iov, align 8, !dbg !4490, !tbaa !4375
  %arrayidx26 = getelementptr inbounds %struct.iovec, %struct.iovec* %32, i64 0, !dbg !4487
  %iov_base = getelementptr inbounds %struct.iovec, %struct.iovec* %arrayidx26, i32 0, i32 0, !dbg !4491
  store i8* %28, i8** %iov_base, align 8, !dbg !4492, !tbaa !4380
  %33 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4493, !tbaa !964
  %msglist27 = getelementptr inbounds %struct.conn, %struct.conn* %33, i32 0, i32 23, !dbg !4494
  %34 = load %struct.msghdr*, %struct.msghdr** %msglist27, align 8, !dbg !4494, !tbaa !1081
  %35 = load i32, i32* %i, align 4, !dbg !4495, !tbaa !946
  %idxprom28 = sext i32 %35 to i64, !dbg !4493
  %arrayidx29 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %34, i64 %idxprom28, !dbg !4493
  %msg_iov30 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %arrayidx29, i32 0, i32 2, !dbg !4496
  %36 = load %struct.iovec*, %struct.iovec** %msg_iov30, align 8, !dbg !4496, !tbaa !4375
  %arrayidx31 = getelementptr inbounds %struct.iovec, %struct.iovec* %36, i64 0, !dbg !4493
  %iov_len = getelementptr inbounds %struct.iovec, %struct.iovec* %arrayidx31, i32 0, i32 1, !dbg !4497
  store i64 8, i64* %iov_len, align 8, !dbg !4498, !tbaa !4389
  %37 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4499, !tbaa !964
  %request_id = getelementptr inbounds %struct.conn, %struct.conn* %37, i32 0, i32 37, !dbg !4500
  %38 = load i32, i32* %request_id, align 8, !dbg !4500, !tbaa !3985
  %div = sdiv i32 %38, 256, !dbg !4501
  %conv32 = trunc i32 %div to i8, !dbg !4499
  %39 = load i8*, i8** %hdr, align 8, !dbg !4502, !tbaa !964
  %incdec.ptr = getelementptr inbounds i8, i8* %39, i32 1, !dbg !4502
  store i8* %incdec.ptr, i8** %hdr, align 8, !dbg !4502, !tbaa !964
  store i8 %conv32, i8* %39, align 1, !dbg !4503, !tbaa !1825
  %40 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4504, !tbaa !964
  %request_id33 = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 37, !dbg !4505
  %41 = load i32, i32* %request_id33, align 8, !dbg !4505, !tbaa !3985
  %rem = srem i32 %41, 256, !dbg !4506
  %conv34 = trunc i32 %rem to i8, !dbg !4504
  %42 = load i8*, i8** %hdr, align 8, !dbg !4507, !tbaa !964
  %incdec.ptr35 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !4507
  store i8* %incdec.ptr35, i8** %hdr, align 8, !dbg !4507, !tbaa !964
  store i8 %conv34, i8* %42, align 1, !dbg !4508, !tbaa !1825
  %43 = load i32, i32* %i, align 4, !dbg !4509, !tbaa !946
  %div36 = sdiv i32 %43, 256, !dbg !4510
  %conv37 = trunc i32 %div36 to i8, !dbg !4509
  %44 = load i8*, i8** %hdr, align 8, !dbg !4511, !tbaa !964
  %incdec.ptr38 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !4511
  store i8* %incdec.ptr38, i8** %hdr, align 8, !dbg !4511, !tbaa !964
  store i8 %conv37, i8* %44, align 1, !dbg !4512, !tbaa !1825
  %45 = load i32, i32* %i, align 4, !dbg !4513, !tbaa !946
  %rem39 = srem i32 %45, 256, !dbg !4514
  %conv40 = trunc i32 %rem39 to i8, !dbg !4513
  %46 = load i8*, i8** %hdr, align 8, !dbg !4515, !tbaa !964
  %incdec.ptr41 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !4515
  store i8* %incdec.ptr41, i8** %hdr, align 8, !dbg !4515, !tbaa !964
  store i8 %conv40, i8* %46, align 1, !dbg !4516, !tbaa !1825
  %47 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4517, !tbaa !964
  %msgused42 = getelementptr inbounds %struct.conn, %struct.conn* %47, i32 0, i32 25, !dbg !4518
  %48 = load i32, i32* %msgused42, align 4, !dbg !4518, !tbaa !1345
  %div43 = sdiv i32 %48, 256, !dbg !4519
  %conv44 = trunc i32 %div43 to i8, !dbg !4517
  %49 = load i8*, i8** %hdr, align 8, !dbg !4520, !tbaa !964
  %incdec.ptr45 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !4520
  store i8* %incdec.ptr45, i8** %hdr, align 8, !dbg !4520, !tbaa !964
  store i8 %conv44, i8* %49, align 1, !dbg !4521, !tbaa !1825
  %50 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4522, !tbaa !964
  %msgused46 = getelementptr inbounds %struct.conn, %struct.conn* %50, i32 0, i32 25, !dbg !4523
  %51 = load i32, i32* %msgused46, align 4, !dbg !4523, !tbaa !1345
  %rem47 = srem i32 %51, 256, !dbg !4524
  %conv48 = trunc i32 %rem47 to i8, !dbg !4522
  %52 = load i8*, i8** %hdr, align 8, !dbg !4525, !tbaa !964
  %incdec.ptr49 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4525
  store i8* %incdec.ptr49, i8** %hdr, align 8, !dbg !4525, !tbaa !964
  store i8 %conv48, i8* %52, align 1, !dbg !4526, !tbaa !1825
  %53 = load i8*, i8** %hdr, align 8, !dbg !4527, !tbaa !964
  %incdec.ptr50 = getelementptr inbounds i8, i8* %53, i32 1, !dbg !4527
  store i8* %incdec.ptr50, i8** %hdr, align 8, !dbg !4527, !tbaa !964
  store i8 0, i8* %53, align 1, !dbg !4528, !tbaa !1825
  %54 = load i8*, i8** %hdr, align 8, !dbg !4529, !tbaa !964
  %incdec.ptr51 = getelementptr inbounds i8, i8* %54, i32 1, !dbg !4529
  store i8* %incdec.ptr51, i8** %hdr, align 8, !dbg !4529, !tbaa !964
  store i8 0, i8* %54, align 1, !dbg !4530, !tbaa !1825
  %55 = load i8*, i8** %hdr, align 8, !dbg !4531, !tbaa !964
  %56 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4531, !tbaa !964
  %msglist52 = getelementptr inbounds %struct.conn, %struct.conn* %56, i32 0, i32 23, !dbg !4531
  %57 = load %struct.msghdr*, %struct.msghdr** %msglist52, align 8, !dbg !4531, !tbaa !1081
  %58 = load i32, i32* %i, align 4, !dbg !4531, !tbaa !946
  %idxprom53 = sext i32 %58 to i64, !dbg !4531
  %arrayidx54 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %57, i64 %idxprom53, !dbg !4531
  %msg_iov55 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %arrayidx54, i32 0, i32 2, !dbg !4531
  %59 = load %struct.iovec*, %struct.iovec** %msg_iov55, align 8, !dbg !4531, !tbaa !4375
  %arrayidx56 = getelementptr inbounds %struct.iovec, %struct.iovec* %59, i64 0, !dbg !4531
  %iov_base57 = getelementptr inbounds %struct.iovec, %struct.iovec* %arrayidx56, i32 0, i32 0, !dbg !4531
  %60 = load i8*, i8** %iov_base57, align 8, !dbg !4531, !tbaa !4380
  %add.ptr = getelementptr i8, i8* %60, i64 8, !dbg !4531
  %cmp58 = icmp eq i8* %55, %add.ptr, !dbg !4531
  br i1 %cmp58, label %if.then60, label %if.else61, !dbg !4534

if.then60:                                        ; preds = %for.body
  br label %if.end62, !dbg !4534

if.else61:                                        ; preds = %for.body
  call void @__assert_fail(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.148, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 742, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__PRETTY_FUNCTION__.build_udp_headers, i64 0, i64 0)) #13, !dbg !4531
  unreachable, !dbg !4531

if.end62:                                         ; preds = %if.then60
  br label %for.inc, !dbg !4535

for.inc:                                          ; preds = %if.end62
  %61 = load i32, i32* %i, align 4, !dbg !4536, !tbaa !946
  %inc = add nsw i32 %61, 1, !dbg !4536
  store i32 %inc, i32* %i, align 4, !dbg !4536, !tbaa !946
  br label %for.cond, !dbg !4537, !llvm.loop !4538

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !4540
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup63, !dbg !4540

cleanup63:                                        ; preds = %for.end, %cleanup
  %62 = bitcast i8** %hdr to i8*, !dbg !4541
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %62) #12, !dbg !4541
  %63 = bitcast i32* %i to i8*, !dbg !4541
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #12, !dbg !4541
  %64 = load i32, i32* %retval, align 4, !dbg !4541
  ret i32 %64, !dbg !4541
}

; Function Attrs: nounwind uwtable
define internal i32 @transmit(%struct.conn* %c) #0 !dbg !4542 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.conn*, align 8
  %res = alloca i64, align 8
  %m = alloca %struct.msghdr*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !4544, metadata !DIExpression()), !dbg !4551
  %0 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4552, !tbaa !964
  %cmp = icmp ne %struct.conn* %0, null, !dbg !4552
  br i1 %cmp, label %if.then, label %if.else, !dbg !4555

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4555

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 2046, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__PRETTY_FUNCTION__.transmit, i64 0, i64 0)) #13, !dbg !4552
  unreachable, !dbg !4552

if.end:                                           ; preds = %if.then
  %1 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4556, !tbaa !964
  %msgcurr = getelementptr inbounds %struct.conn, %struct.conn* %1, i32 0, i32 26, !dbg !4558
  %2 = load i32, i32* %msgcurr, align 8, !dbg !4558, !tbaa !1341
  %3 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4559, !tbaa !964
  %msgused = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 25, !dbg !4560
  %4 = load i32, i32* %msgused, align 4, !dbg !4560, !tbaa !1345
  %cmp1 = icmp slt i32 %2, %4, !dbg !4561
  br i1 %cmp1, label %land.lhs.true, label %if.end6, !dbg !4562

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4563, !tbaa !964
  %msglist = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 23, !dbg !4564
  %6 = load %struct.msghdr*, %struct.msghdr** %msglist, align 8, !dbg !4564, !tbaa !1081
  %7 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4565, !tbaa !964
  %msgcurr2 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 26, !dbg !4566
  %8 = load i32, i32* %msgcurr2, align 8, !dbg !4566, !tbaa !1341
  %idxprom = sext i32 %8 to i64, !dbg !4563
  %arrayidx = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 %idxprom, !dbg !4563
  %msg_iovlen = getelementptr inbounds %struct.msghdr, %struct.msghdr* %arrayidx, i32 0, i32 3, !dbg !4567
  %9 = load i64, i64* %msg_iovlen, align 8, !dbg !4567, !tbaa !4318
  %cmp3 = icmp eq i64 %9, 0, !dbg !4568
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !4569

if.then4:                                         ; preds = %land.lhs.true
  %10 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4570, !tbaa !964
  %msgcurr5 = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 26, !dbg !4572
  %11 = load i32, i32* %msgcurr5, align 8, !dbg !4573, !tbaa !1341
  %inc = add nsw i32 %11, 1, !dbg !4573
  store i32 %inc, i32* %msgcurr5, align 8, !dbg !4573, !tbaa !1341
  br label %if.end6, !dbg !4574

if.end6:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %12 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4575, !tbaa !964
  %msgcurr7 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 26, !dbg !4576
  %13 = load i32, i32* %msgcurr7, align 8, !dbg !4576, !tbaa !1341
  %14 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4577, !tbaa !964
  %msgused8 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 25, !dbg !4578
  %15 = load i32, i32* %msgused8, align 4, !dbg !4578, !tbaa !1345
  %cmp9 = icmp slt i32 %13, %15, !dbg !4579
  br i1 %cmp9, label %if.then10, label %if.else54, !dbg !4580

if.then10:                                        ; preds = %if.end6
  %16 = bitcast i64* %res to i8*, !dbg !4581
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #12, !dbg !4581
  call void @llvm.dbg.declare(metadata i64* %res, metadata !4545, metadata !DIExpression()), !dbg !4582
  %17 = bitcast %struct.msghdr** %m to i8*, !dbg !4583
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #12, !dbg !4583
  call void @llvm.dbg.declare(metadata %struct.msghdr** %m, metadata !4550, metadata !DIExpression()), !dbg !4584
  %18 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4585, !tbaa !964
  %msglist11 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 23, !dbg !4586
  %19 = load %struct.msghdr*, %struct.msghdr** %msglist11, align 8, !dbg !4586, !tbaa !1081
  %20 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4587, !tbaa !964
  %msgcurr12 = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 26, !dbg !4588
  %21 = load i32, i32* %msgcurr12, align 8, !dbg !4588, !tbaa !1341
  %idxprom13 = sext i32 %21 to i64, !dbg !4585
  %arrayidx14 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %19, i64 %idxprom13, !dbg !4585
  store %struct.msghdr* %arrayidx14, %struct.msghdr** %m, align 8, !dbg !4584, !tbaa !964
  %22 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4589, !tbaa !964
  %sfd = getelementptr inbounds %struct.conn, %struct.conn* %22, i32 0, i32 0, !dbg !4590
  %23 = load i32, i32* %sfd, align 8, !dbg !4590, !tbaa !1275
  %24 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4591, !tbaa !964
  %call = call i64 @sendmsg(i32 %23, %struct.msghdr* %24, i32 0), !dbg !4592
  store i64 %call, i64* %res, align 8, !dbg !4593, !tbaa !914
  %25 = load i64, i64* %res, align 8, !dbg !4594, !tbaa !914
  %cmp15 = icmp sgt i64 %25, 0, !dbg !4596
  br i1 %cmp15, label %if.then16, label %if.end31, !dbg !4597

if.then16:                                        ; preds = %if.then10
  call void @mt_stats_lock(), !dbg !4598
  %26 = load i64, i64* %res, align 8, !dbg !4600, !tbaa !914
  %27 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 13), align 8, !dbg !4601, !tbaa !4602
  %add = add i64 %27, %26, !dbg !4601
  store i64 %add, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 13), align 8, !dbg !4601, !tbaa !4602
  call void @mt_stats_unlock(), !dbg !4603
  br label %while.cond, !dbg !4604

while.cond:                                       ; preds = %while.body, %if.then16
  %28 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4605, !tbaa !964
  %msg_iovlen17 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %28, i32 0, i32 3, !dbg !4606
  %29 = load i64, i64* %msg_iovlen17, align 8, !dbg !4606, !tbaa !4318
  %cmp18 = icmp ugt i64 %29, 0, !dbg !4607
  br i1 %cmp18, label %land.rhs, label %land.end, !dbg !4608

land.rhs:                                         ; preds = %while.cond
  %30 = load i64, i64* %res, align 8, !dbg !4609, !tbaa !914
  %31 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4610, !tbaa !964
  %msg_iov = getelementptr inbounds %struct.msghdr, %struct.msghdr* %31, i32 0, i32 2, !dbg !4611
  %32 = load %struct.iovec*, %struct.iovec** %msg_iov, align 8, !dbg !4611, !tbaa !4375
  %iov_len = getelementptr inbounds %struct.iovec, %struct.iovec* %32, i32 0, i32 1, !dbg !4612
  %33 = load i64, i64* %iov_len, align 8, !dbg !4612, !tbaa !4389
  %cmp19 = icmp uge i64 %30, %33, !dbg !4613
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %34 = phi i1 [ false, %while.cond ], [ %cmp19, %land.rhs ], !dbg !4614
  br i1 %34, label %while.body, label %while.end, !dbg !4604

while.body:                                       ; preds = %land.end
  %35 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4615, !tbaa !964
  %msg_iov20 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %35, i32 0, i32 2, !dbg !4617
  %36 = load %struct.iovec*, %struct.iovec** %msg_iov20, align 8, !dbg !4617, !tbaa !4375
  %iov_len21 = getelementptr inbounds %struct.iovec, %struct.iovec* %36, i32 0, i32 1, !dbg !4618
  %37 = load i64, i64* %iov_len21, align 8, !dbg !4618, !tbaa !4389
  %38 = load i64, i64* %res, align 8, !dbg !4619, !tbaa !914
  %sub = sub i64 %38, %37, !dbg !4619
  store i64 %sub, i64* %res, align 8, !dbg !4619, !tbaa !914
  %39 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4620, !tbaa !964
  %msg_iovlen22 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %39, i32 0, i32 3, !dbg !4621
  %40 = load i64, i64* %msg_iovlen22, align 8, !dbg !4622, !tbaa !4318
  %dec = add i64 %40, -1, !dbg !4622
  store i64 %dec, i64* %msg_iovlen22, align 8, !dbg !4622, !tbaa !4318
  %41 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4623, !tbaa !964
  %msg_iov23 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %41, i32 0, i32 2, !dbg !4624
  %42 = load %struct.iovec*, %struct.iovec** %msg_iov23, align 8, !dbg !4625, !tbaa !4375
  %incdec.ptr = getelementptr inbounds %struct.iovec, %struct.iovec* %42, i32 1, !dbg !4625
  store %struct.iovec* %incdec.ptr, %struct.iovec** %msg_iov23, align 8, !dbg !4625, !tbaa !4375
  br label %while.cond, !dbg !4604, !llvm.loop !4626

while.end:                                        ; preds = %land.end
  %43 = load i64, i64* %res, align 8, !dbg !4628, !tbaa !914
  %cmp24 = icmp sgt i64 %43, 0, !dbg !4630
  br i1 %cmp24, label %if.then25, label %if.end30, !dbg !4631

if.then25:                                        ; preds = %while.end
  %44 = load i64, i64* %res, align 8, !dbg !4632, !tbaa !914
  %45 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4634, !tbaa !964
  %msg_iov26 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %45, i32 0, i32 2, !dbg !4635
  %46 = load %struct.iovec*, %struct.iovec** %msg_iov26, align 8, !dbg !4635, !tbaa !4375
  %iov_base = getelementptr inbounds %struct.iovec, %struct.iovec* %46, i32 0, i32 0, !dbg !4636
  %47 = load i8*, i8** %iov_base, align 8, !dbg !4637, !tbaa !4380
  %add.ptr = getelementptr i8, i8* %47, i64 %44, !dbg !4637
  store i8* %add.ptr, i8** %iov_base, align 8, !dbg !4637, !tbaa !4380
  %48 = load i64, i64* %res, align 8, !dbg !4638, !tbaa !914
  %49 = load %struct.msghdr*, %struct.msghdr** %m, align 8, !dbg !4639, !tbaa !964
  %msg_iov27 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %49, i32 0, i32 2, !dbg !4640
  %50 = load %struct.iovec*, %struct.iovec** %msg_iov27, align 8, !dbg !4640, !tbaa !4375
  %iov_len28 = getelementptr inbounds %struct.iovec, %struct.iovec* %50, i32 0, i32 1, !dbg !4641
  %51 = load i64, i64* %iov_len28, align 8, !dbg !4642, !tbaa !4389
  %sub29 = sub i64 %51, %48, !dbg !4642
  store i64 %sub29, i64* %iov_len28, align 8, !dbg !4642, !tbaa !4389
  br label %if.end30, !dbg !4643

if.end30:                                         ; preds = %if.then25, %while.end
  store i32 1, i32* %retval, align 4, !dbg !4644
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4644

if.end31:                                         ; preds = %if.then10
  %52 = load i64, i64* %res, align 8, !dbg !4645, !tbaa !914
  %cmp32 = icmp eq i64 %52, -1, !dbg !4647
  br i1 %cmp32, label %land.lhs.true33, label %if.end46, !dbg !4648

land.lhs.true33:                                  ; preds = %if.end31
  %call34 = call i32* @__errno_location() #14, !dbg !4649
  %53 = load i32, i32* %call34, align 4, !dbg !4649, !tbaa !946
  %cmp35 = icmp eq i32 %53, 11, !dbg !4650
  br i1 %cmp35, label %if.then38, label %lor.lhs.false, !dbg !4651

lor.lhs.false:                                    ; preds = %land.lhs.true33
  %call36 = call i32* @__errno_location() #14, !dbg !4652
  %54 = load i32, i32* %call36, align 4, !dbg !4652, !tbaa !946
  %cmp37 = icmp eq i32 %54, 11, !dbg !4653
  br i1 %cmp37, label %if.then38, label %if.end46, !dbg !4654

if.then38:                                        ; preds = %lor.lhs.false, %land.lhs.true33
  %55 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4655, !tbaa !964
  %call39 = call zeroext i1 @update_event(%struct.conn* %55, i32 20), !dbg !4658
  br i1 %call39, label %if.end45, label %if.then40, !dbg !4659

if.then40:                                        ; preds = %if.then38
  %56 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !4660, !tbaa !1246
  %cmp41 = icmp sgt i32 %56, 0, !dbg !4663
  br i1 %cmp41, label %if.then42, label %if.end44, !dbg !4664

if.then42:                                        ; preds = %if.then40
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4665, !tbaa !964
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %57, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0)), !dbg !4666
  br label %if.end44, !dbg !4666

if.end44:                                         ; preds = %if.then42, %if.then40
  %58 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4667, !tbaa !964
  call void @conn_set_state(%struct.conn* %58, i32 5), !dbg !4668
  store i32 3, i32* %retval, align 4, !dbg !4669
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4669

if.end45:                                         ; preds = %if.then38
  store i32 2, i32* %retval, align 4, !dbg !4670
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4670

if.end46:                                         ; preds = %lor.lhs.false, %if.end31
  %59 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !4671, !tbaa !1246
  %cmp47 = icmp sgt i32 %59, 0, !dbg !4673
  br i1 %cmp47, label %if.then48, label %if.end49, !dbg !4674

if.then48:                                        ; preds = %if.end46
  call void @perror(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.149, i64 0, i64 0)), !dbg !4675
  br label %if.end49, !dbg !4675

if.end49:                                         ; preds = %if.then48, %if.end46
  %60 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4676, !tbaa !964
  %udp = getelementptr inbounds %struct.conn, %struct.conn* %60, i32 0, i32 36, !dbg !4678
  %61 = load i8, i8* %udp, align 4, !dbg !4678, !tbaa !1280, !range !1262
  %tobool = trunc i8 %61 to i1, !dbg !4678
  br i1 %tobool, label %if.then50, label %if.else51, !dbg !4679

if.then50:                                        ; preds = %if.end49
  %62 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4680, !tbaa !964
  call void @conn_set_state(%struct.conn* %62, i32 1), !dbg !4681
  br label %if.end52, !dbg !4681

if.else51:                                        ; preds = %if.end49
  %63 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4682, !tbaa !964
  call void @conn_set_state(%struct.conn* %63, i32 5), !dbg !4683
  br label %if.end52

if.end52:                                         ; preds = %if.else51, %if.then50
  store i32 3, i32* %retval, align 4, !dbg !4684
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4684

cleanup:                                          ; preds = %if.end52, %if.end45, %if.end44, %if.end30
  %64 = bitcast %struct.msghdr** %m to i8*, !dbg !4685
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #12, !dbg !4685
  %65 = bitcast i64* %res to i8*, !dbg !4685
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65) #12, !dbg !4685
  br label %return

if.else54:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4686
  br label %return, !dbg !4686

return:                                           ; preds = %if.else54, %cleanup
  %66 = load i32, i32* %retval, align 4, !dbg !4688
  ret i32 %66, !dbg !4688
}

; Function Attrs: nounwind readonly
declare dso_local i8* @memchr(i8* %0, i32 %1, i64 %2) #6

; Function Attrs: nounwind uwtable
define internal void @process_command(%struct.conn* %c, i8* %command) #0 !dbg !4689 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %command.addr = alloca i8*, align 8
  %tokens = alloca [7 x %struct.token_s], align 16
  %ntokens = alloca i64, align 8
  %comm = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %bucket = alloca i32, align 4
  %gen = alloca i32, align 4
  %bucket131 = alloca i32, align 4
  %bucket157 = alloca i32, align 4
  %gen158 = alloca i32, align 4
  %exptime = alloca i64, align 8
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !4693, metadata !DIExpression()), !dbg !4728
  store i8* %command, i8** %command.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %command.addr, metadata !4694, metadata !DIExpression()), !dbg !4729
  %0 = bitcast [7 x %struct.token_s]* %tokens to i8*, !dbg !4730
  call void @llvm.lifetime.start.p0i8(i64 112, i8* %0) #12, !dbg !4730
  call void @llvm.dbg.declare(metadata [7 x %struct.token_s]* %tokens, metadata !4695, metadata !DIExpression()), !dbg !4731
  %1 = bitcast i64* %ntokens to i8*, !dbg !4732
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !4732
  call void @llvm.dbg.declare(metadata i64* %ntokens, metadata !4704, metadata !DIExpression()), !dbg !4733
  %2 = bitcast i32* %comm to i8*, !dbg !4734
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #12, !dbg !4734
  call void @llvm.dbg.declare(metadata i32* %comm, metadata !4705, metadata !DIExpression()), !dbg !4735
  %3 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4736, !tbaa !964
  %cmp = icmp ne %struct.conn* %3, null, !dbg !4736
  br i1 %cmp, label %if.then, label %if.else, !dbg !4739

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4739

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1670, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__.process_command, i64 0, i64 0)) #13, !dbg !4736
  unreachable, !dbg !4736

if.end:                                           ; preds = %if.then
  %4 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !4740, !tbaa !1246
  %cmp1 = icmp sgt i32 %4, 1, !dbg !4742
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4743

if.then2:                                         ; preds = %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4744, !tbaa !964
  %6 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4745, !tbaa !964
  %sfd = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 0, !dbg !4746
  %7 = load i32, i32* %sfd, align 8, !dbg !4746, !tbaa !1275
  %8 = load i8*, i8** %command.addr, align 8, !dbg !4747, !tbaa !964
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i64 0, i64 0), i32 %7, i8* %8), !dbg !4748
  br label %if.end3, !dbg !4748

if.end3:                                          ; preds = %if.then2, %if.end
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4749, !tbaa !964
  %msgcurr = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 26, !dbg !4750
  store i32 0, i32* %msgcurr, align 8, !dbg !4751, !tbaa !1341
  %10 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4752, !tbaa !964
  %msgused = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 25, !dbg !4753
  store i32 0, i32* %msgused, align 4, !dbg !4754, !tbaa !1345
  %11 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4755, !tbaa !964
  %iovused = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 22, !dbg !4756
  store i32 0, i32* %iovused, align 4, !dbg !4757, !tbaa !1337
  %12 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4758, !tbaa !964
  %call4 = call i32 @add_msghdr(%struct.conn* %12), !dbg !4760
  %cmp5 = icmp ne i32 %call4, 0, !dbg !4761
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4762

if.then6:                                         ; preds = %if.end3
  %13 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4763, !tbaa !964
  call void @out_string(%struct.conn* %13, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)), !dbg !4765
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup267, !dbg !4766

if.end7:                                          ; preds = %if.end3
  %14 = load i8*, i8** %command.addr, align 8, !dbg !4767, !tbaa !964
  %arraydecay = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4768
  %call8 = call i64 @tokenize_command(i8* %14, %struct.token_s* %arraydecay, i64 7), !dbg !4769
  store i64 %call8, i64* %ntokens, align 8, !dbg !4770, !tbaa !914
  %15 = load i64, i64* %ntokens, align 8, !dbg !4771, !tbaa !914
  %cmp9 = icmp uge i64 %15, 3, !dbg !4772
  br i1 %cmp9, label %land.lhs.true, label %if.else18, !dbg !4773

land.lhs.true:                                    ; preds = %if.end7
  %arrayidx = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4774
  %value = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx, i32 0, i32 0, !dbg !4775
  %16 = load i8*, i8** %value, align 16, !dbg !4775, !tbaa !4776
  %call10 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0)) #15, !dbg !4778
  %cmp11 = icmp eq i32 %call10, 0, !dbg !4779
  br i1 %cmp11, label %if.then16, label %lor.lhs.false, !dbg !4780

lor.lhs.false:                                    ; preds = %land.lhs.true
  %arrayidx12 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4781
  %value13 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx12, i32 0, i32 0, !dbg !4782
  %17 = load i8*, i8** %value13, align 16, !dbg !4782, !tbaa !4776
  %call14 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0)) #15, !dbg !4783
  %cmp15 = icmp eq i32 %call14, 0, !dbg !4784
  br i1 %cmp15, label %if.then16, label %if.else18, !dbg !4785

if.then16:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %18 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4786, !tbaa !964
  %arraydecay17 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4788
  %19 = load i64, i64* %ntokens, align 8, !dbg !4789, !tbaa !914
  call void @process_get_command(%struct.conn* %18, %struct.token_s* %arraydecay17, i64 %19, i1 zeroext false), !dbg !4790
  br label %if.end266, !dbg !4791

if.else18:                                        ; preds = %lor.lhs.false, %if.end7
  %20 = load i64, i64* %ntokens, align 8, !dbg !4792, !tbaa !914
  %cmp19 = icmp eq i64 %20, 6, !dbg !4793
  br i1 %cmp19, label %land.lhs.true20, label %if.else52, !dbg !4794

land.lhs.true20:                                  ; preds = %if.else18
  %arrayidx21 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4795
  %value22 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx21, i32 0, i32 0, !dbg !4796
  %21 = load i8*, i8** %value22, align 16, !dbg !4796, !tbaa !4776
  %call23 = call i32 @strcmp(i8* %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.49, i64 0, i64 0)) #15, !dbg !4797
  %cmp24 = icmp eq i32 %call23, 0, !dbg !4798
  br i1 %cmp24, label %land.lhs.true25, label %lor.lhs.false26, !dbg !4799

land.lhs.true25:                                  ; preds = %land.lhs.true20
  store i32 1, i32* %comm, align 4, !dbg !4800, !tbaa !946
  br i1 true, label %if.then50, label %lor.lhs.false26, !dbg !4801

lor.lhs.false26:                                  ; preds = %land.lhs.true25, %land.lhs.true20
  %arrayidx27 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4802
  %value28 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx27, i32 0, i32 0, !dbg !4803
  %22 = load i8*, i8** %value28, align 16, !dbg !4803, !tbaa !4776
  %call29 = call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0)) #15, !dbg !4804
  %cmp30 = icmp eq i32 %call29, 0, !dbg !4805
  br i1 %cmp30, label %land.lhs.true31, label %lor.lhs.false32, !dbg !4806

land.lhs.true31:                                  ; preds = %lor.lhs.false26
  store i32 2, i32* %comm, align 4, !dbg !4807, !tbaa !946
  br i1 true, label %if.then50, label %lor.lhs.false32, !dbg !4808

lor.lhs.false32:                                  ; preds = %land.lhs.true31, %lor.lhs.false26
  %arrayidx33 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4809
  %value34 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx33, i32 0, i32 0, !dbg !4810
  %23 = load i8*, i8** %value34, align 16, !dbg !4810, !tbaa !4776
  %call35 = call i32 @strcmp(i8* %23, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0)) #15, !dbg !4811
  %cmp36 = icmp eq i32 %call35, 0, !dbg !4812
  br i1 %cmp36, label %land.lhs.true37, label %lor.lhs.false38, !dbg !4813

land.lhs.true37:                                  ; preds = %lor.lhs.false32
  store i32 3, i32* %comm, align 4, !dbg !4814, !tbaa !946
  br i1 true, label %if.then50, label %lor.lhs.false38, !dbg !4815

lor.lhs.false38:                                  ; preds = %land.lhs.true37, %lor.lhs.false32
  %arrayidx39 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4816
  %value40 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx39, i32 0, i32 0, !dbg !4817
  %24 = load i8*, i8** %value40, align 16, !dbg !4817, !tbaa !4776
  %call41 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.52, i64 0, i64 0)) #15, !dbg !4818
  %cmp42 = icmp eq i32 %call41, 0, !dbg !4819
  br i1 %cmp42, label %land.lhs.true43, label %lor.lhs.false44, !dbg !4820

land.lhs.true43:                                  ; preds = %lor.lhs.false38
  store i32 5, i32* %comm, align 4, !dbg !4821, !tbaa !946
  br i1 true, label %if.then50, label %lor.lhs.false44, !dbg !4822

lor.lhs.false44:                                  ; preds = %land.lhs.true43, %lor.lhs.false38
  %arrayidx45 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4823
  %value46 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx45, i32 0, i32 0, !dbg !4824
  %25 = load i8*, i8** %value46, align 16, !dbg !4824, !tbaa !4776
  %call47 = call i32 @strcmp(i8* %25, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i64 0, i64 0)) #15, !dbg !4825
  %cmp48 = icmp eq i32 %call47, 0, !dbg !4826
  br i1 %cmp48, label %land.lhs.true49, label %if.else52, !dbg !4827

land.lhs.true49:                                  ; preds = %lor.lhs.false44
  store i32 4, i32* %comm, align 4, !dbg !4828, !tbaa !946
  br i1 true, label %if.then50, label %if.else52, !dbg !4829

if.then50:                                        ; preds = %land.lhs.true49, %land.lhs.true43, %land.lhs.true37, %land.lhs.true31, %land.lhs.true25
  %26 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4830, !tbaa !964
  %arraydecay51 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4832
  %27 = load i64, i64* %ntokens, align 8, !dbg !4833, !tbaa !914
  %28 = load i32, i32* %comm, align 4, !dbg !4834, !tbaa !946
  call void @process_update_command(%struct.conn* %26, %struct.token_s* %arraydecay51, i64 %27, i32 %28, i1 zeroext false), !dbg !4835
  br label %if.end265, !dbg !4836

if.else52:                                        ; preds = %land.lhs.true49, %lor.lhs.false44, %if.else18
  %29 = load i64, i64* %ntokens, align 8, !dbg !4837, !tbaa !914
  %cmp53 = icmp eq i64 %29, 7, !dbg !4838
  br i1 %cmp53, label %land.lhs.true54, label %if.else62, !dbg !4839

land.lhs.true54:                                  ; preds = %if.else52
  %arrayidx55 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4840
  %value56 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx55, i32 0, i32 0, !dbg !4841
  %30 = load i8*, i8** %value56, align 16, !dbg !4841, !tbaa !4776
  %call57 = call i32 @strcmp(i8* %30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0)) #15, !dbg !4842
  %cmp58 = icmp eq i32 %call57, 0, !dbg !4843
  br i1 %cmp58, label %land.lhs.true59, label %if.else62, !dbg !4844

land.lhs.true59:                                  ; preds = %land.lhs.true54
  store i32 6, i32* %comm, align 4, !dbg !4845, !tbaa !946
  br i1 true, label %if.then60, label %if.else62, !dbg !4846

if.then60:                                        ; preds = %land.lhs.true59
  %31 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4847, !tbaa !964
  %arraydecay61 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4849
  %32 = load i64, i64* %ntokens, align 8, !dbg !4850, !tbaa !914
  %33 = load i32, i32* %comm, align 4, !dbg !4851, !tbaa !946
  call void @process_update_command(%struct.conn* %31, %struct.token_s* %arraydecay61, i64 %32, i32 %33, i1 zeroext true), !dbg !4852
  br label %if.end264, !dbg !4853

if.else62:                                        ; preds = %land.lhs.true59, %land.lhs.true54, %if.else52
  %34 = load i64, i64* %ntokens, align 8, !dbg !4854, !tbaa !914
  %cmp63 = icmp eq i64 %34, 4, !dbg !4855
  br i1 %cmp63, label %land.lhs.true64, label %if.else71, !dbg !4856

land.lhs.true64:                                  ; preds = %if.else62
  %arrayidx65 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4857
  %value66 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx65, i32 0, i32 0, !dbg !4858
  %35 = load i8*, i8** %value66, align 16, !dbg !4858, !tbaa !4776
  %call67 = call i32 @strcmp(i8* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i64 0, i64 0)) #15, !dbg !4859
  %cmp68 = icmp eq i32 %call67, 0, !dbg !4860
  br i1 %cmp68, label %if.then69, label %if.else71, !dbg !4861

if.then69:                                        ; preds = %land.lhs.true64
  %36 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4862, !tbaa !964
  %arraydecay70 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4864
  %37 = load i64, i64* %ntokens, align 8, !dbg !4865, !tbaa !914
  call void @process_arithmetic_command(%struct.conn* %36, %struct.token_s* %arraydecay70, i64 %37, i1 zeroext true), !dbg !4866
  br label %if.end263, !dbg !4867

if.else71:                                        ; preds = %land.lhs.true64, %if.else62
  %38 = load i64, i64* %ntokens, align 8, !dbg !4868, !tbaa !914
  %cmp72 = icmp uge i64 %38, 3, !dbg !4869
  br i1 %cmp72, label %land.lhs.true73, label %if.else80, !dbg !4870

land.lhs.true73:                                  ; preds = %if.else71
  %arrayidx74 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4871
  %value75 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx74, i32 0, i32 0, !dbg !4872
  %39 = load i8*, i8** %value75, align 16, !dbg !4872, !tbaa !4776
  %call76 = call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0)) #15, !dbg !4873
  %cmp77 = icmp eq i32 %call76, 0, !dbg !4874
  br i1 %cmp77, label %if.then78, label %if.else80, !dbg !4875

if.then78:                                        ; preds = %land.lhs.true73
  %40 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4876, !tbaa !964
  %arraydecay79 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4878
  %41 = load i64, i64* %ntokens, align 8, !dbg !4879, !tbaa !914
  call void @process_get_command(%struct.conn* %40, %struct.token_s* %arraydecay79, i64 %41, i1 zeroext true), !dbg !4880
  br label %if.end262, !dbg !4881

if.else80:                                        ; preds = %land.lhs.true73, %if.else71
  %42 = load i64, i64* %ntokens, align 8, !dbg !4882, !tbaa !914
  %cmp81 = icmp eq i64 %42, 4, !dbg !4883
  br i1 %cmp81, label %land.lhs.true82, label %if.else89, !dbg !4884

land.lhs.true82:                                  ; preds = %if.else80
  %arrayidx83 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4885
  %value84 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx83, i32 0, i32 0, !dbg !4886
  %43 = load i8*, i8** %value84, align 16, !dbg !4886, !tbaa !4776
  %call85 = call i32 @strcmp(i8* %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0)) #15, !dbg !4887
  %cmp86 = icmp eq i32 %call85, 0, !dbg !4888
  br i1 %cmp86, label %if.then87, label %if.else89, !dbg !4889

if.then87:                                        ; preds = %land.lhs.true82
  %44 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4890, !tbaa !964
  %arraydecay88 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4892
  %45 = load i64, i64* %ntokens, align 8, !dbg !4893, !tbaa !914
  call void @process_arithmetic_command(%struct.conn* %44, %struct.token_s* %arraydecay88, i64 %45, i1 zeroext false), !dbg !4894
  br label %if.end261, !dbg !4895

if.else89:                                        ; preds = %land.lhs.true82, %if.else80
  %46 = load i64, i64* %ntokens, align 8, !dbg !4896, !tbaa !914
  %cmp90 = icmp uge i64 %46, 3, !dbg !4897
  br i1 %cmp90, label %land.lhs.true91, label %if.else100, !dbg !4898

land.lhs.true91:                                  ; preds = %if.else89
  %47 = load i64, i64* %ntokens, align 8, !dbg !4899, !tbaa !914
  %cmp92 = icmp ule i64 %47, 4, !dbg !4900
  br i1 %cmp92, label %land.lhs.true93, label %if.else100, !dbg !4901

land.lhs.true93:                                  ; preds = %land.lhs.true91
  %arrayidx94 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4902
  %value95 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx94, i32 0, i32 0, !dbg !4903
  %48 = load i8*, i8** %value95, align 16, !dbg !4903, !tbaa !4776
  %call96 = call i32 @strcmp(i8* %48, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0)) #15, !dbg !4904
  %cmp97 = icmp eq i32 %call96, 0, !dbg !4905
  br i1 %cmp97, label %if.then98, label %if.else100, !dbg !4906

if.then98:                                        ; preds = %land.lhs.true93
  %49 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4907, !tbaa !964
  %arraydecay99 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4909
  %50 = load i64, i64* %ntokens, align 8, !dbg !4910, !tbaa !914
  call void @process_delete_command(%struct.conn* %49, %struct.token_s* %arraydecay99, i64 %50), !dbg !4911
  br label %if.end260, !dbg !4912

if.else100:                                       ; preds = %land.lhs.true93, %land.lhs.true91, %if.else89
  %51 = load i64, i64* %ntokens, align 8, !dbg !4913, !tbaa !914
  %cmp101 = icmp eq i64 %51, 3, !dbg !4914
  br i1 %cmp101, label %land.lhs.true102, label %if.else123, !dbg !4915

land.lhs.true102:                                 ; preds = %if.else100
  %arrayidx103 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4916
  %value104 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx103, i32 0, i32 0, !dbg !4917
  %52 = load i8*, i8** %value104, align 16, !dbg !4917, !tbaa !4776
  %call105 = call i32 @strcmp(i8* %52, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i64 0, i64 0)) #15, !dbg !4918
  %cmp106 = icmp eq i32 %call105, 0, !dbg !4919
  br i1 %cmp106, label %if.then107, label %if.else123, !dbg !4920

if.then107:                                       ; preds = %land.lhs.true102
  %53 = bitcast i32* %bucket to i8*, !dbg !4921
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #12, !dbg !4921
  call void @llvm.dbg.declare(metadata i32* %bucket, metadata !4706, metadata !DIExpression()), !dbg !4922
  %54 = bitcast i32* %gen to i8*, !dbg !4921
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #12, !dbg !4921
  call void @llvm.dbg.declare(metadata i32* %gen, metadata !4716, metadata !DIExpression()), !dbg !4923
  %55 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8, !dbg !4924, !tbaa !2245, !range !1262
  %tobool = trunc i8 %55 to i1, !dbg !4924
  br i1 %tobool, label %if.end109, label %if.then108, !dbg !4926

if.then108:                                       ; preds = %if.then107
  %56 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4927, !tbaa !964
  call void @out_string(%struct.conn* %56, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.60, i64 0, i64 0)), !dbg !4929
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4930

if.end109:                                        ; preds = %if.then107
  %arrayidx110 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 1, !dbg !4931
  %value111 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx110, i32 0, i32 0, !dbg !4933
  %57 = load i8*, i8** %value111, align 16, !dbg !4933, !tbaa !4776
  %call112 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %57, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i32* %bucket, i32* %gen) #12, !dbg !4934
  %cmp113 = icmp eq i32 %call112, 2, !dbg !4935
  br i1 %cmp113, label %if.then114, label %if.else121, !dbg !4936

if.then114:                                       ; preds = %if.end109
  %58 = load i32, i32* %bucket, align 4, !dbg !4937, !tbaa !946
  %cmp115 = icmp ult i32 %58, 0, !dbg !4940
  br i1 %cmp115, label %if.then118, label %lor.lhs.false116, !dbg !4941

lor.lhs.false116:                                 ; preds = %if.then114
  %59 = load i32, i32* %bucket, align 4, !dbg !4942, !tbaa !946
  %cmp117 = icmp uge i32 %59, 32768, !dbg !4943
  br i1 %cmp117, label %if.then118, label %if.end119, !dbg !4944

if.then118:                                       ; preds = %lor.lhs.false116, %if.then114
  %60 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4945, !tbaa !964
  call void @out_string(%struct.conn* %60, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.62, i64 0, i64 0)), !dbg !4947
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4948

if.end119:                                        ; preds = %lor.lhs.false116
  %61 = load i32, i32* %gen, align 4, !dbg !4949, !tbaa !946
  %62 = load i32*, i32** @buckets, align 8, !dbg !4950, !tbaa !964
  %63 = load i32, i32* %bucket, align 4, !dbg !4951, !tbaa !946
  %idxprom = zext i32 %63 to i64, !dbg !4950
  %arrayidx120 = getelementptr inbounds i32, i32* %62, i64 %idxprom, !dbg !4950
  store i32 %61, i32* %arrayidx120, align 4, !dbg !4952, !tbaa !946
  %64 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4953, !tbaa !964
  call void @out_string(%struct.conn* %64, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0)), !dbg !4954
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4955

if.else121:                                       ; preds = %if.end109
  %65 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4956, !tbaa !964
  call void @out_string(%struct.conn* %65, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64, i64 0, i64 0)), !dbg !4958
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !4959

cleanup:                                          ; preds = %if.else121, %if.end119, %if.then118, %if.then108
  %66 = bitcast i32* %gen to i8*, !dbg !4960
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #12, !dbg !4960
  %67 = bitcast i32* %bucket to i8*, !dbg !4960
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %67) #12, !dbg !4960
  br label %cleanup267

if.else123:                                       ; preds = %land.lhs.true102, %if.else100
  %68 = load i64, i64* %ntokens, align 8, !dbg !4961, !tbaa !914
  %cmp124 = icmp eq i64 %68, 3, !dbg !4962
  br i1 %cmp124, label %land.lhs.true125, label %if.else149, !dbg !4963

land.lhs.true125:                                 ; preds = %if.else123
  %arrayidx126 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !4964
  %value127 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx126, i32 0, i32 0, !dbg !4965
  %69 = load i8*, i8** %value127, align 16, !dbg !4965, !tbaa !4776
  %call128 = call i32 @strcmp(i8* %69, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i64 0, i64 0)) #15, !dbg !4966
  %cmp129 = icmp eq i32 %call128, 0, !dbg !4967
  br i1 %cmp129, label %if.then130, label %if.else149, !dbg !4968

if.then130:                                       ; preds = %land.lhs.true125
  %70 = bitcast i32* %bucket131 to i8*, !dbg !4969
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %70) #12, !dbg !4969
  call void @llvm.dbg.declare(metadata i32* %bucket131, metadata !4717, metadata !DIExpression()), !dbg !4970
  %71 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8, !dbg !4971, !tbaa !2245, !range !1262
  %tobool132 = trunc i8 %71 to i1, !dbg !4971
  br i1 %tobool132, label %if.end134, label %if.then133, !dbg !4973

if.then133:                                       ; preds = %if.then130
  %72 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4974, !tbaa !964
  call void @out_string(%struct.conn* %72, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.60, i64 0, i64 0)), !dbg !4976
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup148, !dbg !4977

if.end134:                                        ; preds = %if.then130
  %arrayidx135 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 1, !dbg !4978
  %value136 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx135, i32 0, i32 0, !dbg !4980
  %73 = load i8*, i8** %value136, align 16, !dbg !4980, !tbaa !4776
  %call137 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %73, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i64 0, i64 0), i32* %bucket131) #12, !dbg !4981
  %cmp138 = icmp eq i32 %call137, 1, !dbg !4982
  br i1 %cmp138, label %if.then139, label %if.else147, !dbg !4983

if.then139:                                       ; preds = %if.end134
  %74 = load i32, i32* %bucket131, align 4, !dbg !4984, !tbaa !946
  %cmp140 = icmp slt i32 %74, 0, !dbg !4987
  br i1 %cmp140, label %if.then143, label %lor.lhs.false141, !dbg !4988

lor.lhs.false141:                                 ; preds = %if.then139
  %75 = load i32, i32* %bucket131, align 4, !dbg !4989, !tbaa !946
  %cmp142 = icmp sge i32 %75, 32768, !dbg !4990
  br i1 %cmp142, label %if.then143, label %if.end144, !dbg !4991

if.then143:                                       ; preds = %lor.lhs.false141, %if.then139
  %76 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4992, !tbaa !964
  call void @out_string(%struct.conn* %76, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.62, i64 0, i64 0)), !dbg !4994
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup148, !dbg !4995

if.end144:                                        ; preds = %lor.lhs.false141
  %77 = load i32*, i32** @buckets, align 8, !dbg !4996, !tbaa !964
  %78 = load i32, i32* %bucket131, align 4, !dbg !4997, !tbaa !946
  %idxprom145 = sext i32 %78 to i64, !dbg !4996
  %arrayidx146 = getelementptr inbounds i32, i32* %77, i64 %idxprom145, !dbg !4996
  store i32 0, i32* %arrayidx146, align 4, !dbg !4998, !tbaa !946
  %79 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !4999, !tbaa !964
  call void @out_string(%struct.conn* %79, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67, i64 0, i64 0)), !dbg !5000
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup148, !dbg !5001

if.else147:                                       ; preds = %if.end134
  %80 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5002, !tbaa !964
  call void @out_string(%struct.conn* %80, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64, i64 0, i64 0)), !dbg !5004
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup148, !dbg !5005

cleanup148:                                       ; preds = %if.else147, %if.end144, %if.then143, %if.then133
  %81 = bitcast i32* %bucket131 to i8*, !dbg !5006
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %81) #12, !dbg !5006
  br label %cleanup267

if.else149:                                       ; preds = %land.lhs.true125, %if.else123
  %82 = load i64, i64* %ntokens, align 8, !dbg !5007, !tbaa !914
  %cmp150 = icmp eq i64 %82, 3, !dbg !5008
  br i1 %cmp150, label %land.lhs.true151, label %if.else180, !dbg !5009

land.lhs.true151:                                 ; preds = %if.else149
  %arrayidx152 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !5010
  %value153 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx152, i32 0, i32 0, !dbg !5011
  %83 = load i8*, i8** %value153, align 16, !dbg !5011, !tbaa !4776
  %call154 = call i32 @strcmp(i8* %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i64 0, i64 0)) #15, !dbg !5012
  %cmp155 = icmp eq i32 %call154, 0, !dbg !5013
  br i1 %cmp155, label %if.then156, label %if.else180, !dbg !5014

if.then156:                                       ; preds = %land.lhs.true151
  %84 = bitcast i32* %bucket157 to i8*, !dbg !5015
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %84) #12, !dbg !5015
  call void @llvm.dbg.declare(metadata i32* %bucket157, metadata !4720, metadata !DIExpression()), !dbg !5016
  %85 = bitcast i32* %gen158 to i8*, !dbg !5015
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %85) #12, !dbg !5015
  call void @llvm.dbg.declare(metadata i32* %gen158, metadata !4723, metadata !DIExpression()), !dbg !5017
  %86 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8, !dbg !5018, !tbaa !2245, !range !1262
  %tobool159 = trunc i8 %86 to i1, !dbg !5018
  br i1 %tobool159, label %if.end161, label %if.then160, !dbg !5020

if.then160:                                       ; preds = %if.then156
  %87 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5021, !tbaa !964
  call void @out_string(%struct.conn* %87, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.60, i64 0, i64 0)), !dbg !5023
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup178, !dbg !5024

if.end161:                                        ; preds = %if.then156
  %arrayidx162 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 1, !dbg !5025
  %value163 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx162, i32 0, i32 0, !dbg !5027
  %88 = load i8*, i8** %value163, align 16, !dbg !5027, !tbaa !4776
  %call164 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %88, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0), i32* %bucket157, i32* %gen158) #12, !dbg !5028
  %cmp165 = icmp eq i32 %call164, 2, !dbg !5029
  br i1 %cmp165, label %if.then166, label %if.else177, !dbg !5030

if.then166:                                       ; preds = %if.end161
  %89 = load i32, i32* %bucket157, align 4, !dbg !5031, !tbaa !946
  %cmp167 = icmp slt i32 %89, 0, !dbg !5034
  br i1 %cmp167, label %if.then172, label %lor.lhs.false168, !dbg !5035

lor.lhs.false168:                                 ; preds = %if.then166
  %90 = load i32, i32* %bucket157, align 4, !dbg !5036, !tbaa !946
  %cmp169 = icmp sge i32 %90, 32768, !dbg !5037
  br i1 %cmp169, label %if.then172, label %lor.lhs.false170, !dbg !5038

lor.lhs.false170:                                 ; preds = %lor.lhs.false168
  %91 = load i32, i32* %gen158, align 4, !dbg !5039, !tbaa !946
  %cmp171 = icmp sle i32 %91, 0, !dbg !5040
  br i1 %cmp171, label %if.then172, label %if.else173, !dbg !5041

if.then172:                                       ; preds = %lor.lhs.false170, %lor.lhs.false168, %if.then166
  br label %if.end176, !dbg !5042

if.else173:                                       ; preds = %lor.lhs.false170
  %92 = load i32, i32* %bucket157, align 4, !dbg !5044, !tbaa !946
  %93 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5046, !tbaa !964
  %bucket174 = getelementptr inbounds %struct.conn, %struct.conn* %93, i32 0, i32 43, !dbg !5047
  store i32 %92, i32* %bucket174, align 8, !dbg !5048, !tbaa !1361
  %94 = load i32, i32* %gen158, align 4, !dbg !5049, !tbaa !946
  %95 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5050, !tbaa !964
  %gen175 = getelementptr inbounds %struct.conn, %struct.conn* %95, i32 0, i32 44, !dbg !5051
  store i32 %94, i32* %gen175, align 4, !dbg !5052, !tbaa !1365
  br label %if.end176

if.end176:                                        ; preds = %if.else173, %if.then172
  %96 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5053, !tbaa !964
  call void @conn_set_state(%struct.conn* %96, i32 1), !dbg !5054
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup178, !dbg !5055

if.else177:                                       ; preds = %if.end161
  %97 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5056, !tbaa !964
  call void @out_string(%struct.conn* %97, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64, i64 0, i64 0)), !dbg !5058
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup178, !dbg !5059

cleanup178:                                       ; preds = %if.else177, %if.end176, %if.then160
  %98 = bitcast i32* %gen158 to i8*, !dbg !5060
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %98) #12, !dbg !5060
  %99 = bitcast i32* %bucket157 to i8*, !dbg !5060
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %99) #12, !dbg !5060
  br label %cleanup267

if.else180:                                       ; preds = %land.lhs.true151, %if.else149
  %100 = load i64, i64* %ntokens, align 8, !dbg !5061, !tbaa !914
  %cmp181 = icmp uge i64 %100, 2, !dbg !5062
  br i1 %cmp181, label %land.lhs.true182, label %if.else189, !dbg !5063

land.lhs.true182:                                 ; preds = %if.else180
  %arrayidx183 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !5064
  %value184 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx183, i32 0, i32 0, !dbg !5065
  %101 = load i8*, i8** %value184, align 16, !dbg !5065, !tbaa !4776
  %call185 = call i32 @strcmp(i8* %101, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0)) #15, !dbg !5066
  %cmp186 = icmp eq i32 %call185, 0, !dbg !5067
  br i1 %cmp186, label %if.then187, label %if.else189, !dbg !5068

if.then187:                                       ; preds = %land.lhs.true182
  %102 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5069, !tbaa !964
  %arraydecay188 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !5071
  %103 = load i64, i64* %ntokens, align 8, !dbg !5072, !tbaa !914
  call void @process_stat(%struct.conn* %102, %struct.token_s* %arraydecay188, i64 %103), !dbg !5073
  br label %if.end256, !dbg !5074

if.else189:                                       ; preds = %land.lhs.true182, %if.else180
  %104 = load i64, i64* %ntokens, align 8, !dbg !5075, !tbaa !914
  %cmp190 = icmp uge i64 %104, 2, !dbg !5076
  br i1 %cmp190, label %land.lhs.true191, label %if.else212, !dbg !5077

land.lhs.true191:                                 ; preds = %if.else189
  %105 = load i64, i64* %ntokens, align 8, !dbg !5078, !tbaa !914
  %cmp192 = icmp ule i64 %105, 3, !dbg !5079
  br i1 %cmp192, label %land.lhs.true193, label %if.else212, !dbg !5080

land.lhs.true193:                                 ; preds = %land.lhs.true191
  %arrayidx194 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !5081
  %value195 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx194, i32 0, i32 0, !dbg !5082
  %106 = load i8*, i8** %value195, align 16, !dbg !5082, !tbaa !4776
  %call196 = call i32 @strcmp(i8* %106, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i64 0, i64 0)) #15, !dbg !5083
  %cmp197 = icmp eq i32 %call196, 0, !dbg !5084
  br i1 %cmp197, label %if.then198, label %if.else212, !dbg !5085

if.then198:                                       ; preds = %land.lhs.true193
  %107 = bitcast i64* %exptime to i8*, !dbg !5086
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %107) #12, !dbg !5086
  call void @llvm.dbg.declare(metadata i64* %exptime, metadata !4724, metadata !DIExpression()), !dbg !5087
  store i64 0, i64* %exptime, align 8, !dbg !5087, !tbaa !914
  call void @set_current_time(), !dbg !5088
  %108 = load i64, i64* %ntokens, align 8, !dbg !5089, !tbaa !914
  %cmp199 = icmp eq i64 %108, 2, !dbg !5091
  br i1 %cmp199, label %if.then200, label %if.end201, !dbg !5092

if.then200:                                       ; preds = %if.then198
  %109 = load volatile i32, i32* @current_time, align 4, !dbg !5093, !tbaa !946
  %sub = sub i32 %109, 1, !dbg !5095
  store i32 %sub, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4, !dbg !5096, !tbaa !2725
  call void @mt_item_flush_expired(), !dbg !5097
  %110 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5098, !tbaa !964
  call void @out_string(%struct.conn* %110, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i64 0, i64 0)), !dbg !5099
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup211, !dbg !5100

if.end201:                                        ; preds = %if.then198
  %arrayidx202 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 1, !dbg !5101
  %value203 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx202, i32 0, i32 0, !dbg !5102
  %111 = load i8*, i8** %value203, align 16, !dbg !5102, !tbaa !4776
  %call204 = call i64 @strtol(i8* %111, i8** null, i32 10) #12, !dbg !5103
  store i64 %call204, i64* %exptime, align 8, !dbg !5104, !tbaa !914
  %call205 = call i32* @__errno_location() #14, !dbg !5105
  %112 = load i32, i32* %call205, align 4, !dbg !5105, !tbaa !946
  %cmp206 = icmp eq i32 %112, 34, !dbg !5107
  br i1 %cmp206, label %if.then207, label %if.end208, !dbg !5108

if.then207:                                       ; preds = %if.end201
  %113 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5109, !tbaa !964
  call void @out_string(%struct.conn* %113, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i64 0, i64 0)), !dbg !5111
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup211, !dbg !5112

if.end208:                                        ; preds = %if.end201
  %114 = load i64, i64* %exptime, align 8, !dbg !5113, !tbaa !914
  %call209 = call i32 @realtime(i64 %114), !dbg !5114
  %sub210 = sub i32 %call209, 1, !dbg !5115
  store i32 %sub210, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 6), align 4, !dbg !5116, !tbaa !2725
  call void @mt_item_flush_expired(), !dbg !5117
  %115 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5118, !tbaa !964
  call void @out_string(%struct.conn* %115, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i64 0, i64 0)), !dbg !5119
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup211, !dbg !5120

cleanup211:                                       ; preds = %if.end208, %if.then207, %if.then200
  %116 = bitcast i64* %exptime to i8*, !dbg !5121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #12, !dbg !5121
  br label %cleanup267

if.else212:                                       ; preds = %land.lhs.true193, %land.lhs.true191, %if.else189
  %117 = load i64, i64* %ntokens, align 8, !dbg !5122, !tbaa !914
  %cmp213 = icmp eq i64 %117, 2, !dbg !5124
  br i1 %cmp213, label %land.lhs.true214, label %if.else220, !dbg !5125

land.lhs.true214:                                 ; preds = %if.else212
  %arrayidx215 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !5126
  %value216 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx215, i32 0, i32 0, !dbg !5127
  %118 = load i8*, i8** %value216, align 16, !dbg !5127, !tbaa !4776
  %call217 = call i32 @strcmp(i8* %118, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0)) #15, !dbg !5128
  %cmp218 = icmp eq i32 %call217, 0, !dbg !5129
  br i1 %cmp218, label %if.then219, label %if.else220, !dbg !5130

if.then219:                                       ; preds = %land.lhs.true214
  %119 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5131, !tbaa !964
  call void @out_string(%struct.conn* %119, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i64 0, i64 0)), !dbg !5133
  br label %if.end254, !dbg !5134

if.else220:                                       ; preds = %land.lhs.true214, %if.else212
  %120 = load i64, i64* %ntokens, align 8, !dbg !5135, !tbaa !914
  %cmp221 = icmp eq i64 %120, 2, !dbg !5137
  br i1 %cmp221, label %land.lhs.true222, label %if.else228, !dbg !5138

land.lhs.true222:                                 ; preds = %if.else220
  %arrayidx223 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !5139
  %value224 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx223, i32 0, i32 0, !dbg !5140
  %121 = load i8*, i8** %value224, align 16, !dbg !5140, !tbaa !4776
  %call225 = call i32 @strcmp(i8* %121, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i64 0, i64 0)) #15, !dbg !5141
  %cmp226 = icmp eq i32 %call225, 0, !dbg !5142
  br i1 %cmp226, label %if.then227, label %if.else228, !dbg !5143

if.then227:                                       ; preds = %land.lhs.true222
  %122 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5144, !tbaa !964
  call void @conn_set_state(%struct.conn* %122, i32 5), !dbg !5146
  br label %if.end253, !dbg !5147

if.else228:                                       ; preds = %land.lhs.true222, %if.else220
  %123 = load i64, i64* %ntokens, align 8, !dbg !5148, !tbaa !914
  %cmp229 = icmp eq i64 %123, 5, !dbg !5150
  br i1 %cmp229, label %land.lhs.true230, label %if.else241, !dbg !5151

land.lhs.true230:                                 ; preds = %if.else228
  %arrayidx231 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !5152
  %value232 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx231, i32 0, i32 0, !dbg !5153
  %124 = load i8*, i8** %value232, align 16, !dbg !5153, !tbaa !4776
  %call233 = call i32 @strcmp(i8* %124, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0)) #15, !dbg !5154
  %cmp234 = icmp eq i32 %call233, 0, !dbg !5155
  br i1 %cmp234, label %land.lhs.true235, label %if.else241, !dbg !5156

land.lhs.true235:                                 ; preds = %land.lhs.true230
  %arrayidx236 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 1, !dbg !5157
  %value237 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx236, i32 0, i32 0, !dbg !5158
  %125 = load i8*, i8** %value237, align 16, !dbg !5158, !tbaa !4776
  %call238 = call i32 @strcmp(i8* %125, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i64 0, i64 0)) #15, !dbg !5159
  %cmp239 = icmp eq i32 %call238, 0, !dbg !5160
  br i1 %cmp239, label %if.then240, label %if.else241, !dbg !5161

if.then240:                                       ; preds = %land.lhs.true235
  %126 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5162, !tbaa !964
  call void @out_string(%struct.conn* %126, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.78, i64 0, i64 0)), !dbg !5164
  br label %if.end252, !dbg !5165

if.else241:                                       ; preds = %land.lhs.true235, %land.lhs.true230, %if.else228
  %127 = load i64, i64* %ntokens, align 8, !dbg !5166, !tbaa !914
  %cmp242 = icmp eq i64 %127, 3, !dbg !5168
  br i1 %cmp242, label %land.lhs.true243, label %if.else250, !dbg !5169

land.lhs.true243:                                 ; preds = %if.else241
  %arrayidx244 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !5170
  %value245 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx244, i32 0, i32 0, !dbg !5171
  %128 = load i8*, i8** %value245, align 16, !dbg !5171, !tbaa !4776
  %call246 = call i32 @strcmp(i8* %128, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i64 0, i64 0)) #15, !dbg !5172
  %cmp247 = icmp eq i32 %call246, 0, !dbg !5173
  br i1 %cmp247, label %if.then248, label %if.else250, !dbg !5174

if.then248:                                       ; preds = %land.lhs.true243
  %129 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5175, !tbaa !964
  %arraydecay249 = getelementptr inbounds [7 x %struct.token_s], [7 x %struct.token_s]* %tokens, i64 0, i64 0, !dbg !5177
  %130 = load i64, i64* %ntokens, align 8, !dbg !5178, !tbaa !914
  call void @process_verbosity_command(%struct.conn* %129, %struct.token_s* %arraydecay249, i64 %130), !dbg !5179
  br label %if.end251, !dbg !5180

if.else250:                                       ; preds = %land.lhs.true243, %if.else241
  %131 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5181, !tbaa !964
  call void @out_string(%struct.conn* %131, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0)), !dbg !5183
  br label %if.end251

if.end251:                                        ; preds = %if.else250, %if.then248
  br label %if.end252

if.end252:                                        ; preds = %if.end251, %if.then240
  br label %if.end253

if.end253:                                        ; preds = %if.end252, %if.then227
  br label %if.end254

if.end254:                                        ; preds = %if.end253, %if.then219
  br label %if.end255

if.end255:                                        ; preds = %if.end254
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %if.then187
  br label %if.end257

if.end257:                                        ; preds = %if.end256
  br label %if.end258

if.end258:                                        ; preds = %if.end257
  br label %if.end259

if.end259:                                        ; preds = %if.end258
  br label %if.end260

if.end260:                                        ; preds = %if.end259, %if.then98
  br label %if.end261

if.end261:                                        ; preds = %if.end260, %if.then87
  br label %if.end262

if.end262:                                        ; preds = %if.end261, %if.then78
  br label %if.end263

if.end263:                                        ; preds = %if.end262, %if.then69
  br label %if.end264

if.end264:                                        ; preds = %if.end263, %if.then60
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %if.then50
  br label %if.end266

if.end266:                                        ; preds = %if.end265, %if.then16
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup267, !dbg !5184

cleanup267:                                       ; preds = %if.end266, %cleanup211, %cleanup178, %cleanup148, %cleanup, %if.then6
  %132 = bitcast i32* %comm to i8*, !dbg !5185
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %132) #12, !dbg !5185
  %133 = bitcast i64* %ntokens to i8*, !dbg !5185
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %133) #12, !dbg !5185
  %134 = bitcast [7 x %struct.token_s]* %tokens to i8*, !dbg !5185
  call void @llvm.lifetime.end.p0i8(i64 112, i8* %134) #12, !dbg !5185
  ret void, !dbg !5185
}

; Function Attrs: nounwind uwtable
define internal i32 @add_msghdr(%struct.conn* %c) #0 !dbg !5186 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.conn*, align 8
  %msg = alloca %struct.msghdr*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !5188, metadata !DIExpression()), !dbg !5190
  %0 = bitcast %struct.msghdr** %msg to i8*, !dbg !5191
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !5191
  call void @llvm.dbg.declare(metadata %struct.msghdr** %msg, metadata !5189, metadata !DIExpression()), !dbg !5192
  %1 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5193, !tbaa !964
  %cmp = icmp ne %struct.conn* %1, null, !dbg !5193
  br i1 %cmp, label %if.then, label %if.else, !dbg !5196

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !5196

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 220, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.add_msghdr, i64 0, i64 0)) #13, !dbg !5193
  unreachable, !dbg !5193

if.end:                                           ; preds = %if.then
  %2 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5197, !tbaa !964
  %msgsize = getelementptr inbounds %struct.conn, %struct.conn* %2, i32 0, i32 24, !dbg !5199
  %3 = load i32, i32* %msgsize, align 8, !dbg !5199, !tbaa !1110
  %4 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5200, !tbaa !964
  %msgused = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 25, !dbg !5201
  %5 = load i32, i32* %msgused, align 4, !dbg !5201, !tbaa !1345
  %cmp1 = icmp eq i32 %3, %5, !dbg !5202
  br i1 %cmp1, label %if.then2, label %if.end10, !dbg !5203

if.then2:                                         ; preds = %if.end
  %6 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5204, !tbaa !964
  %msglist = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 23, !dbg !5206
  %7 = load %struct.msghdr*, %struct.msghdr** %msglist, align 8, !dbg !5206, !tbaa !1081
  %8 = bitcast %struct.msghdr* %7 to i8*, !dbg !5204
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5207, !tbaa !964
  %msgsize3 = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 24, !dbg !5208
  %10 = load i32, i32* %msgsize3, align 8, !dbg !5208, !tbaa !1110
  %mul = mul nsw i32 %10, 2, !dbg !5209
  %conv = sext i32 %mul to i64, !dbg !5207
  %mul4 = mul i64 %conv, 56, !dbg !5210
  %call = call i8* @realloc(i8* %8, i64 %mul4) #12, !dbg !5211
  %11 = bitcast i8* %call to %struct.msghdr*, !dbg !5211
  store %struct.msghdr* %11, %struct.msghdr** %msg, align 8, !dbg !5212, !tbaa !964
  %12 = load %struct.msghdr*, %struct.msghdr** %msg, align 8, !dbg !5213, !tbaa !964
  %tobool = icmp ne %struct.msghdr* %12, null, !dbg !5213
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !5215

if.then5:                                         ; preds = %if.then2
  store i32 -1, i32* %retval, align 4, !dbg !5216
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5216

if.end6:                                          ; preds = %if.then2
  %13 = load %struct.msghdr*, %struct.msghdr** %msg, align 8, !dbg !5217, !tbaa !964
  %14 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5218, !tbaa !964
  %msglist7 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 23, !dbg !5219
  store %struct.msghdr* %13, %struct.msghdr** %msglist7, align 8, !dbg !5220, !tbaa !1081
  %15 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5221, !tbaa !964
  %msgsize8 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 24, !dbg !5222
  %16 = load i32, i32* %msgsize8, align 8, !dbg !5223, !tbaa !1110
  %mul9 = mul nsw i32 %16, 2, !dbg !5223
  store i32 %mul9, i32* %msgsize8, align 8, !dbg !5223, !tbaa !1110
  br label %if.end10, !dbg !5224

if.end10:                                         ; preds = %if.end6, %if.end
  %17 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5225, !tbaa !964
  %msglist11 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 23, !dbg !5226
  %18 = load %struct.msghdr*, %struct.msghdr** %msglist11, align 8, !dbg !5226, !tbaa !1081
  %19 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5227, !tbaa !964
  %msgused12 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 25, !dbg !5228
  %20 = load i32, i32* %msgused12, align 4, !dbg !5228, !tbaa !1345
  %idx.ext = sext i32 %20 to i64, !dbg !5229
  %add.ptr = getelementptr inbounds %struct.msghdr, %struct.msghdr* %18, i64 %idx.ext, !dbg !5229
  store %struct.msghdr* %add.ptr, %struct.msghdr** %msg, align 8, !dbg !5230, !tbaa !964
  %21 = load %struct.msghdr*, %struct.msghdr** %msg, align 8, !dbg !5231, !tbaa !964
  %22 = bitcast %struct.msghdr* %21 to i8*, !dbg !5232
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 56, i1 false), !dbg !5232
  %23 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5233, !tbaa !964
  %iov = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 20, !dbg !5234
  %24 = load %struct.iovec*, %struct.iovec** %iov, align 8, !dbg !5234, !tbaa !1077
  %25 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5235, !tbaa !964
  %iovused = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 22, !dbg !5236
  %26 = load i32, i32* %iovused, align 4, !dbg !5236, !tbaa !1337
  %idxprom = sext i32 %26 to i64, !dbg !5233
  %arrayidx = getelementptr inbounds %struct.iovec, %struct.iovec* %24, i64 %idxprom, !dbg !5233
  %27 = load %struct.msghdr*, %struct.msghdr** %msg, align 8, !dbg !5237, !tbaa !964
  %msg_iov = getelementptr inbounds %struct.msghdr, %struct.msghdr* %27, i32 0, i32 2, !dbg !5238
  store %struct.iovec* %arrayidx, %struct.iovec** %msg_iov, align 8, !dbg !5239, !tbaa !4375
  %28 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5240, !tbaa !964
  %request_addr_size = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 39, !dbg !5242
  %29 = load i32, i32* %request_addr_size, align 4, !dbg !5242, !tbaa !3954
  %cmp13 = icmp ugt i32 %29, 0, !dbg !5243
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !5244

if.then15:                                        ; preds = %if.end10
  %30 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5245, !tbaa !964
  %request_addr = getelementptr inbounds %struct.conn, %struct.conn* %30, i32 0, i32 38, !dbg !5247
  %31 = bitcast %struct.sockaddr* %request_addr to i8*, !dbg !5248
  %32 = load %struct.msghdr*, %struct.msghdr** %msg, align 8, !dbg !5249, !tbaa !964
  %msg_name = getelementptr inbounds %struct.msghdr, %struct.msghdr* %32, i32 0, i32 0, !dbg !5250
  store i8* %31, i8** %msg_name, align 8, !dbg !5251, !tbaa !5252
  %33 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5253, !tbaa !964
  %request_addr_size16 = getelementptr inbounds %struct.conn, %struct.conn* %33, i32 0, i32 39, !dbg !5254
  %34 = load i32, i32* %request_addr_size16, align 4, !dbg !5254, !tbaa !3954
  %35 = load %struct.msghdr*, %struct.msghdr** %msg, align 8, !dbg !5255, !tbaa !964
  %msg_namelen = getelementptr inbounds %struct.msghdr, %struct.msghdr* %35, i32 0, i32 1, !dbg !5256
  store i32 %34, i32* %msg_namelen, align 8, !dbg !5257, !tbaa !5258
  br label %if.end17, !dbg !5259

if.end17:                                         ; preds = %if.then15, %if.end10
  %36 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5260, !tbaa !964
  %msgbytes = getelementptr inbounds %struct.conn, %struct.conn* %36, i32 0, i32 27, !dbg !5261
  store i32 0, i32* %msgbytes, align 4, !dbg !5262, !tbaa !4326
  %37 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5263, !tbaa !964
  %msgused18 = getelementptr inbounds %struct.conn, %struct.conn* %37, i32 0, i32 25, !dbg !5264
  %38 = load i32, i32* %msgused18, align 4, !dbg !5265, !tbaa !1345
  %inc = add nsw i32 %38, 1, !dbg !5265
  store i32 %inc, i32* %msgused18, align 4, !dbg !5265, !tbaa !1345
  %39 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5266, !tbaa !964
  %udp = getelementptr inbounds %struct.conn, %struct.conn* %39, i32 0, i32 36, !dbg !5268
  %40 = load i8, i8* %udp, align 4, !dbg !5268, !tbaa !1280, !range !1262
  %tobool19 = trunc i8 %40 to i1, !dbg !5268
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !5269

if.then20:                                        ; preds = %if.end17
  %41 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5270, !tbaa !964
  %call21 = call i32 @add_iov(%struct.conn* %41, i8* null, i32 8), !dbg !5272
  store i32 %call21, i32* %retval, align 4, !dbg !5273
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5273

if.end22:                                         ; preds = %if.end17
  store i32 0, i32* %retval, align 4, !dbg !5274
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5274

cleanup:                                          ; preds = %if.end22, %if.then20, %if.then5
  %42 = bitcast %struct.msghdr** %msg to i8*, !dbg !5275
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #12, !dbg !5275
  %43 = load i32, i32* %retval, align 4, !dbg !5275
  ret i32 %43, !dbg !5275
}

; Function Attrs: nounwind uwtable
define internal void @out_string(%struct.conn* %c, i8* %str) #0 !dbg !5276 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %str.addr = alloca i8*, align 8
  %len = alloca i64, align 8
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !5280, metadata !DIExpression()), !dbg !5283
  store i8* %str, i8** %str.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5281, metadata !DIExpression()), !dbg !5284
  %0 = bitcast i64* %len to i8*, !dbg !5285
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !5285
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5282, metadata !DIExpression()), !dbg !5286
  %1 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5287, !tbaa !964
  %cmp = icmp ne %struct.conn* %1, null, !dbg !5287
  br i1 %cmp, label %if.then, label %if.else, !dbg !5290

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !5290

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 752, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__PRETTY_FUNCTION__.out_string, i64 0, i64 0)) #13, !dbg !5287
  unreachable, !dbg !5287

if.end:                                           ; preds = %if.then
  %2 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !5291, !tbaa !1246
  %cmp1 = icmp sgt i32 %2, 1, !dbg !5293
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5294

if.then2:                                         ; preds = %if.end
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5295, !tbaa !964
  %4 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5296, !tbaa !964
  %sfd = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 0, !dbg !5297
  %5 = load i32, i32* %sfd, align 8, !dbg !5297, !tbaa !1275
  %6 = load i8*, i8** %str.addr, align 8, !dbg !5298, !tbaa !964
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.81, i64 0, i64 0), i32 %5, i8* %6), !dbg !5299
  br label %if.end3, !dbg !5299

if.end3:                                          ; preds = %if.then2, %if.end
  %7 = load i8*, i8** %str.addr, align 8, !dbg !5300, !tbaa !964
  %call4 = call i64 @strlen(i8* %7) #15, !dbg !5301
  store i64 %call4, i64* %len, align 8, !dbg !5302, !tbaa !914
  %8 = load i64, i64* %len, align 8, !dbg !5303, !tbaa !914
  %add = add i64 %8, 2, !dbg !5305
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5306, !tbaa !964
  %wsize = getelementptr inbounds %struct.conn, %struct.conn* %9, i32 0, i32 11, !dbg !5307
  %10 = load i32, i32* %wsize, align 8, !dbg !5307, !tbaa !1094
  %conv = sext i32 %10 to i64, !dbg !5306
  %cmp5 = icmp ugt i64 %add, %conv, !dbg !5308
  br i1 %cmp5, label %if.then7, label %if.end9, !dbg !5309

if.then7:                                         ; preds = %if.end3
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.82, i64 0, i64 0), i8** %str.addr, align 8, !dbg !5310, !tbaa !964
  %11 = load i8*, i8** %str.addr, align 8, !dbg !5312, !tbaa !964
  %call8 = call i64 @strlen(i8* %11) #15, !dbg !5313
  store i64 %call8, i64* %len, align 8, !dbg !5314, !tbaa !914
  br label %if.end9, !dbg !5315

if.end9:                                          ; preds = %if.then7, %if.end3
  %12 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5316, !tbaa !964
  %wbuf = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 9, !dbg !5317
  %13 = load i8*, i8** %wbuf, align 8, !dbg !5317, !tbaa !1054
  %14 = load i8*, i8** %str.addr, align 8, !dbg !5318, !tbaa !964
  %15 = load i64, i64* %len, align 8, !dbg !5319, !tbaa !914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %14, i64 %15, i1 false), !dbg !5320
  %16 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5321, !tbaa !964
  %wbuf10 = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 9, !dbg !5322
  %17 = load i8*, i8** %wbuf10, align 8, !dbg !5322, !tbaa !1054
  %18 = load i64, i64* %len, align 8, !dbg !5323, !tbaa !914
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !5324
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 3, i1 false), !dbg !5325
  %19 = load i64, i64* %len, align 8, !dbg !5326, !tbaa !914
  %add11 = add i64 %19, 2, !dbg !5327
  %conv12 = trunc i64 %add11 to i32, !dbg !5326
  %20 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5328, !tbaa !964
  %wbytes = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 12, !dbg !5329
  store i32 %conv12, i32* %wbytes, align 4, !dbg !5330, !tbaa !1293
  %21 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5331, !tbaa !964
  %wbuf13 = getelementptr inbounds %struct.conn, %struct.conn* %21, i32 0, i32 9, !dbg !5332
  %22 = load i8*, i8** %wbuf13, align 8, !dbg !5332, !tbaa !1054
  %23 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5333, !tbaa !964
  %wcurr = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 10, !dbg !5334
  store i8* %22, i8** %wcurr, align 8, !dbg !5335, !tbaa !1303
  %24 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5336, !tbaa !964
  call void @conn_set_state(%struct.conn* %24, i32 2), !dbg !5337
  %25 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5338, !tbaa !964
  %write_and_go = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 13, !dbg !5339
  store i32 1, i32* %write_and_go, align 8, !dbg !5340, !tbaa !1349
  %26 = bitcast i64* %len to i8*, !dbg !5341
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %26) #12, !dbg !5341
  ret void, !dbg !5341
}

; Function Attrs: nounwind uwtable
define internal i64 @tokenize_command(i8* %command, %struct.token_s* %tokens, i64 %max_tokens) #0 !dbg !5342 {
entry:
  %command.addr = alloca i8*, align 8
  %tokens.addr = alloca %struct.token_s*, align 8
  %max_tokens.addr = alloca i64, align 8
  %s = alloca i8*, align 8
  %e = alloca i8*, align 8
  %ntokens = alloca i64, align 8
  store i8* %command, i8** %command.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %command.addr, metadata !5348, metadata !DIExpression()), !dbg !5354
  store %struct.token_s* %tokens, %struct.token_s** %tokens.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.token_s** %tokens.addr, metadata !5349, metadata !DIExpression()), !dbg !5355
  store i64 %max_tokens, i64* %max_tokens.addr, align 8, !tbaa !914
  call void @llvm.dbg.declare(metadata i64* %max_tokens.addr, metadata !5350, metadata !DIExpression()), !dbg !5356
  %0 = bitcast i8** %s to i8*, !dbg !5357
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !5357
  call void @llvm.dbg.declare(metadata i8** %s, metadata !5351, metadata !DIExpression()), !dbg !5358
  %1 = bitcast i8** %e to i8*, !dbg !5357
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !5357
  call void @llvm.dbg.declare(metadata i8** %e, metadata !5352, metadata !DIExpression()), !dbg !5359
  %2 = bitcast i64* %ntokens to i8*, !dbg !5360
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #12, !dbg !5360
  call void @llvm.dbg.declare(metadata i64* %ntokens, metadata !5353, metadata !DIExpression()), !dbg !5361
  store i64 0, i64* %ntokens, align 8, !dbg !5361, !tbaa !914
  %3 = load i8*, i8** %command.addr, align 8, !dbg !5362, !tbaa !964
  %cmp = icmp ne i8* %3, null, !dbg !5362
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5362

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5362, !tbaa !964
  %cmp1 = icmp ne %struct.token_s* %4, null, !dbg !5362
  br i1 %cmp1, label %land.lhs.true2, label %if.else, !dbg !5362

land.lhs.true2:                                   ; preds = %land.lhs.true
  %5 = load i64, i64* %max_tokens.addr, align 8, !dbg !5362, !tbaa !914
  %cmp3 = icmp ugt i64 %5, 1, !dbg !5362
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5365

if.then:                                          ; preds = %land.lhs.true2
  br label %if.end, !dbg !5365

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 952, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__.tokenize_command, i64 0, i64 0)) #13, !dbg !5362
  unreachable, !dbg !5362

if.end:                                           ; preds = %if.then
  %6 = load i8*, i8** %command.addr, align 8, !dbg !5366, !tbaa !964
  store i8* %6, i8** %e, align 8, !dbg !5368, !tbaa !964
  store i8* %6, i8** %s, align 8, !dbg !5369, !tbaa !964
  br label %for.cond, !dbg !5370

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i64, i64* %ntokens, align 8, !dbg !5371, !tbaa !914
  %8 = load i64, i64* %max_tokens.addr, align 8, !dbg !5373, !tbaa !914
  %sub = sub i64 %8, 1, !dbg !5374
  %cmp4 = icmp ult i64 %7, %sub, !dbg !5375
  br i1 %cmp4, label %for.body, label %for.end, !dbg !5376

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %e, align 8, !dbg !5377, !tbaa !964
  %10 = load i8, i8* %9, align 1, !dbg !5380, !tbaa !1825
  %conv = sext i8 %10 to i32, !dbg !5380
  %cmp5 = icmp eq i32 %conv, 32, !dbg !5381
  br i1 %cmp5, label %if.then7, label %if.else13, !dbg !5382

if.then7:                                         ; preds = %for.body
  %11 = load i8*, i8** %s, align 8, !dbg !5383, !tbaa !964
  %12 = load i8*, i8** %e, align 8, !dbg !5386, !tbaa !964
  %cmp8 = icmp ne i8* %11, %12, !dbg !5387
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !5388

if.then10:                                        ; preds = %if.then7
  %13 = load i8*, i8** %s, align 8, !dbg !5389, !tbaa !964
  %14 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5391, !tbaa !964
  %15 = load i64, i64* %ntokens, align 8, !dbg !5392, !tbaa !914
  %arrayidx = getelementptr inbounds %struct.token_s, %struct.token_s* %14, i64 %15, !dbg !5391
  %value = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx, i32 0, i32 0, !dbg !5393
  store i8* %13, i8** %value, align 8, !dbg !5394, !tbaa !4776
  %16 = load i8*, i8** %e, align 8, !dbg !5395, !tbaa !964
  %17 = load i8*, i8** %s, align 8, !dbg !5396, !tbaa !964
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64, !dbg !5397
  %sub.ptr.rhs.cast = ptrtoint i8* %17 to i64, !dbg !5397
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5397
  %18 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5398, !tbaa !964
  %19 = load i64, i64* %ntokens, align 8, !dbg !5399, !tbaa !914
  %arrayidx11 = getelementptr inbounds %struct.token_s, %struct.token_s* %18, i64 %19, !dbg !5398
  %length = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx11, i32 0, i32 1, !dbg !5400
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !5401, !tbaa !5402
  %20 = load i64, i64* %ntokens, align 8, !dbg !5403, !tbaa !914
  %inc = add i64 %20, 1, !dbg !5403
  store i64 %inc, i64* %ntokens, align 8, !dbg !5403, !tbaa !914
  %21 = load i8*, i8** %e, align 8, !dbg !5404, !tbaa !964
  store i8 0, i8* %21, align 1, !dbg !5405, !tbaa !1825
  br label %if.end12, !dbg !5406

if.end12:                                         ; preds = %if.then10, %if.then7
  %22 = load i8*, i8** %e, align 8, !dbg !5407, !tbaa !964
  %add.ptr = getelementptr inbounds i8, i8* %22, i64 1, !dbg !5408
  store i8* %add.ptr, i8** %s, align 8, !dbg !5409, !tbaa !964
  br label %if.end31, !dbg !5410

if.else13:                                        ; preds = %for.body
  %23 = load i8*, i8** %e, align 8, !dbg !5411, !tbaa !964
  %24 = load i8, i8* %23, align 1, !dbg !5413, !tbaa !1825
  %conv14 = sext i8 %24 to i32, !dbg !5413
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !5414
  br i1 %cmp15, label %if.then17, label %if.end30, !dbg !5415

if.then17:                                        ; preds = %if.else13
  %25 = load i8*, i8** %s, align 8, !dbg !5416, !tbaa !964
  %26 = load i8*, i8** %e, align 8, !dbg !5419, !tbaa !964
  %cmp18 = icmp ne i8* %25, %26, !dbg !5420
  br i1 %cmp18, label %if.then20, label %if.end29, !dbg !5421

if.then20:                                        ; preds = %if.then17
  %27 = load i8*, i8** %s, align 8, !dbg !5422, !tbaa !964
  %28 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5424, !tbaa !964
  %29 = load i64, i64* %ntokens, align 8, !dbg !5425, !tbaa !914
  %arrayidx21 = getelementptr inbounds %struct.token_s, %struct.token_s* %28, i64 %29, !dbg !5424
  %value22 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx21, i32 0, i32 0, !dbg !5426
  store i8* %27, i8** %value22, align 8, !dbg !5427, !tbaa !4776
  %30 = load i8*, i8** %e, align 8, !dbg !5428, !tbaa !964
  %31 = load i8*, i8** %s, align 8, !dbg !5429, !tbaa !964
  %sub.ptr.lhs.cast23 = ptrtoint i8* %30 to i64, !dbg !5430
  %sub.ptr.rhs.cast24 = ptrtoint i8* %31 to i64, !dbg !5430
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast24, !dbg !5430
  %32 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5431, !tbaa !964
  %33 = load i64, i64* %ntokens, align 8, !dbg !5432, !tbaa !914
  %arrayidx26 = getelementptr inbounds %struct.token_s, %struct.token_s* %32, i64 %33, !dbg !5431
  %length27 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx26, i32 0, i32 1, !dbg !5433
  store i64 %sub.ptr.sub25, i64* %length27, align 8, !dbg !5434, !tbaa !5402
  %34 = load i64, i64* %ntokens, align 8, !dbg !5435, !tbaa !914
  %inc28 = add i64 %34, 1, !dbg !5435
  store i64 %inc28, i64* %ntokens, align 8, !dbg !5435, !tbaa !914
  br label %if.end29, !dbg !5436

if.end29:                                         ; preds = %if.then20, %if.then17
  br label %for.end, !dbg !5437

if.end30:                                         ; preds = %if.else13
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end12
  br label %for.inc, !dbg !5438

for.inc:                                          ; preds = %if.end31
  %35 = load i8*, i8** %e, align 8, !dbg !5439, !tbaa !964
  %incdec.ptr = getelementptr inbounds i8, i8* %35, i32 1, !dbg !5439
  store i8* %incdec.ptr, i8** %e, align 8, !dbg !5439, !tbaa !964
  br label %for.cond, !dbg !5440, !llvm.loop !5441

for.end:                                          ; preds = %if.end29, %for.cond
  %36 = load i8*, i8** %e, align 8, !dbg !5443, !tbaa !964
  %37 = load i8, i8* %36, align 1, !dbg !5444, !tbaa !1825
  %conv32 = sext i8 %37 to i32, !dbg !5444
  %cmp33 = icmp eq i32 %conv32, 0, !dbg !5445
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !5444

cond.true:                                        ; preds = %for.end
  br label %cond.end, !dbg !5444

cond.false:                                       ; preds = %for.end
  %38 = load i8*, i8** %e, align 8, !dbg !5446, !tbaa !964
  br label %cond.end, !dbg !5444

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %38, %cond.false ], !dbg !5444
  %39 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5447, !tbaa !964
  %40 = load i64, i64* %ntokens, align 8, !dbg !5448, !tbaa !914
  %arrayidx35 = getelementptr inbounds %struct.token_s, %struct.token_s* %39, i64 %40, !dbg !5447
  %value36 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx35, i32 0, i32 0, !dbg !5449
  store i8* %cond, i8** %value36, align 8, !dbg !5450, !tbaa !4776
  %41 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5451, !tbaa !964
  %42 = load i64, i64* %ntokens, align 8, !dbg !5452, !tbaa !914
  %arrayidx37 = getelementptr inbounds %struct.token_s, %struct.token_s* %41, i64 %42, !dbg !5451
  %length38 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx37, i32 0, i32 1, !dbg !5453
  store i64 0, i64* %length38, align 8, !dbg !5454, !tbaa !5402
  %43 = load i64, i64* %ntokens, align 8, !dbg !5455, !tbaa !914
  %inc39 = add i64 %43, 1, !dbg !5455
  store i64 %inc39, i64* %ntokens, align 8, !dbg !5455, !tbaa !914
  %44 = load i64, i64* %ntokens, align 8, !dbg !5456, !tbaa !914
  %45 = bitcast i64* %ntokens to i8*, !dbg !5457
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #12, !dbg !5457
  %46 = bitcast i8** %e to i8*, !dbg !5457
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #12, !dbg !5457
  %47 = bitcast i8** %s to i8*, !dbg !5457
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #12, !dbg !5457
  ret i64 %44, !dbg !5458
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8* %0, i8* %1) #6

; Function Attrs: inlinehint nounwind uwtable
define internal void @process_get_command(%struct.conn* %c, %struct.token_s* %tokens, i64 %ntokens, i1 zeroext %return_cas) #10 !dbg !5459 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %tokens.addr = alloca %struct.token_s*, align 8
  %ntokens.addr = alloca i64, align 8
  %return_cas.addr = alloca i8, align 1
  %key = alloca i8*, align 8
  %nkey = alloca i64, align 8
  %i = alloca i32, align 4
  %it = alloca %struct._stritem*, align 8
  %key_token = alloca %struct.token_s*, align 8
  %suffix = alloca i8*, align 8
  %stats_get_cmds = alloca i32, align 4
  %stats_get_hits = alloca i32, align 4
  %stats_get_misses = alloca i32, align 4
  %bucket = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %new_list = alloca %struct._stritem**, align 8
  %new_suffix_list = alloca i8**, align 8
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !5463, metadata !DIExpression()), !dbg !5491
  store %struct.token_s* %tokens, %struct.token_s** %tokens.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.token_s** %tokens.addr, metadata !5464, metadata !DIExpression()), !dbg !5492
  store i64 %ntokens, i64* %ntokens.addr, align 8, !tbaa !914
  call void @llvm.dbg.declare(metadata i64* %ntokens.addr, metadata !5465, metadata !DIExpression()), !dbg !5493
  %frombool = zext i1 %return_cas to i8
  store i8 %frombool, i8* %return_cas.addr, align 1, !tbaa !1031
  call void @llvm.dbg.declare(metadata i8* %return_cas.addr, metadata !5466, metadata !DIExpression()), !dbg !5494
  %0 = bitcast i8** %key to i8*, !dbg !5495
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !5495
  call void @llvm.dbg.declare(metadata i8** %key, metadata !5467, metadata !DIExpression()), !dbg !5496
  %1 = bitcast i64* %nkey to i8*, !dbg !5497
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !5497
  call void @llvm.dbg.declare(metadata i64* %nkey, metadata !5468, metadata !DIExpression()), !dbg !5498
  %2 = bitcast i32* %i to i8*, !dbg !5499
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #12, !dbg !5499
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5469, metadata !DIExpression()), !dbg !5500
  store i32 0, i32* %i, align 4, !dbg !5500, !tbaa !946
  %3 = bitcast %struct._stritem** %it to i8*, !dbg !5501
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #12, !dbg !5501
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !5470, metadata !DIExpression()), !dbg !5502
  %4 = bitcast %struct.token_s** %key_token to i8*, !dbg !5503
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #12, !dbg !5503
  call void @llvm.dbg.declare(metadata %struct.token_s** %key_token, metadata !5471, metadata !DIExpression()), !dbg !5504
  %5 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5505, !tbaa !964
  %arrayidx = getelementptr inbounds %struct.token_s, %struct.token_s* %5, i64 1, !dbg !5505
  store %struct.token_s* %arrayidx, %struct.token_s** %key_token, align 8, !dbg !5504, !tbaa !964
  %6 = bitcast i8** %suffix to i8*, !dbg !5506
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #12, !dbg !5506
  call void @llvm.dbg.declare(metadata i8** %suffix, metadata !5472, metadata !DIExpression()), !dbg !5507
  %7 = bitcast i32* %stats_get_cmds to i8*, !dbg !5508
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #12, !dbg !5508
  call void @llvm.dbg.declare(metadata i32* %stats_get_cmds, metadata !5473, metadata !DIExpression()), !dbg !5509
  store i32 0, i32* %stats_get_cmds, align 4, !dbg !5509, !tbaa !946
  %8 = bitcast i32* %stats_get_hits to i8*, !dbg !5510
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #12, !dbg !5510
  call void @llvm.dbg.declare(metadata i32* %stats_get_hits, metadata !5474, metadata !DIExpression()), !dbg !5511
  store i32 0, i32* %stats_get_hits, align 4, !dbg !5511, !tbaa !946
  %9 = bitcast i32* %stats_get_misses to i8*, !dbg !5512
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #12, !dbg !5512
  call void @llvm.dbg.declare(metadata i32* %stats_get_misses, metadata !5475, metadata !DIExpression()), !dbg !5513
  store i32 0, i32* %stats_get_misses, align 4, !dbg !5513, !tbaa !946
  %10 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5514, !tbaa !964
  %cmp = icmp ne %struct.conn* %10, null, !dbg !5514
  br i1 %cmp, label %if.then, label %if.else, !dbg !5517

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !5517

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1218, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__.process_get_command, i64 0, i64 0)) #13, !dbg !5514
  unreachable, !dbg !5514

if.end:                                           ; preds = %if.then
  %11 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8, !dbg !5518, !tbaa !2245, !range !1262
  %tobool = trunc i8 %11 to i1, !dbg !5518
  br i1 %tobool, label %if.then1, label %if.end11, !dbg !5519

if.then1:                                         ; preds = %if.end
  %12 = bitcast i32* %bucket to i8*, !dbg !5520
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #12, !dbg !5520
  call void @llvm.dbg.declare(metadata i32* %bucket, metadata !5476, metadata !DIExpression()), !dbg !5521
  %13 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5522, !tbaa !964
  %bucket2 = getelementptr inbounds %struct.conn, %struct.conn* %13, i32 0, i32 43, !dbg !5523
  %14 = load i32, i32* %bucket2, align 8, !dbg !5523, !tbaa !1361
  store i32 %14, i32* %bucket, align 4, !dbg !5521, !tbaa !946
  %15 = load i32, i32* %bucket, align 4, !dbg !5524, !tbaa !946
  %cmp3 = icmp eq i32 %15, -1, !dbg !5526
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5527

if.then4:                                         ; preds = %if.then1
  %16 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5528, !tbaa !964
  call void @out_string(%struct.conn* %16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.84, i64 0, i64 0)), !dbg !5530
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5531

if.end5:                                          ; preds = %if.then1
  %17 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5532, !tbaa !964
  %bucket6 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 43, !dbg !5533
  store i32 -1, i32* %bucket6, align 8, !dbg !5534, !tbaa !1361
  %18 = load i32*, i32** @buckets, align 8, !dbg !5535, !tbaa !964
  %19 = load i32, i32* %bucket, align 4, !dbg !5537, !tbaa !946
  %idxprom = sext i32 %19 to i64, !dbg !5535
  %arrayidx7 = getelementptr inbounds i32, i32* %18, i64 %idxprom, !dbg !5535
  %20 = load i32, i32* %arrayidx7, align 4, !dbg !5535, !tbaa !946
  %21 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5538, !tbaa !964
  %gen = getelementptr inbounds %struct.conn, %struct.conn* %21, i32 0, i32 44, !dbg !5539
  %22 = load i32, i32* %gen, align 4, !dbg !5539, !tbaa !1365
  %cmp8 = icmp ne i32 %20, %22, !dbg !5540
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5541

if.then9:                                         ; preds = %if.end5
  %23 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5542, !tbaa !964
  call void @out_string(%struct.conn* %23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.85, i64 0, i64 0)), !dbg !5544
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5545

if.end10:                                         ; preds = %if.end5
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !5546
  br label %cleanup, !dbg !5546

cleanup:                                          ; preds = %if.end10, %if.then9, %if.then4
  %24 = bitcast i32* %bucket to i8*, !dbg !5546
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %24) #12, !dbg !5546
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup210 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end11, !dbg !5547

if.end11:                                         ; preds = %cleanup.cont, %if.end
  br label %do.body, !dbg !5548

do.body:                                          ; preds = %do.cond, %if.end11
  br label %while.cond, !dbg !5549

while.cond:                                       ; preds = %if.end166, %do.body
  %25 = load %struct.token_s*, %struct.token_s** %key_token, align 8, !dbg !5550, !tbaa !964
  %length = getelementptr inbounds %struct.token_s, %struct.token_s* %25, i32 0, i32 1, !dbg !5551
  %26 = load i64, i64* %length, align 8, !dbg !5551, !tbaa !5402
  %cmp12 = icmp ne i64 %26, 0, !dbg !5552
  br i1 %cmp12, label %while.body, label %while.end, !dbg !5549

while.body:                                       ; preds = %while.cond
  %27 = load %struct.token_s*, %struct.token_s** %key_token, align 8, !dbg !5553, !tbaa !964
  %value = getelementptr inbounds %struct.token_s, %struct.token_s* %27, i32 0, i32 0, !dbg !5554
  %28 = load i8*, i8** %value, align 8, !dbg !5554, !tbaa !4776
  store i8* %28, i8** %key, align 8, !dbg !5555, !tbaa !964
  %29 = load %struct.token_s*, %struct.token_s** %key_token, align 8, !dbg !5556, !tbaa !964
  %length13 = getelementptr inbounds %struct.token_s, %struct.token_s* %29, i32 0, i32 1, !dbg !5557
  %30 = load i64, i64* %length13, align 8, !dbg !5557, !tbaa !5402
  store i64 %30, i64* %nkey, align 8, !dbg !5558, !tbaa !914
  %31 = load i64, i64* %nkey, align 8, !dbg !5559, !tbaa !914
  %cmp14 = icmp ugt i64 %31, 250, !dbg !5561
  br i1 %cmp14, label %if.then15, label %if.end20, !dbg !5562

if.then15:                                        ; preds = %while.body
  call void @mt_stats_lock(), !dbg !5563
  %32 = load i32, i32* %stats_get_cmds, align 4, !dbg !5565, !tbaa !946
  %conv = sext i32 %32 to i64, !dbg !5565
  %33 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 6), align 8, !dbg !5566, !tbaa !5567
  %add = add i64 %33, %conv, !dbg !5566
  store i64 %add, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 6), align 8, !dbg !5566, !tbaa !5567
  %34 = load i32, i32* %stats_get_hits, align 4, !dbg !5568, !tbaa !946
  %conv16 = sext i32 %34 to i64, !dbg !5568
  %35 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 8), align 8, !dbg !5569, !tbaa !5570
  %add17 = add i64 %35, %conv16, !dbg !5569
  store i64 %add17, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 8), align 8, !dbg !5569, !tbaa !5570
  %36 = load i32, i32* %stats_get_misses, align 4, !dbg !5571, !tbaa !946
  %conv18 = sext i32 %36 to i64, !dbg !5571
  %37 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 9), align 8, !dbg !5572, !tbaa !5573
  %add19 = add i64 %37, %conv18, !dbg !5572
  store i64 %add19, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 9), align 8, !dbg !5572, !tbaa !5573
  call void @mt_stats_unlock(), !dbg !5574
  %38 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5575, !tbaa !964
  call void @out_string(%struct.conn* %38, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i64 0, i64 0)), !dbg !5576
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup210, !dbg !5577

if.end20:                                         ; preds = %while.body
  %39 = load i32, i32* %stats_get_cmds, align 4, !dbg !5578, !tbaa !946
  %inc = add nsw i32 %39, 1, !dbg !5578
  store i32 %inc, i32* %stats_get_cmds, align 4, !dbg !5578, !tbaa !946
  %40 = load i8*, i8** %key, align 8, !dbg !5579, !tbaa !964
  %41 = load i64, i64* %nkey, align 8, !dbg !5580, !tbaa !914
  %call = call %struct._stritem* @item_get(i8* %40, i64 %41), !dbg !5581
  store %struct._stritem* %call, %struct._stritem** %it, align 8, !dbg !5582, !tbaa !964
  %42 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5583, !tbaa !964
  %tobool21 = icmp ne %struct._stritem* %42, null, !dbg !5583
  br i1 %tobool21, label %if.then22, label %if.else164, !dbg !5584

if.then22:                                        ; preds = %if.end20
  %43 = load i32, i32* %i, align 4, !dbg !5585, !tbaa !946
  %44 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5586, !tbaa !964
  %isize = getelementptr inbounds %struct.conn, %struct.conn* %44, i32 0, i32 29, !dbg !5587
  %45 = load i32, i32* %isize, align 8, !dbg !5587, !tbaa !1098
  %cmp23 = icmp sge i32 %43, %45, !dbg !5588
  br i1 %cmp23, label %if.then25, label %if.end40, !dbg !5589

if.then25:                                        ; preds = %if.then22
  %46 = bitcast %struct._stritem*** %new_list to i8*, !dbg !5590
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %46) #12, !dbg !5590
  call void @llvm.dbg.declare(metadata %struct._stritem*** %new_list, metadata !5479, metadata !DIExpression()), !dbg !5591
  %47 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5592, !tbaa !964
  %ilist = getelementptr inbounds %struct.conn, %struct.conn* %47, i32 0, i32 28, !dbg !5593
  %48 = load %struct._stritem**, %struct._stritem*** %ilist, align 8, !dbg !5593, !tbaa !1069
  %49 = bitcast %struct._stritem** %48 to i8*, !dbg !5592
  %50 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5594, !tbaa !964
  %isize26 = getelementptr inbounds %struct.conn, %struct.conn* %50, i32 0, i32 29, !dbg !5595
  %51 = load i32, i32* %isize26, align 8, !dbg !5595, !tbaa !1098
  %conv27 = sext i32 %51 to i64, !dbg !5594
  %mul = mul i64 8, %conv27, !dbg !5596
  %mul28 = mul i64 %mul, 2, !dbg !5597
  %call29 = call i8* @realloc(i8* %49, i64 %mul28) #12, !dbg !5598
  %52 = bitcast i8* %call29 to %struct._stritem**, !dbg !5598
  store %struct._stritem** %52, %struct._stritem*** %new_list, align 8, !dbg !5591, !tbaa !964
  %53 = load %struct._stritem**, %struct._stritem*** %new_list, align 8, !dbg !5599, !tbaa !964
  %tobool30 = icmp ne %struct._stritem** %53, null, !dbg !5599
  br i1 %tobool30, label %if.then31, label %if.else35, !dbg !5601

if.then31:                                        ; preds = %if.then25
  %54 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5602, !tbaa !964
  %isize32 = getelementptr inbounds %struct.conn, %struct.conn* %54, i32 0, i32 29, !dbg !5604
  %55 = load i32, i32* %isize32, align 8, !dbg !5605, !tbaa !1098
  %mul33 = mul nsw i32 %55, 2, !dbg !5605
  store i32 %mul33, i32* %isize32, align 8, !dbg !5605, !tbaa !1098
  %56 = load %struct._stritem**, %struct._stritem*** %new_list, align 8, !dbg !5606, !tbaa !964
  %57 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5607, !tbaa !964
  %ilist34 = getelementptr inbounds %struct.conn, %struct.conn* %57, i32 0, i32 28, !dbg !5608
  store %struct._stritem** %56, %struct._stritem*** %ilist34, align 8, !dbg !5609, !tbaa !1069
  br label %if.end36, !dbg !5610

if.else35:                                        ; preds = %if.then25
  store i32 5, i32* %cleanup.dest.slot, align 4
  br label %cleanup37, !dbg !5611

if.end36:                                         ; preds = %if.then31
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !5612
  br label %cleanup37, !dbg !5612

cleanup37:                                        ; preds = %if.end36, %if.else35
  %58 = bitcast %struct._stritem*** %new_list to i8*, !dbg !5612
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #12, !dbg !5612
  %cleanup.dest38 = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest38, label %unreachable [
    i32 0, label %cleanup.cont39
    i32 5, label %while.end
  ]

cleanup.cont39:                                   ; preds = %cleanup37
  br label %if.end40, !dbg !5613

if.end40:                                         ; preds = %cleanup.cont39, %if.then22
  %59 = load i8, i8* %return_cas.addr, align 1, !dbg !5614, !tbaa !1031, !range !1262
  %tobool41 = trunc i8 %59 to i1, !dbg !5614
  %conv42 = zext i1 %tobool41 to i32, !dbg !5614
  %cmp43 = icmp eq i32 %conv42, 1, !dbg !5615
  br i1 %cmp43, label %if.then45, label %if.else122, !dbg !5616

if.then45:                                        ; preds = %if.end40
  %60 = load i32, i32* %i, align 4, !dbg !5617, !tbaa !946
  %61 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5618, !tbaa !964
  %suffixsize = getelementptr inbounds %struct.conn, %struct.conn* %61, i32 0, i32 33, !dbg !5619
  %62 = load i32, i32* %suffixsize, align 8, !dbg !5619, !tbaa !1102
  %cmp46 = icmp sge i32 %60, %62, !dbg !5620
  br i1 %cmp46, label %if.then48, label %if.end64, !dbg !5621

if.then48:                                        ; preds = %if.then45
  %63 = bitcast i8*** %new_suffix_list to i8*, !dbg !5622
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %63) #12, !dbg !5622
  call void @llvm.dbg.declare(metadata i8*** %new_suffix_list, metadata !5486, metadata !DIExpression()), !dbg !5623
  %64 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5624, !tbaa !964
  %suffixlist = getelementptr inbounds %struct.conn, %struct.conn* %64, i32 0, i32 32, !dbg !5625
  %65 = load i8**, i8*** %suffixlist, align 8, !dbg !5625, !tbaa !1073
  %66 = bitcast i8** %65 to i8*, !dbg !5624
  %67 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5626, !tbaa !964
  %suffixsize49 = getelementptr inbounds %struct.conn, %struct.conn* %67, i32 0, i32 33, !dbg !5627
  %68 = load i32, i32* %suffixsize49, align 8, !dbg !5627, !tbaa !1102
  %conv50 = sext i32 %68 to i64, !dbg !5626
  %mul51 = mul i64 8, %conv50, !dbg !5628
  %mul52 = mul i64 %mul51, 2, !dbg !5629
  %call53 = call i8* @realloc(i8* %66, i64 %mul52) #12, !dbg !5630
  %69 = bitcast i8* %call53 to i8**, !dbg !5630
  store i8** %69, i8*** %new_suffix_list, align 8, !dbg !5623, !tbaa !964
  %70 = load i8**, i8*** %new_suffix_list, align 8, !dbg !5631, !tbaa !964
  %tobool54 = icmp ne i8** %70, null, !dbg !5631
  br i1 %tobool54, label %if.then55, label %if.else59, !dbg !5633

if.then55:                                        ; preds = %if.then48
  %71 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5634, !tbaa !964
  %suffixsize56 = getelementptr inbounds %struct.conn, %struct.conn* %71, i32 0, i32 33, !dbg !5636
  %72 = load i32, i32* %suffixsize56, align 8, !dbg !5637, !tbaa !1102
  %mul57 = mul nsw i32 %72, 2, !dbg !5637
  store i32 %mul57, i32* %suffixsize56, align 8, !dbg !5637, !tbaa !1102
  %73 = load i8**, i8*** %new_suffix_list, align 8, !dbg !5638, !tbaa !964
  %74 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5639, !tbaa !964
  %suffixlist58 = getelementptr inbounds %struct.conn, %struct.conn* %74, i32 0, i32 32, !dbg !5640
  store i8** %73, i8*** %suffixlist58, align 8, !dbg !5641, !tbaa !1073
  br label %if.end60, !dbg !5642

if.else59:                                        ; preds = %if.then48
  store i32 5, i32* %cleanup.dest.slot, align 4
  br label %cleanup61, !dbg !5643

if.end60:                                         ; preds = %if.then55
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !5644
  br label %cleanup61, !dbg !5644

cleanup61:                                        ; preds = %if.end60, %if.else59
  %75 = bitcast i8*** %new_suffix_list to i8*, !dbg !5644
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #12, !dbg !5644
  %cleanup.dest62 = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest62, label %unreachable [
    i32 0, label %cleanup.cont63
    i32 5, label %while.end
  ]

cleanup.cont63:                                   ; preds = %cleanup61
  br label %if.end64, !dbg !5645

if.end64:                                         ; preds = %cleanup.cont63, %if.then45
  %call65 = call i8* @mt_suffix_from_freelist(), !dbg !5646
  store i8* %call65, i8** %suffix, align 8, !dbg !5647, !tbaa !964
  %76 = load i8*, i8** %suffix, align 8, !dbg !5648, !tbaa !964
  %cmp66 = icmp eq i8* %76, null, !dbg !5650
  br i1 %cmp66, label %if.then68, label %if.end75, !dbg !5651

if.then68:                                        ; preds = %if.end64
  call void @mt_stats_lock(), !dbg !5652
  %77 = load i32, i32* %stats_get_cmds, align 4, !dbg !5654, !tbaa !946
  %conv69 = sext i32 %77 to i64, !dbg !5654
  %78 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 6), align 8, !dbg !5655, !tbaa !5567
  %add70 = add i64 %78, %conv69, !dbg !5655
  store i64 %add70, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 6), align 8, !dbg !5655, !tbaa !5567
  %79 = load i32, i32* %stats_get_hits, align 4, !dbg !5656, !tbaa !946
  %conv71 = sext i32 %79 to i64, !dbg !5656
  %80 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 8), align 8, !dbg !5657, !tbaa !5570
  %add72 = add i64 %80, %conv71, !dbg !5657
  store i64 %add72, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 8), align 8, !dbg !5657, !tbaa !5570
  %81 = load i32, i32* %stats_get_misses, align 4, !dbg !5658, !tbaa !946
  %conv73 = sext i32 %81 to i64, !dbg !5658
  %82 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 9), align 8, !dbg !5659, !tbaa !5573
  %add74 = add i64 %82, %conv73, !dbg !5659
  store i64 %add74, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 9), align 8, !dbg !5659, !tbaa !5573
  call void @mt_stats_unlock(), !dbg !5660
  %83 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5661, !tbaa !964
  call void @out_string(%struct.conn* %83, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)), !dbg !5662
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup210, !dbg !5663

if.end75:                                         ; preds = %if.end64
  %84 = load i8*, i8** %suffix, align 8, !dbg !5664, !tbaa !964
  %85 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5665, !tbaa !964
  %suffixlist76 = getelementptr inbounds %struct.conn, %struct.conn* %85, i32 0, i32 32, !dbg !5666
  %86 = load i8**, i8*** %suffixlist76, align 8, !dbg !5666, !tbaa !1073
  %87 = load i32, i32* %i, align 4, !dbg !5667, !tbaa !946
  %idx.ext = sext i32 %87 to i64, !dbg !5668
  %add.ptr = getelementptr inbounds i8*, i8** %86, i64 %idx.ext, !dbg !5668
  store i8* %84, i8** %add.ptr, align 8, !dbg !5669, !tbaa !964
  %88 = load i8*, i8** %suffix, align 8, !dbg !5670, !tbaa !964
  %89 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5671, !tbaa !964
  %cas_id = getelementptr inbounds %struct._stritem, %struct._stritem* %89, i32 0, i32 11, !dbg !5672
  %90 = load i64, i64* %cas_id, align 8, !dbg !5672, !tbaa !1670
  %call77 = call i32 (i8*, i8*, ...) @sprintf(i8* %88, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i64 0, i64 0), i64 %90) #12, !dbg !5673
  %91 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5674, !tbaa !964
  %call78 = call i32 @add_iov(%struct.conn* %91, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i64 0, i64 0), i32 6), !dbg !5676
  %cmp79 = icmp ne i32 %call78, 0, !dbg !5677
  br i1 %cmp79, label %if.then120, label %lor.lhs.false, !dbg !5678

lor.lhs.false:                                    ; preds = %if.end75
  %92 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5679, !tbaa !964
  %93 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5680, !tbaa !964
  %end = getelementptr inbounds %struct._stritem, %struct._stritem* %93, i32 0, i32 12, !dbg !5680
  %arrayidx81 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end, i64 0, i64 0, !dbg !5680
  %94 = bitcast i8** %arrayidx81 to i8*, !dbg !5680
  %95 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5681, !tbaa !964
  %nkey82 = getelementptr inbounds %struct._stritem, %struct._stritem* %95, i32 0, i32 10, !dbg !5682
  %96 = load i8, i8* %nkey82, align 1, !dbg !5682, !tbaa !1595
  %conv83 = zext i8 %96 to i32, !dbg !5681
  %call84 = call i32 @add_iov(%struct.conn* %92, i8* %94, i32 %conv83), !dbg !5683
  %cmp85 = icmp ne i32 %call84, 0, !dbg !5684
  br i1 %cmp85, label %if.then120, label %lor.lhs.false87, !dbg !5685

lor.lhs.false87:                                  ; preds = %lor.lhs.false
  %97 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5686, !tbaa !964
  %98 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5687, !tbaa !964
  %end88 = getelementptr inbounds %struct._stritem, %struct._stritem* %98, i32 0, i32 12, !dbg !5687
  %arrayidx89 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end88, i64 0, i64 0, !dbg !5687
  %99 = bitcast i8** %arrayidx89 to i8*, !dbg !5687
  %100 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5687, !tbaa !964
  %nkey90 = getelementptr inbounds %struct._stritem, %struct._stritem* %100, i32 0, i32 10, !dbg !5687
  %101 = load i8, i8* %nkey90, align 1, !dbg !5687, !tbaa !1595
  %conv91 = zext i8 %101 to i32, !dbg !5687
  %idx.ext92 = sext i32 %conv91 to i64, !dbg !5687
  %add.ptr93 = getelementptr inbounds i8, i8* %99, i64 %idx.ext92, !dbg !5687
  %add.ptr94 = getelementptr inbounds i8, i8* %add.ptr93, i64 1, !dbg !5687
  %102 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5688, !tbaa !964
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %102, i32 0, i32 7, !dbg !5689
  %103 = load i8, i8* %nsuffix, align 2, !dbg !5689, !tbaa !1725
  %conv95 = zext i8 %103 to i32, !dbg !5688
  %sub = sub nsw i32 %conv95, 2, !dbg !5690
  %call96 = call i32 @add_iov(%struct.conn* %97, i8* %add.ptr94, i32 %sub), !dbg !5691
  %cmp97 = icmp ne i32 %call96, 0, !dbg !5692
  br i1 %cmp97, label %if.then120, label %lor.lhs.false99, !dbg !5693

lor.lhs.false99:                                  ; preds = %lor.lhs.false87
  %104 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5694, !tbaa !964
  %105 = load i8*, i8** %suffix, align 8, !dbg !5695, !tbaa !964
  %106 = load i8*, i8** %suffix, align 8, !dbg !5696, !tbaa !964
  %call100 = call i64 @strlen(i8* %106) #15, !dbg !5697
  %conv101 = trunc i64 %call100 to i32, !dbg !5697
  %call102 = call i32 @add_iov(%struct.conn* %104, i8* %105, i32 %conv101), !dbg !5698
  %cmp103 = icmp ne i32 %call102, 0, !dbg !5699
  br i1 %cmp103, label %if.then120, label %lor.lhs.false105, !dbg !5700

lor.lhs.false105:                                 ; preds = %lor.lhs.false99
  %107 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5701, !tbaa !964
  %108 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5702, !tbaa !964
  %end106 = getelementptr inbounds %struct._stritem, %struct._stritem* %108, i32 0, i32 12, !dbg !5702
  %arrayidx107 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end106, i64 0, i64 0, !dbg !5702
  %109 = bitcast i8** %arrayidx107 to i8*, !dbg !5702
  %110 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5702, !tbaa !964
  %nkey108 = getelementptr inbounds %struct._stritem, %struct._stritem* %110, i32 0, i32 10, !dbg !5702
  %111 = load i8, i8* %nkey108, align 1, !dbg !5702, !tbaa !1595
  %conv109 = zext i8 %111 to i32, !dbg !5702
  %idx.ext110 = sext i32 %conv109 to i64, !dbg !5702
  %add.ptr111 = getelementptr inbounds i8, i8* %109, i64 %idx.ext110, !dbg !5702
  %add.ptr112 = getelementptr inbounds i8, i8* %add.ptr111, i64 1, !dbg !5702
  %112 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5702, !tbaa !964
  %nsuffix113 = getelementptr inbounds %struct._stritem, %struct._stritem* %112, i32 0, i32 7, !dbg !5702
  %113 = load i8, i8* %nsuffix113, align 2, !dbg !5702, !tbaa !1725
  %conv114 = zext i8 %113 to i32, !dbg !5702
  %idx.ext115 = sext i32 %conv114 to i64, !dbg !5702
  %add.ptr116 = getelementptr inbounds i8, i8* %add.ptr112, i64 %idx.ext115, !dbg !5702
  %114 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5703, !tbaa !964
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %114, i32 0, i32 5, !dbg !5704
  %115 = load i32, i32* %nbytes, align 8, !dbg !5704, !tbaa !1706
  %call117 = call i32 @add_iov(%struct.conn* %107, i8* %add.ptr116, i32 %115), !dbg !5705
  %cmp118 = icmp ne i32 %call117, 0, !dbg !5706
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !5707

if.then120:                                       ; preds = %lor.lhs.false105, %lor.lhs.false99, %lor.lhs.false87, %lor.lhs.false, %if.end75
  br label %while.end, !dbg !5708

if.end121:                                        ; preds = %lor.lhs.false105
  br label %if.end151, !dbg !5710

if.else122:                                       ; preds = %if.end40
  %116 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5711, !tbaa !964
  %call123 = call i32 @add_iov(%struct.conn* %116, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i64 0, i64 0), i32 6), !dbg !5714
  %cmp124 = icmp ne i32 %call123, 0, !dbg !5715
  br i1 %cmp124, label %if.then149, label %lor.lhs.false126, !dbg !5716

lor.lhs.false126:                                 ; preds = %if.else122
  %117 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5717, !tbaa !964
  %118 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5718, !tbaa !964
  %end127 = getelementptr inbounds %struct._stritem, %struct._stritem* %118, i32 0, i32 12, !dbg !5718
  %arrayidx128 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end127, i64 0, i64 0, !dbg !5718
  %119 = bitcast i8** %arrayidx128 to i8*, !dbg !5718
  %120 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5719, !tbaa !964
  %nkey129 = getelementptr inbounds %struct._stritem, %struct._stritem* %120, i32 0, i32 10, !dbg !5720
  %121 = load i8, i8* %nkey129, align 1, !dbg !5720, !tbaa !1595
  %conv130 = zext i8 %121 to i32, !dbg !5719
  %call131 = call i32 @add_iov(%struct.conn* %117, i8* %119, i32 %conv130), !dbg !5721
  %cmp132 = icmp ne i32 %call131, 0, !dbg !5722
  br i1 %cmp132, label %if.then149, label %lor.lhs.false134, !dbg !5723

lor.lhs.false134:                                 ; preds = %lor.lhs.false126
  %122 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5724, !tbaa !964
  %123 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5725, !tbaa !964
  %end135 = getelementptr inbounds %struct._stritem, %struct._stritem* %123, i32 0, i32 12, !dbg !5725
  %arrayidx136 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end135, i64 0, i64 0, !dbg !5725
  %124 = bitcast i8** %arrayidx136 to i8*, !dbg !5725
  %125 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5725, !tbaa !964
  %nkey137 = getelementptr inbounds %struct._stritem, %struct._stritem* %125, i32 0, i32 10, !dbg !5725
  %126 = load i8, i8* %nkey137, align 1, !dbg !5725, !tbaa !1595
  %conv138 = zext i8 %126 to i32, !dbg !5725
  %idx.ext139 = sext i32 %conv138 to i64, !dbg !5725
  %add.ptr140 = getelementptr inbounds i8, i8* %124, i64 %idx.ext139, !dbg !5725
  %add.ptr141 = getelementptr inbounds i8, i8* %add.ptr140, i64 1, !dbg !5725
  %127 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5726, !tbaa !964
  %nsuffix142 = getelementptr inbounds %struct._stritem, %struct._stritem* %127, i32 0, i32 7, !dbg !5727
  %128 = load i8, i8* %nsuffix142, align 2, !dbg !5727, !tbaa !1725
  %conv143 = zext i8 %128 to i32, !dbg !5726
  %129 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5728, !tbaa !964
  %nbytes144 = getelementptr inbounds %struct._stritem, %struct._stritem* %129, i32 0, i32 5, !dbg !5729
  %130 = bitcast i32* %nbytes144 to i8*, !dbg !5729
  %131 = load i32, i32* %nbytes144, align 8, !dbg !5729, !tbaa !1706
  %add145 = add nsw i32 %conv143, %131, !dbg !5730
  %call146 = call i32 @add_iov(%struct.conn* %122, i8* %add.ptr141, i32 %add145), !dbg !5731
  %cmp147 = icmp ne i32 %call146, 0, !dbg !5732
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !5733

if.then149:                                       ; preds = %lor.lhs.false134, %lor.lhs.false126, %if.else122
  br label %while.end, !dbg !5734

if.end150:                                        ; preds = %lor.lhs.false134
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.end121
  %132 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !5736, !tbaa !1246
  %cmp152 = icmp sgt i32 %132, 1, !dbg !5738
  br i1 %cmp152, label %if.then154, label %if.end158, !dbg !5739

if.then154:                                       ; preds = %if.end151
  %133 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5740, !tbaa !964
  %134 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5741, !tbaa !964
  %sfd = getelementptr inbounds %struct.conn, %struct.conn* %134, i32 0, i32 0, !dbg !5742
  %135 = load i32, i32* %sfd, align 8, !dbg !5742, !tbaa !1275
  %136 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5743, !tbaa !964
  %end155 = getelementptr inbounds %struct._stritem, %struct._stritem* %136, i32 0, i32 12, !dbg !5743
  %arrayidx156 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end155, i64 0, i64 0, !dbg !5743
  %137 = bitcast i8** %arrayidx156 to i8*, !dbg !5743
  %call157 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %133, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.88, i64 0, i64 0), i32 %135, i8* %137), !dbg !5744
  br label %if.end158, !dbg !5744

if.end158:                                        ; preds = %if.then154, %if.end151
  %138 = load i32, i32* %stats_get_hits, align 4, !dbg !5745, !tbaa !946
  %inc159 = add nsw i32 %138, 1, !dbg !5745
  store i32 %inc159, i32* %stats_get_hits, align 4, !dbg !5745, !tbaa !946
  %139 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5746, !tbaa !964
  call void @mt_item_update(%struct._stritem* %139), !dbg !5746
  %140 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5747, !tbaa !964
  %141 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5748, !tbaa !964
  %ilist160 = getelementptr inbounds %struct.conn, %struct.conn* %141, i32 0, i32 28, !dbg !5749
  %142 = load %struct._stritem**, %struct._stritem*** %ilist160, align 8, !dbg !5749, !tbaa !1069
  %143 = load i32, i32* %i, align 4, !dbg !5750, !tbaa !946
  %idx.ext161 = sext i32 %143 to i64, !dbg !5751
  %add.ptr162 = getelementptr inbounds %struct._stritem*, %struct._stritem** %142, i64 %idx.ext161, !dbg !5751
  store %struct._stritem* %140, %struct._stritem** %add.ptr162, align 8, !dbg !5752, !tbaa !964
  %144 = load i32, i32* %i, align 4, !dbg !5753, !tbaa !946
  %inc163 = add nsw i32 %144, 1, !dbg !5753
  store i32 %inc163, i32* %i, align 4, !dbg !5753, !tbaa !946
  br label %if.end166, !dbg !5754

if.else164:                                       ; preds = %if.end20
  %145 = load i32, i32* %stats_get_misses, align 4, !dbg !5755, !tbaa !946
  %inc165 = add nsw i32 %145, 1, !dbg !5755
  store i32 %inc165, i32* %stats_get_misses, align 4, !dbg !5755, !tbaa !946
  br label %if.end166

if.end166:                                        ; preds = %if.else164, %if.end158
  %146 = load %struct.token_s*, %struct.token_s** %key_token, align 8, !dbg !5757, !tbaa !964
  %incdec.ptr = getelementptr inbounds %struct.token_s, %struct.token_s* %146, i32 1, !dbg !5757
  store %struct.token_s* %incdec.ptr, %struct.token_s** %key_token, align 8, !dbg !5757, !tbaa !964
  br label %while.cond, !dbg !5549, !llvm.loop !5758

while.end:                                        ; preds = %if.then149, %if.then120, %cleanup61, %cleanup37, %while.cond
  %147 = load %struct.token_s*, %struct.token_s** %key_token, align 8, !dbg !5760, !tbaa !964
  %value167 = getelementptr inbounds %struct.token_s, %struct.token_s* %147, i32 0, i32 0, !dbg !5762
  %148 = load i8*, i8** %value167, align 8, !dbg !5762, !tbaa !4776
  %cmp168 = icmp ne i8* %148, null, !dbg !5763
  br i1 %cmp168, label %if.then170, label %if.end173, !dbg !5764

if.then170:                                       ; preds = %while.end
  %149 = load %struct.token_s*, %struct.token_s** %key_token, align 8, !dbg !5765, !tbaa !964
  %value171 = getelementptr inbounds %struct.token_s, %struct.token_s* %149, i32 0, i32 0, !dbg !5767
  %150 = load i8*, i8** %value171, align 8, !dbg !5767, !tbaa !4776
  %151 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5768, !tbaa !964
  %call172 = call i64 @tokenize_command(i8* %150, %struct.token_s* %151, i64 7), !dbg !5769
  store i64 %call172, i64* %ntokens.addr, align 8, !dbg !5770, !tbaa !914
  %152 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5771, !tbaa !964
  store %struct.token_s* %152, %struct.token_s** %key_token, align 8, !dbg !5772, !tbaa !964
  br label %if.end173, !dbg !5773

if.end173:                                        ; preds = %if.then170, %while.end
  br label %do.cond, !dbg !5774

do.cond:                                          ; preds = %if.end173
  %153 = load %struct.token_s*, %struct.token_s** %key_token, align 8, !dbg !5775, !tbaa !964
  %value174 = getelementptr inbounds %struct.token_s, %struct.token_s* %153, i32 0, i32 0, !dbg !5776
  %154 = load i8*, i8** %value174, align 8, !dbg !5776, !tbaa !4776
  %cmp175 = icmp ne i8* %154, null, !dbg !5777
  br i1 %cmp175, label %do.body, label %do.end, !dbg !5774, !llvm.loop !5778

do.end:                                           ; preds = %do.cond
  %155 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5780, !tbaa !964
  %ilist177 = getelementptr inbounds %struct.conn, %struct.conn* %155, i32 0, i32 28, !dbg !5781
  %156 = load %struct._stritem**, %struct._stritem*** %ilist177, align 8, !dbg !5781, !tbaa !1069
  %157 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5782, !tbaa !964
  %icurr = getelementptr inbounds %struct.conn, %struct.conn* %157, i32 0, i32 30, !dbg !5783
  store %struct._stritem** %156, %struct._stritem*** %icurr, align 8, !dbg !5784, !tbaa !1319
  %158 = load i32, i32* %i, align 4, !dbg !5785, !tbaa !946
  %159 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5786, !tbaa !964
  %ileft = getelementptr inbounds %struct.conn, %struct.conn* %159, i32 0, i32 31, !dbg !5787
  store i32 %158, i32* %ileft, align 8, !dbg !5788, !tbaa !1329
  %160 = load i8, i8* %return_cas.addr, align 1, !dbg !5789, !tbaa !1031, !range !1262
  %tobool178 = trunc i8 %160 to i1, !dbg !5789
  br i1 %tobool178, label %if.then179, label %if.end181, !dbg !5791

if.then179:                                       ; preds = %do.end
  %161 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5792, !tbaa !964
  %suffixlist180 = getelementptr inbounds %struct.conn, %struct.conn* %161, i32 0, i32 32, !dbg !5794
  %162 = load i8**, i8*** %suffixlist180, align 8, !dbg !5794, !tbaa !1073
  %163 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5795, !tbaa !964
  %suffixcurr = getelementptr inbounds %struct.conn, %struct.conn* %163, i32 0, i32 34, !dbg !5796
  store i8** %162, i8*** %suffixcurr, align 8, !dbg !5797, !tbaa !1325
  %164 = load i32, i32* %i, align 4, !dbg !5798, !tbaa !946
  %165 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5799, !tbaa !964
  %suffixleft = getelementptr inbounds %struct.conn, %struct.conn* %165, i32 0, i32 35, !dbg !5800
  store i32 %164, i32* %suffixleft, align 8, !dbg !5801, !tbaa !1333
  br label %if.end181, !dbg !5802

if.end181:                                        ; preds = %if.then179, %do.end
  %166 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !5803, !tbaa !1246
  %cmp182 = icmp sgt i32 %166, 1, !dbg !5805
  br i1 %cmp182, label %if.then184, label %if.end187, !dbg !5806

if.then184:                                       ; preds = %if.end181
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !5807, !tbaa !964
  %168 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5808, !tbaa !964
  %sfd185 = getelementptr inbounds %struct.conn, %struct.conn* %168, i32 0, i32 0, !dbg !5809
  %169 = load i32, i32* %sfd185, align 8, !dbg !5809, !tbaa !1275
  %call186 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %167, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.89, i64 0, i64 0), i32 %169), !dbg !5810
  br label %if.end187, !dbg !5810

if.end187:                                        ; preds = %if.then184, %if.end181
  %170 = load %struct.token_s*, %struct.token_s** %key_token, align 8, !dbg !5811, !tbaa !964
  %value188 = getelementptr inbounds %struct.token_s, %struct.token_s* %170, i32 0, i32 0, !dbg !5813
  %171 = load i8*, i8** %value188, align 8, !dbg !5813, !tbaa !4776
  %cmp189 = icmp ne i8* %171, null, !dbg !5814
  br i1 %cmp189, label %if.then201, label %lor.lhs.false191, !dbg !5815

lor.lhs.false191:                                 ; preds = %if.end187
  %172 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5816, !tbaa !964
  %call192 = call i32 @add_iov(%struct.conn* %172, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0), i32 5), !dbg !5817
  %cmp193 = icmp ne i32 %call192, 0, !dbg !5818
  br i1 %cmp193, label %if.then201, label %lor.lhs.false195, !dbg !5819

lor.lhs.false195:                                 ; preds = %lor.lhs.false191
  %173 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5820, !tbaa !964
  %udp = getelementptr inbounds %struct.conn, %struct.conn* %173, i32 0, i32 36, !dbg !5821
  %174 = load i8, i8* %udp, align 4, !dbg !5821, !tbaa !1280, !range !1262
  %tobool196 = trunc i8 %174 to i1, !dbg !5821
  br i1 %tobool196, label %land.lhs.true, label %if.else202, !dbg !5822

land.lhs.true:                                    ; preds = %lor.lhs.false195
  %175 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5823, !tbaa !964
  %call198 = call i32 @build_udp_headers(%struct.conn* %175), !dbg !5824
  %cmp199 = icmp ne i32 %call198, 0, !dbg !5825
  br i1 %cmp199, label %if.then201, label %if.else202, !dbg !5826

if.then201:                                       ; preds = %land.lhs.true, %lor.lhs.false191, %if.end187
  %176 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5827, !tbaa !964
  call void @out_string(%struct.conn* %176, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)), !dbg !5829
  br label %if.end203, !dbg !5830

if.else202:                                       ; preds = %land.lhs.true, %lor.lhs.false195
  %177 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5831, !tbaa !964
  call void @conn_set_state(%struct.conn* %177, i32 6), !dbg !5833
  %178 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5834, !tbaa !964
  %msgcurr = getelementptr inbounds %struct.conn, %struct.conn* %178, i32 0, i32 26, !dbg !5835
  store i32 0, i32* %msgcurr, align 8, !dbg !5836, !tbaa !1341
  br label %if.end203

if.end203:                                        ; preds = %if.else202, %if.then201
  call void @mt_stats_lock(), !dbg !5837
  %179 = load i32, i32* %stats_get_cmds, align 4, !dbg !5838, !tbaa !946
  %conv204 = sext i32 %179 to i64, !dbg !5838
  %180 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 6), align 8, !dbg !5839, !tbaa !5567
  %add205 = add i64 %180, %conv204, !dbg !5839
  store i64 %add205, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 6), align 8, !dbg !5839, !tbaa !5567
  %181 = load i32, i32* %stats_get_hits, align 4, !dbg !5840, !tbaa !946
  %conv206 = sext i32 %181 to i64, !dbg !5840
  %182 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 8), align 8, !dbg !5841, !tbaa !5570
  %add207 = add i64 %182, %conv206, !dbg !5841
  store i64 %add207, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 8), align 8, !dbg !5841, !tbaa !5570
  %183 = load i32, i32* %stats_get_misses, align 4, !dbg !5842, !tbaa !946
  %conv208 = sext i32 %183 to i64, !dbg !5842
  %184 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 9), align 8, !dbg !5843, !tbaa !5573
  %add209 = add i64 %184, %conv208, !dbg !5843
  store i64 %add209, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 9), align 8, !dbg !5843, !tbaa !5573
  call void @mt_stats_unlock(), !dbg !5844
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup210, !dbg !5845

cleanup210:                                       ; preds = %if.end203, %if.then68, %if.then15, %cleanup
  %185 = bitcast i32* %stats_get_misses to i8*, !dbg !5846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %185) #12, !dbg !5846
  %186 = bitcast i32* %stats_get_hits to i8*, !dbg !5846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %186) #12, !dbg !5846
  %187 = bitcast i32* %stats_get_cmds to i8*, !dbg !5846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %187) #12, !dbg !5846
  %188 = bitcast i8** %suffix to i8*, !dbg !5846
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %188) #12, !dbg !5846
  %189 = bitcast %struct.token_s** %key_token to i8*, !dbg !5846
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %189) #12, !dbg !5846
  %190 = bitcast %struct._stritem** %it to i8*, !dbg !5846
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %190) #12, !dbg !5846
  %191 = bitcast i32* %i to i8*, !dbg !5846
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %191) #12, !dbg !5846
  %192 = bitcast i64* %nkey to i8*, !dbg !5846
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %192) #12, !dbg !5846
  %193 = bitcast i8** %key to i8*, !dbg !5846
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %193) #12, !dbg !5846
  ret void, !dbg !5846

unreachable:                                      ; preds = %cleanup61, %cleanup37
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @process_update_command(%struct.conn* %c, %struct.token_s* %tokens, i64 %ntokens, i32 %comm, i1 zeroext %handle_cas) #0 !dbg !5847 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %tokens.addr = alloca %struct.token_s*, align 8
  %ntokens.addr = alloca i64, align 8
  %comm.addr = alloca i32, align 4
  %handle_cas.addr = alloca i8, align 1
  %key = alloca i8*, align 8
  %nkey = alloca i64, align 8
  %flags = alloca i32, align 4
  %exptime = alloca i64, align 8
  %vlen = alloca i32, align 4
  %old_vlen = alloca i32, align 4
  %req_cas_id = alloca i64, align 8
  %it = alloca %struct._stritem*, align 8
  %old_it = alloca %struct._stritem*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %bucket = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !5851, metadata !DIExpression()), !dbg !5868
  store %struct.token_s* %tokens, %struct.token_s** %tokens.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.token_s** %tokens.addr, metadata !5852, metadata !DIExpression()), !dbg !5869
  store i64 %ntokens, i64* %ntokens.addr, align 8, !tbaa !914
  call void @llvm.dbg.declare(metadata i64* %ntokens.addr, metadata !5853, metadata !DIExpression()), !dbg !5870
  store i32 %comm, i32* %comm.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %comm.addr, metadata !5854, metadata !DIExpression()), !dbg !5871
  %frombool = zext i1 %handle_cas to i8
  store i8 %frombool, i8* %handle_cas.addr, align 1, !tbaa !1031
  call void @llvm.dbg.declare(metadata i8* %handle_cas.addr, metadata !5855, metadata !DIExpression()), !dbg !5872
  %0 = bitcast i8** %key to i8*, !dbg !5873
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !5873
  call void @llvm.dbg.declare(metadata i8** %key, metadata !5856, metadata !DIExpression()), !dbg !5874
  %1 = bitcast i64* %nkey to i8*, !dbg !5875
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !5875
  call void @llvm.dbg.declare(metadata i64* %nkey, metadata !5857, metadata !DIExpression()), !dbg !5876
  %2 = bitcast i32* %flags to i8*, !dbg !5877
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #12, !dbg !5877
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !5858, metadata !DIExpression()), !dbg !5878
  %3 = bitcast i64* %exptime to i8*, !dbg !5879
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #12, !dbg !5879
  call void @llvm.dbg.declare(metadata i64* %exptime, metadata !5859, metadata !DIExpression()), !dbg !5880
  %4 = bitcast i32* %vlen to i8*, !dbg !5881
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #12, !dbg !5881
  call void @llvm.dbg.declare(metadata i32* %vlen, metadata !5860, metadata !DIExpression()), !dbg !5882
  %5 = bitcast i32* %old_vlen to i8*, !dbg !5881
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #12, !dbg !5881
  call void @llvm.dbg.declare(metadata i32* %old_vlen, metadata !5861, metadata !DIExpression()), !dbg !5883
  %6 = bitcast i64* %req_cas_id to i8*, !dbg !5884
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #12, !dbg !5884
  call void @llvm.dbg.declare(metadata i64* %req_cas_id, metadata !5862, metadata !DIExpression()), !dbg !5885
  %7 = bitcast %struct._stritem** %it to i8*, !dbg !5886
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #12, !dbg !5886
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !5863, metadata !DIExpression()), !dbg !5887
  %8 = bitcast %struct._stritem** %old_it to i8*, !dbg !5886
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #12, !dbg !5886
  call void @llvm.dbg.declare(metadata %struct._stritem** %old_it, metadata !5864, metadata !DIExpression()), !dbg !5888
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5889, !tbaa !964
  %cmp = icmp ne %struct.conn* %9, null, !dbg !5889
  br i1 %cmp, label %if.then, label %if.else, !dbg !5892

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !5892

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1386, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__.process_update_command, i64 0, i64 0)) #13, !dbg !5889
  unreachable, !dbg !5889

if.end:                                           ; preds = %if.then
  %10 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5893, !tbaa !964
  %arrayidx = getelementptr inbounds %struct.token_s, %struct.token_s* %10, i64 1, !dbg !5893
  %length = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx, i32 0, i32 1, !dbg !5895
  %11 = load i64, i64* %length, align 8, !dbg !5895, !tbaa !5402
  %cmp1 = icmp ugt i64 %11, 250, !dbg !5896
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5897

if.then2:                                         ; preds = %if.end
  %12 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5898, !tbaa !964
  call void @out_string(%struct.conn* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i64 0, i64 0)), !dbg !5900
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup70, !dbg !5901

if.end3:                                          ; preds = %if.end
  %13 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5902, !tbaa !964
  %arrayidx4 = getelementptr inbounds %struct.token_s, %struct.token_s* %13, i64 1, !dbg !5902
  %value = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx4, i32 0, i32 0, !dbg !5903
  %14 = load i8*, i8** %value, align 8, !dbg !5903, !tbaa !4776
  store i8* %14, i8** %key, align 8, !dbg !5904, !tbaa !964
  %15 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5905, !tbaa !964
  %arrayidx5 = getelementptr inbounds %struct.token_s, %struct.token_s* %15, i64 1, !dbg !5905
  %length6 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx5, i32 0, i32 1, !dbg !5906
  %16 = load i64, i64* %length6, align 8, !dbg !5906, !tbaa !5402
  store i64 %16, i64* %nkey, align 8, !dbg !5907, !tbaa !914
  %17 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5908, !tbaa !964
  %arrayidx7 = getelementptr inbounds %struct.token_s, %struct.token_s* %17, i64 2, !dbg !5908
  %value8 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx7, i32 0, i32 0, !dbg !5909
  %18 = load i8*, i8** %value8, align 8, !dbg !5909, !tbaa !4776
  %call = call i64 @strtoul(i8* %18, i8** null, i32 10) #12, !dbg !5910
  %conv = trunc i64 %call to i32, !dbg !5910
  store i32 %conv, i32* %flags, align 4, !dbg !5911, !tbaa !946
  %19 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5912, !tbaa !964
  %arrayidx9 = getelementptr inbounds %struct.token_s, %struct.token_s* %19, i64 3, !dbg !5912
  %value10 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx9, i32 0, i32 0, !dbg !5913
  %20 = load i8*, i8** %value10, align 8, !dbg !5913, !tbaa !4776
  %call11 = call i64 @strtol(i8* %20, i8** null, i32 10) #12, !dbg !5914
  store i64 %call11, i64* %exptime, align 8, !dbg !5915, !tbaa !914
  %21 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5916, !tbaa !964
  %arrayidx12 = getelementptr inbounds %struct.token_s, %struct.token_s* %21, i64 4, !dbg !5916
  %value13 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx12, i32 0, i32 0, !dbg !5917
  %22 = load i8*, i8** %value13, align 8, !dbg !5917, !tbaa !4776
  %call14 = call i64 @strtol(i8* %22, i8** null, i32 10) #12, !dbg !5918
  %conv15 = trunc i64 %call14 to i32, !dbg !5918
  store i32 %conv15, i32* %vlen, align 4, !dbg !5919, !tbaa !946
  %23 = load i8, i8* %handle_cas.addr, align 1, !dbg !5920, !tbaa !1031, !range !1262
  %tobool = trunc i8 %23 to i1, !dbg !5920
  br i1 %tobool, label %if.then16, label %if.end20, !dbg !5922

if.then16:                                        ; preds = %if.end3
  %24 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !5923, !tbaa !964
  %arrayidx17 = getelementptr inbounds %struct.token_s, %struct.token_s* %24, i64 5, !dbg !5923
  %value18 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx17, i32 0, i32 0, !dbg !5925
  %25 = load i8*, i8** %value18, align 8, !dbg !5925, !tbaa !4776
  %call19 = call i64 @strtoull(i8* %25, i8** null, i32 10) #12, !dbg !5926
  store i64 %call19, i64* %req_cas_id, align 8, !dbg !5927, !tbaa !914
  br label %if.end20, !dbg !5928

if.end20:                                         ; preds = %if.then16, %if.end3
  %call21 = call i32* @__errno_location() #14, !dbg !5929
  %26 = load i32, i32* %call21, align 4, !dbg !5929, !tbaa !946
  %cmp22 = icmp eq i32 %26, 34, !dbg !5931
  br i1 %cmp22, label %if.then32, label %lor.lhs.false, !dbg !5932

lor.lhs.false:                                    ; preds = %if.end20
  %27 = load i32, i32* %flags, align 4, !dbg !5933, !tbaa !946
  %cmp24 = icmp eq i32 %27, 0, !dbg !5934
  br i1 %cmp24, label %land.lhs.true, label %lor.lhs.false26, !dbg !5935

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %28 = load i64, i64* %exptime, align 8, !dbg !5936, !tbaa !914
  %cmp27 = icmp eq i64 %28, 0, !dbg !5937
  br i1 %cmp27, label %land.lhs.true, label %if.end33, !dbg !5938

land.lhs.true:                                    ; preds = %lor.lhs.false26, %lor.lhs.false
  %call29 = call i32* @__errno_location() #14, !dbg !5939
  %29 = load i32, i32* %call29, align 4, !dbg !5939, !tbaa !946
  %cmp30 = icmp eq i32 %29, 22, !dbg !5940
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !5941

if.then32:                                        ; preds = %land.lhs.true, %if.end20
  %30 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5942, !tbaa !964
  call void @out_string(%struct.conn* %30, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i64 0, i64 0)), !dbg !5944
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup70, !dbg !5945

if.end33:                                         ; preds = %land.lhs.true, %lor.lhs.false26
  %31 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8, !dbg !5946, !tbaa !2245, !range !1262
  %tobool34 = trunc i8 %31 to i1, !dbg !5946
  br i1 %tobool34, label %if.then35, label %if.end47, !dbg !5947

if.then35:                                        ; preds = %if.end33
  %32 = bitcast i32* %bucket to i8*, !dbg !5948
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #12, !dbg !5948
  call void @llvm.dbg.declare(metadata i32* %bucket, metadata !5865, metadata !DIExpression()), !dbg !5949
  %33 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5950, !tbaa !964
  %bucket36 = getelementptr inbounds %struct.conn, %struct.conn* %33, i32 0, i32 43, !dbg !5951
  %34 = load i32, i32* %bucket36, align 8, !dbg !5951, !tbaa !1361
  store i32 %34, i32* %bucket, align 4, !dbg !5949, !tbaa !946
  %35 = load i32, i32* %bucket, align 4, !dbg !5952, !tbaa !946
  %cmp37 = icmp eq i32 %35, -1, !dbg !5954
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !5955

if.then39:                                        ; preds = %if.then35
  %36 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5956, !tbaa !964
  call void @out_string(%struct.conn* %36, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.84, i64 0, i64 0)), !dbg !5958
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5959

if.end40:                                         ; preds = %if.then35
  %37 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5960, !tbaa !964
  %bucket41 = getelementptr inbounds %struct.conn, %struct.conn* %37, i32 0, i32 43, !dbg !5961
  store i32 -1, i32* %bucket41, align 8, !dbg !5962, !tbaa !1361
  %38 = load i32*, i32** @buckets, align 8, !dbg !5963, !tbaa !964
  %39 = load i32, i32* %bucket, align 4, !dbg !5965, !tbaa !946
  %idxprom = sext i32 %39 to i64, !dbg !5963
  %arrayidx42 = getelementptr inbounds i32, i32* %38, i64 %idxprom, !dbg !5963
  %40 = load i32, i32* %arrayidx42, align 4, !dbg !5963, !tbaa !946
  %41 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5966, !tbaa !964
  %gen = getelementptr inbounds %struct.conn, %struct.conn* %41, i32 0, i32 44, !dbg !5967
  %42 = load i32, i32* %gen, align 4, !dbg !5967, !tbaa !1365
  %cmp43 = icmp ne i32 %40, %42, !dbg !5968
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !5969

if.then45:                                        ; preds = %if.end40
  %43 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5970, !tbaa !964
  call void @out_string(%struct.conn* %43, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.85, i64 0, i64 0)), !dbg !5972
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !5973

if.end46:                                         ; preds = %if.end40
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !5974
  br label %cleanup, !dbg !5974

cleanup:                                          ; preds = %if.end46, %if.then45, %if.then39
  %44 = bitcast i32* %bucket to i8*, !dbg !5974
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %44) #12, !dbg !5974
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup70 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end47, !dbg !5975

if.end47:                                         ; preds = %cleanup.cont, %if.end33
  %45 = load i8*, i8** %key, align 8, !dbg !5976, !tbaa !964
  %46 = load i64, i64* %nkey, align 8, !dbg !5976, !tbaa !914
  %47 = load i32, i32* %flags, align 4, !dbg !5976, !tbaa !946
  %48 = load i64, i64* %exptime, align 8, !dbg !5976, !tbaa !914
  %call48 = call i32 @realtime(i64 %48), !dbg !5976
  %49 = load i32, i32* %vlen, align 4, !dbg !5976, !tbaa !946
  %add = add nsw i32 %49, 2, !dbg !5976
  %call49 = call %struct._stritem* @mt_item_alloc(i8* %45, i64 %46, i32 %47, i32 %call48, i32 %add), !dbg !5976
  store %struct._stritem* %call49, %struct._stritem** %it, align 8, !dbg !5977, !tbaa !964
  %50 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !5978, !tbaa !964
  %cmp50 = icmp eq %struct._stritem* %50, null, !dbg !5980
  br i1 %cmp50, label %if.then52, label %if.end59, !dbg !5981

if.then52:                                        ; preds = %if.end47
  %51 = load i64, i64* %nkey, align 8, !dbg !5982, !tbaa !914
  %52 = load i32, i32* %flags, align 4, !dbg !5985, !tbaa !946
  %53 = load i32, i32* %vlen, align 4, !dbg !5986, !tbaa !946
  %add53 = add nsw i32 %53, 2, !dbg !5987
  %call54 = call zeroext i1 @item_size_ok(i64 %51, i32 %52, i32 %add53), !dbg !5988
  br i1 %call54, label %if.else56, label %if.then55, !dbg !5989

if.then55:                                        ; preds = %if.then52
  %54 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5990, !tbaa !964
  call void @out_string(%struct.conn* %54, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.91, i64 0, i64 0)), !dbg !5991
  br label %if.end57, !dbg !5991

if.else56:                                        ; preds = %if.then52
  %55 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5992, !tbaa !964
  call void @out_string(%struct.conn* %55, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.92, i64 0, i64 0)), !dbg !5993
  br label %if.end57

if.end57:                                         ; preds = %if.else56, %if.then55
  %56 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5994, !tbaa !964
  %write_and_go = getelementptr inbounds %struct.conn, %struct.conn* %56, i32 0, i32 13, !dbg !5995
  store i32 4, i32* %write_and_go, align 8, !dbg !5996, !tbaa !1349
  %57 = load i32, i32* %vlen, align 4, !dbg !5997, !tbaa !946
  %add58 = add nsw i32 %57, 2, !dbg !5998
  %58 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !5999, !tbaa !964
  %sbytes = getelementptr inbounds %struct.conn, %struct.conn* %58, i32 0, i32 19, !dbg !6000
  store i32 %add58, i32* %sbytes, align 4, !dbg !6001, !tbaa !3409
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup70, !dbg !6002

if.end59:                                         ; preds = %if.end47
  %59 = load i8, i8* %handle_cas.addr, align 1, !dbg !6003, !tbaa !1031, !range !1262
  %tobool60 = trunc i8 %59 to i1, !dbg !6003
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !6005

if.then61:                                        ; preds = %if.end59
  %60 = load i64, i64* %req_cas_id, align 8, !dbg !6006, !tbaa !914
  %61 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6007, !tbaa !964
  %cas_id = getelementptr inbounds %struct._stritem, %struct._stritem* %61, i32 0, i32 11, !dbg !6008
  store i64 %60, i64* %cas_id, align 8, !dbg !6009, !tbaa !1670
  br label %if.end62, !dbg !6007

if.end62:                                         ; preds = %if.then61, %if.end59
  %62 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6010, !tbaa !964
  %63 = bitcast %struct._stritem* %62 to i8*, !dbg !6010
  %64 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6011, !tbaa !964
  %item_ptr = getelementptr inbounds %struct.conn, %struct.conn* %64, i32 0, i32 17, !dbg !6012
  store i8* %63, i8** %item_ptr, align 8, !dbg !6013, !tbaa !1357
  %65 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6014, !tbaa !964
  %end = getelementptr inbounds %struct._stritem, %struct._stritem* %65, i32 0, i32 12, !dbg !6014
  %arrayidx63 = getelementptr inbounds [8 x i8*], [8 x i8*]* %end, i64 0, i64 0, !dbg !6014
  %66 = bitcast i8** %arrayidx63 to i8*, !dbg !6014
  %67 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6014, !tbaa !964
  %nkey64 = getelementptr inbounds %struct._stritem, %struct._stritem* %67, i32 0, i32 10, !dbg !6014
  %68 = load i8, i8* %nkey64, align 1, !dbg !6014, !tbaa !1595
  %conv65 = zext i8 %68 to i32, !dbg !6014
  %idx.ext = sext i32 %conv65 to i64, !dbg !6014
  %add.ptr = getelementptr inbounds i8, i8* %66, i64 %idx.ext, !dbg !6014
  %add.ptr66 = getelementptr inbounds i8, i8* %add.ptr, i64 1, !dbg !6014
  %69 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6014, !tbaa !964
  %nsuffix = getelementptr inbounds %struct._stritem, %struct._stritem* %69, i32 0, i32 7, !dbg !6014
  %70 = load i8, i8* %nsuffix, align 2, !dbg !6014, !tbaa !1725
  %conv67 = zext i8 %70 to i32, !dbg !6014
  %idx.ext68 = sext i32 %conv67 to i64, !dbg !6014
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr66, i64 %idx.ext68, !dbg !6014
  %71 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6015, !tbaa !964
  %ritem = getelementptr inbounds %struct.conn, %struct.conn* %71, i32 0, i32 15, !dbg !6016
  %72 = bitcast i8** %ritem to i8*, !dbg !6017
  %73 = call i32 @cpavise_store_data_fileline(i8* %72, i64 8, i32 0, i32 1454), !dbg !6017
  store i8* %add.ptr69, i8** %ritem, align 8, !dbg !6017, !tbaa !1313
  %74 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6018, !tbaa !964
  %nbytes = getelementptr inbounds %struct._stritem, %struct._stritem* %74, i32 0, i32 5, !dbg !6019
  %75 = bitcast i32* %nbytes to i8*, !dbg !6019
  %76 = load i32, i32* %nbytes, align 8, !dbg !6019, !tbaa !1706
  %77 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6020, !tbaa !964
  %rlbytes = getelementptr inbounds %struct.conn, %struct.conn* %77, i32 0, i32 16, !dbg !6021
  %78 = bitcast i32* %rlbytes to i8*, !dbg !6022
  %79 = call i32 @cpavise_store_data_fileline(i8* %78, i64 4, i32 0, i32 1455), !dbg !6022
  store i32 %76, i32* %rlbytes, align 8, !dbg !6022, !tbaa !1289
  %80 = load i32, i32* %comm.addr, align 4, !dbg !6023, !tbaa !946
  %81 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6024, !tbaa !964
  %item_comm = getelementptr inbounds %struct.conn, %struct.conn* %81, i32 0, i32 18, !dbg !6025
  store i32 %80, i32* %item_comm, align 8, !dbg !6026, !tbaa !4229
  %82 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6027, !tbaa !964
  call void @conn_set_state(%struct.conn* %82, i32 3), !dbg !6028
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !6029
  br label %cleanup70, !dbg !6029

cleanup70:                                        ; preds = %if.end62, %if.end57, %cleanup, %if.then32, %if.then2
  %83 = bitcast %struct._stritem** %old_it to i8*, !dbg !6029
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %83) #12, !dbg !6029
  %84 = bitcast %struct._stritem** %it to i8*, !dbg !6029
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #12, !dbg !6029
  %85 = bitcast i64* %req_cas_id to i8*, !dbg !6029
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #12, !dbg !6029
  %86 = bitcast i32* %old_vlen to i8*, !dbg !6029
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %86) #12, !dbg !6029
  %87 = bitcast i32* %vlen to i8*, !dbg !6029
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %87) #12, !dbg !6029
  %88 = bitcast i64* %exptime to i8*, !dbg !6029
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %88) #12, !dbg !6029
  %89 = bitcast i32* %flags to i8*, !dbg !6029
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %89) #12, !dbg !6029
  %90 = bitcast i64* %nkey to i8*, !dbg !6029
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %90) #12, !dbg !6029
  %91 = bitcast i8** %key to i8*, !dbg !6029
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #12, !dbg !6029
  %cleanup.dest79 = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest79, label %unreachable [
    i32 0, label %cleanup.cont80
    i32 1, label %cleanup.cont80
  ]

cleanup.cont80:                                   ; preds = %cleanup70, %cleanup70
  ret void, !dbg !6029

unreachable:                                      ; preds = %cleanup70
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @process_arithmetic_command(%struct.conn* %c, %struct.token_s* %tokens, i64 %ntokens, i1 zeroext %incr) #0 !dbg !6030 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %tokens.addr = alloca %struct.token_s*, align 8
  %ntokens.addr = alloca i64, align 8
  %incr.addr = alloca i8, align 1
  %temp = alloca [21 x i8], align 16
  %it = alloca %struct._stritem*, align 8
  %delta = alloca i64, align 8
  %key = alloca i8*, align 8
  %nkey = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %bucket = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !6034, metadata !DIExpression()), !dbg !6049
  store %struct.token_s* %tokens, %struct.token_s** %tokens.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.token_s** %tokens.addr, metadata !6035, metadata !DIExpression()), !dbg !6050
  store i64 %ntokens, i64* %ntokens.addr, align 8, !tbaa !914
  call void @llvm.dbg.declare(metadata i64* %ntokens.addr, metadata !6036, metadata !DIExpression()), !dbg !6051
  %frombool = zext i1 %incr to i8
  store i8 %frombool, i8* %incr.addr, align 1, !tbaa !1031
  call void @llvm.dbg.declare(metadata i8* %incr.addr, metadata !6037, metadata !DIExpression()), !dbg !6052
  %0 = bitcast [21 x i8]* %temp to i8*, !dbg !6053
  call void @llvm.lifetime.start.p0i8(i64 21, i8* %0) #12, !dbg !6053
  call void @llvm.dbg.declare(metadata [21 x i8]* %temp, metadata !6038, metadata !DIExpression()), !dbg !6054
  %1 = bitcast %struct._stritem** %it to i8*, !dbg !6055
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !6055
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !6042, metadata !DIExpression()), !dbg !6056
  %2 = bitcast i64* %delta to i8*, !dbg !6057
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #12, !dbg !6057
  call void @llvm.dbg.declare(metadata i64* %delta, metadata !6043, metadata !DIExpression()), !dbg !6058
  %3 = bitcast i8** %key to i8*, !dbg !6059
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #12, !dbg !6059
  call void @llvm.dbg.declare(metadata i8** %key, metadata !6044, metadata !DIExpression()), !dbg !6060
  %4 = bitcast i64* %nkey to i8*, !dbg !6061
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #12, !dbg !6061
  call void @llvm.dbg.declare(metadata i64* %nkey, metadata !6045, metadata !DIExpression()), !dbg !6062
  %5 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6063, !tbaa !964
  %cmp = icmp ne %struct.conn* %5, null, !dbg !6063
  br i1 %cmp, label %if.then, label %if.else, !dbg !6066

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6066

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1472, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__.process_arithmetic_command, i64 0, i64 0)) #13, !dbg !6063
  unreachable, !dbg !6063

if.end:                                           ; preds = %if.then
  %6 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !6067, !tbaa !964
  %arrayidx = getelementptr inbounds %struct.token_s, %struct.token_s* %6, i64 1, !dbg !6067
  %length = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx, i32 0, i32 1, !dbg !6069
  %7 = load i64, i64* %length, align 8, !dbg !6069, !tbaa !5402
  %cmp1 = icmp ugt i64 %7, 250, !dbg !6070
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6071

if.then2:                                         ; preds = %if.end
  %8 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6072, !tbaa !964
  call void @out_string(%struct.conn* %8, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i64 0, i64 0)), !dbg !6074
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup30, !dbg !6075

if.end3:                                          ; preds = %if.end
  %9 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !6076, !tbaa !964
  %arrayidx4 = getelementptr inbounds %struct.token_s, %struct.token_s* %9, i64 1, !dbg !6076
  %value = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx4, i32 0, i32 0, !dbg !6077
  %10 = load i8*, i8** %value, align 8, !dbg !6077, !tbaa !4776
  store i8* %10, i8** %key, align 8, !dbg !6078, !tbaa !964
  %11 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !6079, !tbaa !964
  %arrayidx5 = getelementptr inbounds %struct.token_s, %struct.token_s* %11, i64 1, !dbg !6079
  %length6 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx5, i32 0, i32 1, !dbg !6080
  %12 = load i64, i64* %length6, align 8, !dbg !6080, !tbaa !5402
  store i64 %12, i64* %nkey, align 8, !dbg !6081, !tbaa !914
  %13 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8, !dbg !6082, !tbaa !2245, !range !1262
  %tobool = trunc i8 %13 to i1, !dbg !6082
  br i1 %tobool, label %if.then7, label %if.end17, !dbg !6083

if.then7:                                         ; preds = %if.end3
  %14 = bitcast i32* %bucket to i8*, !dbg !6084
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #12, !dbg !6084
  call void @llvm.dbg.declare(metadata i32* %bucket, metadata !6046, metadata !DIExpression()), !dbg !6085
  %15 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6086, !tbaa !964
  %bucket8 = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 43, !dbg !6087
  %16 = load i32, i32* %bucket8, align 8, !dbg !6087, !tbaa !1361
  store i32 %16, i32* %bucket, align 4, !dbg !6085, !tbaa !946
  %17 = load i32, i32* %bucket, align 4, !dbg !6088, !tbaa !946
  %cmp9 = icmp eq i32 %17, -1, !dbg !6090
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !6091

if.then10:                                        ; preds = %if.then7
  %18 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6092, !tbaa !964
  call void @out_string(%struct.conn* %18, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.84, i64 0, i64 0)), !dbg !6094
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6095

if.end11:                                         ; preds = %if.then7
  %19 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6096, !tbaa !964
  %bucket12 = getelementptr inbounds %struct.conn, %struct.conn* %19, i32 0, i32 43, !dbg !6097
  store i32 -1, i32* %bucket12, align 8, !dbg !6098, !tbaa !1361
  %20 = load i32*, i32** @buckets, align 8, !dbg !6099, !tbaa !964
  %21 = load i32, i32* %bucket, align 4, !dbg !6101, !tbaa !946
  %idxprom = sext i32 %21 to i64, !dbg !6099
  %arrayidx13 = getelementptr inbounds i32, i32* %20, i64 %idxprom, !dbg !6099
  %22 = load i32, i32* %arrayidx13, align 4, !dbg !6099, !tbaa !946
  %23 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6102, !tbaa !964
  %gen = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 44, !dbg !6103
  %24 = load i32, i32* %gen, align 4, !dbg !6103, !tbaa !1365
  %cmp14 = icmp ne i32 %22, %24, !dbg !6104
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !6105

if.then15:                                        ; preds = %if.end11
  %25 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6106, !tbaa !964
  call void @out_string(%struct.conn* %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.85, i64 0, i64 0)), !dbg !6108
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6109

if.end16:                                         ; preds = %if.end11
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !6110
  br label %cleanup, !dbg !6110

cleanup:                                          ; preds = %if.end16, %if.then15, %if.then10
  %26 = bitcast i32* %bucket to i8*, !dbg !6110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %26) #12, !dbg !6110
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup30 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end17, !dbg !6111

if.end17:                                         ; preds = %cleanup.cont, %if.end3
  %27 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !6112, !tbaa !964
  %arrayidx18 = getelementptr inbounds %struct.token_s, %struct.token_s* %27, i64 2, !dbg !6112
  %value19 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx18, i32 0, i32 0, !dbg !6113
  %28 = load i8*, i8** %value19, align 8, !dbg !6113, !tbaa !4776
  %call = call i64 @strtoll(i8* %28, i8** null, i32 10) #12, !dbg !6114
  store i64 %call, i64* %delta, align 8, !dbg !6115, !tbaa !914
  %call20 = call i32* @__errno_location() #14, !dbg !6116
  %29 = load i32, i32* %call20, align 4, !dbg !6116, !tbaa !946
  %cmp21 = icmp eq i32 %29, 34, !dbg !6118
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !6119

if.then22:                                        ; preds = %if.end17
  %30 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6120, !tbaa !964
  call void @out_string(%struct.conn* %30, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i64 0, i64 0)), !dbg !6122
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup30, !dbg !6123

if.end23:                                         ; preds = %if.end17
  %31 = load i8*, i8** %key, align 8, !dbg !6124, !tbaa !964
  %32 = load i64, i64* %nkey, align 8, !dbg !6125, !tbaa !914
  %call24 = call %struct._stritem* @item_get(i8* %31, i64 %32), !dbg !6126
  store %struct._stritem* %call24, %struct._stritem** %it, align 8, !dbg !6127, !tbaa !964
  %33 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6128, !tbaa !964
  %tobool25 = icmp ne %struct._stritem* %33, null, !dbg !6128
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !6130

if.then26:                                        ; preds = %if.end23
  %34 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6131, !tbaa !964
  call void @out_string(%struct.conn* %34, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.93, i64 0, i64 0)), !dbg !6133
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup30, !dbg !6134

if.end27:                                         ; preds = %if.end23
  %35 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6135, !tbaa !964
  %36 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6136, !tbaa !964
  %37 = load i8, i8* %incr.addr, align 1, !dbg !6136, !tbaa !1031, !range !1262
  %tobool28 = trunc i8 %37 to i1, !dbg !6136
  %conv = zext i1 %tobool28 to i32, !dbg !6136
  %38 = load i64, i64* %delta, align 8, !dbg !6136, !tbaa !914
  %arraydecay = getelementptr inbounds [21 x i8], [21 x i8]* %temp, i64 0, i64 0, !dbg !6136
  %call29 = call i8* @mt_add_delta(%struct._stritem* %36, i32 %conv, i64 %38, i8* %arraydecay), !dbg !6136
  call void @out_string(%struct.conn* %35, i8* %call29), !dbg !6137
  %39 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6138, !tbaa !964
  call void @mt_item_remove(%struct._stritem* %39), !dbg !6138
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !6139
  br label %cleanup30, !dbg !6139

cleanup30:                                        ; preds = %if.end27, %if.then26, %if.then22, %cleanup, %if.then2
  %40 = bitcast i64* %nkey to i8*, !dbg !6139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #12, !dbg !6139
  %41 = bitcast i8** %key to i8*, !dbg !6139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %41) #12, !dbg !6139
  %42 = bitcast i64* %delta to i8*, !dbg !6139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #12, !dbg !6139
  %43 = bitcast %struct._stritem** %it to i8*, !dbg !6139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #12, !dbg !6139
  %44 = bitcast [21 x i8]* %temp to i8*, !dbg !6139
  call void @llvm.lifetime.end.p0i8(i64 21, i8* %44) #12, !dbg !6139
  %cleanup.dest35 = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest35, label %unreachable [
    i32 0, label %cleanup.cont36
    i32 1, label %cleanup.cont36
  ]

cleanup.cont36:                                   ; preds = %cleanup30, %cleanup30
  ret void, !dbg !6139

unreachable:                                      ; preds = %cleanup30
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @process_delete_command(%struct.conn* %c, %struct.token_s* %tokens, i64 %ntokens) #0 !dbg !6140 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %tokens.addr = alloca %struct.token_s*, align 8
  %ntokens.addr = alloca i64, align 8
  %key = alloca i8*, align 8
  %nkey = alloca i64, align 8
  %it = alloca %struct._stritem*, align 8
  %exptime = alloca i64, align 8
  %bucket = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !6144, metadata !DIExpression()), !dbg !6154
  store %struct.token_s* %tokens, %struct.token_s** %tokens.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.token_s** %tokens.addr, metadata !6145, metadata !DIExpression()), !dbg !6155
  store i64 %ntokens, i64* %ntokens.addr, align 8, !tbaa !914
  call void @llvm.dbg.declare(metadata i64* %ntokens.addr, metadata !6146, metadata !DIExpression()), !dbg !6156
  %0 = bitcast i8** %key to i8*, !dbg !6157
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #12, !dbg !6157
  call void @llvm.dbg.declare(metadata i8** %key, metadata !6147, metadata !DIExpression()), !dbg !6158
  %1 = bitcast i64* %nkey to i8*, !dbg !6159
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #12, !dbg !6159
  call void @llvm.dbg.declare(metadata i64* %nkey, metadata !6148, metadata !DIExpression()), !dbg !6160
  %2 = bitcast %struct._stritem** %it to i8*, !dbg !6161
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #12, !dbg !6161
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !6149, metadata !DIExpression()), !dbg !6162
  %3 = bitcast i64* %exptime to i8*, !dbg !6163
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #12, !dbg !6163
  call void @llvm.dbg.declare(metadata i64* %exptime, metadata !6150, metadata !DIExpression()), !dbg !6164
  store i64 0, i64* %exptime, align 8, !dbg !6164, !tbaa !914
  %4 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6165, !tbaa !964
  %cmp = icmp ne %struct.conn* %4, null, !dbg !6165
  br i1 %cmp, label %if.then, label %if.else, !dbg !6168

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6168

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1569, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__.process_delete_command, i64 0, i64 0)) #13, !dbg !6165
  unreachable, !dbg !6165

if.end:                                           ; preds = %if.then
  %5 = load i8, i8* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 7), align 8, !dbg !6169, !tbaa !2245, !range !1262
  %tobool = trunc i8 %5 to i1, !dbg !6169
  br i1 %tobool, label %if.then1, label %if.end10, !dbg !6170

if.then1:                                         ; preds = %if.end
  %6 = bitcast i32* %bucket to i8*, !dbg !6171
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #12, !dbg !6171
  call void @llvm.dbg.declare(metadata i32* %bucket, metadata !6151, metadata !DIExpression()), !dbg !6172
  %7 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6173, !tbaa !964
  %bucket2 = getelementptr inbounds %struct.conn, %struct.conn* %7, i32 0, i32 43, !dbg !6174
  %8 = load i32, i32* %bucket2, align 8, !dbg !6174, !tbaa !1361
  store i32 %8, i32* %bucket, align 4, !dbg !6172, !tbaa !946
  %9 = load i32, i32* %bucket, align 4, !dbg !6175, !tbaa !946
  %cmp3 = icmp eq i32 %9, -1, !dbg !6177
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6178

if.then4:                                         ; preds = %if.then1
  %10 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6179, !tbaa !964
  call void @out_string(%struct.conn* %10, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.84, i64 0, i64 0)), !dbg !6181
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6182

if.end5:                                          ; preds = %if.then1
  %11 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6183, !tbaa !964
  %bucket6 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 43, !dbg !6184
  store i32 -1, i32* %bucket6, align 8, !dbg !6185, !tbaa !1361
  %12 = load i32*, i32** @buckets, align 8, !dbg !6186, !tbaa !964
  %13 = load i32, i32* %bucket, align 4, !dbg !6188, !tbaa !946
  %idxprom = sext i32 %13 to i64, !dbg !6186
  %arrayidx = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !6186
  %14 = load i32, i32* %arrayidx, align 4, !dbg !6186, !tbaa !946
  %15 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6189, !tbaa !964
  %gen = getelementptr inbounds %struct.conn, %struct.conn* %15, i32 0, i32 44, !dbg !6190
  %16 = load i32, i32* %gen, align 4, !dbg !6190, !tbaa !1365
  %cmp7 = icmp ne i32 %14, %16, !dbg !6191
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !6192

if.then8:                                         ; preds = %if.end5
  %17 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6193, !tbaa !964
  call void @out_string(%struct.conn* %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.85, i64 0, i64 0)), !dbg !6195
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6196

if.end9:                                          ; preds = %if.end5
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !6197
  br label %cleanup, !dbg !6197

cleanup:                                          ; preds = %if.end9, %if.then8, %if.then4
  %18 = bitcast i32* %bucket to i8*, !dbg !6197
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %18) #12, !dbg !6197
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup35 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end10, !dbg !6198

if.end10:                                         ; preds = %cleanup.cont, %if.end
  %19 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !6199, !tbaa !964
  %arrayidx11 = getelementptr inbounds %struct.token_s, %struct.token_s* %19, i64 1, !dbg !6199
  %value = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx11, i32 0, i32 0, !dbg !6200
  %20 = load i8*, i8** %value, align 8, !dbg !6200, !tbaa !4776
  store i8* %20, i8** %key, align 8, !dbg !6201, !tbaa !964
  %21 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !6202, !tbaa !964
  %arrayidx12 = getelementptr inbounds %struct.token_s, %struct.token_s* %21, i64 1, !dbg !6202
  %length = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx12, i32 0, i32 1, !dbg !6203
  %22 = load i64, i64* %length, align 8, !dbg !6203, !tbaa !5402
  store i64 %22, i64* %nkey, align 8, !dbg !6204, !tbaa !914
  %23 = load i64, i64* %nkey, align 8, !dbg !6205, !tbaa !914
  %cmp13 = icmp ugt i64 %23, 250, !dbg !6207
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !6208

if.then14:                                        ; preds = %if.end10
  %24 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6209, !tbaa !964
  call void @out_string(%struct.conn* %24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i64 0, i64 0)), !dbg !6211
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup35, !dbg !6212

if.end15:                                         ; preds = %if.end10
  %25 = load i64, i64* %ntokens.addr, align 8, !dbg !6213, !tbaa !914
  %cmp16 = icmp eq i64 %25, 4, !dbg !6215
  br i1 %cmp16, label %if.then17, label %if.end24, !dbg !6216

if.then17:                                        ; preds = %if.end15
  %26 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !6217, !tbaa !964
  %arrayidx18 = getelementptr inbounds %struct.token_s, %struct.token_s* %26, i64 2, !dbg !6217
  %value19 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx18, i32 0, i32 0, !dbg !6219
  %27 = load i8*, i8** %value19, align 8, !dbg !6219, !tbaa !4776
  %call = call i64 @strtol(i8* %27, i8** null, i32 10) #12, !dbg !6220
  store i64 %call, i64* %exptime, align 8, !dbg !6221, !tbaa !914
  %call20 = call i32* @__errno_location() #14, !dbg !6222
  %28 = load i32, i32* %call20, align 4, !dbg !6222, !tbaa !946
  %cmp21 = icmp eq i32 %28, 34, !dbg !6224
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !6225

if.then22:                                        ; preds = %if.then17
  %29 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6226, !tbaa !964
  call void @out_string(%struct.conn* %29, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i64 0, i64 0)), !dbg !6228
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup35, !dbg !6229

if.end23:                                         ; preds = %if.then17
  br label %if.end24, !dbg !6230

if.end24:                                         ; preds = %if.end23, %if.end15
  %30 = load i8*, i8** %key, align 8, !dbg !6231, !tbaa !964
  %31 = load i64, i64* %nkey, align 8, !dbg !6232, !tbaa !914
  %call25 = call %struct._stritem* @item_get(i8* %30, i64 %31), !dbg !6233
  store %struct._stritem* %call25, %struct._stritem** %it, align 8, !dbg !6234, !tbaa !964
  %32 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6235, !tbaa !964
  %tobool26 = icmp ne %struct._stritem* %32, null, !dbg !6235
  br i1 %tobool26, label %if.then27, label %if.else33, !dbg !6237

if.then27:                                        ; preds = %if.end24
  %33 = load i64, i64* %exptime, align 8, !dbg !6238, !tbaa !914
  %cmp28 = icmp eq i64 %33, 0, !dbg !6241
  br i1 %cmp28, label %if.then29, label %if.else30, !dbg !6242

if.then29:                                        ; preds = %if.then27
  %34 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6243, !tbaa !964
  call void @mt_item_unlink(%struct._stritem* %34), !dbg !6243
  %35 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6245, !tbaa !964
  call void @mt_item_remove(%struct._stritem* %35), !dbg !6245
  %36 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6246, !tbaa !964
  call void @out_string(%struct.conn* %36, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)), !dbg !6247
  br label %if.end32, !dbg !6248

if.else30:                                        ; preds = %if.then27
  %37 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6249, !tbaa !964
  %38 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !6251, !tbaa !964
  %39 = load i64, i64* %exptime, align 8, !dbg !6251, !tbaa !914
  %call31 = call i8* @mt_defer_delete(%struct._stritem* %38, i64 %39), !dbg !6251
  call void @out_string(%struct.conn* %37, i8* %call31), !dbg !6252
  br label %if.end32

if.end32:                                         ; preds = %if.else30, %if.then29
  br label %if.end34, !dbg !6253

if.else33:                                        ; preds = %if.end24
  %40 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6254, !tbaa !964
  call void @out_string(%struct.conn* %40, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.93, i64 0, i64 0)), !dbg !6256
  br label %if.end34

if.end34:                                         ; preds = %if.else33, %if.end32
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !6257
  br label %cleanup35, !dbg !6257

cleanup35:                                        ; preds = %if.end34, %if.then22, %if.then14, %cleanup
  %41 = bitcast i64* %exptime to i8*, !dbg !6257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %41) #12, !dbg !6257
  %42 = bitcast %struct._stritem** %it to i8*, !dbg !6257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #12, !dbg !6257
  %43 = bitcast i64* %nkey to i8*, !dbg !6257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #12, !dbg !6257
  %44 = bitcast i8** %key to i8*, !dbg !6257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #12, !dbg !6257
  %cleanup.dest39 = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest39, label %unreachable [
    i32 0, label %cleanup.cont40
    i32 1, label %cleanup.cont40
  ]

cleanup.cont40:                                   ; preds = %cleanup35, %cleanup35
  ret void, !dbg !6257

unreachable:                                      ; preds = %cleanup35
  unreachable
}

; Function Attrs: nounwind
declare dso_local i32 @__isoc99_sscanf(i8* %0, i8* %1, ...) #3

; Function Attrs: nounwind uwtable
define internal void @process_stat(%struct.conn* %c, %struct.token_s* %tokens, i64 %ntokens) #0 !dbg !6258 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %tokens.addr = alloca %struct.token_s*, align 8
  %ntokens.addr = alloca i64, align 8
  %now = alloca i32, align 4
  %command = alloca i8*, align 8
  %subcommand = alloca i8*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %temp = alloca [1024 x i8], align 16
  %pid = alloca i32, align 4
  %pos = alloca i8*, align 8
  %usage = alloca %struct.rusage, align 8
  %temp93 = alloca [512 x i8], align 16
  %info = alloca %struct.mallinfo, align 4
  %pos94 = alloca i8*, align 8
  %tmp = alloca %struct.mallinfo, align 4
  %wbuf = alloca i8*, align 8
  %wsize = alloca i32, align 4
  %fd = alloca i32, align 4
  %res = alloca i32, align 4
  %buf = alloca i8*, align 8
  %bytes = alloca i32, align 4
  %id = alloca i32, align 4
  %limit = alloca i32, align 4
  %bytes199 = alloca i32, align 4
  %bytes205 = alloca i32, align 4
  %buf206 = alloca i8*, align 8
  %bytes220 = alloca i32, align 4
  %buf221 = alloca i8*, align 8
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !6260, metadata !DIExpression()), !dbg !6306
  store %struct.token_s* %tokens, %struct.token_s** %tokens.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.token_s** %tokens.addr, metadata !6261, metadata !DIExpression()), !dbg !6307
  store i64 %ntokens, i64* %ntokens.addr, align 8, !tbaa !914
  call void @llvm.dbg.declare(metadata i64* %ntokens.addr, metadata !6262, metadata !DIExpression()), !dbg !6308
  %0 = bitcast i32* %now to i8*, !dbg !6309
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !6309
  call void @llvm.dbg.declare(metadata i32* %now, metadata !6263, metadata !DIExpression()), !dbg !6310
  %1 = load volatile i32, i32* @current_time, align 4, !dbg !6311, !tbaa !946
  store i32 %1, i32* %now, align 4, !dbg !6312, !tbaa !946
  %2 = bitcast i8** %command to i8*, !dbg !6313
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #12, !dbg !6313
  call void @llvm.dbg.declare(metadata i8** %command, metadata !6264, metadata !DIExpression()), !dbg !6314
  %3 = bitcast i8** %subcommand to i8*, !dbg !6315
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #12, !dbg !6315
  call void @llvm.dbg.declare(metadata i8** %subcommand, metadata !6265, metadata !DIExpression()), !dbg !6316
  %4 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6317, !tbaa !964
  %cmp = icmp ne %struct.conn* %4, null, !dbg !6317
  br i1 %cmp, label %if.then, label %if.else, !dbg !6320

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6320

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1028, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.process_stat, i64 0, i64 0)) #13, !dbg !6317
  unreachable, !dbg !6317

if.end:                                           ; preds = %if.then
  %5 = load i64, i64* %ntokens.addr, align 8, !dbg !6321, !tbaa !914
  %cmp1 = icmp ult i64 %5, 2, !dbg !6323
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6324

if.then2:                                         ; preds = %if.end
  %6 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6325, !tbaa !964
  call void @out_string(%struct.conn* %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.94, i64 0, i64 0)), !dbg !6327
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup226, !dbg !6328

if.end3:                                          ; preds = %if.end
  %7 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !6329, !tbaa !964
  %arrayidx = getelementptr inbounds %struct.token_s, %struct.token_s* %7, i64 0, !dbg !6329
  %value = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx, i32 0, i32 0, !dbg !6330
  %8 = load i8*, i8** %value, align 8, !dbg !6330, !tbaa !4776
  store i8* %8, i8** %command, align 8, !dbg !6331, !tbaa !964
  %9 = load i64, i64* %ntokens.addr, align 8, !dbg !6332, !tbaa !914
  %cmp4 = icmp eq i64 %9, 2, !dbg !6333
  br i1 %cmp4, label %land.lhs.true, label %if.end81, !dbg !6334

land.lhs.true:                                    ; preds = %if.end3
  %10 = load i8*, i8** %command, align 8, !dbg !6335, !tbaa !964
  %call = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0)) #15, !dbg !6336
  %cmp5 = icmp eq i32 %call, 0, !dbg !6337
  br i1 %cmp5, label %if.then6, label %if.end81, !dbg !6338

if.then6:                                         ; preds = %land.lhs.true
  %11 = bitcast [1024 x i8]* %temp to i8*, !dbg !6339
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* %11) #12, !dbg !6339
  call void @llvm.dbg.declare(metadata [1024 x i8]* %temp, metadata !6266, metadata !DIExpression()), !dbg !6340
  %12 = bitcast i32* %pid to i8*, !dbg !6341
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #12, !dbg !6341
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !6272, metadata !DIExpression()), !dbg !6342
  %call7 = call i32 @getpid() #12, !dbg !6343
  store i32 %call7, i32* %pid, align 4, !dbg !6342, !tbaa !946
  %13 = bitcast i8** %pos to i8*, !dbg !6344
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #12, !dbg !6344
  call void @llvm.dbg.declare(metadata i8** %pos, metadata !6273, metadata !DIExpression()), !dbg !6345
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %temp, i64 0, i64 0, !dbg !6346
  store i8* %arraydecay, i8** %pos, align 8, !dbg !6345, !tbaa !964
  %14 = bitcast %struct.rusage* %usage to i8*, !dbg !6347
  call void @llvm.lifetime.start.p0i8(i64 144, i8* %14) #12, !dbg !6347
  call void @llvm.dbg.declare(metadata %struct.rusage* %usage, metadata !6274, metadata !DIExpression()), !dbg !6348
  %call8 = call i32 @getrusage(i32 0, %struct.rusage* %usage) #12, !dbg !6349
  call void @mt_stats_lock(), !dbg !6350
  %15 = load i8*, i8** %pos, align 8, !dbg !6351, !tbaa !964
  %16 = load i32, i32* %pid, align 4, !dbg !6352, !tbaa !946
  %call9 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.95, i64 0, i64 0), i32 %16) #12, !dbg !6353
  %17 = load i8*, i8** %pos, align 8, !dbg !6354, !tbaa !964
  %idx.ext = sext i32 %call9 to i64, !dbg !6354
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %idx.ext, !dbg !6354
  store i8* %add.ptr, i8** %pos, align 8, !dbg !6354, !tbaa !964
  %18 = load i8*, i8** %pos, align 8, !dbg !6355, !tbaa !964
  %19 = load i32, i32* %now, align 4, !dbg !6356, !tbaa !946
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.96, i64 0, i64 0), i32 %19) #12, !dbg !6357
  %20 = load i8*, i8** %pos, align 8, !dbg !6358, !tbaa !964
  %idx.ext11 = sext i32 %call10 to i64, !dbg !6358
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %idx.ext11, !dbg !6358
  store i8* %add.ptr12, i8** %pos, align 8, !dbg !6358, !tbaa !964
  %21 = load i8*, i8** %pos, align 8, !dbg !6359, !tbaa !964
  %22 = load i32, i32* %now, align 4, !dbg !6360, !tbaa !946
  %conv = zext i32 %22 to i64, !dbg !6360
  %23 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 11), align 8, !dbg !6361, !tbaa !932
  %add = add nsw i64 %conv, %23, !dbg !6362
  %call13 = call i32 (i8*, i8*, ...) @sprintf(i8* %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.97, i64 0, i64 0), i64 %add) #12, !dbg !6363
  %24 = load i8*, i8** %pos, align 8, !dbg !6364, !tbaa !964
  %idx.ext14 = sext i32 %call13 to i64, !dbg !6364
  %add.ptr15 = getelementptr inbounds i8, i8* %24, i64 %idx.ext14, !dbg !6364
  store i8* %add.ptr15, i8** %pos, align 8, !dbg !6364, !tbaa !964
  %25 = load i8*, i8** %pos, align 8, !dbg !6365, !tbaa !964
  %call16 = call i32 (i8*, i8*, ...) @sprintf(i8* %25, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.98, i64 0, i64 0)) #12, !dbg !6366
  %26 = load i8*, i8** %pos, align 8, !dbg !6367, !tbaa !964
  %idx.ext17 = sext i32 %call16 to i64, !dbg !6367
  %add.ptr18 = getelementptr inbounds i8, i8* %26, i64 %idx.ext17, !dbg !6367
  store i8* %add.ptr18, i8** %pos, align 8, !dbg !6367, !tbaa !964
  %27 = load i8*, i8** %pos, align 8, !dbg !6368, !tbaa !964
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.99, i64 0, i64 0), i64 64) #12, !dbg !6369
  %28 = load i8*, i8** %pos, align 8, !dbg !6370, !tbaa !964
  %idx.ext20 = sext i32 %call19 to i64, !dbg !6370
  %add.ptr21 = getelementptr inbounds i8, i8* %28, i64 %idx.ext20, !dbg !6370
  store i8* %add.ptr21, i8** %pos, align 8, !dbg !6370, !tbaa !964
  %29 = load i8*, i8** %pos, align 8, !dbg !6371, !tbaa !964
  %ru_utime = getelementptr inbounds %struct.rusage, %struct.rusage* %usage, i32 0, i32 0, !dbg !6372
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %ru_utime, i32 0, i32 0, !dbg !6373
  %30 = load i64, i64* %tv_sec, align 8, !dbg !6373, !tbaa !6374
  %ru_utime22 = getelementptr inbounds %struct.rusage, %struct.rusage* %usage, i32 0, i32 0, !dbg !6376
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %ru_utime22, i32 0, i32 1, !dbg !6377
  %31 = load i64, i64* %tv_usec, align 8, !dbg !6377, !tbaa !6378
  %call23 = call i32 (i8*, i8*, ...) @sprintf(i8* %29, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.100, i64 0, i64 0), i64 %30, i64 %31) #12, !dbg !6379
  %32 = load i8*, i8** %pos, align 8, !dbg !6380, !tbaa !964
  %idx.ext24 = sext i32 %call23 to i64, !dbg !6380
  %add.ptr25 = getelementptr inbounds i8, i8* %32, i64 %idx.ext24, !dbg !6380
  store i8* %add.ptr25, i8** %pos, align 8, !dbg !6380, !tbaa !964
  %33 = load i8*, i8** %pos, align 8, !dbg !6381, !tbaa !964
  %ru_stime = getelementptr inbounds %struct.rusage, %struct.rusage* %usage, i32 0, i32 1, !dbg !6382
  %tv_sec26 = getelementptr inbounds %struct.timeval, %struct.timeval* %ru_stime, i32 0, i32 0, !dbg !6383
  %34 = load i64, i64* %tv_sec26, align 8, !dbg !6383, !tbaa !6384
  %ru_stime27 = getelementptr inbounds %struct.rusage, %struct.rusage* %usage, i32 0, i32 1, !dbg !6385
  %tv_usec28 = getelementptr inbounds %struct.timeval, %struct.timeval* %ru_stime27, i32 0, i32 1, !dbg !6386
  %35 = load i64, i64* %tv_usec28, align 8, !dbg !6386, !tbaa !6387
  %call29 = call i32 (i8*, i8*, ...) @sprintf(i8* %33, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.101, i64 0, i64 0), i64 %34, i64 %35) #12, !dbg !6388
  %36 = load i8*, i8** %pos, align 8, !dbg !6389, !tbaa !964
  %idx.ext30 = sext i32 %call29 to i64, !dbg !6389
  %add.ptr31 = getelementptr inbounds i8, i8* %36, i64 %idx.ext30, !dbg !6389
  store i8* %add.ptr31, i8** %pos, align 8, !dbg !6389, !tbaa !964
  %37 = load i8*, i8** %pos, align 8, !dbg !6390, !tbaa !964
  %38 = load i32, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 0), align 8, !dbg !6391, !tbaa !6392
  %call32 = call i32 (i8*, i8*, ...) @sprintf(i8* %37, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i64 0, i64 0), i32 %38) #12, !dbg !6393
  %39 = load i8*, i8** %pos, align 8, !dbg !6394, !tbaa !964
  %idx.ext33 = sext i32 %call32 to i64, !dbg !6394
  %add.ptr34 = getelementptr inbounds i8, i8* %39, i64 %idx.ext33, !dbg !6394
  store i8* %add.ptr34, i8** %pos, align 8, !dbg !6394, !tbaa !964
  %40 = load i8*, i8** %pos, align 8, !dbg !6395, !tbaa !964
  %41 = load i32, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 1), align 4, !dbg !6396, !tbaa !6397
  %call35 = call i32 (i8*, i8*, ...) @sprintf(i8* %40, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.103, i64 0, i64 0), i32 %41) #12, !dbg !6398
  %42 = load i8*, i8** %pos, align 8, !dbg !6399, !tbaa !964
  %idx.ext36 = sext i32 %call35 to i64, !dbg !6399
  %add.ptr37 = getelementptr inbounds i8, i8* %42, i64 %idx.ext36, !dbg !6399
  store i8* %add.ptr37, i8** %pos, align 8, !dbg !6399, !tbaa !964
  %43 = load i8*, i8** %pos, align 8, !dbg !6400, !tbaa !964
  %44 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 2), align 8, !dbg !6401, !tbaa !6402
  %call38 = call i32 (i8*, i8*, ...) @sprintf(i8* %43, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.104, i64 0, i64 0), i64 %44) #12, !dbg !6403
  %45 = load i8*, i8** %pos, align 8, !dbg !6404, !tbaa !964
  %idx.ext39 = sext i32 %call38 to i64, !dbg !6404
  %add.ptr40 = getelementptr inbounds i8, i8* %45, i64 %idx.ext39, !dbg !6404
  store i8* %add.ptr40, i8** %pos, align 8, !dbg !6404, !tbaa !964
  %46 = load i8*, i8** %pos, align 8, !dbg !6405, !tbaa !964
  %47 = load i32, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 3), align 8, !dbg !6406, !tbaa !1399
  %sub = sub i32 %47, 1, !dbg !6407
  %call41 = call i32 (i8*, i8*, ...) @sprintf(i8* %46, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.105, i64 0, i64 0), i32 %sub) #12, !dbg !6408
  %48 = load i8*, i8** %pos, align 8, !dbg !6409, !tbaa !964
  %idx.ext42 = sext i32 %call41 to i64, !dbg !6409
  %add.ptr43 = getelementptr inbounds i8, i8* %48, i64 %idx.ext42, !dbg !6409
  store i8* %add.ptr43, i8** %pos, align 8, !dbg !6409, !tbaa !964
  %49 = load i8*, i8** %pos, align 8, !dbg !6410, !tbaa !964
  %50 = load i32, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 4), align 4, !dbg !6411, !tbaa !1401
  %call44 = call i32 (i8*, i8*, ...) @sprintf(i8* %49, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.106, i64 0, i64 0), i32 %50) #12, !dbg !6412
  %51 = load i8*, i8** %pos, align 8, !dbg !6413, !tbaa !964
  %idx.ext45 = sext i32 %call44 to i64, !dbg !6413
  %add.ptr46 = getelementptr inbounds i8, i8* %51, i64 %idx.ext45, !dbg !6413
  store i8* %add.ptr46, i8** %pos, align 8, !dbg !6413, !tbaa !964
  %52 = load i8*, i8** %pos, align 8, !dbg !6414, !tbaa !964
  %53 = load i32, i32* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 5), align 8, !dbg !6415, !tbaa !1241
  %call47 = call i32 (i8*, i8*, ...) @sprintf(i8* %52, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.107, i64 0, i64 0), i32 %53) #12, !dbg !6416
  %54 = load i8*, i8** %pos, align 8, !dbg !6417, !tbaa !964
  %idx.ext48 = sext i32 %call47 to i64, !dbg !6417
  %add.ptr49 = getelementptr inbounds i8, i8* %54, i64 %idx.ext48, !dbg !6417
  store i8* %add.ptr49, i8** %pos, align 8, !dbg !6417, !tbaa !964
  %55 = load i8*, i8** %pos, align 8, !dbg !6418, !tbaa !964
  %56 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 6), align 8, !dbg !6419, !tbaa !5567
  %call50 = call i32 (i8*, i8*, ...) @sprintf(i8* %55, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.108, i64 0, i64 0), i64 %56) #12, !dbg !6420
  %57 = load i8*, i8** %pos, align 8, !dbg !6421, !tbaa !964
  %idx.ext51 = sext i32 %call50 to i64, !dbg !6421
  %add.ptr52 = getelementptr inbounds i8, i8* %57, i64 %idx.ext51, !dbg !6421
  store i8* %add.ptr52, i8** %pos, align 8, !dbg !6421, !tbaa !964
  %58 = load i8*, i8** %pos, align 8, !dbg !6422, !tbaa !964
  %59 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 7), align 8, !dbg !6423, !tbaa !4234
  %call53 = call i32 (i8*, i8*, ...) @sprintf(i8* %58, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.109, i64 0, i64 0), i64 %59) #12, !dbg !6424
  %60 = load i8*, i8** %pos, align 8, !dbg !6425, !tbaa !964
  %idx.ext54 = sext i32 %call53 to i64, !dbg !6425
  %add.ptr55 = getelementptr inbounds i8, i8* %60, i64 %idx.ext54, !dbg !6425
  store i8* %add.ptr55, i8** %pos, align 8, !dbg !6425, !tbaa !964
  %61 = load i8*, i8** %pos, align 8, !dbg !6426, !tbaa !964
  %62 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 8), align 8, !dbg !6427, !tbaa !5570
  %call56 = call i32 (i8*, i8*, ...) @sprintf(i8* %61, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.110, i64 0, i64 0), i64 %62) #12, !dbg !6428
  %63 = load i8*, i8** %pos, align 8, !dbg !6429, !tbaa !964
  %idx.ext57 = sext i32 %call56 to i64, !dbg !6429
  %add.ptr58 = getelementptr inbounds i8, i8* %63, i64 %idx.ext57, !dbg !6429
  store i8* %add.ptr58, i8** %pos, align 8, !dbg !6429, !tbaa !964
  %64 = load i8*, i8** %pos, align 8, !dbg !6430, !tbaa !964
  %65 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 9), align 8, !dbg !6431, !tbaa !5573
  %call59 = call i32 (i8*, i8*, ...) @sprintf(i8* %64, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.111, i64 0, i64 0), i64 %65) #12, !dbg !6432
  %66 = load i8*, i8** %pos, align 8, !dbg !6433, !tbaa !964
  %idx.ext60 = sext i32 %call59 to i64, !dbg !6433
  %add.ptr61 = getelementptr inbounds i8, i8* %66, i64 %idx.ext60, !dbg !6433
  store i8* %add.ptr61, i8** %pos, align 8, !dbg !6433, !tbaa !964
  %67 = load i8*, i8** %pos, align 8, !dbg !6434, !tbaa !964
  %68 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 10), align 8, !dbg !6435, !tbaa !6436
  %call62 = call i32 (i8*, i8*, ...) @sprintf(i8* %67, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.112, i64 0, i64 0), i64 %68) #12, !dbg !6437
  %69 = load i8*, i8** %pos, align 8, !dbg !6438, !tbaa !964
  %idx.ext63 = sext i32 %call62 to i64, !dbg !6438
  %add.ptr64 = getelementptr inbounds i8, i8* %69, i64 %idx.ext63, !dbg !6438
  store i8* %add.ptr64, i8** %pos, align 8, !dbg !6438, !tbaa !964
  %70 = load i8*, i8** %pos, align 8, !dbg !6439, !tbaa !964
  %71 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 12), align 8, !dbg !6440, !tbaa !3351
  %call65 = call i32 (i8*, i8*, ...) @sprintf(i8* %70, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.113, i64 0, i64 0), i64 %71) #12, !dbg !6441
  %72 = load i8*, i8** %pos, align 8, !dbg !6442, !tbaa !964
  %idx.ext66 = sext i32 %call65 to i64, !dbg !6442
  %add.ptr67 = getelementptr inbounds i8, i8* %72, i64 %idx.ext66, !dbg !6442
  store i8* %add.ptr67, i8** %pos, align 8, !dbg !6442, !tbaa !964
  %73 = load i8*, i8** %pos, align 8, !dbg !6443, !tbaa !964
  %74 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 13), align 8, !dbg !6444, !tbaa !4602
  %call68 = call i32 (i8*, i8*, ...) @sprintf(i8* %73, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.114, i64 0, i64 0), i64 %74) #12, !dbg !6445
  %75 = load i8*, i8** %pos, align 8, !dbg !6446, !tbaa !964
  %idx.ext69 = sext i32 %call68 to i64, !dbg !6446
  %add.ptr70 = getelementptr inbounds i8, i8* %75, i64 %idx.ext69, !dbg !6446
  store i8* %add.ptr70, i8** %pos, align 8, !dbg !6446, !tbaa !964
  %76 = load i8*, i8** %pos, align 8, !dbg !6447, !tbaa !964
  %77 = load i64, i64* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 0), align 8, !dbg !6448, !tbaa !2262
  %call71 = call i32 (i8*, i8*, ...) @sprintf(i8* %76, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.115, i64 0, i64 0), i64 %77) #12, !dbg !6449
  %78 = load i8*, i8** %pos, align 8, !dbg !6450, !tbaa !964
  %idx.ext72 = sext i32 %call71 to i64, !dbg !6450
  %add.ptr73 = getelementptr inbounds i8, i8* %78, i64 %idx.ext72, !dbg !6450
  store i8* %add.ptr73, i8** %pos, align 8, !dbg !6450, !tbaa !964
  %79 = load i8*, i8** %pos, align 8, !dbg !6451, !tbaa !964
  %80 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 4, !dbg !6452, !tbaa !2334
  %call74 = call i32 (i8*, i8*, ...) @sprintf(i8* %79, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.116, i64 0, i64 0), i32 %80) #12, !dbg !6453
  %81 = load i8*, i8** %pos, align 8, !dbg !6454, !tbaa !964
  %idx.ext75 = sext i32 %call74 to i64, !dbg !6454
  %add.ptr76 = getelementptr inbounds i8, i8* %81, i64 %idx.ext75, !dbg !6454
  store i8* %add.ptr76, i8** %pos, align 8, !dbg !6454, !tbaa !964
  %82 = load i8*, i8** %pos, align 8, !dbg !6455, !tbaa !964
  %call77 = call i32 (i8*, i8*, ...) @sprintf(i8* %82, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.117, i64 0, i64 0)) #12, !dbg !6456
  %83 = load i8*, i8** %pos, align 8, !dbg !6457, !tbaa !964
  %idx.ext78 = sext i32 %call77 to i64, !dbg !6457
  %add.ptr79 = getelementptr inbounds i8, i8* %83, i64 %idx.ext78, !dbg !6457
  store i8* %add.ptr79, i8** %pos, align 8, !dbg !6457, !tbaa !964
  call void @mt_stats_unlock(), !dbg !6458
  %84 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6459, !tbaa !964
  %arraydecay80 = getelementptr inbounds [1024 x i8], [1024 x i8]* %temp, i64 0, i64 0, !dbg !6460
  call void @out_string(%struct.conn* %84, i8* %arraydecay80), !dbg !6461
  store i32 1, i32* %cleanup.dest.slot, align 4
  %85 = bitcast %struct.rusage* %usage to i8*, !dbg !6462
  call void @llvm.lifetime.end.p0i8(i64 144, i8* %85) #12, !dbg !6462
  %86 = bitcast i8** %pos to i8*, !dbg !6462
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #12, !dbg !6462
  %87 = bitcast i32* %pid to i8*, !dbg !6462
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %87) #12, !dbg !6462
  %88 = bitcast [1024 x i8]* %temp to i8*, !dbg !6462
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* %88) #12, !dbg !6462
  br label %cleanup226

if.end81:                                         ; preds = %land.lhs.true, %if.end3
  %89 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !6463, !tbaa !964
  %arrayidx82 = getelementptr inbounds %struct.token_s, %struct.token_s* %89, i64 1, !dbg !6463
  %value83 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx82, i32 0, i32 0, !dbg !6464
  %90 = load i8*, i8** %value83, align 8, !dbg !6464, !tbaa !4776
  store i8* %90, i8** %subcommand, align 8, !dbg !6465, !tbaa !964
  %91 = load i8*, i8** %subcommand, align 8, !dbg !6466, !tbaa !964
  %call84 = call i32 @strcmp(i8* %91, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.118, i64 0, i64 0)) #15, !dbg !6468
  %cmp85 = icmp eq i32 %call84, 0, !dbg !6469
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !6470

if.then87:                                        ; preds = %if.end81
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1081, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.process_stat, i64 0, i64 0)) #13, !dbg !6471
  unreachable, !dbg !6471

if.end88:                                         ; preds = %if.end81
  %92 = load i8*, i8** %subcommand, align 8, !dbg !6475, !tbaa !964
  %call89 = call i32 @strcmp(i8* %92, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0)) #15, !dbg !6476
  %cmp90 = icmp eq i32 %call89, 0, !dbg !6477
  br i1 %cmp90, label %if.then92, label %if.end127, !dbg !6478

if.then92:                                        ; preds = %if.end88
  %93 = bitcast [512 x i8]* %temp93 to i8*, !dbg !6479
  call void @llvm.lifetime.start.p0i8(i64 512, i8* %93) #12, !dbg !6479
  call void @llvm.dbg.declare(metadata [512 x i8]* %temp93, metadata !6275, metadata !DIExpression()), !dbg !6480
  %94 = bitcast %struct.mallinfo* %info to i8*, !dbg !6481
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %94) #12, !dbg !6481
  call void @llvm.dbg.declare(metadata %struct.mallinfo* %info, metadata !6281, metadata !DIExpression()), !dbg !6482
  %95 = bitcast i8** %pos94 to i8*, !dbg !6483
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %95) #12, !dbg !6483
  call void @llvm.dbg.declare(metadata i8** %pos94, metadata !6282, metadata !DIExpression()), !dbg !6484
  %arraydecay95 = getelementptr inbounds [512 x i8], [512 x i8]* %temp93, i64 0, i64 0, !dbg !6485
  store i8* %arraydecay95, i8** %pos94, align 8, !dbg !6484, !tbaa !964
  %96 = bitcast %struct.mallinfo* %tmp to i8*, !dbg !6486
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %96) #12, !dbg !6486
  call void @mallinfo(%struct.mallinfo* sret align 4 %tmp) #12, !dbg !6486
  %97 = bitcast %struct.mallinfo* %info to i8*, !dbg !6486
  %98 = bitcast %struct.mallinfo* %tmp to i8*, !dbg !6486
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %97, i8* align 4 %98, i64 40, i1 false), !dbg !6486, !tbaa.struct !6487
  %99 = bitcast %struct.mallinfo* %tmp to i8*, !dbg !6486
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %99) #12, !dbg !6486
  %100 = load i8*, i8** %pos94, align 8, !dbg !6488, !tbaa !964
  %arena = getelementptr inbounds %struct.mallinfo, %struct.mallinfo* %info, i32 0, i32 0, !dbg !6489
  %101 = load i32, i32* %arena, align 4, !dbg !6489, !tbaa !6490
  %call96 = call i32 (i8*, i8*, ...) @sprintf(i8* %100, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.121, i64 0, i64 0), i32 %101) #12, !dbg !6492
  %102 = load i8*, i8** %pos94, align 8, !dbg !6493, !tbaa !964
  %idx.ext97 = sext i32 %call96 to i64, !dbg !6493
  %add.ptr98 = getelementptr inbounds i8, i8* %102, i64 %idx.ext97, !dbg !6493
  store i8* %add.ptr98, i8** %pos94, align 8, !dbg !6493, !tbaa !964
  %103 = load i8*, i8** %pos94, align 8, !dbg !6494, !tbaa !964
  %ordblks = getelementptr inbounds %struct.mallinfo, %struct.mallinfo* %info, i32 0, i32 1, !dbg !6495
  %104 = load i32, i32* %ordblks, align 4, !dbg !6495, !tbaa !6496
  %call99 = call i32 (i8*, i8*, ...) @sprintf(i8* %103, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.122, i64 0, i64 0), i32 %104) #12, !dbg !6497
  %105 = load i8*, i8** %pos94, align 8, !dbg !6498, !tbaa !964
  %idx.ext100 = sext i32 %call99 to i64, !dbg !6498
  %add.ptr101 = getelementptr inbounds i8, i8* %105, i64 %idx.ext100, !dbg !6498
  store i8* %add.ptr101, i8** %pos94, align 8, !dbg !6498, !tbaa !964
  %106 = load i8*, i8** %pos94, align 8, !dbg !6499, !tbaa !964
  %smblks = getelementptr inbounds %struct.mallinfo, %struct.mallinfo* %info, i32 0, i32 2, !dbg !6500
  %107 = load i32, i32* %smblks, align 4, !dbg !6500, !tbaa !6501
  %call102 = call i32 (i8*, i8*, ...) @sprintf(i8* %106, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.123, i64 0, i64 0), i32 %107) #12, !dbg !6502
  %108 = load i8*, i8** %pos94, align 8, !dbg !6503, !tbaa !964
  %idx.ext103 = sext i32 %call102 to i64, !dbg !6503
  %add.ptr104 = getelementptr inbounds i8, i8* %108, i64 %idx.ext103, !dbg !6503
  store i8* %add.ptr104, i8** %pos94, align 8, !dbg !6503, !tbaa !964
  %109 = load i8*, i8** %pos94, align 8, !dbg !6504, !tbaa !964
  %hblks = getelementptr inbounds %struct.mallinfo, %struct.mallinfo* %info, i32 0, i32 3, !dbg !6505
  %110 = load i32, i32* %hblks, align 4, !dbg !6505, !tbaa !6506
  %call105 = call i32 (i8*, i8*, ...) @sprintf(i8* %109, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.124, i64 0, i64 0), i32 %110) #12, !dbg !6507
  %111 = load i8*, i8** %pos94, align 8, !dbg !6508, !tbaa !964
  %idx.ext106 = sext i32 %call105 to i64, !dbg !6508
  %add.ptr107 = getelementptr inbounds i8, i8* %111, i64 %idx.ext106, !dbg !6508
  store i8* %add.ptr107, i8** %pos94, align 8, !dbg !6508, !tbaa !964
  %112 = load i8*, i8** %pos94, align 8, !dbg !6509, !tbaa !964
  %hblkhd = getelementptr inbounds %struct.mallinfo, %struct.mallinfo* %info, i32 0, i32 4, !dbg !6510
  %113 = load i32, i32* %hblkhd, align 4, !dbg !6510, !tbaa !6511
  %call108 = call i32 (i8*, i8*, ...) @sprintf(i8* %112, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.125, i64 0, i64 0), i32 %113) #12, !dbg !6512
  %114 = load i8*, i8** %pos94, align 8, !dbg !6513, !tbaa !964
  %idx.ext109 = sext i32 %call108 to i64, !dbg !6513
  %add.ptr110 = getelementptr inbounds i8, i8* %114, i64 %idx.ext109, !dbg !6513
  store i8* %add.ptr110, i8** %pos94, align 8, !dbg !6513, !tbaa !964
  %115 = load i8*, i8** %pos94, align 8, !dbg !6514, !tbaa !964
  %usmblks = getelementptr inbounds %struct.mallinfo, %struct.mallinfo* %info, i32 0, i32 5, !dbg !6515
  %116 = load i32, i32* %usmblks, align 4, !dbg !6515, !tbaa !6516
  %call111 = call i32 (i8*, i8*, ...) @sprintf(i8* %115, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.126, i64 0, i64 0), i32 %116) #12, !dbg !6517
  %117 = load i8*, i8** %pos94, align 8, !dbg !6518, !tbaa !964
  %idx.ext112 = sext i32 %call111 to i64, !dbg !6518
  %add.ptr113 = getelementptr inbounds i8, i8* %117, i64 %idx.ext112, !dbg !6518
  store i8* %add.ptr113, i8** %pos94, align 8, !dbg !6518, !tbaa !964
  %118 = load i8*, i8** %pos94, align 8, !dbg !6519, !tbaa !964
  %fsmblks = getelementptr inbounds %struct.mallinfo, %struct.mallinfo* %info, i32 0, i32 6, !dbg !6520
  %119 = load i32, i32* %fsmblks, align 4, !dbg !6520, !tbaa !6521
  %call114 = call i32 (i8*, i8*, ...) @sprintf(i8* %118, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.127, i64 0, i64 0), i32 %119) #12, !dbg !6522
  %120 = load i8*, i8** %pos94, align 8, !dbg !6523, !tbaa !964
  %idx.ext115 = sext i32 %call114 to i64, !dbg !6523
  %add.ptr116 = getelementptr inbounds i8, i8* %120, i64 %idx.ext115, !dbg !6523
  store i8* %add.ptr116, i8** %pos94, align 8, !dbg !6523, !tbaa !964
  %121 = load i8*, i8** %pos94, align 8, !dbg !6524, !tbaa !964
  %uordblks = getelementptr inbounds %struct.mallinfo, %struct.mallinfo* %info, i32 0, i32 7, !dbg !6525
  %122 = load i32, i32* %uordblks, align 4, !dbg !6525, !tbaa !6526
  %call117 = call i32 (i8*, i8*, ...) @sprintf(i8* %121, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.128, i64 0, i64 0), i32 %122) #12, !dbg !6527
  %123 = load i8*, i8** %pos94, align 8, !dbg !6528, !tbaa !964
  %idx.ext118 = sext i32 %call117 to i64, !dbg !6528
  %add.ptr119 = getelementptr inbounds i8, i8* %123, i64 %idx.ext118, !dbg !6528
  store i8* %add.ptr119, i8** %pos94, align 8, !dbg !6528, !tbaa !964
  %124 = load i8*, i8** %pos94, align 8, !dbg !6529, !tbaa !964
  %fordblks = getelementptr inbounds %struct.mallinfo, %struct.mallinfo* %info, i32 0, i32 8, !dbg !6530
  %125 = load i32, i32* %fordblks, align 4, !dbg !6530, !tbaa !6531
  %call120 = call i32 (i8*, i8*, ...) @sprintf(i8* %124, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.129, i64 0, i64 0), i32 %125) #12, !dbg !6532
  %126 = load i8*, i8** %pos94, align 8, !dbg !6533, !tbaa !964
  %idx.ext121 = sext i32 %call120 to i64, !dbg !6533
  %add.ptr122 = getelementptr inbounds i8, i8* %126, i64 %idx.ext121, !dbg !6533
  store i8* %add.ptr122, i8** %pos94, align 8, !dbg !6533, !tbaa !964
  %127 = load i8*, i8** %pos94, align 8, !dbg !6534, !tbaa !964
  %keepcost = getelementptr inbounds %struct.mallinfo, %struct.mallinfo* %info, i32 0, i32 9, !dbg !6535
  %128 = load i32, i32* %keepcost, align 4, !dbg !6535, !tbaa !6536
  %call123 = call i32 (i8*, i8*, ...) @sprintf(i8* %127, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.130, i64 0, i64 0), i32 %128) #12, !dbg !6537
  %129 = load i8*, i8** %pos94, align 8, !dbg !6538, !tbaa !964
  %idx.ext124 = sext i32 %call123 to i64, !dbg !6538
  %add.ptr125 = getelementptr inbounds i8, i8* %129, i64 %idx.ext124, !dbg !6538
  store i8* %add.ptr125, i8** %pos94, align 8, !dbg !6538, !tbaa !964
  %130 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6539, !tbaa !964
  %arraydecay126 = getelementptr inbounds [512 x i8], [512 x i8]* %temp93, i64 0, i64 0, !dbg !6540
  call void @out_string(%struct.conn* %130, i8* %arraydecay126), !dbg !6541
  store i32 1, i32* %cleanup.dest.slot, align 4
  %131 = bitcast i8** %pos94 to i8*, !dbg !6542
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %131) #12, !dbg !6542
  %132 = bitcast %struct.mallinfo* %info to i8*, !dbg !6542
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %132) #12, !dbg !6542
  %133 = bitcast [512 x i8]* %temp93 to i8*, !dbg !6542
  call void @llvm.lifetime.end.p0i8(i64 512, i8* %133) #12, !dbg !6542
  br label %cleanup226

if.end127:                                        ; preds = %if.end88
  %134 = load i8*, i8** %subcommand, align 8, !dbg !6543, !tbaa !964
  %call128 = call i32 @strcmp(i8* %134, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.131, i64 0, i64 0)) #15, !dbg !6544
  %cmp129 = icmp eq i32 %call128, 0, !dbg !6545
  br i1 %cmp129, label %if.then131, label %if.end167, !dbg !6546

if.then131:                                       ; preds = %if.end127
  %135 = bitcast i8** %wbuf to i8*, !dbg !6547
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %135) #12, !dbg !6547
  call void @llvm.dbg.declare(metadata i8** %wbuf, metadata !6283, metadata !DIExpression()), !dbg !6548
  %136 = bitcast i32* %wsize to i8*, !dbg !6549
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %136) #12, !dbg !6549
  call void @llvm.dbg.declare(metadata i32* %wsize, metadata !6286, metadata !DIExpression()), !dbg !6550
  store i32 8192, i32* %wsize, align 4, !dbg !6550, !tbaa !946
  %137 = bitcast i32* %fd to i8*, !dbg !6551
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %137) #12, !dbg !6551
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !6287, metadata !DIExpression()), !dbg !6552
  %138 = bitcast i32* %res to i8*, !dbg !6553
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %138) #12, !dbg !6553
  call void @llvm.dbg.declare(metadata i32* %res, metadata !6288, metadata !DIExpression()), !dbg !6554
  %139 = load i32, i32* %wsize, align 4, !dbg !6555, !tbaa !946
  %conv132 = sext i32 %139 to i64, !dbg !6555
  %call133 = call noalias i8* @malloc(i64 %conv132) #12, !dbg !6557
  store i8* %call133, i8** %wbuf, align 8, !dbg !6558, !tbaa !964
  %cmp134 = icmp eq i8* %call133, null, !dbg !6559
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !6560

if.then136:                                       ; preds = %if.then131
  %140 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6561, !tbaa !964
  call void @out_string(%struct.conn* %140, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)), !dbg !6563
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6564

if.end137:                                        ; preds = %if.then131
  %call138 = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.132, i64 0, i64 0), i32 0), !dbg !6565
  store i32 %call138, i32* %fd, align 4, !dbg !6566, !tbaa !946
  %141 = load i32, i32* %fd, align 4, !dbg !6567, !tbaa !946
  %cmp139 = icmp eq i32 %141, -1, !dbg !6569
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !6570

if.then141:                                       ; preds = %if.end137
  %142 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6571, !tbaa !964
  call void @out_string(%struct.conn* %142, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.133, i64 0, i64 0)), !dbg !6573
  %143 = load i8*, i8** %wbuf, align 8, !dbg !6574, !tbaa !964
  call void @free(i8* %143) #12, !dbg !6575
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6576

if.end142:                                        ; preds = %if.end137
  %144 = load i32, i32* %fd, align 4, !dbg !6577, !tbaa !946
  %145 = load i8*, i8** %wbuf, align 8, !dbg !6578, !tbaa !964
  %146 = load i32, i32* %wsize, align 4, !dbg !6579, !tbaa !946
  %sub143 = sub nsw i32 %146, 6, !dbg !6580
  %conv144 = sext i32 %sub143 to i64, !dbg !6579
  %call145 = call i64 @read(i32 %144, i8* %145, i64 %conv144), !dbg !6581
  %conv146 = trunc i64 %call145 to i32, !dbg !6581
  store i32 %conv146, i32* %res, align 4, !dbg !6582, !tbaa !946
  %147 = load i32, i32* %res, align 4, !dbg !6583, !tbaa !946
  %148 = load i32, i32* %wsize, align 4, !dbg !6585, !tbaa !946
  %sub147 = sub nsw i32 %148, 6, !dbg !6586
  %cmp148 = icmp eq i32 %147, %sub147, !dbg !6587
  br i1 %cmp148, label %if.then150, label %if.end152, !dbg !6588

if.then150:                                       ; preds = %if.end142
  %149 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6589, !tbaa !964
  call void @out_string(%struct.conn* %149, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i64 0, i64 0)), !dbg !6591
  %150 = load i8*, i8** %wbuf, align 8, !dbg !6592, !tbaa !964
  call void @free(i8* %150) #12, !dbg !6593
  %151 = load i32, i32* %fd, align 4, !dbg !6594, !tbaa !946
  %call151 = call i32 @close(i32 %151), !dbg !6595
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6596

if.end152:                                        ; preds = %if.end142
  %152 = load i32, i32* %res, align 4, !dbg !6597, !tbaa !946
  %cmp153 = icmp eq i32 %152, 0, !dbg !6599
  br i1 %cmp153, label %if.then157, label %lor.lhs.false, !dbg !6600

lor.lhs.false:                                    ; preds = %if.end152
  %153 = load i32, i32* %res, align 4, !dbg !6601, !tbaa !946
  %cmp155 = icmp eq i32 %153, -1, !dbg !6602
  br i1 %cmp155, label %if.then157, label %if.end159, !dbg !6603

if.then157:                                       ; preds = %lor.lhs.false, %if.end152
  %154 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6604, !tbaa !964
  call void @out_string(%struct.conn* %154, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.135, i64 0, i64 0)), !dbg !6606
  %155 = load i8*, i8** %wbuf, align 8, !dbg !6607, !tbaa !964
  call void @free(i8* %155) #12, !dbg !6608
  %156 = load i32, i32* %fd, align 4, !dbg !6609, !tbaa !946
  %call158 = call i32 @close(i32 %156), !dbg !6610
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6611

if.end159:                                        ; preds = %lor.lhs.false
  %157 = load i8*, i8** %wbuf, align 8, !dbg !6612, !tbaa !964
  %158 = load i32, i32* %res, align 4, !dbg !6613, !tbaa !946
  %idx.ext160 = sext i32 %158 to i64, !dbg !6614
  %add.ptr161 = getelementptr inbounds i8, i8* %157, i64 %idx.ext160, !dbg !6614
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr161, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0), i64 5, i1 false), !dbg !6615
  %159 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6616, !tbaa !964
  %160 = load i8*, i8** %wbuf, align 8, !dbg !6617, !tbaa !964
  %161 = load i32, i32* %res, align 4, !dbg !6618, !tbaa !946
  %add162 = add nsw i32 %161, 5, !dbg !6619
  call void @write_and_free(%struct.conn* %159, i8* %160, i32 %add162), !dbg !6620
  %162 = load i32, i32* %fd, align 4, !dbg !6621, !tbaa !946
  %call163 = call i32 @close(i32 %162), !dbg !6622
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6623

cleanup:                                          ; preds = %if.end159, %if.then157, %if.then150, %if.then141, %if.then136
  %163 = bitcast i32* %res to i8*, !dbg !6624
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %163) #12, !dbg !6624
  %164 = bitcast i32* %fd to i8*, !dbg !6624
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %164) #12, !dbg !6624
  %165 = bitcast i32* %wsize to i8*, !dbg !6624
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %165) #12, !dbg !6624
  %166 = bitcast i8** %wbuf to i8*, !dbg !6624
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %166) #12, !dbg !6624
  br label %cleanup226

if.end167:                                        ; preds = %if.end127
  %167 = load i8*, i8** %subcommand, align 8, !dbg !6625, !tbaa !964
  %call168 = call i32 @strcmp(i8* %167, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.136, i64 0, i64 0)) #15, !dbg !6626
  %cmp169 = icmp eq i32 %call168, 0, !dbg !6627
  br i1 %cmp169, label %if.then171, label %if.end194, !dbg !6628

if.then171:                                       ; preds = %if.end167
  %168 = bitcast i8** %buf to i8*, !dbg !6629
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %168) #12, !dbg !6629
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6289, metadata !DIExpression()), !dbg !6630
  %169 = bitcast i32* %bytes to i8*, !dbg !6631
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %169) #12, !dbg !6631
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !6292, metadata !DIExpression()), !dbg !6632
  %170 = bitcast i32* %id to i8*, !dbg !6631
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %170) #12, !dbg !6631
  call void @llvm.dbg.declare(metadata i32* %id, metadata !6293, metadata !DIExpression()), !dbg !6633
  %171 = bitcast i32* %limit to i8*, !dbg !6631
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %171) #12, !dbg !6631
  call void @llvm.dbg.declare(metadata i32* %limit, metadata !6294, metadata !DIExpression()), !dbg !6634
  store i32 0, i32* %limit, align 4, !dbg !6634, !tbaa !946
  %172 = load i64, i64* %ntokens.addr, align 8, !dbg !6635, !tbaa !914
  %cmp172 = icmp ult i64 %172, 5, !dbg !6637
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !6638

if.then174:                                       ; preds = %if.then171
  %173 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6639, !tbaa !964
  call void @out_string(%struct.conn* %173, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.94, i64 0, i64 0)), !dbg !6641
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup190, !dbg !6642

if.end175:                                        ; preds = %if.then171
  %174 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !6643, !tbaa !964
  %arrayidx176 = getelementptr inbounds %struct.token_s, %struct.token_s* %174, i64 2, !dbg !6643
  %value177 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx176, i32 0, i32 0, !dbg !6644
  %175 = load i8*, i8** %value177, align 8, !dbg !6644, !tbaa !4776
  %call178 = call i64 @strtoul(i8* %175, i8** null, i32 10) #12, !dbg !6645
  %conv179 = trunc i64 %call178 to i32, !dbg !6645
  store i32 %conv179, i32* %id, align 4, !dbg !6646, !tbaa !946
  %176 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !6647, !tbaa !964
  %arrayidx180 = getelementptr inbounds %struct.token_s, %struct.token_s* %176, i64 3, !dbg !6647
  %value181 = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx180, i32 0, i32 0, !dbg !6648
  %177 = load i8*, i8** %value181, align 8, !dbg !6648, !tbaa !4776
  %call182 = call i64 @strtoul(i8* %177, i8** null, i32 10) #12, !dbg !6649
  %conv183 = trunc i64 %call182 to i32, !dbg !6649
  store i32 %conv183, i32* %limit, align 4, !dbg !6650, !tbaa !946
  %call184 = call i32* @__errno_location() #14, !dbg !6651
  %178 = load i32, i32* %call184, align 4, !dbg !6651, !tbaa !946
  %cmp185 = icmp eq i32 %178, 34, !dbg !6653
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !6654

if.then187:                                       ; preds = %if.end175
  %179 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6655, !tbaa !964
  call void @out_string(%struct.conn* %179, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.72, i64 0, i64 0)), !dbg !6657
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup190, !dbg !6658

if.end188:                                        ; preds = %if.end175
  %180 = load i32, i32* %id, align 4, !dbg !6659, !tbaa !946
  %181 = load i32, i32* %limit, align 4, !dbg !6659, !tbaa !946
  %call189 = call i8* @mt_item_cachedump(i32 %180, i32 %181, i32* %bytes), !dbg !6659
  store i8* %call189, i8** %buf, align 8, !dbg !6660, !tbaa !964
  %182 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6661, !tbaa !964
  %183 = load i8*, i8** %buf, align 8, !dbg !6662, !tbaa !964
  %184 = load i32, i32* %bytes, align 4, !dbg !6663, !tbaa !946
  call void @write_and_free(%struct.conn* %182, i8* %183, i32 %184), !dbg !6664
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup190, !dbg !6665

cleanup190:                                       ; preds = %if.end188, %if.then187, %if.then174
  %185 = bitcast i32* %limit to i8*, !dbg !6666
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %185) #12, !dbg !6666
  %186 = bitcast i32* %id to i8*, !dbg !6666
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %186) #12, !dbg !6666
  %187 = bitcast i32* %bytes to i8*, !dbg !6666
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %187) #12, !dbg !6666
  %188 = bitcast i8** %buf to i8*, !dbg !6666
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %188) #12, !dbg !6666
  br label %cleanup226

if.end194:                                        ; preds = %if.end167
  %189 = load i8*, i8** %subcommand, align 8, !dbg !6667, !tbaa !964
  %call195 = call i32 @strcmp(i8* %189, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0)) #15, !dbg !6668
  %cmp196 = icmp eq i32 %call195, 0, !dbg !6669
  br i1 %cmp196, label %if.then198, label %if.end200, !dbg !6670

if.then198:                                       ; preds = %if.end194
  %190 = bitcast i32* %bytes199 to i8*, !dbg !6671
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %190) #12, !dbg !6671
  call void @llvm.dbg.declare(metadata i32* %bytes199, metadata !6295, metadata !DIExpression()), !dbg !6672
  store i32 0, i32* %bytes199, align 4, !dbg !6672, !tbaa !946
  call void @__assert_fail(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1173, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.process_stat, i64 0, i64 0)) #13, !dbg !6673
  unreachable, !dbg !6673

if.end200:                                        ; preds = %if.end194
  %191 = load i8*, i8** %subcommand, align 8, !dbg !6676, !tbaa !964
  %call201 = call i32 @strcmp(i8* %191, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.138, i64 0, i64 0)) #15, !dbg !6677
  %cmp202 = icmp eq i32 %call201, 0, !dbg !6678
  br i1 %cmp202, label %if.then204, label %if.end210, !dbg !6679

if.then204:                                       ; preds = %if.end200
  %192 = bitcast i32* %bytes205 to i8*, !dbg !6680
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %192) #12, !dbg !6680
  call void @llvm.dbg.declare(metadata i32* %bytes205, metadata !6298, metadata !DIExpression()), !dbg !6681
  store i32 0, i32* %bytes205, align 4, !dbg !6681, !tbaa !946
  %193 = bitcast i8** %buf206 to i8*, !dbg !6682
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %193) #12, !dbg !6682
  call void @llvm.dbg.declare(metadata i8** %buf206, metadata !6301, metadata !DIExpression()), !dbg !6683
  %call207 = call i8* @mt_item_stats(i32* %bytes205), !dbg !6684
  store i8* %call207, i8** %buf206, align 8, !dbg !6683, !tbaa !964
  %194 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6685, !tbaa !964
  %195 = load i8*, i8** %buf206, align 8, !dbg !6686, !tbaa !964
  %196 = load i32, i32* %bytes205, align 4, !dbg !6687, !tbaa !946
  call void @write_and_free(%struct.conn* %194, i8* %195, i32 %196), !dbg !6688
  store i32 1, i32* %cleanup.dest.slot, align 4
  %197 = bitcast i8** %buf206 to i8*, !dbg !6689
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %197) #12, !dbg !6689
  %198 = bitcast i32* %bytes205 to i8*, !dbg !6689
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %198) #12, !dbg !6689
  br label %cleanup226

if.end210:                                        ; preds = %if.end200
  %199 = load i8*, i8** %subcommand, align 8, !dbg !6690, !tbaa !964
  %call211 = call i32 @strcmp(i8* %199, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.139, i64 0, i64 0)) #15, !dbg !6692
  %cmp212 = icmp eq i32 %call211, 0, !dbg !6693
  br i1 %cmp212, label %if.then214, label %if.end215, !dbg !6694

if.then214:                                       ; preds = %if.end210
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1187, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__.process_stat, i64 0, i64 0)) #13, !dbg !6695
  unreachable, !dbg !6695

if.end215:                                        ; preds = %if.end210
  %200 = load i8*, i8** %subcommand, align 8, !dbg !6699, !tbaa !964
  %call216 = call i32 @strcmp(i8* %200, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.141, i64 0, i64 0)) #15, !dbg !6700
  %cmp217 = icmp eq i32 %call216, 0, !dbg !6701
  br i1 %cmp217, label %if.then219, label %if.end225, !dbg !6702

if.then219:                                       ; preds = %if.end215
  %201 = bitcast i32* %bytes220 to i8*, !dbg !6703
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %201) #12, !dbg !6703
  call void @llvm.dbg.declare(metadata i32* %bytes220, metadata !6302, metadata !DIExpression()), !dbg !6704
  store i32 0, i32* %bytes220, align 4, !dbg !6704, !tbaa !946
  %202 = bitcast i8** %buf221 to i8*, !dbg !6705
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %202) #12, !dbg !6705
  call void @llvm.dbg.declare(metadata i8** %buf221, metadata !6305, metadata !DIExpression()), !dbg !6706
  %call222 = call i8* @mt_item_stats_sizes(i32* %bytes220), !dbg !6707
  store i8* %call222, i8** %buf221, align 8, !dbg !6706, !tbaa !964
  %203 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6708, !tbaa !964
  %204 = load i8*, i8** %buf221, align 8, !dbg !6709, !tbaa !964
  %205 = load i32, i32* %bytes220, align 4, !dbg !6710, !tbaa !946
  call void @write_and_free(%struct.conn* %203, i8* %204, i32 %205), !dbg !6711
  store i32 1, i32* %cleanup.dest.slot, align 4
  %206 = bitcast i8** %buf221 to i8*, !dbg !6712
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %206) #12, !dbg !6712
  %207 = bitcast i32* %bytes220 to i8*, !dbg !6712
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %207) #12, !dbg !6712
  br label %cleanup226

if.end225:                                        ; preds = %if.end215
  %208 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6713, !tbaa !964
  call void @out_string(%struct.conn* %208, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.80, i64 0, i64 0)), !dbg !6714
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !6715
  br label %cleanup226, !dbg !6715

cleanup226:                                       ; preds = %if.end225, %if.then219, %if.then204, %cleanup190, %cleanup, %if.then92, %if.then6, %if.then2
  %209 = bitcast i8** %subcommand to i8*, !dbg !6715
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %209) #12, !dbg !6715
  %210 = bitcast i8** %command to i8*, !dbg !6715
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %210) #12, !dbg !6715
  %211 = bitcast i32* %now to i8*, !dbg !6715
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %211) #12, !dbg !6715
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup226, %cleanup226
  ret void, !dbg !6715

unreachable:                                      ; preds = %cleanup226
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @set_current_time() #0 !dbg !6716 {
entry:
  %call = call i64 @time(i64* null) #12, !dbg !6717
  %0 = load i64, i64* getelementptr inbounds (%struct.stats, %struct.stats* @stats, i32 0, i32 11), align 8, !dbg !6718, !tbaa !932
  %sub = sub nsw i64 %call, %0, !dbg !6719
  %conv = trunc i64 %sub to i32, !dbg !6720
  store volatile i32 %conv, i32* @current_time, align 4, !dbg !6721, !tbaa !946
  ret void, !dbg !6722
}

declare !dbg !633 dso_local void @mt_item_flush_expired() #4

; Function Attrs: nounwind uwtable
define internal void @process_verbosity_command(%struct.conn* %c, %struct.token_s* %tokens, i64 %ntokens) #0 !dbg !6723 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %tokens.addr = alloca %struct.token_s*, align 8
  %ntokens.addr = alloca i64, align 8
  %level = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !6725, metadata !DIExpression()), !dbg !6729
  store %struct.token_s* %tokens, %struct.token_s** %tokens.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.token_s** %tokens.addr, metadata !6726, metadata !DIExpression()), !dbg !6730
  store i64 %ntokens, i64* %ntokens.addr, align 8, !tbaa !914
  call void @llvm.dbg.declare(metadata i64* %ntokens.addr, metadata !6727, metadata !DIExpression()), !dbg !6731
  %0 = bitcast i32* %level to i8*, !dbg !6732
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !6732
  call void @llvm.dbg.declare(metadata i32* %level, metadata !6728, metadata !DIExpression()), !dbg !6733
  %1 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6734, !tbaa !964
  %cmp = icmp ne %struct.conn* %1, null, !dbg !6734
  br i1 %cmp, label %if.then, label %if.else, !dbg !6737

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6737

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 1656, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__.process_verbosity_command, i64 0, i64 0)) #13, !dbg !6734
  unreachable, !dbg !6734

if.end:                                           ; preds = %if.then
  %2 = load %struct.token_s*, %struct.token_s** %tokens.addr, align 8, !dbg !6738, !tbaa !964
  %arrayidx = getelementptr inbounds %struct.token_s, %struct.token_s* %2, i64 1, !dbg !6738
  %value = getelementptr inbounds %struct.token_s, %struct.token_s* %arrayidx, i32 0, i32 0, !dbg !6739
  %3 = load i8*, i8** %value, align 8, !dbg !6739, !tbaa !4776
  %call = call i64 @strtoul(i8* %3, i8** null, i32 10) #12, !dbg !6740
  %conv = trunc i64 %call to i32, !dbg !6740
  store i32 %conv, i32* %level, align 4, !dbg !6741, !tbaa !946
  %4 = load i32, i32* %level, align 4, !dbg !6742, !tbaa !946
  %cmp1 = icmp ugt i32 %4, 2, !dbg !6743
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !6742

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !6742

cond.false:                                       ; preds = %if.end
  %5 = load i32, i32* %level, align 4, !dbg !6744, !tbaa !946
  br label %cond.end, !dbg !6742

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 2, %cond.true ], [ %5, %cond.false ], !dbg !6742
  store i32 %cond, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !6745, !tbaa !1246
  %6 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6746, !tbaa !964
  call void @out_string(%struct.conn* %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i64 0, i64 0)), !dbg !6747
  %7 = bitcast i32* %level to i8*, !dbg !6748
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %7) #12, !dbg !6748
  ret void, !dbg !6748
}

declare !dbg !634 dso_local %struct._stritem* @item_get(i8* %0, i64 %1) #4

declare !dbg !635 dso_local i8* @mt_suffix_from_freelist() #4

declare !dbg !638 dso_local void @mt_item_update(%struct._stritem* %0) #4

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8* %0, i8** %1, i32 %2) #3

declare !dbg !639 dso_local %struct._stritem* @mt_item_alloc(i8* %0, i64 %1, i32 %2, i32 %3, i32 %4) #4

declare !dbg !640 dso_local zeroext i1 @item_size_ok(i64 %0, i32 %1, i32 %2) #4

; Function Attrs: nounwind
declare dso_local i64 @strtoll(i8* %0, i8** %1, i32 %2) #3

declare !dbg !643 dso_local i8* @mt_add_delta(%struct._stritem* %0, i32 %1, i64 %2, i8* %3) #4

declare !dbg !646 dso_local void @mt_item_unlink(%struct._stritem* %0) #4

declare !dbg !647 dso_local i8* @mt_defer_delete(%struct._stritem* %0, i64 %1) #4

; Function Attrs: nounwind
declare !dbg !650 dso_local i32 @getrusage(i32 %0, %struct.rusage* %1) #3

; Function Attrs: nounwind
declare !dbg !730 dso_local void @mallinfo(%struct.mallinfo* sret align 4 %0) #3

declare !dbg !745 dso_local i32 @open(i8* %0, i32 %1, ...) #4

; Function Attrs: nounwind uwtable
define internal void @write_and_free(%struct.conn* %c, i8* %buf, i32 %bytes) #0 !dbg !6749 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %buf.addr = alloca i8*, align 8
  %bytes.addr = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !6753, metadata !DIExpression()), !dbg !6756
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6754, metadata !DIExpression()), !dbg !6757
  store i32 %bytes, i32* %bytes.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !6755, metadata !DIExpression()), !dbg !6758
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !6759, !tbaa !964
  %tobool = icmp ne i8* %0, null, !dbg !6759
  br i1 %tobool, label %if.then, label %if.else, !dbg !6761

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !6762, !tbaa !964
  %2 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6764, !tbaa !964
  %write_and_free = getelementptr inbounds %struct.conn, %struct.conn* %2, i32 0, i32 14, !dbg !6765
  store i8* %1, i8** %write_and_free, align 8, !dbg !6766, !tbaa !1353
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !6767, !tbaa !964
  %4 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6768, !tbaa !964
  %wcurr = getelementptr inbounds %struct.conn, %struct.conn* %4, i32 0, i32 10, !dbg !6769
  store i8* %3, i8** %wcurr, align 8, !dbg !6770, !tbaa !1303
  %5 = load i32, i32* %bytes.addr, align 4, !dbg !6771, !tbaa !946
  %6 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6772, !tbaa !964
  %wbytes = getelementptr inbounds %struct.conn, %struct.conn* %6, i32 0, i32 12, !dbg !6773
  store i32 %5, i32* %wbytes, align 4, !dbg !6774, !tbaa !1293
  %7 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6775, !tbaa !964
  call void @conn_set_state(%struct.conn* %7, i32 2), !dbg !6776
  %8 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6777, !tbaa !964
  %write_and_go = getelementptr inbounds %struct.conn, %struct.conn* %8, i32 0, i32 13, !dbg !6778
  store i32 1, i32* %write_and_go, align 8, !dbg !6779, !tbaa !1349
  br label %if.end, !dbg !6780

if.else:                                          ; preds = %entry
  %9 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6781, !tbaa !964
  call void @out_string(%struct.conn* %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)), !dbg !6783
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6784
}

declare !dbg !748 dso_local i8* @mt_item_cachedump(i32 %0, i32 %1, i32* %2) #4

declare !dbg !751 dso_local i8* @mt_item_stats(i32* %0) #4

declare !dbg !755 dso_local i8* @mt_item_stats_sizes(i32* %0) #4

; Function Attrs: nounwind
declare !dbg !756 dso_local i64 @time(i64* %0) #3

declare !dbg !761 dso_local i64 @recvfrom(i32 %0, i8* %1, i64 %2, i32 %3, %struct.sockaddr* %4, i32* %5) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture %0, i8* nocapture readonly %1, i64 %2, i1 immarg %3) #2

; Function Attrs: nounwind uwtable
define internal void @conn_shrink(%struct.conn* %c) #0 !dbg !6785 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %newbuf = alloca i8*, align 8
  %newbuf24 = alloca %struct._stritem**, align 8
  %newbuf35 = alloca %struct.msghdr*, align 8
  %newbuf46 = alloca %struct.iovec*, align 8
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !6787, metadata !DIExpression()), !dbg !6800
  %0 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6801, !tbaa !964
  %cmp = icmp ne %struct.conn* %0, null, !dbg !6801
  br i1 %cmp, label %if.then, label %if.else, !dbg !6804

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6804

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 499, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__PRETTY_FUNCTION__.conn_shrink, i64 0, i64 0)) #13, !dbg !6801
  unreachable, !dbg !6801

if.end:                                           ; preds = %if.then
  %1 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6805, !tbaa !964
  %udp = getelementptr inbounds %struct.conn, %struct.conn* %1, i32 0, i32 36, !dbg !6807
  %2 = load i8, i8* %udp, align 4, !dbg !6807, !tbaa !1280, !range !1262
  %tobool = trunc i8 %2 to i1, !dbg !6807
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !6808

if.then1:                                         ; preds = %if.end
  br label %if.end53, !dbg !6809

if.end2:                                          ; preds = %if.end
  %3 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6810, !tbaa !964
  %rsize = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 7, !dbg !6811
  %4 = load i32, i32* %rsize, align 8, !dbg !6811, !tbaa !1090
  %cmp3 = icmp sgt i32 %4, 8192, !dbg !6812
  br i1 %cmp3, label %land.lhs.true, label %if.end20, !dbg !6813

land.lhs.true:                                    ; preds = %if.end2
  %5 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6814, !tbaa !964
  %rbytes = getelementptr inbounds %struct.conn, %struct.conn* %5, i32 0, i32 8, !dbg !6815
  %6 = load i32, i32* %rbytes, align 4, !dbg !6815, !tbaa !1297
  %cmp4 = icmp slt i32 %6, 2048, !dbg !6816
  br i1 %cmp4, label %if.then5, label %if.end20, !dbg !6817

if.then5:                                         ; preds = %land.lhs.true
  %7 = bitcast i8** %newbuf to i8*, !dbg !6818
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #12, !dbg !6818
  call void @llvm.dbg.declare(metadata i8** %newbuf, metadata !6788, metadata !DIExpression()), !dbg !6819
  %8 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6820, !tbaa !964
  %rcurr = getelementptr inbounds %struct.conn, %struct.conn* %8, i32 0, i32 6, !dbg !6822
  %9 = load i8*, i8** %rcurr, align 8, !dbg !6822, !tbaa !1309
  %10 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6823, !tbaa !964
  %rbuf = getelementptr inbounds %struct.conn, %struct.conn* %10, i32 0, i32 5, !dbg !6824
  %11 = load i8*, i8** %rbuf, align 8, !dbg !6824, !tbaa !1065
  %cmp6 = icmp ne i8* %9, %11, !dbg !6825
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !6826

if.then7:                                         ; preds = %if.then5
  %12 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6827, !tbaa !964
  %rbuf8 = getelementptr inbounds %struct.conn, %struct.conn* %12, i32 0, i32 5, !dbg !6828
  %13 = load i8*, i8** %rbuf8, align 8, !dbg !6828, !tbaa !1065
  %14 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6829, !tbaa !964
  %rcurr9 = getelementptr inbounds %struct.conn, %struct.conn* %14, i32 0, i32 6, !dbg !6830
  %15 = load i8*, i8** %rcurr9, align 8, !dbg !6830, !tbaa !1309
  %16 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6831, !tbaa !964
  %rbytes10 = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 8, !dbg !6832
  %17 = load i32, i32* %rbytes10, align 4, !dbg !6832, !tbaa !1297
  %conv = sext i32 %17 to i64, !dbg !6833
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %15, i64 %conv, i1 false), !dbg !6834
  br label %if.end11, !dbg !6834

if.end11:                                         ; preds = %if.then7, %if.then5
  %18 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6835, !tbaa !964
  %rbuf12 = getelementptr inbounds %struct.conn, %struct.conn* %18, i32 0, i32 5, !dbg !6836
  %19 = load i8*, i8** %rbuf12, align 8, !dbg !6836, !tbaa !1065
  %call = call i8* @realloc(i8* %19, i64 2048) #12, !dbg !6837
  store i8* %call, i8** %newbuf, align 8, !dbg !6838, !tbaa !964
  %20 = load i8*, i8** %newbuf, align 8, !dbg !6839, !tbaa !964
  %tobool13 = icmp ne i8* %20, null, !dbg !6839
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !6841

if.then14:                                        ; preds = %if.end11
  %21 = load i8*, i8** %newbuf, align 8, !dbg !6842, !tbaa !964
  %22 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6844, !tbaa !964
  %rbuf15 = getelementptr inbounds %struct.conn, %struct.conn* %22, i32 0, i32 5, !dbg !6845
  store i8* %21, i8** %rbuf15, align 8, !dbg !6846, !tbaa !1065
  %23 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6847, !tbaa !964
  %rsize16 = getelementptr inbounds %struct.conn, %struct.conn* %23, i32 0, i32 7, !dbg !6848
  store i32 2048, i32* %rsize16, align 8, !dbg !6849, !tbaa !1090
  br label %if.end17, !dbg !6850

if.end17:                                         ; preds = %if.then14, %if.end11
  %24 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6851, !tbaa !964
  %rbuf18 = getelementptr inbounds %struct.conn, %struct.conn* %24, i32 0, i32 5, !dbg !6852
  %25 = load i8*, i8** %rbuf18, align 8, !dbg !6852, !tbaa !1065
  %26 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6853, !tbaa !964
  %rcurr19 = getelementptr inbounds %struct.conn, %struct.conn* %26, i32 0, i32 6, !dbg !6854
  store i8* %25, i8** %rcurr19, align 8, !dbg !6855, !tbaa !1309
  %27 = bitcast i8** %newbuf to i8*, !dbg !6856
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #12, !dbg !6856
  br label %if.end20, !dbg !6857

if.end20:                                         ; preds = %if.end17, %land.lhs.true, %if.end2
  %28 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6858, !tbaa !964
  %isize = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 29, !dbg !6859
  %29 = load i32, i32* %isize, align 8, !dbg !6859, !tbaa !1098
  %cmp21 = icmp sgt i32 %29, 400, !dbg !6860
  br i1 %cmp21, label %if.then23, label %if.end31, !dbg !6861

if.then23:                                        ; preds = %if.end20
  %30 = bitcast %struct._stritem*** %newbuf24 to i8*, !dbg !6862
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #12, !dbg !6862
  call void @llvm.dbg.declare(metadata %struct._stritem*** %newbuf24, metadata !6791, metadata !DIExpression()), !dbg !6863
  %31 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6864, !tbaa !964
  %ilist = getelementptr inbounds %struct.conn, %struct.conn* %31, i32 0, i32 28, !dbg !6865
  %32 = load %struct._stritem**, %struct._stritem*** %ilist, align 8, !dbg !6865, !tbaa !1069
  %33 = bitcast %struct._stritem** %32 to i8*, !dbg !6866
  %call25 = call i8* @realloc(i8* %33, i64 1600) #12, !dbg !6867
  %34 = bitcast i8* %call25 to %struct._stritem**, !dbg !6868
  store %struct._stritem** %34, %struct._stritem*** %newbuf24, align 8, !dbg !6863, !tbaa !964
  %35 = load %struct._stritem**, %struct._stritem*** %newbuf24, align 8, !dbg !6869, !tbaa !964
  %tobool26 = icmp ne %struct._stritem** %35, null, !dbg !6869
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !6871

if.then27:                                        ; preds = %if.then23
  %36 = load %struct._stritem**, %struct._stritem*** %newbuf24, align 8, !dbg !6872, !tbaa !964
  %37 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6874, !tbaa !964
  %ilist28 = getelementptr inbounds %struct.conn, %struct.conn* %37, i32 0, i32 28, !dbg !6875
  store %struct._stritem** %36, %struct._stritem*** %ilist28, align 8, !dbg !6876, !tbaa !1069
  %38 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6877, !tbaa !964
  %isize29 = getelementptr inbounds %struct.conn, %struct.conn* %38, i32 0, i32 29, !dbg !6878
  store i32 200, i32* %isize29, align 8, !dbg !6879, !tbaa !1098
  br label %if.end30, !dbg !6880

if.end30:                                         ; preds = %if.then27, %if.then23
  %39 = bitcast %struct._stritem*** %newbuf24 to i8*, !dbg !6881
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #12, !dbg !6881
  br label %if.end31, !dbg !6882

if.end31:                                         ; preds = %if.end30, %if.end20
  %40 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6883, !tbaa !964
  %msgsize = getelementptr inbounds %struct.conn, %struct.conn* %40, i32 0, i32 24, !dbg !6884
  %41 = load i32, i32* %msgsize, align 8, !dbg !6884, !tbaa !1110
  %cmp32 = icmp sgt i32 %41, 100, !dbg !6885
  br i1 %cmp32, label %if.then34, label %if.end42, !dbg !6886

if.then34:                                        ; preds = %if.end31
  %42 = bitcast %struct.msghdr** %newbuf35 to i8*, !dbg !6887
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #12, !dbg !6887
  call void @llvm.dbg.declare(metadata %struct.msghdr** %newbuf35, metadata !6794, metadata !DIExpression()), !dbg !6888
  %43 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6889, !tbaa !964
  %msglist = getelementptr inbounds %struct.conn, %struct.conn* %43, i32 0, i32 23, !dbg !6890
  %44 = load %struct.msghdr*, %struct.msghdr** %msglist, align 8, !dbg !6890, !tbaa !1081
  %45 = bitcast %struct.msghdr* %44 to i8*, !dbg !6891
  %call36 = call i8* @realloc(i8* %45, i64 560) #12, !dbg !6892
  %46 = bitcast i8* %call36 to %struct.msghdr*, !dbg !6893
  store %struct.msghdr* %46, %struct.msghdr** %newbuf35, align 8, !dbg !6888, !tbaa !964
  %47 = load %struct.msghdr*, %struct.msghdr** %newbuf35, align 8, !dbg !6894, !tbaa !964
  %tobool37 = icmp ne %struct.msghdr* %47, null, !dbg !6894
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !6896

if.then38:                                        ; preds = %if.then34
  %48 = load %struct.msghdr*, %struct.msghdr** %newbuf35, align 8, !dbg !6897, !tbaa !964
  %49 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6899, !tbaa !964
  %msglist39 = getelementptr inbounds %struct.conn, %struct.conn* %49, i32 0, i32 23, !dbg !6900
  store %struct.msghdr* %48, %struct.msghdr** %msglist39, align 8, !dbg !6901, !tbaa !1081
  %50 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6902, !tbaa !964
  %msgsize40 = getelementptr inbounds %struct.conn, %struct.conn* %50, i32 0, i32 24, !dbg !6903
  store i32 10, i32* %msgsize40, align 8, !dbg !6904, !tbaa !1110
  br label %if.end41, !dbg !6905

if.end41:                                         ; preds = %if.then38, %if.then34
  %51 = bitcast %struct.msghdr** %newbuf35 to i8*, !dbg !6906
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #12, !dbg !6906
  br label %if.end42, !dbg !6907

if.end42:                                         ; preds = %if.end41, %if.end31
  %52 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6908, !tbaa !964
  %iovsize = getelementptr inbounds %struct.conn, %struct.conn* %52, i32 0, i32 21, !dbg !6909
  %53 = load i32, i32* %iovsize, align 8, !dbg !6909, !tbaa !1106
  %cmp43 = icmp sgt i32 %53, 600, !dbg !6910
  br i1 %cmp43, label %if.then45, label %if.end53, !dbg !6911

if.then45:                                        ; preds = %if.end42
  %54 = bitcast %struct.iovec** %newbuf46 to i8*, !dbg !6912
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #12, !dbg !6912
  call void @llvm.dbg.declare(metadata %struct.iovec** %newbuf46, metadata !6797, metadata !DIExpression()), !dbg !6913
  %55 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6914, !tbaa !964
  %iov = getelementptr inbounds %struct.conn, %struct.conn* %55, i32 0, i32 20, !dbg !6915
  %56 = load %struct.iovec*, %struct.iovec** %iov, align 8, !dbg !6915, !tbaa !1077
  %57 = bitcast %struct.iovec* %56 to i8*, !dbg !6916
  %call47 = call i8* @realloc(i8* %57, i64 6400) #12, !dbg !6917
  %58 = bitcast i8* %call47 to %struct.iovec*, !dbg !6918
  store %struct.iovec* %58, %struct.iovec** %newbuf46, align 8, !dbg !6913, !tbaa !964
  %59 = load %struct.iovec*, %struct.iovec** %newbuf46, align 8, !dbg !6919, !tbaa !964
  %tobool48 = icmp ne %struct.iovec* %59, null, !dbg !6919
  br i1 %tobool48, label %if.then49, label %if.end52, !dbg !6921

if.then49:                                        ; preds = %if.then45
  %60 = load %struct.iovec*, %struct.iovec** %newbuf46, align 8, !dbg !6922, !tbaa !964
  %61 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6924, !tbaa !964
  %iov50 = getelementptr inbounds %struct.conn, %struct.conn* %61, i32 0, i32 20, !dbg !6925
  store %struct.iovec* %60, %struct.iovec** %iov50, align 8, !dbg !6926, !tbaa !1077
  %62 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6927, !tbaa !964
  %iovsize51 = getelementptr inbounds %struct.conn, %struct.conn* %62, i32 0, i32 21, !dbg !6928
  store i32 400, i32* %iovsize51, align 8, !dbg !6929, !tbaa !1106
  br label %if.end52, !dbg !6930

if.end52:                                         ; preds = %if.then49, %if.then45
  %63 = bitcast %struct.iovec** %newbuf46 to i8*, !dbg !6931
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %63) #12, !dbg !6931
  br label %if.end53, !dbg !6932

if.end53:                                         ; preds = %if.then1, %if.end52, %if.end42
  ret void, !dbg !6933
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8* %0, i8* %1, i64 %2) #6

declare !dbg !764 dso_local i32 @mt_store_item(%struct._stritem* %0, i32 %1) #4

; Function Attrs: nounwind uwtable
define internal i32 @ensure_iov_space(%struct.conn* %c) #0 !dbg !6934 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.conn*, align 8
  %i = alloca i32, align 4
  %iovnum = alloca i32, align 4
  %new_iov = alloca %struct.iovec*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !6936, metadata !DIExpression()), !dbg !6942
  %0 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6943, !tbaa !964
  %cmp = icmp ne %struct.conn* %0, null, !dbg !6943
  br i1 %cmp, label %if.then, label %if.else, !dbg !6946

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6946

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i32 630, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__PRETTY_FUNCTION__.ensure_iov_space, i64 0, i64 0)) #13, !dbg !6943
  unreachable, !dbg !6943

if.end:                                           ; preds = %if.then
  %1 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6947, !tbaa !964
  %iovused = getelementptr inbounds %struct.conn, %struct.conn* %1, i32 0, i32 22, !dbg !6948
  %2 = load i32, i32* %iovused, align 4, !dbg !6948, !tbaa !1337
  %3 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6949, !tbaa !964
  %iovsize = getelementptr inbounds %struct.conn, %struct.conn* %3, i32 0, i32 21, !dbg !6950
  %4 = load i32, i32* %iovsize, align 8, !dbg !6950, !tbaa !1106
  %cmp1 = icmp sge i32 %2, %4, !dbg !6951
  br i1 %cmp1, label %if.then2, label %if.end22, !dbg !6952

if.then2:                                         ; preds = %if.end
  %5 = bitcast i32* %i to i8*, !dbg !6953
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #12, !dbg !6953
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6937, metadata !DIExpression()), !dbg !6954
  %6 = bitcast i32* %iovnum to i8*, !dbg !6953
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #12, !dbg !6953
  call void @llvm.dbg.declare(metadata i32* %iovnum, metadata !6940, metadata !DIExpression()), !dbg !6955
  %7 = bitcast %struct.iovec** %new_iov to i8*, !dbg !6956
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #12, !dbg !6956
  call void @llvm.dbg.declare(metadata %struct.iovec** %new_iov, metadata !6941, metadata !DIExpression()), !dbg !6957
  %8 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6958, !tbaa !964
  %iov = getelementptr inbounds %struct.conn, %struct.conn* %8, i32 0, i32 20, !dbg !6959
  %9 = load %struct.iovec*, %struct.iovec** %iov, align 8, !dbg !6959, !tbaa !1077
  %10 = bitcast %struct.iovec* %9 to i8*, !dbg !6958
  %11 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6960, !tbaa !964
  %iovsize3 = getelementptr inbounds %struct.conn, %struct.conn* %11, i32 0, i32 21, !dbg !6961
  %12 = load i32, i32* %iovsize3, align 8, !dbg !6961, !tbaa !1106
  %mul = mul nsw i32 %12, 2, !dbg !6962
  %conv = sext i32 %mul to i64, !dbg !6963
  %mul4 = mul i64 %conv, 16, !dbg !6964
  %call = call i8* @realloc(i8* %10, i64 %mul4) #12, !dbg !6965
  %13 = bitcast i8* %call to %struct.iovec*, !dbg !6966
  store %struct.iovec* %13, %struct.iovec** %new_iov, align 8, !dbg !6957, !tbaa !964
  %14 = load %struct.iovec*, %struct.iovec** %new_iov, align 8, !dbg !6967, !tbaa !964
  %tobool = icmp ne %struct.iovec* %14, null, !dbg !6967
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !6969

if.then5:                                         ; preds = %if.then2
  store i32 -1, i32* %retval, align 4, !dbg !6970
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !6970

if.end6:                                          ; preds = %if.then2
  %15 = load %struct.iovec*, %struct.iovec** %new_iov, align 8, !dbg !6971, !tbaa !964
  %16 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6972, !tbaa !964
  %iov7 = getelementptr inbounds %struct.conn, %struct.conn* %16, i32 0, i32 20, !dbg !6973
  store %struct.iovec* %15, %struct.iovec** %iov7, align 8, !dbg !6974, !tbaa !1077
  %17 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6975, !tbaa !964
  %iovsize8 = getelementptr inbounds %struct.conn, %struct.conn* %17, i32 0, i32 21, !dbg !6976
  %18 = load i32, i32* %iovsize8, align 8, !dbg !6977, !tbaa !1106
  %mul9 = mul nsw i32 %18, 2, !dbg !6977
  store i32 %mul9, i32* %iovsize8, align 8, !dbg !6977, !tbaa !1106
  store i32 0, i32* %i, align 4, !dbg !6978, !tbaa !946
  store i32 0, i32* %iovnum, align 4, !dbg !6980, !tbaa !946
  br label %for.cond, !dbg !6981

for.cond:                                         ; preds = %for.inc, %if.end6
  %19 = load i32, i32* %i, align 4, !dbg !6982, !tbaa !946
  %20 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6984, !tbaa !964
  %msgused = getelementptr inbounds %struct.conn, %struct.conn* %20, i32 0, i32 25, !dbg !6985
  %21 = load i32, i32* %msgused, align 4, !dbg !6985, !tbaa !1345
  %cmp10 = icmp slt i32 %19, %21, !dbg !6986
  br i1 %cmp10, label %for.body, label %for.end, !dbg !6987

for.body:                                         ; preds = %for.cond
  %22 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6988, !tbaa !964
  %iov12 = getelementptr inbounds %struct.conn, %struct.conn* %22, i32 0, i32 20, !dbg !6990
  %23 = load %struct.iovec*, %struct.iovec** %iov12, align 8, !dbg !6990, !tbaa !1077
  %24 = load i32, i32* %iovnum, align 4, !dbg !6991, !tbaa !946
  %idxprom = sext i32 %24 to i64, !dbg !6988
  %arrayidx = getelementptr inbounds %struct.iovec, %struct.iovec* %23, i64 %idxprom, !dbg !6988
  %25 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6992, !tbaa !964
  %msglist = getelementptr inbounds %struct.conn, %struct.conn* %25, i32 0, i32 23, !dbg !6993
  %26 = load %struct.msghdr*, %struct.msghdr** %msglist, align 8, !dbg !6993, !tbaa !1081
  %27 = load i32, i32* %i, align 4, !dbg !6994, !tbaa !946
  %idxprom13 = sext i32 %27 to i64, !dbg !6992
  %arrayidx14 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %26, i64 %idxprom13, !dbg !6992
  %msg_iov = getelementptr inbounds %struct.msghdr, %struct.msghdr* %arrayidx14, i32 0, i32 2, !dbg !6995
  store %struct.iovec* %arrayidx, %struct.iovec** %msg_iov, align 8, !dbg !6996, !tbaa !4375
  %28 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !6997, !tbaa !964
  %msglist15 = getelementptr inbounds %struct.conn, %struct.conn* %28, i32 0, i32 23, !dbg !6998
  %29 = load %struct.msghdr*, %struct.msghdr** %msglist15, align 8, !dbg !6998, !tbaa !1081
  %30 = load i32, i32* %i, align 4, !dbg !6999, !tbaa !946
  %idxprom16 = sext i32 %30 to i64, !dbg !6997
  %arrayidx17 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %29, i64 %idxprom16, !dbg !6997
  %msg_iovlen = getelementptr inbounds %struct.msghdr, %struct.msghdr* %arrayidx17, i32 0, i32 3, !dbg !7000
  %31 = load i64, i64* %msg_iovlen, align 8, !dbg !7000, !tbaa !4318
  %32 = load i32, i32* %iovnum, align 4, !dbg !7001, !tbaa !946
  %conv18 = sext i32 %32 to i64, !dbg !7001
  %add = add i64 %conv18, %31, !dbg !7001
  %conv19 = trunc i64 %add to i32, !dbg !7001
  store i32 %conv19, i32* %iovnum, align 4, !dbg !7001, !tbaa !946
  br label %for.inc, !dbg !7002

for.inc:                                          ; preds = %for.body
  %33 = load i32, i32* %i, align 4, !dbg !7003, !tbaa !946
  %inc = add nsw i32 %33, 1, !dbg !7003
  store i32 %inc, i32* %i, align 4, !dbg !7003, !tbaa !946
  br label %for.cond, !dbg !7004, !llvm.loop !7005

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !7007
  br label %cleanup, !dbg !7007

cleanup:                                          ; preds = %for.end, %if.then5
  %34 = bitcast %struct.iovec** %new_iov to i8*, !dbg !7007
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #12, !dbg !7007
  %35 = bitcast i32* %iovnum to i8*, !dbg !7007
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %35) #12, !dbg !7007
  %36 = bitcast i32* %i to i8*, !dbg !7007
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %36) #12, !dbg !7007
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end22, !dbg !7008

if.end22:                                         ; preds = %cleanup.cont, %if.end
  store i32 0, i32* %retval, align 4, !dbg !7009
  br label %return, !dbg !7009

return:                                           ; preds = %if.end22, %cleanup
  %37 = load i32, i32* %retval, align 4, !dbg !7010
  ret i32 %37, !dbg !7010

unreachable:                                      ; preds = %cleanup
  unreachable
}

declare !dbg !767 dso_local i64 @sendmsg(i32 %0, %struct.msghdr* %1, i32 %2) #4

; Function Attrs: nounwind
declare dso_local i32 @__xstat(i32 %0, i8* %1, %struct.stat* %2) #3

; Function Attrs: convergent nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32 %0) #11

declare dso_local i32 @printf(i8* %0, ...) #4

; Function Attrs: nounwind
declare dso_local double @strtod(i8* %0, i8** %1) #3

; Function Attrs: nounwind uwtable
define internal i32 @new_socket(i1 zeroext %is_udp) #0 !dbg !7011 {
entry:
  %retval = alloca i32, align 4
  %is_udp.addr = alloca i8, align 1
  %sfd = alloca i32, align 4
  %flags = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %frombool = zext i1 %is_udp to i8
  store i8 %frombool, i8* %is_udp.addr, align 1, !tbaa !1031
  call void @llvm.dbg.declare(metadata i8* %is_udp.addr, metadata !7015, metadata !DIExpression()), !dbg !7018
  %0 = bitcast i32* %sfd to i8*, !dbg !7019
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !7019
  call void @llvm.dbg.declare(metadata i32* %sfd, metadata !7016, metadata !DIExpression()), !dbg !7020
  %1 = bitcast i32* %flags to i8*, !dbg !7021
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #12, !dbg !7021
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !7017, metadata !DIExpression()), !dbg !7022
  %2 = load i8, i8* %is_udp.addr, align 1, !dbg !7023, !tbaa !1031, !range !1262
  %tobool = trunc i8 %2 to i1, !dbg !7023
  %3 = zext i1 %tobool to i64, !dbg !7023
  %cond = select i1 %tobool, i32 2, i32 1, !dbg !7023
  %call = call i32 @socket(i32 2, i32 %cond, i32 0) #12, !dbg !7025
  store i32 %call, i32* %sfd, align 4, !dbg !7026, !tbaa !946
  %cmp = icmp eq i32 %call, -1, !dbg !7027
  br i1 %cmp, label %if.then, label %if.end, !dbg !7028

if.then:                                          ; preds = %entry
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.158, i64 0, i64 0)), !dbg !7029
  store i32 -1, i32* %retval, align 4, !dbg !7031
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7031

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %sfd, align 4, !dbg !7032, !tbaa !946
  %call1 = call i32 (i32, i32, ...) @fcntl(i32 %4, i32 3, i32 0), !dbg !7034
  store i32 %call1, i32* %flags, align 4, !dbg !7035, !tbaa !946
  %cmp2 = icmp slt i32 %call1, 0, !dbg !7036
  br i1 %cmp2, label %if.then5, label %lor.lhs.false, !dbg !7037

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i32, i32* %sfd, align 4, !dbg !7038, !tbaa !946
  %6 = load i32, i32* %flags, align 4, !dbg !7039, !tbaa !946
  %or = or i32 %6, 2048, !dbg !7040
  %call3 = call i32 (i32, i32, ...) @fcntl(i32 %5, i32 4, i32 %or), !dbg !7041
  %cmp4 = icmp slt i32 %call3, 0, !dbg !7042
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !7043

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  call void @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0)), !dbg !7044
  %7 = load i32, i32* %sfd, align 4, !dbg !7046, !tbaa !946
  %call6 = call i32 @close(i32 %7), !dbg !7047
  store i32 -1, i32* %retval, align 4, !dbg !7048
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7048

if.end7:                                          ; preds = %lor.lhs.false
  %8 = load i32, i32* %sfd, align 4, !dbg !7049, !tbaa !946
  store i32 %8, i32* %retval, align 4, !dbg !7050
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7050

cleanup:                                          ; preds = %if.end7, %if.then5, %if.then
  %9 = bitcast i32* %flags to i8*, !dbg !7051
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %9) #12, !dbg !7051
  %10 = bitcast i32* %sfd to i8*, !dbg !7051
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %10) #12, !dbg !7051
  %11 = load i32, i32* %retval, align 4, !dbg !7051
  ret i32 %11, !dbg !7051
}

; Function Attrs: nounwind
declare !dbg !774 dso_local i32 @setsockopt(i32 %0, i32 %1, i32 %2, i8* %3, i32 %4) #3

; Function Attrs: nounwind uwtable
define internal void @maximize_sndbuf(i32 %sfd) #0 !dbg !7052 {
entry:
  %sfd.addr = alloca i32, align 4
  %intsize = alloca i32, align 4
  %last_good = alloca i32, align 4
  %min = alloca i32, align 4
  %max = alloca i32, align 4
  %avg = alloca i32, align 4
  %old_size = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  store i32 %sfd, i32* %sfd.addr, align 4, !tbaa !946
  call void @llvm.dbg.declare(metadata i32* %sfd.addr, metadata !7054, metadata !DIExpression()), !dbg !7061
  %0 = bitcast i32* %intsize to i8*, !dbg !7062
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !7062
  call void @llvm.dbg.declare(metadata i32* %intsize, metadata !7055, metadata !DIExpression()), !dbg !7063
  store i32 4, i32* %intsize, align 4, !dbg !7063, !tbaa !946
  %1 = bitcast i32* %last_good to i8*, !dbg !7064
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #12, !dbg !7064
  call void @llvm.dbg.declare(metadata i32* %last_good, metadata !7056, metadata !DIExpression()), !dbg !7065
  store i32 0, i32* %last_good, align 4, !dbg !7065, !tbaa !946
  %2 = bitcast i32* %min to i8*, !dbg !7066
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #12, !dbg !7066
  call void @llvm.dbg.declare(metadata i32* %min, metadata !7057, metadata !DIExpression()), !dbg !7067
  %3 = bitcast i32* %max to i8*, !dbg !7066
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #12, !dbg !7066
  call void @llvm.dbg.declare(metadata i32* %max, metadata !7058, metadata !DIExpression()), !dbg !7068
  %4 = bitcast i32* %avg to i8*, !dbg !7066
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #12, !dbg !7066
  call void @llvm.dbg.declare(metadata i32* %avg, metadata !7059, metadata !DIExpression()), !dbg !7069
  %5 = bitcast i32* %old_size to i8*, !dbg !7070
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #12, !dbg !7070
  call void @llvm.dbg.declare(metadata i32* %old_size, metadata !7060, metadata !DIExpression()), !dbg !7071
  %6 = load i32, i32* %sfd.addr, align 4, !dbg !7072, !tbaa !946
  %7 = bitcast i32* %old_size to i8*, !dbg !7074
  %call = call i32 @getsockopt(i32 %6, i32 1, i32 7, i8* %7, i32* %intsize) #12, !dbg !7075
  %cmp = icmp ne i32 %call, 0, !dbg !7076
  br i1 %cmp, label %if.then, label %if.end3, !dbg !7077

if.then:                                          ; preds = %entry
  %8 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !7078, !tbaa !1246
  %cmp1 = icmp sgt i32 %8, 0, !dbg !7081
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !7082

if.then2:                                         ; preds = %if.then
  call void @perror(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.159, i64 0, i64 0)), !dbg !7083
  br label %if.end, !dbg !7083

if.end:                                           ; preds = %if.then2, %if.then
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7084

if.end3:                                          ; preds = %entry
  %9 = load i32, i32* %old_size, align 4, !dbg !7085, !tbaa !946
  store i32 %9, i32* %min, align 4, !dbg !7086, !tbaa !946
  store i32 268435456, i32* %max, align 4, !dbg !7087, !tbaa !946
  br label %while.cond, !dbg !7088

while.cond:                                       ; preds = %if.end9, %if.end3
  %10 = load i32, i32* %min, align 4, !dbg !7089, !tbaa !946
  %11 = load i32, i32* %max, align 4, !dbg !7090, !tbaa !946
  %cmp4 = icmp sle i32 %10, %11, !dbg !7091
  br i1 %cmp4, label %while.body, label %while.end, !dbg !7088

while.body:                                       ; preds = %while.cond
  %12 = load i32, i32* %min, align 4, !dbg !7092, !tbaa !946
  %13 = load i32, i32* %max, align 4, !dbg !7094, !tbaa !946
  %add = add nsw i32 %12, %13, !dbg !7095
  %div = udiv i32 %add, 2, !dbg !7096
  store i32 %div, i32* %avg, align 4, !dbg !7097, !tbaa !946
  %14 = load i32, i32* %sfd.addr, align 4, !dbg !7098, !tbaa !946
  %15 = bitcast i32* %avg to i8*, !dbg !7100
  %16 = load i32, i32* %intsize, align 4, !dbg !7101, !tbaa !946
  %call5 = call i32 @setsockopt(i32 %14, i32 1, i32 7, i8* %15, i32 %16) #12, !dbg !7102
  %cmp6 = icmp eq i32 %call5, 0, !dbg !7103
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !7104

if.then7:                                         ; preds = %while.body
  %17 = load i32, i32* %avg, align 4, !dbg !7105, !tbaa !946
  store i32 %17, i32* %last_good, align 4, !dbg !7107, !tbaa !946
  %18 = load i32, i32* %avg, align 4, !dbg !7108, !tbaa !946
  %add8 = add nsw i32 %18, 1, !dbg !7109
  store i32 %add8, i32* %min, align 4, !dbg !7110, !tbaa !946
  br label %if.end9, !dbg !7111

if.else:                                          ; preds = %while.body
  %19 = load i32, i32* %avg, align 4, !dbg !7112, !tbaa !946
  %sub = sub nsw i32 %19, 1, !dbg !7114
  store i32 %sub, i32* %max, align 4, !dbg !7115, !tbaa !946
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then7
  br label %while.cond, !dbg !7088, !llvm.loop !7116

while.end:                                        ; preds = %while.cond
  %20 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !7118, !tbaa !1246
  %cmp10 = icmp sgt i32 %20, 1, !dbg !7120
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !7121

if.then11:                                        ; preds = %while.end
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7122, !tbaa !964
  %22 = load i32, i32* %sfd.addr, align 4, !dbg !7123, !tbaa !946
  %23 = load i32, i32* %old_size, align 4, !dbg !7124, !tbaa !946
  %24 = load i32, i32* %last_good, align 4, !dbg !7125, !tbaa !946
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.160, i64 0, i64 0), i32 %22, i32 %23, i32 %24), !dbg !7126
  br label %if.end13, !dbg !7126

if.end13:                                         ; preds = %if.then11, %while.end
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !7127
  br label %cleanup, !dbg !7127

cleanup:                                          ; preds = %if.end13, %if.end
  %25 = bitcast i32* %old_size to i8*, !dbg !7127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %25) #12, !dbg !7127
  %26 = bitcast i32* %avg to i8*, !dbg !7127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %26) #12, !dbg !7127
  %27 = bitcast i32* %max to i8*, !dbg !7127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %27) #12, !dbg !7127
  %28 = bitcast i32* %min to i8*, !dbg !7127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %28) #12, !dbg !7127
  %29 = bitcast i32* %last_good to i8*, !dbg !7127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %29) #12, !dbg !7127
  %30 = bitcast i32* %intsize to i8*, !dbg !7127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %30) #12, !dbg !7127
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup, %cleanup
  ret void, !dbg !7127

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: convergent nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16 %0) #11

; Function Attrs: nounwind
declare !dbg !779 dso_local i32 @bind(i32 %0, %struct.sockaddr* %1, i32 %2) #3

; Function Attrs: nounwind
declare !dbg !784 dso_local i32 @socket(i32 %0, i32 %1, i32 %2) #3

; Function Attrs: nounwind
declare !dbg !787 dso_local i32 @getsockopt(i32 %0, i32 %1, i32 %2, i8* %3, i32* %4) #3

; Function Attrs: nounwind uwtable
define internal i32 @new_socket_unix() #0 !dbg !7128 {
entry:
  %retval = alloca i32, align 4
  %sfd = alloca i32, align 4
  %flags = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %0 = bitcast i32* %sfd to i8*, !dbg !7132
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #12, !dbg !7132
  call void @llvm.dbg.declare(metadata i32* %sfd, metadata !7130, metadata !DIExpression()), !dbg !7133
  %1 = bitcast i32* %flags to i8*, !dbg !7134
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #12, !dbg !7134
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !7131, metadata !DIExpression()), !dbg !7135
  %call = call i32 @socket(i32 1, i32 1, i32 0) #12, !dbg !7136
  store i32 %call, i32* %sfd, align 4, !dbg !7138, !tbaa !946
  %cmp = icmp eq i32 %call, -1, !dbg !7139
  br i1 %cmp, label %if.then, label %if.end, !dbg !7140

if.then:                                          ; preds = %entry
  call void @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.158, i64 0, i64 0)), !dbg !7141
  store i32 -1, i32* %retval, align 4, !dbg !7143
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7143

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %sfd, align 4, !dbg !7144, !tbaa !946
  %call1 = call i32 (i32, i32, ...) @fcntl(i32 %2, i32 3, i32 0), !dbg !7146
  store i32 %call1, i32* %flags, align 4, !dbg !7147, !tbaa !946
  %cmp2 = icmp slt i32 %call1, 0, !dbg !7148
  br i1 %cmp2, label %if.then5, label %lor.lhs.false, !dbg !7149

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i32, i32* %sfd, align 4, !dbg !7150, !tbaa !946
  %4 = load i32, i32* %flags, align 4, !dbg !7151, !tbaa !946
  %or = or i32 %4, 2048, !dbg !7152
  %call3 = call i32 (i32, i32, ...) @fcntl(i32 %3, i32 4, i32 %or), !dbg !7153
  %cmp4 = icmp slt i32 %call3, 0, !dbg !7154
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !7155

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  call void @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0)), !dbg !7156
  %5 = load i32, i32* %sfd, align 4, !dbg !7158, !tbaa !946
  %call6 = call i32 @close(i32 %5), !dbg !7159
  store i32 -1, i32* %retval, align 4, !dbg !7160
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7160

if.end7:                                          ; preds = %lor.lhs.false
  %6 = load i32, i32* %sfd, align 4, !dbg !7161, !tbaa !946
  store i32 %6, i32* %retval, align 4, !dbg !7162
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !7162

cleanup:                                          ; preds = %if.end7, %if.then5, %if.then
  %7 = bitcast i32* %flags to i8*, !dbg !7163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %7) #12, !dbg !7163
  %8 = bitcast i32* %sfd to i8*, !dbg !7163
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %8) #12, !dbg !7163
  %9 = load i32, i32* %retval, align 4, !dbg !7163
  ret i32 %9, !dbg !7163
}

; Function Attrs: inlinehint nounwind uwtable
define available_externally dso_local i32 @lstat(i8* nonnull %__path, %struct.stat* nonnull %__statbuf) #10 !dbg !7164 {
entry:
  %__path.addr = alloca i8*, align 8
  %__statbuf.addr = alloca %struct.stat*, align 8
  store i8* %__path, i8** %__path.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata i8** %__path.addr, metadata !7166, metadata !DIExpression()), !dbg !7168
  store %struct.stat* %__statbuf, %struct.stat** %__statbuf.addr, align 8, !tbaa !964
  call void @llvm.dbg.declare(metadata %struct.stat** %__statbuf.addr, metadata !7167, metadata !DIExpression()), !dbg !7168
  %0 = load i8*, i8** %__path.addr, align 8, !dbg !7169, !tbaa !964
  %1 = load %struct.stat*, %struct.stat** %__statbuf.addr, align 8, !dbg !7170, !tbaa !964
  %call = call i32 @__lxstat(i32 1, i8* %0, %struct.stat* %1) #12, !dbg !7171
  ret i32 %call, !dbg !7172
}

; Function Attrs: nounwind
declare !dbg !790 dso_local i32 @unlink(i8* %0) #3

; Function Attrs: nounwind
declare !dbg !793 dso_local i32 @umask(i32 %0) #3

; Function Attrs: nounwind
declare dso_local i32 @__lxstat(i32 %0, i8* %1, %struct.stat* %2) #3

declare dso_local %struct._IO_FILE* @fopen(i8* %0, i8* %1) #4

declare !dbg !798 dso_local i32 @fclose(%struct._IO_FILE* %0) #4

declare !dbg !801 dso_local void @mt_run_deferred_deletes() #4

declare i32 @cpavise_load_data(i8* %0, i64 %1, i64 %2)

declare i32 @cpavise_store_data_fileline(i8* %0, i64 %1, i32 %2, i32 %3)

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind willreturn writeonly }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { convergent nounwind readnone willreturn }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readnone }
attributes #15 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!904, !905, !906}
!llvm.ident = !{!907}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "stats", scope: !2, file: !805, line: 118, type: !886, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 11.0.0 (https://github.com/hjjq/LLVM-Pavise.git 3d210af9293f24d5e7772804ba7d1c4b26f9bb1a)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !92, globals: !802, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/ssd1/hanjie/mod-pavise/memcached-pmdk/memcached.c", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk/tx-build")
!4 = !{!5, !16, !24, !46, !51, !80}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "conn_states", file: !6, line: 152, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "memcached.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15}
!9 = !DIEnumerator(name: "conn_listening", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "conn_read", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "conn_write", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "conn_nread", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "conn_swallow", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "conn_closing", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "conn_mwrite", value: 6, isUnsigned: true)
!16 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !17, line: 7, baseType: !7, size: 32, elements: !18)
!17 = !DIFile(filename: "../pmem-valgrind/lackey/lackey.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!18 = !{!19, !20, !21, !22, !23}
!19 = !DIEnumerator(name: "VG_USERREQ__DUMP_STATS", value: 1279983616, isUnsigned: true)
!20 = !DIEnumerator(name: "VG_USERREQ__START_INSTRUMENTATION", value: 1279983617, isUnsigned: true)
!21 = !DIEnumerator(name: "VG_USERREQ__STOP_INSTRUMENTATION", value: 1279983618, isUnsigned: true)
!22 = !DIEnumerator(name: "VG_USERREQ__OPERATION_START", value: 1279983619, isUnsigned: true)
!23 = !DIEnumerator(name: "VG_USERREQ__OPERATION_END", value: 1279983620, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__rlimit_resource", file: !25, line: 31, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/resource.h", directory: "")
!26 = !{!27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!27 = !DIEnumerator(name: "RLIMIT_CPU", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "RLIMIT_FSIZE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "RLIMIT_DATA", value: 2, isUnsigned: true)
!30 = !DIEnumerator(name: "RLIMIT_STACK", value: 3, isUnsigned: true)
!31 = !DIEnumerator(name: "RLIMIT_CORE", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "__RLIMIT_RSS", value: 5, isUnsigned: true)
!33 = !DIEnumerator(name: "RLIMIT_NOFILE", value: 7, isUnsigned: true)
!34 = !DIEnumerator(name: "__RLIMIT_OFILE", value: 7, isUnsigned: true)
!35 = !DIEnumerator(name: "RLIMIT_AS", value: 9, isUnsigned: true)
!36 = !DIEnumerator(name: "__RLIMIT_NPROC", value: 6, isUnsigned: true)
!37 = !DIEnumerator(name: "__RLIMIT_MEMLOCK", value: 8, isUnsigned: true)
!38 = !DIEnumerator(name: "__RLIMIT_LOCKS", value: 10, isUnsigned: true)
!39 = !DIEnumerator(name: "__RLIMIT_SIGPENDING", value: 11, isUnsigned: true)
!40 = !DIEnumerator(name: "__RLIMIT_MSGQUEUE", value: 12, isUnsigned: true)
!41 = !DIEnumerator(name: "__RLIMIT_NICE", value: 13, isUnsigned: true)
!42 = !DIEnumerator(name: "__RLIMIT_RTPRIO", value: 14, isUnsigned: true)
!43 = !DIEnumerator(name: "__RLIMIT_RTTIME", value: 15, isUnsigned: true)
!44 = !DIEnumerator(name: "__RLIMIT_NLIMITS", value: 16, isUnsigned: true)
!45 = !DIEnumerator(name: "__RLIM_NLIMITS", value: 16, isUnsigned: true)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__rusage_who", file: !25, line: 158, baseType: !47, size: 32, elements: !48)
!47 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!48 = !{!49, !50}
!49 = !DIEnumerator(name: "RUSAGE_SELF", value: 0)
!50 = !DIEnumerator(name: "RUSAGE_CHILDREN", value: -1)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !52, line: 40, baseType: !7, size: 32, elements: !53)
!52 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "")
!53 = !{!54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79}
!54 = !DIEnumerator(name: "IPPROTO_IP", value: 0, isUnsigned: true)
!55 = !DIEnumerator(name: "IPPROTO_ICMP", value: 1, isUnsigned: true)
!56 = !DIEnumerator(name: "IPPROTO_IGMP", value: 2, isUnsigned: true)
!57 = !DIEnumerator(name: "IPPROTO_IPIP", value: 4, isUnsigned: true)
!58 = !DIEnumerator(name: "IPPROTO_TCP", value: 6, isUnsigned: true)
!59 = !DIEnumerator(name: "IPPROTO_EGP", value: 8, isUnsigned: true)
!60 = !DIEnumerator(name: "IPPROTO_PUP", value: 12, isUnsigned: true)
!61 = !DIEnumerator(name: "IPPROTO_UDP", value: 17, isUnsigned: true)
!62 = !DIEnumerator(name: "IPPROTO_IDP", value: 22, isUnsigned: true)
!63 = !DIEnumerator(name: "IPPROTO_TP", value: 29, isUnsigned: true)
!64 = !DIEnumerator(name: "IPPROTO_DCCP", value: 33, isUnsigned: true)
!65 = !DIEnumerator(name: "IPPROTO_IPV6", value: 41, isUnsigned: true)
!66 = !DIEnumerator(name: "IPPROTO_RSVP", value: 46, isUnsigned: true)
!67 = !DIEnumerator(name: "IPPROTO_GRE", value: 47, isUnsigned: true)
!68 = !DIEnumerator(name: "IPPROTO_ESP", value: 50, isUnsigned: true)
!69 = !DIEnumerator(name: "IPPROTO_AH", value: 51, isUnsigned: true)
!70 = !DIEnumerator(name: "IPPROTO_MTP", value: 92, isUnsigned: true)
!71 = !DIEnumerator(name: "IPPROTO_BEETPH", value: 94, isUnsigned: true)
!72 = !DIEnumerator(name: "IPPROTO_ENCAP", value: 98, isUnsigned: true)
!73 = !DIEnumerator(name: "IPPROTO_PIM", value: 103, isUnsigned: true)
!74 = !DIEnumerator(name: "IPPROTO_COMP", value: 108, isUnsigned: true)
!75 = !DIEnumerator(name: "IPPROTO_SCTP", value: 132, isUnsigned: true)
!76 = !DIEnumerator(name: "IPPROTO_UDPLITE", value: 136, isUnsigned: true)
!77 = !DIEnumerator(name: "IPPROTO_MPLS", value: 137, isUnsigned: true)
!78 = !DIEnumerator(name: "IPPROTO_RAW", value: 255, isUnsigned: true)
!79 = !DIEnumerator(name: "IPPROTO_MAX", value: 256, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !81, line: 24, baseType: !7, size: 32, elements: !82)
!81 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "")
!82 = !{!83, !84, !85, !86, !87, !88, !89, !90, !91}
!83 = !DIEnumerator(name: "SOCK_STREAM", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "SOCK_DGRAM", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "SOCK_RAW", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "SOCK_RDM", value: 4, isUnsigned: true)
!87 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5, isUnsigned: true)
!88 = !DIEnumerator(name: "SOCK_DCCP", value: 6, isUnsigned: true)
!89 = !DIEnumerator(name: "SOCK_PACKET", value: 10, isUnsigned: true)
!90 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288, isUnsigned: true)
!91 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048, isUnsigned: true)
!92 = !{!93, !94, !132, !296, !298, !195, !218, !242, !271, !212, !224, !304, !308, !311, !312, !316, !320, !325, !328, !333, !336, !339, !47, !342, !345, !348, !349, !353, !356, !360, !363, !220, !364, !370, !423, !429, !433, !442, !444, !449, !452, !453, !469, !472, !473, !474, !477, !484, !487, !491, !493, !494, !505, !602, !605, !608, !611, !614, !615, !617, !618, !621, !626, !630, !633, !634, !635, !638, !639, !640, !643, !646, !647, !650, !261, !730, !745, !748, !751, !755, !756, !761, !290, !764, !767, !772, !774, !255, !624, !779, !784, !787, !7, !790, !793, !797, !175, !798, !801}
!93 = !DIDerivedType(tag: DW_TAG_typedef, name: "rel_time_t", file: !6, line: 73, baseType: !7)
!94 = !DISubprogram(name: "mt_conn_from_freelist", scope: !6, file: !6, line: 294, type: !95, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!95 = !DISubroutineType(types: !96)
!96 = !{!97}
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!98 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 169, size: 3136, elements: !99)
!99 = !{!100, !101, !102, !192, !193, !194, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !221, !222, !223, !237, !238, !239, !240, !241, !267, !268, !269, !270, !272, !273, !274, !275, !277, !278, !288, !289, !291, !292, !293, !294}
!100 = !DIDerivedType(tag: DW_TAG_member, name: "sfd", scope: !98, file: !6, line: 170, baseType: !47, size: 32)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !98, file: !6, line: 171, baseType: !47, size: 32, offset: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !98, file: !6, line: 172, baseType: !103, size: 1024, offset: 64)
!103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "event", file: !104, line: 123, size: 1024, elements: !105)
!104 = !DIFile(filename: "/usr/include/event2/event_struct.h", directory: "")
!105 = !{!106, !144, !154, !155, !158, !189, !190, !191}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "ev_evcallback", scope: !103, file: !104, line: 124, baseType: !107, size: 320)
!107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "event_callback", file: !104, line: 107, size: 320, elements: !108)
!108 = !{!109, !116, !118, !124, !125, !143}
!109 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_active_next", scope: !107, file: !104, line: 108, baseType: !110, size: 128)
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !107, file: !104, line: 108, size: 128, elements: !111)
!111 = !{!112, !114}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !110, file: !104, line: 108, baseType: !113, size: 64)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !110, file: !104, line: 108, baseType: !115, size: 64, offset: 64)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_flags", scope: !107, file: !104, line: 109, baseType: !117, size: 16, offset: 128)
!117 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_pri", scope: !107, file: !104, line: 110, baseType: !119, size: 8, offset: 144)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !120, line: 24, baseType: !121)
!120 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !122, line: 37, baseType: !123)
!122 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!123 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_closure", scope: !107, file: !104, line: 111, baseType: !119, size: 8, offset: 152)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_cb_union", scope: !107, file: !104, line: 118, baseType: !126, size: 64, offset: 192)
!126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !107, file: !104, line: 113, size: 64, elements: !127)
!127 = !{!128, !133, !137, !142}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_callback", scope: !126, file: !104, line: 114, baseType: !129, size: 64)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DISubroutineType(types: !131)
!131 = !{null, !47, !117, !132}
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_selfcb", scope: !126, file: !104, line: 115, baseType: !134, size: 64)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!135 = !DISubroutineType(types: !136)
!136 = !{null, !113, !132}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_evfinalize", scope: !126, file: !104, line: 116, baseType: !138, size: 64)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!139 = !DISubroutineType(types: !140)
!140 = !{null, !141, !132}
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_cbfinalize", scope: !126, file: !104, line: 117, baseType: !134, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_arg", scope: !107, file: !104, line: 119, baseType: !132, size: 64, offset: 256)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "ev_timeout_pos", scope: !103, file: !104, line: 130, baseType: !145, size: 128, offset: 320)
!145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !103, file: !104, line: 127, size: 128, elements: !146)
!146 = !{!147, !153}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "ev_next_with_common_timeout", scope: !145, file: !104, line: 128, baseType: !148, size: 128)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !145, file: !104, line: 128, size: 128, elements: !149)
!149 = !{!150, !151}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !148, file: !104, line: 128, baseType: !141, size: 64)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !148, file: !104, line: 128, baseType: !152, size: 64, offset: 64)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "min_heap_idx", scope: !145, file: !104, line: 129, baseType: !47, size: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "ev_fd", scope: !103, file: !104, line: 131, baseType: !47, size: 32, offset: 448)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "ev_base", scope: !103, file: !104, line: 133, baseType: !156, size: 64, offset: 512)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!157 = !DICompositeType(tag: DW_TAG_structure_type, name: "event_base", file: !104, line: 122, flags: DIFlagFwdDecl)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "ev_", scope: !103, file: !104, line: 149, baseType: !159, size: 256, offset: 576)
!159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !103, file: !104, line: 135, size: 256, elements: !160)
!160 = !{!161, !178}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "ev_io", scope: !159, file: !104, line: 140, baseType: !162, size: 256)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !159, file: !104, line: 137, size: 256, elements: !163)
!163 = !{!164, !169}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "ev_io_next", scope: !162, file: !104, line: 138, baseType: !165, size: 128)
!165 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !162, file: !104, line: 138, size: 128, elements: !166)
!166 = !{!167, !168}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "le_next", scope: !165, file: !104, line: 138, baseType: !141, size: 64)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "le_prev", scope: !165, file: !104, line: 138, baseType: !152, size: 64, offset: 64)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "ev_timeout", scope: !162, file: !104, line: 139, baseType: !170, size: 128, offset: 128)
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !171, line: 8, size: 128, elements: !172)
!171 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", directory: "")
!172 = !{!173, !176}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !170, file: !171, line: 10, baseType: !174, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !122, line: 148, baseType: !175)
!175 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !170, file: !171, line: 11, baseType: !177, size: 64, offset: 64)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !122, line: 150, baseType: !175)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "ev_signal", scope: !159, file: !104, line: 148, baseType: !179, size: 256)
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !159, file: !104, line: 143, size: 256, elements: !180)
!180 = !{!181, !186, !187}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "ev_signal_next", scope: !179, file: !104, line: 144, baseType: !182, size: 128)
!182 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !179, file: !104, line: 144, size: 128, elements: !183)
!183 = !{!184, !185}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "le_next", scope: !182, file: !104, line: 144, baseType: !141, size: 64)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "le_prev", scope: !182, file: !104, line: 144, baseType: !152, size: 64, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "ev_ncalls", scope: !179, file: !104, line: 145, baseType: !117, size: 16, offset: 128)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "ev_pncalls", scope: !179, file: !104, line: 147, baseType: !188, size: 64, offset: 192)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ev_events", scope: !103, file: !104, line: 151, baseType: !117, size: 16, offset: 832)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "ev_res", scope: !103, file: !104, line: 152, baseType: !117, size: 16, offset: 848)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "ev_timeout", scope: !103, file: !104, line: 153, baseType: !170, size: 128, offset: 896)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "ev_flags", scope: !98, file: !6, line: 173, baseType: !117, size: 16, offset: 1088)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "which", scope: !98, file: !6, line: 174, baseType: !117, size: 16, offset: 1104)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf", scope: !98, file: !6, line: 176, baseType: !195, size: 64, offset: 1152)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "rcurr", scope: !98, file: !6, line: 177, baseType: !195, size: 64, offset: 1216)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "rsize", scope: !98, file: !6, line: 178, baseType: !47, size: 32, offset: 1280)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "rbytes", scope: !98, file: !6, line: 179, baseType: !47, size: 32, offset: 1312)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "wbuf", scope: !98, file: !6, line: 181, baseType: !195, size: 64, offset: 1344)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "wcurr", scope: !98, file: !6, line: 182, baseType: !195, size: 64, offset: 1408)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "wsize", scope: !98, file: !6, line: 183, baseType: !47, size: 32, offset: 1472)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "wbytes", scope: !98, file: !6, line: 184, baseType: !47, size: 32, offset: 1504)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "write_and_go", scope: !98, file: !6, line: 185, baseType: !47, size: 32, offset: 1536)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "write_and_free", scope: !98, file: !6, line: 186, baseType: !132, size: 64, offset: 1600)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ritem", scope: !98, file: !6, line: 188, baseType: !195, size: 64, offset: 1664)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "rlbytes", scope: !98, file: !6, line: 189, baseType: !47, size: 32, offset: 1728)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "item_ptr", scope: !98, file: !6, line: 200, baseType: !132, size: 64, offset: 1792)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "item_comm", scope: !98, file: !6, line: 201, baseType: !47, size: 32, offset: 1856)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !98, file: !6, line: 204, baseType: !47, size: 32, offset: 1888)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !98, file: !6, line: 207, baseType: !212, size: 64, offset: 1920)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !214, line: 26, size: 128, elements: !215)
!214 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_iovec.h", directory: "")
!215 = !{!216, !217}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !213, file: !214, line: 28, baseType: !132, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !213, file: !214, line: 29, baseType: !218, size: 64, offset: 64)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !219, line: 46, baseType: !220)
!219 = !DIFile(filename: "llvm-project/build/lib/clang/11.0.0/include/stddef.h", directory: "/ssd1")
!220 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "iovsize", scope: !98, file: !6, line: 208, baseType: !47, size: 32, offset: 1984)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "iovused", scope: !98, file: !6, line: 209, baseType: !47, size: 32, offset: 2016)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "msglist", scope: !98, file: !6, line: 211, baseType: !224, size: 64, offset: 2048)
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !226, line: 254, size: 448, elements: !227)
!226 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "")
!227 = !{!228, !229, !232, !233, !234, !235, !236}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !225, file: !226, line: 256, baseType: !132, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !225, file: !226, line: 257, baseType: !230, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !226, line: 33, baseType: !231)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !122, line: 197, baseType: !7)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iov", scope: !225, file: !226, line: 259, baseType: !212, size: 64, offset: 128)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iovlen", scope: !225, file: !226, line: 260, baseType: !218, size: 64, offset: 192)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !225, file: !226, line: 262, baseType: !132, size: 64, offset: 256)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !225, file: !226, line: 263, baseType: !218, size: 64, offset: 320)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !225, file: !226, line: 268, baseType: !47, size: 32, offset: 384)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "msgsize", scope: !98, file: !6, line: 212, baseType: !47, size: 32, offset: 2112)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "msgused", scope: !98, file: !6, line: 213, baseType: !47, size: 32, offset: 2144)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "msgcurr", scope: !98, file: !6, line: 214, baseType: !47, size: 32, offset: 2176)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "msgbytes", scope: !98, file: !6, line: 215, baseType: !47, size: 32, offset: 2208)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "ilist", scope: !98, file: !6, line: 217, baseType: !242, size: 64, offset: 2240)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_typedef, name: "item", file: !6, line: 143, baseType: !245)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_stritem", file: !6, line: 126, size: 960, elements: !246)
!246 = !{!247, !249, !250, !251, !252, !253, !254, !256, !257, !258, !259, !260, !263}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !245, file: !6, line: 127, baseType: !248, size: 64)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !245, file: !6, line: 128, baseType: !248, size: 64, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "h_next", scope: !245, file: !6, line: 129, baseType: !248, size: 64, offset: 128)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !245, file: !6, line: 130, baseType: !93, size: 32, offset: 192)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "exptime", scope: !245, file: !6, line: 131, baseType: !93, size: 32, offset: 224)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !245, file: !6, line: 132, baseType: !47, size: 32, offset: 256)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !245, file: !6, line: 133, baseType: !255, size: 16, offset: 288)
!255 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "nsuffix", scope: !245, file: !6, line: 134, baseType: !119, size: 8, offset: 304)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "it_flags", scope: !245, file: !6, line: 135, baseType: !119, size: 8, offset: 312)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "slabs_clsid", scope: !245, file: !6, line: 136, baseType: !119, size: 8, offset: 320)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "nkey", scope: !245, file: !6, line: 137, baseType: !119, size: 8, offset: 328)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "cas_id", scope: !245, file: !6, line: 138, baseType: !261, size: 64, offset: 384)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !120, line: 27, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !122, line: 44, baseType: !220)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !245, file: !6, line: 139, baseType: !264, size: 512, offset: 448)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !132, size: 512, elements: !265)
!265 = !{!266}
!266 = !DISubrange(count: 8)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "isize", scope: !98, file: !6, line: 218, baseType: !47, size: 32, offset: 2304)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "icurr", scope: !98, file: !6, line: 219, baseType: !242, size: 64, offset: 2368)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "ileft", scope: !98, file: !6, line: 220, baseType: !47, size: 32, offset: 2432)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "suffixlist", scope: !98, file: !6, line: 222, baseType: !271, size: 64, offset: 2496)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "suffixsize", scope: !98, file: !6, line: 223, baseType: !47, size: 32, offset: 2560)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "suffixcurr", scope: !98, file: !6, line: 224, baseType: !271, size: 64, offset: 2624)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "suffixleft", scope: !98, file: !6, line: 225, baseType: !47, size: 32, offset: 2688)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "udp", scope: !98, file: !6, line: 228, baseType: !276, size: 8, offset: 2720)
!276 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "request_id", scope: !98, file: !6, line: 229, baseType: !47, size: 32, offset: 2752)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "request_addr", scope: !98, file: !6, line: 230, baseType: !279, size: 128, offset: 2784)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !226, line: 175, size: 128, elements: !280)
!280 = !{!281, !284}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !279, file: !226, line: 177, baseType: !282, size: 16)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !283, line: 28, baseType: !255)
!283 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "")
!284 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !279, file: !226, line: 178, baseType: !285, size: 112, offset: 16)
!285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 112, elements: !286)
!286 = !{!287}
!287 = !DISubrange(count: 14)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "request_addr_size", scope: !98, file: !6, line: 231, baseType: !230, size: 32, offset: 2912)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "hdrbuf", scope: !98, file: !6, line: 232, baseType: !290, size: 64, offset: 2944)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "hdrsize", scope: !98, file: !6, line: 233, baseType: !47, size: 32, offset: 3008)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "binary", scope: !98, file: !6, line: 235, baseType: !47, size: 32, offset: 3040)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !98, file: !6, line: 236, baseType: !47, size: 32, offset: 3072)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !98, file: !6, line: 238, baseType: !47, size: 32, offset: 3104)
!295 = !{}
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "conn", file: !6, line: 239, baseType: !98)
!298 = !DISubprogram(name: "perror", scope: !299, file: !299, line: 775, type: !300, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!299 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!300 = !DISubroutineType(types: !301)
!301 = !{null, !302}
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!304 = !DISubprogram(name: "free", scope: !305, file: !305, line: 61, type: !306, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!305 = !DIFile(filename: "/usr/include/malloc.h", directory: "")
!306 = !DISubroutineType(types: !307)
!307 = !{null, !132}
!308 = !DISubprogram(name: "mt_stats_lock", scope: !6, file: !6, line: 316, type: !309, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!309 = !DISubroutineType(types: !310)
!310 = !{null}
!311 = !DISubprogram(name: "mt_stats_unlock", scope: !6, file: !6, line: 317, type: !309, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!312 = !DISubprogram(name: "event_set", scope: !313, file: !313, line: 184, type: !314, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!313 = !DIFile(filename: "/usr/include/event2/event_compat.h", directory: "")
!314 = !DISubroutineType(types: !315)
!315 = !{null, !141, !47, !117, !129, !132}
!316 = !DISubprogram(name: "event_base_set", scope: !317, file: !317, line: 790, type: !318, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!317 = !DIFile(filename: "/usr/include/event2/event.h", directory: "")
!318 = !DISubroutineType(types: !319)
!319 = !{!47, !156, !141}
!320 = !DISubprogram(name: "event_add", scope: !317, file: !317, line: 1230, type: !321, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!321 = !DISubroutineType(types: !322)
!322 = !{!47, !141, !323}
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!325 = !DISubprogram(name: "mt_conn_add_to_freelist", scope: !6, file: !6, line: 295, type: !326, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!326 = !DISubroutineType(types: !327)
!327 = !{!276, !97}
!328 = !DISubprogram(name: "do_item_get_notedeleted", scope: !329, file: !329, line: 24, type: !330, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!329 = !DIFile(filename: "items.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!330 = !DISubroutineType(types: !331)
!331 = !{!248, !302, !220, !332}
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!333 = !DISubprogram(name: "do_item_update", scope: !329, file: !329, line: 12, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!334 = !DISubroutineType(types: !335)
!335 = !{null, !248}
!336 = !DISubprogram(name: "do_item_get_nocheck", scope: !329, file: !329, line: 25, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!337 = !DISubroutineType(types: !338)
!338 = !{!248, !302, !220}
!339 = !DISubprogram(name: "do_item_replace", scope: !329, file: !329, line: 13, type: !340, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!340 = !DISubroutineType(types: !341)
!341 = !{!47, !248, !248}
!342 = !DISubprogram(name: "do_item_alloc", scope: !329, file: !329, line: 5, type: !343, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!343 = !DISubroutineType(types: !344)
!344 = !{!248, !195, !220, !47, !7, !47}
!345 = !DISubprogram(name: "do_item_link", scope: !329, file: !329, line: 9, type: !346, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!346 = !DISubroutineType(types: !347)
!347 = !{!47, !248}
!348 = !DISubprogram(name: "do_item_remove", scope: !329, file: !329, line: 11, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!349 = !DISubprogram(name: "close", scope: !350, file: !350, line: 356, type: !351, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!350 = !DIFile(filename: "/usr/include/unistd.h", directory: "")
!351 = !DISubroutineType(types: !352)
!352 = !{!47, !47}
!353 = !DISubprogram(name: "getpid", scope: !350, file: !350, line: 631, type: !354, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!354 = !DISubroutineType(types: !355)
!355 = !{!47}
!356 = !DISubprogram(name: "kill", scope: !357, file: !357, line: 112, type: !358, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!357 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!358 = !DISubroutineType(types: !359)
!359 = !{!47, !47, !47}
!360 = !DISubprogram(name: "item_delete_lock_over", scope: !329, file: !329, line: 26, type: !361, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!361 = !DISubroutineType(types: !362)
!362 = !{!276, !248}
!363 = !DISubprogram(name: "do_item_unlink", scope: !329, file: !329, line: 10, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!364 = !DISubprogram(name: "signal", scope: !357, file: !357, line: 88, type: !365, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!365 = !DISubroutineType(types: !366)
!366 = !{!367, !47, !367}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DISubroutineType(types: !369)
!369 = !{null, !47}
!370 = !DISubprogram(name: "setbuf", scope: !299, file: !299, line: 290, type: !371, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!371 = !DISubroutineType(types: !372)
!372 = !{null, !373, !195}
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !375, line: 245, size: 1728, elements: !376)
!375 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/libio.h", directory: "")
!376 = !{!377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !396, !397, !398, !399, !401, !402, !404, !408, !411, !413, !414, !415, !416, !417, !418, !419}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !374, file: !375, line: 246, baseType: !47, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !374, file: !375, line: 251, baseType: !195, size: 64, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !374, file: !375, line: 252, baseType: !195, size: 64, offset: 128)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !374, file: !375, line: 253, baseType: !195, size: 64, offset: 192)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !374, file: !375, line: 254, baseType: !195, size: 64, offset: 256)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !374, file: !375, line: 255, baseType: !195, size: 64, offset: 320)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !374, file: !375, line: 256, baseType: !195, size: 64, offset: 384)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !374, file: !375, line: 257, baseType: !195, size: 64, offset: 448)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !374, file: !375, line: 258, baseType: !195, size: 64, offset: 512)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !374, file: !375, line: 260, baseType: !195, size: 64, offset: 576)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !374, file: !375, line: 261, baseType: !195, size: 64, offset: 640)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !374, file: !375, line: 262, baseType: !195, size: 64, offset: 704)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !374, file: !375, line: 264, baseType: !390, size: 64, offset: 768)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !375, line: 160, size: 192, elements: !392)
!392 = !{!393, !394, !395}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !391, file: !375, line: 161, baseType: !390, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !391, file: !375, line: 162, baseType: !373, size: 64, offset: 64)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !391, file: !375, line: 166, baseType: !47, size: 32, offset: 128)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !374, file: !375, line: 266, baseType: !373, size: 64, offset: 832)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !374, file: !375, line: 268, baseType: !47, size: 32, offset: 896)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !374, file: !375, line: 272, baseType: !47, size: 32, offset: 928)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !374, file: !375, line: 274, baseType: !400, size: 64, offset: 960)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !122, line: 140, baseType: !175)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !374, file: !375, line: 278, baseType: !255, size: 16, offset: 1024)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !374, file: !375, line: 279, baseType: !403, size: 8, offset: 1040)
!403 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !374, file: !375, line: 280, baseType: !405, size: 8, offset: 1048)
!405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 8, elements: !406)
!406 = !{!407}
!407 = !DISubrange(count: 1)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !374, file: !375, line: 284, baseType: !409, size: 64, offset: 1088)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !375, line: 154, baseType: null)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !374, file: !375, line: 293, baseType: !412, size: 64, offset: 1152)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !122, line: 141, baseType: !175)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !374, file: !375, line: 301, baseType: !132, size: 64, offset: 1216)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !374, file: !375, line: 302, baseType: !132, size: 64, offset: 1280)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !374, file: !375, line: 303, baseType: !132, size: 64, offset: 1344)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !374, file: !375, line: 304, baseType: !132, size: 64, offset: 1408)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !374, file: !375, line: 306, baseType: !218, size: 64, offset: 1472)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !374, file: !375, line: 307, baseType: !47, size: 32, offset: 1536)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !374, file: !375, line: 309, baseType: !420, size: 160, offset: 1568)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 160, elements: !421)
!421 = !{!422}
!422 = !DISubrange(count: 20)
!423 = !DISubprogram(name: "getopt", scope: !424, file: !424, line: 91, type: !425, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!424 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/getopt_core.h", directory: "")
!425 = !DISubroutineType(types: !426)
!426 = !{!47, !47, !427, !302}
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!429 = !DISubprogram(name: "inet_pton", scope: !430, file: !430, line: 58, type: !431, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!430 = !DIFile(filename: "/usr/include/arpa/inet.h", directory: "")
!431 = !DISubroutineType(types: !432)
!432 = !{!47, !47, !302, !132}
!433 = !DISubprogram(name: "getrlimit", scope: !434, file: !434, line: 50, type: !435, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!434 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/resource.h", directory: "")
!435 = !DISubroutineType(types: !436)
!436 = !{!47, !47, !437}
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !25, line: 139, size: 128, elements: !439)
!439 = !{!440, !443}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !438, file: !25, line: 142, baseType: !441, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "rlim_t", file: !25, line: 131, baseType: !442)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "__rlim_t", file: !122, line: 145, baseType: !220)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !438, file: !25, line: 144, baseType: !441, size: 64, offset: 64)
!444 = !DISubprogram(name: "setrlimit", scope: !434, file: !434, line: 69, type: !445, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!445 = !DISubroutineType(types: !446)
!446 = !{!47, !47, !447}
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !438)
!449 = !DISubprogram(name: "getuid", scope: !350, file: !350, line: 678, type: !450, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!450 = !DISubroutineType(types: !451)
!451 = !{!7}
!452 = !DISubprogram(name: "geteuid", scope: !350, file: !350, line: 681, type: !450, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!453 = !DISubprogram(name: "getpwnam", scope: !454, file: !454, line: 115, type: !455, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!454 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!455 = !DISubroutineType(types: !456)
!456 = !{!457, !302}
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !454, line: 49, size: 384, elements: !459)
!459 = !{!460, !461, !462, !464, !466, !467, !468}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !458, file: !454, line: 51, baseType: !195, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !458, file: !454, line: 52, baseType: !195, size: 64, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !458, file: !454, line: 53, baseType: !463, size: 32, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !122, line: 134, baseType: !7)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !458, file: !454, line: 54, baseType: !465, size: 32, offset: 160)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !122, line: 135, baseType: !7)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !458, file: !454, line: 55, baseType: !195, size: 64, offset: 192)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !458, file: !454, line: 56, baseType: !195, size: 64, offset: 256)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !458, file: !454, line: 57, baseType: !195, size: 64, offset: 320)
!469 = !DISubprogram(name: "setgid", scope: !350, file: !350, line: 720, type: !470, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!470 = !DISubroutineType(types: !471)
!471 = !{!47, !7}
!472 = !DISubprogram(name: "setuid", scope: !350, file: !350, line: 703, type: !470, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!473 = !DISubprogram(name: "daemon", scope: !350, file: !350, line: 938, type: !358, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!474 = !DISubprogram(name: "event_init", scope: !313, file: !313, line: 75, type: !475, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!475 = !DISubroutineType(types: !476)
!476 = !{!156}
!477 = !DISubprogram(name: "assoc_init", scope: !478, file: !478, line: 5, type: !479, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!478 = !DIFile(filename: "assoc.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!479 = !DISubroutineType(types: !480)
!480 = !{!481, !276, !302}
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DICompositeType(tag: DW_TAG_structure_type, name: "pmemobjpool", file: !483, line: 67, flags: DIFlagFwdDecl)
!483 = !DIFile(filename: "../pmdk/src/include/libpmemobj/base.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!484 = !DISubprogram(name: "item_init", scope: !329, file: !329, line: 2, type: !485, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!485 = !DISubroutineType(types: !486)
!486 = !{null, !481}
!487 = !DISubprogram(name: "slabs_init", scope: !329, file: !329, line: 31, type: !488, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!488 = !DISubroutineType(types: !489)
!489 = !{null, !220, !490}
!490 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!491 = !DISubprogram(name: "mlockall", scope: !492, file: !492, line: 111, type: !351, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!492 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/mman.h", directory: "")
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !357, line: 72, baseType: !367)
!494 = !DISubprogram(name: "sigemptyset", scope: !357, file: !357, line: 196, type: !495, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!495 = !DISubroutineType(types: !496)
!496 = !{!47, !497}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !499, line: 5, size: 1024, elements: !500)
!499 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h", directory: "")
!500 = !{!501}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !498, file: !499, line: 7, baseType: !502, size: 1024)
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !220, size: 1024, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 16)
!505 = !DISubprogram(name: "sigaction", scope: !357, file: !357, line: 240, type: !506, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!506 = !DISubroutineType(types: !507)
!507 = !{!47, !47, !508, !601}
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !511, line: 24, size: 1216, elements: !512)
!511 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigaction.h", directory: "")
!512 = !{!513, !596, !598, !599}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "__sigaction_handler", scope: !510, file: !511, line: 35, baseType: !514, size: 64)
!514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !510, file: !511, line: 28, size: 64, elements: !515)
!515 = !{!516, !517}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !514, file: !511, line: 31, baseType: !493, size: 64)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "sa_sigaction", scope: !514, file: !511, line: 33, baseType: !518, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = !DISubroutineType(types: !520)
!520 = !{null, !47, !521, !132}
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "siginfo_t", file: !523, line: 124, baseType: !524)
!523 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/siginfo_t.h", directory: "")
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !523, line: 36, size: 1024, elements: !525)
!525 = !{!526, !527, !528, !529, !530}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !524, file: !523, line: 38, baseType: !47, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !524, file: !523, line: 40, baseType: !47, size: 32, offset: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !524, file: !523, line: 42, baseType: !47, size: 32, offset: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !524, file: !523, line: 48, baseType: !47, size: 32, offset: 96)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !524, file: !523, line: 123, baseType: !531, size: 896, offset: 128)
!531 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !524, file: !523, line: 51, size: 896, elements: !532)
!532 = !{!533, !537, !543, !555, !561, !570, !585, !590}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !531, file: !523, line: 53, baseType: !534, size: 896)
!534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 896, elements: !535)
!535 = !{!536}
!536 = !DISubrange(count: 28)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !531, file: !523, line: 60, baseType: !538, size: 64)
!538 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !523, line: 56, size: 64, elements: !539)
!539 = !{!540, !542}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !538, file: !523, line: 58, baseType: !541, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !122, line: 142, baseType: !47)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !538, file: !523, line: 59, baseType: !463, size: 32, offset: 32)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !531, file: !523, line: 68, baseType: !544, size: 128)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !523, line: 63, size: 128, elements: !545)
!545 = !{!546, !547, !548}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "si_tid", scope: !544, file: !523, line: 65, baseType: !47, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "si_overrun", scope: !544, file: !523, line: 66, baseType: !47, size: 32, offset: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !544, file: !523, line: 67, baseType: !549, size: 64, offset: 64)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigval_t", file: !550, line: 30, baseType: !551)
!550 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigval_t.h", directory: "")
!551 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !550, line: 24, size: 64, elements: !552)
!552 = !{!553, !554}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !551, file: !550, line: 26, baseType: !47, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !551, file: !550, line: 27, baseType: !132, size: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !531, file: !523, line: 76, baseType: !556, size: 128)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !523, line: 71, size: 128, elements: !557)
!557 = !{!558, !559, !560}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !556, file: !523, line: 73, baseType: !541, size: 32)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !556, file: !523, line: 74, baseType: !463, size: 32, offset: 32)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "si_sigval", scope: !556, file: !523, line: 75, baseType: !549, size: 64, offset: 64)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !531, file: !523, line: 86, baseType: !562, size: 256)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !523, line: 79, size: 256, elements: !563)
!563 = !{!564, !565, !566, !567, !569}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "si_pid", scope: !562, file: !523, line: 81, baseType: !541, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "si_uid", scope: !562, file: !523, line: 82, baseType: !463, size: 32, offset: 32)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "si_status", scope: !562, file: !523, line: 83, baseType: !47, size: 32, offset: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "si_utime", scope: !562, file: !523, line: 84, baseType: !568, size: 64, offset: 128)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "__clock_t", file: !122, line: 144, baseType: !175)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "si_stime", scope: !562, file: !523, line: 85, baseType: !568, size: 64, offset: 192)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !531, file: !523, line: 105, baseType: !571, size: 256)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !523, line: 89, size: 256, elements: !572)
!572 = !{!573, !574, !575}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr", scope: !571, file: !523, line: 91, baseType: !132, size: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "si_addr_lsb", scope: !571, file: !523, line: 93, baseType: !117, size: 16, offset: 64)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "_bounds", scope: !571, file: !523, line: 104, baseType: !576, size: 128, offset: 128)
!576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !571, file: !523, line: 94, size: 128, elements: !577)
!577 = !{!578, !583}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !576, file: !523, line: 101, baseType: !579, size: 128)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !576, file: !523, line: 97, size: 128, elements: !580)
!580 = !{!581, !582}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !579, file: !523, line: 99, baseType: !132, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !579, file: !523, line: 100, baseType: !132, size: 64, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !576, file: !523, line: 103, baseType: !584, size: 32)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !122, line: 41, baseType: !7)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !531, file: !523, line: 112, baseType: !586, size: 128)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !523, line: 108, size: 128, elements: !587)
!587 = !{!588, !589}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "si_band", scope: !586, file: !523, line: 110, baseType: !175, size: 64)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "si_fd", scope: !586, file: !523, line: 111, baseType: !47, size: 32, offset: 64)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !531, file: !523, line: 121, baseType: !591, size: 128)
!591 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !531, file: !523, line: 116, size: 128, elements: !592)
!592 = !{!593, !594, !595}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !591, file: !523, line: 118, baseType: !132, size: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !591, file: !523, line: 119, baseType: !47, size: 32, offset: 64)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !591, file: !523, line: 120, baseType: !7, size: 32, offset: 96)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !510, file: !511, line: 43, baseType: !597, size: 1024, offset: 64)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !499, line: 8, baseType: !498)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !510, file: !511, line: 46, baseType: !47, size: 32, offset: 1088)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !510, file: !511, line: 49, baseType: !600, size: 64, offset: 1152)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!602 = !DISubprogram(name: "thread_init", scope: !6, file: !6, line: 287, type: !603, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!603 = !DISubroutineType(types: !604)
!604 = !{null, !47, !156}
!605 = !DISubprogram(name: "dispatch_conn_new", scope: !6, file: !6, line: 289, type: !606, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!606 = !DISubroutineType(types: !607)
!607 = !{null, !47, !47, !47, !47, !47}
!608 = !DISubprogram(name: "event_base_loop", scope: !317, file: !317, line: 829, type: !609, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!609 = !DISubroutineType(types: !610)
!610 = !{!47, !156, !47}
!611 = !DISubprogram(name: "event_del", scope: !317, file: !317, line: 1256, type: !612, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!612 = !DISubroutineType(types: !613)
!613 = !{!47, !141}
!614 = !DISubprogram(name: "mt_is_listen_thread", scope: !6, file: !6, line: 299, type: !354, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!615 = !DISubprogram(name: "listen", scope: !616, file: !616, line: 222, type: !358, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!616 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/socket.h", directory: "")
!617 = !DISubprogram(name: "mt_item_remove", scope: !6, file: !6, line: 305, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!618 = !DISubprogram(name: "mt_suffix_add_to_freelist", scope: !6, file: !6, line: 297, type: !619, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!619 = !DISubroutineType(types: !620)
!620 = !{!276, !195}
!621 = !DISubprogram(name: "accept", scope: !616, file: !616, line: 232, type: !622, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!622 = !DISubroutineType(types: !623)
!623 = !{!47, !47, !624, !625}
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!626 = !DISubprogram(name: "fcntl", scope: !627, file: !627, line: 147, type: !628, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!627 = !DIFile(filename: "/usr/include/fcntl.h", directory: "")
!628 = !DISubroutineType(types: !629)
!629 = !{!47, !47, !47, null}
!630 = !DISubprogram(name: "read", scope: !350, file: !350, line: 363, type: !631, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!631 = !DISubroutineType(types: !632)
!632 = !{!175, !47, !132, !220}
!633 = !DISubprogram(name: "mt_item_flush_expired", scope: !6, file: !6, line: 302, type: !309, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!634 = !DISubprogram(name: "item_get", scope: !329, file: !329, line: 22, type: !337, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!635 = !DISubprogram(name: "mt_suffix_from_freelist", scope: !6, file: !6, line: 296, type: !636, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!636 = !DISubroutineType(types: !637)
!637 = !{!195}
!638 = !DISubprogram(name: "mt_item_update", scope: !6, file: !6, line: 310, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!639 = !DISubprogram(name: "mt_item_alloc", scope: !6, file: !6, line: 300, type: !343, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!640 = !DISubprogram(name: "item_size_ok", scope: !329, file: !329, line: 7, type: !641, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!641 = !DISubroutineType(types: !642)
!642 = !{!276, !220, !47, !47}
!643 = !DISubprogram(name: "mt_add_delta", scope: !6, file: !6, line: 292, type: !644, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!644 = !DISubroutineType(types: !645)
!645 = !{!195, !248, !47, !175, !195}
!646 = !DISubprogram(name: "mt_item_unlink", scope: !6, file: !6, line: 309, type: !334, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!647 = !DISubprogram(name: "mt_defer_delete", scope: !6, file: !6, line: 298, type: !648, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!648 = !DISubroutineType(types: !649)
!649 = !{!195, !248, !175}
!650 = !DISubprogram(name: "getrusage", scope: !434, file: !434, line: 87, type: !651, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!651 = !DISubroutineType(types: !652)
!652 = !{!47, !47, !653}
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rusage", file: !655, line: 31, size: 1152, elements: !656)
!655 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_rusage.h", directory: "")
!656 = !{!657, !658, !659, !665, !670, !675, !680, !685, !690, !695, !700, !705, !710, !715, !720, !725}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "ru_utime", scope: !654, file: !655, line: 34, baseType: !170, size: 128)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "ru_stime", scope: !654, file: !655, line: 36, baseType: !170, size: 128, offset: 128)
!659 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 38, baseType: !660, size: 64, offset: 256)
!660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 38, size: 64, elements: !661)
!661 = !{!662, !663}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "ru_maxrss", scope: !660, file: !655, line: 40, baseType: !175, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_maxrss_word", scope: !660, file: !655, line: 41, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !122, line: 184, baseType: !175)
!665 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 46, baseType: !666, size: 64, offset: 320)
!666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 46, size: 64, elements: !667)
!667 = !{!668, !669}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "ru_ixrss", scope: !666, file: !655, line: 48, baseType: !175, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_ixrss_word", scope: !666, file: !655, line: 49, baseType: !664, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 52, baseType: !671, size: 64, offset: 384)
!671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 52, size: 64, elements: !672)
!672 = !{!673, !674}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "ru_idrss", scope: !671, file: !655, line: 54, baseType: !175, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_idrss_word", scope: !671, file: !655, line: 55, baseType: !664, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 58, baseType: !676, size: 64, offset: 448)
!676 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 58, size: 64, elements: !677)
!677 = !{!678, !679}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "ru_isrss", scope: !676, file: !655, line: 60, baseType: !175, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_isrss_word", scope: !676, file: !655, line: 61, baseType: !664, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 65, baseType: !681, size: 64, offset: 512)
!681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 65, size: 64, elements: !682)
!682 = !{!683, !684}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "ru_minflt", scope: !681, file: !655, line: 67, baseType: !175, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_minflt_word", scope: !681, file: !655, line: 68, baseType: !664, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 71, baseType: !686, size: 64, offset: 576)
!686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 71, size: 64, elements: !687)
!687 = !{!688, !689}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "ru_majflt", scope: !686, file: !655, line: 73, baseType: !175, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_majflt_word", scope: !686, file: !655, line: 74, baseType: !664, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 77, baseType: !691, size: 64, offset: 640)
!691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 77, size: 64, elements: !692)
!692 = !{!693, !694}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nswap", scope: !691, file: !655, line: 79, baseType: !175, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nswap_word", scope: !691, file: !655, line: 80, baseType: !664, size: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 84, baseType: !696, size: 64, offset: 704)
!696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 84, size: 64, elements: !697)
!697 = !{!698, !699}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "ru_inblock", scope: !696, file: !655, line: 86, baseType: !175, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_inblock_word", scope: !696, file: !655, line: 87, baseType: !664, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 90, baseType: !701, size: 64, offset: 768)
!701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 90, size: 64, elements: !702)
!702 = !{!703, !704}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "ru_oublock", scope: !701, file: !655, line: 92, baseType: !175, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_oublock_word", scope: !701, file: !655, line: 93, baseType: !664, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 96, baseType: !706, size: 64, offset: 832)
!706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 96, size: 64, elements: !707)
!707 = !{!708, !709}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "ru_msgsnd", scope: !706, file: !655, line: 98, baseType: !175, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_msgsnd_word", scope: !706, file: !655, line: 99, baseType: !664, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 102, baseType: !711, size: 64, offset: 896)
!711 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 102, size: 64, elements: !712)
!712 = !{!713, !714}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "ru_msgrcv", scope: !711, file: !655, line: 104, baseType: !175, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_msgrcv_word", scope: !711, file: !655, line: 105, baseType: !664, size: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 108, baseType: !716, size: 64, offset: 960)
!716 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 108, size: 64, elements: !717)
!717 = !{!718, !719}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nsignals", scope: !716, file: !655, line: 110, baseType: !175, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nsignals_word", scope: !716, file: !655, line: 111, baseType: !664, size: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 116, baseType: !721, size: 64, offset: 1024)
!721 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 116, size: 64, elements: !722)
!722 = !{!723, !724}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nvcsw", scope: !721, file: !655, line: 118, baseType: !175, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nvcsw_word", scope: !721, file: !655, line: 119, baseType: !664, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, scope: !654, file: !655, line: 123, baseType: !726, size: 64, offset: 1088)
!726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !654, file: !655, line: 123, size: 64, elements: !727)
!727 = !{!728, !729}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "ru_nivcsw", scope: !726, file: !655, line: 125, baseType: !175, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "__ru_nivcsw_word", scope: !726, file: !655, line: 126, baseType: !664, size: 64)
!730 = !DISubprogram(name: "mallinfo", scope: !305, file: !305, line: 99, type: !731, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!731 = !DISubroutineType(types: !732)
!732 = !{!733}
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mallinfo", file: !305, line: 84, size: 320, elements: !734)
!734 = !{!735, !736, !737, !738, !739, !740, !741, !742, !743, !744}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !733, file: !305, line: 86, baseType: !47, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "ordblks", scope: !733, file: !305, line: 87, baseType: !47, size: 32, offset: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "smblks", scope: !733, file: !305, line: 88, baseType: !47, size: 32, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "hblks", scope: !733, file: !305, line: 89, baseType: !47, size: 32, offset: 96)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "hblkhd", scope: !733, file: !305, line: 90, baseType: !47, size: 32, offset: 128)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "usmblks", scope: !733, file: !305, line: 91, baseType: !47, size: 32, offset: 160)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "fsmblks", scope: !733, file: !305, line: 92, baseType: !47, size: 32, offset: 192)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "uordblks", scope: !733, file: !305, line: 93, baseType: !47, size: 32, offset: 224)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "fordblks", scope: !733, file: !305, line: 94, baseType: !47, size: 32, offset: 256)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "keepcost", scope: !733, file: !305, line: 95, baseType: !47, size: 32, offset: 288)
!745 = !DISubprogram(name: "open", scope: !627, file: !627, line: 157, type: !746, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!746 = !DISubroutineType(types: !747)
!747 = !{!47, !302, !47, null}
!748 = !DISubprogram(name: "mt_item_cachedump", scope: !6, file: !6, line: 301, type: !749, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!749 = !DISubroutineType(types: !750)
!750 = !{!195, !7, !7, !625}
!751 = !DISubprogram(name: "mt_item_stats", scope: !6, file: !6, line: 307, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!752 = !DISubroutineType(types: !753)
!753 = !{!195, !754}
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!755 = !DISubprogram(name: "mt_item_stats_sizes", scope: !6, file: !6, line: 308, type: !752, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!756 = !DISubprogram(name: "time", scope: !757, file: !757, line: 75, type: !758, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!757 = !DIFile(filename: "/usr/include/time.h", directory: "")
!758 = !DISubroutineType(types: !759)
!759 = !{!175, !760}
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!761 = !DISubprogram(name: "recvfrom", scope: !616, file: !616, line: 163, type: !762, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!762 = !DISubroutineType(types: !763)
!763 = !{!175, !47, !132, !220, !47, !624, !625}
!764 = !DISubprogram(name: "mt_store_item", scope: !6, file: !6, line: 318, type: !765, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!765 = !DISubroutineType(types: !766)
!766 = !{!47, !248, !47}
!767 = !DISubprogram(name: "sendmsg", scope: !616, file: !616, line: 173, type: !768, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!768 = !DISubroutineType(types: !769)
!769 = !{!175, !47, !770, !47}
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !225)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !52, line: 30, baseType: !773)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !120, line: 26, baseType: !584)
!774 = !DISubprogram(name: "setsockopt", scope: !616, file: !616, line: 215, type: !775, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!775 = !DISubroutineType(types: !776)
!776 = !{!47, !47, !47, !47, !777, !7}
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!779 = !DISubprogram(name: "bind", scope: !616, file: !616, line: 112, type: !780, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!780 = !DISubroutineType(types: !781)
!781 = !{!47, !47, !782, !7}
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !279)
!784 = !DISubprogram(name: "socket", scope: !616, file: !616, line: 102, type: !785, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!785 = !DISubroutineType(types: !786)
!786 = !{!47, !47, !47, !47}
!787 = !DISubprogram(name: "getsockopt", scope: !616, file: !616, line: 208, type: !788, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!788 = !DISubroutineType(types: !789)
!789 = !{!47, !47, !47, !47, !132, !625}
!790 = !DISubprogram(name: "unlink", scope: !350, file: !350, line: 828, type: !791, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!791 = !DISubroutineType(types: !792)
!792 = !{!47, !302}
!793 = !DISubprogram(name: "umask", scope: !794, file: !794, line: 308, type: !795, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!794 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!795 = !DISubroutineType(types: !796)
!796 = !{!7, !7}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!798 = !DISubprogram(name: "fclose", scope: !299, file: !299, line: 199, type: !799, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!799 = !DISubroutineType(types: !800)
!800 = !{!47, !373}
!801 = !DISubprogram(name: "mt_run_deferred_deletes", scope: !6, file: !6, line: 311, type: !309, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !295)
!802 = !{!803, !806, !0, !808, !831, !833, !835, !837, !839, !841, !843, !845, !847, !849, !851, !854, !856, !858, !860, !862, !874, !876, !884}
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "trace", scope: !2, file: !805, line: 2366, type: !276, isLocal: false, isDefinition: true)
!805 = !DIFile(filename: "memcached.c", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!806 = !DIGlobalVariableExpression(var: !807, expr: !DIExpression())
!807 = distinct !DIGlobalVariable(name: "n_drv_mc", scope: !2, file: !805, line: 2367, type: !47, isLocal: false, isDefinition: true)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "settings", scope: !2, file: !805, line: 119, type: !810, isLocal: false, isDefinition: true)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "settings", file: !6, line: 94, size: 640, elements: !811)
!811 = !{!812, !813, !814, !815, !816, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "maxbytes", scope: !810, file: !6, line: 95, baseType: !218, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "maxconns", scope: !810, file: !6, line: 96, baseType: !47, size: 32, offset: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !810, file: !6, line: 97, baseType: !47, size: 32, offset: 96)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "udpport", scope: !810, file: !6, line: 98, baseType: !47, size: 32, offset: 128)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "interf", scope: !810, file: !6, line: 99, baseType: !817, size: 32, offset: 160)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !52, line: 31, size: 32, elements: !818)
!818 = !{!819}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !817, file: !52, line: 33, baseType: !772, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !810, file: !6, line: 100, baseType: !47, size: 32, offset: 192)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "oldest_live", scope: !810, file: !6, line: 101, baseType: !93, size: 32, offset: 224)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "managed", scope: !810, file: !6, line: 102, baseType: !276, size: 8, offset: 256)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "evict_to_free", scope: !810, file: !6, line: 103, baseType: !47, size: 32, offset: 288)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "socketpath", scope: !810, file: !6, line: 104, baseType: !195, size: 64, offset: 320)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !810, file: !6, line: 105, baseType: !47, size: 32, offset: 384)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "factor", scope: !810, file: !6, line: 106, baseType: !490, size: 64, offset: 448)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !810, file: !6, line: 107, baseType: !47, size: 32, offset: 512)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "num_threads", scope: !810, file: !6, line: 108, baseType: !47, size: 32, offset: 544)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_delimiter", scope: !810, file: !6, line: 109, baseType: !196, size: 8, offset: 576)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "detail_enabled", scope: !810, file: !6, line: 110, baseType: !47, size: 32, offset: 608)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "delcurr", scope: !2, file: !805, line: 123, type: !47, isLocal: true, isDefinition: true)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "deltotal", scope: !2, file: !805, line: 124, type: !47, isLocal: true, isDefinition: true)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "listen_conn", scope: !2, file: !805, line: 125, type: !296, isLocal: true, isDefinition: true)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "main_base", scope: !2, file: !805, line: 126, type: !156, isLocal: true, isDefinition: true)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "freeconns", scope: !2, file: !805, line: 259, type: !797, isLocal: true, isDefinition: true)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "freetotal", scope: !2, file: !805, line: 260, type: !47, isLocal: true, isDefinition: true)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "freecurr", scope: !2, file: !805, line: 261, type: !47, isLocal: true, isDefinition: true)
!845 = !DIGlobalVariableExpression(var: !846, expr: !DIExpression())
!846 = distinct !DIGlobalVariable(name: "freesuffix", scope: !2, file: !805, line: 569, type: !271, isLocal: true, isDefinition: true)
!847 = !DIGlobalVariableExpression(var: !848, expr: !DIExpression())
!848 = distinct !DIGlobalVariable(name: "freesuffixtotal", scope: !2, file: !805, line: 570, type: !47, isLocal: true, isDefinition: true)
!849 = !DIGlobalVariableExpression(var: !850, expr: !DIExpression())
!850 = distinct !DIGlobalVariable(name: "freesuffixcurr", scope: !2, file: !805, line: 571, type: !47, isLocal: true, isDefinition: true)
!851 = !DIGlobalVariableExpression(var: !852, expr: !DIExpression())
!852 = distinct !DIGlobalVariable(name: "current_time", scope: !2, file: !805, line: 2600, type: !853, isLocal: false, isDefinition: true)
!853 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !93)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "todelete", scope: !2, file: !805, line: 122, type: !242, isLocal: true, isDefinition: true)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "l_socket", scope: !2, file: !805, line: 2577, type: !47, isLocal: true, isDefinition: true)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "u_socket", scope: !2, file: !805, line: 2580, type: !47, isLocal: true, isDefinition: true)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "buckets", scope: !2, file: !805, line: 133, type: !754, isLocal: true, isDefinition: true)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "initialized", scope: !864, file: !805, line: 2611, type: !276, isLocal: true, isDefinition: true)
!864 = distinct !DISubprogram(name: "clock_handler", scope: !805, file: !805, line: 2609, type: !865, scopeLine: 2609, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !869)
!865 = !DISubroutineType(types: !866)
!866 = !{null, !867, !868, !132}
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !47)
!868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!869 = !{!870, !871, !872, !873}
!870 = !DILocalVariable(name: "fd", arg: 1, scope: !864, file: !805, line: 2609, type: !867)
!871 = !DILocalVariable(name: "which", arg: 2, scope: !864, file: !805, line: 2609, type: !868)
!872 = !DILocalVariable(name: "arg", arg: 3, scope: !864, file: !805, line: 2609, type: !132)
!873 = !DILocalVariable(name: "t", scope: !864, file: !805, line: 2610, type: !170)
!874 = !DIGlobalVariableExpression(var: !875, expr: !DIExpression())
!875 = distinct !DIGlobalVariable(name: "clockevent", scope: !2, file: !805, line: 2599, type: !103, isLocal: true, isDefinition: true)
!876 = !DIGlobalVariableExpression(var: !877, expr: !DIExpression())
!877 = distinct !DIGlobalVariable(name: "initialized", scope: !878, file: !805, line: 2631, type: !276, isLocal: true, isDefinition: true)
!878 = distinct !DISubprogram(name: "delete_handler", scope: !805, file: !805, line: 2629, type: !865, scopeLine: 2629, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !879)
!879 = !{!880, !881, !882, !883}
!880 = !DILocalVariable(name: "fd", arg: 1, scope: !878, file: !805, line: 2629, type: !867)
!881 = !DILocalVariable(name: "which", arg: 2, scope: !878, file: !805, line: 2629, type: !868)
!882 = !DILocalVariable(name: "arg", arg: 3, scope: !878, file: !805, line: 2629, type: !132)
!883 = !DILocalVariable(name: "t", scope: !878, file: !805, line: 2630, type: !170)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "deleteevent", scope: !2, file: !805, line: 2627, type: !103, isLocal: true, isDefinition: true)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stats", file: !6, line: 75, size: 768, elements: !887)
!887 = !{!888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !902, !903}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "curr_items", scope: !886, file: !6, line: 76, baseType: !7, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "total_items", scope: !886, file: !6, line: 77, baseType: !7, size: 32, offset: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "curr_bytes", scope: !886, file: !6, line: 78, baseType: !261, size: 64, offset: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "curr_conns", scope: !886, file: !6, line: 79, baseType: !7, size: 32, offset: 128)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "total_conns", scope: !886, file: !6, line: 80, baseType: !7, size: 32, offset: 160)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "conn_structs", scope: !886, file: !6, line: 81, baseType: !7, size: 32, offset: 192)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "get_cmds", scope: !886, file: !6, line: 82, baseType: !261, size: 64, offset: 256)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "set_cmds", scope: !886, file: !6, line: 83, baseType: !261, size: 64, offset: 320)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "get_hits", scope: !886, file: !6, line: 84, baseType: !261, size: 64, offset: 384)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "get_misses", scope: !886, file: !6, line: 85, baseType: !261, size: 64, offset: 448)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "evictions", scope: !886, file: !6, line: 86, baseType: !261, size: 64, offset: 512)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !886, file: !6, line: 87, baseType: !900, size: 64, offset: 576)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !901, line: 7, baseType: !174)
!901 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!902 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_read", scope: !886, file: !6, line: 88, baseType: !261, size: 64, offset: 640)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_written", scope: !886, file: !6, line: 89, baseType: !261, size: 64, offset: 704)
!904 = !{i32 7, !"Dwarf Version", i32 4}
!905 = !{i32 2, !"Debug Info Version", i32 3}
!906 = !{i32 1, !"wchar_size", i32 4}
!907 = !{!"clang version 11.0.0 (https://github.com/hjjq/LLVM-Pavise.git 3d210af9293f24d5e7772804ba7d1c4b26f9bb1a)"}
!908 = distinct !DISubprogram(name: "realtime", scope: !805, file: !805, line: 143, type: !909, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !912)
!909 = !DISubroutineType(types: !910)
!910 = !{!93, !911}
!911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !900)
!912 = !{!913}
!913 = !DILocalVariable(name: "exptime", arg: 1, scope: !908, file: !805, line: 143, type: !911)
!914 = !{!915, !915, i64 0}
!915 = !{!"long", !916, i64 0}
!916 = !{!"omnipotent char", !917, i64 0}
!917 = !{!"Simple C/C++ TBAA"}
!918 = !DILocation(line: 143, column: 34, scope: !908)
!919 = !DILocation(line: 146, column: 9, scope: !920)
!920 = distinct !DILexicalBlock(scope: !908, file: !805, line: 146, column: 9)
!921 = !DILocation(line: 146, column: 17, scope: !920)
!922 = !DILocation(line: 146, column: 9, scope: !908)
!923 = !DILocation(line: 146, column: 23, scope: !920)
!924 = !DILocation(line: 148, column: 9, scope: !925)
!925 = distinct !DILexicalBlock(scope: !908, file: !805, line: 148, column: 9)
!926 = !DILocation(line: 148, column: 17, scope: !925)
!927 = !DILocation(line: 148, column: 9, scope: !908)
!928 = !DILocation(line: 155, column: 13, scope: !929)
!929 = distinct !DILexicalBlock(scope: !930, file: !805, line: 155, column: 13)
!930 = distinct !DILexicalBlock(scope: !925, file: !805, line: 148, column: 38)
!931 = !DILocation(line: 155, column: 30, scope: !929)
!932 = !{!933, !915, i64 72}
!933 = !{!"stats", !934, i64 0, !934, i64 4, !915, i64 8, !934, i64 16, !934, i64 20, !934, i64 24, !915, i64 32, !915, i64 40, !915, i64 48, !915, i64 56, !915, i64 64, !915, i64 72, !915, i64 80, !915, i64 88}
!934 = !{!"int", !916, i64 0}
!935 = !DILocation(line: 155, column: 21, scope: !929)
!936 = !DILocation(line: 155, column: 13, scope: !930)
!937 = !DILocation(line: 156, column: 13, scope: !929)
!938 = !DILocation(line: 157, column: 29, scope: !930)
!939 = !DILocation(line: 157, column: 45, scope: !930)
!940 = !DILocation(line: 157, column: 37, scope: !930)
!941 = !DILocation(line: 157, column: 16, scope: !930)
!942 = !DILocation(line: 157, column: 9, scope: !930)
!943 = !DILocation(line: 159, column: 29, scope: !944)
!944 = distinct !DILexicalBlock(scope: !925, file: !805, line: 158, column: 12)
!945 = !DILocation(line: 159, column: 39, scope: !944)
!946 = !{!934, !934, i64 0}
!947 = !DILocation(line: 159, column: 37, scope: !944)
!948 = !DILocation(line: 159, column: 16, scope: !944)
!949 = !DILocation(line: 159, column: 9, scope: !944)
!950 = !DILocation(line: 161, column: 1, scope: !908)
!951 = distinct !DISubprogram(name: "do_conn_from_freelist", scope: !805, file: !805, line: 277, type: !952, scopeLine: 277, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !954)
!952 = !DISubroutineType(types: !953)
!953 = !{!296}
!954 = !{!955}
!955 = !DILocalVariable(name: "c", scope: !951, file: !805, line: 278, type: !296)
!956 = !DILocation(line: 278, column: 5, scope: !951)
!957 = !DILocation(line: 278, column: 11, scope: !951)
!958 = !DILocation(line: 280, column: 9, scope: !959)
!959 = distinct !DILexicalBlock(scope: !951, file: !805, line: 280, column: 9)
!960 = !DILocation(line: 280, column: 18, scope: !959)
!961 = !DILocation(line: 280, column: 9, scope: !951)
!962 = !DILocation(line: 281, column: 13, scope: !963)
!963 = distinct !DILexicalBlock(scope: !959, file: !805, line: 280, column: 23)
!964 = !{!965, !965, i64 0}
!965 = !{!"any pointer", !916, i64 0}
!966 = !DILocation(line: 281, column: 23, scope: !963)
!967 = !DILocation(line: 281, column: 11, scope: !963)
!968 = !DILocation(line: 282, column: 5, scope: !963)
!969 = !DILocation(line: 283, column: 11, scope: !970)
!970 = distinct !DILexicalBlock(scope: !959, file: !805, line: 282, column: 12)
!971 = !DILocation(line: 286, column: 12, scope: !951)
!972 = !DILocation(line: 287, column: 1, scope: !951)
!973 = !DILocation(line: 286, column: 5, scope: !951)
!974 = distinct !DISubprogram(name: "do_conn_add_to_freelist", scope: !805, file: !805, line: 293, type: !975, scopeLine: 293, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !977)
!975 = !DISubroutineType(types: !976)
!976 = !{!276, !296}
!977 = !{!978, !979}
!978 = !DILocalVariable(name: "c", arg: 1, scope: !974, file: !805, line: 293, type: !296)
!979 = !DILocalVariable(name: "new_freeconns", scope: !980, file: !805, line: 299, type: !797)
!980 = distinct !DILexicalBlock(scope: !981, file: !805, line: 297, column: 12)
!981 = distinct !DILexicalBlock(scope: !974, file: !805, line: 294, column: 9)
!982 = !DILocation(line: 293, column: 36, scope: !974)
!983 = !DILocation(line: 294, column: 9, scope: !981)
!984 = !DILocation(line: 294, column: 20, scope: !981)
!985 = !DILocation(line: 294, column: 18, scope: !981)
!986 = !DILocation(line: 294, column: 9, scope: !974)
!987 = !DILocation(line: 295, column: 33, scope: !988)
!988 = distinct !DILexicalBlock(scope: !981, file: !805, line: 294, column: 31)
!989 = !DILocation(line: 295, column: 9, scope: !988)
!990 = !DILocation(line: 295, column: 27, scope: !988)
!991 = !DILocation(line: 295, column: 31, scope: !988)
!992 = !DILocation(line: 296, column: 9, scope: !988)
!993 = !DILocation(line: 299, column: 9, scope: !980)
!994 = !DILocation(line: 299, column: 16, scope: !980)
!995 = !DILocation(line: 299, column: 40, scope: !980)
!996 = !DILocation(line: 299, column: 68, scope: !980)
!997 = !DILocation(line: 299, column: 66, scope: !980)
!998 = !DILocation(line: 299, column: 78, scope: !980)
!999 = !DILocation(line: 299, column: 32, scope: !980)
!1000 = !DILocation(line: 300, column: 13, scope: !1001)
!1001 = distinct !DILexicalBlock(scope: !980, file: !805, line: 300, column: 13)
!1002 = !DILocation(line: 300, column: 13, scope: !980)
!1003 = !DILocation(line: 301, column: 23, scope: !1004)
!1004 = distinct !DILexicalBlock(scope: !1001, file: !805, line: 300, column: 28)
!1005 = !DILocation(line: 302, column: 25, scope: !1004)
!1006 = !DILocation(line: 302, column: 23, scope: !1004)
!1007 = !DILocation(line: 303, column: 37, scope: !1004)
!1008 = !DILocation(line: 303, column: 13, scope: !1004)
!1009 = !DILocation(line: 303, column: 31, scope: !1004)
!1010 = !DILocation(line: 303, column: 35, scope: !1004)
!1011 = !DILocation(line: 304, column: 13, scope: !1004)
!1012 = !DILocation(line: 306, column: 5, scope: !981)
!1013 = !DILocation(line: 307, column: 5, scope: !974)
!1014 = !DILocation(line: 308, column: 1, scope: !974)
!1015 = distinct !DISubprogram(name: "conn_new", scope: !805, file: !805, line: 310, type: !1016, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1019)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!296, !867, !867, !867, !867, !1018, !156}
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !276)
!1019 = !{!1020, !1021, !1022, !1023, !1024, !1025, !1026}
!1020 = !DILocalVariable(name: "sfd", arg: 1, scope: !1015, file: !805, line: 310, type: !867)
!1021 = !DILocalVariable(name: "init_state", arg: 2, scope: !1015, file: !805, line: 310, type: !867)
!1022 = !DILocalVariable(name: "event_flags", arg: 3, scope: !1015, file: !805, line: 310, type: !867)
!1023 = !DILocalVariable(name: "read_buffer_size", arg: 4, scope: !1015, file: !805, line: 311, type: !867)
!1024 = !DILocalVariable(name: "is_udp", arg: 5, scope: !1015, file: !805, line: 311, type: !1018)
!1025 = !DILocalVariable(name: "base", arg: 6, scope: !1015, file: !805, line: 311, type: !156)
!1026 = !DILocalVariable(name: "c", scope: !1015, file: !805, line: 312, type: !296)
!1027 = !DILocation(line: 310, column: 26, scope: !1015)
!1028 = !DILocation(line: 310, column: 41, scope: !1015)
!1029 = !DILocation(line: 310, column: 63, scope: !1015)
!1030 = !DILocation(line: 311, column: 27, scope: !1015)
!1031 = !{!1032, !1032, i64 0}
!1032 = !{!"_Bool", !916, i64 0}
!1033 = !DILocation(line: 311, column: 56, scope: !1015)
!1034 = !DILocation(line: 311, column: 83, scope: !1015)
!1035 = !DILocation(line: 312, column: 5, scope: !1015)
!1036 = !DILocation(line: 312, column: 11, scope: !1015)
!1037 = !DILocation(line: 312, column: 15, scope: !1015)
!1038 = !DILocation(line: 314, column: 17, scope: !1039)
!1039 = distinct !DILexicalBlock(scope: !1015, file: !805, line: 314, column: 9)
!1040 = !DILocation(line: 314, column: 14, scope: !1039)
!1041 = !DILocation(line: 314, column: 9, scope: !1015)
!1042 = !DILocation(line: 315, column: 27, scope: !1043)
!1043 = distinct !DILexicalBlock(scope: !1044, file: !805, line: 315, column: 13)
!1044 = distinct !DILexicalBlock(scope: !1039, file: !805, line: 314, column: 20)
!1045 = !DILocation(line: 315, column: 19, scope: !1043)
!1046 = !DILocation(line: 315, column: 17, scope: !1043)
!1047 = !DILocation(line: 315, column: 13, scope: !1044)
!1048 = !DILocation(line: 316, column: 13, scope: !1049)
!1049 = distinct !DILexicalBlock(scope: !1043, file: !805, line: 315, column: 50)
!1050 = !DILocation(line: 317, column: 13, scope: !1049)
!1051 = !DILocation(line: 319, column: 19, scope: !1044)
!1052 = !DILocation(line: 319, column: 22, scope: !1044)
!1053 = !DILocation(line: 319, column: 27, scope: !1044)
!1054 = !{!1055, !965, i64 168}
!1055 = !{!"", !934, i64 0, !934, i64 4, !1056, i64 8, !1059, i64 136, !1059, i64 138, !965, i64 144, !965, i64 152, !934, i64 160, !934, i64 164, !965, i64 168, !965, i64 176, !934, i64 184, !934, i64 188, !934, i64 192, !965, i64 200, !965, i64 208, !934, i64 216, !965, i64 224, !934, i64 232, !934, i64 236, !965, i64 240, !934, i64 248, !934, i64 252, !965, i64 256, !934, i64 264, !934, i64 268, !934, i64 272, !934, i64 276, !965, i64 280, !934, i64 288, !965, i64 296, !934, i64 304, !965, i64 312, !934, i64 320, !965, i64 328, !934, i64 336, !1032, i64 340, !934, i64 344, !1061, i64 348, !934, i64 364, !965, i64 368, !934, i64 376, !934, i64 380, !934, i64 384, !934, i64 388}
!1056 = !{!"event", !1057, i64 0, !916, i64 40, !934, i64 56, !965, i64 64, !916, i64 72, !1059, i64 104, !1059, i64 106, !1060, i64 112}
!1057 = !{!"event_callback", !1058, i64 0, !1059, i64 16, !916, i64 18, !916, i64 19, !916, i64 24, !965, i64 32}
!1058 = !{!"", !965, i64 0, !965, i64 8}
!1059 = !{!"short", !916, i64 0}
!1060 = !{!"timeval", !915, i64 0, !915, i64 8}
!1061 = !{!"sockaddr", !1059, i64 0, !916, i64 2}
!1062 = !DILocation(line: 319, column: 9, scope: !1044)
!1063 = !DILocation(line: 319, column: 12, scope: !1044)
!1064 = !DILocation(line: 319, column: 17, scope: !1044)
!1065 = !{!1055, !965, i64 144}
!1066 = !DILocation(line: 320, column: 9, scope: !1044)
!1067 = !DILocation(line: 320, column: 12, scope: !1044)
!1068 = !DILocation(line: 320, column: 18, scope: !1044)
!1069 = !{!1055, !965, i64 280}
!1070 = !DILocation(line: 321, column: 9, scope: !1044)
!1071 = !DILocation(line: 321, column: 12, scope: !1044)
!1072 = !DILocation(line: 321, column: 23, scope: !1044)
!1073 = !{!1055, !965, i64 312}
!1074 = !DILocation(line: 322, column: 9, scope: !1044)
!1075 = !DILocation(line: 322, column: 12, scope: !1044)
!1076 = !DILocation(line: 322, column: 16, scope: !1044)
!1077 = !{!1055, !965, i64 240}
!1078 = !DILocation(line: 323, column: 9, scope: !1044)
!1079 = !DILocation(line: 323, column: 12, scope: !1044)
!1080 = !DILocation(line: 323, column: 20, scope: !1044)
!1081 = !{!1055, !965, i64 256}
!1082 = !DILocation(line: 324, column: 9, scope: !1044)
!1083 = !DILocation(line: 324, column: 12, scope: !1044)
!1084 = !DILocation(line: 324, column: 19, scope: !1044)
!1085 = !{!1055, !965, i64 368}
!1086 = !DILocation(line: 326, column: 20, scope: !1044)
!1087 = !DILocation(line: 326, column: 9, scope: !1044)
!1088 = !DILocation(line: 326, column: 12, scope: !1044)
!1089 = !DILocation(line: 326, column: 18, scope: !1044)
!1090 = !{!1055, !934, i64 160}
!1091 = !DILocation(line: 327, column: 9, scope: !1044)
!1092 = !DILocation(line: 327, column: 12, scope: !1044)
!1093 = !DILocation(line: 327, column: 18, scope: !1044)
!1094 = !{!1055, !934, i64 184}
!1095 = !DILocation(line: 328, column: 9, scope: !1044)
!1096 = !DILocation(line: 328, column: 12, scope: !1044)
!1097 = !DILocation(line: 328, column: 18, scope: !1044)
!1098 = !{!1055, !934, i64 288}
!1099 = !DILocation(line: 329, column: 9, scope: !1044)
!1100 = !DILocation(line: 329, column: 12, scope: !1044)
!1101 = !DILocation(line: 329, column: 23, scope: !1044)
!1102 = !{!1055, !934, i64 320}
!1103 = !DILocation(line: 330, column: 9, scope: !1044)
!1104 = !DILocation(line: 330, column: 12, scope: !1044)
!1105 = !DILocation(line: 330, column: 20, scope: !1044)
!1106 = !{!1055, !934, i64 248}
!1107 = !DILocation(line: 331, column: 9, scope: !1044)
!1108 = !DILocation(line: 331, column: 12, scope: !1044)
!1109 = !DILocation(line: 331, column: 20, scope: !1044)
!1110 = !{!1055, !934, i64 264}
!1111 = !DILocation(line: 332, column: 9, scope: !1044)
!1112 = !DILocation(line: 332, column: 12, scope: !1044)
!1113 = !DILocation(line: 332, column: 20, scope: !1044)
!1114 = !{!1055, !934, i64 376}
!1115 = !DILocation(line: 334, column: 42, scope: !1044)
!1116 = !DILocation(line: 334, column: 45, scope: !1044)
!1117 = !DILocation(line: 334, column: 34, scope: !1044)
!1118 = !DILocation(line: 334, column: 27, scope: !1044)
!1119 = !DILocation(line: 334, column: 9, scope: !1044)
!1120 = !DILocation(line: 334, column: 12, scope: !1044)
!1121 = !DILocation(line: 334, column: 17, scope: !1044)
!1122 = !DILocation(line: 335, column: 42, scope: !1044)
!1123 = !DILocation(line: 335, column: 45, scope: !1044)
!1124 = !DILocation(line: 335, column: 34, scope: !1044)
!1125 = !DILocation(line: 335, column: 27, scope: !1044)
!1126 = !DILocation(line: 335, column: 9, scope: !1044)
!1127 = !DILocation(line: 335, column: 12, scope: !1044)
!1128 = !DILocation(line: 335, column: 17, scope: !1044)
!1129 = !DILocation(line: 336, column: 53, scope: !1044)
!1130 = !DILocation(line: 336, column: 56, scope: !1044)
!1131 = !DILocation(line: 336, column: 51, scope: !1044)
!1132 = !DILocation(line: 336, column: 29, scope: !1044)
!1133 = !DILocation(line: 336, column: 20, scope: !1044)
!1134 = !DILocation(line: 336, column: 9, scope: !1044)
!1135 = !DILocation(line: 336, column: 12, scope: !1044)
!1136 = !DILocation(line: 336, column: 18, scope: !1044)
!1137 = !DILocation(line: 337, column: 58, scope: !1044)
!1138 = !DILocation(line: 337, column: 61, scope: !1044)
!1139 = !DILocation(line: 337, column: 56, scope: !1044)
!1140 = !DILocation(line: 337, column: 34, scope: !1044)
!1141 = !DILocation(line: 337, column: 25, scope: !1044)
!1142 = !DILocation(line: 337, column: 9, scope: !1044)
!1143 = !DILocation(line: 337, column: 12, scope: !1044)
!1144 = !DILocation(line: 337, column: 23, scope: !1044)
!1145 = !DILocation(line: 338, column: 64, scope: !1044)
!1146 = !DILocation(line: 338, column: 67, scope: !1044)
!1147 = !DILocation(line: 338, column: 62, scope: !1044)
!1148 = !DILocation(line: 338, column: 34, scope: !1044)
!1149 = !DILocation(line: 338, column: 18, scope: !1044)
!1150 = !DILocation(line: 338, column: 9, scope: !1044)
!1151 = !DILocation(line: 338, column: 12, scope: !1044)
!1152 = !DILocation(line: 338, column: 16, scope: !1044)
!1153 = !DILocation(line: 339, column: 70, scope: !1044)
!1154 = !DILocation(line: 339, column: 73, scope: !1044)
!1155 = !DILocation(line: 339, column: 68, scope: !1044)
!1156 = !DILocation(line: 339, column: 39, scope: !1044)
!1157 = !DILocation(line: 339, column: 22, scope: !1044)
!1158 = !DILocation(line: 339, column: 9, scope: !1044)
!1159 = !DILocation(line: 339, column: 12, scope: !1044)
!1160 = !DILocation(line: 339, column: 20, scope: !1044)
!1161 = !DILocation(line: 341, column: 13, scope: !1162)
!1162 = distinct !DILexicalBlock(scope: !1044, file: !805, line: 341, column: 13)
!1163 = !DILocation(line: 341, column: 16, scope: !1162)
!1164 = !DILocation(line: 341, column: 21, scope: !1162)
!1165 = !DILocation(line: 341, column: 26, scope: !1162)
!1166 = !DILocation(line: 341, column: 29, scope: !1162)
!1167 = !DILocation(line: 341, column: 32, scope: !1162)
!1168 = !DILocation(line: 341, column: 37, scope: !1162)
!1169 = !DILocation(line: 341, column: 42, scope: !1162)
!1170 = !DILocation(line: 341, column: 45, scope: !1162)
!1171 = !DILocation(line: 341, column: 48, scope: !1162)
!1172 = !DILocation(line: 341, column: 54, scope: !1162)
!1173 = !DILocation(line: 341, column: 59, scope: !1162)
!1174 = !DILocation(line: 341, column: 62, scope: !1162)
!1175 = !DILocation(line: 341, column: 65, scope: !1162)
!1176 = !DILocation(line: 341, column: 69, scope: !1162)
!1177 = !DILocation(line: 341, column: 74, scope: !1162)
!1178 = !DILocation(line: 342, column: 17, scope: !1162)
!1179 = !DILocation(line: 342, column: 20, scope: !1162)
!1180 = !DILocation(line: 342, column: 28, scope: !1162)
!1181 = !DILocation(line: 342, column: 33, scope: !1162)
!1182 = !DILocation(line: 342, column: 36, scope: !1162)
!1183 = !DILocation(line: 342, column: 39, scope: !1162)
!1184 = !DILocation(line: 342, column: 50, scope: !1162)
!1185 = !DILocation(line: 341, column: 13, scope: !1044)
!1186 = !DILocation(line: 343, column: 17, scope: !1187)
!1187 = distinct !DILexicalBlock(scope: !1188, file: !805, line: 343, column: 17)
!1188 = distinct !DILexicalBlock(scope: !1162, file: !805, line: 342, column: 56)
!1189 = !DILocation(line: 343, column: 20, scope: !1187)
!1190 = !DILocation(line: 343, column: 25, scope: !1187)
!1191 = !DILocation(line: 343, column: 17, scope: !1188)
!1192 = !DILocation(line: 343, column: 36, scope: !1187)
!1193 = !DILocation(line: 343, column: 39, scope: !1187)
!1194 = !DILocation(line: 343, column: 31, scope: !1187)
!1195 = !DILocation(line: 344, column: 17, scope: !1196)
!1196 = distinct !DILexicalBlock(scope: !1188, file: !805, line: 344, column: 17)
!1197 = !DILocation(line: 344, column: 20, scope: !1196)
!1198 = !DILocation(line: 344, column: 25, scope: !1196)
!1199 = !DILocation(line: 344, column: 17, scope: !1188)
!1200 = !DILocation(line: 344, column: 36, scope: !1196)
!1201 = !DILocation(line: 344, column: 39, scope: !1196)
!1202 = !DILocation(line: 344, column: 31, scope: !1196)
!1203 = !DILocation(line: 345, column: 17, scope: !1204)
!1204 = distinct !DILexicalBlock(scope: !1188, file: !805, line: 345, column: 17)
!1205 = !DILocation(line: 345, column: 20, scope: !1204)
!1206 = !DILocation(line: 345, column: 26, scope: !1204)
!1207 = !DILocation(line: 345, column: 17, scope: !1188)
!1208 = !DILocation(line: 345, column: 36, scope: !1204)
!1209 = !DILocation(line: 345, column: 39, scope: !1204)
!1210 = !DILocation(line: 345, column: 31, scope: !1204)
!1211 = !DILocation(line: 346, column: 17, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1188, file: !805, line: 346, column: 17)
!1213 = !DILocation(line: 346, column: 20, scope: !1212)
!1214 = !DILocation(line: 346, column: 31, scope: !1212)
!1215 = !DILocation(line: 346, column: 17, scope: !1188)
!1216 = !DILocation(line: 346, column: 42, scope: !1212)
!1217 = !DILocation(line: 346, column: 45, scope: !1212)
!1218 = !DILocation(line: 346, column: 37, scope: !1212)
!1219 = !DILocation(line: 347, column: 17, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !1188, file: !805, line: 347, column: 17)
!1221 = !DILocation(line: 347, column: 20, scope: !1220)
!1222 = !DILocation(line: 347, column: 24, scope: !1220)
!1223 = !DILocation(line: 347, column: 17, scope: !1188)
!1224 = !DILocation(line: 347, column: 35, scope: !1220)
!1225 = !DILocation(line: 347, column: 38, scope: !1220)
!1226 = !DILocation(line: 347, column: 30, scope: !1220)
!1227 = !DILocation(line: 348, column: 17, scope: !1228)
!1228 = distinct !DILexicalBlock(scope: !1188, file: !805, line: 348, column: 17)
!1229 = !DILocation(line: 348, column: 20, scope: !1228)
!1230 = !DILocation(line: 348, column: 28, scope: !1228)
!1231 = !DILocation(line: 348, column: 17, scope: !1188)
!1232 = !DILocation(line: 348, column: 39, scope: !1228)
!1233 = !DILocation(line: 348, column: 42, scope: !1228)
!1234 = !DILocation(line: 348, column: 34, scope: !1228)
!1235 = !DILocation(line: 349, column: 18, scope: !1188)
!1236 = !DILocation(line: 349, column: 13, scope: !1188)
!1237 = !DILocation(line: 350, column: 13, scope: !1188)
!1238 = !DILocation(line: 351, column: 13, scope: !1188)
!1239 = !DILocation(line: 354, column: 9, scope: !1044)
!1240 = !DILocation(line: 355, column: 28, scope: !1044)
!1241 = !{!933, !934, i64 24}
!1242 = !DILocation(line: 356, column: 9, scope: !1044)
!1243 = !DILocation(line: 357, column: 5, scope: !1044)
!1244 = !DILocation(line: 360, column: 18, scope: !1245)
!1245 = distinct !DILexicalBlock(scope: !1015, file: !805, line: 360, column: 9)
!1246 = !{!1247, !934, i64 24}
!1247 = !{!"settings", !915, i64 0, !934, i64 8, !934, i64 12, !934, i64 16, !1248, i64 20, !934, i64 24, !934, i64 28, !1032, i64 32, !934, i64 36, !965, i64 40, !934, i64 48, !1249, i64 56, !934, i64 64, !934, i64 68, !916, i64 72, !934, i64 76}
!1248 = !{!"in_addr", !934, i64 0}
!1249 = !{!"double", !916, i64 0}
!1250 = !DILocation(line: 360, column: 26, scope: !1245)
!1251 = !DILocation(line: 360, column: 9, scope: !1015)
!1252 = !DILocation(line: 361, column: 13, scope: !1253)
!1253 = distinct !DILexicalBlock(scope: !1254, file: !805, line: 361, column: 13)
!1254 = distinct !DILexicalBlock(scope: !1245, file: !805, line: 360, column: 31)
!1255 = !DILocation(line: 361, column: 24, scope: !1253)
!1256 = !DILocation(line: 361, column: 13, scope: !1254)
!1257 = !DILocation(line: 362, column: 21, scope: !1253)
!1258 = !DILocation(line: 362, column: 55, scope: !1253)
!1259 = !DILocation(line: 362, column: 13, scope: !1253)
!1260 = !DILocation(line: 363, column: 18, scope: !1261)
!1261 = distinct !DILexicalBlock(scope: !1253, file: !805, line: 363, column: 18)
!1262 = !{i8 0, i8 2}
!1263 = !DILocation(line: 363, column: 18, scope: !1253)
!1264 = !DILocation(line: 364, column: 21, scope: !1261)
!1265 = !DILocation(line: 364, column: 61, scope: !1261)
!1266 = !DILocation(line: 364, column: 13, scope: !1261)
!1267 = !DILocation(line: 366, column: 21, scope: !1261)
!1268 = !DILocation(line: 366, column: 60, scope: !1261)
!1269 = !DILocation(line: 366, column: 13, scope: !1261)
!1270 = !DILocation(line: 367, column: 5, scope: !1254)
!1271 = !DILocation(line: 369, column: 14, scope: !1015)
!1272 = !DILocation(line: 369, column: 5, scope: !1015)
!1273 = !DILocation(line: 369, column: 8, scope: !1015)
!1274 = !DILocation(line: 369, column: 12, scope: !1015)
!1275 = !{!1055, !934, i64 0}
!1276 = !DILocation(line: 370, column: 14, scope: !1015)
!1277 = !DILocation(line: 370, column: 5, scope: !1015)
!1278 = !DILocation(line: 370, column: 8, scope: !1015)
!1279 = !DILocation(line: 370, column: 12, scope: !1015)
!1280 = !{!1055, !1032, i64 340}
!1281 = !DILocation(line: 371, column: 16, scope: !1015)
!1282 = !DILocation(line: 371, column: 5, scope: !1015)
!1283 = !DILocation(line: 371, column: 8, scope: !1015)
!1284 = !DILocation(line: 371, column: 14, scope: !1015)
!1285 = !{!1055, !934, i64 4}
!1286 = !DILocation(line: 372, column: 5, scope: !1015)
!1287 = !DILocation(line: 372, column: 8, scope: !1015)
!1288 = !DILocation(line: 372, column: 16, scope: !1015)
!1289 = !{!1055, !934, i64 216}
!1290 = !DILocation(line: 373, column: 17, scope: !1015)
!1291 = !DILocation(line: 373, column: 20, scope: !1015)
!1292 = !DILocation(line: 373, column: 27, scope: !1015)
!1293 = !{!1055, !934, i64 188}
!1294 = !DILocation(line: 373, column: 5, scope: !1015)
!1295 = !DILocation(line: 373, column: 8, scope: !1015)
!1296 = !DILocation(line: 373, column: 15, scope: !1015)
!1297 = !{!1055, !934, i64 164}
!1298 = !DILocation(line: 374, column: 16, scope: !1015)
!1299 = !DILocation(line: 374, column: 19, scope: !1015)
!1300 = !DILocation(line: 374, column: 5, scope: !1015)
!1301 = !DILocation(line: 374, column: 8, scope: !1015)
!1302 = !DILocation(line: 374, column: 14, scope: !1015)
!1303 = !{!1055, !965, i64 176}
!1304 = !DILocation(line: 375, column: 16, scope: !1015)
!1305 = !DILocation(line: 375, column: 19, scope: !1015)
!1306 = !DILocation(line: 375, column: 5, scope: !1015)
!1307 = !DILocation(line: 375, column: 8, scope: !1015)
!1308 = !DILocation(line: 375, column: 14, scope: !1015)
!1309 = !{!1055, !965, i64 152}
!1310 = !DILocation(line: 376, column: 5, scope: !1015)
!1311 = !DILocation(line: 376, column: 8, scope: !1015)
!1312 = !DILocation(line: 376, column: 14, scope: !1015)
!1313 = !{!1055, !965, i64 208}
!1314 = !DILocation(line: 377, column: 16, scope: !1015)
!1315 = !DILocation(line: 377, column: 19, scope: !1015)
!1316 = !DILocation(line: 377, column: 5, scope: !1015)
!1317 = !DILocation(line: 377, column: 8, scope: !1015)
!1318 = !DILocation(line: 377, column: 14, scope: !1015)
!1319 = !{!1055, !965, i64 296}
!1320 = !DILocation(line: 378, column: 21, scope: !1015)
!1321 = !DILocation(line: 378, column: 24, scope: !1015)
!1322 = !DILocation(line: 378, column: 5, scope: !1015)
!1323 = !DILocation(line: 378, column: 8, scope: !1015)
!1324 = !DILocation(line: 378, column: 19, scope: !1015)
!1325 = !{!1055, !965, i64 328}
!1326 = !DILocation(line: 379, column: 5, scope: !1015)
!1327 = !DILocation(line: 379, column: 8, scope: !1015)
!1328 = !DILocation(line: 379, column: 14, scope: !1015)
!1329 = !{!1055, !934, i64 304}
!1330 = !DILocation(line: 380, column: 5, scope: !1015)
!1331 = !DILocation(line: 380, column: 8, scope: !1015)
!1332 = !DILocation(line: 380, column: 19, scope: !1015)
!1333 = !{!1055, !934, i64 336}
!1334 = !DILocation(line: 381, column: 5, scope: !1015)
!1335 = !DILocation(line: 381, column: 8, scope: !1015)
!1336 = !DILocation(line: 381, column: 16, scope: !1015)
!1337 = !{!1055, !934, i64 252}
!1338 = !DILocation(line: 382, column: 5, scope: !1015)
!1339 = !DILocation(line: 382, column: 8, scope: !1015)
!1340 = !DILocation(line: 382, column: 16, scope: !1015)
!1341 = !{!1055, !934, i64 272}
!1342 = !DILocation(line: 383, column: 5, scope: !1015)
!1343 = !DILocation(line: 383, column: 8, scope: !1015)
!1344 = !DILocation(line: 383, column: 16, scope: !1015)
!1345 = !{!1055, !934, i64 268}
!1346 = !DILocation(line: 385, column: 5, scope: !1015)
!1347 = !DILocation(line: 385, column: 8, scope: !1015)
!1348 = !DILocation(line: 385, column: 21, scope: !1015)
!1349 = !{!1055, !934, i64 192}
!1350 = !DILocation(line: 386, column: 5, scope: !1015)
!1351 = !DILocation(line: 386, column: 8, scope: !1015)
!1352 = !DILocation(line: 386, column: 23, scope: !1015)
!1353 = !{!1055, !965, i64 200}
!1354 = !DILocation(line: 387, column: 5, scope: !1015)
!1355 = !DILocation(line: 387, column: 8, scope: !1015)
!1356 = !DILocation(line: 387, column: 17, scope: !1015)
!1357 = !{!1055, !965, i64 224}
!1358 = !DILocation(line: 388, column: 5, scope: !1015)
!1359 = !DILocation(line: 388, column: 8, scope: !1015)
!1360 = !DILocation(line: 388, column: 15, scope: !1015)
!1361 = !{!1055, !934, i64 384}
!1362 = !DILocation(line: 389, column: 5, scope: !1015)
!1363 = !DILocation(line: 389, column: 8, scope: !1015)
!1364 = !DILocation(line: 389, column: 12, scope: !1015)
!1365 = !{!1055, !934, i64 388}
!1366 = !DILocation(line: 392, column: 16, scope: !1015)
!1367 = !DILocation(line: 392, column: 19, scope: !1015)
!1368 = !DILocation(line: 392, column: 26, scope: !1015)
!1369 = !DILocation(line: 392, column: 31, scope: !1015)
!1370 = !DILocation(line: 392, column: 67, scope: !1015)
!1371 = !DILocation(line: 392, column: 59, scope: !1015)
!1372 = !DILocation(line: 392, column: 5, scope: !1015)
!1373 = !DILocation(line: 393, column: 20, scope: !1015)
!1374 = !DILocation(line: 393, column: 27, scope: !1015)
!1375 = !DILocation(line: 393, column: 30, scope: !1015)
!1376 = !DILocation(line: 393, column: 5, scope: !1015)
!1377 = !DILocation(line: 394, column: 19, scope: !1015)
!1378 = !DILocation(line: 394, column: 5, scope: !1015)
!1379 = !DILocation(line: 394, column: 8, scope: !1015)
!1380 = !DILocation(line: 394, column: 17, scope: !1015)
!1381 = !{!1055, !1059, i64 136}
!1382 = !DILocation(line: 396, column: 20, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !1015, file: !805, line: 396, column: 9)
!1384 = !DILocation(line: 396, column: 23, scope: !1383)
!1385 = !DILocation(line: 396, column: 9, scope: !1383)
!1386 = !DILocation(line: 396, column: 33, scope: !1383)
!1387 = !DILocation(line: 396, column: 9, scope: !1015)
!1388 = !DILocation(line: 397, column: 13, scope: !1389)
!1389 = distinct !DILexicalBlock(scope: !1390, file: !805, line: 397, column: 13)
!1390 = distinct !DILexicalBlock(scope: !1383, file: !805, line: 396, column: 40)
!1391 = !DILocation(line: 397, column: 13, scope: !1390)
!1392 = !DILocation(line: 398, column: 23, scope: !1393)
!1393 = distinct !DILexicalBlock(scope: !1389, file: !805, line: 397, column: 38)
!1394 = !DILocation(line: 398, column: 13, scope: !1393)
!1395 = !DILocation(line: 399, column: 9, scope: !1393)
!1396 = !DILocation(line: 400, column: 9, scope: !1390)
!1397 = !DILocation(line: 403, column: 5, scope: !1015)
!1398 = !DILocation(line: 404, column: 22, scope: !1015)
!1399 = !{!933, !934, i64 16}
!1400 = !DILocation(line: 405, column: 23, scope: !1015)
!1401 = !{!933, !934, i64 20}
!1402 = !DILocation(line: 406, column: 5, scope: !1015)
!1403 = !DILocation(line: 408, column: 12, scope: !1015)
!1404 = !DILocation(line: 408, column: 5, scope: !1015)
!1405 = !DILocation(line: 409, column: 1, scope: !1015)
!1406 = distinct !DISubprogram(name: "event_handler", scope: !805, file: !805, line: 2371, type: !865, scopeLine: 2371, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1407)
!1407 = !{!1408, !1409, !1410, !1411}
!1408 = !DILocalVariable(name: "fd", arg: 1, scope: !1406, file: !805, line: 2371, type: !867)
!1409 = !DILocalVariable(name: "which", arg: 2, scope: !1406, file: !805, line: 2371, type: !868)
!1410 = !DILocalVariable(name: "arg", arg: 3, scope: !1406, file: !805, line: 2371, type: !132)
!1411 = !DILocalVariable(name: "c", scope: !1406, file: !805, line: 2372, type: !296)
!1412 = !DILocation(line: 2371, column: 30, scope: !1406)
!1413 = !{!1059, !1059, i64 0}
!1414 = !DILocation(line: 2371, column: 46, scope: !1406)
!1415 = !DILocation(line: 2371, column: 59, scope: !1406)
!1416 = !DILocation(line: 2372, column: 5, scope: !1406)
!1417 = !DILocation(line: 2372, column: 11, scope: !1406)
!1418 = !DILocation(line: 2374, column: 17, scope: !1406)
!1419 = !DILocation(line: 2374, column: 9, scope: !1406)
!1420 = !DILocation(line: 2374, column: 7, scope: !1406)
!1421 = !DILocation(line: 2375, column: 5, scope: !1422)
!1422 = distinct !DILexicalBlock(scope: !1423, file: !805, line: 2375, column: 5)
!1423 = distinct !DILexicalBlock(scope: !1406, file: !805, line: 2375, column: 5)
!1424 = !DILocation(line: 2375, column: 5, scope: !1423)
!1425 = !DILocation(line: 2377, column: 16, scope: !1406)
!1426 = !DILocation(line: 2377, column: 5, scope: !1406)
!1427 = !DILocation(line: 2377, column: 8, scope: !1406)
!1428 = !DILocation(line: 2377, column: 14, scope: !1406)
!1429 = !{!1055, !1059, i64 138}
!1430 = !DILocation(line: 2380, column: 9, scope: !1431)
!1431 = distinct !DILexicalBlock(scope: !1406, file: !805, line: 2380, column: 9)
!1432 = !DILocation(line: 2380, column: 15, scope: !1431)
!1433 = !DILocation(line: 2380, column: 18, scope: !1431)
!1434 = !DILocation(line: 2380, column: 12, scope: !1431)
!1435 = !DILocation(line: 2380, column: 9, scope: !1406)
!1436 = !DILocation(line: 2381, column: 22, scope: !1437)
!1437 = distinct !DILexicalBlock(scope: !1438, file: !805, line: 2381, column: 13)
!1438 = distinct !DILexicalBlock(scope: !1431, file: !805, line: 2380, column: 23)
!1439 = !DILocation(line: 2381, column: 30, scope: !1437)
!1440 = !DILocation(line: 2381, column: 13, scope: !1438)
!1441 = !DILocation(line: 2382, column: 21, scope: !1437)
!1442 = !DILocation(line: 2382, column: 13, scope: !1437)
!1443 = !DILocation(line: 2383, column: 20, scope: !1438)
!1444 = !DILocation(line: 2383, column: 9, scope: !1438)
!1445 = !DILocation(line: 2384, column: 9, scope: !1438)
!1446 = !DILocation(line: 2397, column: 19, scope: !1406)
!1447 = !DILocation(line: 2397, column: 5, scope: !1406)
!1448 = !DILocation(line: 2408, column: 5, scope: !1406)
!1449 = !DILocation(line: 2409, column: 1, scope: !1406)
!1450 = distinct !DISubprogram(name: "conn_free", scope: !805, file: !805, line: 442, type: !1451, scopeLine: 442, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1453)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{null, !296}
!1453 = !{!1454}
!1454 = !DILocalVariable(name: "c", arg: 1, scope: !1450, file: !805, line: 442, type: !296)
!1455 = !DILocation(line: 442, column: 22, scope: !1450)
!1456 = !DILocation(line: 443, column: 9, scope: !1457)
!1457 = distinct !DILexicalBlock(scope: !1450, file: !805, line: 443, column: 9)
!1458 = !DILocation(line: 443, column: 9, scope: !1450)
!1459 = !DILocation(line: 444, column: 13, scope: !1460)
!1460 = distinct !DILexicalBlock(scope: !1461, file: !805, line: 444, column: 13)
!1461 = distinct !DILexicalBlock(scope: !1457, file: !805, line: 443, column: 12)
!1462 = !DILocation(line: 444, column: 16, scope: !1460)
!1463 = !DILocation(line: 444, column: 13, scope: !1461)
!1464 = !DILocation(line: 445, column: 18, scope: !1460)
!1465 = !DILocation(line: 445, column: 21, scope: !1460)
!1466 = !DILocation(line: 445, column: 13, scope: !1460)
!1467 = !DILocation(line: 446, column: 13, scope: !1468)
!1468 = distinct !DILexicalBlock(scope: !1461, file: !805, line: 446, column: 13)
!1469 = !DILocation(line: 446, column: 16, scope: !1468)
!1470 = !DILocation(line: 446, column: 13, scope: !1461)
!1471 = !DILocation(line: 447, column: 18, scope: !1468)
!1472 = !DILocation(line: 447, column: 21, scope: !1468)
!1473 = !DILocation(line: 447, column: 13, scope: !1468)
!1474 = !DILocation(line: 448, column: 13, scope: !1475)
!1475 = distinct !DILexicalBlock(scope: !1461, file: !805, line: 448, column: 13)
!1476 = !DILocation(line: 448, column: 16, scope: !1475)
!1477 = !DILocation(line: 448, column: 13, scope: !1461)
!1478 = !DILocation(line: 449, column: 18, scope: !1475)
!1479 = !DILocation(line: 449, column: 21, scope: !1475)
!1480 = !DILocation(line: 449, column: 13, scope: !1475)
!1481 = !DILocation(line: 450, column: 13, scope: !1482)
!1482 = distinct !DILexicalBlock(scope: !1461, file: !805, line: 450, column: 13)
!1483 = !DILocation(line: 450, column: 16, scope: !1482)
!1484 = !DILocation(line: 450, column: 13, scope: !1461)
!1485 = !DILocation(line: 451, column: 18, scope: !1482)
!1486 = !DILocation(line: 451, column: 21, scope: !1482)
!1487 = !DILocation(line: 451, column: 13, scope: !1482)
!1488 = !DILocation(line: 452, column: 13, scope: !1489)
!1489 = distinct !DILexicalBlock(scope: !1461, file: !805, line: 452, column: 13)
!1490 = !DILocation(line: 452, column: 16, scope: !1489)
!1491 = !DILocation(line: 452, column: 13, scope: !1461)
!1492 = !DILocation(line: 453, column: 18, scope: !1489)
!1493 = !DILocation(line: 453, column: 21, scope: !1489)
!1494 = !DILocation(line: 453, column: 13, scope: !1489)
!1495 = !DILocation(line: 454, column: 13, scope: !1496)
!1496 = distinct !DILexicalBlock(scope: !1461, file: !805, line: 454, column: 13)
!1497 = !DILocation(line: 454, column: 16, scope: !1496)
!1498 = !DILocation(line: 454, column: 13, scope: !1461)
!1499 = !DILocation(line: 455, column: 18, scope: !1496)
!1500 = !DILocation(line: 455, column: 21, scope: !1496)
!1501 = !DILocation(line: 455, column: 13, scope: !1496)
!1502 = !DILocation(line: 456, column: 13, scope: !1503)
!1503 = distinct !DILexicalBlock(scope: !1461, file: !805, line: 456, column: 13)
!1504 = !DILocation(line: 456, column: 16, scope: !1503)
!1505 = !DILocation(line: 456, column: 13, scope: !1461)
!1506 = !DILocation(line: 457, column: 18, scope: !1503)
!1507 = !DILocation(line: 457, column: 21, scope: !1503)
!1508 = !DILocation(line: 457, column: 13, scope: !1503)
!1509 = !DILocation(line: 458, column: 14, scope: !1461)
!1510 = !DILocation(line: 458, column: 9, scope: !1461)
!1511 = !DILocation(line: 459, column: 5, scope: !1461)
!1512 = !DILocation(line: 460, column: 1, scope: !1450)
!1513 = distinct !DISubprogram(name: "do_suffix_from_freelist", scope: !805, file: !805, line: 588, type: !636, scopeLine: 588, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1514)
!1514 = !{!1515}
!1515 = !DILocalVariable(name: "s", scope: !1513, file: !805, line: 589, type: !195)
!1516 = !DILocation(line: 589, column: 5, scope: !1513)
!1517 = !DILocation(line: 589, column: 11, scope: !1513)
!1518 = !DILocation(line: 591, column: 9, scope: !1519)
!1519 = distinct !DILexicalBlock(scope: !1513, file: !805, line: 591, column: 9)
!1520 = !DILocation(line: 591, column: 24, scope: !1519)
!1521 = !DILocation(line: 591, column: 9, scope: !1513)
!1522 = !DILocation(line: 592, column: 13, scope: !1523)
!1523 = distinct !DILexicalBlock(scope: !1519, file: !805, line: 591, column: 29)
!1524 = !DILocation(line: 592, column: 24, scope: !1523)
!1525 = !DILocation(line: 592, column: 11, scope: !1523)
!1526 = !DILocation(line: 593, column: 5, scope: !1523)
!1527 = !DILocation(line: 596, column: 13, scope: !1528)
!1528 = distinct !DILexicalBlock(scope: !1519, file: !805, line: 593, column: 12)
!1529 = !DILocation(line: 596, column: 11, scope: !1528)
!1530 = !DILocation(line: 599, column: 12, scope: !1513)
!1531 = !DILocation(line: 600, column: 1, scope: !1513)
!1532 = !DILocation(line: 599, column: 5, scope: !1513)
!1533 = distinct !DISubprogram(name: "do_suffix_add_to_freelist", scope: !805, file: !805, line: 606, type: !619, scopeLine: 606, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1534)
!1534 = !{!1535, !1536}
!1535 = !DILocalVariable(name: "s", arg: 1, scope: !1533, file: !805, line: 606, type: !195)
!1536 = !DILocalVariable(name: "new_freesuffix", scope: !1537, file: !805, line: 612, type: !271)
!1537 = distinct !DILexicalBlock(scope: !1538, file: !805, line: 610, column: 12)
!1538 = distinct !DILexicalBlock(scope: !1533, file: !805, line: 607, column: 9)
!1539 = !DILocation(line: 606, column: 38, scope: !1533)
!1540 = !DILocation(line: 607, column: 9, scope: !1538)
!1541 = !DILocation(line: 607, column: 26, scope: !1538)
!1542 = !DILocation(line: 607, column: 24, scope: !1538)
!1543 = !DILocation(line: 607, column: 9, scope: !1533)
!1544 = !DILocation(line: 608, column: 40, scope: !1545)
!1545 = distinct !DILexicalBlock(scope: !1538, file: !805, line: 607, column: 43)
!1546 = !DILocation(line: 608, column: 9, scope: !1545)
!1547 = !DILocation(line: 608, column: 34, scope: !1545)
!1548 = !DILocation(line: 608, column: 38, scope: !1545)
!1549 = !DILocation(line: 609, column: 9, scope: !1545)
!1550 = !DILocation(line: 612, column: 9, scope: !1537)
!1551 = !DILocation(line: 612, column: 16, scope: !1537)
!1552 = !DILocation(line: 612, column: 41, scope: !1537)
!1553 = !DILocation(line: 612, column: 53, scope: !1537)
!1554 = !DILocation(line: 612, column: 69, scope: !1537)
!1555 = !DILocation(line: 612, column: 33, scope: !1537)
!1556 = !DILocation(line: 613, column: 13, scope: !1557)
!1557 = distinct !DILexicalBlock(scope: !1537, file: !805, line: 613, column: 13)
!1558 = !DILocation(line: 613, column: 13, scope: !1537)
!1559 = !DILocation(line: 614, column: 29, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !1557, file: !805, line: 613, column: 29)
!1561 = !DILocation(line: 615, column: 26, scope: !1560)
!1562 = !DILocation(line: 615, column: 24, scope: !1560)
!1563 = !DILocation(line: 616, column: 44, scope: !1560)
!1564 = !DILocation(line: 616, column: 13, scope: !1560)
!1565 = !DILocation(line: 616, column: 38, scope: !1560)
!1566 = !DILocation(line: 616, column: 42, scope: !1560)
!1567 = !DILocation(line: 617, column: 13, scope: !1560)
!1568 = !DILocation(line: 619, column: 5, scope: !1538)
!1569 = !DILocation(line: 620, column: 5, scope: !1533)
!1570 = !DILocation(line: 621, column: 1, scope: !1533)
!1571 = distinct !DISubprogram(name: "do_store_item", scope: !805, file: !805, line: 819, type: !1572, scopeLine: 819, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1574)
!1572 = !DISubroutineType(types: !1573)
!1573 = !{!47, !243, !47}
!1574 = !{!1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582}
!1575 = !DILocalVariable(name: "it", arg: 1, scope: !1571, file: !805, line: 819, type: !243)
!1576 = !DILocalVariable(name: "comm", arg: 2, scope: !1571, file: !805, line: 819, type: !47)
!1577 = !DILocalVariable(name: "key", scope: !1571, file: !805, line: 820, type: !195)
!1578 = !DILocalVariable(name: "delete_locked", scope: !1571, file: !805, line: 821, type: !276)
!1579 = !DILocalVariable(name: "old_it", scope: !1571, file: !805, line: 826, type: !243)
!1580 = !DILocalVariable(name: "stored", scope: !1571, file: !805, line: 827, type: !47)
!1581 = !DILocalVariable(name: "new_it", scope: !1571, file: !805, line: 829, type: !243)
!1582 = !DILocalVariable(name: "flags", scope: !1571, file: !805, line: 830, type: !47)
!1583 = !DILocation(line: 819, column: 25, scope: !1571)
!1584 = !DILocation(line: 819, column: 33, scope: !1571)
!1585 = !DILocation(line: 820, column: 5, scope: !1571)
!1586 = !DILocation(line: 820, column: 11, scope: !1571)
!1587 = !DILocation(line: 820, column: 17, scope: !1571)
!1588 = !DILocation(line: 821, column: 5, scope: !1571)
!1589 = !DILocation(line: 821, column: 10, scope: !1571)
!1590 = !DILocation(line: 826, column: 5, scope: !1571)
!1591 = !DILocation(line: 826, column: 11, scope: !1571)
!1592 = !DILocation(line: 826, column: 44, scope: !1571)
!1593 = !DILocation(line: 826, column: 49, scope: !1571)
!1594 = !DILocation(line: 826, column: 53, scope: !1571)
!1595 = !{!1596, !916, i64 41}
!1596 = !{!"_stritem", !965, i64 0, !965, i64 8, !965, i64 16, !934, i64 24, !934, i64 28, !934, i64 32, !1059, i64 36, !916, i64 38, !916, i64 39, !916, i64 40, !916, i64 41, !915, i64 48, !916, i64 56}
!1597 = !DILocation(line: 826, column: 20, scope: !1571)
!1598 = !DILocation(line: 827, column: 5, scope: !1571)
!1599 = !DILocation(line: 827, column: 9, scope: !1571)
!1600 = !DILocation(line: 829, column: 5, scope: !1571)
!1601 = !DILocation(line: 829, column: 11, scope: !1571)
!1602 = !DILocation(line: 830, column: 5, scope: !1571)
!1603 = !DILocation(line: 830, column: 9, scope: !1571)
!1604 = !DILocation(line: 832, column: 9, scope: !1605)
!1605 = distinct !DILexicalBlock(scope: !1571, file: !805, line: 832, column: 9)
!1606 = !DILocation(line: 832, column: 16, scope: !1605)
!1607 = !DILocation(line: 832, column: 24, scope: !1605)
!1608 = !DILocation(line: 832, column: 27, scope: !1605)
!1609 = !DILocation(line: 832, column: 32, scope: !1605)
!1610 = !DILocation(line: 832, column: 9, scope: !1571)
!1611 = !DILocation(line: 834, column: 24, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1605, file: !805, line: 832, column: 46)
!1613 = !DILocation(line: 834, column: 9, scope: !1612)
!1614 = !DILocation(line: 835, column: 5, scope: !1612)
!1615 = !DILocation(line: 835, column: 17, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1605, file: !805, line: 835, column: 16)
!1617 = !DILocation(line: 835, column: 24, scope: !1616)
!1618 = !DILocation(line: 835, column: 28, scope: !1616)
!1619 = !DILocation(line: 835, column: 33, scope: !1616)
!1620 = !DILocation(line: 836, column: 9, scope: !1616)
!1621 = !DILocation(line: 836, column: 12, scope: !1616)
!1622 = !DILocation(line: 836, column: 17, scope: !1616)
!1623 = !DILocation(line: 836, column: 33, scope: !1616)
!1624 = !DILocation(line: 836, column: 36, scope: !1616)
!1625 = !DILocation(line: 836, column: 41, scope: !1616)
!1626 = !DILocation(line: 835, column: 16, scope: !1605)
!1627 = !DILocation(line: 839, column: 5, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1616, file: !805, line: 837, column: 5)
!1629 = !DILocation(line: 839, column: 16, scope: !1630)
!1630 = distinct !DILexicalBlock(scope: !1616, file: !805, line: 839, column: 16)
!1631 = !DILocation(line: 839, column: 30, scope: !1630)
!1632 = !DILocation(line: 839, column: 34, scope: !1630)
!1633 = !DILocation(line: 839, column: 39, scope: !1630)
!1634 = !DILocation(line: 839, column: 56, scope: !1630)
!1635 = !DILocation(line: 839, column: 59, scope: !1630)
!1636 = !DILocation(line: 839, column: 64, scope: !1630)
!1637 = !DILocation(line: 840, column: 9, scope: !1630)
!1638 = !DILocation(line: 840, column: 12, scope: !1630)
!1639 = !DILocation(line: 840, column: 17, scope: !1630)
!1640 = !DILocation(line: 840, column: 33, scope: !1630)
!1641 = !DILocation(line: 840, column: 36, scope: !1630)
!1642 = !DILocation(line: 840, column: 41, scope: !1630)
!1643 = !DILocation(line: 839, column: 16, scope: !1616)
!1644 = !DILocation(line: 843, column: 5, scope: !1645)
!1645 = distinct !DILexicalBlock(scope: !1630, file: !805, line: 841, column: 5)
!1646 = !DILocation(line: 843, column: 16, scope: !1647)
!1647 = distinct !DILexicalBlock(scope: !1630, file: !805, line: 843, column: 16)
!1648 = !DILocation(line: 843, column: 21, scope: !1647)
!1649 = !DILocation(line: 843, column: 16, scope: !1630)
!1650 = !DILocation(line: 845, column: 13, scope: !1651)
!1651 = distinct !DILexicalBlock(scope: !1652, file: !805, line: 845, column: 13)
!1652 = distinct !DILexicalBlock(scope: !1647, file: !805, line: 843, column: 35)
!1653 = !DILocation(line: 845, column: 13, scope: !1652)
!1654 = !DILocation(line: 846, column: 42, scope: !1651)
!1655 = !DILocation(line: 846, column: 47, scope: !1651)
!1656 = !DILocation(line: 846, column: 51, scope: !1651)
!1657 = !DILocation(line: 846, column: 22, scope: !1651)
!1658 = !DILocation(line: 846, column: 20, scope: !1651)
!1659 = !DILocation(line: 846, column: 13, scope: !1651)
!1660 = !DILocation(line: 848, column: 12, scope: !1661)
!1661 = distinct !DILexicalBlock(scope: !1652, file: !805, line: 848, column: 12)
!1662 = !DILocation(line: 848, column: 19, scope: !1661)
!1663 = !DILocation(line: 848, column: 12, scope: !1652)
!1664 = !DILocation(line: 850, column: 18, scope: !1665)
!1665 = distinct !DILexicalBlock(scope: !1661, file: !805, line: 848, column: 28)
!1666 = !DILocation(line: 851, column: 9, scope: !1665)
!1667 = !DILocation(line: 852, column: 17, scope: !1668)
!1668 = distinct !DILexicalBlock(scope: !1661, file: !805, line: 852, column: 17)
!1669 = !DILocation(line: 852, column: 21, scope: !1668)
!1670 = !{!1596, !915, i64 48}
!1671 = !DILocation(line: 852, column: 31, scope: !1668)
!1672 = !DILocation(line: 852, column: 39, scope: !1668)
!1673 = !DILocation(line: 852, column: 28, scope: !1668)
!1674 = !DILocation(line: 852, column: 17, scope: !1661)
!1675 = !DILocation(line: 854, column: 27, scope: !1676)
!1676 = distinct !DILexicalBlock(scope: !1668, file: !805, line: 852, column: 47)
!1677 = !DILocation(line: 854, column: 35, scope: !1676)
!1678 = !DILocation(line: 854, column: 11, scope: !1676)
!1679 = !DILocation(line: 855, column: 18, scope: !1676)
!1680 = !DILocation(line: 856, column: 9, scope: !1676)
!1681 = !DILocation(line: 859, column: 18, scope: !1682)
!1682 = distinct !DILexicalBlock(scope: !1668, file: !805, line: 858, column: 9)
!1683 = !DILocation(line: 861, column: 5, scope: !1652)
!1684 = !DILocation(line: 867, column: 13, scope: !1685)
!1685 = distinct !DILexicalBlock(scope: !1686, file: !805, line: 867, column: 13)
!1686 = distinct !DILexicalBlock(scope: !1647, file: !805, line: 861, column: 12)
!1687 = !DILocation(line: 867, column: 18, scope: !1685)
!1688 = !DILocation(line: 867, column: 34, scope: !1685)
!1689 = !DILocation(line: 867, column: 37, scope: !1685)
!1690 = !DILocation(line: 867, column: 42, scope: !1685)
!1691 = !DILocation(line: 867, column: 13, scope: !1686)
!1692 = !DILocation(line: 872, column: 34, scope: !1693)
!1693 = distinct !DILexicalBlock(scope: !1685, file: !805, line: 867, column: 60)
!1694 = !DILocation(line: 872, column: 27, scope: !1693)
!1695 = !DILocation(line: 872, column: 21, scope: !1693)
!1696 = !DILocation(line: 872, column: 19, scope: !1693)
!1697 = !DILocation(line: 874, column: 36, scope: !1693)
!1698 = !DILocation(line: 874, column: 41, scope: !1693)
!1699 = !DILocation(line: 874, column: 45, scope: !1693)
!1700 = !DILocation(line: 874, column: 51, scope: !1693)
!1701 = !DILocation(line: 874, column: 58, scope: !1693)
!1702 = !DILocation(line: 874, column: 66, scope: !1693)
!1703 = !{!1596, !934, i64 28}
!1704 = !DILocation(line: 874, column: 75, scope: !1693)
!1705 = !DILocation(line: 874, column: 79, scope: !1693)
!1706 = !{!1596, !934, i64 32}
!1707 = !DILocation(line: 874, column: 88, scope: !1693)
!1708 = !DILocation(line: 874, column: 96, scope: !1693)
!1709 = !DILocation(line: 874, column: 86, scope: !1693)
!1710 = !DILocation(line: 874, column: 103, scope: !1693)
!1711 = !DILocation(line: 874, column: 22, scope: !1693)
!1712 = !DILocation(line: 874, column: 20, scope: !1693)
!1713 = !DILocation(line: 876, column: 17, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !1693, file: !805, line: 876, column: 17)
!1715 = !DILocation(line: 876, column: 24, scope: !1714)
!1716 = !DILocation(line: 876, column: 17, scope: !1693)
!1717 = !DILocation(line: 878, column: 17, scope: !1718)
!1718 = distinct !DILexicalBlock(scope: !1714, file: !805, line: 876, column: 33)
!1719 = !DILocation(line: 883, column: 17, scope: !1720)
!1720 = distinct !DILexicalBlock(scope: !1693, file: !805, line: 883, column: 17)
!1721 = !DILocation(line: 883, column: 22, scope: !1720)
!1722 = !DILocation(line: 883, column: 17, scope: !1693)
!1723 = !DILocation(line: 884, column: 24, scope: !1724)
!1724 = distinct !DILexicalBlock(scope: !1720, file: !805, line: 883, column: 39)
!1725 = !{!1596, !916, i64 38}
!1726 = !DILocation(line: 884, column: 43, scope: !1724)
!1727 = !DILocation(line: 884, column: 62, scope: !1724)
!1728 = !DILocation(line: 884, column: 70, scope: !1724)
!1729 = !DILocation(line: 884, column: 17, scope: !1724)
!1730 = !DILocation(line: 885, column: 24, scope: !1724)
!1731 = !DILocation(line: 885, column: 44, scope: !1724)
!1732 = !DILocation(line: 885, column: 52, scope: !1724)
!1733 = !DILocation(line: 885, column: 42, scope: !1724)
!1734 = !DILocation(line: 885, column: 59, scope: !1724)
!1735 = !DILocation(line: 885, column: 75, scope: !1724)
!1736 = !DILocation(line: 885, column: 90, scope: !1724)
!1737 = !DILocation(line: 885, column: 94, scope: !1724)
!1738 = !DILocation(line: 885, column: 17, scope: !1724)
!1739 = !DILocation(line: 886, column: 13, scope: !1724)
!1740 = !DILocation(line: 888, column: 24, scope: !1741)
!1741 = distinct !DILexicalBlock(scope: !1720, file: !805, line: 886, column: 20)
!1742 = !DILocation(line: 888, column: 43, scope: !1741)
!1743 = !DILocation(line: 888, column: 58, scope: !1741)
!1744 = !DILocation(line: 888, column: 62, scope: !1741)
!1745 = !DILocation(line: 888, column: 17, scope: !1741)
!1746 = !DILocation(line: 889, column: 24, scope: !1741)
!1747 = !DILocation(line: 889, column: 44, scope: !1741)
!1748 = !DILocation(line: 889, column: 48, scope: !1741)
!1749 = !DILocation(line: 889, column: 42, scope: !1741)
!1750 = !DILocation(line: 889, column: 55, scope: !1741)
!1751 = !DILocation(line: 889, column: 71, scope: !1741)
!1752 = !DILocation(line: 889, column: 90, scope: !1741)
!1753 = !DILocation(line: 889, column: 98, scope: !1741)
!1754 = !DILocation(line: 889, column: 17, scope: !1741)
!1755 = !DILocation(line: 892, column: 18, scope: !1693)
!1756 = !DILocation(line: 892, column: 16, scope: !1693)
!1757 = !DILocation(line: 893, column: 9, scope: !1693)
!1758 = !DILocation(line: 899, column: 13, scope: !1759)
!1759 = distinct !DILexicalBlock(scope: !1686, file: !805, line: 899, column: 13)
!1760 = !DILocation(line: 899, column: 13, scope: !1686)
!1761 = !DILocation(line: 900, column: 42, scope: !1759)
!1762 = !DILocation(line: 900, column: 47, scope: !1759)
!1763 = !DILocation(line: 900, column: 51, scope: !1759)
!1764 = !DILocation(line: 900, column: 22, scope: !1759)
!1765 = !DILocation(line: 900, column: 20, scope: !1759)
!1766 = !DILocation(line: 900, column: 13, scope: !1759)
!1767 = !DILocation(line: 902, column: 13, scope: !1768)
!1768 = distinct !DILexicalBlock(scope: !1686, file: !805, line: 902, column: 13)
!1769 = !DILocation(line: 902, column: 20, scope: !1768)
!1770 = !DILocation(line: 902, column: 13, scope: !1686)
!1771 = !DILocation(line: 903, column: 29, scope: !1768)
!1772 = !DILocation(line: 903, column: 37, scope: !1768)
!1773 = !DILocation(line: 903, column: 13, scope: !1768)
!1774 = !DILocation(line: 905, column: 26, scope: !1768)
!1775 = !DILocation(line: 905, column: 13, scope: !1768)
!1776 = !DILocation(line: 908, column: 16, scope: !1686)
!1777 = !DILocation(line: 911, column: 9, scope: !1778)
!1778 = distinct !DILexicalBlock(scope: !1571, file: !805, line: 911, column: 9)
!1779 = !DILocation(line: 911, column: 16, scope: !1778)
!1780 = !DILocation(line: 911, column: 9, scope: !1571)
!1781 = !DILocation(line: 912, column: 24, scope: !1778)
!1782 = !DILocation(line: 912, column: 9, scope: !1778)
!1783 = !DILocation(line: 913, column: 9, scope: !1784)
!1784 = distinct !DILexicalBlock(scope: !1571, file: !805, line: 913, column: 9)
!1785 = !DILocation(line: 913, column: 16, scope: !1784)
!1786 = !DILocation(line: 913, column: 9, scope: !1571)
!1787 = !DILocation(line: 914, column: 24, scope: !1784)
!1788 = !DILocation(line: 914, column: 9, scope: !1784)
!1789 = !DILocation(line: 916, column: 12, scope: !1571)
!1790 = !DILocation(line: 916, column: 5, scope: !1571)
!1791 = !DILocation(line: 917, column: 1, scope: !1571)
!1792 = distinct !DISubprogram(name: "do_add_delta", scope: !805, file: !805, line: 1523, type: !1793, scopeLine: 1523, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1799)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{!195, !243, !1018, !1795, !195}
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1796)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !1797, line: 27, baseType: !1798)
!1797 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "")
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !122, line: 43, baseType: !175)
!1799 = !{!1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807}
!1800 = !DILocalVariable(name: "it", arg: 1, scope: !1792, file: !805, line: 1523, type: !243)
!1801 = !DILocalVariable(name: "incr", arg: 2, scope: !1792, file: !805, line: 1523, type: !1018)
!1802 = !DILocalVariable(name: "delta", arg: 3, scope: !1792, file: !805, line: 1523, type: !1795)
!1803 = !DILocalVariable(name: "buf", arg: 4, scope: !1792, file: !805, line: 1523, type: !195)
!1804 = !DILocalVariable(name: "ptr", scope: !1792, file: !805, line: 1524, type: !195)
!1805 = !DILocalVariable(name: "value", scope: !1792, file: !805, line: 1525, type: !1796)
!1806 = !DILocalVariable(name: "res", scope: !1792, file: !805, line: 1526, type: !47)
!1807 = !DILocalVariable(name: "new_it", scope: !1808, file: !805, line: 1546, type: !243)
!1808 = distinct !DILexicalBlock(scope: !1809, file: !805, line: 1545, column: 31)
!1809 = distinct !DILexicalBlock(scope: !1792, file: !805, line: 1545, column: 9)
!1810 = !DILocation(line: 1523, column: 26, scope: !1792)
!1811 = !DILocation(line: 1523, column: 41, scope: !1792)
!1812 = !DILocation(line: 1523, column: 61, scope: !1792)
!1813 = !DILocation(line: 1523, column: 74, scope: !1792)
!1814 = !DILocation(line: 1524, column: 5, scope: !1792)
!1815 = !DILocation(line: 1524, column: 11, scope: !1792)
!1816 = !DILocation(line: 1525, column: 5, scope: !1792)
!1817 = !DILocation(line: 1525, column: 13, scope: !1792)
!1818 = !DILocation(line: 1526, column: 5, scope: !1792)
!1819 = !DILocation(line: 1526, column: 9, scope: !1792)
!1820 = !DILocation(line: 1528, column: 11, scope: !1792)
!1821 = !DILocation(line: 1528, column: 9, scope: !1792)
!1822 = !DILocation(line: 1529, column: 5, scope: !1792)
!1823 = !DILocation(line: 1529, column: 14, scope: !1792)
!1824 = !DILocation(line: 1529, column: 13, scope: !1792)
!1825 = !{!916, !916, i64 0}
!1826 = !DILocation(line: 1529, column: 18, scope: !1792)
!1827 = !DILocation(line: 1529, column: 27, scope: !1792)
!1828 = !DILocation(line: 1529, column: 32, scope: !1792)
!1829 = !DILocation(line: 1529, column: 31, scope: !1792)
!1830 = !DILocation(line: 1529, column: 36, scope: !1792)
!1831 = !DILocation(line: 1529, column: 42, scope: !1792)
!1832 = !DILocation(line: 1529, column: 46, scope: !1792)
!1833 = !DILocation(line: 1529, column: 45, scope: !1792)
!1834 = !DILocation(line: 1529, column: 50, scope: !1792)
!1835 = !DILocation(line: 0, scope: !1792)
!1836 = !DILocation(line: 1529, column: 61, scope: !1792)
!1837 = distinct !{!1837, !1822, !1836}
!1838 = !DILocation(line: 1531, column: 22, scope: !1792)
!1839 = !DILocation(line: 1531, column: 13, scope: !1792)
!1840 = !DILocation(line: 1531, column: 11, scope: !1792)
!1841 = !DILocation(line: 1533, column: 8, scope: !1842)
!1842 = distinct !DILexicalBlock(scope: !1792, file: !805, line: 1533, column: 8)
!1843 = !DILocation(line: 1533, column: 14, scope: !1842)
!1844 = !DILocation(line: 1533, column: 8, scope: !1792)
!1845 = !DILocation(line: 1534, column: 9, scope: !1846)
!1846 = distinct !DILexicalBlock(scope: !1842, file: !805, line: 1533, column: 25)
!1847 = !DILocation(line: 1537, column: 9, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1792, file: !805, line: 1537, column: 9)
!1849 = !DILocation(line: 1537, column: 9, scope: !1792)
!1850 = !DILocation(line: 1538, column: 18, scope: !1848)
!1851 = !DILocation(line: 1538, column: 15, scope: !1848)
!1852 = !DILocation(line: 1538, column: 9, scope: !1848)
!1853 = !DILocation(line: 1540, column: 13, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1855, file: !805, line: 1540, column: 13)
!1855 = distinct !DILexicalBlock(scope: !1848, file: !805, line: 1539, column: 10)
!1856 = !DILocation(line: 1540, column: 22, scope: !1854)
!1857 = !DILocation(line: 1540, column: 19, scope: !1854)
!1858 = !DILocation(line: 1540, column: 13, scope: !1855)
!1859 = !DILocation(line: 1540, column: 35, scope: !1854)
!1860 = !DILocation(line: 1540, column: 29, scope: !1854)
!1861 = !DILocation(line: 1541, column: 23, scope: !1854)
!1862 = !DILocation(line: 1541, column: 20, scope: !1854)
!1863 = !DILocation(line: 1543, column: 13, scope: !1792)
!1864 = !DILocation(line: 1543, column: 25, scope: !1792)
!1865 = !DILocation(line: 1543, column: 5, scope: !1792)
!1866 = !DILocation(line: 1544, column: 18, scope: !1792)
!1867 = !DILocation(line: 1544, column: 11, scope: !1792)
!1868 = !DILocation(line: 1544, column: 9, scope: !1792)
!1869 = !DILocation(line: 1545, column: 9, scope: !1809)
!1870 = !DILocation(line: 1545, column: 13, scope: !1809)
!1871 = !DILocation(line: 1545, column: 19, scope: !1809)
!1872 = !DILocation(line: 1545, column: 23, scope: !1809)
!1873 = !DILocation(line: 1545, column: 17, scope: !1809)
!1874 = !DILocation(line: 1545, column: 9, scope: !1792)
!1875 = !DILocation(line: 1546, column: 9, scope: !1808)
!1876 = !DILocation(line: 1546, column: 15, scope: !1808)
!1877 = !DILocation(line: 1547, column: 32, scope: !1808)
!1878 = !DILocation(line: 1547, column: 46, scope: !1808)
!1879 = !DILocation(line: 1547, column: 50, scope: !1808)
!1880 = !DILocation(line: 1547, column: 61, scope: !1808)
!1881 = !DILocation(line: 1547, column: 77, scope: !1808)
!1882 = !DILocation(line: 1547, column: 56, scope: !1808)
!1883 = !DILocation(line: 1547, column: 83, scope: !1808)
!1884 = !DILocation(line: 1547, column: 87, scope: !1808)
!1885 = !DILocation(line: 1547, column: 96, scope: !1808)
!1886 = !DILocation(line: 1547, column: 100, scope: !1808)
!1887 = !DILocation(line: 1547, column: 18, scope: !1808)
!1888 = !DILocation(line: 1547, column: 16, scope: !1808)
!1889 = !DILocation(line: 1548, column: 13, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !1808, file: !805, line: 1548, column: 13)
!1891 = !DILocation(line: 1548, column: 20, scope: !1890)
!1892 = !DILocation(line: 1548, column: 13, scope: !1808)
!1893 = !DILocation(line: 1549, column: 13, scope: !1894)
!1894 = distinct !DILexicalBlock(scope: !1890, file: !805, line: 1548, column: 26)
!1895 = !DILocation(line: 1551, column: 16, scope: !1808)
!1896 = !DILocation(line: 1551, column: 35, scope: !1808)
!1897 = !DILocation(line: 1551, column: 40, scope: !1808)
!1898 = !DILocation(line: 1551, column: 9, scope: !1808)
!1899 = !DILocation(line: 1552, column: 16, scope: !1808)
!1900 = !DILocation(line: 1552, column: 36, scope: !1808)
!1901 = !DILocation(line: 1552, column: 34, scope: !1808)
!1902 = !DILocation(line: 1552, column: 9, scope: !1808)
!1903 = !DILocation(line: 1553, column: 25, scope: !1808)
!1904 = !DILocation(line: 1553, column: 29, scope: !1808)
!1905 = !DILocation(line: 1553, column: 9, scope: !1808)
!1906 = !DILocation(line: 1554, column: 24, scope: !1808)
!1907 = !DILocation(line: 1554, column: 9, scope: !1808)
!1908 = !DILocation(line: 1555, column: 5, scope: !1809)
!1909 = !DILocation(line: 1555, column: 5, scope: !1808)
!1910 = !DILocation(line: 1556, column: 16, scope: !1911)
!1911 = distinct !DILexicalBlock(scope: !1809, file: !805, line: 1555, column: 12)
!1912 = !DILocation(line: 1556, column: 31, scope: !1911)
!1913 = !DILocation(line: 1556, column: 36, scope: !1911)
!1914 = !DILocation(line: 1556, column: 9, scope: !1911)
!1915 = !DILocation(line: 1557, column: 16, scope: !1911)
!1916 = !DILocation(line: 1557, column: 32, scope: !1911)
!1917 = !DILocation(line: 1557, column: 30, scope: !1911)
!1918 = !DILocation(line: 1557, column: 42, scope: !1911)
!1919 = !DILocation(line: 1557, column: 46, scope: !1911)
!1920 = !DILocation(line: 1557, column: 55, scope: !1911)
!1921 = !DILocation(line: 1557, column: 53, scope: !1911)
!1922 = !DILocation(line: 1557, column: 59, scope: !1911)
!1923 = !DILocation(line: 1557, column: 9, scope: !1911)
!1924 = !DILocation(line: 1560, column: 12, scope: !1792)
!1925 = !DILocation(line: 1560, column: 5, scope: !1792)
!1926 = !DILocation(line: 1561, column: 1, scope: !1792)
!1927 = distinct !DISubprogram(name: "atoi", scope: !1928, file: !1928, line: 361, type: !791, scopeLine: 362, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1929)
!1928 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!1929 = !{!1930}
!1930 = !DILocalVariable(name: "__nptr", arg: 1, scope: !1927, file: !1928, line: 361, type: !302)
!1931 = !DILocation(line: 361, column: 1, scope: !1927)
!1932 = !DILocation(line: 363, column: 24, scope: !1927)
!1933 = !DILocation(line: 363, column: 16, scope: !1927)
!1934 = !DILocation(line: 363, column: 10, scope: !1927)
!1935 = !DILocation(line: 363, column: 3, scope: !1927)
!1936 = distinct !DISubprogram(name: "do_defer_delete", scope: !805, file: !805, line: 1628, type: !1937, scopeLine: 1629, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1939)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!195, !243, !900}
!1939 = !{!1940, !1941, !1942}
!1940 = !DILocalVariable(name: "it", arg: 1, scope: !1936, file: !805, line: 1628, type: !243)
!1941 = !DILocalVariable(name: "exptime", arg: 2, scope: !1936, file: !805, line: 1628, type: !900)
!1942 = !DILocalVariable(name: "new_delete", scope: !1943, file: !805, line: 1631, type: !242)
!1943 = distinct !DILexicalBlock(scope: !1944, file: !805, line: 1630, column: 30)
!1944 = distinct !DILexicalBlock(scope: !1936, file: !805, line: 1630, column: 9)
!1945 = !DILocation(line: 1628, column: 29, scope: !1936)
!1946 = !DILocation(line: 1628, column: 40, scope: !1936)
!1947 = !DILocation(line: 1630, column: 9, scope: !1944)
!1948 = !DILocation(line: 1630, column: 20, scope: !1944)
!1949 = !DILocation(line: 1630, column: 17, scope: !1944)
!1950 = !DILocation(line: 1630, column: 9, scope: !1936)
!1951 = !DILocation(line: 1631, column: 9, scope: !1943)
!1952 = !DILocation(line: 1631, column: 16, scope: !1943)
!1953 = !DILocation(line: 1631, column: 37, scope: !1943)
!1954 = !DILocation(line: 1631, column: 64, scope: !1943)
!1955 = !DILocation(line: 1631, column: 62, scope: !1943)
!1956 = !DILocation(line: 1631, column: 73, scope: !1943)
!1957 = !DILocation(line: 1631, column: 29, scope: !1943)
!1958 = !DILocation(line: 1632, column: 13, scope: !1959)
!1959 = distinct !DILexicalBlock(scope: !1943, file: !805, line: 1632, column: 13)
!1960 = !DILocation(line: 1632, column: 13, scope: !1943)
!1961 = !DILocation(line: 1633, column: 24, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !1959, file: !805, line: 1632, column: 25)
!1963 = !DILocation(line: 1633, column: 22, scope: !1962)
!1964 = !DILocation(line: 1634, column: 22, scope: !1962)
!1965 = !DILocation(line: 1635, column: 9, scope: !1962)
!1966 = !DILocation(line: 1640, column: 28, scope: !1967)
!1967 = distinct !DILexicalBlock(scope: !1959, file: !805, line: 1635, column: 16)
!1968 = !DILocation(line: 1640, column: 13, scope: !1967)
!1969 = !DILocation(line: 1641, column: 13, scope: !1967)
!1970 = !DILocation(line: 1643, column: 5, scope: !1944)
!1971 = !DILocation(line: 1643, column: 5, scope: !1943)
!1972 = !DILocation(line: 1646, column: 28, scope: !1936)
!1973 = !DILocation(line: 1646, column: 19, scope: !1936)
!1974 = !DILocation(line: 1646, column: 5, scope: !1936)
!1975 = !DILocation(line: 1646, column: 9, scope: !1936)
!1976 = !DILocation(line: 1646, column: 17, scope: !1936)
!1977 = !DILocation(line: 1647, column: 5, scope: !1936)
!1978 = !DILocation(line: 1647, column: 9, scope: !1936)
!1979 = !DILocation(line: 1647, column: 18, scope: !1936)
!1980 = !{!1596, !916, i64 39}
!1981 = !DILocation(line: 1648, column: 27, scope: !1936)
!1982 = !DILocation(line: 1648, column: 5, scope: !1936)
!1983 = !DILocation(line: 1648, column: 21, scope: !1936)
!1984 = !DILocation(line: 1648, column: 25, scope: !1936)
!1985 = !DILocation(line: 1650, column: 5, scope: !1936)
!1986 = !DILocation(line: 1651, column: 1, scope: !1936)
!1987 = distinct !DISubprogram(name: "pre_gdb", scope: !805, file: !805, line: 2583, type: !309, scopeLine: 2583, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1988)
!1988 = !{!1989}
!1989 = !DILocalVariable(name: "i", scope: !1987, file: !805, line: 2584, type: !47)
!1990 = !DILocation(line: 2584, column: 5, scope: !1987)
!1991 = !DILocation(line: 2584, column: 9, scope: !1987)
!1992 = !DILocation(line: 2585, column: 9, scope: !1993)
!1993 = distinct !DILexicalBlock(scope: !1987, file: !805, line: 2585, column: 9)
!1994 = !DILocation(line: 2585, column: 18, scope: !1993)
!1995 = !DILocation(line: 2585, column: 9, scope: !1987)
!1996 = !DILocation(line: 2585, column: 30, scope: !1993)
!1997 = !DILocation(line: 2585, column: 24, scope: !1993)
!1998 = !DILocation(line: 2586, column: 9, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1987, file: !805, line: 2586, column: 9)
!2000 = !DILocation(line: 2586, column: 18, scope: !1999)
!2001 = !DILocation(line: 2586, column: 9, scope: !1987)
!2002 = !DILocation(line: 2586, column: 30, scope: !1999)
!2003 = !DILocation(line: 2586, column: 24, scope: !1999)
!2004 = !DILocation(line: 2587, column: 12, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !1987, file: !805, line: 2587, column: 5)
!2006 = !DILocation(line: 2587, column: 10, scope: !2005)
!2007 = !DILocation(line: 2587, column: 17, scope: !2008)
!2008 = distinct !DILexicalBlock(scope: !2005, file: !805, line: 2587, column: 5)
!2009 = !DILocation(line: 2587, column: 19, scope: !2008)
!2010 = !DILocation(line: 2587, column: 5, scope: !2005)
!2011 = !DILocation(line: 2587, column: 38, scope: !2008)
!2012 = !DILocation(line: 2587, column: 32, scope: !2008)
!2013 = !DILocation(line: 2587, column: 28, scope: !2008)
!2014 = !DILocation(line: 2587, column: 5, scope: !2008)
!2015 = distinct !{!2015, !2010, !2016}
!2016 = !DILocation(line: 2587, column: 39, scope: !2005)
!2017 = !DILocation(line: 2588, column: 10, scope: !1987)
!2018 = !DILocation(line: 2588, column: 5, scope: !1987)
!2019 = !DILocation(line: 2589, column: 1, scope: !1987)
!2020 = distinct !DISubprogram(name: "do_run_deferred_deletes", scope: !805, file: !805, line: 2648, type: !309, scopeLine: 2649, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2021)
!2021 = !{!2022, !2023, !2024}
!2022 = !DILocalVariable(name: "i", scope: !2020, file: !805, line: 2650, type: !47)
!2023 = !DILocalVariable(name: "j", scope: !2020, file: !805, line: 2650, type: !47)
!2024 = !DILocalVariable(name: "it", scope: !2025, file: !805, line: 2653, type: !243)
!2025 = distinct !DILexicalBlock(scope: !2026, file: !805, line: 2652, column: 35)
!2026 = distinct !DILexicalBlock(scope: !2027, file: !805, line: 2652, column: 5)
!2027 = distinct !DILexicalBlock(scope: !2020, file: !805, line: 2652, column: 5)
!2028 = !DILocation(line: 2650, column: 5, scope: !2020)
!2029 = !DILocation(line: 2650, column: 9, scope: !2020)
!2030 = !DILocation(line: 2650, column: 12, scope: !2020)
!2031 = !DILocation(line: 2652, column: 12, scope: !2027)
!2032 = !DILocation(line: 2652, column: 10, scope: !2027)
!2033 = !DILocation(line: 2652, column: 17, scope: !2026)
!2034 = !DILocation(line: 2652, column: 21, scope: !2026)
!2035 = !DILocation(line: 2652, column: 19, scope: !2026)
!2036 = !DILocation(line: 2652, column: 5, scope: !2027)
!2037 = !DILocation(line: 2653, column: 9, scope: !2025)
!2038 = !DILocation(line: 2653, column: 15, scope: !2025)
!2039 = !DILocation(line: 2653, column: 20, scope: !2025)
!2040 = !DILocation(line: 2653, column: 29, scope: !2025)
!2041 = !DILocation(line: 2654, column: 35, scope: !2042)
!2042 = distinct !DILexicalBlock(scope: !2025, file: !805, line: 2654, column: 13)
!2043 = !DILocation(line: 2654, column: 13, scope: !2042)
!2044 = !DILocation(line: 2654, column: 13, scope: !2025)
!2045 = !DILocation(line: 2655, column: 13, scope: !2046)
!2046 = distinct !DILexicalBlock(scope: !2047, file: !805, line: 2655, column: 13)
!2047 = distinct !DILexicalBlock(scope: !2048, file: !805, line: 2655, column: 13)
!2048 = distinct !DILexicalBlock(scope: !2042, file: !805, line: 2654, column: 40)
!2049 = !{!1596, !1059, i64 36}
!2050 = !DILocation(line: 2655, column: 13, scope: !2047)
!2051 = !DILocation(line: 2656, column: 13, scope: !2048)
!2052 = !DILocation(line: 2656, column: 17, scope: !2048)
!2053 = !DILocation(line: 2656, column: 26, scope: !2048)
!2054 = !DILocation(line: 2657, column: 28, scope: !2048)
!2055 = !DILocation(line: 2657, column: 13, scope: !2048)
!2056 = !DILocation(line: 2658, column: 28, scope: !2048)
!2057 = !DILocation(line: 2658, column: 13, scope: !2048)
!2058 = !DILocation(line: 2659, column: 9, scope: !2048)
!2059 = !DILocation(line: 2660, column: 29, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !2042, file: !805, line: 2659, column: 16)
!2061 = !DILocation(line: 2660, column: 13, scope: !2060)
!2062 = !DILocation(line: 2660, column: 23, scope: !2060)
!2063 = !DILocation(line: 2660, column: 27, scope: !2060)
!2064 = !DILocation(line: 2662, column: 5, scope: !2026)
!2065 = !DILocation(line: 2662, column: 5, scope: !2025)
!2066 = !DILocation(line: 2652, column: 31, scope: !2026)
!2067 = !DILocation(line: 2652, column: 5, scope: !2026)
!2068 = distinct !{!2068, !2036, !2069}
!2069 = !DILocation(line: 2662, column: 5, scope: !2027)
!2070 = !DILocation(line: 2663, column: 15, scope: !2020)
!2071 = !DILocation(line: 2663, column: 13, scope: !2020)
!2072 = !DILocation(line: 2664, column: 1, scope: !2020)
!2073 = distinct !DISubprogram(name: "BackingFileExists", scope: !805, file: !805, line: 2798, type: !2074, scopeLine: 2798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2076)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{!276, !302}
!2076 = !{!2077, !2078, !2082}
!2077 = !DILocalVariable(name: "path", arg: 1, scope: !2073, file: !805, line: 2798, type: !302)
!2078 = !DILocalVariable(name: "backing_file", scope: !2073, file: !805, line: 2799, type: !2079)
!2079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 480, elements: !2080)
!2080 = !{!2081}
!2081 = !DISubrange(count: 60)
!2082 = !DILocalVariable(name: "buffer", scope: !2073, file: !805, line: 2802, type: !2083)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2084, line: 46, size: 1152, elements: !2085)
!2084 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2085 = !{!2086, !2088, !2090, !2092, !2094, !2095, !2096, !2097, !2098, !2099, !2101, !2103, !2109, !2110, !2111}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2083, file: !2084, line: 48, baseType: !2087, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !122, line: 133, baseType: !220)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2083, file: !2084, line: 53, baseType: !2089, size: 64, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !122, line: 136, baseType: !220)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2083, file: !2084, line: 61, baseType: !2091, size: 64, offset: 128)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !122, line: 139, baseType: !220)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2083, file: !2084, line: 62, baseType: !2093, size: 32, offset: 192)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !122, line: 138, baseType: !7)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2083, file: !2084, line: 64, baseType: !463, size: 32, offset: 224)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2083, file: !2084, line: 65, baseType: !465, size: 32, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2083, file: !2084, line: 67, baseType: !47, size: 32, offset: 288)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2083, file: !2084, line: 69, baseType: !2087, size: 64, offset: 320)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2083, file: !2084, line: 74, baseType: !400, size: 64, offset: 384)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2083, file: !2084, line: 78, baseType: !2100, size: 64, offset: 448)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !122, line: 162, baseType: !175)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2083, file: !2084, line: 80, baseType: !2102, size: 64, offset: 512)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !122, line: 167, baseType: !175)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2083, file: !2084, line: 91, baseType: !2104, size: 128, offset: 576)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2105, line: 9, size: 128, elements: !2106)
!2105 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2106 = !{!2107, !2108}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2104, file: !2105, line: 11, baseType: !174, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2104, file: !2105, line: 12, baseType: !664, size: 64, offset: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2083, file: !2084, line: 92, baseType: !2104, size: 128, offset: 704)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2083, file: !2084, line: 93, baseType: !2104, size: 128, offset: 832)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2083, file: !2084, line: 106, baseType: !2112, size: 192, offset: 960)
!2112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !664, size: 192, elements: !2113)
!2113 = !{!2114}
!2114 = !DISubrange(count: 3)
!2115 = !DILocation(line: 2798, column: 36, scope: !2073)
!2116 = !DILocation(line: 2799, column: 5, scope: !2073)
!2117 = !DILocation(line: 2799, column: 10, scope: !2073)
!2118 = !DILocation(line: 2800, column: 12, scope: !2073)
!2119 = !DILocation(line: 2800, column: 26, scope: !2073)
!2120 = !DILocation(line: 2800, column: 5, scope: !2073)
!2121 = !DILocation(line: 2802, column: 5, scope: !2073)
!2122 = !DILocation(line: 2802, column: 17, scope: !2073)
!2123 = !DILocation(line: 2803, column: 19, scope: !2073)
!2124 = !DILocation(line: 2803, column: 13, scope: !2073)
!2125 = !DILocation(line: 2803, column: 42, scope: !2073)
!2126 = !DILocation(line: 2804, column: 1, scope: !2073)
!2127 = !DILocation(line: 2803, column: 5, scope: !2073)
!2128 = distinct !DISubprogram(name: "stat", scope: !794, file: !794, line: 449, type: !2129, scopeLine: 450, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2132)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{!47, !302, !2131}
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2132 = !{!2133, !2134}
!2133 = !DILocalVariable(name: "__path", arg: 1, scope: !2128, file: !794, line: 449, type: !302)
!2134 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2128, file: !794, line: 449, type: !2131)
!2135 = !DILocation(line: 449, column: 1, scope: !2128)
!2136 = !DILocation(line: 451, column: 30, scope: !2128)
!2137 = !DILocation(line: 451, column: 38, scope: !2128)
!2138 = !DILocation(line: 451, column: 10, scope: !2128)
!2139 = !DILocation(line: 451, column: 3, scope: !2128)
!2140 = distinct !DISubprogram(name: "BeginValgrindInstrumentation", scope: !805, file: !805, line: 2806, type: !309, scopeLine: 2806, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2141)
!2141 = !{!2142, !2149, !2150, !2153}
!2142 = !DILocalVariable(name: "_zzq_args", scope: !2143, file: !805, line: 2808, type: !2145)
!2143 = distinct !DILexicalBlock(scope: !2144, file: !805, line: 2808, column: 5)
!2144 = distinct !DILexicalBlock(scope: !2140, file: !805, line: 2808, column: 5)
!2145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2146, size: 384, elements: !2147)
!2146 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !220)
!2147 = !{!2148}
!2148 = !DISubrange(count: 6)
!2149 = !DILocalVariable(name: "_zzq_result", scope: !2143, file: !805, line: 2808, type: !2146)
!2150 = !DILocalVariable(name: "_zzq_args", scope: !2151, file: !805, line: 2809, type: !2145)
!2151 = distinct !DILexicalBlock(scope: !2152, file: !805, line: 2809, column: 5)
!2152 = distinct !DILexicalBlock(scope: !2140, file: !805, line: 2809, column: 5)
!2153 = !DILocalVariable(name: "_zzq_result", scope: !2151, file: !805, line: 2809, type: !2146)
!2154 = !DILocation(line: 2808, column: 5, scope: !2140)
!2155 = !DILocation(line: 2808, column: 5, scope: !2143)
!2156 = !{i32 -2143072284, i32 -2143072248, i32 -2143072180}
!2157 = !DILocation(line: 2808, column: 5, scope: !2144)
!2158 = !DILocation(line: 2809, column: 5, scope: !2140)
!2159 = !DILocation(line: 2809, column: 5, scope: !2151)
!2160 = !{i32 -2143070567, i32 -2143070531, i32 -2143070463}
!2161 = !DILocation(line: 2809, column: 5, scope: !2152)
!2162 = !DILocation(line: 2810, column: 1, scope: !2140)
!2163 = distinct !DISubprogram(name: "main", scope: !805, file: !805, line: 2812, type: !2164, scopeLine: 2812, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2166)
!2164 = !DISubroutineType(types: !2165)
!2165 = !{!47, !47, !271}
!2166 = !{!2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2185, !2188, !2191}
!2167 = !DILocalVariable(name: "argc", arg: 1, scope: !2163, file: !805, line: 2812, type: !47)
!2168 = !DILocalVariable(name: "argv", arg: 2, scope: !2163, file: !805, line: 2812, type: !271)
!2169 = !DILocalVariable(name: "c", scope: !2163, file: !805, line: 2813, type: !47)
!2170 = !DILocalVariable(name: "is_enable_trace", scope: !2163, file: !805, line: 2813, type: !47)
!2171 = !DILocalVariable(name: "addr", scope: !2163, file: !805, line: 2814, type: !817)
!2172 = !DILocalVariable(name: "lock_memory", scope: !2163, file: !805, line: 2815, type: !276)
!2173 = !DILocalVariable(name: "daemonize", scope: !2163, file: !805, line: 2816, type: !276)
!2174 = !DILocalVariable(name: "maxcore", scope: !2163, file: !805, line: 2817, type: !47)
!2175 = !DILocalVariable(name: "username", scope: !2163, file: !805, line: 2818, type: !195)
!2176 = !DILocalVariable(name: "pid_file", scope: !2163, file: !805, line: 2819, type: !195)
!2177 = !DILocalVariable(name: "pw", scope: !2163, file: !805, line: 2820, type: !457)
!2178 = !DILocalVariable(name: "sa", scope: !2163, file: !805, line: 2821, type: !510)
!2179 = !DILocalVariable(name: "rlim", scope: !2163, file: !805, line: 2822, type: !438)
!2180 = !DILocalVariable(name: "path", scope: !2163, file: !805, line: 2832, type: !302)
!2181 = !DILocalVariable(name: "recover", scope: !2163, file: !805, line: 2929, type: !276)
!2182 = !DILocalVariable(name: "rlim_new", scope: !2183, file: !805, line: 2947, type: !438)
!2183 = distinct !DILexicalBlock(scope: !2184, file: !805, line: 2946, column: 23)
!2184 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 2946, column: 9)
!2185 = !DILocalVariable(name: "maxfiles", scope: !2186, file: !805, line: 2981, type: !47)
!2186 = distinct !DILexicalBlock(scope: !2187, file: !805, line: 2980, column: 12)
!2187 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 2977, column: 9)
!2188 = !DILocalVariable(name: "res", scope: !2189, file: !805, line: 3045, type: !47)
!2189 = distinct !DILexicalBlock(scope: !2190, file: !805, line: 3044, column: 20)
!2190 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3044, column: 9)
!2191 = !DILocalVariable(name: "pop", scope: !2163, file: !805, line: 3059, type: !2192)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMEMobjpool", file: !483, line: 67, baseType: !482)
!2194 = !DILocation(line: 2812, column: 15, scope: !2163)
!2195 = !DILocation(line: 2812, column: 28, scope: !2163)
!2196 = !DILocation(line: 2813, column: 5, scope: !2163)
!2197 = !DILocation(line: 2813, column: 9, scope: !2163)
!2198 = !DILocation(line: 2813, column: 12, scope: !2163)
!2199 = !DILocation(line: 2814, column: 5, scope: !2163)
!2200 = !DILocation(line: 2814, column: 20, scope: !2163)
!2201 = !DILocation(line: 2815, column: 5, scope: !2163)
!2202 = !DILocation(line: 2815, column: 10, scope: !2163)
!2203 = !DILocation(line: 2816, column: 5, scope: !2163)
!2204 = !DILocation(line: 2816, column: 10, scope: !2163)
!2205 = !DILocation(line: 2817, column: 5, scope: !2163)
!2206 = !DILocation(line: 2817, column: 9, scope: !2163)
!2207 = !DILocation(line: 2818, column: 5, scope: !2163)
!2208 = !DILocation(line: 2818, column: 11, scope: !2163)
!2209 = !DILocation(line: 2819, column: 5, scope: !2163)
!2210 = !DILocation(line: 2819, column: 11, scope: !2163)
!2211 = !DILocation(line: 2820, column: 5, scope: !2163)
!2212 = !DILocation(line: 2820, column: 20, scope: !2163)
!2213 = !DILocation(line: 2821, column: 5, scope: !2163)
!2214 = !DILocation(line: 2821, column: 22, scope: !2163)
!2215 = !DILocation(line: 2822, column: 5, scope: !2163)
!2216 = !DILocation(line: 2822, column: 19, scope: !2163)
!2217 = !DILocation(line: 2824, column: 5, scope: !2163)
!2218 = !DILocation(line: 2827, column: 5, scope: !2163)
!2219 = !DILocation(line: 2830, column: 12, scope: !2163)
!2220 = !DILocation(line: 2830, column: 5, scope: !2163)
!2221 = !DILocation(line: 2832, column: 5, scope: !2163)
!2222 = !DILocation(line: 2832, column: 17, scope: !2163)
!2223 = !DILocation(line: 2832, column: 24, scope: !2163)
!2224 = !DILocation(line: 2834, column: 5, scope: !2163)
!2225 = !DILocation(line: 2834, column: 24, scope: !2163)
!2226 = !DILocation(line: 2834, column: 30, scope: !2163)
!2227 = !DILocation(line: 2834, column: 17, scope: !2163)
!2228 = !DILocation(line: 2834, column: 15, scope: !2163)
!2229 = !DILocation(line: 2834, column: 77, scope: !2163)
!2230 = !DILocation(line: 2835, column: 17, scope: !2231)
!2231 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 2834, column: 84)
!2232 = !DILocation(line: 2835, column: 9, scope: !2231)
!2233 = !DILocation(line: 2838, column: 37, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2231, file: !805, line: 2835, column: 20)
!2235 = !DILocation(line: 2838, column: 30, scope: !2234)
!2236 = !DILocation(line: 2838, column: 28, scope: !2234)
!2237 = !{!1247, !934, i64 48}
!2238 = !DILocation(line: 2839, column: 13, scope: !2234)
!2239 = !DILocation(line: 2841, column: 37, scope: !2234)
!2240 = !DILocation(line: 2841, column: 32, scope: !2234)
!2241 = !DILocation(line: 2841, column: 30, scope: !2234)
!2242 = !{!1247, !934, i64 16}
!2243 = !DILocation(line: 2842, column: 13, scope: !2234)
!2244 = !DILocation(line: 2844, column: 30, scope: !2234)
!2245 = !{!1247, !1032, i64 32}
!2246 = !DILocation(line: 2845, column: 13, scope: !2234)
!2247 = !DILocation(line: 2847, column: 34, scope: !2234)
!2248 = !DILocation(line: 2847, column: 29, scope: !2234)
!2249 = !DILocation(line: 2847, column: 27, scope: !2234)
!2250 = !{!1247, !934, i64 12}
!2251 = !DILocation(line: 2848, column: 13, scope: !2234)
!2252 = !DILocation(line: 2850, column: 35, scope: !2234)
!2253 = !DILocation(line: 2850, column: 33, scope: !2234)
!2254 = !{!1247, !965, i64 40}
!2255 = !DILocation(line: 2851, column: 13, scope: !2234)
!2256 = !DILocation(line: 2853, column: 47, scope: !2234)
!2257 = !DILocation(line: 2853, column: 42, scope: !2234)
!2258 = !DILocation(line: 2853, column: 34, scope: !2234)
!2259 = !DILocation(line: 2853, column: 56, scope: !2234)
!2260 = !DILocation(line: 2853, column: 63, scope: !2234)
!2261 = !DILocation(line: 2853, column: 31, scope: !2234)
!2262 = !{!1247, !915, i64 0}
!2263 = !DILocation(line: 2854, column: 13, scope: !2234)
!2264 = !DILocation(line: 2856, column: 36, scope: !2234)
!2265 = !{!1247, !934, i64 36}
!2266 = !DILocation(line: 2857, column: 13, scope: !2234)
!2267 = !DILocation(line: 2859, column: 38, scope: !2234)
!2268 = !DILocation(line: 2859, column: 33, scope: !2234)
!2269 = !DILocation(line: 2859, column: 31, scope: !2234)
!2270 = !{!1247, !934, i64 8}
!2271 = !DILocation(line: 2860, column: 13, scope: !2234)
!2272 = !DILocation(line: 2862, column: 13, scope: !2234)
!2273 = !DILocation(line: 2863, column: 13, scope: !2234)
!2274 = !DILocation(line: 2865, column: 13, scope: !2234)
!2275 = !DILocation(line: 2866, column: 13, scope: !2234)
!2276 = !DILocation(line: 2868, column: 25, scope: !2234)
!2277 = !DILocation(line: 2869, column: 13, scope: !2234)
!2278 = !DILocation(line: 2871, column: 29, scope: !2234)
!2279 = !DILocation(line: 2872, column: 13, scope: !2234)
!2280 = !DILocation(line: 2874, column: 36, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2234, file: !805, line: 2874, column: 17)
!2282 = !DILocation(line: 2874, column: 44, scope: !2281)
!2283 = !DILocation(line: 2874, column: 17, scope: !2281)
!2284 = !DILocation(line: 2874, column: 51, scope: !2281)
!2285 = !DILocation(line: 2874, column: 17, scope: !2234)
!2286 = !DILocation(line: 2875, column: 25, scope: !2287)
!2287 = distinct !DILexicalBlock(scope: !2281, file: !805, line: 2874, column: 57)
!2288 = !DILocation(line: 2875, column: 58, scope: !2287)
!2289 = !DILocation(line: 2875, column: 17, scope: !2287)
!2290 = !DILocation(line: 2876, column: 17, scope: !2287)
!2291 = !DILocation(line: 2878, column: 35, scope: !2292)
!2292 = distinct !DILexicalBlock(scope: !2281, file: !805, line: 2877, column: 20)
!2293 = !{i64 0, i64 4, !946}
!2294 = !DILocation(line: 2880, column: 13, scope: !2234)
!2295 = !DILocation(line: 2882, column: 23, scope: !2234)
!2296 = !DILocation(line: 2883, column: 13, scope: !2234)
!2297 = !DILocation(line: 2885, column: 21, scope: !2234)
!2298 = !DILocation(line: 2886, column: 13, scope: !2234)
!2299 = !DILocation(line: 2888, column: 24, scope: !2234)
!2300 = !DILocation(line: 2888, column: 22, scope: !2234)
!2301 = !DILocation(line: 2889, column: 13, scope: !2234)
!2302 = !DILocation(line: 2891, column: 24, scope: !2234)
!2303 = !DILocation(line: 2891, column: 22, scope: !2234)
!2304 = !DILocation(line: 2892, column: 13, scope: !2234)
!2305 = !DILocation(line: 2894, column: 36, scope: !2234)
!2306 = !DILocation(line: 2894, column: 31, scope: !2234)
!2307 = !DILocation(line: 2894, column: 29, scope: !2234)
!2308 = !{!1247, !1249, i64 56}
!2309 = !DILocation(line: 2895, column: 26, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2234, file: !805, line: 2895, column: 17)
!2311 = !DILocation(line: 2895, column: 33, scope: !2310)
!2312 = !DILocation(line: 2895, column: 17, scope: !2234)
!2313 = !DILocation(line: 2896, column: 25, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2310, file: !805, line: 2895, column: 41)
!2315 = !DILocation(line: 2896, column: 17, scope: !2314)
!2316 = !DILocation(line: 2897, column: 17, scope: !2314)
!2317 = !DILocation(line: 2899, column: 13, scope: !2234)
!2318 = !DILocation(line: 2901, column: 40, scope: !2234)
!2319 = !DILocation(line: 2901, column: 35, scope: !2234)
!2320 = !DILocation(line: 2901, column: 33, scope: !2234)
!2321 = !{!1247, !934, i64 64}
!2322 = !DILocation(line: 2902, column: 26, scope: !2323)
!2323 = distinct !DILexicalBlock(scope: !2234, file: !805, line: 2902, column: 17)
!2324 = !DILocation(line: 2902, column: 37, scope: !2323)
!2325 = !DILocation(line: 2902, column: 17, scope: !2234)
!2326 = !DILocation(line: 2903, column: 25, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2323, file: !805, line: 2902, column: 43)
!2328 = !DILocation(line: 2903, column: 17, scope: !2327)
!2329 = !DILocation(line: 2904, column: 17, scope: !2327)
!2330 = !DILocation(line: 2906, column: 13, scope: !2234)
!2331 = !DILocation(line: 2908, column: 41, scope: !2234)
!2332 = !DILocation(line: 2908, column: 36, scope: !2234)
!2333 = !DILocation(line: 2908, column: 34, scope: !2234)
!2334 = !{!1247, !934, i64 68}
!2335 = !DILocation(line: 2909, column: 26, scope: !2336)
!2336 = distinct !DILexicalBlock(scope: !2234, file: !805, line: 2909, column: 17)
!2337 = !DILocation(line: 2909, column: 38, scope: !2336)
!2338 = !DILocation(line: 2909, column: 17, scope: !2234)
!2339 = !DILocation(line: 2910, column: 25, scope: !2340)
!2340 = distinct !DILexicalBlock(scope: !2336, file: !805, line: 2909, column: 44)
!2341 = !DILocation(line: 2910, column: 17, scope: !2340)
!2342 = !DILocation(line: 2911, column: 17, scope: !2340)
!2343 = !DILocation(line: 2913, column: 13, scope: !2234)
!2344 = !DILocation(line: 2915, column: 19, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2234, file: !805, line: 2915, column: 17)
!2346 = !DILocation(line: 2915, column: 26, scope: !2345)
!2347 = !DILocation(line: 2915, column: 31, scope: !2345)
!2348 = !DILocation(line: 2915, column: 17, scope: !2234)
!2349 = !DILocation(line: 2916, column: 25, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2345, file: !805, line: 2915, column: 42)
!2351 = !DILocation(line: 2916, column: 17, scope: !2350)
!2352 = !DILocation(line: 2917, column: 17, scope: !2350)
!2353 = !DILocation(line: 2919, column: 41, scope: !2234)
!2354 = !DILocation(line: 2919, column: 39, scope: !2234)
!2355 = !{!1247, !916, i64 72}
!2356 = !DILocation(line: 2920, column: 37, scope: !2234)
!2357 = !{!1247, !934, i64 76}
!2358 = !DILocation(line: 2921, column: 13, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2360, file: !805, line: 2921, column: 13)
!2360 = distinct !DILexicalBlock(scope: !2234, file: !805, line: 2921, column: 13)
!2361 = !DILocation(line: 2924, column: 21, scope: !2234)
!2362 = !DILocation(line: 2924, column: 58, scope: !2234)
!2363 = !DILocation(line: 2924, column: 13, scope: !2234)
!2364 = !DILocation(line: 2925, column: 13, scope: !2234)
!2365 = distinct !{!2365, !2224, !2366}
!2366 = !DILocation(line: 2927, column: 5, scope: !2163)
!2367 = !DILocation(line: 2929, column: 5, scope: !2163)
!2368 = !DILocation(line: 2929, column: 10, scope: !2163)
!2369 = !DILocation(line: 2929, column: 38, scope: !2163)
!2370 = !DILocation(line: 2929, column: 20, scope: !2163)
!2371 = !DILocation(line: 2946, column: 9, scope: !2184)
!2372 = !DILocation(line: 2946, column: 17, scope: !2184)
!2373 = !DILocation(line: 2946, column: 9, scope: !2163)
!2374 = !DILocation(line: 2947, column: 9, scope: !2183)
!2375 = !DILocation(line: 2947, column: 23, scope: !2183)
!2376 = !DILocation(line: 2952, column: 13, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2183, file: !805, line: 2952, column: 13)
!2378 = !DILocation(line: 2952, column: 43, scope: !2377)
!2379 = !DILocation(line: 2952, column: 13, scope: !2183)
!2380 = !DILocation(line: 2953, column: 42, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2377, file: !805, line: 2952, column: 49)
!2382 = !DILocation(line: 2953, column: 51, scope: !2381)
!2383 = !{!2384, !915, i64 8}
!2384 = !{!"rlimit", !915, i64 0, !915, i64 8}
!2385 = !DILocation(line: 2953, column: 22, scope: !2381)
!2386 = !DILocation(line: 2953, column: 31, scope: !2381)
!2387 = !{!2384, !915, i64 0}
!2388 = !DILocation(line: 2954, column: 17, scope: !2389)
!2389 = distinct !DILexicalBlock(scope: !2381, file: !805, line: 2954, column: 17)
!2390 = !DILocation(line: 2954, column: 50, scope: !2389)
!2391 = !DILocation(line: 2954, column: 17, scope: !2381)
!2392 = !DILocation(line: 2956, column: 62, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2389, file: !805, line: 2954, column: 56)
!2394 = !DILocation(line: 2956, column: 46, scope: !2393)
!2395 = !DILocation(line: 2956, column: 55, scope: !2393)
!2396 = !DILocation(line: 2956, column: 26, scope: !2393)
!2397 = !DILocation(line: 2956, column: 35, scope: !2393)
!2398 = !DILocation(line: 2957, column: 23, scope: !2393)
!2399 = !DILocation(line: 2958, column: 13, scope: !2393)
!2400 = !DILocation(line: 2959, column: 9, scope: !2381)
!2401 = !DILocation(line: 2966, column: 14, scope: !2402)
!2402 = distinct !DILexicalBlock(scope: !2183, file: !805, line: 2966, column: 13)
!2403 = !DILocation(line: 2966, column: 44, scope: !2402)
!2404 = !DILocation(line: 2966, column: 50, scope: !2402)
!2405 = !DILocation(line: 2966, column: 58, scope: !2402)
!2406 = !DILocation(line: 2966, column: 67, scope: !2402)
!2407 = !DILocation(line: 2966, column: 13, scope: !2183)
!2408 = !DILocation(line: 2967, column: 21, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2402, file: !805, line: 2966, column: 73)
!2410 = !DILocation(line: 2967, column: 13, scope: !2409)
!2411 = !DILocation(line: 2968, column: 13, scope: !2409)
!2412 = !DILocation(line: 2970, column: 5, scope: !2184)
!2413 = !DILocation(line: 2970, column: 5, scope: !2183)
!2414 = !DILocation(line: 2977, column: 9, scope: !2187)
!2415 = !DILocation(line: 2977, column: 41, scope: !2187)
!2416 = !DILocation(line: 2977, column: 9, scope: !2163)
!2417 = !DILocation(line: 2978, column: 17, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !2187, file: !805, line: 2977, column: 47)
!2419 = !DILocation(line: 2978, column: 9, scope: !2418)
!2420 = !DILocation(line: 2979, column: 9, scope: !2418)
!2421 = !DILocation(line: 2981, column: 9, scope: !2186)
!2422 = !DILocation(line: 2981, column: 13, scope: !2186)
!2423 = !DILocation(line: 2981, column: 33, scope: !2186)
!2424 = !DILocation(line: 2982, column: 18, scope: !2425)
!2425 = distinct !DILexicalBlock(scope: !2186, file: !805, line: 2982, column: 13)
!2426 = !DILocation(line: 2982, column: 29, scope: !2425)
!2427 = !DILocation(line: 2982, column: 27, scope: !2425)
!2428 = !DILocation(line: 2982, column: 13, scope: !2186)
!2429 = !DILocation(line: 2983, column: 29, scope: !2425)
!2430 = !DILocation(line: 2983, column: 38, scope: !2425)
!2431 = !DILocation(line: 2983, column: 18, scope: !2425)
!2432 = !DILocation(line: 2983, column: 27, scope: !2425)
!2433 = !DILocation(line: 2983, column: 13, scope: !2425)
!2434 = !DILocation(line: 2984, column: 18, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2186, file: !805, line: 2984, column: 13)
!2436 = !DILocation(line: 2984, column: 34, scope: !2435)
!2437 = !DILocation(line: 2984, column: 27, scope: !2435)
!2438 = !DILocation(line: 2984, column: 13, scope: !2186)
!2439 = !DILocation(line: 2985, column: 34, scope: !2435)
!2440 = !DILocation(line: 2985, column: 18, scope: !2435)
!2441 = !DILocation(line: 2985, column: 27, scope: !2435)
!2442 = !DILocation(line: 2985, column: 13, scope: !2435)
!2443 = !DILocation(line: 2986, column: 13, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2186, file: !805, line: 2986, column: 13)
!2445 = !DILocation(line: 2986, column: 45, scope: !2444)
!2446 = !DILocation(line: 2986, column: 13, scope: !2186)
!2447 = !DILocation(line: 2987, column: 21, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2444, file: !805, line: 2986, column: 51)
!2449 = !DILocation(line: 2987, column: 13, scope: !2448)
!2450 = !DILocation(line: 2988, column: 13, scope: !2448)
!2451 = !DILocation(line: 2990, column: 5, scope: !2187)
!2452 = !DILocation(line: 3000, column: 18, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3000, column: 9)
!2454 = !DILocation(line: 3000, column: 29, scope: !2453)
!2455 = !DILocation(line: 3000, column: 9, scope: !2163)
!2456 = !DILocation(line: 3001, column: 43, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2453, file: !805, line: 3000, column: 38)
!2458 = !DILocation(line: 3001, column: 20, scope: !2457)
!2459 = !DILocation(line: 3001, column: 18, scope: !2457)
!2460 = !DILocation(line: 3002, column: 13, scope: !2461)
!2461 = distinct !DILexicalBlock(scope: !2457, file: !805, line: 3002, column: 13)
!2462 = !DILocation(line: 3002, column: 22, scope: !2461)
!2463 = !DILocation(line: 3002, column: 13, scope: !2457)
!2464 = !DILocation(line: 3003, column: 21, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2461, file: !805, line: 3002, column: 29)
!2466 = !DILocation(line: 3003, column: 13, scope: !2465)
!2467 = !DILocation(line: 3004, column: 13, scope: !2465)
!2468 = !DILocation(line: 3006, column: 5, scope: !2457)
!2469 = !DILocation(line: 3008, column: 18, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3008, column: 9)
!2471 = !DILocation(line: 3008, column: 26, scope: !2470)
!2472 = !DILocation(line: 3008, column: 30, scope: !2470)
!2473 = !DILocation(line: 3008, column: 42, scope: !2470)
!2474 = !DILocation(line: 3008, column: 53, scope: !2470)
!2475 = !DILocation(line: 3008, column: 9, scope: !2163)
!2476 = !DILocation(line: 3010, column: 43, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2470, file: !805, line: 3008, column: 62)
!2478 = !DILocation(line: 3010, column: 20, scope: !2477)
!2479 = !DILocation(line: 3010, column: 18, scope: !2477)
!2480 = !DILocation(line: 3011, column: 13, scope: !2481)
!2481 = distinct !DILexicalBlock(scope: !2477, file: !805, line: 3011, column: 13)
!2482 = !DILocation(line: 3011, column: 22, scope: !2481)
!2483 = !DILocation(line: 3011, column: 13, scope: !2477)
!2484 = !DILocation(line: 3012, column: 21, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2481, file: !805, line: 3011, column: 29)
!2486 = !DILocation(line: 3012, column: 75, scope: !2485)
!2487 = !DILocation(line: 3012, column: 13, scope: !2485)
!2488 = !DILocation(line: 3013, column: 13, scope: !2485)
!2489 = !DILocation(line: 3015, column: 5, scope: !2477)
!2490 = !DILocation(line: 3018, column: 9, scope: !2491)
!2491 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3018, column: 9)
!2492 = !DILocation(line: 3018, column: 18, scope: !2491)
!2493 = !DILocation(line: 3018, column: 23, scope: !2491)
!2494 = !DILocation(line: 3018, column: 26, scope: !2491)
!2495 = !DILocation(line: 3018, column: 36, scope: !2491)
!2496 = !DILocation(line: 3018, column: 9, scope: !2163)
!2497 = !DILocation(line: 3019, column: 13, scope: !2498)
!2498 = distinct !DILexicalBlock(scope: !2499, file: !805, line: 3019, column: 13)
!2499 = distinct !DILexicalBlock(scope: !2491, file: !805, line: 3018, column: 42)
!2500 = !DILocation(line: 3019, column: 22, scope: !2498)
!2501 = !DILocation(line: 3019, column: 27, scope: !2498)
!2502 = !DILocation(line: 3019, column: 31, scope: !2498)
!2503 = !DILocation(line: 3019, column: 30, scope: !2498)
!2504 = !DILocation(line: 3019, column: 40, scope: !2498)
!2505 = !DILocation(line: 3019, column: 13, scope: !2499)
!2506 = !DILocation(line: 3020, column: 21, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2498, file: !805, line: 3019, column: 49)
!2508 = !DILocation(line: 3020, column: 13, scope: !2507)
!2509 = !DILocation(line: 3021, column: 13, scope: !2507)
!2510 = !DILocation(line: 3023, column: 28, scope: !2511)
!2511 = distinct !DILexicalBlock(scope: !2499, file: !805, line: 3023, column: 13)
!2512 = !DILocation(line: 3023, column: 19, scope: !2511)
!2513 = !DILocation(line: 3023, column: 17, scope: !2511)
!2514 = !DILocation(line: 3023, column: 39, scope: !2511)
!2515 = !DILocation(line: 3023, column: 13, scope: !2499)
!2516 = !DILocation(line: 3024, column: 21, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2511, file: !805, line: 3023, column: 45)
!2518 = !DILocation(line: 3024, column: 70, scope: !2517)
!2519 = !DILocation(line: 3024, column: 13, scope: !2517)
!2520 = !DILocation(line: 3025, column: 13, scope: !2517)
!2521 = !DILocation(line: 3027, column: 20, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2499, file: !805, line: 3027, column: 13)
!2523 = !DILocation(line: 3027, column: 24, scope: !2522)
!2524 = !{!2525, !934, i64 20}
!2525 = !{!"passwd", !965, i64 0, !965, i64 8, !934, i64 16, !934, i64 20, !965, i64 24, !965, i64 32, !965, i64 40}
!2526 = !DILocation(line: 3027, column: 13, scope: !2522)
!2527 = !DILocation(line: 3027, column: 32, scope: !2522)
!2528 = !DILocation(line: 3027, column: 36, scope: !2522)
!2529 = !DILocation(line: 3027, column: 46, scope: !2522)
!2530 = !DILocation(line: 3027, column: 50, scope: !2522)
!2531 = !{!2525, !934, i64 16}
!2532 = !DILocation(line: 3027, column: 39, scope: !2522)
!2533 = !DILocation(line: 3027, column: 58, scope: !2522)
!2534 = !DILocation(line: 3027, column: 13, scope: !2499)
!2535 = !DILocation(line: 3028, column: 21, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2522, file: !805, line: 3027, column: 63)
!2537 = !DILocation(line: 3028, column: 71, scope: !2536)
!2538 = !DILocation(line: 3028, column: 13, scope: !2536)
!2539 = !DILocation(line: 3029, column: 13, scope: !2536)
!2540 = !DILocation(line: 3031, column: 5, scope: !2499)
!2541 = !DILocation(line: 3034, column: 18, scope: !2542)
!2542 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3034, column: 9)
!2543 = !DILocation(line: 3034, column: 29, scope: !2542)
!2544 = !DILocation(line: 3034, column: 9, scope: !2163)
!2545 = !DILocation(line: 3035, column: 48, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2542, file: !805, line: 3034, column: 38)
!2547 = !DILocation(line: 3035, column: 68, scope: !2546)
!2548 = !DILocation(line: 3035, column: 20, scope: !2546)
!2549 = !DILocation(line: 3035, column: 18, scope: !2546)
!2550 = !DILocation(line: 3036, column: 13, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2546, file: !805, line: 3036, column: 13)
!2552 = !DILocation(line: 3036, column: 22, scope: !2551)
!2553 = !DILocation(line: 3036, column: 13, scope: !2546)
!2554 = !DILocation(line: 3037, column: 21, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2551, file: !805, line: 3036, column: 29)
!2556 = !DILocation(line: 3037, column: 13, scope: !2555)
!2557 = !DILocation(line: 3038, column: 13, scope: !2555)
!2558 = !DILocation(line: 3040, column: 5, scope: !2546)
!2559 = !DILocation(line: 3044, column: 9, scope: !2190)
!2560 = !DILocation(line: 3044, column: 9, scope: !2163)
!2561 = !DILocation(line: 3045, column: 9, scope: !2189)
!2562 = !DILocation(line: 3045, column: 13, scope: !2189)
!2563 = !DILocation(line: 3046, column: 22, scope: !2189)
!2564 = !DILocation(line: 3046, column: 40, scope: !2189)
!2565 = !DILocation(line: 3046, column: 15, scope: !2189)
!2566 = !DILocation(line: 3046, column: 13, scope: !2189)
!2567 = !DILocation(line: 3047, column: 13, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2189, file: !805, line: 3047, column: 13)
!2569 = !DILocation(line: 3047, column: 17, scope: !2568)
!2570 = !DILocation(line: 3047, column: 13, scope: !2189)
!2571 = !DILocation(line: 3048, column: 21, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2568, file: !805, line: 3047, column: 24)
!2573 = !DILocation(line: 3048, column: 13, scope: !2572)
!2574 = !DILocation(line: 3049, column: 13, scope: !2572)
!2575 = !DILocation(line: 3051, column: 5, scope: !2190)
!2576 = !DILocation(line: 3051, column: 5, scope: !2189)
!2577 = !DILocation(line: 3055, column: 17, scope: !2163)
!2578 = !DILocation(line: 3055, column: 15, scope: !2163)
!2579 = !DILocation(line: 3059, column: 5, scope: !2163)
!2580 = !DILocation(line: 3059, column: 18, scope: !2163)
!2581 = !DILocation(line: 3059, column: 35, scope: !2163)
!2582 = !DILocation(line: 3059, column: 44, scope: !2163)
!2583 = !DILocation(line: 3059, column: 24, scope: !2163)
!2584 = !DILocation(line: 3060, column: 15, scope: !2163)
!2585 = !DILocation(line: 3060, column: 5, scope: !2163)
!2586 = !DILocation(line: 3061, column: 5, scope: !2163)
!2587 = !DILocation(line: 3063, column: 5, scope: !2163)
!2588 = !DILocation(line: 3064, column: 25, scope: !2163)
!2589 = !DILocation(line: 3064, column: 44, scope: !2163)
!2590 = !DILocation(line: 3064, column: 5, scope: !2163)
!2591 = !DILocation(line: 3067, column: 18, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3067, column: 9)
!2593 = !DILocation(line: 3067, column: 9, scope: !2163)
!2594 = !DILocation(line: 3068, column: 19, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2592, file: !805, line: 3067, column: 27)
!2596 = !DILocation(line: 3068, column: 17, scope: !2595)
!2597 = !DILocation(line: 3069, column: 13, scope: !2598)
!2598 = distinct !DILexicalBlock(scope: !2595, file: !805, line: 3069, column: 13)
!2599 = !DILocation(line: 3069, column: 21, scope: !2598)
!2600 = !DILocation(line: 3069, column: 13, scope: !2595)
!2601 = !DILocation(line: 3070, column: 21, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2598, file: !805, line: 3069, column: 27)
!2603 = !DILocation(line: 3070, column: 13, scope: !2602)
!2604 = !DILocation(line: 3071, column: 13, scope: !2602)
!2605 = !DILocation(line: 3073, column: 16, scope: !2595)
!2606 = !DILocation(line: 3073, column: 9, scope: !2595)
!2607 = !DILocation(line: 3074, column: 5, scope: !2595)
!2608 = !DILocation(line: 3077, column: 9, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3077, column: 9)
!2610 = !DILocation(line: 3077, column: 9, scope: !2163)
!2611 = !DILocation(line: 3079, column: 9, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2609, file: !805, line: 3077, column: 22)
!2613 = !DILocation(line: 3083, column: 5, scope: !2612)
!2614 = !DILocation(line: 3089, column: 8, scope: !2163)
!2615 = !DILocation(line: 3089, column: 19, scope: !2163)
!2616 = !DILocation(line: 3090, column: 8, scope: !2163)
!2617 = !DILocation(line: 3090, column: 17, scope: !2163)
!2618 = !{!2619, !934, i64 136}
!2619 = !{!"sigaction", !916, i64 0, !2620, i64 8, !934, i64 136, !965, i64 144}
!2620 = !{!"", !916, i64 0}
!2621 = !DILocation(line: 3091, column: 25, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3091, column: 9)
!2623 = !DILocation(line: 3091, column: 9, scope: !2622)
!2624 = !DILocation(line: 3091, column: 34, scope: !2622)
!2625 = !DILocation(line: 3091, column: 40, scope: !2622)
!2626 = !DILocation(line: 3092, column: 13, scope: !2622)
!2627 = !DILocation(line: 3092, column: 40, scope: !2622)
!2628 = !DILocation(line: 3091, column: 9, scope: !2163)
!2629 = !DILocation(line: 3093, column: 9, scope: !2630)
!2630 = distinct !DILexicalBlock(scope: !2622, file: !805, line: 3092, column: 47)
!2631 = !DILocation(line: 3094, column: 9, scope: !2630)
!2632 = !DILocation(line: 3097, column: 34, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3097, column: 9)
!2634 = !DILocation(line: 3098, column: 53, scope: !2633)
!2635 = !DILocation(line: 3097, column: 25, scope: !2633)
!2636 = !DILocation(line: 3097, column: 23, scope: !2633)
!2637 = !DILocation(line: 3097, column: 9, scope: !2163)
!2638 = !DILocation(line: 3099, column: 17, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2633, file: !805, line: 3098, column: 66)
!2640 = !DILocation(line: 3099, column: 9, scope: !2639)
!2641 = !DILocation(line: 3100, column: 9, scope: !2639)
!2642 = !DILocation(line: 3103, column: 26, scope: !2163)
!2643 = !DILocation(line: 3103, column: 39, scope: !2163)
!2644 = !DILocation(line: 3103, column: 5, scope: !2163)
!2645 = !DILocation(line: 3106, column: 9, scope: !2646)
!2646 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3106, column: 9)
!2647 = !DILocation(line: 3106, column: 9, scope: !2163)
!2648 = !DILocation(line: 3107, column: 18, scope: !2646)
!2649 = !DILocation(line: 3107, column: 28, scope: !2646)
!2650 = !DILocation(line: 3107, column: 9, scope: !2646)
!2651 = !DILocation(line: 3109, column: 5, scope: !2163)
!2652 = !DILocation(line: 3111, column: 14, scope: !2163)
!2653 = !DILocation(line: 3112, column: 13, scope: !2163)
!2654 = !DILocation(line: 3113, column: 45, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3113, column: 9)
!2656 = !DILocation(line: 3113, column: 43, scope: !2655)
!2657 = !DILocation(line: 3113, column: 21, scope: !2655)
!2658 = !DILocation(line: 3113, column: 19, scope: !2655)
!2659 = !DILocation(line: 3113, column: 56, scope: !2655)
!2660 = !DILocation(line: 3113, column: 9, scope: !2163)
!2661 = !DILocation(line: 3114, column: 9, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2655, file: !805, line: 3113, column: 65)
!2663 = !DILocation(line: 3115, column: 9, scope: !2662)
!2664 = !DILocation(line: 3117, column: 5, scope: !2163)
!2665 = !DILocation(line: 3119, column: 9, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3119, column: 9)
!2667 = !DILocation(line: 3119, column: 18, scope: !2666)
!2668 = !DILocation(line: 3119, column: 9, scope: !2163)
!2669 = !DILocation(line: 3120, column: 16, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2671, file: !805, line: 3120, column: 9)
!2671 = distinct !DILexicalBlock(scope: !2666, file: !805, line: 3119, column: 24)
!2672 = !DILocation(line: 3120, column: 14, scope: !2670)
!2673 = !DILocation(line: 3120, column: 21, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2670, file: !805, line: 3120, column: 9)
!2675 = !DILocation(line: 3120, column: 34, scope: !2674)
!2676 = !DILocation(line: 3120, column: 23, scope: !2674)
!2677 = !DILocation(line: 3120, column: 9, scope: !2670)
!2678 = !DILocation(line: 3122, column: 31, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2674, file: !805, line: 3120, column: 52)
!2680 = !DILocation(line: 3122, column: 13, scope: !2679)
!2681 = !DILocation(line: 3124, column: 9, scope: !2679)
!2682 = !DILocation(line: 3120, column: 48, scope: !2674)
!2683 = !DILocation(line: 3120, column: 9, scope: !2674)
!2684 = distinct !{!2684, !2677, !2685}
!2685 = !DILocation(line: 3124, column: 9, scope: !2670)
!2686 = !DILocation(line: 3125, column: 5, scope: !2671)
!2687 = !DILocation(line: 3127, column: 5, scope: !2163)
!2688 = !DILocation(line: 3129, column: 21, scope: !2163)
!2689 = !DILocation(line: 3129, column: 5, scope: !2163)
!2690 = !DILocation(line: 3131, column: 9, scope: !2691)
!2691 = distinct !DILexicalBlock(scope: !2163, file: !805, line: 3131, column: 9)
!2692 = !DILocation(line: 3131, column: 9, scope: !2163)
!2693 = !DILocation(line: 3132, column: 24, scope: !2691)
!2694 = !DILocation(line: 3132, column: 9, scope: !2691)
!2695 = !DILocation(line: 3133, column: 5, scope: !2163)
!2696 = !DILocation(line: 3134, column: 1, scope: !2163)
!2697 = distinct !DISubprogram(name: "sigint_handler", scope: !805, file: !805, line: 2793, type: !2698, scopeLine: 2793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2700)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{null, !867}
!2700 = !{!2701}
!2701 = !DILocalVariable(name: "sig", arg: 1, scope: !2697, file: !805, line: 2793, type: !867)
!2702 = !DILocation(line: 2793, column: 38, scope: !2697)
!2703 = !DILocation(line: 2794, column: 13, scope: !2697)
!2704 = !DILocation(line: 2794, column: 5, scope: !2697)
!2705 = !DILocation(line: 2795, column: 5, scope: !2697)
!2706 = distinct !DISubprogram(name: "settings_init", scope: !805, file: !805, line: 186, type: !309, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2707)
!2707 = !{!2708, !2710}
!2708 = !DILocalVariable(name: "__v", scope: !2709, file: !805, line: 191, type: !7)
!2709 = distinct !DILexicalBlock(scope: !2706, file: !805, line: 191, column: 30)
!2710 = !DILocalVariable(name: "__x", scope: !2709, file: !805, line: 191, type: !7)
!2711 = !DILocation(line: 188, column: 20, scope: !2706)
!2712 = !DILocation(line: 189, column: 19, scope: !2706)
!2713 = !DILocation(line: 190, column: 22, scope: !2706)
!2714 = !DILocation(line: 191, column: 30, scope: !2709)
!2715 = !DILocation(line: 191, column: 30, scope: !2716)
!2716 = distinct !DILexicalBlock(scope: !2709, file: !805, line: 191, column: 30)
!2717 = !{i32 -2143147549}
!2718 = !DILocation(line: 191, column: 30, scope: !2706)
!2719 = !DILocation(line: 191, column: 28, scope: !2706)
!2720 = !{!1247, !934, i64 20}
!2721 = !DILocation(line: 192, column: 23, scope: !2706)
!2722 = !DILocation(line: 193, column: 23, scope: !2706)
!2723 = !DILocation(line: 194, column: 22, scope: !2706)
!2724 = !DILocation(line: 195, column: 26, scope: !2706)
!2725 = !{!1247, !934, i64 28}
!2726 = !DILocation(line: 196, column: 28, scope: !2706)
!2727 = !DILocation(line: 197, column: 25, scope: !2706)
!2728 = !DILocation(line: 198, column: 22, scope: !2706)
!2729 = !DILocation(line: 199, column: 21, scope: !2706)
!2730 = !DILocation(line: 200, column: 25, scope: !2706)
!2731 = !DILocation(line: 202, column: 26, scope: !2706)
!2732 = !DILocation(line: 206, column: 31, scope: !2706)
!2733 = !DILocation(line: 207, column: 29, scope: !2706)
!2734 = !DILocation(line: 209, column: 1, scope: !2706)
!2735 = distinct !DISubprogram(name: "usage", scope: !805, file: !805, line: 2666, type: !309, scopeLine: 2666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !295)
!2736 = !DILocation(line: 2667, column: 5, scope: !2735)
!2737 = !DILocation(line: 2668, column: 5, scope: !2735)
!2738 = !DILocation(line: 2690, column: 5, scope: !2735)
!2739 = !DILocation(line: 2692, column: 5, scope: !2735)
!2740 = distinct !DISubprogram(name: "usage_license", scope: !805, file: !805, line: 2695, type: !309, scopeLine: 2695, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !295)
!2741 = !DILocation(line: 2696, column: 5, scope: !2740)
!2742 = !DILocation(line: 2697, column: 5, scope: !2740)
!2743 = !DILocation(line: 2763, column: 5, scope: !2740)
!2744 = distinct !DISubprogram(name: "atof", scope: !2745, file: !2745, line: 25, type: !2746, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2748)
!2745 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2746 = !DISubroutineType(types: !2747)
!2747 = !{!490, !302}
!2748 = !{!2749}
!2749 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2744, file: !2745, line: 25, type: !302)
!2750 = !DILocation(line: 25, column: 1, scope: !2744)
!2751 = !DILocation(line: 27, column: 18, scope: !2744)
!2752 = !DILocation(line: 27, column: 10, scope: !2744)
!2753 = !DILocation(line: 27, column: 3, scope: !2744)
!2754 = distinct !DISubprogram(name: "server_socket", scope: !805, file: !805, line: 2465, type: !2755, scopeLine: 2465, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2757)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{!47, !867, !1018}
!2757 = !{!2758, !2759, !2760, !2761, !2766, !2777, !2778, !2780}
!2758 = !DILocalVariable(name: "port", arg: 1, scope: !2754, file: !805, line: 2465, type: !867)
!2759 = !DILocalVariable(name: "is_udp", arg: 2, scope: !2754, file: !805, line: 2465, type: !1018)
!2760 = !DILocalVariable(name: "sfd", scope: !2754, file: !805, line: 2466, type: !47)
!2761 = !DILocalVariable(name: "ling", scope: !2754, file: !805, line: 2467, type: !2762)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linger", file: !226, line: 444, size: 64, elements: !2763)
!2763 = !{!2764, !2765}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "l_onoff", scope: !2762, file: !226, line: 446, baseType: !47, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "l_linger", scope: !2762, file: !226, line: 447, baseType: !47, size: 32, offset: 32)
!2766 = !DILocalVariable(name: "addr", scope: !2754, file: !805, line: 2468, type: !2767)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !52, line: 237, size: 128, elements: !2768)
!2768 = !{!2769, !2770, !2774, !2775}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !2767, file: !52, line: 239, baseType: !282, size: 16)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !2767, file: !52, line: 240, baseType: !2771, size: 16, offset: 16)
!2771 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !52, line: 119, baseType: !2772)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !120, line: 25, baseType: !2773)
!2773 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !122, line: 39, baseType: !255)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !2767, file: !52, line: 241, baseType: !817, size: 32, offset: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !2767, file: !52, line: 244, baseType: !2776, size: 64, offset: 64)
!2776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 64, elements: !265)
!2777 = !DILocalVariable(name: "flags", scope: !2754, file: !805, line: 2469, type: !47)
!2778 = !DILocalVariable(name: "__v", scope: !2779, file: !805, line: 2491, type: !255)
!2779 = distinct !DILexicalBlock(scope: !2754, file: !805, line: 2491, column: 21)
!2780 = !DILocalVariable(name: "__x", scope: !2779, file: !805, line: 2491, type: !255)
!2781 = !DILocation(line: 2465, column: 36, scope: !2754)
!2782 = !DILocation(line: 2465, column: 53, scope: !2754)
!2783 = !DILocation(line: 2466, column: 5, scope: !2754)
!2784 = !DILocation(line: 2466, column: 9, scope: !2754)
!2785 = !DILocation(line: 2467, column: 5, scope: !2754)
!2786 = !DILocation(line: 2467, column: 19, scope: !2754)
!2787 = !DILocation(line: 2468, column: 5, scope: !2754)
!2788 = !DILocation(line: 2468, column: 24, scope: !2754)
!2789 = !DILocation(line: 2469, column: 5, scope: !2754)
!2790 = !DILocation(line: 2469, column: 9, scope: !2754)
!2791 = !DILocation(line: 2471, column: 27, scope: !2792)
!2792 = distinct !DILexicalBlock(scope: !2754, file: !805, line: 2471, column: 9)
!2793 = !DILocation(line: 2471, column: 16, scope: !2792)
!2794 = !DILocation(line: 2471, column: 14, scope: !2792)
!2795 = !DILocation(line: 2471, column: 36, scope: !2792)
!2796 = !DILocation(line: 2471, column: 9, scope: !2754)
!2797 = !DILocation(line: 2472, column: 9, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2792, file: !805, line: 2471, column: 43)
!2799 = !DILocation(line: 2475, column: 16, scope: !2754)
!2800 = !DILocation(line: 2475, column: 47, scope: !2754)
!2801 = !DILocation(line: 2475, column: 5, scope: !2754)
!2802 = !DILocation(line: 2476, column: 9, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2754, file: !805, line: 2476, column: 9)
!2804 = !DILocation(line: 2476, column: 9, scope: !2754)
!2805 = !DILocation(line: 2477, column: 25, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2803, file: !805, line: 2476, column: 17)
!2807 = !DILocation(line: 2477, column: 9, scope: !2806)
!2808 = !DILocation(line: 2478, column: 5, scope: !2806)
!2809 = !DILocation(line: 2479, column: 20, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2803, file: !805, line: 2478, column: 12)
!2811 = !DILocation(line: 2479, column: 51, scope: !2810)
!2812 = !DILocation(line: 2479, column: 9, scope: !2810)
!2813 = !DILocation(line: 2480, column: 20, scope: !2810)
!2814 = !DILocation(line: 2480, column: 48, scope: !2810)
!2815 = !DILocation(line: 2480, column: 9, scope: !2810)
!2816 = !DILocation(line: 2481, column: 20, scope: !2810)
!2817 = !DILocation(line: 2481, column: 51, scope: !2810)
!2818 = !DILocation(line: 2481, column: 9, scope: !2810)
!2819 = !DILocation(line: 2488, column: 5, scope: !2754)
!2820 = !DILocation(line: 2490, column: 10, scope: !2754)
!2821 = !DILocation(line: 2490, column: 21, scope: !2754)
!2822 = !{!2823, !1059, i64 0}
!2823 = !{!"sockaddr_in", !1059, i64 0, !1059, i64 2, !1248, i64 4, !916, i64 8}
!2824 = !DILocation(line: 2491, column: 21, scope: !2779)
!2825 = !DILocation(line: 2491, column: 21, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2779, file: !805, line: 2491, column: 21)
!2827 = !{i32 -2143075061}
!2828 = !DILocation(line: 2491, column: 21, scope: !2754)
!2829 = !DILocation(line: 2491, column: 10, scope: !2754)
!2830 = !DILocation(line: 2491, column: 19, scope: !2754)
!2831 = !{!2823, !1059, i64 2}
!2832 = !DILocation(line: 2492, column: 10, scope: !2754)
!2833 = !DILocation(line: 2492, column: 30, scope: !2754)
!2834 = !DILocation(line: 2493, column: 14, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2754, file: !805, line: 2493, column: 9)
!2836 = !DILocation(line: 2493, column: 19, scope: !2835)
!2837 = !DILocation(line: 2493, column: 9, scope: !2835)
!2838 = !DILocation(line: 2493, column: 59, scope: !2835)
!2839 = !DILocation(line: 2493, column: 9, scope: !2754)
!2840 = !DILocation(line: 2494, column: 9, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2835, file: !805, line: 2493, column: 66)
!2842 = !DILocation(line: 2495, column: 15, scope: !2841)
!2843 = !DILocation(line: 2495, column: 9, scope: !2841)
!2844 = !DILocation(line: 2496, column: 9, scope: !2841)
!2845 = !DILocation(line: 2498, column: 10, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2754, file: !805, line: 2498, column: 9)
!2847 = !DILocation(line: 2498, column: 17, scope: !2846)
!2848 = !DILocation(line: 2498, column: 27, scope: !2846)
!2849 = !DILocation(line: 2498, column: 20, scope: !2846)
!2850 = !DILocation(line: 2498, column: 38, scope: !2846)
!2851 = !DILocation(line: 2498, column: 9, scope: !2754)
!2852 = !DILocation(line: 2499, column: 9, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2846, file: !805, line: 2498, column: 45)
!2854 = !DILocation(line: 2500, column: 15, scope: !2853)
!2855 = !DILocation(line: 2500, column: 9, scope: !2853)
!2856 = !DILocation(line: 2501, column: 9, scope: !2853)
!2857 = !DILocation(line: 2503, column: 12, scope: !2754)
!2858 = !DILocation(line: 2503, column: 5, scope: !2754)
!2859 = !DILocation(line: 2504, column: 1, scope: !2754)
!2860 = distinct !DISubprogram(name: "server_socket_unix", scope: !805, file: !805, line: 2524, type: !2861, scopeLine: 2524, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2863)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!47, !302, !47}
!2863 = !{!2864, !2865, !2866, !2867, !2868, !2877, !2878, !2879}
!2864 = !DILocalVariable(name: "path", arg: 1, scope: !2860, file: !805, line: 2524, type: !302)
!2865 = !DILocalVariable(name: "access_mask", arg: 2, scope: !2860, file: !805, line: 2524, type: !47)
!2866 = !DILocalVariable(name: "sfd", scope: !2860, file: !805, line: 2525, type: !47)
!2867 = !DILocalVariable(name: "ling", scope: !2860, file: !805, line: 2526, type: !2762)
!2868 = !DILocalVariable(name: "addr", scope: !2860, file: !805, line: 2527, type: !2869)
!2869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_un", file: !2870, line: 29, size: 880, elements: !2871)
!2870 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/un.h", directory: "")
!2871 = !{!2872, !2873}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "sun_family", scope: !2869, file: !2870, line: 31, baseType: !282, size: 16)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "sun_path", scope: !2869, file: !2870, line: 32, baseType: !2874, size: 864, offset: 16)
!2874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 864, elements: !2875)
!2875 = !{!2876}
!2876 = !DISubrange(count: 108)
!2877 = !DILocalVariable(name: "tstat", scope: !2860, file: !805, line: 2528, type: !2083)
!2878 = !DILocalVariable(name: "flags", scope: !2860, file: !805, line: 2529, type: !47)
!2879 = !DILocalVariable(name: "old_umask", scope: !2860, file: !805, line: 2530, type: !47)
!2880 = !DILocation(line: 2524, column: 43, scope: !2860)
!2881 = !DILocation(line: 2524, column: 53, scope: !2860)
!2882 = !DILocation(line: 2525, column: 5, scope: !2860)
!2883 = !DILocation(line: 2525, column: 9, scope: !2860)
!2884 = !DILocation(line: 2526, column: 5, scope: !2860)
!2885 = !DILocation(line: 2526, column: 19, scope: !2860)
!2886 = !DILocation(line: 2527, column: 5, scope: !2860)
!2887 = !DILocation(line: 2527, column: 24, scope: !2860)
!2888 = !DILocation(line: 2528, column: 5, scope: !2860)
!2889 = !DILocation(line: 2528, column: 17, scope: !2860)
!2890 = !DILocation(line: 2529, column: 5, scope: !2860)
!2891 = !DILocation(line: 2529, column: 9, scope: !2860)
!2892 = !DILocation(line: 2530, column: 5, scope: !2860)
!2893 = !DILocation(line: 2530, column: 9, scope: !2860)
!2894 = !DILocation(line: 2532, column: 10, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2860, file: !805, line: 2532, column: 9)
!2896 = !DILocation(line: 2532, column: 9, scope: !2860)
!2897 = !DILocation(line: 2533, column: 9, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2895, file: !805, line: 2532, column: 16)
!2899 = !DILocation(line: 2536, column: 16, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2860, file: !805, line: 2536, column: 9)
!2901 = !DILocation(line: 2536, column: 14, scope: !2900)
!2902 = !DILocation(line: 2536, column: 35, scope: !2900)
!2903 = !DILocation(line: 2536, column: 9, scope: !2860)
!2904 = !DILocation(line: 2537, column: 9, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2900, file: !805, line: 2536, column: 42)
!2906 = !DILocation(line: 2543, column: 15, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2860, file: !805, line: 2543, column: 9)
!2908 = !DILocation(line: 2543, column: 9, scope: !2907)
!2909 = !DILocation(line: 2543, column: 29, scope: !2907)
!2910 = !DILocation(line: 2543, column: 9, scope: !2860)
!2911 = !DILocation(line: 2544, column: 13, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2913, file: !805, line: 2544, column: 13)
!2913 = distinct !DILexicalBlock(scope: !2907, file: !805, line: 2543, column: 35)
!2914 = !{!2915, !934, i64 24}
!2915 = !{!"stat", !915, i64 0, !915, i64 8, !915, i64 16, !934, i64 24, !934, i64 28, !934, i64 32, !934, i64 36, !915, i64 40, !915, i64 48, !915, i64 56, !915, i64 64, !2916, i64 72, !2916, i64 88, !2916, i64 104, !916, i64 120}
!2916 = !{!"timespec", !915, i64 0, !915, i64 8}
!2917 = !DILocation(line: 2544, column: 13, scope: !2913)
!2918 = !DILocation(line: 2545, column: 20, scope: !2912)
!2919 = !DILocation(line: 2545, column: 13, scope: !2912)
!2920 = !DILocation(line: 2546, column: 5, scope: !2913)
!2921 = !DILocation(line: 2548, column: 16, scope: !2860)
!2922 = !DILocation(line: 2548, column: 47, scope: !2860)
!2923 = !DILocation(line: 2548, column: 5, scope: !2860)
!2924 = !DILocation(line: 2549, column: 16, scope: !2860)
!2925 = !DILocation(line: 2549, column: 47, scope: !2860)
!2926 = !DILocation(line: 2549, column: 5, scope: !2860)
!2927 = !DILocation(line: 2550, column: 16, scope: !2860)
!2928 = !DILocation(line: 2550, column: 44, scope: !2860)
!2929 = !DILocation(line: 2550, column: 5, scope: !2860)
!2930 = !DILocation(line: 2556, column: 5, scope: !2860)
!2931 = !DILocation(line: 2558, column: 10, scope: !2860)
!2932 = !DILocation(line: 2558, column: 21, scope: !2860)
!2933 = !{!2934, !1059, i64 0}
!2934 = !{!"sockaddr_un", !1059, i64 0, !916, i64 2}
!2935 = !DILocation(line: 2559, column: 17, scope: !2860)
!2936 = !DILocation(line: 2559, column: 12, scope: !2860)
!2937 = !DILocation(line: 2559, column: 27, scope: !2860)
!2938 = !DILocation(line: 2559, column: 5, scope: !2860)
!2939 = !DILocation(line: 2560, column: 24, scope: !2860)
!2940 = !DILocation(line: 2560, column: 35, scope: !2860)
!2941 = !DILocation(line: 2560, column: 22, scope: !2860)
!2942 = !DILocation(line: 2560, column: 15, scope: !2860)
!2943 = !DILocation(line: 2560, column: 14, scope: !2860)
!2944 = !DILocation(line: 2561, column: 14, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2860, file: !805, line: 2561, column: 9)
!2946 = !DILocation(line: 2561, column: 19, scope: !2945)
!2947 = !DILocation(line: 2561, column: 9, scope: !2945)
!2948 = !DILocation(line: 2561, column: 59, scope: !2945)
!2949 = !DILocation(line: 2561, column: 9, scope: !2860)
!2950 = !DILocation(line: 2562, column: 9, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2945, file: !805, line: 2561, column: 66)
!2952 = !DILocation(line: 2563, column: 15, scope: !2951)
!2953 = !DILocation(line: 2563, column: 9, scope: !2951)
!2954 = !DILocation(line: 2564, column: 15, scope: !2951)
!2955 = !DILocation(line: 2564, column: 9, scope: !2951)
!2956 = !DILocation(line: 2565, column: 9, scope: !2951)
!2957 = !DILocation(line: 2567, column: 11, scope: !2860)
!2958 = !DILocation(line: 2567, column: 5, scope: !2860)
!2959 = !DILocation(line: 2568, column: 16, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2860, file: !805, line: 2568, column: 9)
!2961 = !DILocation(line: 2568, column: 9, scope: !2960)
!2962 = !DILocation(line: 2568, column: 27, scope: !2960)
!2963 = !DILocation(line: 2568, column: 9, scope: !2860)
!2964 = !DILocation(line: 2569, column: 9, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2960, file: !805, line: 2568, column: 34)
!2966 = !DILocation(line: 2570, column: 15, scope: !2965)
!2967 = !DILocation(line: 2570, column: 9, scope: !2965)
!2968 = !DILocation(line: 2571, column: 9, scope: !2965)
!2969 = !DILocation(line: 2573, column: 12, scope: !2860)
!2970 = !DILocation(line: 2573, column: 5, scope: !2860)
!2971 = !DILocation(line: 2574, column: 1, scope: !2860)
!2972 = distinct !DISubprogram(name: "conn_init", scope: !805, file: !805, line: 264, type: !309, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !295)
!2973 = !DILocation(line: 265, column: 15, scope: !2972)
!2974 = !DILocation(line: 266, column: 14, scope: !2972)
!2975 = !DILocation(line: 267, column: 55, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2972, file: !805, line: 267, column: 9)
!2977 = !DILocation(line: 267, column: 53, scope: !2976)
!2978 = !DILocation(line: 267, column: 31, scope: !2976)
!2979 = !DILocation(line: 267, column: 22, scope: !2976)
!2980 = !DILocation(line: 267, column: 20, scope: !2976)
!2981 = !DILocation(line: 267, column: 67, scope: !2976)
!2982 = !DILocation(line: 267, column: 9, scope: !2972)
!2983 = !DILocation(line: 268, column: 9, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2976, file: !805, line: 267, column: 76)
!2985 = !DILocation(line: 269, column: 5, scope: !2984)
!2986 = !DILocation(line: 270, column: 5, scope: !2972)
!2987 = distinct !DISubprogram(name: "suffix_init", scope: !805, file: !805, line: 573, type: !309, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !295)
!2988 = !DILocation(line: 574, column: 21, scope: !2987)
!2989 = !DILocation(line: 575, column: 21, scope: !2987)
!2990 = !DILocation(line: 577, column: 52, scope: !2987)
!2991 = !DILocation(line: 577, column: 50, scope: !2987)
!2992 = !DILocation(line: 577, column: 27, scope: !2987)
!2993 = !DILocation(line: 577, column: 18, scope: !2987)
!2994 = !DILocation(line: 577, column: 16, scope: !2987)
!2995 = !DILocation(line: 578, column: 9, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2987, file: !805, line: 578, column: 9)
!2997 = !DILocation(line: 578, column: 20, scope: !2996)
!2998 = !DILocation(line: 578, column: 9, scope: !2987)
!2999 = !DILocation(line: 579, column: 9, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2996, file: !805, line: 578, column: 29)
!3001 = !DILocation(line: 580, column: 5, scope: !3000)
!3002 = !DILocation(line: 581, column: 5, scope: !2987)
!3003 = distinct !DISubprogram(name: "save_pid", scope: !805, file: !805, line: 2766, type: !3004, scopeLine: 2766, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3009)
!3004 = !DISubroutineType(types: !3005)
!3005 = !{null, !3006, !302}
!3006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3007)
!3007 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !3008, line: 98, baseType: !541)
!3008 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!3009 = !{!3010, !3011, !3012}
!3010 = !DILocalVariable(name: "pid", arg: 1, scope: !3003, file: !805, line: 2766, type: !3006)
!3011 = !DILocalVariable(name: "pid_file", arg: 2, scope: !3003, file: !805, line: 2766, type: !302)
!3012 = !DILocalVariable(name: "fp", scope: !3003, file: !805, line: 2767, type: !3013)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 64)
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3015, line: 7, baseType: !374)
!3015 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3016 = !DILocation(line: 2766, column: 34, scope: !3003)
!3017 = !DILocation(line: 2766, column: 51, scope: !3003)
!3018 = !DILocation(line: 2767, column: 5, scope: !3003)
!3019 = !DILocation(line: 2767, column: 11, scope: !3003)
!3020 = !DILocation(line: 2768, column: 9, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3003, file: !805, line: 2768, column: 9)
!3022 = !DILocation(line: 2768, column: 18, scope: !3021)
!3023 = !DILocation(line: 2768, column: 9, scope: !3003)
!3024 = !DILocation(line: 2769, column: 9, scope: !3021)
!3025 = !DILocation(line: 2771, column: 21, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3003, file: !805, line: 2771, column: 9)
!3027 = !DILocation(line: 2771, column: 15, scope: !3026)
!3028 = !DILocation(line: 2771, column: 13, scope: !3026)
!3029 = !DILocation(line: 2771, column: 37, scope: !3026)
!3030 = !DILocation(line: 2771, column: 9, scope: !3003)
!3031 = !DILocation(line: 2772, column: 17, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3026, file: !805, line: 2771, column: 46)
!3033 = !DILocation(line: 2772, column: 73, scope: !3032)
!3034 = !DILocation(line: 2772, column: 9, scope: !3032)
!3035 = !DILocation(line: 2773, column: 9, scope: !3032)
!3036 = !DILocation(line: 2776, column: 13, scope: !3003)
!3037 = !DILocation(line: 2776, column: 31, scope: !3003)
!3038 = !DILocation(line: 2776, column: 25, scope: !3003)
!3039 = !DILocation(line: 2776, column: 5, scope: !3003)
!3040 = !DILocation(line: 2777, column: 16, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3003, file: !805, line: 2777, column: 9)
!3042 = !DILocation(line: 2777, column: 9, scope: !3041)
!3043 = !DILocation(line: 2777, column: 20, scope: !3041)
!3044 = !DILocation(line: 2777, column: 9, scope: !3003)
!3045 = !DILocation(line: 2778, column: 17, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3041, file: !805, line: 2777, column: 27)
!3047 = !DILocation(line: 2778, column: 63, scope: !3046)
!3048 = !DILocation(line: 2778, column: 9, scope: !3046)
!3049 = !DILocation(line: 2779, column: 9, scope: !3046)
!3050 = !DILocation(line: 2781, column: 1, scope: !3003)
!3051 = !DILocation(line: 2609, column: 37, scope: !864)
!3052 = !DILocation(line: 2609, column: 53, scope: !864)
!3053 = !DILocation(line: 2609, column: 66, scope: !864)
!3054 = !DILocation(line: 2610, column: 5, scope: !864)
!3055 = !DILocation(line: 2610, column: 20, scope: !864)
!3056 = !DILocation(line: 2613, column: 9, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !864, file: !805, line: 2613, column: 9)
!3058 = !DILocation(line: 2613, column: 9, scope: !864)
!3059 = !DILocation(line: 2615, column: 9, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3057, file: !805, line: 2613, column: 22)
!3061 = !DILocation(line: 2616, column: 5, scope: !3060)
!3062 = !DILocation(line: 2617, column: 21, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3057, file: !805, line: 2616, column: 12)
!3064 = !DILocation(line: 2620, column: 5, scope: !864)
!3065 = !DILocation(line: 2621, column: 20, scope: !864)
!3066 = !DILocation(line: 2621, column: 5, scope: !864)
!3067 = !DILocation(line: 2622, column: 5, scope: !864)
!3068 = !DILocation(line: 2624, column: 5, scope: !864)
!3069 = !DILocation(line: 2625, column: 1, scope: !864)
!3070 = !DILocation(line: 2629, column: 38, scope: !878)
!3071 = !DILocation(line: 2629, column: 54, scope: !878)
!3072 = !DILocation(line: 2629, column: 67, scope: !878)
!3073 = !DILocation(line: 2630, column: 5, scope: !878)
!3074 = !DILocation(line: 2630, column: 20, scope: !878)
!3075 = !DILocation(line: 2633, column: 9, scope: !3076)
!3076 = distinct !DILexicalBlock(scope: !878, file: !805, line: 2633, column: 9)
!3077 = !DILocation(line: 2633, column: 9, scope: !878)
!3078 = !DILocation(line: 2636, column: 9, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3076, file: !805, line: 2633, column: 22)
!3080 = !DILocation(line: 2637, column: 5, scope: !3079)
!3081 = !DILocation(line: 2638, column: 21, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3076, file: !805, line: 2637, column: 12)
!3083 = !DILocation(line: 2641, column: 5, scope: !878)
!3084 = !DILocation(line: 2642, column: 20, scope: !878)
!3085 = !DILocation(line: 2642, column: 5, scope: !878)
!3086 = !DILocation(line: 2643, column: 5, scope: !878)
!3087 = !DILocation(line: 2644, column: 5, scope: !878)
!3088 = !DILocation(line: 2645, column: 1, scope: !878)
!3089 = distinct !DISubprogram(name: "remove_pidfile", scope: !805, file: !805, line: 2783, type: !300, scopeLine: 2783, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3090)
!3090 = !{!3091}
!3091 = !DILocalVariable(name: "pid_file", arg: 1, scope: !3089, file: !805, line: 2783, type: !302)
!3092 = !DILocation(line: 2783, column: 40, scope: !3089)
!3093 = !DILocation(line: 2784, column: 7, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3089, file: !805, line: 2784, column: 7)
!3095 = !DILocation(line: 2784, column: 16, scope: !3094)
!3096 = !DILocation(line: 2784, column: 7, scope: !3089)
!3097 = !DILocation(line: 2785, column: 7, scope: !3094)
!3098 = !DILocation(line: 2787, column: 14, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3089, file: !805, line: 2787, column: 7)
!3100 = !DILocation(line: 2787, column: 7, scope: !3099)
!3101 = !DILocation(line: 2787, column: 24, scope: !3099)
!3102 = !DILocation(line: 2787, column: 7, scope: !3089)
!3103 = !DILocation(line: 2788, column: 15, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3099, file: !805, line: 2787, column: 30)
!3105 = !DILocation(line: 2788, column: 62, scope: !3104)
!3106 = !DILocation(line: 2788, column: 7, scope: !3104)
!3107 = !DILocation(line: 2789, column: 3, scope: !3104)
!3108 = !DILocation(line: 2791, column: 1, scope: !3089)
!3109 = distinct !DISubprogram(name: "conn_close", scope: !805, file: !805, line: 462, type: !1451, scopeLine: 462, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3110)
!3110 = !{!3111}
!3111 = !DILocalVariable(name: "c", arg: 1, scope: !3109, file: !805, line: 462, type: !296)
!3112 = !DILocation(line: 462, column: 30, scope: !3109)
!3113 = !DILocation(line: 463, column: 5, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3115, file: !805, line: 463, column: 5)
!3115 = distinct !DILexicalBlock(scope: !3109, file: !805, line: 463, column: 5)
!3116 = !DILocation(line: 463, column: 5, scope: !3115)
!3117 = !DILocation(line: 466, column: 16, scope: !3109)
!3118 = !DILocation(line: 466, column: 19, scope: !3109)
!3119 = !DILocation(line: 466, column: 5, scope: !3109)
!3120 = !DILocation(line: 469, column: 18, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3109, file: !805, line: 469, column: 9)
!3122 = !DILocation(line: 469, column: 26, scope: !3121)
!3123 = !DILocation(line: 469, column: 9, scope: !3109)
!3124 = !DILocation(line: 470, column: 17, scope: !3121)
!3125 = !DILocation(line: 470, column: 53, scope: !3121)
!3126 = !DILocation(line: 470, column: 56, scope: !3121)
!3127 = !DILocation(line: 470, column: 9, scope: !3121)
!3128 = !DILocation(line: 473, column: 11, scope: !3109)
!3129 = !DILocation(line: 473, column: 14, scope: !3109)
!3130 = !DILocation(line: 473, column: 5, scope: !3109)
!3131 = !DILocation(line: 474, column: 5, scope: !3109)
!3132 = !DILocation(line: 475, column: 18, scope: !3109)
!3133 = !DILocation(line: 475, column: 5, scope: !3109)
!3134 = !DILocation(line: 478, column: 9, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3109, file: !805, line: 478, column: 9)
!3136 = !DILocation(line: 478, column: 12, scope: !3135)
!3137 = !DILocation(line: 478, column: 18, scope: !3135)
!3138 = !DILocation(line: 478, column: 40, scope: !3135)
!3139 = !DILocation(line: 478, column: 43, scope: !3135)
!3140 = !DILocation(line: 478, column: 9, scope: !3109)
!3141 = !DILocation(line: 479, column: 19, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3135, file: !805, line: 478, column: 68)
!3143 = !DILocation(line: 479, column: 9, scope: !3142)
!3144 = !DILocation(line: 480, column: 5, scope: !3142)
!3145 = !DILocation(line: 482, column: 5, scope: !3109)
!3146 = !DILocation(line: 483, column: 22, scope: !3109)
!3147 = !DILocation(line: 484, column: 5, scope: !3109)
!3148 = !DILocation(line: 486, column: 5, scope: !3109)
!3149 = distinct !DISubprogram(name: "drive_machine", scope: !805, file: !805, line: 2106, type: !1451, scopeLine: 2106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3150)
!3150 = !{!3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3163, !3166, !3171}
!3151 = !DILocalVariable(name: "c", arg: 1, scope: !3149, file: !805, line: 2106, type: !296)
!3152 = !DILocalVariable(name: "stop", scope: !3149, file: !805, line: 2109, type: !276)
!3153 = !DILocalVariable(name: "sfd", scope: !3149, file: !805, line: 2110, type: !47)
!3154 = !DILocalVariable(name: "flags", scope: !3149, file: !805, line: 2110, type: !47)
!3155 = !DILocalVariable(name: "addrlen", scope: !3149, file: !805, line: 2111, type: !230)
!3156 = !DILocalVariable(name: "addr", scope: !3149, file: !805, line: 2112, type: !279)
!3157 = !DILocalVariable(name: "res", scope: !3149, file: !805, line: 2113, type: !47)
!3158 = !DILocalVariable(name: "tocopy", scope: !3159, file: !805, line: 2190, type: !47)
!3159 = distinct !DILexicalBlock(scope: !3160, file: !805, line: 2189, column: 32)
!3160 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2189, column: 17)
!3161 = distinct !DILexicalBlock(scope: !3162, file: !805, line: 2119, column: 26)
!3162 = distinct !DILexicalBlock(scope: !3149, file: !805, line: 2117, column: 19)
!3163 = !DILocalVariable(name: "tocopy", scope: !3164, file: !805, line: 2248, type: !47)
!3164 = distinct !DILexicalBlock(scope: !3165, file: !805, line: 2247, column: 32)
!3165 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2247, column: 17)
!3166 = !DILocalVariable(name: "it", scope: !3167, file: !805, line: 2310, type: !243)
!3167 = distinct !DILexicalBlock(scope: !3168, file: !805, line: 2309, column: 42)
!3168 = distinct !DILexicalBlock(scope: !3169, file: !805, line: 2308, column: 46)
!3169 = distinct !DILexicalBlock(scope: !3170, file: !805, line: 2308, column: 21)
!3170 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2305, column: 34)
!3171 = !DILocalVariable(name: "suffix", scope: !3172, file: !805, line: 2317, type: !195)
!3172 = distinct !DILexicalBlock(scope: !3168, file: !805, line: 2316, column: 47)
!3173 = !DILocation(line: 2106, column: 33, scope: !3149)
!3174 = !DILocation(line: 2109, column: 5, scope: !3149)
!3175 = !DILocation(line: 2109, column: 10, scope: !3149)
!3176 = !DILocation(line: 2110, column: 5, scope: !3149)
!3177 = !DILocation(line: 2110, column: 9, scope: !3149)
!3178 = !DILocation(line: 2110, column: 14, scope: !3149)
!3179 = !DILocation(line: 2111, column: 5, scope: !3149)
!3180 = !DILocation(line: 2111, column: 15, scope: !3149)
!3181 = !DILocation(line: 2112, column: 5, scope: !3149)
!3182 = !DILocation(line: 2112, column: 21, scope: !3149)
!3183 = !DILocation(line: 2113, column: 5, scope: !3149)
!3184 = !DILocation(line: 2113, column: 9, scope: !3149)
!3185 = !DILocation(line: 2115, column: 5, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3187, file: !805, line: 2115, column: 5)
!3187 = distinct !DILexicalBlock(scope: !3149, file: !805, line: 2115, column: 5)
!3188 = !DILocation(line: 2115, column: 5, scope: !3187)
!3189 = !DILocation(line: 2117, column: 5, scope: !3149)
!3190 = !DILocation(line: 2117, column: 13, scope: !3149)
!3191 = !DILocation(line: 2117, column: 12, scope: !3149)
!3192 = !DILocation(line: 2119, column: 16, scope: !3162)
!3193 = !DILocation(line: 2119, column: 19, scope: !3162)
!3194 = !DILocation(line: 2119, column: 9, scope: !3162)
!3195 = !DILocation(line: 2122, column: 21, scope: !3161)
!3196 = !DILocation(line: 2123, column: 31, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2123, column: 17)
!3198 = !DILocation(line: 2123, column: 34, scope: !3197)
!3199 = !DILocation(line: 2123, column: 24, scope: !3197)
!3200 = !DILocation(line: 2123, column: 22, scope: !3197)
!3201 = !DILocation(line: 2123, column: 57, scope: !3197)
!3202 = !DILocation(line: 2123, column: 17, scope: !3161)
!3203 = !DILocation(line: 2124, column: 21, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3205, file: !805, line: 2124, column: 21)
!3205 = distinct !DILexicalBlock(scope: !3197, file: !805, line: 2123, column: 64)
!3206 = !DILocation(line: 2124, column: 27, scope: !3204)
!3207 = !DILocation(line: 2124, column: 37, scope: !3204)
!3208 = !DILocation(line: 2124, column: 40, scope: !3204)
!3209 = !DILocation(line: 2124, column: 46, scope: !3204)
!3210 = !DILocation(line: 2124, column: 21, scope: !3205)
!3211 = !DILocation(line: 2126, column: 26, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3204, file: !805, line: 2124, column: 62)
!3213 = !DILocation(line: 2127, column: 17, scope: !3212)
!3214 = !DILocation(line: 2127, column: 28, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3204, file: !805, line: 2127, column: 28)
!3216 = !DILocation(line: 2127, column: 34, scope: !3215)
!3217 = !DILocation(line: 2127, column: 28, scope: !3204)
!3218 = !DILocation(line: 2128, column: 34, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3220, file: !805, line: 2128, column: 25)
!3220 = distinct !DILexicalBlock(scope: !3215, file: !805, line: 2127, column: 45)
!3221 = !DILocation(line: 2128, column: 42, scope: !3219)
!3222 = !DILocation(line: 2128, column: 25, scope: !3220)
!3223 = !DILocation(line: 2129, column: 33, scope: !3219)
!3224 = !DILocation(line: 2129, column: 25, scope: !3219)
!3225 = !DILocation(line: 2130, column: 21, scope: !3220)
!3226 = !DILocation(line: 2131, column: 26, scope: !3220)
!3227 = !DILocation(line: 2132, column: 17, scope: !3220)
!3228 = !DILocation(line: 2133, column: 21, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3215, file: !805, line: 2132, column: 24)
!3230 = !DILocation(line: 2134, column: 26, scope: !3229)
!3231 = !DILocation(line: 2136, column: 17, scope: !3205)
!3232 = !DILocation(line: 2138, column: 32, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2138, column: 17)
!3234 = !DILocation(line: 2138, column: 26, scope: !3233)
!3235 = !DILocation(line: 2138, column: 24, scope: !3233)
!3236 = !DILocation(line: 2138, column: 50, scope: !3233)
!3237 = !DILocation(line: 2138, column: 54, scope: !3233)
!3238 = !DILocation(line: 2139, column: 23, scope: !3233)
!3239 = !DILocation(line: 2139, column: 37, scope: !3233)
!3240 = !DILocation(line: 2139, column: 43, scope: !3233)
!3241 = !DILocation(line: 2139, column: 17, scope: !3233)
!3242 = !DILocation(line: 2139, column: 57, scope: !3233)
!3243 = !DILocation(line: 2138, column: 17, scope: !3161)
!3244 = !DILocation(line: 2140, column: 17, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3233, file: !805, line: 2139, column: 62)
!3246 = !DILocation(line: 2141, column: 23, scope: !3245)
!3247 = !DILocation(line: 2141, column: 17, scope: !3245)
!3248 = !DILocation(line: 2142, column: 17, scope: !3245)
!3249 = !DILocation(line: 2144, column: 31, scope: !3161)
!3250 = !DILocation(line: 2144, column: 13, scope: !3161)
!3251 = !DILocation(line: 2146, column: 13, scope: !3161)
!3252 = !DILocation(line: 2150, column: 34, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2150, column: 17)
!3254 = !DILocation(line: 2150, column: 17, scope: !3253)
!3255 = !DILocation(line: 2150, column: 37, scope: !3253)
!3256 = !DILocation(line: 2150, column: 17, scope: !3161)
!3257 = !DILocation(line: 2153, column: 17, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3253, file: !805, line: 2150, column: 43)
!3259 = distinct !{!3259, !3189, !3260}
!3260 = !DILocation(line: 2361, column: 5, scope: !3149)
!3261 = !DILocation(line: 2155, column: 18, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2155, column: 17)
!3263 = !DILocation(line: 2155, column: 21, scope: !3262)
!3264 = !DILocation(line: 2155, column: 40, scope: !3262)
!3265 = !DILocation(line: 2155, column: 27, scope: !3262)
!3266 = !DILocation(line: 2155, column: 62, scope: !3262)
!3267 = !DILocation(line: 2155, column: 45, scope: !3262)
!3268 = !DILocation(line: 2155, column: 66, scope: !3262)
!3269 = !DILocation(line: 2155, column: 17, scope: !3161)
!3270 = !DILocation(line: 2158, column: 17, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3262, file: !805, line: 2155, column: 72)
!3272 = !DILocation(line: 2165, column: 31, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2165, column: 17)
!3274 = !DILocation(line: 2165, column: 18, scope: !3273)
!3275 = !DILocation(line: 2165, column: 17, scope: !3161)
!3276 = !DILocation(line: 2166, column: 30, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !805, line: 2166, column: 21)
!3278 = distinct !DILexicalBlock(scope: !3273, file: !805, line: 2165, column: 57)
!3279 = !DILocation(line: 2166, column: 38, scope: !3277)
!3280 = !DILocation(line: 2166, column: 21, scope: !3278)
!3281 = !DILocation(line: 2167, column: 29, scope: !3277)
!3282 = !DILocation(line: 2167, column: 21, scope: !3277)
!3283 = !DILocation(line: 2168, column: 32, scope: !3278)
!3284 = !DILocation(line: 2168, column: 17, scope: !3278)
!3285 = !DILocation(line: 2169, column: 17, scope: !3278)
!3286 = !DILocation(line: 2171, column: 18, scope: !3161)
!3287 = !DILocation(line: 2172, column: 13, scope: !3161)
!3288 = !DILocation(line: 2177, column: 17, scope: !3289)
!3289 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2177, column: 17)
!3290 = !DILocation(line: 2177, column: 20, scope: !3289)
!3291 = !DILocation(line: 2177, column: 28, scope: !3289)
!3292 = !DILocation(line: 2177, column: 17, scope: !3161)
!3293 = !DILocation(line: 2183, column: 32, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3289, file: !805, line: 2177, column: 34)
!3295 = !DILocation(line: 2183, column: 17, scope: !3294)
!3296 = !DILocation(line: 2184, column: 17, scope: !3294)
!3297 = !DILocation(line: 2189, column: 17, scope: !3160)
!3298 = !DILocation(line: 2189, column: 20, scope: !3160)
!3299 = !DILocation(line: 2189, column: 27, scope: !3160)
!3300 = !DILocation(line: 2189, column: 17, scope: !3161)
!3301 = !DILocation(line: 2190, column: 17, scope: !3159)
!3302 = !DILocation(line: 2190, column: 21, scope: !3159)
!3303 = !DILocation(line: 2190, column: 30, scope: !3159)
!3304 = !DILocation(line: 2190, column: 33, scope: !3159)
!3305 = !DILocation(line: 2190, column: 42, scope: !3159)
!3306 = !DILocation(line: 2190, column: 45, scope: !3159)
!3307 = !DILocation(line: 2190, column: 40, scope: !3159)
!3308 = !DILocation(line: 2190, column: 55, scope: !3159)
!3309 = !DILocation(line: 2190, column: 58, scope: !3159)
!3310 = !DILocation(line: 2190, column: 68, scope: !3159)
!3311 = !DILocation(line: 2190, column: 71, scope: !3159)
!3312 = !DILocation(line: 2195, column: 24, scope: !3159)
!3313 = !DILocation(line: 2195, column: 27, scope: !3159)
!3314 = !DILocation(line: 2195, column: 34, scope: !3159)
!3315 = !DILocation(line: 2195, column: 37, scope: !3159)
!3316 = !DILocation(line: 2195, column: 44, scope: !3159)
!3317 = !DILocation(line: 2195, column: 17, scope: !3159)
!3318 = !DILocation(line: 2197, column: 29, scope: !3159)
!3319 = !DILocation(line: 2197, column: 17, scope: !3159)
!3320 = !DILocation(line: 2197, column: 20, scope: !3159)
!3321 = !DILocation(line: 2197, column: 26, scope: !3159)
!3322 = !DILocation(line: 2198, column: 31, scope: !3159)
!3323 = !DILocation(line: 2198, column: 17, scope: !3159)
!3324 = !DILocation(line: 2198, column: 20, scope: !3159)
!3325 = !DILocation(line: 2198, column: 28, scope: !3159)
!3326 = !DILocation(line: 2199, column: 29, scope: !3159)
!3327 = !DILocation(line: 2199, column: 17, scope: !3159)
!3328 = !DILocation(line: 2199, column: 20, scope: !3159)
!3329 = !DILocation(line: 2199, column: 26, scope: !3159)
!3330 = !DILocation(line: 2200, column: 30, scope: !3159)
!3331 = !DILocation(line: 2200, column: 17, scope: !3159)
!3332 = !DILocation(line: 2200, column: 20, scope: !3159)
!3333 = !DILocation(line: 2200, column: 27, scope: !3159)
!3334 = !DILocation(line: 2202, column: 13, scope: !3160)
!3335 = !DILocation(line: 2207, column: 24, scope: !3161)
!3336 = !DILocation(line: 2207, column: 27, scope: !3161)
!3337 = !DILocation(line: 2207, column: 32, scope: !3161)
!3338 = !DILocation(line: 2207, column: 35, scope: !3161)
!3339 = !DILocation(line: 2207, column: 42, scope: !3161)
!3340 = !DILocation(line: 2207, column: 45, scope: !3161)
!3341 = !DILocation(line: 2207, column: 19, scope: !3161)
!3342 = !DILocation(line: 2207, column: 17, scope: !3161)
!3343 = !DILocation(line: 2208, column: 17, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2208, column: 17)
!3345 = !DILocation(line: 2208, column: 21, scope: !3344)
!3346 = !DILocation(line: 2208, column: 17, scope: !3161)
!3347 = !DILocation(line: 2209, column: 17, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3344, file: !805, line: 2208, column: 26)
!3349 = !DILocation(line: 2210, column: 38, scope: !3348)
!3350 = !DILocation(line: 2210, column: 35, scope: !3348)
!3351 = !{!933, !915, i64 80}
!3352 = !DILocation(line: 2211, column: 17, scope: !3348)
!3353 = !DILocation(line: 2212, column: 29, scope: !3348)
!3354 = !DILocation(line: 2212, column: 17, scope: !3348)
!3355 = !DILocation(line: 2212, column: 20, scope: !3348)
!3356 = !DILocation(line: 2212, column: 26, scope: !3348)
!3357 = !DILocation(line: 2213, column: 31, scope: !3348)
!3358 = !DILocation(line: 2213, column: 17, scope: !3348)
!3359 = !DILocation(line: 2213, column: 20, scope: !3348)
!3360 = !DILocation(line: 2213, column: 28, scope: !3348)
!3361 = !DILocation(line: 2215, column: 17, scope: !3348)
!3362 = !DILocation(line: 2217, column: 17, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2217, column: 17)
!3364 = !DILocation(line: 2217, column: 21, scope: !3363)
!3365 = !DILocation(line: 2217, column: 17, scope: !3161)
!3366 = !DILocation(line: 2218, column: 32, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3363, file: !805, line: 2217, column: 27)
!3368 = !DILocation(line: 2218, column: 17, scope: !3367)
!3369 = !DILocation(line: 2219, column: 17, scope: !3367)
!3370 = !DILocation(line: 2221, column: 17, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2221, column: 17)
!3372 = !DILocation(line: 2221, column: 21, scope: !3371)
!3373 = !DILocation(line: 2221, column: 27, scope: !3371)
!3374 = !DILocation(line: 2221, column: 31, scope: !3371)
!3375 = !DILocation(line: 2221, column: 37, scope: !3371)
!3376 = !DILocation(line: 2221, column: 47, scope: !3371)
!3377 = !DILocation(line: 2221, column: 50, scope: !3371)
!3378 = !DILocation(line: 2221, column: 56, scope: !3371)
!3379 = !DILocation(line: 2221, column: 17, scope: !3161)
!3380 = !DILocation(line: 2222, column: 35, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3382, file: !805, line: 2222, column: 21)
!3382 = distinct !DILexicalBlock(scope: !3371, file: !805, line: 2221, column: 73)
!3383 = !DILocation(line: 2222, column: 22, scope: !3381)
!3384 = !DILocation(line: 2222, column: 21, scope: !3382)
!3385 = !DILocation(line: 2223, column: 34, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !805, line: 2223, column: 25)
!3387 = distinct !DILexicalBlock(scope: !3381, file: !805, line: 2222, column: 61)
!3388 = !DILocation(line: 2223, column: 42, scope: !3386)
!3389 = !DILocation(line: 2223, column: 25, scope: !3387)
!3390 = !DILocation(line: 2224, column: 33, scope: !3386)
!3391 = !DILocation(line: 2224, column: 25, scope: !3386)
!3392 = !DILocation(line: 2225, column: 36, scope: !3387)
!3393 = !DILocation(line: 2225, column: 21, scope: !3387)
!3394 = !DILocation(line: 2226, column: 21, scope: !3387)
!3395 = !DILocation(line: 2228, column: 22, scope: !3382)
!3396 = !DILocation(line: 2229, column: 17, scope: !3382)
!3397 = !DILocation(line: 2232, column: 26, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2232, column: 17)
!3399 = !DILocation(line: 2232, column: 34, scope: !3398)
!3400 = !DILocation(line: 2232, column: 17, scope: !3161)
!3401 = !DILocation(line: 2233, column: 25, scope: !3398)
!3402 = !DILocation(line: 2233, column: 17, scope: !3398)
!3403 = !DILocation(line: 2234, column: 28, scope: !3161)
!3404 = !DILocation(line: 2234, column: 13, scope: !3161)
!3405 = !DILocation(line: 2235, column: 13, scope: !3161)
!3406 = !DILocation(line: 2241, column: 17, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2241, column: 17)
!3408 = !DILocation(line: 2241, column: 20, scope: !3407)
!3409 = !{!1055, !934, i64 236}
!3410 = !DILocation(line: 2241, column: 27, scope: !3407)
!3411 = !DILocation(line: 2241, column: 17, scope: !3161)
!3412 = !DILocation(line: 2242, column: 32, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3407, file: !805, line: 2241, column: 33)
!3414 = !DILocation(line: 2242, column: 17, scope: !3413)
!3415 = !DILocation(line: 2243, column: 17, scope: !3413)
!3416 = !DILocation(line: 2247, column: 17, scope: !3165)
!3417 = !DILocation(line: 2247, column: 20, scope: !3165)
!3418 = !DILocation(line: 2247, column: 27, scope: !3165)
!3419 = !DILocation(line: 2247, column: 17, scope: !3161)
!3420 = !DILocation(line: 2248, column: 17, scope: !3164)
!3421 = !DILocation(line: 2248, column: 21, scope: !3164)
!3422 = !DILocation(line: 2248, column: 30, scope: !3164)
!3423 = !DILocation(line: 2248, column: 33, scope: !3164)
!3424 = !DILocation(line: 2248, column: 42, scope: !3164)
!3425 = !DILocation(line: 2248, column: 45, scope: !3164)
!3426 = !DILocation(line: 2248, column: 40, scope: !3164)
!3427 = !DILocation(line: 2248, column: 54, scope: !3164)
!3428 = !DILocation(line: 2248, column: 57, scope: !3164)
!3429 = !DILocation(line: 2248, column: 66, scope: !3164)
!3430 = !DILocation(line: 2248, column: 69, scope: !3164)
!3431 = !DILocation(line: 2249, column: 30, scope: !3164)
!3432 = !DILocation(line: 2249, column: 17, scope: !3164)
!3433 = !DILocation(line: 2249, column: 20, scope: !3164)
!3434 = !DILocation(line: 2249, column: 27, scope: !3164)
!3435 = !DILocation(line: 2250, column: 29, scope: !3164)
!3436 = !DILocation(line: 2250, column: 17, scope: !3164)
!3437 = !DILocation(line: 2250, column: 20, scope: !3164)
!3438 = !DILocation(line: 2250, column: 26, scope: !3164)
!3439 = !DILocation(line: 2251, column: 30, scope: !3164)
!3440 = !DILocation(line: 2251, column: 17, scope: !3164)
!3441 = !DILocation(line: 2251, column: 20, scope: !3164)
!3442 = !DILocation(line: 2251, column: 27, scope: !3164)
!3443 = !DILocation(line: 2253, column: 13, scope: !3165)
!3444 = !DILocation(line: 2256, column: 24, scope: !3161)
!3445 = !DILocation(line: 2256, column: 27, scope: !3161)
!3446 = !DILocation(line: 2256, column: 32, scope: !3161)
!3447 = !DILocation(line: 2256, column: 35, scope: !3161)
!3448 = !DILocation(line: 2256, column: 41, scope: !3161)
!3449 = !DILocation(line: 2256, column: 44, scope: !3161)
!3450 = !DILocation(line: 2256, column: 52, scope: !3161)
!3451 = !DILocation(line: 2256, column: 55, scope: !3161)
!3452 = !DILocation(line: 2256, column: 50, scope: !3161)
!3453 = !DILocation(line: 2256, column: 64, scope: !3161)
!3454 = !DILocation(line: 2256, column: 67, scope: !3161)
!3455 = !DILocation(line: 2256, column: 76, scope: !3161)
!3456 = !DILocation(line: 2256, column: 79, scope: !3161)
!3457 = !DILocation(line: 2256, column: 19, scope: !3161)
!3458 = !DILocation(line: 2256, column: 17, scope: !3161)
!3459 = !DILocation(line: 2257, column: 17, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2257, column: 17)
!3461 = !DILocation(line: 2257, column: 21, scope: !3460)
!3462 = !DILocation(line: 2257, column: 17, scope: !3161)
!3463 = !DILocation(line: 2258, column: 17, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3460, file: !805, line: 2257, column: 26)
!3465 = !DILocation(line: 2259, column: 38, scope: !3464)
!3466 = !DILocation(line: 2259, column: 35, scope: !3464)
!3467 = !DILocation(line: 2260, column: 17, scope: !3464)
!3468 = !DILocation(line: 2261, column: 30, scope: !3464)
!3469 = !DILocation(line: 2261, column: 17, scope: !3464)
!3470 = !DILocation(line: 2261, column: 20, scope: !3464)
!3471 = !DILocation(line: 2261, column: 27, scope: !3464)
!3472 = !DILocation(line: 2262, column: 17, scope: !3464)
!3473 = !DILocation(line: 2264, column: 17, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2264, column: 17)
!3475 = !DILocation(line: 2264, column: 21, scope: !3474)
!3476 = !DILocation(line: 2264, column: 17, scope: !3161)
!3477 = !DILocation(line: 2265, column: 32, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3474, file: !805, line: 2264, column: 27)
!3479 = !DILocation(line: 2265, column: 17, scope: !3478)
!3480 = !DILocation(line: 2266, column: 17, scope: !3478)
!3481 = !DILocation(line: 2268, column: 17, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2268, column: 17)
!3483 = !DILocation(line: 2268, column: 21, scope: !3482)
!3484 = !DILocation(line: 2268, column: 27, scope: !3482)
!3485 = !DILocation(line: 2268, column: 31, scope: !3482)
!3486 = !DILocation(line: 2268, column: 37, scope: !3482)
!3487 = !DILocation(line: 2268, column: 47, scope: !3482)
!3488 = !DILocation(line: 2268, column: 50, scope: !3482)
!3489 = !DILocation(line: 2268, column: 56, scope: !3482)
!3490 = !DILocation(line: 2268, column: 17, scope: !3161)
!3491 = !DILocation(line: 2269, column: 35, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !805, line: 2269, column: 21)
!3493 = distinct !DILexicalBlock(scope: !3482, file: !805, line: 2268, column: 73)
!3494 = !DILocation(line: 2269, column: 22, scope: !3492)
!3495 = !DILocation(line: 2269, column: 21, scope: !3493)
!3496 = !DILocation(line: 2270, column: 34, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !805, line: 2270, column: 25)
!3498 = distinct !DILexicalBlock(scope: !3492, file: !805, line: 2269, column: 61)
!3499 = !DILocation(line: 2270, column: 42, scope: !3497)
!3500 = !DILocation(line: 2270, column: 25, scope: !3498)
!3501 = !DILocation(line: 2271, column: 33, scope: !3497)
!3502 = !DILocation(line: 2271, column: 25, scope: !3497)
!3503 = !DILocation(line: 2272, column: 36, scope: !3498)
!3504 = !DILocation(line: 2272, column: 21, scope: !3498)
!3505 = !DILocation(line: 2273, column: 21, scope: !3498)
!3506 = !DILocation(line: 2275, column: 22, scope: !3493)
!3507 = !DILocation(line: 2276, column: 17, scope: !3493)
!3508 = !DILocation(line: 2279, column: 26, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2279, column: 17)
!3510 = !DILocation(line: 2279, column: 34, scope: !3509)
!3511 = !DILocation(line: 2279, column: 17, scope: !3161)
!3512 = !DILocation(line: 2280, column: 25, scope: !3509)
!3513 = !DILocation(line: 2280, column: 17, scope: !3509)
!3514 = !DILocation(line: 2281, column: 28, scope: !3161)
!3515 = !DILocation(line: 2281, column: 13, scope: !3161)
!3516 = !DILocation(line: 2282, column: 13, scope: !3161)
!3517 = !DILocation(line: 2291, column: 17, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2291, column: 17)
!3519 = !DILocation(line: 2291, column: 20, scope: !3518)
!3520 = !DILocation(line: 2291, column: 28, scope: !3518)
!3521 = !DILocation(line: 2291, column: 33, scope: !3518)
!3522 = !DILocation(line: 2291, column: 37, scope: !3518)
!3523 = !DILocation(line: 2291, column: 40, scope: !3518)
!3524 = !DILocation(line: 2291, column: 44, scope: !3518)
!3525 = !DILocation(line: 2291, column: 47, scope: !3518)
!3526 = !DILocation(line: 2291, column: 50, scope: !3518)
!3527 = !DILocation(line: 2291, column: 58, scope: !3518)
!3528 = !DILocation(line: 2291, column: 17, scope: !3161)
!3529 = !DILocation(line: 2292, column: 29, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !805, line: 2292, column: 21)
!3531 = distinct !DILexicalBlock(scope: !3518, file: !805, line: 2291, column: 65)
!3532 = !DILocation(line: 2292, column: 32, scope: !3530)
!3533 = !DILocation(line: 2292, column: 35, scope: !3530)
!3534 = !DILocation(line: 2292, column: 42, scope: !3530)
!3535 = !DILocation(line: 2292, column: 45, scope: !3530)
!3536 = !DILocation(line: 2292, column: 21, scope: !3530)
!3537 = !DILocation(line: 2292, column: 53, scope: !3530)
!3538 = !DILocation(line: 2292, column: 58, scope: !3530)
!3539 = !DILocation(line: 2293, column: 22, scope: !3530)
!3540 = !DILocation(line: 2293, column: 25, scope: !3530)
!3541 = !DILocation(line: 2293, column: 29, scope: !3530)
!3542 = !DILocation(line: 2293, column: 50, scope: !3530)
!3543 = !DILocation(line: 2293, column: 32, scope: !3530)
!3544 = !DILocation(line: 2293, column: 53, scope: !3530)
!3545 = !DILocation(line: 2292, column: 21, scope: !3531)
!3546 = !DILocation(line: 2294, column: 34, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !805, line: 2294, column: 25)
!3548 = distinct !DILexicalBlock(scope: !3530, file: !805, line: 2293, column: 60)
!3549 = !DILocation(line: 2294, column: 42, scope: !3547)
!3550 = !DILocation(line: 2294, column: 25, scope: !3548)
!3551 = !DILocation(line: 2295, column: 33, scope: !3547)
!3552 = !DILocation(line: 2295, column: 25, scope: !3547)
!3553 = !DILocation(line: 2296, column: 36, scope: !3548)
!3554 = !DILocation(line: 2296, column: 21, scope: !3548)
!3555 = !DILocation(line: 2297, column: 21, scope: !3548)
!3556 = !DILocation(line: 2299, column: 13, scope: !3531)
!3557 = !DILocation(line: 2291, column: 62, scope: !3518)
!3558 = !DILocation(line: 2305, column: 30, scope: !3161)
!3559 = !DILocation(line: 2305, column: 21, scope: !3161)
!3560 = !DILocation(line: 2305, column: 13, scope: !3161)
!3561 = !DILocation(line: 2308, column: 21, scope: !3169)
!3562 = !DILocation(line: 2308, column: 24, scope: !3169)
!3563 = !DILocation(line: 2308, column: 30, scope: !3169)
!3564 = !DILocation(line: 2308, column: 21, scope: !3170)
!3565 = !DILocation(line: 2309, column: 21, scope: !3168)
!3566 = !DILocation(line: 2309, column: 28, scope: !3168)
!3567 = !DILocation(line: 2309, column: 31, scope: !3168)
!3568 = !DILocation(line: 2309, column: 37, scope: !3168)
!3569 = !DILocation(line: 2310, column: 25, scope: !3167)
!3570 = !DILocation(line: 2310, column: 31, scope: !3167)
!3571 = !DILocation(line: 2310, column: 38, scope: !3167)
!3572 = !DILocation(line: 2310, column: 41, scope: !3167)
!3573 = !DILocation(line: 2310, column: 36, scope: !3167)
!3574 = !DILocation(line: 2311, column: 25, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !805, line: 2311, column: 25)
!3576 = distinct !DILexicalBlock(scope: !3167, file: !805, line: 2311, column: 25)
!3577 = !DILocation(line: 2311, column: 25, scope: !3576)
!3578 = !DILocation(line: 2312, column: 25, scope: !3167)
!3579 = !DILocation(line: 2313, column: 25, scope: !3167)
!3580 = !DILocation(line: 2313, column: 28, scope: !3167)
!3581 = !DILocation(line: 2313, column: 33, scope: !3167)
!3582 = !DILocation(line: 2314, column: 25, scope: !3167)
!3583 = !DILocation(line: 2314, column: 28, scope: !3167)
!3584 = !DILocation(line: 2314, column: 33, scope: !3167)
!3585 = !DILocation(line: 2315, column: 21, scope: !3168)
!3586 = distinct !{!3586, !3565, !3585}
!3587 = !DILocation(line: 2316, column: 21, scope: !3168)
!3588 = !DILocation(line: 2316, column: 28, scope: !3168)
!3589 = !DILocation(line: 2316, column: 31, scope: !3168)
!3590 = !DILocation(line: 2316, column: 42, scope: !3168)
!3591 = !DILocation(line: 2317, column: 25, scope: !3172)
!3592 = !DILocation(line: 2317, column: 31, scope: !3172)
!3593 = !DILocation(line: 2317, column: 42, scope: !3172)
!3594 = !DILocation(line: 2317, column: 45, scope: !3172)
!3595 = !DILocation(line: 2317, column: 40, scope: !3172)
!3596 = !DILocation(line: 2318, column: 28, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3172, file: !805, line: 2318, column: 28)
!3598 = !DILocation(line: 2318, column: 28, scope: !3172)
!3599 = !DILocation(line: 2320, column: 34, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3597, file: !805, line: 2318, column: 60)
!3601 = !DILocation(line: 2320, column: 29, scope: !3600)
!3602 = !DILocation(line: 2321, column: 25, scope: !3600)
!3603 = !DILocation(line: 2322, column: 25, scope: !3172)
!3604 = !DILocation(line: 2322, column: 28, scope: !3172)
!3605 = !DILocation(line: 2322, column: 38, scope: !3172)
!3606 = !DILocation(line: 2323, column: 25, scope: !3172)
!3607 = !DILocation(line: 2323, column: 28, scope: !3172)
!3608 = !DILocation(line: 2323, column: 38, scope: !3172)
!3609 = !DILocation(line: 2324, column: 21, scope: !3168)
!3610 = distinct !{!3610, !3587, !3609}
!3611 = !DILocation(line: 2325, column: 36, scope: !3168)
!3612 = !DILocation(line: 2325, column: 21, scope: !3168)
!3613 = !DILocation(line: 2326, column: 17, scope: !3168)
!3614 = !DILocation(line: 2326, column: 28, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3169, file: !805, line: 2326, column: 28)
!3616 = !DILocation(line: 2326, column: 31, scope: !3615)
!3617 = !DILocation(line: 2326, column: 37, scope: !3615)
!3618 = !DILocation(line: 2326, column: 28, scope: !3169)
!3619 = !DILocation(line: 2327, column: 25, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !805, line: 2327, column: 25)
!3621 = distinct !DILexicalBlock(scope: !3615, file: !805, line: 2326, column: 52)
!3622 = !DILocation(line: 2327, column: 28, scope: !3620)
!3623 = !DILocation(line: 2327, column: 25, scope: !3621)
!3624 = !DILocation(line: 2328, column: 30, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3620, file: !805, line: 2327, column: 44)
!3626 = !DILocation(line: 2328, column: 33, scope: !3625)
!3627 = !DILocation(line: 2328, column: 25, scope: !3625)
!3628 = !DILocation(line: 2329, column: 25, scope: !3625)
!3629 = !DILocation(line: 2329, column: 28, scope: !3625)
!3630 = !DILocation(line: 2329, column: 43, scope: !3625)
!3631 = !DILocation(line: 2330, column: 21, scope: !3625)
!3632 = !DILocation(line: 2331, column: 36, scope: !3621)
!3633 = !DILocation(line: 2331, column: 39, scope: !3621)
!3634 = !DILocation(line: 2331, column: 42, scope: !3621)
!3635 = !DILocation(line: 2331, column: 21, scope: !3621)
!3636 = !DILocation(line: 2332, column: 17, scope: !3621)
!3637 = !DILocation(line: 2333, column: 34, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !805, line: 2333, column: 25)
!3639 = distinct !DILexicalBlock(scope: !3615, file: !805, line: 2332, column: 24)
!3640 = !DILocation(line: 2333, column: 42, scope: !3638)
!3641 = !DILocation(line: 2333, column: 25, scope: !3639)
!3642 = !DILocation(line: 2334, column: 33, scope: !3638)
!3643 = !DILocation(line: 2334, column: 66, scope: !3638)
!3644 = !DILocation(line: 2334, column: 69, scope: !3638)
!3645 = !DILocation(line: 2334, column: 25, scope: !3638)
!3646 = !DILocation(line: 2335, column: 36, scope: !3639)
!3647 = !DILocation(line: 2335, column: 21, scope: !3639)
!3648 = !DILocation(line: 2337, column: 17, scope: !3170)
!3649 = !DILocation(line: 2343, column: 17, scope: !3170)
!3650 = !DILocation(line: 2347, column: 22, scope: !3170)
!3651 = !DILocation(line: 2348, column: 17, scope: !3170)
!3652 = !DILocation(line: 2350, column: 13, scope: !3161)
!3653 = !DILocation(line: 2354, column: 17, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3161, file: !805, line: 2354, column: 17)
!3655 = !DILocation(line: 2354, column: 20, scope: !3654)
!3656 = !DILocation(line: 2354, column: 17, scope: !3161)
!3657 = !DILocation(line: 2355, column: 30, scope: !3654)
!3658 = !DILocation(line: 2355, column: 17, scope: !3654)
!3659 = !DILocation(line: 2357, column: 28, scope: !3654)
!3660 = !DILocation(line: 2357, column: 17, scope: !3654)
!3661 = !DILocation(line: 2358, column: 18, scope: !3161)
!3662 = !DILocation(line: 2359, column: 13, scope: !3161)
!3663 = !DILocation(line: 2364, column: 1, scope: !3149)
!3664 = distinct !DISubprogram(name: "accept_new_conns", scope: !805, file: !805, line: 2018, type: !3665, scopeLine: 2018, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3667)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{null, !1018}
!3667 = !{!3668}
!3668 = !DILocalVariable(name: "do_accept", arg: 1, scope: !3664, file: !805, line: 2018, type: !1018)
!3669 = !DILocation(line: 2018, column: 34, scope: !3664)
!3670 = !DILocation(line: 2019, column: 11, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3664, file: !805, line: 2019, column: 9)
!3672 = !DILocation(line: 2019, column: 9, scope: !3664)
!3673 = !DILocation(line: 2020, column: 9, scope: !3671)
!3674 = !DILocation(line: 2021, column: 9, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3664, file: !805, line: 2021, column: 9)
!3676 = !DILocation(line: 2021, column: 9, scope: !3664)
!3677 = !DILocation(line: 2022, column: 22, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3675, file: !805, line: 2021, column: 20)
!3679 = !DILocation(line: 2022, column: 9, scope: !3678)
!3680 = !DILocation(line: 2023, column: 20, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3678, file: !805, line: 2023, column: 13)
!3682 = !DILocation(line: 2023, column: 33, scope: !3681)
!3683 = !DILocation(line: 2023, column: 13, scope: !3681)
!3684 = !DILocation(line: 2023, column: 44, scope: !3681)
!3685 = !DILocation(line: 2023, column: 13, scope: !3678)
!3686 = !DILocation(line: 2024, column: 13, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3681, file: !805, line: 2023, column: 50)
!3688 = !DILocation(line: 2025, column: 9, scope: !3687)
!3689 = !DILocation(line: 2026, column: 5, scope: !3678)
!3690 = !DILocation(line: 2028, column: 22, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3675, file: !805, line: 2027, column: 10)
!3692 = !DILocation(line: 2028, column: 9, scope: !3691)
!3693 = !DILocation(line: 2029, column: 20, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3691, file: !805, line: 2029, column: 13)
!3695 = !DILocation(line: 2029, column: 33, scope: !3694)
!3696 = !DILocation(line: 2029, column: 13, scope: !3694)
!3697 = !DILocation(line: 2029, column: 41, scope: !3694)
!3698 = !DILocation(line: 2029, column: 13, scope: !3691)
!3699 = !DILocation(line: 2030, column: 13, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3694, file: !805, line: 2029, column: 47)
!3701 = !DILocation(line: 2031, column: 9, scope: !3700)
!3702 = !DILocation(line: 2033, column: 1, scope: !3664)
!3703 = distinct !DISubprogram(name: "conn_cleanup", scope: !805, file: !805, line: 411, type: !1451, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3704)
!3704 = !{!3705}
!3705 = !DILocalVariable(name: "c", arg: 1, scope: !3703, file: !805, line: 411, type: !296)
!3706 = !DILocation(line: 411, column: 32, scope: !3703)
!3707 = !DILocation(line: 412, column: 5, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3709, file: !805, line: 412, column: 5)
!3709 = distinct !DILexicalBlock(scope: !3703, file: !805, line: 412, column: 5)
!3710 = !DILocation(line: 412, column: 5, scope: !3709)
!3711 = !DILocation(line: 414, column: 9, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3703, file: !805, line: 414, column: 9)
!3713 = !DILocation(line: 414, column: 12, scope: !3712)
!3714 = !DILocation(line: 414, column: 9, scope: !3703)
!3715 = !DILocation(line: 415, column: 9, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3712, file: !805, line: 414, column: 22)
!3717 = !DILocation(line: 416, column: 9, scope: !3716)
!3718 = !DILocation(line: 416, column: 12, scope: !3716)
!3719 = !DILocation(line: 416, column: 21, scope: !3716)
!3720 = !DILocation(line: 417, column: 5, scope: !3716)
!3721 = !DILocation(line: 419, column: 9, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3703, file: !805, line: 419, column: 9)
!3723 = !DILocation(line: 419, column: 12, scope: !3722)
!3724 = !DILocation(line: 419, column: 18, scope: !3722)
!3725 = !DILocation(line: 419, column: 9, scope: !3703)
!3726 = !DILocation(line: 420, column: 9, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3722, file: !805, line: 419, column: 24)
!3728 = !DILocation(line: 420, column: 16, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !805, line: 420, column: 9)
!3730 = distinct !DILexicalBlock(scope: !3727, file: !805, line: 420, column: 9)
!3731 = !DILocation(line: 420, column: 19, scope: !3729)
!3732 = !DILocation(line: 420, column: 25, scope: !3729)
!3733 = !DILocation(line: 420, column: 9, scope: !3730)
!3734 = !DILocation(line: 421, column: 13, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3729, file: !805, line: 420, column: 53)
!3736 = !DILocation(line: 422, column: 9, scope: !3735)
!3737 = !DILocation(line: 420, column: 30, scope: !3729)
!3738 = !DILocation(line: 420, column: 33, scope: !3729)
!3739 = !DILocation(line: 420, column: 38, scope: !3729)
!3740 = !DILocation(line: 420, column: 41, scope: !3729)
!3741 = !DILocation(line: 420, column: 44, scope: !3729)
!3742 = !DILocation(line: 420, column: 49, scope: !3729)
!3743 = !DILocation(line: 420, column: 9, scope: !3729)
!3744 = distinct !{!3744, !3733, !3745}
!3745 = !DILocation(line: 422, column: 9, scope: !3730)
!3746 = !DILocation(line: 423, column: 5, scope: !3727)
!3747 = !DILocation(line: 425, column: 9, scope: !3748)
!3748 = distinct !DILexicalBlock(scope: !3703, file: !805, line: 425, column: 9)
!3749 = !DILocation(line: 425, column: 12, scope: !3748)
!3750 = !DILocation(line: 425, column: 23, scope: !3748)
!3751 = !DILocation(line: 425, column: 9, scope: !3703)
!3752 = !DILocation(line: 426, column: 9, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3748, file: !805, line: 425, column: 29)
!3754 = !DILocation(line: 426, column: 16, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3756, file: !805, line: 426, column: 9)
!3756 = distinct !DILexicalBlock(scope: !3753, file: !805, line: 426, column: 9)
!3757 = !DILocation(line: 426, column: 19, scope: !3755)
!3758 = !DILocation(line: 426, column: 30, scope: !3755)
!3759 = !DILocation(line: 426, column: 9, scope: !3756)
!3760 = !DILocation(line: 427, column: 16, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !805, line: 427, column: 16)
!3762 = distinct !DILexicalBlock(scope: !3755, file: !805, line: 426, column: 69)
!3763 = !DILocation(line: 427, column: 16, scope: !3762)
!3764 = !DILocation(line: 428, column: 24, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3761, file: !805, line: 427, column: 58)
!3766 = !DILocation(line: 428, column: 27, scope: !3765)
!3767 = !DILocation(line: 428, column: 22, scope: !3765)
!3768 = !DILocation(line: 428, column: 17, scope: !3765)
!3769 = !DILocation(line: 429, column: 13, scope: !3765)
!3770 = !DILocation(line: 430, column: 9, scope: !3762)
!3771 = !DILocation(line: 426, column: 35, scope: !3755)
!3772 = !DILocation(line: 426, column: 38, scope: !3755)
!3773 = !DILocation(line: 426, column: 48, scope: !3755)
!3774 = !DILocation(line: 426, column: 52, scope: !3755)
!3775 = !DILocation(line: 426, column: 55, scope: !3755)
!3776 = !DILocation(line: 426, column: 65, scope: !3755)
!3777 = !DILocation(line: 426, column: 9, scope: !3755)
!3778 = distinct !{!3778, !3759, !3779}
!3779 = !DILocation(line: 430, column: 9, scope: !3756)
!3780 = !DILocation(line: 431, column: 5, scope: !3753)
!3781 = !DILocation(line: 433, column: 9, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3703, file: !805, line: 433, column: 9)
!3783 = !DILocation(line: 433, column: 12, scope: !3782)
!3784 = !DILocation(line: 433, column: 9, scope: !3703)
!3785 = !DILocation(line: 434, column: 14, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3782, file: !805, line: 433, column: 28)
!3787 = !DILocation(line: 434, column: 17, scope: !3786)
!3788 = !DILocation(line: 434, column: 9, scope: !3786)
!3789 = !DILocation(line: 435, column: 9, scope: !3786)
!3790 = !DILocation(line: 435, column: 12, scope: !3786)
!3791 = !DILocation(line: 435, column: 27, scope: !3786)
!3792 = !DILocation(line: 436, column: 5, scope: !3786)
!3793 = !DILocation(line: 437, column: 1, scope: !3703)
!3794 = distinct !DISubprogram(name: "update_event", scope: !805, file: !805, line: 2001, type: !3795, scopeLine: 2001, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3797)
!3795 = !DISubroutineType(types: !3796)
!3796 = !{!276, !296, !867}
!3797 = !{!3798, !3799, !3800}
!3798 = !DILocalVariable(name: "c", arg: 1, scope: !3794, file: !805, line: 2001, type: !296)
!3799 = !DILocalVariable(name: "new_flags", arg: 2, scope: !3794, file: !805, line: 2001, type: !867)
!3800 = !DILocalVariable(name: "base", scope: !3794, file: !805, line: 2004, type: !156)
!3801 = !DILocation(line: 2001, column: 32, scope: !3794)
!3802 = !DILocation(line: 2001, column: 45, scope: !3794)
!3803 = !DILocation(line: 2002, column: 5, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3805, file: !805, line: 2002, column: 5)
!3805 = distinct !DILexicalBlock(scope: !3794, file: !805, line: 2002, column: 5)
!3806 = !DILocation(line: 2002, column: 5, scope: !3805)
!3807 = !DILocation(line: 2004, column: 5, scope: !3794)
!3808 = !DILocation(line: 2004, column: 24, scope: !3794)
!3809 = !DILocation(line: 2004, column: 31, scope: !3794)
!3810 = !DILocation(line: 2004, column: 34, scope: !3794)
!3811 = !DILocation(line: 2004, column: 40, scope: !3794)
!3812 = !{!1055, !965, i64 72}
!3813 = !DILocation(line: 2005, column: 9, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3794, file: !805, line: 2005, column: 9)
!3815 = !DILocation(line: 2005, column: 12, scope: !3814)
!3816 = !DILocation(line: 2005, column: 24, scope: !3814)
!3817 = !DILocation(line: 2005, column: 21, scope: !3814)
!3818 = !DILocation(line: 2005, column: 9, scope: !3794)
!3819 = !DILocation(line: 2006, column: 9, scope: !3814)
!3820 = !DILocation(line: 2007, column: 20, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3794, file: !805, line: 2007, column: 9)
!3822 = !DILocation(line: 2007, column: 23, scope: !3821)
!3823 = !DILocation(line: 2007, column: 9, scope: !3821)
!3824 = !DILocation(line: 2007, column: 30, scope: !3821)
!3825 = !DILocation(line: 2007, column: 9, scope: !3794)
!3826 = !DILocation(line: 2007, column: 37, scope: !3821)
!3827 = !DILocation(line: 2008, column: 16, scope: !3794)
!3828 = !DILocation(line: 2008, column: 19, scope: !3794)
!3829 = !DILocation(line: 2008, column: 26, scope: !3794)
!3830 = !DILocation(line: 2008, column: 29, scope: !3794)
!3831 = !DILocation(line: 2008, column: 34, scope: !3794)
!3832 = !DILocation(line: 2008, column: 68, scope: !3794)
!3833 = !DILocation(line: 2008, column: 60, scope: !3794)
!3834 = !DILocation(line: 2008, column: 5, scope: !3794)
!3835 = !DILocation(line: 2009, column: 20, scope: !3794)
!3836 = !DILocation(line: 2009, column: 27, scope: !3794)
!3837 = !DILocation(line: 2009, column: 30, scope: !3794)
!3838 = !DILocation(line: 2009, column: 5, scope: !3794)
!3839 = !DILocation(line: 2010, column: 19, scope: !3794)
!3840 = !DILocation(line: 2010, column: 5, scope: !3794)
!3841 = !DILocation(line: 2010, column: 8, scope: !3794)
!3842 = !DILocation(line: 2010, column: 17, scope: !3794)
!3843 = !DILocation(line: 2011, column: 20, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3794, file: !805, line: 2011, column: 9)
!3845 = !DILocation(line: 2011, column: 23, scope: !3844)
!3846 = !DILocation(line: 2011, column: 9, scope: !3844)
!3847 = !DILocation(line: 2011, column: 33, scope: !3844)
!3848 = !DILocation(line: 2011, column: 9, scope: !3794)
!3849 = !DILocation(line: 2011, column: 40, scope: !3844)
!3850 = !DILocation(line: 2012, column: 5, scope: !3794)
!3851 = !DILocation(line: 2013, column: 1, scope: !3794)
!3852 = distinct !DISubprogram(name: "try_read_command", scope: !805, file: !805, line: 1860, type: !3853, scopeLine: 1860, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3855)
!3853 = !DISubroutineType(types: !3854)
!3854 = !{!47, !296}
!3855 = !{!3856, !3857, !3858, !3859}
!3856 = !DILocalVariable(name: "c", arg: 1, scope: !3852, file: !805, line: 1860, type: !296)
!3857 = !DILocalVariable(name: "el", scope: !3852, file: !805, line: 1862, type: !195)
!3858 = !DILocalVariable(name: "cont", scope: !3852, file: !805, line: 1862, type: !195)
!3859 = !DILocalVariable(name: "it", scope: !3852, file: !805, line: 1891, type: !243)
!3860 = !DILocation(line: 1860, column: 35, scope: !3852)
!3861 = !DILocation(line: 1862, column: 5, scope: !3852)
!3862 = !DILocation(line: 1862, column: 11, scope: !3852)
!3863 = !DILocation(line: 1862, column: 16, scope: !3852)
!3864 = !DILocation(line: 1864, column: 5, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3866, file: !805, line: 1864, column: 5)
!3866 = distinct !DILexicalBlock(scope: !3852, file: !805, line: 1864, column: 5)
!3867 = !DILocation(line: 1864, column: 5, scope: !3866)
!3868 = !DILocation(line: 1865, column: 5, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3870, file: !805, line: 1865, column: 5)
!3870 = distinct !DILexicalBlock(scope: !3852, file: !805, line: 1865, column: 5)
!3871 = !DILocation(line: 1865, column: 5, scope: !3870)
!3872 = !DILocation(line: 1867, column: 9, scope: !3873)
!3873 = distinct !DILexicalBlock(scope: !3852, file: !805, line: 1867, column: 9)
!3874 = !DILocation(line: 1867, column: 12, scope: !3873)
!3875 = !DILocation(line: 1867, column: 19, scope: !3873)
!3876 = !DILocation(line: 1867, column: 9, scope: !3852)
!3877 = !DILocation(line: 1868, column: 9, scope: !3873)
!3878 = !DILocation(line: 1871, column: 17, scope: !3852)
!3879 = !DILocation(line: 1871, column: 20, scope: !3852)
!3880 = !DILocation(line: 1871, column: 33, scope: !3852)
!3881 = !DILocation(line: 1871, column: 36, scope: !3852)
!3882 = !DILocation(line: 1871, column: 10, scope: !3852)
!3883 = !DILocation(line: 1871, column: 8, scope: !3852)
!3884 = !DILocation(line: 1872, column: 10, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3852, file: !805, line: 1872, column: 9)
!3886 = !DILocation(line: 1872, column: 9, scope: !3852)
!3887 = !DILocation(line: 1873, column: 9, scope: !3885)
!3888 = !DILocation(line: 1874, column: 12, scope: !3852)
!3889 = !DILocation(line: 1874, column: 15, scope: !3852)
!3890 = !DILocation(line: 1874, column: 10, scope: !3852)
!3891 = !DILocation(line: 1875, column: 10, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3852, file: !805, line: 1875, column: 9)
!3893 = !DILocation(line: 1875, column: 15, scope: !3892)
!3894 = !DILocation(line: 1875, column: 18, scope: !3892)
!3895 = !DILocation(line: 1875, column: 13, scope: !3892)
!3896 = !DILocation(line: 1875, column: 25, scope: !3892)
!3897 = !DILocation(line: 1875, column: 29, scope: !3892)
!3898 = !DILocation(line: 1875, column: 34, scope: !3892)
!3899 = !DILocation(line: 1875, column: 37, scope: !3892)
!3900 = !DILocation(line: 1875, column: 32, scope: !3892)
!3901 = !DILocation(line: 1875, column: 42, scope: !3892)
!3902 = !DILocation(line: 1875, column: 9, scope: !3852)
!3903 = !DILocation(line: 1876, column: 11, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3892, file: !805, line: 1875, column: 51)
!3905 = !DILocation(line: 1877, column: 5, scope: !3904)
!3906 = !DILocation(line: 1878, column: 6, scope: !3852)
!3907 = !DILocation(line: 1878, column: 9, scope: !3852)
!3908 = !DILocation(line: 1881, column: 5, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !805, line: 1881, column: 5)
!3910 = distinct !DILexicalBlock(scope: !3852, file: !805, line: 1881, column: 5)
!3911 = !DILocation(line: 1881, column: 5, scope: !3910)
!3912 = !DILocation(line: 1884, column: 21, scope: !3852)
!3913 = !DILocation(line: 1884, column: 24, scope: !3852)
!3914 = !DILocation(line: 1884, column: 27, scope: !3852)
!3915 = !DILocation(line: 1884, column: 5, scope: !3852)
!3916 = !DILocation(line: 1886, column: 19, scope: !3852)
!3917 = !DILocation(line: 1886, column: 26, scope: !3852)
!3918 = !DILocation(line: 1886, column: 29, scope: !3852)
!3919 = !DILocation(line: 1886, column: 24, scope: !3852)
!3920 = !DILocation(line: 1886, column: 5, scope: !3852)
!3921 = !DILocation(line: 1886, column: 8, scope: !3852)
!3922 = !DILocation(line: 1886, column: 15, scope: !3852)
!3923 = !DILocation(line: 1887, column: 16, scope: !3852)
!3924 = !DILocation(line: 1887, column: 5, scope: !3852)
!3925 = !DILocation(line: 1887, column: 8, scope: !3852)
!3926 = !DILocation(line: 1887, column: 14, scope: !3852)
!3927 = !DILocation(line: 1889, column: 5, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !805, line: 1889, column: 5)
!3929 = distinct !DILexicalBlock(scope: !3852, file: !805, line: 1889, column: 5)
!3930 = !DILocation(line: 1889, column: 5, scope: !3929)
!3931 = !DILocation(line: 1891, column: 2, scope: !3852)
!3932 = !DILocation(line: 1891, column: 8, scope: !3852)
!3933 = !DILocation(line: 1891, column: 13, scope: !3852)
!3934 = !DILocation(line: 1891, column: 16, scope: !3852)
!3935 = !DILocation(line: 1895, column: 5, scope: !3852)
!3936 = !DILocation(line: 1896, column: 1, scope: !3852)
!3937 = distinct !DISubprogram(name: "try_read_udp", scope: !805, file: !805, line: 1902, type: !3853, scopeLine: 1902, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3938)
!3938 = !{!3939, !3940, !3941}
!3939 = !DILocalVariable(name: "c", arg: 1, scope: !3937, file: !805, line: 1902, type: !296)
!3940 = !DILocalVariable(name: "res", scope: !3937, file: !805, line: 1903, type: !47)
!3941 = !DILocalVariable(name: "buf", scope: !3942, file: !805, line: 1911, type: !290)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !805, line: 1910, column: 18)
!3943 = distinct !DILexicalBlock(scope: !3937, file: !805, line: 1910, column: 9)
!3944 = !DILocation(line: 1902, column: 31, scope: !3937)
!3945 = !DILocation(line: 1903, column: 5, scope: !3937)
!3946 = !DILocation(line: 1903, column: 9, scope: !3937)
!3947 = !DILocation(line: 1905, column: 5, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !805, line: 1905, column: 5)
!3949 = distinct !DILexicalBlock(scope: !3937, file: !805, line: 1905, column: 5)
!3950 = !DILocation(line: 1905, column: 5, scope: !3949)
!3951 = !DILocation(line: 1907, column: 5, scope: !3937)
!3952 = !DILocation(line: 1907, column: 8, scope: !3937)
!3953 = !DILocation(line: 1907, column: 26, scope: !3937)
!3954 = !{!1055, !934, i64 364}
!3955 = !DILocation(line: 1908, column: 20, scope: !3937)
!3956 = !DILocation(line: 1908, column: 23, scope: !3937)
!3957 = !DILocation(line: 1908, column: 28, scope: !3937)
!3958 = !DILocation(line: 1908, column: 31, scope: !3937)
!3959 = !DILocation(line: 1908, column: 37, scope: !3937)
!3960 = !DILocation(line: 1908, column: 40, scope: !3937)
!3961 = !DILocation(line: 1909, column: 24, scope: !3937)
!3962 = !DILocation(line: 1909, column: 27, scope: !3937)
!3963 = !DILocation(line: 1909, column: 42, scope: !3937)
!3964 = !DILocation(line: 1909, column: 45, scope: !3937)
!3965 = !DILocation(line: 1908, column: 11, scope: !3937)
!3966 = !DILocation(line: 1908, column: 9, scope: !3937)
!3967 = !DILocation(line: 1910, column: 9, scope: !3943)
!3968 = !DILocation(line: 1910, column: 13, scope: !3943)
!3969 = !DILocation(line: 1910, column: 9, scope: !3937)
!3970 = !DILocation(line: 1911, column: 9, scope: !3942)
!3971 = !DILocation(line: 1911, column: 24, scope: !3942)
!3972 = !DILocation(line: 1911, column: 47, scope: !3942)
!3973 = !DILocation(line: 1911, column: 50, scope: !3942)
!3974 = !DILocation(line: 1912, column: 9, scope: !3942)
!3975 = !DILocation(line: 1913, column: 30, scope: !3942)
!3976 = !DILocation(line: 1913, column: 27, scope: !3942)
!3977 = !DILocation(line: 1914, column: 9, scope: !3942)
!3978 = !DILocation(line: 1917, column: 25, scope: !3942)
!3979 = !DILocation(line: 1917, column: 32, scope: !3942)
!3980 = !DILocation(line: 1917, column: 40, scope: !3942)
!3981 = !DILocation(line: 1917, column: 38, scope: !3942)
!3982 = !DILocation(line: 1917, column: 9, scope: !3942)
!3983 = !DILocation(line: 1917, column: 12, scope: !3942)
!3984 = !DILocation(line: 1917, column: 23, scope: !3942)
!3985 = !{!1055, !934, i64 344}
!3986 = !DILocation(line: 1920, column: 13, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3942, file: !805, line: 1920, column: 13)
!3988 = !DILocation(line: 1920, column: 20, scope: !3987)
!3989 = !DILocation(line: 1920, column: 25, scope: !3987)
!3990 = !DILocation(line: 1920, column: 28, scope: !3987)
!3991 = !DILocation(line: 1920, column: 35, scope: !3987)
!3992 = !DILocation(line: 1920, column: 13, scope: !3942)
!3993 = !DILocation(line: 1921, column: 24, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3987, file: !805, line: 1920, column: 41)
!3995 = !DILocation(line: 1921, column: 13, scope: !3994)
!3996 = !DILocation(line: 1922, column: 13, scope: !3994)
!3997 = !DILocation(line: 1926, column: 13, scope: !3942)
!3998 = !DILocation(line: 1927, column: 17, scope: !3942)
!3999 = !DILocation(line: 1927, column: 20, scope: !3942)
!4000 = !DILocation(line: 1927, column: 26, scope: !3942)
!4001 = !DILocation(line: 1927, column: 29, scope: !3942)
!4002 = !DILocation(line: 1927, column: 34, scope: !3942)
!4003 = !DILocation(line: 1927, column: 39, scope: !3942)
!4004 = !DILocation(line: 1927, column: 9, scope: !3942)
!4005 = !DILocation(line: 1929, column: 22, scope: !3942)
!4006 = !DILocation(line: 1929, column: 9, scope: !3942)
!4007 = !DILocation(line: 1929, column: 12, scope: !3942)
!4008 = !DILocation(line: 1929, column: 19, scope: !3942)
!4009 = !DILocation(line: 1930, column: 20, scope: !3942)
!4010 = !DILocation(line: 1930, column: 23, scope: !3942)
!4011 = !DILocation(line: 1930, column: 9, scope: !3942)
!4012 = !DILocation(line: 1930, column: 12, scope: !3942)
!4013 = !DILocation(line: 1930, column: 18, scope: !3942)
!4014 = !DILocation(line: 1931, column: 9, scope: !3942)
!4015 = !DILocation(line: 1932, column: 5, scope: !3943)
!4016 = !DILocation(line: 1933, column: 5, scope: !3937)
!4017 = !DILocation(line: 1934, column: 1, scope: !3937)
!4018 = distinct !DISubprogram(name: "try_read_network", scope: !805, file: !805, line: 1943, type: !3853, scopeLine: 1943, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4019)
!4019 = !{!4020, !4021, !4022, !4023}
!4020 = !DILocalVariable(name: "c", arg: 1, scope: !4018, file: !805, line: 1943, type: !296)
!4021 = !DILocalVariable(name: "gotdata", scope: !4018, file: !805, line: 1944, type: !47)
!4022 = !DILocalVariable(name: "res", scope: !4018, file: !805, line: 1945, type: !47)
!4023 = !DILocalVariable(name: "new_rbuf", scope: !4024, file: !805, line: 1957, type: !195)
!4024 = distinct !DILexicalBlock(scope: !4025, file: !805, line: 1956, column: 36)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !805, line: 1956, column: 13)
!4026 = distinct !DILexicalBlock(scope: !4018, file: !805, line: 1955, column: 15)
!4027 = !DILocation(line: 1943, column: 35, scope: !4018)
!4028 = !DILocation(line: 1944, column: 5, scope: !4018)
!4029 = !DILocation(line: 1944, column: 9, scope: !4018)
!4030 = !DILocation(line: 1945, column: 5, scope: !4018)
!4031 = !DILocation(line: 1945, column: 9, scope: !4018)
!4032 = !DILocation(line: 1947, column: 5, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4034, file: !805, line: 1947, column: 5)
!4034 = distinct !DILexicalBlock(scope: !4018, file: !805, line: 1947, column: 5)
!4035 = !DILocation(line: 1947, column: 5, scope: !4034)
!4036 = !DILocation(line: 1949, column: 9, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4018, file: !805, line: 1949, column: 9)
!4038 = !DILocation(line: 1949, column: 12, scope: !4037)
!4039 = !DILocation(line: 1949, column: 21, scope: !4037)
!4040 = !DILocation(line: 1949, column: 24, scope: !4037)
!4041 = !DILocation(line: 1949, column: 18, scope: !4037)
!4042 = !DILocation(line: 1949, column: 9, scope: !4018)
!4043 = !DILocation(line: 1950, column: 13, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !805, line: 1950, column: 13)
!4045 = distinct !DILexicalBlock(scope: !4037, file: !805, line: 1949, column: 30)
!4046 = !DILocation(line: 1950, column: 16, scope: !4044)
!4047 = !DILocation(line: 1950, column: 23, scope: !4044)
!4048 = !DILocation(line: 1950, column: 13, scope: !4045)
!4049 = !DILocation(line: 1951, column: 21, scope: !4044)
!4050 = !DILocation(line: 1951, column: 24, scope: !4044)
!4051 = !DILocation(line: 1951, column: 30, scope: !4044)
!4052 = !DILocation(line: 1951, column: 33, scope: !4044)
!4053 = !DILocation(line: 1951, column: 40, scope: !4044)
!4054 = !DILocation(line: 1951, column: 43, scope: !4044)
!4055 = !DILocation(line: 1951, column: 13, scope: !4044)
!4056 = !DILocation(line: 1952, column: 20, scope: !4045)
!4057 = !DILocation(line: 1952, column: 23, scope: !4045)
!4058 = !DILocation(line: 1952, column: 9, scope: !4045)
!4059 = !DILocation(line: 1952, column: 12, scope: !4045)
!4060 = !DILocation(line: 1952, column: 18, scope: !4045)
!4061 = !DILocation(line: 1953, column: 5, scope: !4045)
!4062 = !DILocation(line: 1955, column: 5, scope: !4018)
!4063 = !DILocation(line: 1956, column: 13, scope: !4025)
!4064 = !DILocation(line: 1956, column: 16, scope: !4025)
!4065 = !DILocation(line: 1956, column: 26, scope: !4025)
!4066 = !DILocation(line: 1956, column: 29, scope: !4025)
!4067 = !DILocation(line: 1956, column: 23, scope: !4025)
!4068 = !DILocation(line: 1956, column: 13, scope: !4026)
!4069 = !DILocation(line: 1957, column: 13, scope: !4024)
!4070 = !DILocation(line: 1957, column: 19, scope: !4024)
!4071 = !DILocation(line: 1957, column: 38, scope: !4024)
!4072 = !DILocation(line: 1957, column: 41, scope: !4024)
!4073 = !DILocation(line: 1957, column: 47, scope: !4024)
!4074 = !DILocation(line: 1957, column: 50, scope: !4024)
!4075 = !DILocation(line: 1957, column: 56, scope: !4024)
!4076 = !DILocation(line: 1957, column: 30, scope: !4024)
!4077 = !DILocation(line: 1958, column: 18, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4024, file: !805, line: 1958, column: 17)
!4079 = !DILocation(line: 1958, column: 17, scope: !4024)
!4080 = !DILocation(line: 1959, column: 30, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !805, line: 1959, column: 21)
!4082 = distinct !DILexicalBlock(scope: !4078, file: !805, line: 1958, column: 28)
!4083 = !DILocation(line: 1959, column: 38, scope: !4081)
!4084 = !DILocation(line: 1959, column: 21, scope: !4082)
!4085 = !DILocation(line: 1960, column: 29, scope: !4081)
!4086 = !DILocation(line: 1960, column: 21, scope: !4081)
!4087 = !DILocation(line: 1961, column: 17, scope: !4082)
!4088 = !DILocation(line: 1961, column: 20, scope: !4082)
!4089 = !DILocation(line: 1961, column: 27, scope: !4082)
!4090 = !DILocation(line: 1962, column: 28, scope: !4082)
!4091 = !DILocation(line: 1962, column: 17, scope: !4082)
!4092 = !DILocation(line: 1963, column: 17, scope: !4082)
!4093 = !DILocation(line: 1963, column: 20, scope: !4082)
!4094 = !DILocation(line: 1963, column: 33, scope: !4082)
!4095 = !DILocation(line: 1964, column: 17, scope: !4082)
!4096 = !DILocation(line: 1966, column: 34, scope: !4024)
!4097 = !DILocation(line: 1966, column: 24, scope: !4024)
!4098 = !DILocation(line: 1966, column: 27, scope: !4024)
!4099 = !DILocation(line: 1966, column: 32, scope: !4024)
!4100 = !DILocation(line: 1966, column: 13, scope: !4024)
!4101 = !DILocation(line: 1966, column: 16, scope: !4024)
!4102 = !DILocation(line: 1966, column: 22, scope: !4024)
!4103 = !DILocation(line: 1967, column: 13, scope: !4024)
!4104 = !DILocation(line: 1967, column: 16, scope: !4024)
!4105 = !DILocation(line: 1967, column: 22, scope: !4024)
!4106 = !DILocation(line: 1968, column: 9, scope: !4025)
!4107 = !DILocation(line: 1968, column: 9, scope: !4024)
!4108 = !DILocation(line: 1973, column: 23, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4026, file: !805, line: 1973, column: 13)
!4110 = !DILocation(line: 1973, column: 14, scope: !4109)
!4111 = !DILocation(line: 1973, column: 13, scope: !4026)
!4112 = !DILocation(line: 1974, column: 13, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4109, file: !805, line: 1973, column: 35)
!4114 = !DILocation(line: 1974, column: 16, scope: !4113)
!4115 = !DILocation(line: 1974, column: 34, scope: !4113)
!4116 = !DILocation(line: 1975, column: 9, scope: !4113)
!4117 = !DILocation(line: 1976, column: 13, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4109, file: !805, line: 1975, column: 16)
!4119 = !DILocation(line: 1976, column: 16, scope: !4118)
!4120 = !DILocation(line: 1976, column: 34, scope: !4118)
!4121 = !DILocation(line: 1979, column: 20, scope: !4026)
!4122 = !DILocation(line: 1979, column: 23, scope: !4026)
!4123 = !DILocation(line: 1979, column: 28, scope: !4026)
!4124 = !DILocation(line: 1979, column: 31, scope: !4026)
!4125 = !DILocation(line: 1979, column: 38, scope: !4026)
!4126 = !DILocation(line: 1979, column: 41, scope: !4026)
!4127 = !DILocation(line: 1979, column: 36, scope: !4026)
!4128 = !DILocation(line: 1979, column: 49, scope: !4026)
!4129 = !DILocation(line: 1979, column: 52, scope: !4026)
!4130 = !DILocation(line: 1979, column: 60, scope: !4026)
!4131 = !DILocation(line: 1979, column: 63, scope: !4026)
!4132 = !DILocation(line: 1979, column: 58, scope: !4026)
!4133 = !DILocation(line: 1979, column: 15, scope: !4026)
!4134 = !DILocation(line: 1979, column: 13, scope: !4026)
!4135 = !DILocation(line: 1980, column: 13, scope: !4136)
!4136 = distinct !DILexicalBlock(scope: !4026, file: !805, line: 1980, column: 13)
!4137 = !DILocation(line: 1980, column: 17, scope: !4136)
!4138 = !DILocation(line: 1980, column: 13, scope: !4026)
!4139 = !DILocation(line: 1981, column: 13, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4136, file: !805, line: 1980, column: 22)
!4141 = !DILocation(line: 1982, column: 34, scope: !4140)
!4142 = !DILocation(line: 1982, column: 31, scope: !4140)
!4143 = !DILocation(line: 1983, column: 13, scope: !4140)
!4144 = !DILocation(line: 1984, column: 21, scope: !4140)
!4145 = !DILocation(line: 1985, column: 26, scope: !4140)
!4146 = !DILocation(line: 1985, column: 13, scope: !4140)
!4147 = !DILocation(line: 1985, column: 16, scope: !4140)
!4148 = !DILocation(line: 1985, column: 23, scope: !4140)
!4149 = !DILocation(line: 1986, column: 13, scope: !4140)
!4150 = distinct !{!4150, !4062, !4151}
!4151 = !DILocation(line: 1997, column: 5, scope: !4018)
!4152 = !DILocation(line: 1988, column: 13, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4026, file: !805, line: 1988, column: 13)
!4154 = !DILocation(line: 1988, column: 17, scope: !4153)
!4155 = !DILocation(line: 1988, column: 13, scope: !4026)
!4156 = !DILocation(line: 1990, column: 28, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4153, file: !805, line: 1988, column: 23)
!4158 = !DILocation(line: 1990, column: 13, scope: !4157)
!4159 = !DILocation(line: 1991, column: 13, scope: !4157)
!4160 = !DILocation(line: 1993, column: 13, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4026, file: !805, line: 1993, column: 13)
!4162 = !DILocation(line: 1993, column: 17, scope: !4161)
!4163 = !DILocation(line: 1993, column: 13, scope: !4026)
!4164 = !DILocation(line: 1994, column: 17, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4166, file: !805, line: 1994, column: 17)
!4166 = distinct !DILexicalBlock(scope: !4161, file: !805, line: 1993, column: 24)
!4167 = !DILocation(line: 1994, column: 23, scope: !4165)
!4168 = !DILocation(line: 1994, column: 33, scope: !4165)
!4169 = !DILocation(line: 1994, column: 36, scope: !4165)
!4170 = !DILocation(line: 1994, column: 42, scope: !4165)
!4171 = !DILocation(line: 1994, column: 17, scope: !4166)
!4172 = !DILocation(line: 1994, column: 58, scope: !4165)
!4173 = !DILocation(line: 1995, column: 18, scope: !4165)
!4174 = !DILocation(line: 1998, column: 12, scope: !4018)
!4175 = !DILocation(line: 1998, column: 5, scope: !4018)
!4176 = !DILocation(line: 1999, column: 1, scope: !4018)
!4177 = distinct !DISubprogram(name: "conn_set_state", scope: !805, file: !805, line: 553, type: !4178, scopeLine: 553, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4180)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{null, !296, !47}
!4180 = !{!4181, !4182}
!4181 = !DILocalVariable(name: "c", arg: 1, scope: !4177, file: !805, line: 553, type: !296)
!4182 = !DILocalVariable(name: "state", arg: 2, scope: !4177, file: !805, line: 553, type: !47)
!4183 = !DILocation(line: 553, column: 34, scope: !4177)
!4184 = !DILocation(line: 553, column: 41, scope: !4177)
!4185 = !DILocation(line: 554, column: 5, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4187, file: !805, line: 554, column: 5)
!4187 = distinct !DILexicalBlock(scope: !4177, file: !805, line: 554, column: 5)
!4188 = !DILocation(line: 554, column: 5, scope: !4187)
!4189 = !DILocation(line: 556, column: 9, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4177, file: !805, line: 556, column: 9)
!4191 = !DILocation(line: 556, column: 18, scope: !4190)
!4192 = !DILocation(line: 556, column: 21, scope: !4190)
!4193 = !DILocation(line: 556, column: 15, scope: !4190)
!4194 = !DILocation(line: 556, column: 9, scope: !4177)
!4195 = !DILocation(line: 557, column: 13, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4197, file: !805, line: 557, column: 13)
!4197 = distinct !DILexicalBlock(scope: !4190, file: !805, line: 556, column: 28)
!4198 = !DILocation(line: 557, column: 19, scope: !4196)
!4199 = !DILocation(line: 557, column: 13, scope: !4197)
!4200 = !DILocation(line: 558, column: 25, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4196, file: !805, line: 557, column: 33)
!4202 = !DILocation(line: 558, column: 13, scope: !4201)
!4203 = !DILocation(line: 560, column: 9, scope: !4201)
!4204 = !DILocation(line: 561, column: 20, scope: !4197)
!4205 = !DILocation(line: 561, column: 9, scope: !4197)
!4206 = !DILocation(line: 561, column: 12, scope: !4197)
!4207 = !DILocation(line: 561, column: 18, scope: !4197)
!4208 = !DILocation(line: 562, column: 5, scope: !4197)
!4209 = !DILocation(line: 563, column: 1, scope: !4177)
!4210 = distinct !DISubprogram(name: "complete_nread", scope: !805, file: !805, line: 779, type: !1451, scopeLine: 779, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4211)
!4211 = !{!4212, !4213, !4214, !4215}
!4212 = !DILocalVariable(name: "c", arg: 1, scope: !4210, file: !805, line: 779, type: !296)
!4213 = !DILocalVariable(name: "it", scope: !4210, file: !805, line: 782, type: !243)
!4214 = !DILocalVariable(name: "comm", scope: !4210, file: !805, line: 783, type: !47)
!4215 = !DILocalVariable(name: "ret", scope: !4210, file: !805, line: 784, type: !47)
!4216 = !DILocation(line: 779, column: 34, scope: !4210)
!4217 = !DILocation(line: 780, column: 5, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4219, file: !805, line: 780, column: 5)
!4219 = distinct !DILexicalBlock(scope: !4210, file: !805, line: 780, column: 5)
!4220 = !DILocation(line: 780, column: 5, scope: !4219)
!4221 = !DILocation(line: 782, column: 5, scope: !4210)
!4222 = !DILocation(line: 782, column: 11, scope: !4210)
!4223 = !DILocation(line: 782, column: 16, scope: !4210)
!4224 = !DILocation(line: 782, column: 19, scope: !4210)
!4225 = !DILocation(line: 783, column: 5, scope: !4210)
!4226 = !DILocation(line: 783, column: 9, scope: !4210)
!4227 = !DILocation(line: 783, column: 16, scope: !4210)
!4228 = !DILocation(line: 783, column: 19, scope: !4210)
!4229 = !{!1055, !934, i64 232}
!4230 = !DILocation(line: 784, column: 5, scope: !4210)
!4231 = !DILocation(line: 784, column: 9, scope: !4210)
!4232 = !DILocation(line: 786, column: 5, scope: !4210)
!4233 = !DILocation(line: 787, column: 20, scope: !4210)
!4234 = !{!933, !915, i64 40}
!4235 = !DILocation(line: 788, column: 5, scope: !4210)
!4236 = !DILocation(line: 790, column: 17, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4210, file: !805, line: 790, column: 9)
!4238 = !DILocation(line: 790, column: 33, scope: !4237)
!4239 = !DILocation(line: 790, column: 37, scope: !4237)
!4240 = !DILocation(line: 790, column: 31, scope: !4237)
!4241 = !DILocation(line: 790, column: 44, scope: !4237)
!4242 = !DILocation(line: 790, column: 9, scope: !4237)
!4243 = !DILocation(line: 790, column: 60, scope: !4237)
!4244 = !DILocation(line: 790, column: 9, scope: !4210)
!4245 = !DILocation(line: 791, column: 20, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4237, file: !805, line: 790, column: 66)
!4247 = !DILocation(line: 791, column: 9, scope: !4246)
!4248 = !DILocation(line: 792, column: 5, scope: !4246)
!4249 = !DILocation(line: 797, column: 13, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4237, file: !805, line: 792, column: 12)
!4251 = !DILocation(line: 797, column: 11, scope: !4250)
!4252 = !DILocation(line: 798, column: 11, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4250, file: !805, line: 798, column: 11)
!4254 = !DILocation(line: 798, column: 15, scope: !4253)
!4255 = !DILocation(line: 798, column: 11, scope: !4250)
!4256 = !DILocation(line: 799, column: 22, scope: !4253)
!4257 = !DILocation(line: 799, column: 11, scope: !4253)
!4258 = !DILocation(line: 800, column: 15, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4253, file: !805, line: 800, column: 15)
!4260 = !DILocation(line: 800, column: 19, scope: !4259)
!4261 = !DILocation(line: 800, column: 15, scope: !4253)
!4262 = !DILocation(line: 801, column: 22, scope: !4259)
!4263 = !DILocation(line: 801, column: 11, scope: !4259)
!4264 = !DILocation(line: 802, column: 15, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4259, file: !805, line: 802, column: 15)
!4266 = !DILocation(line: 802, column: 19, scope: !4265)
!4267 = !DILocation(line: 802, column: 15, scope: !4259)
!4268 = !DILocation(line: 803, column: 22, scope: !4265)
!4269 = !DILocation(line: 803, column: 11, scope: !4265)
!4270 = !DILocation(line: 805, column: 22, scope: !4265)
!4271 = !DILocation(line: 805, column: 11, scope: !4265)
!4272 = !DILocation(line: 808, column: 5, scope: !4210)
!4273 = !DILocation(line: 809, column: 5, scope: !4210)
!4274 = !DILocation(line: 809, column: 8, scope: !4210)
!4275 = !DILocation(line: 809, column: 17, scope: !4210)
!4276 = !DILocation(line: 810, column: 1, scope: !4210)
!4277 = distinct !DISubprogram(name: "add_iov", scope: !805, file: !805, line: 659, type: !4278, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4280)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{!47, !296, !777, !47}
!4280 = !{!4281, !4282, !4283, !4284, !4285, !4286}
!4281 = !DILocalVariable(name: "c", arg: 1, scope: !4277, file: !805, line: 659, type: !296)
!4282 = !DILocalVariable(name: "buf", arg: 2, scope: !4277, file: !805, line: 659, type: !777)
!4283 = !DILocalVariable(name: "len", arg: 3, scope: !4277, file: !805, line: 659, type: !47)
!4284 = !DILocalVariable(name: "m", scope: !4277, file: !805, line: 660, type: !224)
!4285 = !DILocalVariable(name: "leftover", scope: !4277, file: !805, line: 661, type: !47)
!4286 = !DILocalVariable(name: "limit_to_mtu", scope: !4277, file: !805, line: 662, type: !276)
!4287 = !DILocation(line: 659, column: 26, scope: !4277)
!4288 = !DILocation(line: 659, column: 41, scope: !4277)
!4289 = !DILocation(line: 659, column: 50, scope: !4277)
!4290 = !DILocation(line: 660, column: 5, scope: !4277)
!4291 = !DILocation(line: 660, column: 20, scope: !4277)
!4292 = !DILocation(line: 661, column: 5, scope: !4277)
!4293 = !DILocation(line: 661, column: 9, scope: !4277)
!4294 = !DILocation(line: 662, column: 5, scope: !4277)
!4295 = !DILocation(line: 662, column: 10, scope: !4277)
!4296 = !DILocation(line: 664, column: 5, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4298, file: !805, line: 664, column: 5)
!4298 = distinct !DILexicalBlock(scope: !4277, file: !805, line: 664, column: 5)
!4299 = !DILocation(line: 664, column: 5, scope: !4298)
!4300 = !DILocation(line: 666, column: 5, scope: !4277)
!4301 = !DILocation(line: 667, column: 14, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4277, file: !805, line: 666, column: 8)
!4303 = !DILocation(line: 667, column: 17, scope: !4302)
!4304 = !DILocation(line: 667, column: 25, scope: !4302)
!4305 = !DILocation(line: 667, column: 28, scope: !4302)
!4306 = !DILocation(line: 667, column: 36, scope: !4302)
!4307 = !DILocation(line: 667, column: 11, scope: !4302)
!4308 = !DILocation(line: 673, column: 24, scope: !4302)
!4309 = !DILocation(line: 673, column: 27, scope: !4302)
!4310 = !DILocation(line: 673, column: 31, scope: !4302)
!4311 = !DILocation(line: 673, column: 40, scope: !4302)
!4312 = !DILocation(line: 673, column: 43, scope: !4302)
!4313 = !DILocation(line: 673, column: 37, scope: !4302)
!4314 = !DILocation(line: 673, column: 22, scope: !4302)
!4315 = !DILocation(line: 676, column: 13, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4302, file: !805, line: 676, column: 13)
!4317 = !DILocation(line: 676, column: 16, scope: !4316)
!4318 = !{!4319, !915, i64 24}
!4319 = !{!"msghdr", !965, i64 0, !934, i64 8, !965, i64 16, !915, i64 24, !965, i64 32, !915, i64 40, !934, i64 48}
!4320 = !DILocation(line: 676, column: 27, scope: !4316)
!4321 = !DILocation(line: 676, column: 38, scope: !4316)
!4322 = !DILocation(line: 677, column: 14, scope: !4316)
!4323 = !DILocation(line: 677, column: 27, scope: !4316)
!4324 = !DILocation(line: 677, column: 30, scope: !4316)
!4325 = !DILocation(line: 677, column: 33, scope: !4316)
!4326 = !{!1055, !934, i64 276}
!4327 = !DILocation(line: 677, column: 42, scope: !4316)
!4328 = !DILocation(line: 676, column: 13, scope: !4302)
!4329 = !DILocation(line: 678, column: 24, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4316, file: !805, line: 677, column: 68)
!4331 = !DILocation(line: 678, column: 13, scope: !4330)
!4332 = !DILocation(line: 679, column: 18, scope: !4330)
!4333 = !DILocation(line: 679, column: 21, scope: !4330)
!4334 = !DILocation(line: 679, column: 29, scope: !4330)
!4335 = !DILocation(line: 679, column: 32, scope: !4330)
!4336 = !DILocation(line: 679, column: 40, scope: !4330)
!4337 = !DILocation(line: 679, column: 15, scope: !4330)
!4338 = !DILocation(line: 680, column: 9, scope: !4330)
!4339 = !DILocation(line: 682, column: 30, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4302, file: !805, line: 682, column: 13)
!4341 = !DILocation(line: 682, column: 13, scope: !4340)
!4342 = !DILocation(line: 682, column: 33, scope: !4340)
!4343 = !DILocation(line: 682, column: 13, scope: !4302)
!4344 = !DILocation(line: 683, column: 13, scope: !4340)
!4345 = !DILocation(line: 686, column: 13, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4302, file: !805, line: 686, column: 13)
!4347 = !DILocation(line: 686, column: 26, scope: !4346)
!4348 = !DILocation(line: 686, column: 29, scope: !4346)
!4349 = !DILocation(line: 686, column: 35, scope: !4346)
!4350 = !DILocation(line: 686, column: 38, scope: !4346)
!4351 = !DILocation(line: 686, column: 33, scope: !4346)
!4352 = !DILocation(line: 686, column: 47, scope: !4346)
!4353 = !DILocation(line: 686, column: 13, scope: !4302)
!4354 = !DILocation(line: 687, column: 24, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4346, file: !805, line: 686, column: 71)
!4356 = !DILocation(line: 687, column: 30, scope: !4355)
!4357 = !DILocation(line: 687, column: 33, scope: !4355)
!4358 = !DILocation(line: 687, column: 28, scope: !4355)
!4359 = !DILocation(line: 687, column: 42, scope: !4355)
!4360 = !DILocation(line: 687, column: 22, scope: !4355)
!4361 = !DILocation(line: 688, column: 20, scope: !4355)
!4362 = !DILocation(line: 688, column: 17, scope: !4355)
!4363 = !DILocation(line: 689, column: 9, scope: !4355)
!4364 = !DILocation(line: 690, column: 22, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4346, file: !805, line: 689, column: 16)
!4366 = !DILocation(line: 693, column: 14, scope: !4302)
!4367 = !DILocation(line: 693, column: 17, scope: !4302)
!4368 = !DILocation(line: 693, column: 25, scope: !4302)
!4369 = !DILocation(line: 693, column: 28, scope: !4302)
!4370 = !DILocation(line: 693, column: 36, scope: !4302)
!4371 = !DILocation(line: 693, column: 11, scope: !4302)
!4372 = !DILocation(line: 694, column: 54, scope: !4302)
!4373 = !DILocation(line: 694, column: 9, scope: !4302)
!4374 = !DILocation(line: 694, column: 12, scope: !4302)
!4375 = !{!4319, !965, i64 16}
!4376 = !DILocation(line: 694, column: 20, scope: !4302)
!4377 = !DILocation(line: 694, column: 23, scope: !4302)
!4378 = !DILocation(line: 694, column: 35, scope: !4302)
!4379 = !DILocation(line: 694, column: 44, scope: !4302)
!4380 = !{!4381, !965, i64 0}
!4381 = !{!"iovec", !965, i64 0, !915, i64 8}
!4382 = !DILocation(line: 695, column: 45, scope: !4302)
!4383 = !DILocation(line: 695, column: 9, scope: !4302)
!4384 = !DILocation(line: 695, column: 12, scope: !4302)
!4385 = !DILocation(line: 695, column: 20, scope: !4302)
!4386 = !DILocation(line: 695, column: 23, scope: !4302)
!4387 = !DILocation(line: 695, column: 35, scope: !4302)
!4388 = !DILocation(line: 695, column: 43, scope: !4302)
!4389 = !{!4381, !915, i64 8}
!4390 = !DILocation(line: 697, column: 24, scope: !4302)
!4391 = !DILocation(line: 697, column: 9, scope: !4302)
!4392 = !DILocation(line: 697, column: 12, scope: !4302)
!4393 = !DILocation(line: 697, column: 21, scope: !4302)
!4394 = !DILocation(line: 698, column: 9, scope: !4302)
!4395 = !DILocation(line: 698, column: 12, scope: !4302)
!4396 = !DILocation(line: 698, column: 19, scope: !4302)
!4397 = !DILocation(line: 699, column: 9, scope: !4302)
!4398 = !DILocation(line: 699, column: 12, scope: !4302)
!4399 = !DILocation(line: 699, column: 22, scope: !4302)
!4400 = !DILocation(line: 701, column: 24, scope: !4302)
!4401 = !DILocation(line: 701, column: 31, scope: !4302)
!4402 = !DILocation(line: 701, column: 29, scope: !4302)
!4403 = !DILocation(line: 701, column: 13, scope: !4302)
!4404 = !DILocation(line: 702, column: 15, scope: !4302)
!4405 = !DILocation(line: 702, column: 13, scope: !4302)
!4406 = !DILocation(line: 703, column: 5, scope: !4302)
!4407 = !DILocation(line: 703, column: 14, scope: !4277)
!4408 = !DILocation(line: 703, column: 23, scope: !4277)
!4409 = distinct !{!4409, !4300, !4410}
!4410 = !DILocation(line: 703, column: 26, scope: !4277)
!4411 = !DILocation(line: 705, column: 5, scope: !4277)
!4412 = !DILocation(line: 706, column: 1, scope: !4277)
!4413 = distinct !DISubprogram(name: "build_udp_headers", scope: !805, file: !805, line: 712, type: !3853, scopeLine: 712, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4414)
!4414 = !{!4415, !4416, !4417, !4418}
!4415 = !DILocalVariable(name: "c", arg: 1, scope: !4413, file: !805, line: 712, type: !296)
!4416 = !DILocalVariable(name: "i", scope: !4413, file: !805, line: 713, type: !47)
!4417 = !DILocalVariable(name: "hdr", scope: !4413, file: !805, line: 714, type: !290)
!4418 = !DILocalVariable(name: "new_hdrbuf", scope: !4419, file: !805, line: 719, type: !132)
!4419 = distinct !DILexicalBlock(scope: !4420, file: !805, line: 718, column: 34)
!4420 = distinct !DILexicalBlock(scope: !4413, file: !805, line: 718, column: 9)
!4421 = !DILocation(line: 712, column: 36, scope: !4413)
!4422 = !DILocation(line: 713, column: 5, scope: !4413)
!4423 = !DILocation(line: 713, column: 9, scope: !4413)
!4424 = !DILocation(line: 714, column: 5, scope: !4413)
!4425 = !DILocation(line: 714, column: 20, scope: !4413)
!4426 = !DILocation(line: 716, column: 5, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !805, line: 716, column: 5)
!4428 = distinct !DILexicalBlock(scope: !4413, file: !805, line: 716, column: 5)
!4429 = !DILocation(line: 716, column: 5, scope: !4428)
!4430 = !DILocation(line: 718, column: 9, scope: !4420)
!4431 = !DILocation(line: 718, column: 12, scope: !4420)
!4432 = !DILocation(line: 718, column: 22, scope: !4420)
!4433 = !DILocation(line: 718, column: 25, scope: !4420)
!4434 = !DILocation(line: 718, column: 20, scope: !4420)
!4435 = !DILocation(line: 718, column: 9, scope: !4413)
!4436 = !DILocation(line: 719, column: 9, scope: !4419)
!4437 = !DILocation(line: 719, column: 15, scope: !4419)
!4438 = !DILocation(line: 720, column: 13, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4419, file: !805, line: 720, column: 13)
!4440 = !DILocation(line: 720, column: 16, scope: !4439)
!4441 = !DILocation(line: 720, column: 13, scope: !4419)
!4442 = !DILocation(line: 721, column: 34, scope: !4439)
!4443 = !DILocation(line: 721, column: 37, scope: !4439)
!4444 = !DILocation(line: 721, column: 45, scope: !4439)
!4445 = !DILocation(line: 721, column: 48, scope: !4439)
!4446 = !DILocation(line: 721, column: 56, scope: !4439)
!4447 = !DILocation(line: 721, column: 60, scope: !4439)
!4448 = !DILocation(line: 721, column: 26, scope: !4439)
!4449 = !DILocation(line: 721, column: 24, scope: !4439)
!4450 = !DILocation(line: 721, column: 13, scope: !4439)
!4451 = !DILocation(line: 723, column: 33, scope: !4439)
!4452 = !DILocation(line: 723, column: 36, scope: !4439)
!4453 = !DILocation(line: 723, column: 44, scope: !4439)
!4454 = !DILocation(line: 723, column: 48, scope: !4439)
!4455 = !DILocation(line: 723, column: 26, scope: !4439)
!4456 = !DILocation(line: 723, column: 24, scope: !4439)
!4457 = !DILocation(line: 724, column: 15, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4419, file: !805, line: 724, column: 13)
!4459 = !DILocation(line: 724, column: 13, scope: !4419)
!4460 = !DILocation(line: 725, column: 13, scope: !4458)
!4461 = !DILocation(line: 726, column: 38, scope: !4419)
!4462 = !DILocation(line: 726, column: 9, scope: !4419)
!4463 = !DILocation(line: 726, column: 12, scope: !4419)
!4464 = !DILocation(line: 726, column: 19, scope: !4419)
!4465 = !DILocation(line: 727, column: 22, scope: !4419)
!4466 = !DILocation(line: 727, column: 25, scope: !4419)
!4467 = !DILocation(line: 727, column: 33, scope: !4419)
!4468 = !DILocation(line: 727, column: 9, scope: !4419)
!4469 = !DILocation(line: 727, column: 12, scope: !4419)
!4470 = !DILocation(line: 727, column: 20, scope: !4419)
!4471 = !DILocation(line: 728, column: 5, scope: !4420)
!4472 = !DILocation(line: 728, column: 5, scope: !4419)
!4473 = !DILocation(line: 730, column: 11, scope: !4413)
!4474 = !DILocation(line: 730, column: 14, scope: !4413)
!4475 = !DILocation(line: 730, column: 9, scope: !4413)
!4476 = !DILocation(line: 731, column: 12, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4413, file: !805, line: 731, column: 5)
!4478 = !DILocation(line: 731, column: 10, scope: !4477)
!4479 = !DILocation(line: 731, column: 17, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4477, file: !805, line: 731, column: 5)
!4481 = !DILocation(line: 731, column: 21, scope: !4480)
!4482 = !DILocation(line: 731, column: 24, scope: !4480)
!4483 = !DILocation(line: 731, column: 19, scope: !4480)
!4484 = !DILocation(line: 731, column: 5, scope: !4477)
!4485 = !DILocation(line: 732, column: 45, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4480, file: !805, line: 731, column: 38)
!4487 = !DILocation(line: 732, column: 9, scope: !4486)
!4488 = !DILocation(line: 732, column: 12, scope: !4486)
!4489 = !DILocation(line: 732, column: 20, scope: !4486)
!4490 = !DILocation(line: 732, column: 23, scope: !4486)
!4491 = !DILocation(line: 732, column: 34, scope: !4486)
!4492 = !DILocation(line: 732, column: 43, scope: !4486)
!4493 = !DILocation(line: 733, column: 9, scope: !4486)
!4494 = !DILocation(line: 733, column: 12, scope: !4486)
!4495 = !DILocation(line: 733, column: 20, scope: !4486)
!4496 = !DILocation(line: 733, column: 23, scope: !4486)
!4497 = !DILocation(line: 733, column: 34, scope: !4486)
!4498 = !DILocation(line: 733, column: 42, scope: !4486)
!4499 = !DILocation(line: 734, column: 18, scope: !4486)
!4500 = !DILocation(line: 734, column: 21, scope: !4486)
!4501 = !DILocation(line: 734, column: 32, scope: !4486)
!4502 = !DILocation(line: 734, column: 13, scope: !4486)
!4503 = !DILocation(line: 734, column: 16, scope: !4486)
!4504 = !DILocation(line: 735, column: 18, scope: !4486)
!4505 = !DILocation(line: 735, column: 21, scope: !4486)
!4506 = !DILocation(line: 735, column: 32, scope: !4486)
!4507 = !DILocation(line: 735, column: 13, scope: !4486)
!4508 = !DILocation(line: 735, column: 16, scope: !4486)
!4509 = !DILocation(line: 736, column: 18, scope: !4486)
!4510 = !DILocation(line: 736, column: 20, scope: !4486)
!4511 = !DILocation(line: 736, column: 13, scope: !4486)
!4512 = !DILocation(line: 736, column: 16, scope: !4486)
!4513 = !DILocation(line: 737, column: 18, scope: !4486)
!4514 = !DILocation(line: 737, column: 20, scope: !4486)
!4515 = !DILocation(line: 737, column: 13, scope: !4486)
!4516 = !DILocation(line: 737, column: 16, scope: !4486)
!4517 = !DILocation(line: 738, column: 18, scope: !4486)
!4518 = !DILocation(line: 738, column: 21, scope: !4486)
!4519 = !DILocation(line: 738, column: 29, scope: !4486)
!4520 = !DILocation(line: 738, column: 13, scope: !4486)
!4521 = !DILocation(line: 738, column: 16, scope: !4486)
!4522 = !DILocation(line: 739, column: 18, scope: !4486)
!4523 = !DILocation(line: 739, column: 21, scope: !4486)
!4524 = !DILocation(line: 739, column: 29, scope: !4486)
!4525 = !DILocation(line: 739, column: 13, scope: !4486)
!4526 = !DILocation(line: 739, column: 16, scope: !4486)
!4527 = !DILocation(line: 740, column: 13, scope: !4486)
!4528 = !DILocation(line: 740, column: 16, scope: !4486)
!4529 = !DILocation(line: 741, column: 13, scope: !4486)
!4530 = !DILocation(line: 741, column: 16, scope: !4486)
!4531 = !DILocation(line: 742, column: 9, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !805, line: 742, column: 9)
!4533 = distinct !DILexicalBlock(scope: !4486, file: !805, line: 742, column: 9)
!4534 = !DILocation(line: 742, column: 9, scope: !4533)
!4535 = !DILocation(line: 743, column: 5, scope: !4486)
!4536 = !DILocation(line: 731, column: 34, scope: !4480)
!4537 = !DILocation(line: 731, column: 5, scope: !4480)
!4538 = distinct !{!4538, !4484, !4539}
!4539 = !DILocation(line: 743, column: 5, scope: !4477)
!4540 = !DILocation(line: 745, column: 5, scope: !4413)
!4541 = !DILocation(line: 746, column: 1, scope: !4413)
!4542 = distinct !DISubprogram(name: "transmit", scope: !805, file: !805, line: 2045, type: !3853, scopeLine: 2045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4543)
!4543 = !{!4544, !4545, !4550}
!4544 = !DILocalVariable(name: "c", arg: 1, scope: !4542, file: !805, line: 2045, type: !296)
!4545 = !DILocalVariable(name: "res", scope: !4546, file: !805, line: 2054, type: !4548)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !805, line: 2053, column: 34)
!4547 = distinct !DILexicalBlock(scope: !4542, file: !805, line: 2053, column: 9)
!4548 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !3008, line: 109, baseType: !4549)
!4549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !122, line: 181, baseType: !175)
!4550 = !DILocalVariable(name: "m", scope: !4546, file: !805, line: 2055, type: !224)
!4551 = !DILocation(line: 2045, column: 27, scope: !4542)
!4552 = !DILocation(line: 2046, column: 5, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !805, line: 2046, column: 5)
!4554 = distinct !DILexicalBlock(scope: !4542, file: !805, line: 2046, column: 5)
!4555 = !DILocation(line: 2046, column: 5, scope: !4554)
!4556 = !DILocation(line: 2048, column: 9, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4542, file: !805, line: 2048, column: 9)
!4558 = !DILocation(line: 2048, column: 12, scope: !4557)
!4559 = !DILocation(line: 2048, column: 22, scope: !4557)
!4560 = !DILocation(line: 2048, column: 25, scope: !4557)
!4561 = !DILocation(line: 2048, column: 20, scope: !4557)
!4562 = !DILocation(line: 2048, column: 33, scope: !4557)
!4563 = !DILocation(line: 2049, column: 13, scope: !4557)
!4564 = !DILocation(line: 2049, column: 16, scope: !4557)
!4565 = !DILocation(line: 2049, column: 24, scope: !4557)
!4566 = !DILocation(line: 2049, column: 27, scope: !4557)
!4567 = !DILocation(line: 2049, column: 36, scope: !4557)
!4568 = !DILocation(line: 2049, column: 47, scope: !4557)
!4569 = !DILocation(line: 2048, column: 9, scope: !4542)
!4570 = !DILocation(line: 2051, column: 9, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4557, file: !805, line: 2049, column: 53)
!4572 = !DILocation(line: 2051, column: 12, scope: !4571)
!4573 = !DILocation(line: 2051, column: 19, scope: !4571)
!4574 = !DILocation(line: 2052, column: 5, scope: !4571)
!4575 = !DILocation(line: 2053, column: 9, scope: !4547)
!4576 = !DILocation(line: 2053, column: 12, scope: !4547)
!4577 = !DILocation(line: 2053, column: 22, scope: !4547)
!4578 = !DILocation(line: 2053, column: 25, scope: !4547)
!4579 = !DILocation(line: 2053, column: 20, scope: !4547)
!4580 = !DILocation(line: 2053, column: 9, scope: !4542)
!4581 = !DILocation(line: 2054, column: 9, scope: !4546)
!4582 = !DILocation(line: 2054, column: 17, scope: !4546)
!4583 = !DILocation(line: 2055, column: 9, scope: !4546)
!4584 = !DILocation(line: 2055, column: 24, scope: !4546)
!4585 = !DILocation(line: 2055, column: 29, scope: !4546)
!4586 = !DILocation(line: 2055, column: 32, scope: !4546)
!4587 = !DILocation(line: 2055, column: 40, scope: !4546)
!4588 = !DILocation(line: 2055, column: 43, scope: !4546)
!4589 = !DILocation(line: 2057, column: 23, scope: !4546)
!4590 = !DILocation(line: 2057, column: 26, scope: !4546)
!4591 = !DILocation(line: 2057, column: 31, scope: !4546)
!4592 = !DILocation(line: 2057, column: 15, scope: !4546)
!4593 = !DILocation(line: 2057, column: 13, scope: !4546)
!4594 = !DILocation(line: 2058, column: 13, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4546, file: !805, line: 2058, column: 13)
!4596 = !DILocation(line: 2058, column: 17, scope: !4595)
!4597 = !DILocation(line: 2058, column: 13, scope: !4546)
!4598 = !DILocation(line: 2059, column: 13, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4595, file: !805, line: 2058, column: 22)
!4600 = !DILocation(line: 2060, column: 37, scope: !4599)
!4601 = !DILocation(line: 2060, column: 34, scope: !4599)
!4602 = !{!933, !915, i64 88}
!4603 = !DILocation(line: 2061, column: 13, scope: !4599)
!4604 = !DILocation(line: 2065, column: 13, scope: !4599)
!4605 = !DILocation(line: 2065, column: 20, scope: !4599)
!4606 = !DILocation(line: 2065, column: 23, scope: !4599)
!4607 = !DILocation(line: 2065, column: 34, scope: !4599)
!4608 = !DILocation(line: 2065, column: 38, scope: !4599)
!4609 = !DILocation(line: 2065, column: 41, scope: !4599)
!4610 = !DILocation(line: 2065, column: 48, scope: !4599)
!4611 = !DILocation(line: 2065, column: 51, scope: !4599)
!4612 = !DILocation(line: 2065, column: 60, scope: !4599)
!4613 = !DILocation(line: 2065, column: 45, scope: !4599)
!4614 = !DILocation(line: 0, scope: !4599)
!4615 = !DILocation(line: 2066, column: 24, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4599, file: !805, line: 2065, column: 69)
!4617 = !DILocation(line: 2066, column: 27, scope: !4616)
!4618 = !DILocation(line: 2066, column: 36, scope: !4616)
!4619 = !DILocation(line: 2066, column: 21, scope: !4616)
!4620 = !DILocation(line: 2067, column: 17, scope: !4616)
!4621 = !DILocation(line: 2067, column: 20, scope: !4616)
!4622 = !DILocation(line: 2067, column: 30, scope: !4616)
!4623 = !DILocation(line: 2068, column: 17, scope: !4616)
!4624 = !DILocation(line: 2068, column: 20, scope: !4616)
!4625 = !DILocation(line: 2068, column: 27, scope: !4616)
!4626 = distinct !{!4626, !4604, !4627}
!4627 = !DILocation(line: 2069, column: 13, scope: !4599)
!4628 = !DILocation(line: 2073, column: 17, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4599, file: !805, line: 2073, column: 17)
!4630 = !DILocation(line: 2073, column: 21, scope: !4629)
!4631 = !DILocation(line: 2073, column: 17, scope: !4599)
!4632 = !DILocation(line: 2074, column: 41, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4629, file: !805, line: 2073, column: 26)
!4634 = !DILocation(line: 2074, column: 17, scope: !4633)
!4635 = !DILocation(line: 2074, column: 20, scope: !4633)
!4636 = !DILocation(line: 2074, column: 29, scope: !4633)
!4637 = !DILocation(line: 2074, column: 38, scope: !4633)
!4638 = !DILocation(line: 2075, column: 40, scope: !4633)
!4639 = !DILocation(line: 2075, column: 17, scope: !4633)
!4640 = !DILocation(line: 2075, column: 20, scope: !4633)
!4641 = !DILocation(line: 2075, column: 29, scope: !4633)
!4642 = !DILocation(line: 2075, column: 37, scope: !4633)
!4643 = !DILocation(line: 2076, column: 13, scope: !4633)
!4644 = !DILocation(line: 2077, column: 13, scope: !4599)
!4645 = !DILocation(line: 2079, column: 13, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4546, file: !805, line: 2079, column: 13)
!4647 = !DILocation(line: 2079, column: 17, scope: !4646)
!4648 = !DILocation(line: 2079, column: 23, scope: !4646)
!4649 = !DILocation(line: 2079, column: 27, scope: !4646)
!4650 = !DILocation(line: 2079, column: 33, scope: !4646)
!4651 = !DILocation(line: 2079, column: 43, scope: !4646)
!4652 = !DILocation(line: 2079, column: 46, scope: !4646)
!4653 = !DILocation(line: 2079, column: 52, scope: !4646)
!4654 = !DILocation(line: 2079, column: 13, scope: !4546)
!4655 = !DILocation(line: 2080, column: 31, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !805, line: 2080, column: 17)
!4657 = distinct !DILexicalBlock(scope: !4646, file: !805, line: 2079, column: 69)
!4658 = !DILocation(line: 2080, column: 18, scope: !4656)
!4659 = !DILocation(line: 2080, column: 17, scope: !4657)
!4660 = !DILocation(line: 2081, column: 30, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !805, line: 2081, column: 21)
!4662 = distinct !DILexicalBlock(scope: !4656, file: !805, line: 2080, column: 58)
!4663 = !DILocation(line: 2081, column: 38, scope: !4661)
!4664 = !DILocation(line: 2081, column: 21, scope: !4662)
!4665 = !DILocation(line: 2082, column: 29, scope: !4661)
!4666 = !DILocation(line: 2082, column: 21, scope: !4661)
!4667 = !DILocation(line: 2083, column: 32, scope: !4662)
!4668 = !DILocation(line: 2083, column: 17, scope: !4662)
!4669 = !DILocation(line: 2084, column: 17, scope: !4662)
!4670 = !DILocation(line: 2086, column: 13, scope: !4657)
!4671 = !DILocation(line: 2090, column: 22, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4546, file: !805, line: 2090, column: 13)
!4673 = !DILocation(line: 2090, column: 30, scope: !4672)
!4674 = !DILocation(line: 2090, column: 13, scope: !4546)
!4675 = !DILocation(line: 2091, column: 13, scope: !4672)
!4676 = !DILocation(line: 2093, column: 13, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4546, file: !805, line: 2093, column: 13)
!4678 = !DILocation(line: 2093, column: 16, scope: !4677)
!4679 = !DILocation(line: 2093, column: 13, scope: !4546)
!4680 = !DILocation(line: 2094, column: 28, scope: !4677)
!4681 = !DILocation(line: 2094, column: 13, scope: !4677)
!4682 = !DILocation(line: 2096, column: 28, scope: !4677)
!4683 = !DILocation(line: 2096, column: 13, scope: !4677)
!4684 = !DILocation(line: 2097, column: 9, scope: !4546)
!4685 = !DILocation(line: 2098, column: 5, scope: !4547)
!4686 = !DILocation(line: 2099, column: 9, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4547, file: !805, line: 2098, column: 12)
!4688 = !DILocation(line: 2101, column: 1, scope: !4542)
!4689 = distinct !DISubprogram(name: "process_command", scope: !805, file: !805, line: 1664, type: !4690, scopeLine: 1664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4692)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{null, !296, !195}
!4692 = !{!4693, !4694, !4695, !4704, !4705, !4706, !4716, !4717, !4720, !4723, !4724}
!4693 = !DILocalVariable(name: "c", arg: 1, scope: !4689, file: !805, line: 1664, type: !296)
!4694 = !DILocalVariable(name: "command", arg: 2, scope: !4689, file: !805, line: 1664, type: !195)
!4695 = !DILocalVariable(name: "tokens", scope: !4689, file: !805, line: 1666, type: !4696)
!4696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4697, size: 896, elements: !4702)
!4697 = !DIDerivedType(tag: DW_TAG_typedef, name: "token_t", file: !805, line: 922, baseType: !4698)
!4698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "token_s", file: !805, line: 919, size: 128, elements: !4699)
!4699 = !{!4700, !4701}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4698, file: !805, line: 920, baseType: !195, size: 64)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4698, file: !805, line: 921, baseType: !218, size: 64, offset: 64)
!4702 = !{!4703}
!4703 = !DISubrange(count: 7)
!4704 = !DILocalVariable(name: "ntokens", scope: !4689, file: !805, line: 1667, type: !218)
!4705 = !DILocalVariable(name: "comm", scope: !4689, file: !805, line: 1668, type: !47)
!4706 = !DILocalVariable(name: "bucket", scope: !4707, file: !805, line: 1725, type: !7)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !805, line: 1724, column: 81)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !805, line: 1724, column: 16)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !805, line: 1720, column: 16)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !805, line: 1716, column: 16)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !805, line: 1712, column: 16)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !805, line: 1708, column: 16)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !805, line: 1704, column: 16)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !805, line: 1695, column: 16)
!4715 = distinct !DILexicalBlock(scope: !4689, file: !805, line: 1689, column: 9)
!4716 = !DILocalVariable(name: "gen", scope: !4707, file: !805, line: 1725, type: !7)
!4717 = !DILocalVariable(name: "bucket", scope: !4718, file: !805, line: 1746, type: !47)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !805, line: 1744, column: 86)
!4719 = distinct !DILexicalBlock(scope: !4708, file: !805, line: 1744, column: 16)
!4720 = !DILocalVariable(name: "bucket", scope: !4721, file: !805, line: 1765, type: !47)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !805, line: 1764, column: 82)
!4722 = distinct !DILexicalBlock(scope: !4719, file: !805, line: 1764, column: 16)
!4723 = !DILocalVariable(name: "gen", scope: !4721, file: !805, line: 1765, type: !47)
!4724 = !DILocalVariable(name: "exptime", scope: !4725, file: !805, line: 1790, type: !900)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !805, line: 1789, column: 105)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !805, line: 1789, column: 16)
!4727 = distinct !DILexicalBlock(scope: !4722, file: !805, line: 1785, column: 16)
!4728 = !DILocation(line: 1664, column: 35, scope: !4689)
!4729 = !DILocation(line: 1664, column: 44, scope: !4689)
!4730 = !DILocation(line: 1666, column: 5, scope: !4689)
!4731 = !DILocation(line: 1666, column: 13, scope: !4689)
!4732 = !DILocation(line: 1667, column: 5, scope: !4689)
!4733 = !DILocation(line: 1667, column: 12, scope: !4689)
!4734 = !DILocation(line: 1668, column: 5, scope: !4689)
!4735 = !DILocation(line: 1668, column: 9, scope: !4689)
!4736 = !DILocation(line: 1670, column: 5, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !805, line: 1670, column: 5)
!4738 = distinct !DILexicalBlock(scope: !4689, file: !805, line: 1670, column: 5)
!4739 = !DILocation(line: 1670, column: 5, scope: !4738)
!4740 = !DILocation(line: 1672, column: 18, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4689, file: !805, line: 1672, column: 9)
!4742 = !DILocation(line: 1672, column: 26, scope: !4741)
!4743 = !DILocation(line: 1672, column: 9, scope: !4689)
!4744 = !DILocation(line: 1673, column: 17, scope: !4741)
!4745 = !DILocation(line: 1673, column: 53, scope: !4741)
!4746 = !DILocation(line: 1673, column: 56, scope: !4741)
!4747 = !DILocation(line: 1673, column: 61, scope: !4741)
!4748 = !DILocation(line: 1673, column: 9, scope: !4741)
!4749 = !DILocation(line: 1680, column: 5, scope: !4689)
!4750 = !DILocation(line: 1680, column: 8, scope: !4689)
!4751 = !DILocation(line: 1680, column: 16, scope: !4689)
!4752 = !DILocation(line: 1681, column: 5, scope: !4689)
!4753 = !DILocation(line: 1681, column: 8, scope: !4689)
!4754 = !DILocation(line: 1681, column: 16, scope: !4689)
!4755 = !DILocation(line: 1682, column: 5, scope: !4689)
!4756 = !DILocation(line: 1682, column: 8, scope: !4689)
!4757 = !DILocation(line: 1682, column: 16, scope: !4689)
!4758 = !DILocation(line: 1683, column: 20, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4689, file: !805, line: 1683, column: 9)
!4760 = !DILocation(line: 1683, column: 9, scope: !4759)
!4761 = !DILocation(line: 1683, column: 23, scope: !4759)
!4762 = !DILocation(line: 1683, column: 9, scope: !4689)
!4763 = !DILocation(line: 1684, column: 20, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4759, file: !805, line: 1683, column: 29)
!4765 = !DILocation(line: 1684, column: 9, scope: !4764)
!4766 = !DILocation(line: 1685, column: 9, scope: !4764)
!4767 = !DILocation(line: 1688, column: 32, scope: !4689)
!4768 = !DILocation(line: 1688, column: 41, scope: !4689)
!4769 = !DILocation(line: 1688, column: 15, scope: !4689)
!4770 = !DILocation(line: 1688, column: 13, scope: !4689)
!4771 = !DILocation(line: 1689, column: 9, scope: !4715)
!4772 = !DILocation(line: 1689, column: 17, scope: !4715)
!4773 = !DILocation(line: 1689, column: 22, scope: !4715)
!4774 = !DILocation(line: 1690, column: 18, scope: !4715)
!4775 = !DILocation(line: 1690, column: 40, scope: !4715)
!4776 = !{!4777, !965, i64 0}
!4777 = !{!"token_s", !965, i64 0, !915, i64 8}
!4778 = !DILocation(line: 1690, column: 11, scope: !4715)
!4779 = !DILocation(line: 1690, column: 54, scope: !4715)
!4780 = !DILocation(line: 1690, column: 60, scope: !4715)
!4781 = !DILocation(line: 1691, column: 18, scope: !4715)
!4782 = !DILocation(line: 1691, column: 40, scope: !4715)
!4783 = !DILocation(line: 1691, column: 11, scope: !4715)
!4784 = !DILocation(line: 1691, column: 55, scope: !4715)
!4785 = !DILocation(line: 1689, column: 9, scope: !4689)
!4786 = !DILocation(line: 1693, column: 29, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4715, file: !805, line: 1691, column: 63)
!4788 = !DILocation(line: 1693, column: 32, scope: !4787)
!4789 = !DILocation(line: 1693, column: 40, scope: !4787)
!4790 = !DILocation(line: 1693, column: 9, scope: !4787)
!4791 = !DILocation(line: 1695, column: 5, scope: !4787)
!4792 = !DILocation(line: 1695, column: 16, scope: !4714)
!4793 = !DILocation(line: 1695, column: 24, scope: !4714)
!4794 = !DILocation(line: 1695, column: 29, scope: !4714)
!4795 = !DILocation(line: 1696, column: 25, scope: !4714)
!4796 = !DILocation(line: 1696, column: 47, scope: !4714)
!4797 = !DILocation(line: 1696, column: 18, scope: !4714)
!4798 = !DILocation(line: 1696, column: 61, scope: !4714)
!4799 = !DILocation(line: 1696, column: 66, scope: !4714)
!4800 = !DILocation(line: 1696, column: 75, scope: !4714)
!4801 = !DILocation(line: 1696, column: 89, scope: !4714)
!4802 = !DILocation(line: 1697, column: 25, scope: !4714)
!4803 = !DILocation(line: 1697, column: 47, scope: !4714)
!4804 = !DILocation(line: 1697, column: 18, scope: !4714)
!4805 = !DILocation(line: 1697, column: 61, scope: !4714)
!4806 = !DILocation(line: 1697, column: 66, scope: !4714)
!4807 = !DILocation(line: 1697, column: 75, scope: !4714)
!4808 = !DILocation(line: 1697, column: 89, scope: !4714)
!4809 = !DILocation(line: 1698, column: 25, scope: !4714)
!4810 = !DILocation(line: 1698, column: 47, scope: !4714)
!4811 = !DILocation(line: 1698, column: 18, scope: !4714)
!4812 = !DILocation(line: 1698, column: 65, scope: !4714)
!4813 = !DILocation(line: 1698, column: 70, scope: !4714)
!4814 = !DILocation(line: 1698, column: 79, scope: !4714)
!4815 = !DILocation(line: 1698, column: 97, scope: !4714)
!4816 = !DILocation(line: 1699, column: 25, scope: !4714)
!4817 = !DILocation(line: 1699, column: 47, scope: !4714)
!4818 = !DILocation(line: 1699, column: 18, scope: !4714)
!4819 = !DILocation(line: 1699, column: 65, scope: !4714)
!4820 = !DILocation(line: 1699, column: 70, scope: !4714)
!4821 = !DILocation(line: 1699, column: 79, scope: !4714)
!4822 = !DILocation(line: 1699, column: 97, scope: !4714)
!4823 = !DILocation(line: 1700, column: 25, scope: !4714)
!4824 = !DILocation(line: 1700, column: 47, scope: !4714)
!4825 = !DILocation(line: 1700, column: 18, scope: !4714)
!4826 = !DILocation(line: 1700, column: 64, scope: !4714)
!4827 = !DILocation(line: 1700, column: 69, scope: !4714)
!4828 = !DILocation(line: 1700, column: 78, scope: !4714)
!4829 = !DILocation(line: 1695, column: 16, scope: !4715)
!4830 = !DILocation(line: 1702, column: 32, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4714, file: !805, line: 1700, column: 98)
!4832 = !DILocation(line: 1702, column: 35, scope: !4831)
!4833 = !DILocation(line: 1702, column: 43, scope: !4831)
!4834 = !DILocation(line: 1702, column: 52, scope: !4831)
!4835 = !DILocation(line: 1702, column: 9, scope: !4831)
!4836 = !DILocation(line: 1704, column: 5, scope: !4831)
!4837 = !DILocation(line: 1704, column: 16, scope: !4713)
!4838 = !DILocation(line: 1704, column: 24, scope: !4713)
!4839 = !DILocation(line: 1704, column: 29, scope: !4713)
!4840 = !DILocation(line: 1704, column: 40, scope: !4713)
!4841 = !DILocation(line: 1704, column: 62, scope: !4713)
!4842 = !DILocation(line: 1704, column: 33, scope: !4713)
!4843 = !DILocation(line: 1704, column: 76, scope: !4713)
!4844 = !DILocation(line: 1704, column: 81, scope: !4713)
!4845 = !DILocation(line: 1704, column: 90, scope: !4713)
!4846 = !DILocation(line: 1704, column: 16, scope: !4714)
!4847 = !DILocation(line: 1706, column: 32, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4713, file: !805, line: 1704, column: 105)
!4849 = !DILocation(line: 1706, column: 35, scope: !4848)
!4850 = !DILocation(line: 1706, column: 43, scope: !4848)
!4851 = !DILocation(line: 1706, column: 52, scope: !4848)
!4852 = !DILocation(line: 1706, column: 9, scope: !4848)
!4853 = !DILocation(line: 1708, column: 5, scope: !4848)
!4854 = !DILocation(line: 1708, column: 16, scope: !4712)
!4855 = !DILocation(line: 1708, column: 24, scope: !4712)
!4856 = !DILocation(line: 1708, column: 29, scope: !4712)
!4857 = !DILocation(line: 1708, column: 40, scope: !4712)
!4858 = !DILocation(line: 1708, column: 62, scope: !4712)
!4859 = !DILocation(line: 1708, column: 33, scope: !4712)
!4860 = !DILocation(line: 1708, column: 77, scope: !4712)
!4861 = !DILocation(line: 1708, column: 16, scope: !4713)
!4862 = !DILocation(line: 1710, column: 36, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4712, file: !805, line: 1708, column: 84)
!4864 = !DILocation(line: 1710, column: 39, scope: !4863)
!4865 = !DILocation(line: 1710, column: 47, scope: !4863)
!4866 = !DILocation(line: 1710, column: 9, scope: !4863)
!4867 = !DILocation(line: 1712, column: 5, scope: !4863)
!4868 = !DILocation(line: 1712, column: 16, scope: !4711)
!4869 = !DILocation(line: 1712, column: 24, scope: !4711)
!4870 = !DILocation(line: 1712, column: 29, scope: !4711)
!4871 = !DILocation(line: 1712, column: 40, scope: !4711)
!4872 = !DILocation(line: 1712, column: 62, scope: !4711)
!4873 = !DILocation(line: 1712, column: 33, scope: !4711)
!4874 = !DILocation(line: 1712, column: 77, scope: !4711)
!4875 = !DILocation(line: 1712, column: 16, scope: !4712)
!4876 = !DILocation(line: 1714, column: 29, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4711, file: !805, line: 1712, column: 84)
!4878 = !DILocation(line: 1714, column: 32, scope: !4877)
!4879 = !DILocation(line: 1714, column: 40, scope: !4877)
!4880 = !DILocation(line: 1714, column: 9, scope: !4877)
!4881 = !DILocation(line: 1716, column: 5, scope: !4877)
!4882 = !DILocation(line: 1716, column: 16, scope: !4710)
!4883 = !DILocation(line: 1716, column: 24, scope: !4710)
!4884 = !DILocation(line: 1716, column: 29, scope: !4710)
!4885 = !DILocation(line: 1716, column: 40, scope: !4710)
!4886 = !DILocation(line: 1716, column: 62, scope: !4710)
!4887 = !DILocation(line: 1716, column: 33, scope: !4710)
!4888 = !DILocation(line: 1716, column: 77, scope: !4710)
!4889 = !DILocation(line: 1716, column: 16, scope: !4711)
!4890 = !DILocation(line: 1718, column: 36, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4710, file: !805, line: 1716, column: 84)
!4892 = !DILocation(line: 1718, column: 39, scope: !4891)
!4893 = !DILocation(line: 1718, column: 47, scope: !4891)
!4894 = !DILocation(line: 1718, column: 9, scope: !4891)
!4895 = !DILocation(line: 1720, column: 5, scope: !4891)
!4896 = !DILocation(line: 1720, column: 16, scope: !4709)
!4897 = !DILocation(line: 1720, column: 24, scope: !4709)
!4898 = !DILocation(line: 1720, column: 29, scope: !4709)
!4899 = !DILocation(line: 1720, column: 32, scope: !4709)
!4900 = !DILocation(line: 1720, column: 40, scope: !4709)
!4901 = !DILocation(line: 1720, column: 45, scope: !4709)
!4902 = !DILocation(line: 1720, column: 56, scope: !4709)
!4903 = !DILocation(line: 1720, column: 78, scope: !4709)
!4904 = !DILocation(line: 1720, column: 49, scope: !4709)
!4905 = !DILocation(line: 1720, column: 95, scope: !4709)
!4906 = !DILocation(line: 1720, column: 16, scope: !4710)
!4907 = !DILocation(line: 1722, column: 32, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4709, file: !805, line: 1720, column: 102)
!4909 = !DILocation(line: 1722, column: 35, scope: !4908)
!4910 = !DILocation(line: 1722, column: 43, scope: !4908)
!4911 = !DILocation(line: 1722, column: 9, scope: !4908)
!4912 = !DILocation(line: 1724, column: 5, scope: !4908)
!4913 = !DILocation(line: 1724, column: 16, scope: !4708)
!4914 = !DILocation(line: 1724, column: 24, scope: !4708)
!4915 = !DILocation(line: 1724, column: 29, scope: !4708)
!4916 = !DILocation(line: 1724, column: 39, scope: !4708)
!4917 = !DILocation(line: 1724, column: 61, scope: !4708)
!4918 = !DILocation(line: 1724, column: 32, scope: !4708)
!4919 = !DILocation(line: 1724, column: 75, scope: !4708)
!4920 = !DILocation(line: 1724, column: 16, scope: !4709)
!4921 = !DILocation(line: 1725, column: 9, scope: !4707)
!4922 = !DILocation(line: 1725, column: 22, scope: !4707)
!4923 = !DILocation(line: 1725, column: 30, scope: !4707)
!4924 = !DILocation(line: 1726, column: 23, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4707, file: !805, line: 1726, column: 13)
!4926 = !DILocation(line: 1726, column: 13, scope: !4707)
!4927 = !DILocation(line: 1727, column: 24, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4925, file: !805, line: 1726, column: 32)
!4929 = !DILocation(line: 1727, column: 13, scope: !4928)
!4930 = !DILocation(line: 1728, column: 13, scope: !4928)
!4931 = !DILocation(line: 1731, column: 20, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4707, file: !805, line: 1731, column: 13)
!4933 = !DILocation(line: 1731, column: 30, scope: !4932)
!4934 = !DILocation(line: 1731, column: 13, scope: !4932)
!4935 = !DILocation(line: 1731, column: 60, scope: !4932)
!4936 = !DILocation(line: 1731, column: 13, scope: !4707)
!4937 = !DILocation(line: 1732, column: 18, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4939, file: !805, line: 1732, column: 17)
!4939 = distinct !DILexicalBlock(scope: !4932, file: !805, line: 1731, column: 66)
!4940 = !DILocation(line: 1732, column: 25, scope: !4938)
!4941 = !DILocation(line: 1732, column: 30, scope: !4938)
!4942 = !DILocation(line: 1732, column: 34, scope: !4938)
!4943 = !DILocation(line: 1732, column: 41, scope: !4938)
!4944 = !DILocation(line: 1732, column: 17, scope: !4939)
!4945 = !DILocation(line: 1733, column: 28, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4938, file: !805, line: 1732, column: 58)
!4947 = !DILocation(line: 1733, column: 17, scope: !4946)
!4948 = !DILocation(line: 1734, column: 17, scope: !4946)
!4949 = !DILocation(line: 1736, column: 31, scope: !4939)
!4950 = !DILocation(line: 1736, column: 13, scope: !4939)
!4951 = !DILocation(line: 1736, column: 21, scope: !4939)
!4952 = !DILocation(line: 1736, column: 29, scope: !4939)
!4953 = !DILocation(line: 1737, column: 24, scope: !4939)
!4954 = !DILocation(line: 1737, column: 13, scope: !4939)
!4955 = !DILocation(line: 1738, column: 13, scope: !4939)
!4956 = !DILocation(line: 1740, column: 24, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4932, file: !805, line: 1739, column: 16)
!4958 = !DILocation(line: 1740, column: 13, scope: !4957)
!4959 = !DILocation(line: 1741, column: 13, scope: !4957)
!4960 = !DILocation(line: 1744, column: 5, scope: !4708)
!4961 = !DILocation(line: 1744, column: 16, scope: !4719)
!4962 = !DILocation(line: 1744, column: 24, scope: !4719)
!4963 = !DILocation(line: 1744, column: 29, scope: !4719)
!4964 = !DILocation(line: 1744, column: 40, scope: !4719)
!4965 = !DILocation(line: 1744, column: 62, scope: !4719)
!4966 = !DILocation(line: 1744, column: 33, scope: !4719)
!4967 = !DILocation(line: 1744, column: 80, scope: !4719)
!4968 = !DILocation(line: 1744, column: 16, scope: !4708)
!4969 = !DILocation(line: 1746, column: 9, scope: !4718)
!4970 = !DILocation(line: 1746, column: 13, scope: !4718)
!4971 = !DILocation(line: 1747, column: 23, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4718, file: !805, line: 1747, column: 13)
!4973 = !DILocation(line: 1747, column: 13, scope: !4718)
!4974 = !DILocation(line: 1748, column: 24, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4972, file: !805, line: 1747, column: 32)
!4976 = !DILocation(line: 1748, column: 13, scope: !4975)
!4977 = !DILocation(line: 1749, column: 13, scope: !4975)
!4978 = !DILocation(line: 1751, column: 20, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4718, file: !805, line: 1751, column: 13)
!4980 = !DILocation(line: 1751, column: 30, scope: !4979)
!4981 = !DILocation(line: 1751, column: 13, scope: !4979)
!4982 = !DILocation(line: 1751, column: 52, scope: !4979)
!4983 = !DILocation(line: 1751, column: 13, scope: !4718)
!4984 = !DILocation(line: 1752, column: 18, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4986, file: !805, line: 1752, column: 17)
!4986 = distinct !DILexicalBlock(scope: !4979, file: !805, line: 1751, column: 58)
!4987 = !DILocation(line: 1752, column: 25, scope: !4985)
!4988 = !DILocation(line: 1752, column: 30, scope: !4985)
!4989 = !DILocation(line: 1752, column: 34, scope: !4985)
!4990 = !DILocation(line: 1752, column: 41, scope: !4985)
!4991 = !DILocation(line: 1752, column: 17, scope: !4986)
!4992 = !DILocation(line: 1753, column: 28, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4985, file: !805, line: 1752, column: 58)
!4994 = !DILocation(line: 1753, column: 17, scope: !4993)
!4995 = !DILocation(line: 1754, column: 17, scope: !4993)
!4996 = !DILocation(line: 1756, column: 13, scope: !4986)
!4997 = !DILocation(line: 1756, column: 21, scope: !4986)
!4998 = !DILocation(line: 1756, column: 29, scope: !4986)
!4999 = !DILocation(line: 1757, column: 24, scope: !4986)
!5000 = !DILocation(line: 1757, column: 13, scope: !4986)
!5001 = !DILocation(line: 1758, column: 13, scope: !4986)
!5002 = !DILocation(line: 1760, column: 24, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4979, file: !805, line: 1759, column: 16)
!5004 = !DILocation(line: 1760, column: 13, scope: !5003)
!5005 = !DILocation(line: 1761, column: 13, scope: !5003)
!5006 = !DILocation(line: 1764, column: 5, scope: !4719)
!5007 = !DILocation(line: 1764, column: 16, scope: !4722)
!5008 = !DILocation(line: 1764, column: 24, scope: !4722)
!5009 = !DILocation(line: 1764, column: 29, scope: !4722)
!5010 = !DILocation(line: 1764, column: 40, scope: !4722)
!5011 = !DILocation(line: 1764, column: 62, scope: !4722)
!5012 = !DILocation(line: 1764, column: 33, scope: !4722)
!5013 = !DILocation(line: 1764, column: 76, scope: !4722)
!5014 = !DILocation(line: 1764, column: 16, scope: !4719)
!5015 = !DILocation(line: 1765, column: 9, scope: !4721)
!5016 = !DILocation(line: 1765, column: 13, scope: !4721)
!5017 = !DILocation(line: 1765, column: 21, scope: !4721)
!5018 = !DILocation(line: 1766, column: 23, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4721, file: !805, line: 1766, column: 13)
!5020 = !DILocation(line: 1766, column: 13, scope: !4721)
!5021 = !DILocation(line: 1767, column: 24, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5019, file: !805, line: 1766, column: 32)
!5023 = !DILocation(line: 1767, column: 13, scope: !5022)
!5024 = !DILocation(line: 1768, column: 13, scope: !5022)
!5025 = !DILocation(line: 1770, column: 20, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4721, file: !805, line: 1770, column: 13)
!5027 = !DILocation(line: 1770, column: 30, scope: !5026)
!5028 = !DILocation(line: 1770, column: 13, scope: !5026)
!5029 = !DILocation(line: 1770, column: 61, scope: !5026)
!5030 = !DILocation(line: 1770, column: 13, scope: !4721)
!5031 = !DILocation(line: 1772, column: 18, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5033, file: !805, line: 1772, column: 17)
!5033 = distinct !DILexicalBlock(scope: !5026, file: !805, line: 1770, column: 67)
!5034 = !DILocation(line: 1772, column: 25, scope: !5032)
!5035 = !DILocation(line: 1772, column: 30, scope: !5032)
!5036 = !DILocation(line: 1772, column: 34, scope: !5032)
!5037 = !DILocation(line: 1772, column: 41, scope: !5032)
!5038 = !DILocation(line: 1772, column: 57, scope: !5032)
!5039 = !DILocation(line: 1772, column: 61, scope: !5032)
!5040 = !DILocation(line: 1772, column: 65, scope: !5032)
!5041 = !DILocation(line: 1772, column: 17, scope: !5033)
!5042 = !DILocation(line: 1774, column: 13, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5032, file: !805, line: 1772, column: 72)
!5044 = !DILocation(line: 1775, column: 29, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5032, file: !805, line: 1774, column: 20)
!5046 = !DILocation(line: 1775, column: 17, scope: !5045)
!5047 = !DILocation(line: 1775, column: 20, scope: !5045)
!5048 = !DILocation(line: 1775, column: 27, scope: !5045)
!5049 = !DILocation(line: 1776, column: 26, scope: !5045)
!5050 = !DILocation(line: 1776, column: 17, scope: !5045)
!5051 = !DILocation(line: 1776, column: 20, scope: !5045)
!5052 = !DILocation(line: 1776, column: 24, scope: !5045)
!5053 = !DILocation(line: 1778, column: 28, scope: !5033)
!5054 = !DILocation(line: 1778, column: 13, scope: !5033)
!5055 = !DILocation(line: 1779, column: 13, scope: !5033)
!5056 = !DILocation(line: 1781, column: 24, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5026, file: !805, line: 1780, column: 16)
!5058 = !DILocation(line: 1781, column: 13, scope: !5057)
!5059 = !DILocation(line: 1782, column: 13, scope: !5057)
!5060 = !DILocation(line: 1785, column: 5, scope: !4722)
!5061 = !DILocation(line: 1785, column: 16, scope: !4727)
!5062 = !DILocation(line: 1785, column: 24, scope: !4727)
!5063 = !DILocation(line: 1785, column: 29, scope: !4727)
!5064 = !DILocation(line: 1785, column: 40, scope: !4727)
!5065 = !DILocation(line: 1785, column: 62, scope: !4727)
!5066 = !DILocation(line: 1785, column: 33, scope: !4727)
!5067 = !DILocation(line: 1785, column: 78, scope: !4727)
!5068 = !DILocation(line: 1785, column: 16, scope: !4722)
!5069 = !DILocation(line: 1787, column: 22, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !4727, file: !805, line: 1785, column: 85)
!5071 = !DILocation(line: 1787, column: 25, scope: !5070)
!5072 = !DILocation(line: 1787, column: 33, scope: !5070)
!5073 = !DILocation(line: 1787, column: 9, scope: !5070)
!5074 = !DILocation(line: 1789, column: 5, scope: !5070)
!5075 = !DILocation(line: 1789, column: 16, scope: !4726)
!5076 = !DILocation(line: 1789, column: 24, scope: !4726)
!5077 = !DILocation(line: 1789, column: 29, scope: !4726)
!5078 = !DILocation(line: 1789, column: 32, scope: !4726)
!5079 = !DILocation(line: 1789, column: 40, scope: !4726)
!5080 = !DILocation(line: 1789, column: 45, scope: !4726)
!5081 = !DILocation(line: 1789, column: 56, scope: !4726)
!5082 = !DILocation(line: 1789, column: 78, scope: !4726)
!5083 = !DILocation(line: 1789, column: 49, scope: !4726)
!5084 = !DILocation(line: 1789, column: 98, scope: !4726)
!5085 = !DILocation(line: 1789, column: 16, scope: !4727)
!5086 = !DILocation(line: 1790, column: 9, scope: !4725)
!5087 = !DILocation(line: 1790, column: 16, scope: !4725)
!5088 = !DILocation(line: 1791, column: 9, scope: !4725)
!5089 = !DILocation(line: 1793, column: 12, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !4725, file: !805, line: 1793, column: 12)
!5091 = !DILocation(line: 1793, column: 20, scope: !5090)
!5092 = !DILocation(line: 1793, column: 12, scope: !4725)
!5093 = !DILocation(line: 1794, column: 36, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5090, file: !805, line: 1793, column: 26)
!5095 = !DILocation(line: 1794, column: 49, scope: !5094)
!5096 = !DILocation(line: 1794, column: 34, scope: !5094)
!5097 = !DILocation(line: 1795, column: 13, scope: !5094)
!5098 = !DILocation(line: 1796, column: 24, scope: !5094)
!5099 = !DILocation(line: 1796, column: 13, scope: !5094)
!5100 = !DILocation(line: 1797, column: 13, scope: !5094)
!5101 = !DILocation(line: 1800, column: 26, scope: !4725)
!5102 = !DILocation(line: 1800, column: 36, scope: !4725)
!5103 = !DILocation(line: 1800, column: 19, scope: !4725)
!5104 = !DILocation(line: 1800, column: 17, scope: !4725)
!5105 = !DILocation(line: 1801, column: 12, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !4725, file: !805, line: 1801, column: 12)
!5107 = !DILocation(line: 1801, column: 18, scope: !5106)
!5108 = !DILocation(line: 1801, column: 12, scope: !4725)
!5109 = !DILocation(line: 1802, column: 24, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5106, file: !805, line: 1801, column: 29)
!5111 = !DILocation(line: 1802, column: 13, scope: !5110)
!5112 = !DILocation(line: 1803, column: 13, scope: !5110)
!5113 = !DILocation(line: 1806, column: 41, scope: !4725)
!5114 = !DILocation(line: 1806, column: 32, scope: !4725)
!5115 = !DILocation(line: 1806, column: 50, scope: !4725)
!5116 = !DILocation(line: 1806, column: 30, scope: !4725)
!5117 = !DILocation(line: 1807, column: 9, scope: !4725)
!5118 = !DILocation(line: 1808, column: 20, scope: !4725)
!5119 = !DILocation(line: 1808, column: 9, scope: !4725)
!5120 = !DILocation(line: 1809, column: 9, scope: !4725)
!5121 = !DILocation(line: 1811, column: 5, scope: !4726)
!5122 = !DILocation(line: 1811, column: 16, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !4726, file: !805, line: 1811, column: 16)
!5124 = !DILocation(line: 1811, column: 24, scope: !5123)
!5125 = !DILocation(line: 1811, column: 29, scope: !5123)
!5126 = !DILocation(line: 1811, column: 40, scope: !5123)
!5127 = !DILocation(line: 1811, column: 62, scope: !5123)
!5128 = !DILocation(line: 1811, column: 33, scope: !5123)
!5129 = !DILocation(line: 1811, column: 80, scope: !5123)
!5130 = !DILocation(line: 1811, column: 16, scope: !4726)
!5131 = !DILocation(line: 1813, column: 20, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5123, file: !805, line: 1811, column: 87)
!5133 = !DILocation(line: 1813, column: 9, scope: !5132)
!5134 = !DILocation(line: 1815, column: 5, scope: !5132)
!5135 = !DILocation(line: 1815, column: 16, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5123, file: !805, line: 1815, column: 16)
!5137 = !DILocation(line: 1815, column: 24, scope: !5136)
!5138 = !DILocation(line: 1815, column: 29, scope: !5136)
!5139 = !DILocation(line: 1815, column: 40, scope: !5136)
!5140 = !DILocation(line: 1815, column: 62, scope: !5136)
!5141 = !DILocation(line: 1815, column: 33, scope: !5136)
!5142 = !DILocation(line: 1815, column: 77, scope: !5136)
!5143 = !DILocation(line: 1815, column: 16, scope: !5123)
!5144 = !DILocation(line: 1817, column: 24, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5136, file: !805, line: 1815, column: 84)
!5146 = !DILocation(line: 1817, column: 9, scope: !5145)
!5147 = !DILocation(line: 1819, column: 5, scope: !5145)
!5148 = !DILocation(line: 1819, column: 16, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5136, file: !805, line: 1819, column: 16)
!5150 = !DILocation(line: 1819, column: 24, scope: !5149)
!5151 = !DILocation(line: 1819, column: 29, scope: !5149)
!5152 = !DILocation(line: 1819, column: 40, scope: !5149)
!5153 = !DILocation(line: 1819, column: 62, scope: !5149)
!5154 = !DILocation(line: 1819, column: 33, scope: !5149)
!5155 = !DILocation(line: 1819, column: 78, scope: !5149)
!5156 = !DILocation(line: 1819, column: 83, scope: !5149)
!5157 = !DILocation(line: 1820, column: 40, scope: !5149)
!5158 = !DILocation(line: 1820, column: 66, scope: !5149)
!5159 = !DILocation(line: 1820, column: 33, scope: !5149)
!5160 = !DILocation(line: 1820, column: 85, scope: !5149)
!5161 = !DILocation(line: 1819, column: 16, scope: !5136)
!5162 = !DILocation(line: 1847, column: 20, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5149, file: !805, line: 1820, column: 92)
!5164 = !DILocation(line: 1847, column: 9, scope: !5163)
!5165 = !DILocation(line: 1849, column: 5, scope: !5163)
!5166 = !DILocation(line: 1849, column: 16, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5149, file: !805, line: 1849, column: 16)
!5168 = !DILocation(line: 1849, column: 24, scope: !5167)
!5169 = !DILocation(line: 1849, column: 29, scope: !5167)
!5170 = !DILocation(line: 1849, column: 40, scope: !5167)
!5171 = !DILocation(line: 1849, column: 62, scope: !5167)
!5172 = !DILocation(line: 1849, column: 33, scope: !5167)
!5173 = !DILocation(line: 1849, column: 82, scope: !5167)
!5174 = !DILocation(line: 1849, column: 16, scope: !5149)
!5175 = !DILocation(line: 1850, column: 35, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5167, file: !805, line: 1849, column: 89)
!5177 = !DILocation(line: 1850, column: 38, scope: !5176)
!5178 = !DILocation(line: 1850, column: 46, scope: !5176)
!5179 = !DILocation(line: 1850, column: 9, scope: !5176)
!5180 = !DILocation(line: 1851, column: 5, scope: !5176)
!5181 = !DILocation(line: 1852, column: 20, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5167, file: !805, line: 1851, column: 12)
!5183 = !DILocation(line: 1852, column: 9, scope: !5182)
!5184 = !DILocation(line: 1854, column: 5, scope: !4689)
!5185 = !DILocation(line: 1855, column: 1, scope: !4689)
!5186 = distinct !DISubprogram(name: "add_msghdr", scope: !805, file: !805, line: 216, type: !3853, scopeLine: 217, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5187)
!5187 = !{!5188, !5189}
!5188 = !DILocalVariable(name: "c", arg: 1, scope: !5186, file: !805, line: 216, type: !296)
!5189 = !DILocalVariable(name: "msg", scope: !5186, file: !805, line: 218, type: !224)
!5190 = !DILocation(line: 216, column: 29, scope: !5186)
!5191 = !DILocation(line: 218, column: 5, scope: !5186)
!5192 = !DILocation(line: 218, column: 20, scope: !5186)
!5193 = !DILocation(line: 220, column: 5, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5195, file: !805, line: 220, column: 5)
!5195 = distinct !DILexicalBlock(scope: !5186, file: !805, line: 220, column: 5)
!5196 = !DILocation(line: 220, column: 5, scope: !5195)
!5197 = !DILocation(line: 222, column: 9, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5186, file: !805, line: 222, column: 9)
!5199 = !DILocation(line: 222, column: 12, scope: !5198)
!5200 = !DILocation(line: 222, column: 23, scope: !5198)
!5201 = !DILocation(line: 222, column: 26, scope: !5198)
!5202 = !DILocation(line: 222, column: 20, scope: !5198)
!5203 = !DILocation(line: 222, column: 9, scope: !5186)
!5204 = !DILocation(line: 223, column: 23, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5198, file: !805, line: 222, column: 35)
!5206 = !DILocation(line: 223, column: 26, scope: !5205)
!5207 = !DILocation(line: 223, column: 35, scope: !5205)
!5208 = !DILocation(line: 223, column: 38, scope: !5205)
!5209 = !DILocation(line: 223, column: 46, scope: !5205)
!5210 = !DILocation(line: 223, column: 50, scope: !5205)
!5211 = !DILocation(line: 223, column: 15, scope: !5205)
!5212 = !DILocation(line: 223, column: 13, scope: !5205)
!5213 = !DILocation(line: 224, column: 15, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5205, file: !805, line: 224, column: 13)
!5215 = !DILocation(line: 224, column: 13, scope: !5205)
!5216 = !DILocation(line: 225, column: 13, scope: !5214)
!5217 = !DILocation(line: 226, column: 22, scope: !5205)
!5218 = !DILocation(line: 226, column: 9, scope: !5205)
!5219 = !DILocation(line: 226, column: 12, scope: !5205)
!5220 = !DILocation(line: 226, column: 20, scope: !5205)
!5221 = !DILocation(line: 227, column: 9, scope: !5205)
!5222 = !DILocation(line: 227, column: 12, scope: !5205)
!5223 = !DILocation(line: 227, column: 20, scope: !5205)
!5224 = !DILocation(line: 228, column: 5, scope: !5205)
!5225 = !DILocation(line: 230, column: 11, scope: !5186)
!5226 = !DILocation(line: 230, column: 14, scope: !5186)
!5227 = !DILocation(line: 230, column: 24, scope: !5186)
!5228 = !DILocation(line: 230, column: 27, scope: !5186)
!5229 = !DILocation(line: 230, column: 22, scope: !5186)
!5230 = !DILocation(line: 230, column: 9, scope: !5186)
!5231 = !DILocation(line: 234, column: 12, scope: !5186)
!5232 = !DILocation(line: 234, column: 5, scope: !5186)
!5233 = !DILocation(line: 236, column: 21, scope: !5186)
!5234 = !DILocation(line: 236, column: 24, scope: !5186)
!5235 = !DILocation(line: 236, column: 28, scope: !5186)
!5236 = !DILocation(line: 236, column: 31, scope: !5186)
!5237 = !DILocation(line: 236, column: 5, scope: !5186)
!5238 = !DILocation(line: 236, column: 10, scope: !5186)
!5239 = !DILocation(line: 236, column: 18, scope: !5186)
!5240 = !DILocation(line: 238, column: 9, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5186, file: !805, line: 238, column: 9)
!5242 = !DILocation(line: 238, column: 12, scope: !5241)
!5243 = !DILocation(line: 238, column: 30, scope: !5241)
!5244 = !DILocation(line: 238, column: 9, scope: !5186)
!5245 = !DILocation(line: 239, column: 26, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5241, file: !805, line: 238, column: 35)
!5247 = !DILocation(line: 239, column: 29, scope: !5246)
!5248 = !DILocation(line: 239, column: 25, scope: !5246)
!5249 = !DILocation(line: 239, column: 9, scope: !5246)
!5250 = !DILocation(line: 239, column: 14, scope: !5246)
!5251 = !DILocation(line: 239, column: 23, scope: !5246)
!5252 = !{!4319, !965, i64 0}
!5253 = !DILocation(line: 240, column: 28, scope: !5246)
!5254 = !DILocation(line: 240, column: 31, scope: !5246)
!5255 = !DILocation(line: 240, column: 9, scope: !5246)
!5256 = !DILocation(line: 240, column: 14, scope: !5246)
!5257 = !DILocation(line: 240, column: 26, scope: !5246)
!5258 = !{!4319, !934, i64 8}
!5259 = !DILocation(line: 241, column: 5, scope: !5246)
!5260 = !DILocation(line: 243, column: 5, scope: !5186)
!5261 = !DILocation(line: 243, column: 8, scope: !5186)
!5262 = !DILocation(line: 243, column: 17, scope: !5186)
!5263 = !DILocation(line: 244, column: 5, scope: !5186)
!5264 = !DILocation(line: 244, column: 8, scope: !5186)
!5265 = !DILocation(line: 244, column: 15, scope: !5186)
!5266 = !DILocation(line: 246, column: 9, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5186, file: !805, line: 246, column: 9)
!5268 = !DILocation(line: 246, column: 12, scope: !5267)
!5269 = !DILocation(line: 246, column: 9, scope: !5186)
!5270 = !DILocation(line: 248, column: 24, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5267, file: !805, line: 246, column: 17)
!5272 = !DILocation(line: 248, column: 16, scope: !5271)
!5273 = !DILocation(line: 248, column: 9, scope: !5271)
!5274 = !DILocation(line: 251, column: 5, scope: !5186)
!5275 = !DILocation(line: 252, column: 1, scope: !5186)
!5276 = distinct !DISubprogram(name: "out_string", scope: !805, file: !805, line: 749, type: !5277, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5279)
!5277 = !DISubroutineType(types: !5278)
!5278 = !{null, !296, !302}
!5279 = !{!5280, !5281, !5282}
!5280 = !DILocalVariable(name: "c", arg: 1, scope: !5276, file: !805, line: 749, type: !296)
!5281 = !DILocalVariable(name: "str", arg: 2, scope: !5276, file: !805, line: 749, type: !302)
!5282 = !DILocalVariable(name: "len", scope: !5276, file: !805, line: 750, type: !218)
!5283 = !DILocation(line: 749, column: 30, scope: !5276)
!5284 = !DILocation(line: 749, column: 45, scope: !5276)
!5285 = !DILocation(line: 750, column: 5, scope: !5276)
!5286 = !DILocation(line: 750, column: 12, scope: !5276)
!5287 = !DILocation(line: 752, column: 5, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5289, file: !805, line: 752, column: 5)
!5289 = distinct !DILexicalBlock(scope: !5276, file: !805, line: 752, column: 5)
!5290 = !DILocation(line: 752, column: 5, scope: !5289)
!5291 = !DILocation(line: 754, column: 18, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5276, file: !805, line: 754, column: 9)
!5293 = !DILocation(line: 754, column: 26, scope: !5292)
!5294 = !DILocation(line: 754, column: 9, scope: !5276)
!5295 = !DILocation(line: 755, column: 17, scope: !5292)
!5296 = !DILocation(line: 755, column: 48, scope: !5292)
!5297 = !DILocation(line: 755, column: 51, scope: !5292)
!5298 = !DILocation(line: 755, column: 56, scope: !5292)
!5299 = !DILocation(line: 755, column: 9, scope: !5292)
!5300 = !DILocation(line: 757, column: 18, scope: !5276)
!5301 = !DILocation(line: 757, column: 11, scope: !5276)
!5302 = !DILocation(line: 757, column: 9, scope: !5276)
!5303 = !DILocation(line: 758, column: 10, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5276, file: !805, line: 758, column: 9)
!5305 = !DILocation(line: 758, column: 14, scope: !5304)
!5306 = !DILocation(line: 758, column: 21, scope: !5304)
!5307 = !DILocation(line: 758, column: 24, scope: !5304)
!5308 = !DILocation(line: 758, column: 19, scope: !5304)
!5309 = !DILocation(line: 758, column: 9, scope: !5276)
!5310 = !DILocation(line: 760, column: 13, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5304, file: !805, line: 758, column: 31)
!5312 = !DILocation(line: 761, column: 22, scope: !5311)
!5313 = !DILocation(line: 761, column: 15, scope: !5311)
!5314 = !DILocation(line: 761, column: 13, scope: !5311)
!5315 = !DILocation(line: 762, column: 5, scope: !5311)
!5316 = !DILocation(line: 764, column: 12, scope: !5276)
!5317 = !DILocation(line: 764, column: 15, scope: !5276)
!5318 = !DILocation(line: 764, column: 21, scope: !5276)
!5319 = !DILocation(line: 764, column: 26, scope: !5276)
!5320 = !DILocation(line: 764, column: 5, scope: !5276)
!5321 = !DILocation(line: 765, column: 12, scope: !5276)
!5322 = !DILocation(line: 765, column: 15, scope: !5276)
!5323 = !DILocation(line: 765, column: 22, scope: !5276)
!5324 = !DILocation(line: 765, column: 20, scope: !5276)
!5325 = !DILocation(line: 765, column: 5, scope: !5276)
!5326 = !DILocation(line: 766, column: 17, scope: !5276)
!5327 = !DILocation(line: 766, column: 21, scope: !5276)
!5328 = !DILocation(line: 766, column: 5, scope: !5276)
!5329 = !DILocation(line: 766, column: 8, scope: !5276)
!5330 = !DILocation(line: 766, column: 15, scope: !5276)
!5331 = !DILocation(line: 767, column: 16, scope: !5276)
!5332 = !DILocation(line: 767, column: 19, scope: !5276)
!5333 = !DILocation(line: 767, column: 5, scope: !5276)
!5334 = !DILocation(line: 767, column: 8, scope: !5276)
!5335 = !DILocation(line: 767, column: 14, scope: !5276)
!5336 = !DILocation(line: 769, column: 20, scope: !5276)
!5337 = !DILocation(line: 769, column: 5, scope: !5276)
!5338 = !DILocation(line: 770, column: 5, scope: !5276)
!5339 = !DILocation(line: 770, column: 8, scope: !5276)
!5340 = !DILocation(line: 770, column: 21, scope: !5276)
!5341 = !DILocation(line: 772, column: 1, scope: !5276)
!5342 = distinct !DISubprogram(name: "tokenize_command", scope: !805, file: !805, line: 948, type: !5343, scopeLine: 948, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5347)
!5343 = !DISubroutineType(types: !5344)
!5344 = !{!218, !195, !5345, !5346}
!5345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!5346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !218)
!5347 = !{!5348, !5349, !5350, !5351, !5352, !5353}
!5348 = !DILocalVariable(name: "command", arg: 1, scope: !5342, file: !805, line: 948, type: !195)
!5349 = !DILocalVariable(name: "tokens", arg: 2, scope: !5342, file: !805, line: 948, type: !5345)
!5350 = !DILocalVariable(name: "max_tokens", arg: 3, scope: !5342, file: !805, line: 948, type: !5346)
!5351 = !DILocalVariable(name: "s", scope: !5342, file: !805, line: 949, type: !195)
!5352 = !DILocalVariable(name: "e", scope: !5342, file: !805, line: 949, type: !195)
!5353 = !DILocalVariable(name: "ntokens", scope: !5342, file: !805, line: 950, type: !218)
!5354 = !DILocation(line: 948, column: 38, scope: !5342)
!5355 = !DILocation(line: 948, column: 56, scope: !5342)
!5356 = !DILocation(line: 948, column: 77, scope: !5342)
!5357 = !DILocation(line: 949, column: 5, scope: !5342)
!5358 = !DILocation(line: 949, column: 11, scope: !5342)
!5359 = !DILocation(line: 949, column: 15, scope: !5342)
!5360 = !DILocation(line: 950, column: 5, scope: !5342)
!5361 = !DILocation(line: 950, column: 12, scope: !5342)
!5362 = !DILocation(line: 952, column: 5, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5364, file: !805, line: 952, column: 5)
!5364 = distinct !DILexicalBlock(scope: !5342, file: !805, line: 952, column: 5)
!5365 = !DILocation(line: 952, column: 5, scope: !5364)
!5366 = !DILocation(line: 954, column: 18, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5342, file: !805, line: 954, column: 5)
!5368 = !DILocation(line: 954, column: 16, scope: !5367)
!5369 = !DILocation(line: 954, column: 12, scope: !5367)
!5370 = !DILocation(line: 954, column: 10, scope: !5367)
!5371 = !DILocation(line: 954, column: 27, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5367, file: !805, line: 954, column: 5)
!5373 = !DILocation(line: 954, column: 37, scope: !5372)
!5374 = !DILocation(line: 954, column: 48, scope: !5372)
!5375 = !DILocation(line: 954, column: 35, scope: !5372)
!5376 = !DILocation(line: 954, column: 5, scope: !5367)
!5377 = !DILocation(line: 955, column: 14, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5379, file: !805, line: 955, column: 13)
!5379 = distinct !DILexicalBlock(scope: !5372, file: !805, line: 954, column: 58)
!5380 = !DILocation(line: 955, column: 13, scope: !5378)
!5381 = !DILocation(line: 955, column: 16, scope: !5378)
!5382 = !DILocation(line: 955, column: 13, scope: !5379)
!5383 = !DILocation(line: 956, column: 17, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5385, file: !805, line: 956, column: 17)
!5385 = distinct !DILexicalBlock(scope: !5378, file: !805, line: 955, column: 24)
!5386 = !DILocation(line: 956, column: 22, scope: !5384)
!5387 = !DILocation(line: 956, column: 19, scope: !5384)
!5388 = !DILocation(line: 956, column: 17, scope: !5385)
!5389 = !DILocation(line: 957, column: 41, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5384, file: !805, line: 956, column: 25)
!5391 = !DILocation(line: 957, column: 17, scope: !5390)
!5392 = !DILocation(line: 957, column: 24, scope: !5390)
!5393 = !DILocation(line: 957, column: 33, scope: !5390)
!5394 = !DILocation(line: 957, column: 39, scope: !5390)
!5395 = !DILocation(line: 958, column: 42, scope: !5390)
!5396 = !DILocation(line: 958, column: 46, scope: !5390)
!5397 = !DILocation(line: 958, column: 44, scope: !5390)
!5398 = !DILocation(line: 958, column: 17, scope: !5390)
!5399 = !DILocation(line: 958, column: 24, scope: !5390)
!5400 = !DILocation(line: 958, column: 33, scope: !5390)
!5401 = !DILocation(line: 958, column: 40, scope: !5390)
!5402 = !{!4777, !915, i64 8}
!5403 = !DILocation(line: 959, column: 24, scope: !5390)
!5404 = !DILocation(line: 960, column: 18, scope: !5390)
!5405 = !DILocation(line: 960, column: 20, scope: !5390)
!5406 = !DILocation(line: 961, column: 13, scope: !5390)
!5407 = !DILocation(line: 962, column: 17, scope: !5385)
!5408 = !DILocation(line: 962, column: 19, scope: !5385)
!5409 = !DILocation(line: 962, column: 15, scope: !5385)
!5410 = !DILocation(line: 963, column: 9, scope: !5385)
!5411 = !DILocation(line: 964, column: 19, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5378, file: !805, line: 964, column: 18)
!5413 = !DILocation(line: 964, column: 18, scope: !5412)
!5414 = !DILocation(line: 964, column: 21, scope: !5412)
!5415 = !DILocation(line: 964, column: 18, scope: !5378)
!5416 = !DILocation(line: 965, column: 17, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5418, file: !805, line: 965, column: 17)
!5418 = distinct !DILexicalBlock(scope: !5412, file: !805, line: 964, column: 30)
!5419 = !DILocation(line: 965, column: 22, scope: !5417)
!5420 = !DILocation(line: 965, column: 19, scope: !5417)
!5421 = !DILocation(line: 965, column: 17, scope: !5418)
!5422 = !DILocation(line: 966, column: 41, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5417, file: !805, line: 965, column: 25)
!5424 = !DILocation(line: 966, column: 17, scope: !5423)
!5425 = !DILocation(line: 966, column: 24, scope: !5423)
!5426 = !DILocation(line: 966, column: 33, scope: !5423)
!5427 = !DILocation(line: 966, column: 39, scope: !5423)
!5428 = !DILocation(line: 967, column: 42, scope: !5423)
!5429 = !DILocation(line: 967, column: 46, scope: !5423)
!5430 = !DILocation(line: 967, column: 44, scope: !5423)
!5431 = !DILocation(line: 967, column: 17, scope: !5423)
!5432 = !DILocation(line: 967, column: 24, scope: !5423)
!5433 = !DILocation(line: 967, column: 33, scope: !5423)
!5434 = !DILocation(line: 967, column: 40, scope: !5423)
!5435 = !DILocation(line: 968, column: 24, scope: !5423)
!5436 = !DILocation(line: 969, column: 13, scope: !5423)
!5437 = !DILocation(line: 971, column: 13, scope: !5418)
!5438 = !DILocation(line: 973, column: 5, scope: !5379)
!5439 = !DILocation(line: 954, column: 53, scope: !5372)
!5440 = !DILocation(line: 954, column: 5, scope: !5372)
!5441 = distinct !{!5441, !5376, !5442}
!5442 = !DILocation(line: 973, column: 5, scope: !5367)
!5443 = !DILocation(line: 979, column: 31, scope: !5342)
!5444 = !DILocation(line: 979, column: 30, scope: !5342)
!5445 = !DILocation(line: 979, column: 33, scope: !5342)
!5446 = !DILocation(line: 979, column: 50, scope: !5342)
!5447 = !DILocation(line: 979, column: 5, scope: !5342)
!5448 = !DILocation(line: 979, column: 12, scope: !5342)
!5449 = !DILocation(line: 979, column: 21, scope: !5342)
!5450 = !DILocation(line: 979, column: 27, scope: !5342)
!5451 = !DILocation(line: 980, column: 5, scope: !5342)
!5452 = !DILocation(line: 980, column: 12, scope: !5342)
!5453 = !DILocation(line: 980, column: 21, scope: !5342)
!5454 = !DILocation(line: 980, column: 28, scope: !5342)
!5455 = !DILocation(line: 981, column: 12, scope: !5342)
!5456 = !DILocation(line: 983, column: 12, scope: !5342)
!5457 = !DILocation(line: 984, column: 1, scope: !5342)
!5458 = !DILocation(line: 983, column: 5, scope: !5342)
!5459 = distinct !DISubprogram(name: "process_get_command", scope: !805, file: !805, line: 1208, type: !5460, scopeLine: 1208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5462)
!5460 = !DISubroutineType(types: !5461)
!5461 = !{null, !296, !5345, !218, !276}
!5462 = !{!5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473, !5474, !5475, !5476, !5479, !5486}
!5463 = !DILocalVariable(name: "c", arg: 1, scope: !5459, file: !805, line: 1208, type: !296)
!5464 = !DILocalVariable(name: "tokens", arg: 2, scope: !5459, file: !805, line: 1208, type: !5345)
!5465 = !DILocalVariable(name: "ntokens", arg: 3, scope: !5459, file: !805, line: 1208, type: !218)
!5466 = !DILocalVariable(name: "return_cas", arg: 4, scope: !5459, file: !805, line: 1208, type: !276)
!5467 = !DILocalVariable(name: "key", scope: !5459, file: !805, line: 1209, type: !195)
!5468 = !DILocalVariable(name: "nkey", scope: !5459, file: !805, line: 1210, type: !218)
!5469 = !DILocalVariable(name: "i", scope: !5459, file: !805, line: 1211, type: !47)
!5470 = !DILocalVariable(name: "it", scope: !5459, file: !805, line: 1212, type: !243)
!5471 = !DILocalVariable(name: "key_token", scope: !5459, file: !805, line: 1213, type: !5345)
!5472 = !DILocalVariable(name: "suffix", scope: !5459, file: !805, line: 1214, type: !195)
!5473 = !DILocalVariable(name: "stats_get_cmds", scope: !5459, file: !805, line: 1215, type: !47)
!5474 = !DILocalVariable(name: "stats_get_hits", scope: !5459, file: !805, line: 1216, type: !47)
!5475 = !DILocalVariable(name: "stats_get_misses", scope: !5459, file: !805, line: 1217, type: !47)
!5476 = !DILocalVariable(name: "bucket", scope: !5477, file: !805, line: 1221, type: !47)
!5477 = distinct !DILexicalBlock(scope: !5478, file: !805, line: 1220, column: 27)
!5478 = distinct !DILexicalBlock(scope: !5459, file: !805, line: 1220, column: 9)
!5479 = !DILocalVariable(name: "new_list", scope: !5480, file: !805, line: 1258, type: !242)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !805, line: 1257, column: 36)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !805, line: 1257, column: 21)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !805, line: 1256, column: 21)
!5483 = distinct !DILexicalBlock(scope: !5484, file: !805, line: 1256, column: 17)
!5484 = distinct !DILexicalBlock(scope: !5485, file: !805, line: 1234, column: 39)
!5485 = distinct !DILexicalBlock(scope: !5459, file: !805, line: 1233, column: 8)
!5486 = !DILocalVariable(name: "new_suffix_list", scope: !5487, file: !805, line: 1277, type: !271)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !805, line: 1276, column: 43)
!5488 = distinct !DILexicalBlock(scope: !5489, file: !805, line: 1276, column: 23)
!5489 = distinct !DILexicalBlock(scope: !5490, file: !805, line: 1274, column: 17)
!5490 = distinct !DILexicalBlock(scope: !5482, file: !805, line: 1273, column: 20)
!5491 = !DILocation(line: 1208, column: 46, scope: !5459)
!5492 = !DILocation(line: 1208, column: 58, scope: !5459)
!5493 = !DILocation(line: 1208, column: 73, scope: !5459)
!5494 = !DILocation(line: 1208, column: 87, scope: !5459)
!5495 = !DILocation(line: 1209, column: 5, scope: !5459)
!5496 = !DILocation(line: 1209, column: 11, scope: !5459)
!5497 = !DILocation(line: 1210, column: 5, scope: !5459)
!5498 = !DILocation(line: 1210, column: 12, scope: !5459)
!5499 = !DILocation(line: 1211, column: 5, scope: !5459)
!5500 = !DILocation(line: 1211, column: 9, scope: !5459)
!5501 = !DILocation(line: 1212, column: 5, scope: !5459)
!5502 = !DILocation(line: 1212, column: 11, scope: !5459)
!5503 = !DILocation(line: 1213, column: 5, scope: !5459)
!5504 = !DILocation(line: 1213, column: 14, scope: !5459)
!5505 = !DILocation(line: 1213, column: 27, scope: !5459)
!5506 = !DILocation(line: 1214, column: 5, scope: !5459)
!5507 = !DILocation(line: 1214, column: 11, scope: !5459)
!5508 = !DILocation(line: 1215, column: 5, scope: !5459)
!5509 = !DILocation(line: 1215, column: 9, scope: !5459)
!5510 = !DILocation(line: 1216, column: 5, scope: !5459)
!5511 = !DILocation(line: 1216, column: 9, scope: !5459)
!5512 = !DILocation(line: 1217, column: 5, scope: !5459)
!5513 = !DILocation(line: 1217, column: 9, scope: !5459)
!5514 = !DILocation(line: 1218, column: 5, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5516, file: !805, line: 1218, column: 5)
!5516 = distinct !DILexicalBlock(scope: !5459, file: !805, line: 1218, column: 5)
!5517 = !DILocation(line: 1218, column: 5, scope: !5516)
!5518 = !DILocation(line: 1220, column: 18, scope: !5478)
!5519 = !DILocation(line: 1220, column: 9, scope: !5459)
!5520 = !DILocation(line: 1221, column: 9, scope: !5477)
!5521 = !DILocation(line: 1221, column: 13, scope: !5477)
!5522 = !DILocation(line: 1221, column: 22, scope: !5477)
!5523 = !DILocation(line: 1221, column: 25, scope: !5477)
!5524 = !DILocation(line: 1222, column: 13, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5477, file: !805, line: 1222, column: 13)
!5526 = !DILocation(line: 1222, column: 20, scope: !5525)
!5527 = !DILocation(line: 1222, column: 13, scope: !5477)
!5528 = !DILocation(line: 1223, column: 24, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5525, file: !805, line: 1222, column: 27)
!5530 = !DILocation(line: 1223, column: 13, scope: !5529)
!5531 = !DILocation(line: 1224, column: 13, scope: !5529)
!5532 = !DILocation(line: 1226, column: 9, scope: !5477)
!5533 = !DILocation(line: 1226, column: 12, scope: !5477)
!5534 = !DILocation(line: 1226, column: 19, scope: !5477)
!5535 = !DILocation(line: 1227, column: 13, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5477, file: !805, line: 1227, column: 13)
!5537 = !DILocation(line: 1227, column: 21, scope: !5536)
!5538 = !DILocation(line: 1227, column: 32, scope: !5536)
!5539 = !DILocation(line: 1227, column: 35, scope: !5536)
!5540 = !DILocation(line: 1227, column: 29, scope: !5536)
!5541 = !DILocation(line: 1227, column: 13, scope: !5477)
!5542 = !DILocation(line: 1228, column: 24, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5536, file: !805, line: 1227, column: 40)
!5544 = !DILocation(line: 1228, column: 13, scope: !5543)
!5545 = !DILocation(line: 1229, column: 13, scope: !5543)
!5546 = !DILocation(line: 1231, column: 5, scope: !5478)
!5547 = !DILocation(line: 1231, column: 5, scope: !5477)
!5548 = !DILocation(line: 1233, column: 5, scope: !5459)
!5549 = !DILocation(line: 1234, column: 9, scope: !5485)
!5550 = !DILocation(line: 1234, column: 15, scope: !5485)
!5551 = !DILocation(line: 1234, column: 26, scope: !5485)
!5552 = !DILocation(line: 1234, column: 33, scope: !5485)
!5553 = !DILocation(line: 1236, column: 19, scope: !5484)
!5554 = !DILocation(line: 1236, column: 30, scope: !5484)
!5555 = !DILocation(line: 1236, column: 17, scope: !5484)
!5556 = !DILocation(line: 1237, column: 20, scope: !5484)
!5557 = !DILocation(line: 1237, column: 31, scope: !5484)
!5558 = !DILocation(line: 1237, column: 18, scope: !5484)
!5559 = !DILocation(line: 1239, column: 16, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5484, file: !805, line: 1239, column: 16)
!5561 = !DILocation(line: 1239, column: 21, scope: !5560)
!5562 = !DILocation(line: 1239, column: 16, scope: !5484)
!5563 = !DILocation(line: 1240, column: 17, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5560, file: !805, line: 1239, column: 39)
!5565 = !DILocation(line: 1241, column: 38, scope: !5564)
!5566 = !DILocation(line: 1241, column: 35, scope: !5564)
!5567 = !{!933, !915, i64 32}
!5568 = !DILocation(line: 1242, column: 38, scope: !5564)
!5569 = !DILocation(line: 1242, column: 35, scope: !5564)
!5570 = !{!933, !915, i64 48}
!5571 = !DILocation(line: 1243, column: 38, scope: !5564)
!5572 = !DILocation(line: 1243, column: 35, scope: !5564)
!5573 = !{!933, !915, i64 56}
!5574 = !DILocation(line: 1244, column: 17, scope: !5564)
!5575 = !DILocation(line: 1245, column: 28, scope: !5564)
!5576 = !DILocation(line: 1245, column: 17, scope: !5564)
!5577 = !DILocation(line: 1246, column: 17, scope: !5564)
!5578 = !DILocation(line: 1249, column: 27, scope: !5484)
!5579 = !DILocation(line: 1250, column: 27, scope: !5484)
!5580 = !DILocation(line: 1250, column: 32, scope: !5484)
!5581 = !DILocation(line: 1250, column: 18, scope: !5484)
!5582 = !DILocation(line: 1250, column: 16, scope: !5484)
!5583 = !DILocation(line: 1256, column: 17, scope: !5483)
!5584 = !DILocation(line: 1256, column: 17, scope: !5484)
!5585 = !DILocation(line: 1257, column: 21, scope: !5481)
!5586 = !DILocation(line: 1257, column: 26, scope: !5481)
!5587 = !DILocation(line: 1257, column: 29, scope: !5481)
!5588 = !DILocation(line: 1257, column: 23, scope: !5481)
!5589 = !DILocation(line: 1257, column: 21, scope: !5482)
!5590 = !DILocation(line: 1258, column: 21, scope: !5480)
!5591 = !DILocation(line: 1258, column: 28, scope: !5480)
!5592 = !DILocation(line: 1258, column: 47, scope: !5480)
!5593 = !DILocation(line: 1258, column: 50, scope: !5480)
!5594 = !DILocation(line: 1258, column: 74, scope: !5480)
!5595 = !DILocation(line: 1258, column: 77, scope: !5480)
!5596 = !DILocation(line: 1258, column: 72, scope: !5480)
!5597 = !DILocation(line: 1258, column: 83, scope: !5480)
!5598 = !DILocation(line: 1258, column: 39, scope: !5480)
!5599 = !DILocation(line: 1259, column: 25, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5480, file: !805, line: 1259, column: 25)
!5601 = !DILocation(line: 1259, column: 25, scope: !5480)
!5602 = !DILocation(line: 1260, column: 25, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5600, file: !805, line: 1259, column: 35)
!5604 = !DILocation(line: 1260, column: 28, scope: !5603)
!5605 = !DILocation(line: 1260, column: 34, scope: !5603)
!5606 = !DILocation(line: 1261, column: 36, scope: !5603)
!5607 = !DILocation(line: 1261, column: 25, scope: !5603)
!5608 = !DILocation(line: 1261, column: 28, scope: !5603)
!5609 = !DILocation(line: 1261, column: 34, scope: !5603)
!5610 = !DILocation(line: 1262, column: 21, scope: !5603)
!5611 = !DILocation(line: 1262, column: 28, scope: !5600)
!5612 = !DILocation(line: 1263, column: 17, scope: !5481)
!5613 = !DILocation(line: 1263, column: 17, scope: !5480)
!5614 = !DILocation(line: 1273, column: 20, scope: !5490)
!5615 = !DILocation(line: 1273, column: 31, scope: !5490)
!5616 = !DILocation(line: 1273, column: 20, scope: !5482)
!5617 = !DILocation(line: 1276, column: 23, scope: !5488)
!5618 = !DILocation(line: 1276, column: 28, scope: !5488)
!5619 = !DILocation(line: 1276, column: 31, scope: !5488)
!5620 = !DILocation(line: 1276, column: 25, scope: !5488)
!5621 = !DILocation(line: 1276, column: 23, scope: !5489)
!5622 = !DILocation(line: 1277, column: 21, scope: !5487)
!5623 = !DILocation(line: 1277, column: 28, scope: !5487)
!5624 = !DILocation(line: 1277, column: 54, scope: !5487)
!5625 = !DILocation(line: 1277, column: 57, scope: !5487)
!5626 = !DILocation(line: 1278, column: 61, scope: !5487)
!5627 = !DILocation(line: 1278, column: 64, scope: !5487)
!5628 = !DILocation(line: 1278, column: 59, scope: !5487)
!5629 = !DILocation(line: 1278, column: 75, scope: !5487)
!5630 = !DILocation(line: 1277, column: 46, scope: !5487)
!5631 = !DILocation(line: 1279, column: 25, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5487, file: !805, line: 1279, column: 25)
!5633 = !DILocation(line: 1279, column: 25, scope: !5487)
!5634 = !DILocation(line: 1280, column: 23, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5632, file: !805, line: 1279, column: 42)
!5636 = !DILocation(line: 1280, column: 26, scope: !5635)
!5637 = !DILocation(line: 1280, column: 37, scope: !5635)
!5638 = !DILocation(line: 1281, column: 40, scope: !5635)
!5639 = !DILocation(line: 1281, column: 23, scope: !5635)
!5640 = !DILocation(line: 1281, column: 26, scope: !5635)
!5641 = !DILocation(line: 1281, column: 38, scope: !5635)
!5642 = !DILocation(line: 1282, column: 21, scope: !5635)
!5643 = !DILocation(line: 1282, column: 28, scope: !5632)
!5644 = !DILocation(line: 1283, column: 19, scope: !5488)
!5645 = !DILocation(line: 1283, column: 19, scope: !5487)
!5646 = !DILocation(line: 1285, column: 28, scope: !5489)
!5647 = !DILocation(line: 1285, column: 26, scope: !5489)
!5648 = !DILocation(line: 1286, column: 23, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5489, file: !805, line: 1286, column: 23)
!5650 = !DILocation(line: 1286, column: 30, scope: !5649)
!5651 = !DILocation(line: 1286, column: 23, scope: !5489)
!5652 = !DILocation(line: 1287, column: 21, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5649, file: !805, line: 1286, column: 39)
!5654 = !DILocation(line: 1288, column: 42, scope: !5653)
!5655 = !DILocation(line: 1288, column: 39, scope: !5653)
!5656 = !DILocation(line: 1289, column: 42, scope: !5653)
!5657 = !DILocation(line: 1289, column: 39, scope: !5653)
!5658 = !DILocation(line: 1290, column: 42, scope: !5653)
!5659 = !DILocation(line: 1290, column: 39, scope: !5653)
!5660 = !DILocation(line: 1291, column: 21, scope: !5653)
!5661 = !DILocation(line: 1292, column: 32, scope: !5653)
!5662 = !DILocation(line: 1292, column: 21, scope: !5653)
!5663 = !DILocation(line: 1293, column: 21, scope: !5653)
!5664 = !DILocation(line: 1295, column: 42, scope: !5489)
!5665 = !DILocation(line: 1295, column: 21, scope: !5489)
!5666 = !DILocation(line: 1295, column: 24, scope: !5489)
!5667 = !DILocation(line: 1295, column: 37, scope: !5489)
!5668 = !DILocation(line: 1295, column: 35, scope: !5489)
!5669 = !DILocation(line: 1295, column: 40, scope: !5489)
!5670 = !DILocation(line: 1296, column: 27, scope: !5489)
!5671 = !DILocation(line: 1296, column: 47, scope: !5489)
!5672 = !DILocation(line: 1296, column: 51, scope: !5489)
!5673 = !DILocation(line: 1296, column: 19, scope: !5489)
!5674 = !DILocation(line: 1297, column: 31, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5489, file: !805, line: 1297, column: 23)
!5676 = !DILocation(line: 1297, column: 23, scope: !5675)
!5677 = !DILocation(line: 1297, column: 47, scope: !5675)
!5678 = !DILocation(line: 1297, column: 52, scope: !5675)
!5679 = !DILocation(line: 1298, column: 31, scope: !5675)
!5680 = !DILocation(line: 1298, column: 34, scope: !5675)
!5681 = !DILocation(line: 1298, column: 48, scope: !5675)
!5682 = !DILocation(line: 1298, column: 52, scope: !5675)
!5683 = !DILocation(line: 1298, column: 23, scope: !5675)
!5684 = !DILocation(line: 1298, column: 58, scope: !5675)
!5685 = !DILocation(line: 1298, column: 63, scope: !5675)
!5686 = !DILocation(line: 1299, column: 31, scope: !5675)
!5687 = !DILocation(line: 1299, column: 34, scope: !5675)
!5688 = !DILocation(line: 1299, column: 51, scope: !5675)
!5689 = !DILocation(line: 1299, column: 55, scope: !5675)
!5690 = !DILocation(line: 1299, column: 63, scope: !5675)
!5691 = !DILocation(line: 1299, column: 23, scope: !5675)
!5692 = !DILocation(line: 1299, column: 68, scope: !5675)
!5693 = !DILocation(line: 1299, column: 73, scope: !5675)
!5694 = !DILocation(line: 1300, column: 31, scope: !5675)
!5695 = !DILocation(line: 1300, column: 34, scope: !5675)
!5696 = !DILocation(line: 1300, column: 49, scope: !5675)
!5697 = !DILocation(line: 1300, column: 42, scope: !5675)
!5698 = !DILocation(line: 1300, column: 23, scope: !5675)
!5699 = !DILocation(line: 1300, column: 58, scope: !5675)
!5700 = !DILocation(line: 1300, column: 63, scope: !5675)
!5701 = !DILocation(line: 1301, column: 31, scope: !5675)
!5702 = !DILocation(line: 1301, column: 34, scope: !5675)
!5703 = !DILocation(line: 1301, column: 49, scope: !5675)
!5704 = !DILocation(line: 1301, column: 53, scope: !5675)
!5705 = !DILocation(line: 1301, column: 23, scope: !5675)
!5706 = !DILocation(line: 1301, column: 61, scope: !5675)
!5707 = !DILocation(line: 1297, column: 23, scope: !5489)
!5708 = !DILocation(line: 1303, column: 27, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5675, file: !805, line: 1302, column: 23)
!5710 = !DILocation(line: 1305, column: 17, scope: !5489)
!5711 = !DILocation(line: 1308, column: 31, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5713, file: !805, line: 1308, column: 23)
!5713 = distinct !DILexicalBlock(scope: !5490, file: !805, line: 1307, column: 17)
!5714 = !DILocation(line: 1308, column: 23, scope: !5712)
!5715 = !DILocation(line: 1308, column: 47, scope: !5712)
!5716 = !DILocation(line: 1308, column: 52, scope: !5712)
!5717 = !DILocation(line: 1309, column: 31, scope: !5712)
!5718 = !DILocation(line: 1309, column: 34, scope: !5712)
!5719 = !DILocation(line: 1309, column: 48, scope: !5712)
!5720 = !DILocation(line: 1309, column: 52, scope: !5712)
!5721 = !DILocation(line: 1309, column: 23, scope: !5712)
!5722 = !DILocation(line: 1309, column: 58, scope: !5712)
!5723 = !DILocation(line: 1309, column: 63, scope: !5712)
!5724 = !DILocation(line: 1310, column: 31, scope: !5712)
!5725 = !DILocation(line: 1310, column: 34, scope: !5712)
!5726 = !DILocation(line: 1310, column: 51, scope: !5712)
!5727 = !DILocation(line: 1310, column: 55, scope: !5712)
!5728 = !DILocation(line: 1310, column: 65, scope: !5712)
!5729 = !DILocation(line: 1310, column: 69, scope: !5712)
!5730 = !DILocation(line: 1310, column: 63, scope: !5712)
!5731 = !DILocation(line: 1310, column: 23, scope: !5712)
!5732 = !DILocation(line: 1310, column: 77, scope: !5712)
!5733 = !DILocation(line: 1308, column: 23, scope: !5713)
!5734 = !DILocation(line: 1312, column: 27, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5712, file: !805, line: 1311, column: 23)
!5736 = !DILocation(line: 1317, column: 30, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5482, file: !805, line: 1317, column: 21)
!5738 = !DILocation(line: 1317, column: 38, scope: !5737)
!5739 = !DILocation(line: 1317, column: 21, scope: !5482)
!5740 = !DILocation(line: 1318, column: 29, scope: !5737)
!5741 = !DILocation(line: 1318, column: 61, scope: !5737)
!5742 = !DILocation(line: 1318, column: 64, scope: !5737)
!5743 = !DILocation(line: 1318, column: 69, scope: !5737)
!5744 = !DILocation(line: 1318, column: 21, scope: !5737)
!5745 = !DILocation(line: 1321, column: 31, scope: !5482)
!5746 = !DILocation(line: 1322, column: 17, scope: !5482)
!5747 = !DILocation(line: 1323, column: 35, scope: !5482)
!5748 = !DILocation(line: 1323, column: 19, scope: !5482)
!5749 = !DILocation(line: 1323, column: 22, scope: !5482)
!5750 = !DILocation(line: 1323, column: 30, scope: !5482)
!5751 = !DILocation(line: 1323, column: 28, scope: !5482)
!5752 = !DILocation(line: 1323, column: 33, scope: !5482)
!5753 = !DILocation(line: 1324, column: 18, scope: !5482)
!5754 = !DILocation(line: 1326, column: 13, scope: !5482)
!5755 = !DILocation(line: 1327, column: 33, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5483, file: !805, line: 1326, column: 20)
!5757 = !DILocation(line: 1330, column: 22, scope: !5484)
!5758 = distinct !{!5758, !5549, !5759}
!5759 = !DILocation(line: 1331, column: 9, scope: !5485)
!5760 = !DILocation(line: 1337, column: 12, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5485, file: !805, line: 1337, column: 12)
!5762 = !DILocation(line: 1337, column: 23, scope: !5761)
!5763 = !DILocation(line: 1337, column: 29, scope: !5761)
!5764 = !DILocation(line: 1337, column: 12, scope: !5485)
!5765 = !DILocation(line: 1338, column: 40, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5761, file: !805, line: 1337, column: 38)
!5767 = !DILocation(line: 1338, column: 51, scope: !5766)
!5768 = !DILocation(line: 1338, column: 58, scope: !5766)
!5769 = !DILocation(line: 1338, column: 23, scope: !5766)
!5770 = !DILocation(line: 1338, column: 21, scope: !5766)
!5771 = !DILocation(line: 1339, column: 25, scope: !5766)
!5772 = !DILocation(line: 1339, column: 23, scope: !5766)
!5773 = !DILocation(line: 1340, column: 9, scope: !5766)
!5774 = !DILocation(line: 1342, column: 5, scope: !5485)
!5775 = !DILocation(line: 1342, column: 13, scope: !5459)
!5776 = !DILocation(line: 1342, column: 24, scope: !5459)
!5777 = !DILocation(line: 1342, column: 30, scope: !5459)
!5778 = distinct !{!5778, !5548, !5779}
!5779 = !DILocation(line: 1342, column: 37, scope: !5459)
!5780 = !DILocation(line: 1344, column: 16, scope: !5459)
!5781 = !DILocation(line: 1344, column: 19, scope: !5459)
!5782 = !DILocation(line: 1344, column: 5, scope: !5459)
!5783 = !DILocation(line: 1344, column: 8, scope: !5459)
!5784 = !DILocation(line: 1344, column: 14, scope: !5459)
!5785 = !DILocation(line: 1345, column: 16, scope: !5459)
!5786 = !DILocation(line: 1345, column: 5, scope: !5459)
!5787 = !DILocation(line: 1345, column: 8, scope: !5459)
!5788 = !DILocation(line: 1345, column: 14, scope: !5459)
!5789 = !DILocation(line: 1346, column: 9, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5459, file: !805, line: 1346, column: 9)
!5791 = !DILocation(line: 1346, column: 9, scope: !5459)
!5792 = !DILocation(line: 1347, column: 25, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5790, file: !805, line: 1346, column: 21)
!5794 = !DILocation(line: 1347, column: 28, scope: !5793)
!5795 = !DILocation(line: 1347, column: 9, scope: !5793)
!5796 = !DILocation(line: 1347, column: 12, scope: !5793)
!5797 = !DILocation(line: 1347, column: 23, scope: !5793)
!5798 = !DILocation(line: 1348, column: 25, scope: !5793)
!5799 = !DILocation(line: 1348, column: 9, scope: !5793)
!5800 = !DILocation(line: 1348, column: 12, scope: !5793)
!5801 = !DILocation(line: 1348, column: 23, scope: !5793)
!5802 = !DILocation(line: 1349, column: 5, scope: !5793)
!5803 = !DILocation(line: 1351, column: 18, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5459, file: !805, line: 1351, column: 9)
!5805 = !DILocation(line: 1351, column: 26, scope: !5804)
!5806 = !DILocation(line: 1351, column: 9, scope: !5459)
!5807 = !DILocation(line: 1352, column: 17, scope: !5804)
!5808 = !DILocation(line: 1352, column: 38, scope: !5804)
!5809 = !DILocation(line: 1352, column: 41, scope: !5804)
!5810 = !DILocation(line: 1352, column: 9, scope: !5804)
!5811 = !DILocation(line: 1359, column: 9, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5459, file: !805, line: 1359, column: 9)
!5813 = !DILocation(line: 1359, column: 20, scope: !5812)
!5814 = !DILocation(line: 1359, column: 26, scope: !5812)
!5815 = !DILocation(line: 1359, column: 34, scope: !5812)
!5816 = !DILocation(line: 1359, column: 45, scope: !5812)
!5817 = !DILocation(line: 1359, column: 37, scope: !5812)
!5818 = !DILocation(line: 1359, column: 62, scope: !5812)
!5819 = !DILocation(line: 1360, column: 9, scope: !5812)
!5820 = !DILocation(line: 1360, column: 13, scope: !5812)
!5821 = !DILocation(line: 1360, column: 16, scope: !5812)
!5822 = !DILocation(line: 1360, column: 20, scope: !5812)
!5823 = !DILocation(line: 1360, column: 41, scope: !5812)
!5824 = !DILocation(line: 1360, column: 23, scope: !5812)
!5825 = !DILocation(line: 1360, column: 44, scope: !5812)
!5826 = !DILocation(line: 1359, column: 9, scope: !5459)
!5827 = !DILocation(line: 1361, column: 20, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5812, file: !805, line: 1360, column: 51)
!5829 = !DILocation(line: 1361, column: 9, scope: !5828)
!5830 = !DILocation(line: 1362, column: 5, scope: !5828)
!5831 = !DILocation(line: 1364, column: 24, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5812, file: !805, line: 1363, column: 10)
!5833 = !DILocation(line: 1364, column: 9, scope: !5832)
!5834 = !DILocation(line: 1365, column: 9, scope: !5832)
!5835 = !DILocation(line: 1365, column: 12, scope: !5832)
!5836 = !DILocation(line: 1365, column: 20, scope: !5832)
!5837 = !DILocation(line: 1368, column: 5, scope: !5459)
!5838 = !DILocation(line: 1369, column: 26, scope: !5459)
!5839 = !DILocation(line: 1369, column: 23, scope: !5459)
!5840 = !DILocation(line: 1370, column: 26, scope: !5459)
!5841 = !DILocation(line: 1370, column: 23, scope: !5459)
!5842 = !DILocation(line: 1371, column: 26, scope: !5459)
!5843 = !DILocation(line: 1371, column: 23, scope: !5459)
!5844 = !DILocation(line: 1372, column: 5, scope: !5459)
!5845 = !DILocation(line: 1374, column: 5, scope: !5459)
!5846 = !DILocation(line: 1375, column: 1, scope: !5459)
!5847 = distinct !DISubprogram(name: "process_update_command", scope: !805, file: !805, line: 1377, type: !5848, scopeLine: 1377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5850)
!5848 = !DISubroutineType(types: !5849)
!5849 = !{null, !296, !5345, !5346, !47, !276}
!5850 = !{!5851, !5852, !5853, !5854, !5855, !5856, !5857, !5858, !5859, !5860, !5861, !5862, !5863, !5864, !5865}
!5851 = !DILocalVariable(name: "c", arg: 1, scope: !5847, file: !805, line: 1377, type: !296)
!5852 = !DILocalVariable(name: "tokens", arg: 2, scope: !5847, file: !805, line: 1377, type: !5345)
!5853 = !DILocalVariable(name: "ntokens", arg: 3, scope: !5847, file: !805, line: 1377, type: !5346)
!5854 = !DILocalVariable(name: "comm", arg: 4, scope: !5847, file: !805, line: 1377, type: !47)
!5855 = !DILocalVariable(name: "handle_cas", arg: 5, scope: !5847, file: !805, line: 1377, type: !276)
!5856 = !DILocalVariable(name: "key", scope: !5847, file: !805, line: 1378, type: !195)
!5857 = !DILocalVariable(name: "nkey", scope: !5847, file: !805, line: 1379, type: !218)
!5858 = !DILocalVariable(name: "flags", scope: !5847, file: !805, line: 1380, type: !47)
!5859 = !DILocalVariable(name: "exptime", scope: !5847, file: !805, line: 1381, type: !900)
!5860 = !DILocalVariable(name: "vlen", scope: !5847, file: !805, line: 1382, type: !47)
!5861 = !DILocalVariable(name: "old_vlen", scope: !5847, file: !805, line: 1382, type: !47)
!5862 = !DILocalVariable(name: "req_cas_id", scope: !5847, file: !805, line: 1383, type: !261)
!5863 = !DILocalVariable(name: "it", scope: !5847, file: !805, line: 1384, type: !243)
!5864 = !DILocalVariable(name: "old_it", scope: !5847, file: !805, line: 1384, type: !243)
!5865 = !DILocalVariable(name: "bucket", scope: !5866, file: !805, line: 1421, type: !47)
!5866 = distinct !DILexicalBlock(scope: !5867, file: !805, line: 1420, column: 27)
!5867 = distinct !DILexicalBlock(scope: !5847, file: !805, line: 1420, column: 9)
!5868 = !DILocation(line: 1377, column: 42, scope: !5847)
!5869 = !DILocation(line: 1377, column: 54, scope: !5847)
!5870 = !DILocation(line: 1377, column: 75, scope: !5847)
!5871 = !DILocation(line: 1377, column: 88, scope: !5847)
!5872 = !DILocation(line: 1377, column: 99, scope: !5847)
!5873 = !DILocation(line: 1378, column: 5, scope: !5847)
!5874 = !DILocation(line: 1378, column: 11, scope: !5847)
!5875 = !DILocation(line: 1379, column: 5, scope: !5847)
!5876 = !DILocation(line: 1379, column: 12, scope: !5847)
!5877 = !DILocation(line: 1380, column: 5, scope: !5847)
!5878 = !DILocation(line: 1380, column: 9, scope: !5847)
!5879 = !DILocation(line: 1381, column: 5, scope: !5847)
!5880 = !DILocation(line: 1381, column: 12, scope: !5847)
!5881 = !DILocation(line: 1382, column: 5, scope: !5847)
!5882 = !DILocation(line: 1382, column: 9, scope: !5847)
!5883 = !DILocation(line: 1382, column: 15, scope: !5847)
!5884 = !DILocation(line: 1383, column: 5, scope: !5847)
!5885 = !DILocation(line: 1383, column: 14, scope: !5847)
!5886 = !DILocation(line: 1384, column: 5, scope: !5847)
!5887 = !DILocation(line: 1384, column: 11, scope: !5847)
!5888 = !DILocation(line: 1384, column: 16, scope: !5847)
!5889 = !DILocation(line: 1386, column: 5, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5891, file: !805, line: 1386, column: 5)
!5891 = distinct !DILexicalBlock(scope: !5847, file: !805, line: 1386, column: 5)
!5892 = !DILocation(line: 1386, column: 5, scope: !5891)
!5893 = !DILocation(line: 1388, column: 9, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5847, file: !805, line: 1388, column: 9)
!5895 = !DILocation(line: 1388, column: 27, scope: !5894)
!5896 = !DILocation(line: 1388, column: 34, scope: !5894)
!5897 = !DILocation(line: 1388, column: 9, scope: !5847)
!5898 = !DILocation(line: 1389, column: 20, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5894, file: !805, line: 1388, column: 52)
!5900 = !DILocation(line: 1389, column: 9, scope: !5899)
!5901 = !DILocation(line: 1390, column: 9, scope: !5899)
!5902 = !DILocation(line: 1393, column: 11, scope: !5847)
!5903 = !DILocation(line: 1393, column: 29, scope: !5847)
!5904 = !DILocation(line: 1393, column: 9, scope: !5847)
!5905 = !DILocation(line: 1394, column: 12, scope: !5847)
!5906 = !DILocation(line: 1394, column: 30, scope: !5847)
!5907 = !DILocation(line: 1394, column: 10, scope: !5847)
!5908 = !DILocation(line: 1396, column: 21, scope: !5847)
!5909 = !DILocation(line: 1396, column: 31, scope: !5847)
!5910 = !DILocation(line: 1396, column: 13, scope: !5847)
!5911 = !DILocation(line: 1396, column: 11, scope: !5847)
!5912 = !DILocation(line: 1397, column: 22, scope: !5847)
!5913 = !DILocation(line: 1397, column: 32, scope: !5847)
!5914 = !DILocation(line: 1397, column: 15, scope: !5847)
!5915 = !DILocation(line: 1397, column: 13, scope: !5847)
!5916 = !DILocation(line: 1398, column: 19, scope: !5847)
!5917 = !DILocation(line: 1398, column: 29, scope: !5847)
!5918 = !DILocation(line: 1398, column: 12, scope: !5847)
!5919 = !DILocation(line: 1398, column: 10, scope: !5847)
!5920 = !DILocation(line: 1404, column: 8, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5847, file: !805, line: 1404, column: 8)
!5922 = !DILocation(line: 1404, column: 8, scope: !5847)
!5923 = !DILocation(line: 1406, column: 29, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5921, file: !805, line: 1405, column: 5)
!5925 = !DILocation(line: 1406, column: 39, scope: !5924)
!5926 = !DILocation(line: 1406, column: 20, scope: !5924)
!5927 = !DILocation(line: 1406, column: 18, scope: !5924)
!5928 = !DILocation(line: 1407, column: 5, scope: !5924)
!5929 = !DILocation(line: 1409, column: 8, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5847, file: !805, line: 1409, column: 8)
!5931 = !DILocation(line: 1409, column: 14, scope: !5930)
!5932 = !DILocation(line: 1409, column: 24, scope: !5930)
!5933 = !DILocation(line: 1409, column: 29, scope: !5930)
!5934 = !DILocation(line: 1409, column: 35, scope: !5930)
!5935 = !DILocation(line: 1409, column: 40, scope: !5930)
!5936 = !DILocation(line: 1409, column: 43, scope: !5930)
!5937 = !DILocation(line: 1409, column: 51, scope: !5930)
!5938 = !DILocation(line: 1409, column: 57, scope: !5930)
!5939 = !DILocation(line: 1409, column: 60, scope: !5930)
!5940 = !DILocation(line: 1409, column: 66, scope: !5930)
!5941 = !DILocation(line: 1409, column: 8, scope: !5847)
!5942 = !DILocation(line: 1410, column: 20, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5930, file: !805, line: 1409, column: 78)
!5944 = !DILocation(line: 1410, column: 9, scope: !5943)
!5945 = !DILocation(line: 1411, column: 9, scope: !5943)
!5946 = !DILocation(line: 1420, column: 18, scope: !5867)
!5947 = !DILocation(line: 1420, column: 9, scope: !5847)
!5948 = !DILocation(line: 1421, column: 9, scope: !5866)
!5949 = !DILocation(line: 1421, column: 13, scope: !5866)
!5950 = !DILocation(line: 1421, column: 22, scope: !5866)
!5951 = !DILocation(line: 1421, column: 25, scope: !5866)
!5952 = !DILocation(line: 1422, column: 13, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5866, file: !805, line: 1422, column: 13)
!5954 = !DILocation(line: 1422, column: 20, scope: !5953)
!5955 = !DILocation(line: 1422, column: 13, scope: !5866)
!5956 = !DILocation(line: 1423, column: 24, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5953, file: !805, line: 1422, column: 27)
!5958 = !DILocation(line: 1423, column: 13, scope: !5957)
!5959 = !DILocation(line: 1424, column: 13, scope: !5957)
!5960 = !DILocation(line: 1426, column: 9, scope: !5866)
!5961 = !DILocation(line: 1426, column: 12, scope: !5866)
!5962 = !DILocation(line: 1426, column: 19, scope: !5866)
!5963 = !DILocation(line: 1427, column: 13, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5866, file: !805, line: 1427, column: 13)
!5965 = !DILocation(line: 1427, column: 21, scope: !5964)
!5966 = !DILocation(line: 1427, column: 32, scope: !5964)
!5967 = !DILocation(line: 1427, column: 35, scope: !5964)
!5968 = !DILocation(line: 1427, column: 29, scope: !5964)
!5969 = !DILocation(line: 1427, column: 13, scope: !5866)
!5970 = !DILocation(line: 1428, column: 24, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5964, file: !805, line: 1427, column: 40)
!5972 = !DILocation(line: 1428, column: 13, scope: !5971)
!5973 = !DILocation(line: 1429, column: 13, scope: !5971)
!5974 = !DILocation(line: 1431, column: 5, scope: !5867)
!5975 = !DILocation(line: 1431, column: 5, scope: !5866)
!5976 = !DILocation(line: 1438, column: 10, scope: !5847)
!5977 = !DILocation(line: 1438, column: 8, scope: !5847)
!5978 = !DILocation(line: 1440, column: 9, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5847, file: !805, line: 1440, column: 9)
!5980 = !DILocation(line: 1440, column: 12, scope: !5979)
!5981 = !DILocation(line: 1440, column: 9, scope: !5847)
!5982 = !DILocation(line: 1441, column: 28, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5984, file: !805, line: 1441, column: 13)
!5984 = distinct !DILexicalBlock(scope: !5979, file: !805, line: 1440, column: 18)
!5985 = !DILocation(line: 1441, column: 34, scope: !5983)
!5986 = !DILocation(line: 1441, column: 41, scope: !5983)
!5987 = !DILocation(line: 1441, column: 46, scope: !5983)
!5988 = !DILocation(line: 1441, column: 15, scope: !5983)
!5989 = !DILocation(line: 1441, column: 13, scope: !5984)
!5990 = !DILocation(line: 1442, column: 24, scope: !5983)
!5991 = !DILocation(line: 1442, column: 13, scope: !5983)
!5992 = !DILocation(line: 1444, column: 24, scope: !5983)
!5993 = !DILocation(line: 1444, column: 13, scope: !5983)
!5994 = !DILocation(line: 1446, column: 9, scope: !5984)
!5995 = !DILocation(line: 1446, column: 12, scope: !5984)
!5996 = !DILocation(line: 1446, column: 25, scope: !5984)
!5997 = !DILocation(line: 1447, column: 21, scope: !5984)
!5998 = !DILocation(line: 1447, column: 26, scope: !5984)
!5999 = !DILocation(line: 1447, column: 9, scope: !5984)
!6000 = !DILocation(line: 1447, column: 12, scope: !5984)
!6001 = !DILocation(line: 1447, column: 19, scope: !5984)
!6002 = !DILocation(line: 1448, column: 9, scope: !5984)
!6003 = !DILocation(line: 1450, column: 8, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5847, file: !805, line: 1450, column: 8)
!6005 = !DILocation(line: 1450, column: 8, scope: !5847)
!6006 = !DILocation(line: 1451, column: 20, scope: !6004)
!6007 = !DILocation(line: 1451, column: 7, scope: !6004)
!6008 = !DILocation(line: 1451, column: 11, scope: !6004)
!6009 = !DILocation(line: 1451, column: 18, scope: !6004)
!6010 = !DILocation(line: 1453, column: 19, scope: !5847)
!6011 = !DILocation(line: 1453, column: 5, scope: !5847)
!6012 = !DILocation(line: 1453, column: 8, scope: !5847)
!6013 = !DILocation(line: 1453, column: 17, scope: !5847)
!6014 = !DILocation(line: 1454, column: 16, scope: !5847)
!6015 = !DILocation(line: 1454, column: 5, scope: !5847)
!6016 = !DILocation(line: 1454, column: 8, scope: !5847)
!6017 = !DILocation(line: 1454, column: 14, scope: !5847)
!6018 = !DILocation(line: 1455, column: 18, scope: !5847)
!6019 = !DILocation(line: 1455, column: 22, scope: !5847)
!6020 = !DILocation(line: 1455, column: 5, scope: !5847)
!6021 = !DILocation(line: 1455, column: 8, scope: !5847)
!6022 = !DILocation(line: 1455, column: 16, scope: !5847)
!6023 = !DILocation(line: 1456, column: 20, scope: !5847)
!6024 = !DILocation(line: 1456, column: 5, scope: !5847)
!6025 = !DILocation(line: 1456, column: 8, scope: !5847)
!6026 = !DILocation(line: 1456, column: 18, scope: !5847)
!6027 = !DILocation(line: 1460, column: 20, scope: !5847)
!6028 = !DILocation(line: 1460, column: 5, scope: !5847)
!6029 = !DILocation(line: 1463, column: 1, scope: !5847)
!6030 = distinct !DISubprogram(name: "process_arithmetic_command", scope: !805, file: !805, line: 1465, type: !6031, scopeLine: 1465, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6033)
!6031 = !DISubroutineType(types: !6032)
!6032 = !{null, !296, !5345, !5346, !1018}
!6033 = !{!6034, !6035, !6036, !6037, !6038, !6042, !6043, !6044, !6045, !6046}
!6034 = !DILocalVariable(name: "c", arg: 1, scope: !6030, file: !805, line: 1465, type: !296)
!6035 = !DILocalVariable(name: "tokens", arg: 2, scope: !6030, file: !805, line: 1465, type: !5345)
!6036 = !DILocalVariable(name: "ntokens", arg: 3, scope: !6030, file: !805, line: 1465, type: !5346)
!6037 = !DILocalVariable(name: "incr", arg: 4, scope: !6030, file: !805, line: 1465, type: !1018)
!6038 = !DILocalVariable(name: "temp", scope: !6030, file: !805, line: 1466, type: !6039)
!6039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 168, elements: !6040)
!6040 = !{!6041}
!6041 = !DISubrange(count: 21)
!6042 = !DILocalVariable(name: "it", scope: !6030, file: !805, line: 1467, type: !243)
!6043 = !DILocalVariable(name: "delta", scope: !6030, file: !805, line: 1468, type: !1796)
!6044 = !DILocalVariable(name: "key", scope: !6030, file: !805, line: 1469, type: !195)
!6045 = !DILocalVariable(name: "nkey", scope: !6030, file: !805, line: 1470, type: !218)
!6046 = !DILocalVariable(name: "bucket", scope: !6047, file: !805, line: 1483, type: !47)
!6047 = distinct !DILexicalBlock(scope: !6048, file: !805, line: 1482, column: 27)
!6048 = distinct !DILexicalBlock(scope: !6030, file: !805, line: 1482, column: 9)
!6049 = !DILocation(line: 1465, column: 46, scope: !6030)
!6050 = !DILocation(line: 1465, column: 58, scope: !6030)
!6051 = !DILocation(line: 1465, column: 79, scope: !6030)
!6052 = !DILocation(line: 1465, column: 99, scope: !6030)
!6053 = !DILocation(line: 1466, column: 5, scope: !6030)
!6054 = !DILocation(line: 1466, column: 10, scope: !6030)
!6055 = !DILocation(line: 1467, column: 5, scope: !6030)
!6056 = !DILocation(line: 1467, column: 11, scope: !6030)
!6057 = !DILocation(line: 1468, column: 5, scope: !6030)
!6058 = !DILocation(line: 1468, column: 13, scope: !6030)
!6059 = !DILocation(line: 1469, column: 5, scope: !6030)
!6060 = !DILocation(line: 1469, column: 11, scope: !6030)
!6061 = !DILocation(line: 1470, column: 5, scope: !6030)
!6062 = !DILocation(line: 1470, column: 12, scope: !6030)
!6063 = !DILocation(line: 1472, column: 5, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6065, file: !805, line: 1472, column: 5)
!6065 = distinct !DILexicalBlock(scope: !6030, file: !805, line: 1472, column: 5)
!6066 = !DILocation(line: 1472, column: 5, scope: !6065)
!6067 = !DILocation(line: 1474, column: 8, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6030, file: !805, line: 1474, column: 8)
!6069 = !DILocation(line: 1474, column: 26, scope: !6068)
!6070 = !DILocation(line: 1474, column: 33, scope: !6068)
!6071 = !DILocation(line: 1474, column: 8, scope: !6030)
!6072 = !DILocation(line: 1475, column: 20, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6068, file: !805, line: 1474, column: 51)
!6074 = !DILocation(line: 1475, column: 9, scope: !6073)
!6075 = !DILocation(line: 1476, column: 9, scope: !6073)
!6076 = !DILocation(line: 1479, column: 11, scope: !6030)
!6077 = !DILocation(line: 1479, column: 29, scope: !6030)
!6078 = !DILocation(line: 1479, column: 9, scope: !6030)
!6079 = !DILocation(line: 1480, column: 12, scope: !6030)
!6080 = !DILocation(line: 1480, column: 30, scope: !6030)
!6081 = !DILocation(line: 1480, column: 10, scope: !6030)
!6082 = !DILocation(line: 1482, column: 18, scope: !6048)
!6083 = !DILocation(line: 1482, column: 9, scope: !6030)
!6084 = !DILocation(line: 1483, column: 9, scope: !6047)
!6085 = !DILocation(line: 1483, column: 13, scope: !6047)
!6086 = !DILocation(line: 1483, column: 22, scope: !6047)
!6087 = !DILocation(line: 1483, column: 25, scope: !6047)
!6088 = !DILocation(line: 1484, column: 13, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6047, file: !805, line: 1484, column: 13)
!6090 = !DILocation(line: 1484, column: 20, scope: !6089)
!6091 = !DILocation(line: 1484, column: 13, scope: !6047)
!6092 = !DILocation(line: 1485, column: 24, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6089, file: !805, line: 1484, column: 27)
!6094 = !DILocation(line: 1485, column: 13, scope: !6093)
!6095 = !DILocation(line: 1486, column: 13, scope: !6093)
!6096 = !DILocation(line: 1488, column: 9, scope: !6047)
!6097 = !DILocation(line: 1488, column: 12, scope: !6047)
!6098 = !DILocation(line: 1488, column: 19, scope: !6047)
!6099 = !DILocation(line: 1489, column: 13, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6047, file: !805, line: 1489, column: 13)
!6101 = !DILocation(line: 1489, column: 21, scope: !6100)
!6102 = !DILocation(line: 1489, column: 32, scope: !6100)
!6103 = !DILocation(line: 1489, column: 35, scope: !6100)
!6104 = !DILocation(line: 1489, column: 29, scope: !6100)
!6105 = !DILocation(line: 1489, column: 13, scope: !6047)
!6106 = !DILocation(line: 1490, column: 24, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6100, file: !805, line: 1489, column: 40)
!6108 = !DILocation(line: 1490, column: 13, scope: !6107)
!6109 = !DILocation(line: 1491, column: 13, scope: !6107)
!6110 = !DILocation(line: 1493, column: 5, scope: !6048)
!6111 = !DILocation(line: 1493, column: 5, scope: !6047)
!6112 = !DILocation(line: 1495, column: 21, scope: !6030)
!6113 = !DILocation(line: 1495, column: 31, scope: !6030)
!6114 = !DILocation(line: 1495, column: 13, scope: !6030)
!6115 = !DILocation(line: 1495, column: 11, scope: !6030)
!6116 = !DILocation(line: 1497, column: 8, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6030, file: !805, line: 1497, column: 8)
!6118 = !DILocation(line: 1497, column: 14, scope: !6117)
!6119 = !DILocation(line: 1497, column: 8, scope: !6030)
!6120 = !DILocation(line: 1498, column: 20, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6117, file: !805, line: 1497, column: 25)
!6122 = !DILocation(line: 1498, column: 9, scope: !6121)
!6123 = !DILocation(line: 1499, column: 9, scope: !6121)
!6124 = !DILocation(line: 1502, column: 19, scope: !6030)
!6125 = !DILocation(line: 1502, column: 24, scope: !6030)
!6126 = !DILocation(line: 1502, column: 10, scope: !6030)
!6127 = !DILocation(line: 1502, column: 8, scope: !6030)
!6128 = !DILocation(line: 1503, column: 10, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6030, file: !805, line: 1503, column: 9)
!6130 = !DILocation(line: 1503, column: 9, scope: !6030)
!6131 = !DILocation(line: 1504, column: 20, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6129, file: !805, line: 1503, column: 14)
!6133 = !DILocation(line: 1504, column: 9, scope: !6132)
!6134 = !DILocation(line: 1505, column: 9, scope: !6132)
!6135 = !DILocation(line: 1508, column: 16, scope: !6030)
!6136 = !DILocation(line: 1508, column: 19, scope: !6030)
!6137 = !DILocation(line: 1508, column: 5, scope: !6030)
!6138 = !DILocation(line: 1509, column: 5, scope: !6030)
!6139 = !DILocation(line: 1510, column: 1, scope: !6030)
!6140 = distinct !DISubprogram(name: "process_delete_command", scope: !805, file: !805, line: 1563, type: !6141, scopeLine: 1563, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6143)
!6141 = !DISubroutineType(types: !6142)
!6142 = !{null, !296, !5345, !5346}
!6143 = !{!6144, !6145, !6146, !6147, !6148, !6149, !6150, !6151}
!6144 = !DILocalVariable(name: "c", arg: 1, scope: !6140, file: !805, line: 1563, type: !296)
!6145 = !DILocalVariable(name: "tokens", arg: 2, scope: !6140, file: !805, line: 1563, type: !5345)
!6146 = !DILocalVariable(name: "ntokens", arg: 3, scope: !6140, file: !805, line: 1563, type: !5346)
!6147 = !DILocalVariable(name: "key", scope: !6140, file: !805, line: 1564, type: !195)
!6148 = !DILocalVariable(name: "nkey", scope: !6140, file: !805, line: 1565, type: !218)
!6149 = !DILocalVariable(name: "it", scope: !6140, file: !805, line: 1566, type: !243)
!6150 = !DILocalVariable(name: "exptime", scope: !6140, file: !805, line: 1567, type: !900)
!6151 = !DILocalVariable(name: "bucket", scope: !6152, file: !805, line: 1572, type: !47)
!6152 = distinct !DILexicalBlock(scope: !6153, file: !805, line: 1571, column: 27)
!6153 = distinct !DILexicalBlock(scope: !6140, file: !805, line: 1571, column: 9)
!6154 = !DILocation(line: 1563, column: 42, scope: !6140)
!6155 = !DILocation(line: 1563, column: 54, scope: !6140)
!6156 = !DILocation(line: 1563, column: 75, scope: !6140)
!6157 = !DILocation(line: 1564, column: 5, scope: !6140)
!6158 = !DILocation(line: 1564, column: 11, scope: !6140)
!6159 = !DILocation(line: 1565, column: 5, scope: !6140)
!6160 = !DILocation(line: 1565, column: 12, scope: !6140)
!6161 = !DILocation(line: 1566, column: 5, scope: !6140)
!6162 = !DILocation(line: 1566, column: 11, scope: !6140)
!6163 = !DILocation(line: 1567, column: 5, scope: !6140)
!6164 = !DILocation(line: 1567, column: 12, scope: !6140)
!6165 = !DILocation(line: 1569, column: 5, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !805, line: 1569, column: 5)
!6167 = distinct !DILexicalBlock(scope: !6140, file: !805, line: 1569, column: 5)
!6168 = !DILocation(line: 1569, column: 5, scope: !6167)
!6169 = !DILocation(line: 1571, column: 18, scope: !6153)
!6170 = !DILocation(line: 1571, column: 9, scope: !6140)
!6171 = !DILocation(line: 1572, column: 9, scope: !6152)
!6172 = !DILocation(line: 1572, column: 13, scope: !6152)
!6173 = !DILocation(line: 1572, column: 22, scope: !6152)
!6174 = !DILocation(line: 1572, column: 25, scope: !6152)
!6175 = !DILocation(line: 1573, column: 13, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6152, file: !805, line: 1573, column: 13)
!6177 = !DILocation(line: 1573, column: 20, scope: !6176)
!6178 = !DILocation(line: 1573, column: 13, scope: !6152)
!6179 = !DILocation(line: 1574, column: 24, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6176, file: !805, line: 1573, column: 27)
!6181 = !DILocation(line: 1574, column: 13, scope: !6180)
!6182 = !DILocation(line: 1575, column: 13, scope: !6180)
!6183 = !DILocation(line: 1577, column: 9, scope: !6152)
!6184 = !DILocation(line: 1577, column: 12, scope: !6152)
!6185 = !DILocation(line: 1577, column: 19, scope: !6152)
!6186 = !DILocation(line: 1578, column: 13, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6152, file: !805, line: 1578, column: 13)
!6188 = !DILocation(line: 1578, column: 21, scope: !6187)
!6189 = !DILocation(line: 1578, column: 32, scope: !6187)
!6190 = !DILocation(line: 1578, column: 35, scope: !6187)
!6191 = !DILocation(line: 1578, column: 29, scope: !6187)
!6192 = !DILocation(line: 1578, column: 13, scope: !6152)
!6193 = !DILocation(line: 1579, column: 24, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6187, file: !805, line: 1578, column: 40)
!6195 = !DILocation(line: 1579, column: 13, scope: !6194)
!6196 = !DILocation(line: 1580, column: 13, scope: !6194)
!6197 = !DILocation(line: 1582, column: 5, scope: !6153)
!6198 = !DILocation(line: 1582, column: 5, scope: !6152)
!6199 = !DILocation(line: 1584, column: 11, scope: !6140)
!6200 = !DILocation(line: 1584, column: 29, scope: !6140)
!6201 = !DILocation(line: 1584, column: 9, scope: !6140)
!6202 = !DILocation(line: 1585, column: 12, scope: !6140)
!6203 = !DILocation(line: 1585, column: 30, scope: !6140)
!6204 = !DILocation(line: 1585, column: 10, scope: !6140)
!6205 = !DILocation(line: 1587, column: 8, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6140, file: !805, line: 1587, column: 8)
!6207 = !DILocation(line: 1587, column: 13, scope: !6206)
!6208 = !DILocation(line: 1587, column: 8, scope: !6140)
!6209 = !DILocation(line: 1588, column: 20, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6206, file: !805, line: 1587, column: 31)
!6211 = !DILocation(line: 1588, column: 9, scope: !6210)
!6212 = !DILocation(line: 1589, column: 9, scope: !6210)
!6213 = !DILocation(line: 1592, column: 8, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6140, file: !805, line: 1592, column: 8)
!6215 = !DILocation(line: 1592, column: 16, scope: !6214)
!6216 = !DILocation(line: 1592, column: 8, scope: !6140)
!6217 = !DILocation(line: 1593, column: 26, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6214, file: !805, line: 1592, column: 22)
!6219 = !DILocation(line: 1593, column: 36, scope: !6218)
!6220 = !DILocation(line: 1593, column: 19, scope: !6218)
!6221 = !DILocation(line: 1593, column: 17, scope: !6218)
!6222 = !DILocation(line: 1595, column: 12, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6218, file: !805, line: 1595, column: 12)
!6224 = !DILocation(line: 1595, column: 18, scope: !6223)
!6225 = !DILocation(line: 1595, column: 12, scope: !6218)
!6226 = !DILocation(line: 1596, column: 24, scope: !6227)
!6227 = distinct !DILexicalBlock(scope: !6223, file: !805, line: 1595, column: 29)
!6228 = !DILocation(line: 1596, column: 13, scope: !6227)
!6229 = !DILocation(line: 1597, column: 13, scope: !6227)
!6230 = !DILocation(line: 1599, column: 5, scope: !6218)
!6231 = !DILocation(line: 1607, column: 19, scope: !6140)
!6232 = !DILocation(line: 1607, column: 24, scope: !6140)
!6233 = !DILocation(line: 1607, column: 10, scope: !6140)
!6234 = !DILocation(line: 1607, column: 8, scope: !6140)
!6235 = !DILocation(line: 1608, column: 9, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6140, file: !805, line: 1608, column: 9)
!6237 = !DILocation(line: 1608, column: 9, scope: !6140)
!6238 = !DILocation(line: 1609, column: 13, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6240, file: !805, line: 1609, column: 13)
!6240 = distinct !DILexicalBlock(scope: !6236, file: !805, line: 1608, column: 13)
!6241 = !DILocation(line: 1609, column: 21, scope: !6239)
!6242 = !DILocation(line: 1609, column: 13, scope: !6240)
!6243 = !DILocation(line: 1610, column: 13, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6239, file: !805, line: 1609, column: 27)
!6245 = !DILocation(line: 1611, column: 13, scope: !6244)
!6246 = !DILocation(line: 1612, column: 24, scope: !6244)
!6247 = !DILocation(line: 1612, column: 13, scope: !6244)
!6248 = !DILocation(line: 1613, column: 9, scope: !6244)
!6249 = !DILocation(line: 1615, column: 24, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6239, file: !805, line: 1613, column: 16)
!6251 = !DILocation(line: 1615, column: 27, scope: !6250)
!6252 = !DILocation(line: 1615, column: 13, scope: !6250)
!6253 = !DILocation(line: 1617, column: 5, scope: !6240)
!6254 = !DILocation(line: 1618, column: 20, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6236, file: !805, line: 1617, column: 12)
!6256 = !DILocation(line: 1618, column: 9, scope: !6255)
!6257 = !DILocation(line: 1620, column: 1, scope: !6140)
!6258 = distinct !DISubprogram(name: "process_stat", scope: !805, file: !805, line: 1021, type: !6141, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6259)
!6259 = !{!6260, !6261, !6262, !6263, !6264, !6265, !6266, !6272, !6273, !6274, !6275, !6281, !6282, !6283, !6286, !6287, !6288, !6289, !6292, !6293, !6294, !6295, !6298, !6301, !6302, !6305}
!6260 = !DILocalVariable(name: "c", arg: 1, scope: !6258, file: !805, line: 1021, type: !296)
!6261 = !DILocalVariable(name: "tokens", arg: 2, scope: !6258, file: !805, line: 1021, type: !5345)
!6262 = !DILocalVariable(name: "ntokens", arg: 3, scope: !6258, file: !805, line: 1021, type: !5346)
!6263 = !DILocalVariable(name: "now", scope: !6258, file: !805, line: 1023, type: !93)
!6264 = !DILocalVariable(name: "command", scope: !6258, file: !805, line: 1025, type: !195)
!6265 = !DILocalVariable(name: "subcommand", scope: !6258, file: !805, line: 1026, type: !195)
!6266 = !DILocalVariable(name: "temp", scope: !6267, file: !805, line: 1038, type: !6269)
!6267 = distinct !DILexicalBlock(scope: !6268, file: !805, line: 1037, column: 56)
!6268 = distinct !DILexicalBlock(scope: !6258, file: !805, line: 1037, column: 9)
!6269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 8192, elements: !6270)
!6270 = !{!6271}
!6271 = !DISubrange(count: 1024)
!6272 = !DILocalVariable(name: "pid", scope: !6267, file: !805, line: 1039, type: !3007)
!6273 = !DILocalVariable(name: "pos", scope: !6267, file: !805, line: 1040, type: !195)
!6274 = !DILocalVariable(name: "usage", scope: !6267, file: !805, line: 1043, type: !654)
!6275 = !DILocalVariable(name: "temp", scope: !6276, file: !805, line: 1090, type: !6278)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !805, line: 1089, column: 44)
!6277 = distinct !DILexicalBlock(scope: !6258, file: !805, line: 1089, column: 9)
!6278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !196, size: 4096, elements: !6279)
!6279 = !{!6280}
!6280 = !DISubrange(count: 512)
!6281 = !DILocalVariable(name: "info", scope: !6276, file: !805, line: 1091, type: !733)
!6282 = !DILocalVariable(name: "pos", scope: !6276, file: !805, line: 1092, type: !195)
!6283 = !DILocalVariable(name: "wbuf", scope: !6284, file: !805, line: 1113, type: !195)
!6284 = distinct !DILexicalBlock(scope: !6285, file: !805, line: 1112, column: 42)
!6285 = distinct !DILexicalBlock(scope: !6258, file: !805, line: 1112, column: 9)
!6286 = !DILocalVariable(name: "wsize", scope: !6284, file: !805, line: 1114, type: !47)
!6287 = !DILocalVariable(name: "fd", scope: !6284, file: !805, line: 1115, type: !47)
!6288 = !DILocalVariable(name: "res", scope: !6284, file: !805, line: 1116, type: !47)
!6289 = !DILocalVariable(name: "buf", scope: !6290, file: !805, line: 1150, type: !195)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !805, line: 1148, column: 47)
!6291 = distinct !DILexicalBlock(scope: !6258, file: !805, line: 1148, column: 9)
!6292 = !DILocalVariable(name: "bytes", scope: !6290, file: !805, line: 1151, type: !7)
!6293 = !DILocalVariable(name: "id", scope: !6290, file: !805, line: 1151, type: !7)
!6294 = !DILocalVariable(name: "limit", scope: !6290, file: !805, line: 1151, type: !7)
!6295 = !DILocalVariable(name: "bytes", scope: !6296, file: !805, line: 1172, type: !47)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !805, line: 1171, column: 43)
!6297 = distinct !DILexicalBlock(scope: !6258, file: !805, line: 1171, column: 9)
!6298 = !DILocalVariable(name: "bytes", scope: !6299, file: !805, line: 1180, type: !47)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !805, line: 1179, column: 43)
!6300 = distinct !DILexicalBlock(scope: !6258, file: !805, line: 1179, column: 9)
!6301 = !DILocalVariable(name: "buf", scope: !6299, file: !805, line: 1181, type: !195)
!6302 = !DILocalVariable(name: "bytes", scope: !6303, file: !805, line: 1198, type: !47)
!6303 = distinct !DILexicalBlock(scope: !6304, file: !805, line: 1197, column: 43)
!6304 = distinct !DILexicalBlock(scope: !6258, file: !805, line: 1197, column: 9)
!6305 = !DILocalVariable(name: "buf", scope: !6303, file: !805, line: 1199, type: !195)
!6306 = !DILocation(line: 1021, column: 32, scope: !6258)
!6307 = !DILocation(line: 1021, column: 44, scope: !6258)
!6308 = !DILocation(line: 1021, column: 65, scope: !6258)
!6309 = !DILocation(line: 1023, column: 5, scope: !6258)
!6310 = !DILocation(line: 1023, column: 16, scope: !6258)
!6311 = !DILocation(line: 1024, column: 11, scope: !6258)
!6312 = !DILocation(line: 1024, column: 9, scope: !6258)
!6313 = !DILocation(line: 1025, column: 5, scope: !6258)
!6314 = !DILocation(line: 1025, column: 11, scope: !6258)
!6315 = !DILocation(line: 1026, column: 5, scope: !6258)
!6316 = !DILocation(line: 1026, column: 11, scope: !6258)
!6317 = !DILocation(line: 1028, column: 5, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !805, line: 1028, column: 5)
!6319 = distinct !DILexicalBlock(scope: !6258, file: !805, line: 1028, column: 5)
!6320 = !DILocation(line: 1028, column: 5, scope: !6319)
!6321 = !DILocation(line: 1030, column: 8, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6258, file: !805, line: 1030, column: 8)
!6323 = !DILocation(line: 1030, column: 16, scope: !6322)
!6324 = !DILocation(line: 1030, column: 8, scope: !6258)
!6325 = !DILocation(line: 1031, column: 20, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6322, file: !805, line: 1030, column: 21)
!6327 = !DILocation(line: 1031, column: 9, scope: !6326)
!6328 = !DILocation(line: 1032, column: 9, scope: !6326)
!6329 = !DILocation(line: 1035, column: 15, scope: !6258)
!6330 = !DILocation(line: 1035, column: 37, scope: !6258)
!6331 = !DILocation(line: 1035, column: 13, scope: !6258)
!6332 = !DILocation(line: 1037, column: 9, scope: !6268)
!6333 = !DILocation(line: 1037, column: 17, scope: !6268)
!6334 = !DILocation(line: 1037, column: 22, scope: !6268)
!6335 = !DILocation(line: 1037, column: 32, scope: !6268)
!6336 = !DILocation(line: 1037, column: 25, scope: !6268)
!6337 = !DILocation(line: 1037, column: 50, scope: !6268)
!6338 = !DILocation(line: 1037, column: 9, scope: !6258)
!6339 = !DILocation(line: 1038, column: 9, scope: !6267)
!6340 = !DILocation(line: 1038, column: 14, scope: !6267)
!6341 = !DILocation(line: 1039, column: 9, scope: !6267)
!6342 = !DILocation(line: 1039, column: 15, scope: !6267)
!6343 = !DILocation(line: 1039, column: 21, scope: !6267)
!6344 = !DILocation(line: 1040, column: 9, scope: !6267)
!6345 = !DILocation(line: 1040, column: 15, scope: !6267)
!6346 = !DILocation(line: 1040, column: 21, scope: !6267)
!6347 = !DILocation(line: 1043, column: 9, scope: !6267)
!6348 = !DILocation(line: 1043, column: 23, scope: !6267)
!6349 = !DILocation(line: 1044, column: 9, scope: !6267)
!6350 = !DILocation(line: 1047, column: 9, scope: !6267)
!6351 = !DILocation(line: 1048, column: 24, scope: !6267)
!6352 = !DILocation(line: 1048, column: 48, scope: !6267)
!6353 = !DILocation(line: 1048, column: 16, scope: !6267)
!6354 = !DILocation(line: 1048, column: 13, scope: !6267)
!6355 = !DILocation(line: 1049, column: 24, scope: !6267)
!6356 = !DILocation(line: 1049, column: 51, scope: !6267)
!6357 = !DILocation(line: 1049, column: 16, scope: !6267)
!6358 = !DILocation(line: 1049, column: 13, scope: !6267)
!6359 = !DILocation(line: 1050, column: 24, scope: !6267)
!6360 = !DILocation(line: 1050, column: 50, scope: !6267)
!6361 = !DILocation(line: 1050, column: 62, scope: !6267)
!6362 = !DILocation(line: 1050, column: 54, scope: !6267)
!6363 = !DILocation(line: 1050, column: 16, scope: !6267)
!6364 = !DILocation(line: 1050, column: 13, scope: !6267)
!6365 = !DILocation(line: 1051, column: 24, scope: !6267)
!6366 = !DILocation(line: 1051, column: 16, scope: !6267)
!6367 = !DILocation(line: 1051, column: 13, scope: !6267)
!6368 = !DILocation(line: 1052, column: 24, scope: !6267)
!6369 = !DILocation(line: 1052, column: 16, scope: !6267)
!6370 = !DILocation(line: 1052, column: 13, scope: !6267)
!6371 = !DILocation(line: 1054, column: 24, scope: !6267)
!6372 = !DILocation(line: 1054, column: 69, scope: !6267)
!6373 = !DILocation(line: 1054, column: 78, scope: !6267)
!6374 = !{!6375, !915, i64 0}
!6375 = !{!"rusage", !1060, i64 0, !1060, i64 16, !916, i64 32, !916, i64 40, !916, i64 48, !916, i64 56, !916, i64 64, !916, i64 72, !916, i64 80, !916, i64 88, !916, i64 96, !916, i64 104, !916, i64 112, !916, i64 120, !916, i64 128, !916, i64 136}
!6376 = !DILocation(line: 1054, column: 92, scope: !6267)
!6377 = !DILocation(line: 1054, column: 101, scope: !6267)
!6378 = !{!6375, !915, i64 8}
!6379 = !DILocation(line: 1054, column: 16, scope: !6267)
!6380 = !DILocation(line: 1054, column: 13, scope: !6267)
!6381 = !DILocation(line: 1055, column: 24, scope: !6267)
!6382 = !DILocation(line: 1055, column: 71, scope: !6267)
!6383 = !DILocation(line: 1055, column: 80, scope: !6267)
!6384 = !{!6375, !915, i64 16}
!6385 = !DILocation(line: 1055, column: 94, scope: !6267)
!6386 = !DILocation(line: 1055, column: 103, scope: !6267)
!6387 = !{!6375, !915, i64 24}
!6388 = !DILocation(line: 1055, column: 16, scope: !6267)
!6389 = !DILocation(line: 1055, column: 13, scope: !6267)
!6390 = !DILocation(line: 1057, column: 24, scope: !6267)
!6391 = !DILocation(line: 1057, column: 61, scope: !6267)
!6392 = !{!933, !934, i64 0}
!6393 = !DILocation(line: 1057, column: 16, scope: !6267)
!6394 = !DILocation(line: 1057, column: 13, scope: !6267)
!6395 = !DILocation(line: 1058, column: 24, scope: !6267)
!6396 = !DILocation(line: 1058, column: 62, scope: !6267)
!6397 = !{!933, !934, i64 4}
!6398 = !DILocation(line: 1058, column: 16, scope: !6267)
!6399 = !DILocation(line: 1058, column: 13, scope: !6267)
!6400 = !DILocation(line: 1059, column: 24, scope: !6267)
!6401 = !DILocation(line: 1059, column: 57, scope: !6267)
!6402 = !{!933, !915, i64 8}
!6403 = !DILocation(line: 1059, column: 16, scope: !6267)
!6404 = !DILocation(line: 1059, column: 13, scope: !6267)
!6405 = !DILocation(line: 1060, column: 24, scope: !6267)
!6406 = !DILocation(line: 1060, column: 67, scope: !6267)
!6407 = !DILocation(line: 1060, column: 78, scope: !6267)
!6408 = !DILocation(line: 1060, column: 16, scope: !6267)
!6409 = !DILocation(line: 1060, column: 13, scope: !6267)
!6410 = !DILocation(line: 1061, column: 24, scope: !6267)
!6411 = !DILocation(line: 1061, column: 68, scope: !6267)
!6412 = !DILocation(line: 1061, column: 16, scope: !6267)
!6413 = !DILocation(line: 1061, column: 13, scope: !6267)
!6414 = !DILocation(line: 1062, column: 24, scope: !6267)
!6415 = !DILocation(line: 1062, column: 72, scope: !6267)
!6416 = !DILocation(line: 1062, column: 16, scope: !6267)
!6417 = !DILocation(line: 1062, column: 13, scope: !6267)
!6418 = !DILocation(line: 1063, column: 24, scope: !6267)
!6419 = !DILocation(line: 1063, column: 59, scope: !6267)
!6420 = !DILocation(line: 1063, column: 16, scope: !6267)
!6421 = !DILocation(line: 1063, column: 13, scope: !6267)
!6422 = !DILocation(line: 1064, column: 24, scope: !6267)
!6423 = !DILocation(line: 1064, column: 59, scope: !6267)
!6424 = !DILocation(line: 1064, column: 16, scope: !6267)
!6425 = !DILocation(line: 1064, column: 13, scope: !6267)
!6426 = !DILocation(line: 1065, column: 24, scope: !6267)
!6427 = !DILocation(line: 1065, column: 60, scope: !6267)
!6428 = !DILocation(line: 1065, column: 16, scope: !6267)
!6429 = !DILocation(line: 1065, column: 13, scope: !6267)
!6430 = !DILocation(line: 1066, column: 24, scope: !6267)
!6431 = !DILocation(line: 1066, column: 62, scope: !6267)
!6432 = !DILocation(line: 1066, column: 16, scope: !6267)
!6433 = !DILocation(line: 1066, column: 13, scope: !6267)
!6434 = !DILocation(line: 1067, column: 24, scope: !6267)
!6435 = !DILocation(line: 1067, column: 61, scope: !6267)
!6436 = !{!933, !915, i64 64}
!6437 = !DILocation(line: 1067, column: 16, scope: !6267)
!6438 = !DILocation(line: 1067, column: 13, scope: !6267)
!6439 = !DILocation(line: 1068, column: 24, scope: !6267)
!6440 = !DILocation(line: 1068, column: 62, scope: !6267)
!6441 = !DILocation(line: 1068, column: 16, scope: !6267)
!6442 = !DILocation(line: 1068, column: 13, scope: !6267)
!6443 = !DILocation(line: 1069, column: 24, scope: !6267)
!6444 = !DILocation(line: 1069, column: 65, scope: !6267)
!6445 = !DILocation(line: 1069, column: 16, scope: !6267)
!6446 = !DILocation(line: 1069, column: 13, scope: !6267)
!6447 = !DILocation(line: 1070, column: 24, scope: !6267)
!6448 = !DILocation(line: 1070, column: 80, scope: !6267)
!6449 = !DILocation(line: 1070, column: 16, scope: !6267)
!6450 = !DILocation(line: 1070, column: 13, scope: !6267)
!6451 = !DILocation(line: 1071, column: 24, scope: !6267)
!6452 = !DILocation(line: 1071, column: 61, scope: !6267)
!6453 = !DILocation(line: 1071, column: 16, scope: !6267)
!6454 = !DILocation(line: 1071, column: 13, scope: !6267)
!6455 = !DILocation(line: 1072, column: 24, scope: !6267)
!6456 = !DILocation(line: 1072, column: 16, scope: !6267)
!6457 = !DILocation(line: 1072, column: 13, scope: !6267)
!6458 = !DILocation(line: 1073, column: 9, scope: !6267)
!6459 = !DILocation(line: 1074, column: 20, scope: !6267)
!6460 = !DILocation(line: 1074, column: 23, scope: !6267)
!6461 = !DILocation(line: 1074, column: 9, scope: !6267)
!6462 = !DILocation(line: 1076, column: 5, scope: !6268)
!6463 = !DILocation(line: 1078, column: 18, scope: !6258)
!6464 = !DILocation(line: 1078, column: 43, scope: !6258)
!6465 = !DILocation(line: 1078, column: 16, scope: !6258)
!6466 = !DILocation(line: 1080, column: 16, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6258, file: !805, line: 1080, column: 9)
!6468 = !DILocation(line: 1080, column: 9, scope: !6467)
!6469 = !DILocation(line: 1080, column: 37, scope: !6467)
!6470 = !DILocation(line: 1080, column: 9, scope: !6258)
!6471 = !DILocation(line: 1081, column: 9, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6473, file: !805, line: 1081, column: 9)
!6473 = distinct !DILexicalBlock(scope: !6474, file: !805, line: 1081, column: 9)
!6474 = distinct !DILexicalBlock(scope: !6467, file: !805, line: 1080, column: 43)
!6475 = !DILocation(line: 1089, column: 16, scope: !6277)
!6476 = !DILocation(line: 1089, column: 9, scope: !6277)
!6477 = !DILocation(line: 1089, column: 38, scope: !6277)
!6478 = !DILocation(line: 1089, column: 9, scope: !6258)
!6479 = !DILocation(line: 1090, column: 9, scope: !6276)
!6480 = !DILocation(line: 1090, column: 14, scope: !6276)
!6481 = !DILocation(line: 1091, column: 9, scope: !6276)
!6482 = !DILocation(line: 1091, column: 25, scope: !6276)
!6483 = !DILocation(line: 1092, column: 9, scope: !6276)
!6484 = !DILocation(line: 1092, column: 15, scope: !6276)
!6485 = !DILocation(line: 1092, column: 21, scope: !6276)
!6486 = !DILocation(line: 1094, column: 16, scope: !6276)
!6487 = !{i64 0, i64 4, !946, i64 4, i64 4, !946, i64 8, i64 4, !946, i64 12, i64 4, !946, i64 16, i64 4, !946, i64 20, i64 4, !946, i64 24, i64 4, !946, i64 28, i64 4, !946, i64 32, i64 4, !946, i64 36, i64 4, !946}
!6488 = !DILocation(line: 1095, column: 24, scope: !6276)
!6489 = !DILocation(line: 1095, column: 60, scope: !6276)
!6490 = !{!6491, !934, i64 0}
!6491 = !{!"mallinfo", !934, i64 0, !934, i64 4, !934, i64 8, !934, i64 12, !934, i64 16, !934, i64 20, !934, i64 24, !934, i64 28, !934, i64 32, !934, i64 36}
!6492 = !DILocation(line: 1095, column: 16, scope: !6276)
!6493 = !DILocation(line: 1095, column: 13, scope: !6276)
!6494 = !DILocation(line: 1096, column: 24, scope: !6276)
!6495 = !DILocation(line: 1096, column: 61, scope: !6276)
!6496 = !{!6491, !934, i64 4}
!6497 = !DILocation(line: 1096, column: 16, scope: !6276)
!6498 = !DILocation(line: 1096, column: 13, scope: !6276)
!6499 = !DILocation(line: 1097, column: 24, scope: !6276)
!6500 = !DILocation(line: 1097, column: 64, scope: !6276)
!6501 = !{!6491, !934, i64 8}
!6502 = !DILocation(line: 1097, column: 16, scope: !6276)
!6503 = !DILocation(line: 1097, column: 13, scope: !6276)
!6504 = !DILocation(line: 1098, column: 24, scope: !6276)
!6505 = !DILocation(line: 1098, column: 65, scope: !6276)
!6506 = !{!6491, !934, i64 12}
!6507 = !DILocation(line: 1098, column: 16, scope: !6276)
!6508 = !DILocation(line: 1098, column: 13, scope: !6276)
!6509 = !DILocation(line: 1099, column: 24, scope: !6276)
!6510 = !DILocation(line: 1099, column: 63, scope: !6276)
!6511 = !{!6491, !934, i64 16}
!6512 = !DILocation(line: 1099, column: 16, scope: !6276)
!6513 = !DILocation(line: 1099, column: 13, scope: !6276)
!6514 = !DILocation(line: 1100, column: 24, scope: !6276)
!6515 = !DILocation(line: 1100, column: 65, scope: !6276)
!6516 = !{!6491, !934, i64 20}
!6517 = !DILocation(line: 1100, column: 16, scope: !6276)
!6518 = !DILocation(line: 1100, column: 13, scope: !6276)
!6519 = !DILocation(line: 1101, column: 24, scope: !6276)
!6520 = !DILocation(line: 1101, column: 63, scope: !6276)
!6521 = !{!6491, !934, i64 24}
!6522 = !DILocation(line: 1101, column: 16, scope: !6276)
!6523 = !DILocation(line: 1101, column: 13, scope: !6276)
!6524 = !DILocation(line: 1102, column: 24, scope: !6276)
!6525 = !DILocation(line: 1102, column: 61, scope: !6276)
!6526 = !{!6491, !934, i64 28}
!6527 = !DILocation(line: 1102, column: 16, scope: !6276)
!6528 = !DILocation(line: 1102, column: 13, scope: !6276)
!6529 = !DILocation(line: 1103, column: 24, scope: !6276)
!6530 = !DILocation(line: 1103, column: 60, scope: !6276)
!6531 = !{!6491, !934, i64 32}
!6532 = !DILocation(line: 1103, column: 16, scope: !6276)
!6533 = !DILocation(line: 1103, column: 13, scope: !6276)
!6534 = !DILocation(line: 1104, column: 24, scope: !6276)
!6535 = !DILocation(line: 1104, column: 69, scope: !6276)
!6536 = !{!6491, !934, i64 36}
!6537 = !DILocation(line: 1104, column: 16, scope: !6276)
!6538 = !DILocation(line: 1104, column: 13, scope: !6276)
!6539 = !DILocation(line: 1105, column: 20, scope: !6276)
!6540 = !DILocation(line: 1105, column: 23, scope: !6276)
!6541 = !DILocation(line: 1105, column: 9, scope: !6276)
!6542 = !DILocation(line: 1107, column: 5, scope: !6277)
!6543 = !DILocation(line: 1112, column: 16, scope: !6285)
!6544 = !DILocation(line: 1112, column: 9, scope: !6285)
!6545 = !DILocation(line: 1112, column: 36, scope: !6285)
!6546 = !DILocation(line: 1112, column: 9, scope: !6258)
!6547 = !DILocation(line: 1113, column: 9, scope: !6284)
!6548 = !DILocation(line: 1113, column: 15, scope: !6284)
!6549 = !DILocation(line: 1114, column: 9, scope: !6284)
!6550 = !DILocation(line: 1114, column: 13, scope: !6284)
!6551 = !DILocation(line: 1115, column: 9, scope: !6284)
!6552 = !DILocation(line: 1115, column: 13, scope: !6284)
!6553 = !DILocation(line: 1116, column: 9, scope: !6284)
!6554 = !DILocation(line: 1116, column: 13, scope: !6284)
!6555 = !DILocation(line: 1118, column: 36, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6284, file: !805, line: 1118, column: 13)
!6557 = !DILocation(line: 1118, column: 29, scope: !6556)
!6558 = !DILocation(line: 1118, column: 19, scope: !6556)
!6559 = !DILocation(line: 1118, column: 44, scope: !6556)
!6560 = !DILocation(line: 1118, column: 13, scope: !6284)
!6561 = !DILocation(line: 1119, column: 24, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6556, file: !805, line: 1118, column: 53)
!6563 = !DILocation(line: 1119, column: 13, scope: !6562)
!6564 = !DILocation(line: 1120, column: 13, scope: !6562)
!6565 = !DILocation(line: 1123, column: 14, scope: !6284)
!6566 = !DILocation(line: 1123, column: 12, scope: !6284)
!6567 = !DILocation(line: 1124, column: 13, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6284, file: !805, line: 1124, column: 13)
!6569 = !DILocation(line: 1124, column: 16, scope: !6568)
!6570 = !DILocation(line: 1124, column: 13, scope: !6284)
!6571 = !DILocation(line: 1125, column: 24, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6568, file: !805, line: 1124, column: 23)
!6573 = !DILocation(line: 1125, column: 13, scope: !6572)
!6574 = !DILocation(line: 1126, column: 18, scope: !6572)
!6575 = !DILocation(line: 1126, column: 13, scope: !6572)
!6576 = !DILocation(line: 1127, column: 13, scope: !6572)
!6577 = !DILocation(line: 1130, column: 20, scope: !6284)
!6578 = !DILocation(line: 1130, column: 24, scope: !6284)
!6579 = !DILocation(line: 1130, column: 30, scope: !6284)
!6580 = !DILocation(line: 1130, column: 36, scope: !6284)
!6581 = !DILocation(line: 1130, column: 15, scope: !6284)
!6582 = !DILocation(line: 1130, column: 13, scope: !6284)
!6583 = !DILocation(line: 1131, column: 13, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6284, file: !805, line: 1131, column: 13)
!6585 = !DILocation(line: 1131, column: 20, scope: !6584)
!6586 = !DILocation(line: 1131, column: 26, scope: !6584)
!6587 = !DILocation(line: 1131, column: 17, scope: !6584)
!6588 = !DILocation(line: 1131, column: 13, scope: !6284)
!6589 = !DILocation(line: 1132, column: 24, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6584, file: !805, line: 1131, column: 31)
!6591 = !DILocation(line: 1132, column: 13, scope: !6590)
!6592 = !DILocation(line: 1133, column: 18, scope: !6590)
!6593 = !DILocation(line: 1133, column: 13, scope: !6590)
!6594 = !DILocation(line: 1133, column: 31, scope: !6590)
!6595 = !DILocation(line: 1133, column: 25, scope: !6590)
!6596 = !DILocation(line: 1134, column: 13, scope: !6590)
!6597 = !DILocation(line: 1136, column: 13, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6284, file: !805, line: 1136, column: 13)
!6599 = !DILocation(line: 1136, column: 17, scope: !6598)
!6600 = !DILocation(line: 1136, column: 22, scope: !6598)
!6601 = !DILocation(line: 1136, column: 25, scope: !6598)
!6602 = !DILocation(line: 1136, column: 29, scope: !6598)
!6603 = !DILocation(line: 1136, column: 13, scope: !6284)
!6604 = !DILocation(line: 1137, column: 24, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6598, file: !805, line: 1136, column: 36)
!6606 = !DILocation(line: 1137, column: 13, scope: !6605)
!6607 = !DILocation(line: 1138, column: 18, scope: !6605)
!6608 = !DILocation(line: 1138, column: 13, scope: !6605)
!6609 = !DILocation(line: 1138, column: 31, scope: !6605)
!6610 = !DILocation(line: 1138, column: 25, scope: !6605)
!6611 = !DILocation(line: 1139, column: 13, scope: !6605)
!6612 = !DILocation(line: 1141, column: 16, scope: !6284)
!6613 = !DILocation(line: 1141, column: 23, scope: !6284)
!6614 = !DILocation(line: 1141, column: 21, scope: !6284)
!6615 = !DILocation(line: 1141, column: 9, scope: !6284)
!6616 = !DILocation(line: 1142, column: 24, scope: !6284)
!6617 = !DILocation(line: 1142, column: 27, scope: !6284)
!6618 = !DILocation(line: 1142, column: 33, scope: !6284)
!6619 = !DILocation(line: 1142, column: 37, scope: !6284)
!6620 = !DILocation(line: 1142, column: 9, scope: !6284)
!6621 = !DILocation(line: 1143, column: 15, scope: !6284)
!6622 = !DILocation(line: 1143, column: 9, scope: !6284)
!6623 = !DILocation(line: 1144, column: 9, scope: !6284)
!6624 = !DILocation(line: 1145, column: 5, scope: !6285)
!6625 = !DILocation(line: 1148, column: 16, scope: !6291)
!6626 = !DILocation(line: 1148, column: 9, scope: !6291)
!6627 = !DILocation(line: 1148, column: 41, scope: !6291)
!6628 = !DILocation(line: 1148, column: 9, scope: !6258)
!6629 = !DILocation(line: 1150, column: 9, scope: !6290)
!6630 = !DILocation(line: 1150, column: 15, scope: !6290)
!6631 = !DILocation(line: 1151, column: 9, scope: !6290)
!6632 = !DILocation(line: 1151, column: 22, scope: !6290)
!6633 = !DILocation(line: 1151, column: 29, scope: !6290)
!6634 = !DILocation(line: 1151, column: 33, scope: !6290)
!6635 = !DILocation(line: 1153, column: 12, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6290, file: !805, line: 1153, column: 12)
!6637 = !DILocation(line: 1153, column: 20, scope: !6636)
!6638 = !DILocation(line: 1153, column: 12, scope: !6290)
!6639 = !DILocation(line: 1154, column: 24, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6636, file: !805, line: 1153, column: 25)
!6641 = !DILocation(line: 1154, column: 13, scope: !6640)
!6642 = !DILocation(line: 1155, column: 13, scope: !6640)
!6643 = !DILocation(line: 1158, column: 22, scope: !6290)
!6644 = !DILocation(line: 1158, column: 32, scope: !6290)
!6645 = !DILocation(line: 1158, column: 14, scope: !6290)
!6646 = !DILocation(line: 1158, column: 12, scope: !6290)
!6647 = !DILocation(line: 1159, column: 25, scope: !6290)
!6648 = !DILocation(line: 1159, column: 35, scope: !6290)
!6649 = !DILocation(line: 1159, column: 17, scope: !6290)
!6650 = !DILocation(line: 1159, column: 15, scope: !6290)
!6651 = !DILocation(line: 1161, column: 12, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6290, file: !805, line: 1161, column: 12)
!6653 = !DILocation(line: 1161, column: 18, scope: !6652)
!6654 = !DILocation(line: 1161, column: 12, scope: !6290)
!6655 = !DILocation(line: 1162, column: 24, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6652, file: !805, line: 1161, column: 29)
!6657 = !DILocation(line: 1162, column: 13, scope: !6656)
!6658 = !DILocation(line: 1163, column: 13, scope: !6656)
!6659 = !DILocation(line: 1166, column: 15, scope: !6290)
!6660 = !DILocation(line: 1166, column: 13, scope: !6290)
!6661 = !DILocation(line: 1167, column: 24, scope: !6290)
!6662 = !DILocation(line: 1167, column: 27, scope: !6290)
!6663 = !DILocation(line: 1167, column: 32, scope: !6290)
!6664 = !DILocation(line: 1167, column: 9, scope: !6290)
!6665 = !DILocation(line: 1168, column: 9, scope: !6290)
!6666 = !DILocation(line: 1169, column: 5, scope: !6291)
!6667 = !DILocation(line: 1171, column: 16, scope: !6297)
!6668 = !DILocation(line: 1171, column: 9, scope: !6297)
!6669 = !DILocation(line: 1171, column: 37, scope: !6297)
!6670 = !DILocation(line: 1171, column: 9, scope: !6258)
!6671 = !DILocation(line: 1172, column: 9, scope: !6296)
!6672 = !DILocation(line: 1172, column: 13, scope: !6296)
!6673 = !DILocation(line: 1173, column: 9, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6675, file: !805, line: 1173, column: 9)
!6675 = distinct !DILexicalBlock(scope: !6296, file: !805, line: 1173, column: 9)
!6676 = !DILocation(line: 1179, column: 16, scope: !6300)
!6677 = !DILocation(line: 1179, column: 9, scope: !6300)
!6678 = !DILocation(line: 1179, column: 37, scope: !6300)
!6679 = !DILocation(line: 1179, column: 9, scope: !6258)
!6680 = !DILocation(line: 1180, column: 9, scope: !6299)
!6681 = !DILocation(line: 1180, column: 13, scope: !6299)
!6682 = !DILocation(line: 1181, column: 9, scope: !6299)
!6683 = !DILocation(line: 1181, column: 15, scope: !6299)
!6684 = !DILocation(line: 1181, column: 21, scope: !6299)
!6685 = !DILocation(line: 1182, column: 24, scope: !6299)
!6686 = !DILocation(line: 1182, column: 27, scope: !6299)
!6687 = !DILocation(line: 1182, column: 32, scope: !6299)
!6688 = !DILocation(line: 1182, column: 9, scope: !6299)
!6689 = !DILocation(line: 1184, column: 5, scope: !6300)
!6690 = !DILocation(line: 1186, column: 16, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6258, file: !805, line: 1186, column: 9)
!6692 = !DILocation(line: 1186, column: 9, scope: !6691)
!6693 = !DILocation(line: 1186, column: 38, scope: !6691)
!6694 = !DILocation(line: 1186, column: 9, scope: !6258)
!6695 = !DILocation(line: 1187, column: 9, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6697, file: !805, line: 1187, column: 9)
!6697 = distinct !DILexicalBlock(scope: !6698, file: !805, line: 1187, column: 9)
!6698 = distinct !DILexicalBlock(scope: !6691, file: !805, line: 1186, column: 44)
!6699 = !DILocation(line: 1197, column: 16, scope: !6304)
!6700 = !DILocation(line: 1197, column: 9, scope: !6304)
!6701 = !DILocation(line: 1197, column: 37, scope: !6304)
!6702 = !DILocation(line: 1197, column: 9, scope: !6258)
!6703 = !DILocation(line: 1198, column: 9, scope: !6303)
!6704 = !DILocation(line: 1198, column: 13, scope: !6303)
!6705 = !DILocation(line: 1199, column: 9, scope: !6303)
!6706 = !DILocation(line: 1199, column: 15, scope: !6303)
!6707 = !DILocation(line: 1199, column: 21, scope: !6303)
!6708 = !DILocation(line: 1200, column: 24, scope: !6303)
!6709 = !DILocation(line: 1200, column: 27, scope: !6303)
!6710 = !DILocation(line: 1200, column: 32, scope: !6303)
!6711 = !DILocation(line: 1200, column: 9, scope: !6303)
!6712 = !DILocation(line: 1202, column: 5, scope: !6304)
!6713 = !DILocation(line: 1204, column: 16, scope: !6258)
!6714 = !DILocation(line: 1204, column: 5, scope: !6258)
!6715 = !DILocation(line: 1205, column: 1, scope: !6258)
!6716 = distinct !DISubprogram(name: "set_current_time", scope: !805, file: !805, line: 2603, type: !309, scopeLine: 2603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !295)
!6717 = !DILocation(line: 2605, column: 34, scope: !6716)
!6718 = !DILocation(line: 2605, column: 50, scope: !6716)
!6719 = !DILocation(line: 2605, column: 42, scope: !6716)
!6720 = !DILocation(line: 2605, column: 20, scope: !6716)
!6721 = !DILocation(line: 2605, column: 18, scope: !6716)
!6722 = !DILocation(line: 2607, column: 1, scope: !6716)
!6723 = distinct !DISubprogram(name: "process_verbosity_command", scope: !805, file: !805, line: 1653, type: !6141, scopeLine: 1653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6724)
!6724 = !{!6725, !6726, !6727, !6728}
!6725 = !DILocalVariable(name: "c", arg: 1, scope: !6723, file: !805, line: 1653, type: !296)
!6726 = !DILocalVariable(name: "tokens", arg: 2, scope: !6723, file: !805, line: 1653, type: !5345)
!6727 = !DILocalVariable(name: "ntokens", arg: 3, scope: !6723, file: !805, line: 1653, type: !5346)
!6728 = !DILocalVariable(name: "level", scope: !6723, file: !805, line: 1654, type: !7)
!6729 = !DILocation(line: 1653, column: 45, scope: !6723)
!6730 = !DILocation(line: 1653, column: 57, scope: !6723)
!6731 = !DILocation(line: 1653, column: 78, scope: !6723)
!6732 = !DILocation(line: 1654, column: 5, scope: !6723)
!6733 = !DILocation(line: 1654, column: 18, scope: !6723)
!6734 = !DILocation(line: 1656, column: 5, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !805, line: 1656, column: 5)
!6736 = distinct !DILexicalBlock(scope: !6723, file: !805, line: 1656, column: 5)
!6737 = !DILocation(line: 1656, column: 5, scope: !6736)
!6738 = !DILocation(line: 1658, column: 21, scope: !6723)
!6739 = !DILocation(line: 1658, column: 31, scope: !6723)
!6740 = !DILocation(line: 1658, column: 13, scope: !6723)
!6741 = !DILocation(line: 1658, column: 11, scope: !6723)
!6742 = !DILocation(line: 1659, column: 24, scope: !6723)
!6743 = !DILocation(line: 1659, column: 30, scope: !6723)
!6744 = !DILocation(line: 1659, column: 76, scope: !6723)
!6745 = !DILocation(line: 1659, column: 22, scope: !6723)
!6746 = !DILocation(line: 1660, column: 16, scope: !6723)
!6747 = !DILocation(line: 1660, column: 5, scope: !6723)
!6748 = !DILocation(line: 1662, column: 1, scope: !6723)
!6749 = distinct !DISubprogram(name: "write_and_free", scope: !805, file: !805, line: 987, type: !6750, scopeLine: 987, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6752)
!6750 = !DISubroutineType(types: !6751)
!6751 = !{null, !296, !195, !47}
!6752 = !{!6753, !6754, !6755}
!6753 = !DILocalVariable(name: "c", arg: 1, scope: !6749, file: !805, line: 987, type: !296)
!6754 = !DILocalVariable(name: "buf", arg: 2, scope: !6749, file: !805, line: 987, type: !195)
!6755 = !DILocalVariable(name: "bytes", arg: 3, scope: !6749, file: !805, line: 987, type: !47)
!6756 = !DILocation(line: 987, column: 34, scope: !6749)
!6757 = !DILocation(line: 987, column: 43, scope: !6749)
!6758 = !DILocation(line: 987, column: 52, scope: !6749)
!6759 = !DILocation(line: 988, column: 9, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6749, file: !805, line: 988, column: 9)
!6761 = !DILocation(line: 988, column: 9, scope: !6749)
!6762 = !DILocation(line: 989, column: 29, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6760, file: !805, line: 988, column: 14)
!6764 = !DILocation(line: 989, column: 9, scope: !6763)
!6765 = !DILocation(line: 989, column: 12, scope: !6763)
!6766 = !DILocation(line: 989, column: 27, scope: !6763)
!6767 = !DILocation(line: 990, column: 20, scope: !6763)
!6768 = !DILocation(line: 990, column: 9, scope: !6763)
!6769 = !DILocation(line: 990, column: 12, scope: !6763)
!6770 = !DILocation(line: 990, column: 18, scope: !6763)
!6771 = !DILocation(line: 991, column: 21, scope: !6763)
!6772 = !DILocation(line: 991, column: 9, scope: !6763)
!6773 = !DILocation(line: 991, column: 12, scope: !6763)
!6774 = !DILocation(line: 991, column: 19, scope: !6763)
!6775 = !DILocation(line: 992, column: 24, scope: !6763)
!6776 = !DILocation(line: 992, column: 9, scope: !6763)
!6777 = !DILocation(line: 993, column: 9, scope: !6763)
!6778 = !DILocation(line: 993, column: 12, scope: !6763)
!6779 = !DILocation(line: 993, column: 25, scope: !6763)
!6780 = !DILocation(line: 994, column: 5, scope: !6763)
!6781 = !DILocation(line: 995, column: 20, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6760, file: !805, line: 994, column: 12)
!6783 = !DILocation(line: 995, column: 9, scope: !6782)
!6784 = !DILocation(line: 997, column: 1, scope: !6749)
!6785 = distinct !DISubprogram(name: "conn_shrink", scope: !805, file: !805, line: 498, type: !1451, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6786)
!6786 = !{!6787, !6788, !6791, !6794, !6797}
!6787 = !DILocalVariable(name: "c", arg: 1, scope: !6785, file: !805, line: 498, type: !296)
!6788 = !DILocalVariable(name: "newbuf", scope: !6789, file: !805, line: 505, type: !195)
!6789 = distinct !DILexicalBlock(scope: !6790, file: !805, line: 504, column: 73)
!6790 = distinct !DILexicalBlock(scope: !6785, file: !805, line: 504, column: 9)
!6791 = !DILocalVariable(name: "newbuf", scope: !6792, file: !805, line: 521, type: !242)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !805, line: 520, column: 39)
!6793 = distinct !DILexicalBlock(scope: !6785, file: !805, line: 520, column: 9)
!6794 = !DILocalVariable(name: "newbuf", scope: !6795, file: !805, line: 530, type: !224)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !805, line: 529, column: 40)
!6796 = distinct !DILexicalBlock(scope: !6785, file: !805, line: 529, column: 9)
!6797 = !DILocalVariable(name: "newbuf", scope: !6798, file: !805, line: 539, type: !212)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !805, line: 538, column: 40)
!6799 = distinct !DILexicalBlock(scope: !6785, file: !805, line: 538, column: 9)
!6800 = !DILocation(line: 498, column: 31, scope: !6785)
!6801 = !DILocation(line: 499, column: 5, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !805, line: 499, column: 5)
!6803 = distinct !DILexicalBlock(scope: !6785, file: !805, line: 499, column: 5)
!6804 = !DILocation(line: 499, column: 5, scope: !6803)
!6805 = !DILocation(line: 501, column: 9, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6785, file: !805, line: 501, column: 9)
!6807 = !DILocation(line: 501, column: 12, scope: !6806)
!6808 = !DILocation(line: 501, column: 9, scope: !6785)
!6809 = !DILocation(line: 502, column: 9, scope: !6806)
!6810 = !DILocation(line: 504, column: 9, scope: !6790)
!6811 = !DILocation(line: 504, column: 12, scope: !6790)
!6812 = !DILocation(line: 504, column: 18, scope: !6790)
!6813 = !DILocation(line: 504, column: 40, scope: !6790)
!6814 = !DILocation(line: 504, column: 43, scope: !6790)
!6815 = !DILocation(line: 504, column: 46, scope: !6790)
!6816 = !DILocation(line: 504, column: 53, scope: !6790)
!6817 = !DILocation(line: 504, column: 9, scope: !6785)
!6818 = !DILocation(line: 505, column: 9, scope: !6789)
!6819 = !DILocation(line: 505, column: 15, scope: !6789)
!6820 = !DILocation(line: 507, column: 13, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6789, file: !805, line: 507, column: 13)
!6822 = !DILocation(line: 507, column: 16, scope: !6821)
!6823 = !DILocation(line: 507, column: 25, scope: !6821)
!6824 = !DILocation(line: 507, column: 28, scope: !6821)
!6825 = !DILocation(line: 507, column: 22, scope: !6821)
!6826 = !DILocation(line: 507, column: 13, scope: !6789)
!6827 = !DILocation(line: 508, column: 21, scope: !6821)
!6828 = !DILocation(line: 508, column: 24, scope: !6821)
!6829 = !DILocation(line: 508, column: 30, scope: !6821)
!6830 = !DILocation(line: 508, column: 33, scope: !6821)
!6831 = !DILocation(line: 508, column: 48, scope: !6821)
!6832 = !DILocation(line: 508, column: 51, scope: !6821)
!6833 = !DILocation(line: 508, column: 40, scope: !6821)
!6834 = !DILocation(line: 508, column: 13, scope: !6821)
!6835 = !DILocation(line: 510, column: 42, scope: !6789)
!6836 = !DILocation(line: 510, column: 45, scope: !6789)
!6837 = !DILocation(line: 510, column: 26, scope: !6789)
!6838 = !DILocation(line: 510, column: 16, scope: !6789)
!6839 = !DILocation(line: 512, column: 13, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6789, file: !805, line: 512, column: 13)
!6841 = !DILocation(line: 512, column: 13, scope: !6789)
!6842 = !DILocation(line: 513, column: 23, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6840, file: !805, line: 512, column: 21)
!6844 = !DILocation(line: 513, column: 13, scope: !6843)
!6845 = !DILocation(line: 513, column: 16, scope: !6843)
!6846 = !DILocation(line: 513, column: 21, scope: !6843)
!6847 = !DILocation(line: 514, column: 13, scope: !6843)
!6848 = !DILocation(line: 514, column: 16, scope: !6843)
!6849 = !DILocation(line: 514, column: 22, scope: !6843)
!6850 = !DILocation(line: 515, column: 9, scope: !6843)
!6851 = !DILocation(line: 517, column: 20, scope: !6789)
!6852 = !DILocation(line: 517, column: 23, scope: !6789)
!6853 = !DILocation(line: 517, column: 9, scope: !6789)
!6854 = !DILocation(line: 517, column: 12, scope: !6789)
!6855 = !DILocation(line: 517, column: 18, scope: !6789)
!6856 = !DILocation(line: 518, column: 5, scope: !6790)
!6857 = !DILocation(line: 518, column: 5, scope: !6789)
!6858 = !DILocation(line: 520, column: 9, scope: !6793)
!6859 = !DILocation(line: 520, column: 12, scope: !6793)
!6860 = !DILocation(line: 520, column: 18, scope: !6793)
!6861 = !DILocation(line: 520, column: 9, scope: !6785)
!6862 = !DILocation(line: 521, column: 9, scope: !6792)
!6863 = !DILocation(line: 521, column: 16, scope: !6792)
!6864 = !DILocation(line: 521, column: 50, scope: !6792)
!6865 = !DILocation(line: 521, column: 53, scope: !6792)
!6866 = !DILocation(line: 521, column: 42, scope: !6792)
!6867 = !DILocation(line: 521, column: 34, scope: !6792)
!6868 = !DILocation(line: 521, column: 25, scope: !6792)
!6869 = !DILocation(line: 522, column: 13, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6792, file: !805, line: 522, column: 13)
!6871 = !DILocation(line: 522, column: 13, scope: !6792)
!6872 = !DILocation(line: 523, column: 24, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6870, file: !805, line: 522, column: 21)
!6874 = !DILocation(line: 523, column: 13, scope: !6873)
!6875 = !DILocation(line: 523, column: 16, scope: !6873)
!6876 = !DILocation(line: 523, column: 22, scope: !6873)
!6877 = !DILocation(line: 524, column: 13, scope: !6873)
!6878 = !DILocation(line: 524, column: 16, scope: !6873)
!6879 = !DILocation(line: 524, column: 22, scope: !6873)
!6880 = !DILocation(line: 525, column: 9, scope: !6873)
!6881 = !DILocation(line: 527, column: 5, scope: !6793)
!6882 = !DILocation(line: 527, column: 5, scope: !6792)
!6883 = !DILocation(line: 529, column: 9, scope: !6796)
!6884 = !DILocation(line: 529, column: 12, scope: !6796)
!6885 = !DILocation(line: 529, column: 20, scope: !6796)
!6886 = !DILocation(line: 529, column: 9, scope: !6785)
!6887 = !DILocation(line: 530, column: 9, scope: !6795)
!6888 = !DILocation(line: 530, column: 24, scope: !6795)
!6889 = !DILocation(line: 530, column: 67, scope: !6795)
!6890 = !DILocation(line: 530, column: 70, scope: !6795)
!6891 = !DILocation(line: 530, column: 59, scope: !6795)
!6892 = !DILocation(line: 530, column: 51, scope: !6795)
!6893 = !DILocation(line: 530, column: 33, scope: !6795)
!6894 = !DILocation(line: 531, column: 13, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6795, file: !805, line: 531, column: 13)
!6896 = !DILocation(line: 531, column: 13, scope: !6795)
!6897 = !DILocation(line: 532, column: 26, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6895, file: !805, line: 531, column: 21)
!6899 = !DILocation(line: 532, column: 13, scope: !6898)
!6900 = !DILocation(line: 532, column: 16, scope: !6898)
!6901 = !DILocation(line: 532, column: 24, scope: !6898)
!6902 = !DILocation(line: 533, column: 13, scope: !6898)
!6903 = !DILocation(line: 533, column: 16, scope: !6898)
!6904 = !DILocation(line: 533, column: 24, scope: !6898)
!6905 = !DILocation(line: 534, column: 9, scope: !6898)
!6906 = !DILocation(line: 536, column: 5, scope: !6796)
!6907 = !DILocation(line: 536, column: 5, scope: !6795)
!6908 = !DILocation(line: 538, column: 9, scope: !6799)
!6909 = !DILocation(line: 538, column: 12, scope: !6799)
!6910 = !DILocation(line: 538, column: 20, scope: !6799)
!6911 = !DILocation(line: 538, column: 9, scope: !6785)
!6912 = !DILocation(line: 539, column: 9, scope: !6798)
!6913 = !DILocation(line: 539, column: 23, scope: !6798)
!6914 = !DILocation(line: 539, column: 65, scope: !6798)
!6915 = !DILocation(line: 539, column: 68, scope: !6798)
!6916 = !DILocation(line: 539, column: 57, scope: !6798)
!6917 = !DILocation(line: 539, column: 49, scope: !6798)
!6918 = !DILocation(line: 539, column: 32, scope: !6798)
!6919 = !DILocation(line: 540, column: 13, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6798, file: !805, line: 540, column: 13)
!6921 = !DILocation(line: 540, column: 13, scope: !6798)
!6922 = !DILocation(line: 541, column: 22, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6920, file: !805, line: 540, column: 21)
!6924 = !DILocation(line: 541, column: 13, scope: !6923)
!6925 = !DILocation(line: 541, column: 16, scope: !6923)
!6926 = !DILocation(line: 541, column: 20, scope: !6923)
!6927 = !DILocation(line: 542, column: 13, scope: !6923)
!6928 = !DILocation(line: 542, column: 16, scope: !6923)
!6929 = !DILocation(line: 542, column: 24, scope: !6923)
!6930 = !DILocation(line: 543, column: 9, scope: !6923)
!6931 = !DILocation(line: 545, column: 5, scope: !6799)
!6932 = !DILocation(line: 545, column: 5, scope: !6798)
!6933 = !DILocation(line: 546, column: 1, scope: !6785)
!6934 = distinct !DISubprogram(name: "ensure_iov_space", scope: !805, file: !805, line: 629, type: !3853, scopeLine: 629, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6935)
!6935 = !{!6936, !6937, !6940, !6941}
!6936 = !DILocalVariable(name: "c", arg: 1, scope: !6934, file: !805, line: 629, type: !296)
!6937 = !DILocalVariable(name: "i", scope: !6938, file: !805, line: 633, type: !47)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !805, line: 632, column: 35)
!6939 = distinct !DILexicalBlock(scope: !6934, file: !805, line: 632, column: 9)
!6940 = !DILocalVariable(name: "iovnum", scope: !6938, file: !805, line: 633, type: !47)
!6941 = !DILocalVariable(name: "new_iov", scope: !6938, file: !805, line: 634, type: !212)
!6942 = !DILocation(line: 629, column: 35, scope: !6934)
!6943 = !DILocation(line: 630, column: 5, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !805, line: 630, column: 5)
!6945 = distinct !DILexicalBlock(scope: !6934, file: !805, line: 630, column: 5)
!6946 = !DILocation(line: 630, column: 5, scope: !6945)
!6947 = !DILocation(line: 632, column: 9, scope: !6939)
!6948 = !DILocation(line: 632, column: 12, scope: !6939)
!6949 = !DILocation(line: 632, column: 23, scope: !6939)
!6950 = !DILocation(line: 632, column: 26, scope: !6939)
!6951 = !DILocation(line: 632, column: 20, scope: !6939)
!6952 = !DILocation(line: 632, column: 9, scope: !6934)
!6953 = !DILocation(line: 633, column: 9, scope: !6938)
!6954 = !DILocation(line: 633, column: 13, scope: !6938)
!6955 = !DILocation(line: 633, column: 16, scope: !6938)
!6956 = !DILocation(line: 634, column: 9, scope: !6938)
!6957 = !DILocation(line: 634, column: 23, scope: !6938)
!6958 = !DILocation(line: 634, column: 57, scope: !6938)
!6959 = !DILocation(line: 634, column: 60, scope: !6938)
!6960 = !DILocation(line: 635, column: 34, scope: !6938)
!6961 = !DILocation(line: 635, column: 37, scope: !6938)
!6962 = !DILocation(line: 635, column: 45, scope: !6938)
!6963 = !DILocation(line: 635, column: 33, scope: !6938)
!6964 = !DILocation(line: 635, column: 50, scope: !6938)
!6965 = !DILocation(line: 634, column: 49, scope: !6938)
!6966 = !DILocation(line: 634, column: 33, scope: !6938)
!6967 = !DILocation(line: 636, column: 15, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6938, file: !805, line: 636, column: 13)
!6969 = !DILocation(line: 636, column: 13, scope: !6938)
!6970 = !DILocation(line: 637, column: 13, scope: !6968)
!6971 = !DILocation(line: 638, column: 18, scope: !6938)
!6972 = !DILocation(line: 638, column: 9, scope: !6938)
!6973 = !DILocation(line: 638, column: 12, scope: !6938)
!6974 = !DILocation(line: 638, column: 16, scope: !6938)
!6975 = !DILocation(line: 639, column: 9, scope: !6938)
!6976 = !DILocation(line: 639, column: 12, scope: !6938)
!6977 = !DILocation(line: 639, column: 20, scope: !6938)
!6978 = !DILocation(line: 642, column: 16, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6938, file: !805, line: 642, column: 9)
!6980 = !DILocation(line: 642, column: 28, scope: !6979)
!6981 = !DILocation(line: 642, column: 14, scope: !6979)
!6982 = !DILocation(line: 642, column: 33, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6979, file: !805, line: 642, column: 9)
!6984 = !DILocation(line: 642, column: 37, scope: !6983)
!6985 = !DILocation(line: 642, column: 40, scope: !6983)
!6986 = !DILocation(line: 642, column: 35, scope: !6983)
!6987 = !DILocation(line: 642, column: 9, scope: !6979)
!6988 = !DILocation(line: 643, column: 38, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6983, file: !805, line: 642, column: 54)
!6990 = !DILocation(line: 643, column: 41, scope: !6989)
!6991 = !DILocation(line: 643, column: 45, scope: !6989)
!6992 = !DILocation(line: 643, column: 13, scope: !6989)
!6993 = !DILocation(line: 643, column: 16, scope: !6989)
!6994 = !DILocation(line: 643, column: 24, scope: !6989)
!6995 = !DILocation(line: 643, column: 27, scope: !6989)
!6996 = !DILocation(line: 643, column: 35, scope: !6989)
!6997 = !DILocation(line: 644, column: 23, scope: !6989)
!6998 = !DILocation(line: 644, column: 26, scope: !6989)
!6999 = !DILocation(line: 644, column: 34, scope: !6989)
!7000 = !DILocation(line: 644, column: 37, scope: !6989)
!7001 = !DILocation(line: 644, column: 20, scope: !6989)
!7002 = !DILocation(line: 645, column: 9, scope: !6989)
!7003 = !DILocation(line: 642, column: 50, scope: !6983)
!7004 = !DILocation(line: 642, column: 9, scope: !6983)
!7005 = distinct !{!7005, !6987, !7006}
!7006 = !DILocation(line: 645, column: 9, scope: !6979)
!7007 = !DILocation(line: 646, column: 5, scope: !6939)
!7008 = !DILocation(line: 646, column: 5, scope: !6938)
!7009 = !DILocation(line: 648, column: 5, scope: !6934)
!7010 = !DILocation(line: 649, column: 1, scope: !6934)
!7011 = distinct !DISubprogram(name: "new_socket", scope: !805, file: !805, line: 2411, type: !7012, scopeLine: 2411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7014)
!7012 = !DISubroutineType(types: !7013)
!7013 = !{!47, !1018}
!7014 = !{!7015, !7016, !7017}
!7015 = !DILocalVariable(name: "is_udp", arg: 1, scope: !7011, file: !805, line: 2411, type: !1018)
!7016 = !DILocalVariable(name: "sfd", scope: !7011, file: !805, line: 2412, type: !47)
!7017 = !DILocalVariable(name: "flags", scope: !7011, file: !805, line: 2413, type: !47)
!7018 = !DILocation(line: 2411, column: 34, scope: !7011)
!7019 = !DILocation(line: 2412, column: 5, scope: !7011)
!7020 = !DILocation(line: 2412, column: 9, scope: !7011)
!7021 = !DILocation(line: 2413, column: 5, scope: !7011)
!7022 = !DILocation(line: 2413, column: 9, scope: !7011)
!7023 = !DILocation(line: 2415, column: 32, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7011, file: !805, line: 2415, column: 9)
!7025 = !DILocation(line: 2415, column: 16, scope: !7024)
!7026 = !DILocation(line: 2415, column: 14, scope: !7024)
!7027 = !DILocation(line: 2415, column: 71, scope: !7024)
!7028 = !DILocation(line: 2415, column: 9, scope: !7011)
!7029 = !DILocation(line: 2416, column: 9, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7024, file: !805, line: 2415, column: 78)
!7031 = !DILocation(line: 2417, column: 9, scope: !7030)
!7032 = !DILocation(line: 2420, column: 24, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7011, file: !805, line: 2420, column: 9)
!7034 = !DILocation(line: 2420, column: 18, scope: !7033)
!7035 = !DILocation(line: 2420, column: 16, scope: !7033)
!7036 = !DILocation(line: 2420, column: 42, scope: !7033)
!7037 = !DILocation(line: 2420, column: 46, scope: !7033)
!7038 = !DILocation(line: 2421, column: 15, scope: !7033)
!7039 = !DILocation(line: 2421, column: 29, scope: !7033)
!7040 = !DILocation(line: 2421, column: 35, scope: !7033)
!7041 = !DILocation(line: 2421, column: 9, scope: !7033)
!7042 = !DILocation(line: 2421, column: 49, scope: !7033)
!7043 = !DILocation(line: 2420, column: 9, scope: !7011)
!7044 = !DILocation(line: 2422, column: 9, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7033, file: !805, line: 2421, column: 54)
!7046 = !DILocation(line: 2423, column: 15, scope: !7045)
!7047 = !DILocation(line: 2423, column: 9, scope: !7045)
!7048 = !DILocation(line: 2424, column: 9, scope: !7045)
!7049 = !DILocation(line: 2426, column: 12, scope: !7011)
!7050 = !DILocation(line: 2426, column: 5, scope: !7011)
!7051 = !DILocation(line: 2427, column: 1, scope: !7011)
!7052 = distinct !DISubprogram(name: "maximize_sndbuf", scope: !805, file: !805, line: 2433, type: !2698, scopeLine: 2433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7053)
!7053 = !{!7054, !7055, !7056, !7057, !7058, !7059, !7060}
!7054 = !DILocalVariable(name: "sfd", arg: 1, scope: !7052, file: !805, line: 2433, type: !867)
!7055 = !DILocalVariable(name: "intsize", scope: !7052, file: !805, line: 2434, type: !230)
!7056 = !DILocalVariable(name: "last_good", scope: !7052, file: !805, line: 2435, type: !47)
!7057 = !DILocalVariable(name: "min", scope: !7052, file: !805, line: 2436, type: !47)
!7058 = !DILocalVariable(name: "max", scope: !7052, file: !805, line: 2436, type: !47)
!7059 = !DILocalVariable(name: "avg", scope: !7052, file: !805, line: 2436, type: !47)
!7060 = !DILocalVariable(name: "old_size", scope: !7052, file: !805, line: 2437, type: !47)
!7061 = !DILocation(line: 2433, column: 39, scope: !7052)
!7062 = !DILocation(line: 2434, column: 5, scope: !7052)
!7063 = !DILocation(line: 2434, column: 15, scope: !7052)
!7064 = !DILocation(line: 2435, column: 5, scope: !7052)
!7065 = !DILocation(line: 2435, column: 9, scope: !7052)
!7066 = !DILocation(line: 2436, column: 5, scope: !7052)
!7067 = !DILocation(line: 2436, column: 9, scope: !7052)
!7068 = !DILocation(line: 2436, column: 14, scope: !7052)
!7069 = !DILocation(line: 2436, column: 19, scope: !7052)
!7070 = !DILocation(line: 2437, column: 5, scope: !7052)
!7071 = !DILocation(line: 2437, column: 9, scope: !7052)
!7072 = !DILocation(line: 2440, column: 20, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7052, file: !805, line: 2440, column: 9)
!7074 = !DILocation(line: 2440, column: 48, scope: !7073)
!7075 = !DILocation(line: 2440, column: 9, scope: !7073)
!7076 = !DILocation(line: 2440, column: 69, scope: !7073)
!7077 = !DILocation(line: 2440, column: 9, scope: !7052)
!7078 = !DILocation(line: 2441, column: 22, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !805, line: 2441, column: 13)
!7080 = distinct !DILexicalBlock(scope: !7073, file: !805, line: 2440, column: 75)
!7081 = !DILocation(line: 2441, column: 30, scope: !7079)
!7082 = !DILocation(line: 2441, column: 13, scope: !7080)
!7083 = !DILocation(line: 2442, column: 13, scope: !7079)
!7084 = !DILocation(line: 2443, column: 9, scope: !7080)
!7085 = !DILocation(line: 2447, column: 11, scope: !7052)
!7086 = !DILocation(line: 2447, column: 9, scope: !7052)
!7087 = !DILocation(line: 2448, column: 9, scope: !7052)
!7088 = !DILocation(line: 2450, column: 5, scope: !7052)
!7089 = !DILocation(line: 2450, column: 12, scope: !7052)
!7090 = !DILocation(line: 2450, column: 19, scope: !7052)
!7091 = !DILocation(line: 2450, column: 16, scope: !7052)
!7092 = !DILocation(line: 2451, column: 31, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7052, file: !805, line: 2450, column: 24)
!7094 = !DILocation(line: 2451, column: 37, scope: !7093)
!7095 = !DILocation(line: 2451, column: 35, scope: !7093)
!7096 = !DILocation(line: 2451, column: 43, scope: !7093)
!7097 = !DILocation(line: 2451, column: 13, scope: !7093)
!7098 = !DILocation(line: 2452, column: 24, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7093, file: !805, line: 2452, column: 13)
!7100 = !DILocation(line: 2452, column: 52, scope: !7099)
!7101 = !DILocation(line: 2452, column: 66, scope: !7099)
!7102 = !DILocation(line: 2452, column: 13, scope: !7099)
!7103 = !DILocation(line: 2452, column: 75, scope: !7099)
!7104 = !DILocation(line: 2452, column: 13, scope: !7093)
!7105 = !DILocation(line: 2453, column: 25, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7099, file: !805, line: 2452, column: 81)
!7107 = !DILocation(line: 2453, column: 23, scope: !7106)
!7108 = !DILocation(line: 2454, column: 19, scope: !7106)
!7109 = !DILocation(line: 2454, column: 23, scope: !7106)
!7110 = !DILocation(line: 2454, column: 17, scope: !7106)
!7111 = !DILocation(line: 2455, column: 9, scope: !7106)
!7112 = !DILocation(line: 2456, column: 19, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7099, file: !805, line: 2455, column: 16)
!7114 = !DILocation(line: 2456, column: 23, scope: !7113)
!7115 = !DILocation(line: 2456, column: 17, scope: !7113)
!7116 = distinct !{!7116, !7088, !7117}
!7117 = !DILocation(line: 2458, column: 5, scope: !7052)
!7118 = !DILocation(line: 2460, column: 18, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7052, file: !805, line: 2460, column: 9)
!7120 = !DILocation(line: 2460, column: 26, scope: !7119)
!7121 = !DILocation(line: 2460, column: 9, scope: !7052)
!7122 = !DILocation(line: 2461, column: 17, scope: !7119)
!7123 = !DILocation(line: 2461, column: 61, scope: !7119)
!7124 = !DILocation(line: 2461, column: 66, scope: !7119)
!7125 = !DILocation(line: 2461, column: 76, scope: !7119)
!7126 = !DILocation(line: 2461, column: 9, scope: !7119)
!7127 = !DILocation(line: 2462, column: 1, scope: !7052)
!7128 = distinct !DISubprogram(name: "new_socket_unix", scope: !805, file: !805, line: 2506, type: !354, scopeLine: 2506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7129)
!7129 = !{!7130, !7131}
!7130 = !DILocalVariable(name: "sfd", scope: !7128, file: !805, line: 2507, type: !47)
!7131 = !DILocalVariable(name: "flags", scope: !7128, file: !805, line: 2508, type: !47)
!7132 = !DILocation(line: 2507, column: 5, scope: !7128)
!7133 = !DILocation(line: 2507, column: 9, scope: !7128)
!7134 = !DILocation(line: 2508, column: 5, scope: !7128)
!7135 = !DILocation(line: 2508, column: 9, scope: !7128)
!7136 = !DILocation(line: 2510, column: 16, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7128, file: !805, line: 2510, column: 9)
!7138 = !DILocation(line: 2510, column: 14, scope: !7137)
!7139 = !DILocation(line: 2510, column: 49, scope: !7137)
!7140 = !DILocation(line: 2510, column: 9, scope: !7128)
!7141 = !DILocation(line: 2511, column: 9, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7137, file: !805, line: 2510, column: 56)
!7143 = !DILocation(line: 2512, column: 9, scope: !7142)
!7144 = !DILocation(line: 2515, column: 24, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7128, file: !805, line: 2515, column: 9)
!7146 = !DILocation(line: 2515, column: 18, scope: !7145)
!7147 = !DILocation(line: 2515, column: 16, scope: !7145)
!7148 = !DILocation(line: 2515, column: 42, scope: !7145)
!7149 = !DILocation(line: 2515, column: 46, scope: !7145)
!7150 = !DILocation(line: 2516, column: 15, scope: !7145)
!7151 = !DILocation(line: 2516, column: 29, scope: !7145)
!7152 = !DILocation(line: 2516, column: 35, scope: !7145)
!7153 = !DILocation(line: 2516, column: 9, scope: !7145)
!7154 = !DILocation(line: 2516, column: 49, scope: !7145)
!7155 = !DILocation(line: 2515, column: 9, scope: !7128)
!7156 = !DILocation(line: 2517, column: 9, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7145, file: !805, line: 2516, column: 54)
!7158 = !DILocation(line: 2518, column: 15, scope: !7157)
!7159 = !DILocation(line: 2518, column: 9, scope: !7157)
!7160 = !DILocation(line: 2519, column: 9, scope: !7157)
!7161 = !DILocation(line: 2521, column: 12, scope: !7128)
!7162 = !DILocation(line: 2521, column: 5, scope: !7128)
!7163 = !DILocation(line: 2522, column: 1, scope: !7128)
!7164 = distinct !DISubprogram(name: "lstat", scope: !794, file: !794, line: 456, type: !2129, scopeLine: 457, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7165)
!7165 = !{!7166, !7167}
!7166 = !DILocalVariable(name: "__path", arg: 1, scope: !7164, file: !794, line: 456, type: !302)
!7167 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !7164, file: !794, line: 456, type: !2131)
!7168 = !DILocation(line: 456, column: 1, scope: !7164)
!7169 = !DILocation(line: 458, column: 31, scope: !7164)
!7170 = !DILocation(line: 458, column: 39, scope: !7164)
!7171 = !DILocation(line: 458, column: 10, scope: !7164)
!7172 = !DILocation(line: 458, column: 3, scope: !7164)

=========== Module Dump End ============

[ 80%] Building C object CMakeFiles/memcached.dir/thread.c.o
clang-11: warning: -lpthread: 'linker' input unused [-Wunused-command-line-argument]
(impload) Calling PaviseImpLoad Pass constructor
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:194
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:194
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:196
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:197
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:198
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:201
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:209
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:210
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:210
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:212
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:213
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:214
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:217
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:223
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:223
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:225
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:226
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:227
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:230
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:238
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:239
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:239
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:241
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:242
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:243
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:246
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:337
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:337
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:337
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:338
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:338
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:339
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:339
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:339
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:340
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:340
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:350
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:351
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:352
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:354
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:354
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:110
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:110
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:113
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:119
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:120
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:360
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:370
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:371
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:372
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:378
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:378
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:378
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:378
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:378
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:379
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:379
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:382
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:384
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:384
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:384
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:385
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:387
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:393
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:393
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:393
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:394
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:394
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:395
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:396
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:397
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:399
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:404
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:405
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:405
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:407
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:408
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:409
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:411
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:417
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:418
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:419
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:420
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:426
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:426
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:427
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:427
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:429
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:430
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:431
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:433
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:438
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:439
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:440
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:441
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:447
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:448
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:449
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:450
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:456
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:456
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:457
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:457
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:459
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:460
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:461
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:463
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:468
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:468
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:468
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:468
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:469
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:469
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:471
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:472
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:473
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:475
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:480
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:480
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:481
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:481
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:483
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:485
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:486
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:488
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:494
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:495
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:496
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:502
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:502
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:502
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:503
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:503
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:505
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:506
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:507
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:509
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:514
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:515
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:515
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:517
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:518
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:519
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:521
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:526
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:527
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:527
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:529
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:530
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:531
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:533
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:545
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:546
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:546
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:548
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:554
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:554
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:556
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:562
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:563
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:563
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:565
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:567
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:569
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:585
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:589
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:598
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:598
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:599
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:599
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:601
inserting pavise store before pthread_mutex_init
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:602
inserting pavise store before pthread_mutex_init
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:603
inserting pavise store before pthread_mutex_init
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:604
inserting pavise store before pthread_mutex_init
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:606
inserting pavise store before pthread_mutex_init
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:607
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:609
inserting pavise store before pthread_mutex_init
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:612
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:614
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:615
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:619
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:622
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:622
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:623
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:624
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:625
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:631
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:632
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:636
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:640
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:643
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:645
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:646
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:254
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:256
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:258
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:259
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:264
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:266
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:268
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:269
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:270
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:273
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:175
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:175
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:176
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:176
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:177
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:177
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:178
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:178
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:180
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:182
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:184
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:183
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:185
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:187
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:187
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:187
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:279
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:280
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:280
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:285
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:287
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:288
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:290
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:292
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:127
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:127
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:128
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:133
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:136
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:136
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:139
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:151
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:154
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:155
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:158
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:299
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:299
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:299
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:300
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:300
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:301
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:301
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:302
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:302
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:304
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:306
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:308
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:311
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:311
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:311
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:315
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:316
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:319
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:322
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:325
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:326
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:327
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:327
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:327
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:62
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:63
inserting pavise store before pthread_mutex_init
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:64
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:92
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:93
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:93
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:95
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:102
inserting pavise store before pthread_mutex_unlock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:105
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:164
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:165
inserting pavise store before pthread_mutex_lock
 LLVM parsing call inst:
/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c:168
inserting pavise store before pthread_mutex_unlock

=========== Module New Dump ============

; ModuleID = '/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c'
source_filename = "/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.settings = type { i64, i32, i32, i32, %struct.in_addr, i32, i32, i8, i32, i8*, i32, double, i32, i32, i8, i32 }
%struct.in_addr = type { i32 }
%struct.LIBEVENT_THREAD = type { i64, %struct.event_base*, %struct.event, i32, i32, %struct.conn_queue }
%struct.event_base = type opaque
%struct.event = type { %struct.event_callback, %union.anon.0, i32, %struct.event_base*, %union.anon.2, i16, i16, %struct.timeval }
%struct.event_callback = type { %struct.anon, i16, i8, i8, %union.anon, i8* }
%struct.anon = type { %struct.event_callback*, %struct.event_callback** }
%union.anon = type { void (i32, i16, i8*)* }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { %struct.event*, %struct.event** }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.anon.4, %struct.timeval }
%struct.anon.4 = type { %struct.event*, %struct.event** }
%struct.timeval = type { i64, i64 }
%struct.conn_queue = type { %struct.conn_queue_item*, %struct.conn_queue_item*, %union.pthread_mutex_t, %union.pthread_cond_t }
%struct.conn_queue_item = type { i32, i32, i32, i32, i32, %struct.conn_queue_item* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.7, %union.anon.9, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.7 = type { i64 }
%union.anon.9 = type { i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.conn = type { i32, i32, %struct.event, i16, i16, i8*, i8*, i32, i32, i8*, i8*, i32, i32, i32, i8*, i8*, i32, i8*, i32, i32, %struct.iovec*, i32, i32, %struct.msghdr*, i32, i32, i32, i32, %struct._stritem**, i32, %struct._stritem**, i32, i8**, i32, i8**, i32, i8, i32, %struct.sockaddr, i32, i8*, i32, i32, i32, i32 }
%struct.iovec = type { i8*, i64 }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i64, i8*, i64, i32 }
%struct._stritem = type { %struct._stritem*, %struct._stritem*, %struct._stritem*, i32, i32, i32, i16, i8, i8, i8, i8, i64, [8 x i8*] }
%struct.sockaddr = type { i16, [14 x i8] }
%union.pthread_mutexattr_t = type { i32 }
%union.pthread_condattr_t = type { i32 }
%union.pthread_attr_t = type { i64, [48 x i8] }

@conn_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8, !dbg !0
@suffix_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8, !dbg !422
@last_thread = internal global i32 -1, align 4, !dbg !472
@settings = external dso_local global %struct.settings, align 8
@threads = dso_local global %struct.LIBEVENT_THREAD* null, align 8, !dbg !447
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"Writing to thread notify pipe\00", align 1
@cache_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8, !dbg !426
@.str.2 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c\00", align 1
@__PRETTY_FUNCTION__.mt_slabs_alloc = private unnamed_addr constant [29 x i8] c"void *mt_slabs_alloc(size_t)\00", align 1
@__PRETTY_FUNCTION__.mt_slabs_free = private unnamed_addr constant [35 x i8] c"void mt_slabs_free(void *, size_t)\00", align 1
@slabs_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8, !dbg !428
@stats_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8, !dbg !430
@init_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8, !dbg !468
@init_cond = internal global %union.pthread_cond_t zeroinitializer, align 8, !dbg !470
@cqi_freelist_lock = internal global %union.pthread_mutex_t zeroinitializer, align 8, !dbg !445
@cqi_freelist = internal global %struct.conn_queue_item* null, align 8, !dbg !432
@.str.4 = private unnamed_addr constant [34 x i8] c"Can't allocate thread descriptors\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"Can't create notify pipe\00", align 1
@init_count = internal global i32 0, align 4, !dbg !474
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.6 = private unnamed_addr constant [27 x i8] c"Can't allocate event base\0A\00", align 1
@.str.7 = private unnamed_addr constant [36 x i8] c"Can't monitor libevent notify pipe\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"Can't read from libevent pipe\0A\00", align 1
@.str.9 = private unnamed_addr constant [39 x i8] c"Can't listen for events on UDP socket\0A\00", align 1
@.str.10 = private unnamed_addr constant [34 x i8] c"Can't listen for events on fd %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"Can't create thread: %s\0A\00", align 1

; Function Attrs: nounwind uwtable
define dso_local %struct.conn* @mt_conn_from_freelist() #0 !dbg !480 {
entry:
  %c = alloca %struct.conn*, align 8
  %0 = bitcast %struct.conn** %c to i8*, !dbg !487
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !487
  call void @llvm.dbg.declare(metadata %struct.conn** %c, metadata !486, metadata !DIExpression()), !dbg !488
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @conn_lock to i8*), i64 32), !dbg !489
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @conn_lock) #7, !dbg !489
  %call1 = call %struct.conn* (...) @do_conn_from_freelist(), !dbg !490
  store %struct.conn* %call1, %struct.conn** %c, align 8, !dbg !491, !tbaa !492
  %2 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @conn_lock to i8*), i64 32), !dbg !496
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @conn_lock) #7, !dbg !496
  %3 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !497, !tbaa !492
  %4 = bitcast %struct.conn** %c to i8*, !dbg !498
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #7, !dbg !498
  ret %struct.conn* %3, !dbg !499
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata %0, metadata %1, metadata %2) #2

; Function Attrs: nounwind
declare !dbg !6 dso_local i32 @pthread_mutex_lock(%union.pthread_mutex_t* %0) #3

declare !dbg !42 dso_local %struct.conn* @do_conn_from_freelist(...) #4

; Function Attrs: nounwind
declare !dbg !242 dso_local i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %0) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg %0, i8* nocapture %1) #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i1 @mt_conn_add_to_freelist(%struct.conn* %c) #0 !dbg !500 {
entry:
  %c.addr = alloca %struct.conn*, align 8
  %result = alloca i8, align 1
  store %struct.conn* %c, %struct.conn** %c.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct.conn** %c.addr, metadata !504, metadata !DIExpression()), !dbg !506
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %result) #7, !dbg !507
  call void @llvm.dbg.declare(metadata i8* %result, metadata !505, metadata !DIExpression()), !dbg !508
  %0 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @conn_lock to i8*), i64 32), !dbg !509
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @conn_lock) #7, !dbg !509
  %1 = load %struct.conn*, %struct.conn** %c.addr, align 8, !dbg !510, !tbaa !492
  %call1 = call zeroext i1 @do_conn_add_to_freelist(%struct.conn* %1), !dbg !511
  %frombool = zext i1 %call1 to i8, !dbg !512
  store i8 %frombool, i8* %result, align 1, !dbg !512, !tbaa !513
  %2 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @conn_lock to i8*), i64 32), !dbg !515
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @conn_lock) #7, !dbg !515
  %3 = load i8, i8* %result, align 1, !dbg !516, !tbaa !513, !range !517
  %tobool = trunc i8 %3 to i1, !dbg !516
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %result) #7, !dbg !518
  ret i1 %tobool, !dbg !519
}

declare !dbg !243 dso_local zeroext i1 @do_conn_add_to_freelist(%struct.conn* %0) #4

; Function Attrs: nounwind uwtable
define dso_local i8* @mt_suffix_from_freelist() #0 !dbg !520 {
entry:
  %s = alloca i8*, align 8
  %0 = bitcast i8** %s to i8*, !dbg !525
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !525
  call void @llvm.dbg.declare(metadata i8** %s, metadata !524, metadata !DIExpression()), !dbg !526
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @suffix_lock to i8*), i64 32), !dbg !527
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @suffix_lock) #7, !dbg !527
  %call1 = call i8* (...) @do_suffix_from_freelist(), !dbg !528
  store i8* %call1, i8** %s, align 8, !dbg !529, !tbaa !492
  %2 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @suffix_lock to i8*), i64 32), !dbg !530
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @suffix_lock) #7, !dbg !530
  %3 = load i8*, i8** %s, align 8, !dbg !531, !tbaa !492
  %4 = bitcast i8** %s to i8*, !dbg !532
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #7, !dbg !532
  ret i8* %3, !dbg !533
}

declare !dbg !246 dso_local i8* @do_suffix_from_freelist(...) #4

; Function Attrs: nounwind uwtable
define dso_local zeroext i1 @mt_suffix_add_to_freelist(i8* %s) #0 !dbg !534 {
entry:
  %s.addr = alloca i8*, align 8
  %result = alloca i8, align 1
  store i8* %s, i8** %s.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !536, metadata !DIExpression()), !dbg !538
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %result) #7, !dbg !539
  call void @llvm.dbg.declare(metadata i8* %result, metadata !537, metadata !DIExpression()), !dbg !540
  %0 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @suffix_lock to i8*), i64 32), !dbg !541
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @suffix_lock) #7, !dbg !541
  %1 = load i8*, i8** %s.addr, align 8, !dbg !542, !tbaa !492
  %call1 = call zeroext i1 @do_suffix_add_to_freelist(i8* %1), !dbg !543
  %frombool = zext i1 %call1 to i8, !dbg !544
  store i8 %frombool, i8* %result, align 1, !dbg !544, !tbaa !513
  %2 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @suffix_lock to i8*), i64 32), !dbg !545
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @suffix_lock) #7, !dbg !545
  %3 = load i8, i8* %result, align 1, !dbg !546, !tbaa !513, !range !517
  %tobool = trunc i8 %3 to i1, !dbg !546
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %result) #7, !dbg !547
  ret i1 %tobool, !dbg !548
}

declare !dbg !249 dso_local zeroext i1 @do_suffix_add_to_freelist(i8* %0) #4

; Function Attrs: nounwind uwtable
define dso_local void @dispatch_conn_new(i32 %sfd, i32 %init_state, i32 %event_flags, i32 %read_buffer_size, i32 %is_udp) #0 !dbg !549 {
entry:
  %sfd.addr = alloca i32, align 4
  %init_state.addr = alloca i32, align 4
  %event_flags.addr = alloca i32, align 4
  %read_buffer_size.addr = alloca i32, align 4
  %is_udp.addr = alloca i32, align 4
  %item = alloca %struct.conn_queue_item*, align 8
  %thread = alloca i32, align 4
  store i32 %sfd, i32* %sfd.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %sfd.addr, metadata !553, metadata !DIExpression()), !dbg !562
  store i32 %init_state, i32* %init_state.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %init_state.addr, metadata !554, metadata !DIExpression()), !dbg !563
  store i32 %event_flags, i32* %event_flags.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %event_flags.addr, metadata !555, metadata !DIExpression()), !dbg !564
  store i32 %read_buffer_size, i32* %read_buffer_size.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %read_buffer_size.addr, metadata !556, metadata !DIExpression()), !dbg !565
  store i32 %is_udp, i32* %is_udp.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %is_udp.addr, metadata !557, metadata !DIExpression()), !dbg !566
  %0 = bitcast %struct.conn_queue_item** %item to i8*, !dbg !567
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !567
  call void @llvm.dbg.declare(metadata %struct.conn_queue_item** %item, metadata !558, metadata !DIExpression()), !dbg !568
  %call = call %struct.conn_queue_item* @cqi_new(), !dbg !569
  store %struct.conn_queue_item* %call, %struct.conn_queue_item** %item, align 8, !dbg !568, !tbaa !492
  %1 = bitcast i32* %thread to i8*, !dbg !570
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #7, !dbg !570
  call void @llvm.dbg.declare(metadata i32* %thread, metadata !559, metadata !DIExpression()), !dbg !571
  %2 = load i32, i32* @last_thread, align 4, !dbg !572, !tbaa !560
  %add = add nsw i32 %2, 1, !dbg !573
  %3 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 13), align 4, !dbg !574, !tbaa !575
  %rem = srem i32 %add, %3, !dbg !580
  store i32 %rem, i32* %thread, align 4, !dbg !571, !tbaa !560
  %4 = load i32, i32* %thread, align 4, !dbg !581, !tbaa !560
  store i32 %4, i32* @last_thread, align 4, !dbg !582, !tbaa !560
  %5 = load i32, i32* %sfd.addr, align 4, !dbg !583, !tbaa !560
  %6 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !584, !tbaa !492
  %sfd1 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %6, i32 0, i32 0, !dbg !585
  store i32 %5, i32* %sfd1, align 8, !dbg !586, !tbaa !587
  %7 = load i32, i32* %init_state.addr, align 4, !dbg !589, !tbaa !560
  %8 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !590, !tbaa !492
  %init_state2 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %8, i32 0, i32 1, !dbg !591
  store i32 %7, i32* %init_state2, align 4, !dbg !592, !tbaa !593
  %9 = load i32, i32* %event_flags.addr, align 4, !dbg !594, !tbaa !560
  %10 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !595, !tbaa !492
  %event_flags3 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %10, i32 0, i32 2, !dbg !596
  store i32 %9, i32* %event_flags3, align 8, !dbg !597, !tbaa !598
  %11 = load i32, i32* %read_buffer_size.addr, align 4, !dbg !599, !tbaa !560
  %12 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !600, !tbaa !492
  %read_buffer_size4 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %12, i32 0, i32 3, !dbg !601
  store i32 %11, i32* %read_buffer_size4, align 4, !dbg !602, !tbaa !603
  %13 = load i32, i32* %is_udp.addr, align 4, !dbg !604, !tbaa !560
  %14 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !605, !tbaa !492
  %is_udp5 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %14, i32 0, i32 4, !dbg !606
  store i32 %13, i32* %is_udp5, align 8, !dbg !607, !tbaa !608
  %15 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8, !dbg !609, !tbaa !492
  %16 = load i32, i32* %thread, align 4, !dbg !610, !tbaa !560
  %idxprom = sext i32 %16 to i64, !dbg !609
  %arrayidx = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %15, i64 %idxprom, !dbg !609
  %new_conn_queue = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %arrayidx, i32 0, i32 5, !dbg !611
  %17 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !612, !tbaa !492
  call void @cq_push(%struct.conn_queue* %new_conn_queue, %struct.conn_queue_item* %17), !dbg !613
  %18 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8, !dbg !614, !tbaa !492
  %19 = load i32, i32* %thread, align 4, !dbg !616, !tbaa !560
  %idxprom6 = sext i32 %19 to i64, !dbg !614
  %arrayidx7 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %18, i64 %idxprom6, !dbg !614
  %notify_send_fd = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %arrayidx7, i32 0, i32 4, !dbg !617
  %20 = load i32, i32* %notify_send_fd, align 4, !dbg !617, !tbaa !618
  %call8 = call i64 @write(i32 %20, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 1), !dbg !626
  %cmp = icmp ne i64 %call8, 1, !dbg !627
  br i1 %cmp, label %if.then, label %if.end, !dbg !628

if.then:                                          ; preds = %entry
  call void @perror(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)), !dbg !629
  br label %if.end, !dbg !631

if.end:                                           ; preds = %if.then, %entry
  %21 = bitcast i32* %thread to i8*, !dbg !632
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #7, !dbg !632
  %22 = bitcast %struct.conn_queue_item** %item to i8*, !dbg !632
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #7, !dbg !632
  ret void, !dbg !632
}

; Function Attrs: nounwind uwtable
define internal void @cq_push(%struct.conn_queue* %cq, %struct.conn_queue_item* %item) #0 !dbg !633 {
entry:
  %cq.addr = alloca %struct.conn_queue*, align 8
  %item.addr = alloca %struct.conn_queue_item*, align 8
  store %struct.conn_queue* %cq, %struct.conn_queue** %cq.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct.conn_queue** %cq.addr, metadata !638, metadata !DIExpression()), !dbg !640
  store %struct.conn_queue_item* %item, %struct.conn_queue_item** %item.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct.conn_queue_item** %item.addr, metadata !639, metadata !DIExpression()), !dbg !641
  %0 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item.addr, align 8, !dbg !642, !tbaa !492
  %next = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %0, i32 0, i32 5, !dbg !643
  store %struct.conn_queue_item* null, %struct.conn_queue_item** %next, align 8, !dbg !644, !tbaa !645
  %1 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !646, !tbaa !492
  %lock = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %1, i32 0, i32 2, !dbg !647
  %2 = bitcast %union.pthread_mutex_t* %lock to i8*, !dbg !648
  %3 = call i32 @cpavise_store_data(i8* %2, i64 32), !dbg !648
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %lock) #7, !dbg !648
  %4 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !649, !tbaa !492
  %tail = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %4, i32 0, i32 1, !dbg !651
  %5 = load %struct.conn_queue_item*, %struct.conn_queue_item** %tail, align 8, !dbg !651, !tbaa !652
  %cmp = icmp eq %struct.conn_queue_item* null, %5, !dbg !653
  br i1 %cmp, label %if.then, label %if.else, !dbg !654

if.then:                                          ; preds = %entry
  %6 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item.addr, align 8, !dbg !655, !tbaa !492
  %7 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !656, !tbaa !492
  %head = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %7, i32 0, i32 0, !dbg !657
  store %struct.conn_queue_item* %6, %struct.conn_queue_item** %head, align 8, !dbg !658, !tbaa !659
  br label %if.end, !dbg !656

if.else:                                          ; preds = %entry
  %8 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item.addr, align 8, !dbg !660, !tbaa !492
  %9 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !661, !tbaa !492
  %tail1 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %9, i32 0, i32 1, !dbg !662
  %10 = load %struct.conn_queue_item*, %struct.conn_queue_item** %tail1, align 8, !dbg !662, !tbaa !652
  %next2 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %10, i32 0, i32 5, !dbg !663
  store %struct.conn_queue_item* %8, %struct.conn_queue_item** %next2, align 8, !dbg !664, !tbaa !645
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item.addr, align 8, !dbg !665, !tbaa !492
  %12 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !666, !tbaa !492
  %tail3 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %12, i32 0, i32 1, !dbg !667
  store %struct.conn_queue_item* %11, %struct.conn_queue_item** %tail3, align 8, !dbg !668, !tbaa !652
  %13 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !669, !tbaa !492
  %cond = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %13, i32 0, i32 3, !dbg !670
  %call4 = call i32 @pthread_cond_signal(%union.pthread_cond_t* %cond) #7, !dbg !671
  %14 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !672, !tbaa !492
  %lock5 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %14, i32 0, i32 2, !dbg !673
  %15 = bitcast %union.pthread_mutex_t* %lock5 to i8*, !dbg !674
  %16 = call i32 @cpavise_store_data(i8* %15, i64 32), !dbg !674
  %call6 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %lock5) #7, !dbg !674
  ret void, !dbg !675
}

declare !dbg !252 dso_local i64 @write(i32 %0, i8* %1, i64 %2) #4

declare !dbg !258 dso_local void @perror(i8* %0) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @mt_is_listen_thread() #0 !dbg !676 {
entry:
  %call = call i64 @pthread_self() #8, !dbg !679
  %0 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8, !dbg !680, !tbaa !492
  %arrayidx = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %0, i64 0, !dbg !680
  %thread_id = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %arrayidx, i32 0, i32 0, !dbg !681
  %1 = load i64, i64* %thread_id, align 8, !dbg !681, !tbaa !682
  %cmp = icmp eq i64 %call, %1, !dbg !683
  %conv = zext i1 %cmp to i32, !dbg !683
  ret i32 %conv, !dbg !684
}

; Function Attrs: nounwind readnone
declare !dbg !264 dso_local i64 @pthread_self() #5

; Function Attrs: nounwind uwtable
define dso_local void @mt_run_deferred_deletes() #0 !dbg !685 {
entry:
  %0 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !686
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !686
  call void @do_run_deferred_deletes(), !dbg !687
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !688
  %call1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !688
  ret void, !dbg !689
}

declare !dbg !267 dso_local void @do_run_deferred_deletes() #4

; Function Attrs: nounwind uwtable
define dso_local %struct._stritem* @mt_item_alloc(i8* %key, i64 %nkey, i32 %flags, i32 %exptime, i32 %nbytes) #0 !dbg !690 {
entry:
  %key.addr = alloca i8*, align 8
  %nkey.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %exptime.addr = alloca i32, align 4
  %nbytes.addr = alloca i32, align 4
  %it = alloca %struct._stritem*, align 8
  store i8* %key, i8** %key.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !694, metadata !DIExpression()), !dbg !700
  store i64 %nkey, i64* %nkey.addr, align 8, !tbaa !701
  call void @llvm.dbg.declare(metadata i64* %nkey.addr, metadata !695, metadata !DIExpression()), !dbg !702
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !696, metadata !DIExpression()), !dbg !703
  store i32 %exptime, i32* %exptime.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %exptime.addr, metadata !697, metadata !DIExpression()), !dbg !704
  store i32 %nbytes, i32* %nbytes.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !698, metadata !DIExpression()), !dbg !705
  %0 = bitcast %struct._stritem** %it to i8*, !dbg !706
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !706
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !699, metadata !DIExpression()), !dbg !707
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !708
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !708
  call void (...) @cpavise_tx_begin(), !dbg !709
  %2 = load i8*, i8** %key.addr, align 8, !dbg !710, !tbaa !492
  %3 = load i64, i64* %nkey.addr, align 8, !dbg !711, !tbaa !701
  %4 = load i32, i32* %flags.addr, align 4, !dbg !712, !tbaa !560
  %5 = load i32, i32* %exptime.addr, align 4, !dbg !713, !tbaa !560
  %6 = load i32, i32* %nbytes.addr, align 4, !dbg !714, !tbaa !560
  %call1 = call %struct._stritem* @do_item_alloc(i8* %2, i64 %3, i32 %4, i32 %5, i32 %6), !dbg !715
  store %struct._stritem* %call1, %struct._stritem** %it, align 8, !dbg !716, !tbaa !492
  call void (...) @cpavise_tx_end(), !dbg !717
  %7 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !718
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !718
  %8 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !719, !tbaa !492
  %9 = bitcast %struct._stritem** %it to i8*, !dbg !720
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #7, !dbg !720
  ret %struct._stritem* %8, !dbg !721
}

declare !dbg !270 dso_local void @cpavise_tx_begin(...) #4

declare !dbg !274 dso_local %struct._stritem* @do_item_alloc(i8* %0, i64 %1, i32 %2, i32 %3, i32 %4) #4

declare !dbg !278 dso_local void @cpavise_tx_end(...) #4

; Function Attrs: nounwind uwtable
define dso_local %struct._stritem* @mt_item_get_notedeleted(i8* %key, i64 %nkey, i8* %delete_locked) #0 !dbg !722 {
entry:
  %key.addr = alloca i8*, align 8
  %nkey.addr = alloca i64, align 8
  %delete_locked.addr = alloca i8*, align 8
  %it = alloca %struct._stritem*, align 8
  store i8* %key, i8** %key.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !727, metadata !DIExpression()), !dbg !731
  store i64 %nkey, i64* %nkey.addr, align 8, !tbaa !701
  call void @llvm.dbg.declare(metadata i64* %nkey.addr, metadata !728, metadata !DIExpression()), !dbg !732
  store i8* %delete_locked, i8** %delete_locked.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i8** %delete_locked.addr, metadata !729, metadata !DIExpression()), !dbg !733
  %0 = bitcast %struct._stritem** %it to i8*, !dbg !734
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !734
  call void @llvm.dbg.declare(metadata %struct._stritem** %it, metadata !730, metadata !DIExpression()), !dbg !735
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !736
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !736
  %2 = load i8*, i8** %key.addr, align 8, !dbg !737, !tbaa !492
  %3 = load i64, i64* %nkey.addr, align 8, !dbg !738, !tbaa !701
  %4 = load i8*, i8** %delete_locked.addr, align 8, !dbg !739, !tbaa !492
  %call1 = call %struct._stritem* @do_item_get_notedeleted(i8* %2, i64 %3, i8* %4), !dbg !740
  store %struct._stritem* %call1, %struct._stritem** %it, align 8, !dbg !741, !tbaa !492
  %5 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !742
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !742
  %6 = load %struct._stritem*, %struct._stritem** %it, align 8, !dbg !743, !tbaa !492
  %7 = bitcast %struct._stritem** %it to i8*, !dbg !744
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #7, !dbg !744
  ret %struct._stritem* %6, !dbg !745
}

declare !dbg !279 dso_local %struct._stritem* @do_item_get_notedeleted(i8* %0, i64 %1, i8* %2) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @mt_item_link(%struct._stritem* %item) #0 !dbg !746 {
entry:
  %item.addr = alloca %struct._stritem*, align 8
  %ret = alloca i32, align 4
  store %struct._stritem* %item, %struct._stritem** %item.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct._stritem** %item.addr, metadata !750, metadata !DIExpression()), !dbg !752
  %0 = bitcast i32* %ret to i8*, !dbg !753
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #7, !dbg !753
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !751, metadata !DIExpression()), !dbg !754
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !755
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !755
  %2 = load %struct._stritem*, %struct._stritem** %item.addr, align 8, !dbg !756, !tbaa !492
  %call1 = call i32 @do_item_link(%struct._stritem* %2), !dbg !757
  store i32 %call1, i32* %ret, align 4, !dbg !758, !tbaa !560
  %3 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !759
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !759
  %4 = load i32, i32* %ret, align 4, !dbg !760, !tbaa !560
  %5 = bitcast i32* %ret to i8*, !dbg !761
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %5) #7, !dbg !761
  ret i32 %4, !dbg !762
}

declare !dbg !283 dso_local i32 @do_item_link(%struct._stritem* %0) #4

; Function Attrs: nounwind uwtable
define dso_local void @mt_item_remove(%struct._stritem* %item) #0 !dbg !763 {
entry:
  %item.addr = alloca %struct._stritem*, align 8
  store %struct._stritem* %item, %struct._stritem** %item.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct._stritem** %item.addr, metadata !767, metadata !DIExpression()), !dbg !768
  %0 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !769
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !769
  %1 = load %struct._stritem*, %struct._stritem** %item.addr, align 8, !dbg !770, !tbaa !492
  call void @do_item_remove(%struct._stritem* %1), !dbg !771
  %2 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !772
  %call1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !772
  ret void, !dbg !773
}

declare !dbg !286 dso_local void @do_item_remove(%struct._stritem* %0) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @mt_item_replace(%struct._stritem* %old, %struct._stritem* %new) #0 !dbg !774 {
entry:
  %old.addr = alloca %struct._stritem*, align 8
  %new.addr = alloca %struct._stritem*, align 8
  %ret = alloca i32, align 4
  store %struct._stritem* %old, %struct._stritem** %old.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct._stritem** %old.addr, metadata !778, metadata !DIExpression()), !dbg !781
  store %struct._stritem* %new, %struct._stritem** %new.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct._stritem** %new.addr, metadata !779, metadata !DIExpression()), !dbg !782
  %0 = bitcast i32* %ret to i8*, !dbg !783
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #7, !dbg !783
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !780, metadata !DIExpression()), !dbg !784
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !785
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !785
  %2 = load %struct._stritem*, %struct._stritem** %old.addr, align 8, !dbg !786, !tbaa !492
  %3 = load %struct._stritem*, %struct._stritem** %new.addr, align 8, !dbg !787, !tbaa !492
  %call1 = call i32 @do_item_replace(%struct._stritem* %2, %struct._stritem* %3), !dbg !788
  store i32 %call1, i32* %ret, align 4, !dbg !789, !tbaa !560
  %4 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !790
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !790
  %5 = load i32, i32* %ret, align 4, !dbg !791, !tbaa !560
  %6 = bitcast i32* %ret to i8*, !dbg !792
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %6) #7, !dbg !792
  ret i32 %5, !dbg !793
}

declare !dbg !289 dso_local i32 @do_item_replace(%struct._stritem* %0, %struct._stritem* %1) #4

; Function Attrs: nounwind uwtable
define dso_local void @mt_item_unlink(%struct._stritem* %item) #0 !dbg !794 {
entry:
  %item.addr = alloca %struct._stritem*, align 8
  store %struct._stritem* %item, %struct._stritem** %item.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct._stritem** %item.addr, metadata !796, metadata !DIExpression()), !dbg !797
  %0 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !798
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !798
  %1 = load %struct._stritem*, %struct._stritem** %item.addr, align 8, !dbg !799, !tbaa !492
  call void @do_item_unlink(%struct._stritem* %1), !dbg !800
  %2 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !801
  %call1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !801
  ret void, !dbg !802
}

declare !dbg !292 dso_local void @do_item_unlink(%struct._stritem* %0) #4

; Function Attrs: nounwind uwtable
define dso_local void @mt_item_update(%struct._stritem* %item) #0 !dbg !803 {
entry:
  %item.addr = alloca %struct._stritem*, align 8
  store %struct._stritem* %item, %struct._stritem** %item.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct._stritem** %item.addr, metadata !805, metadata !DIExpression()), !dbg !806
  %0 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !807
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !807
  %1 = load %struct._stritem*, %struct._stritem** %item.addr, align 8, !dbg !808, !tbaa !492
  call void @do_item_update(%struct._stritem* %1), !dbg !809
  %2 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !810
  %call1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !810
  ret void, !dbg !811
}

declare !dbg !293 dso_local void @do_item_update(%struct._stritem* %0) #4

; Function Attrs: nounwind uwtable
define dso_local i8* @mt_defer_delete(%struct._stritem* %item, i64 %exptime) #0 !dbg !812 {
entry:
  %item.addr = alloca %struct._stritem*, align 8
  %exptime.addr = alloca i64, align 8
  %ret = alloca i8*, align 8
  store %struct._stritem* %item, %struct._stritem** %item.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct._stritem** %item.addr, metadata !818, metadata !DIExpression()), !dbg !821
  store i64 %exptime, i64* %exptime.addr, align 8, !tbaa !701
  call void @llvm.dbg.declare(metadata i64* %exptime.addr, metadata !819, metadata !DIExpression()), !dbg !822
  %0 = bitcast i8** %ret to i8*, !dbg !823
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !823
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !820, metadata !DIExpression()), !dbg !824
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !825
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !825
  %2 = load %struct._stritem*, %struct._stritem** %item.addr, align 8, !dbg !826, !tbaa !492
  %3 = load i64, i64* %exptime.addr, align 8, !dbg !827, !tbaa !701
  %call1 = call i8* @do_defer_delete(%struct._stritem* %2, i64 %3), !dbg !828
  store i8* %call1, i8** %ret, align 8, !dbg !829, !tbaa !492
  %4 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !830
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !830
  %5 = load i8*, i8** %ret, align 8, !dbg !831, !tbaa !492
  %6 = bitcast i8** %ret to i8*, !dbg !832
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #7, !dbg !832
  ret i8* %5, !dbg !833
}

declare !dbg !294 dso_local i8* @do_defer_delete(%struct._stritem* %0, i64 %1) #4

; Function Attrs: nounwind uwtable
define dso_local i8* @mt_add_delta(%struct._stritem* %item, i32 %incr, i64 %delta, i8* %buf) #0 !dbg !834 {
entry:
  %item.addr = alloca %struct._stritem*, align 8
  %incr.addr = alloca i32, align 4
  %delta.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %ret = alloca i8*, align 8
  store %struct._stritem* %item, %struct._stritem** %item.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct._stritem** %item.addr, metadata !842, metadata !DIExpression()), !dbg !847
  store i32 %incr, i32* %incr.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %incr.addr, metadata !843, metadata !DIExpression()), !dbg !848
  store i64 %delta, i64* %delta.addr, align 8, !tbaa !701
  call void @llvm.dbg.declare(metadata i64* %delta.addr, metadata !844, metadata !DIExpression()), !dbg !849
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !845, metadata !DIExpression()), !dbg !850
  %0 = bitcast i8** %ret to i8*, !dbg !851
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !851
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !846, metadata !DIExpression()), !dbg !852
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !853
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !853
  %2 = load %struct._stritem*, %struct._stritem** %item.addr, align 8, !dbg !854, !tbaa !492
  %3 = load i32, i32* %incr.addr, align 4, !dbg !855, !tbaa !560
  %tobool = icmp ne i32 %3, 0, !dbg !855
  %4 = load i64, i64* %delta.addr, align 8, !dbg !856, !tbaa !701
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !857, !tbaa !492
  %call1 = call i8* @do_add_delta(%struct._stritem* %2, i1 zeroext %tobool, i64 %4, i8* %5), !dbg !858
  store i8* %call1, i8** %ret, align 8, !dbg !859, !tbaa !492
  %6 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !860
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !860
  %7 = load i8*, i8** %ret, align 8, !dbg !861, !tbaa !492
  %8 = bitcast i8** %ret to i8*, !dbg !862
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #7, !dbg !862
  ret i8* %7, !dbg !863
}

declare !dbg !297 dso_local i8* @do_add_delta(%struct._stritem* %0, i1 zeroext %1, i64 %2, i8* %3) #4

; Function Attrs: nounwind uwtable
define dso_local i32 @mt_store_item(%struct._stritem* %item, i32 %comm) #0 !dbg !864 {
entry:
  %item.addr = alloca %struct._stritem*, align 8
  %comm.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct._stritem* %item, %struct._stritem** %item.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct._stritem** %item.addr, metadata !868, metadata !DIExpression()), !dbg !871
  store i32 %comm, i32* %comm.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %comm.addr, metadata !869, metadata !DIExpression()), !dbg !872
  %0 = bitcast i32* %ret to i8*, !dbg !873
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #7, !dbg !873
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !870, metadata !DIExpression()), !dbg !874
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !875
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !875
  %2 = load %struct._stritem*, %struct._stritem** %item.addr, align 8, !dbg !876, !tbaa !492
  %3 = load i32, i32* %comm.addr, align 4, !dbg !877, !tbaa !560
  %call1 = call i32 @do_store_item(%struct._stritem* %2, i32 %3), !dbg !878
  store i32 %call1, i32* %ret, align 4, !dbg !879, !tbaa !560
  %4 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !880
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !880
  %5 = load i32, i32* %ret, align 4, !dbg !881, !tbaa !560
  %6 = bitcast i32* %ret to i8*, !dbg !882
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %6) #7, !dbg !882
  ret i32 %5, !dbg !883
}

declare !dbg !300 dso_local i32 @do_store_item(%struct._stritem* %0, i32 %1) #4

; Function Attrs: nounwind uwtable
define dso_local void @mt_item_flush_expired() #0 !dbg !884 {
entry:
  %0 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !885
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !885
  call void @do_item_flush_expired(), !dbg !886
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !887
  %call1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !887
  ret void, !dbg !888
}

declare !dbg !303 dso_local void @do_item_flush_expired() #4

; Function Attrs: nounwind uwtable
define dso_local i8* @mt_item_cachedump(i32 %slabs_clsid, i32 %limit, i32* %bytes) #0 !dbg !889 {
entry:
  %slabs_clsid.addr = alloca i32, align 4
  %limit.addr = alloca i32, align 4
  %bytes.addr = alloca i32*, align 8
  %ret = alloca i8*, align 8
  store i32 %slabs_clsid, i32* %slabs_clsid.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %slabs_clsid.addr, metadata !891, metadata !DIExpression()), !dbg !895
  store i32 %limit, i32* %limit.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %limit.addr, metadata !892, metadata !DIExpression()), !dbg !896
  store i32* %bytes, i32** %bytes.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i32** %bytes.addr, metadata !893, metadata !DIExpression()), !dbg !897
  %0 = bitcast i8** %ret to i8*, !dbg !898
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !898
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !894, metadata !DIExpression()), !dbg !899
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !900
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !900
  %2 = load i32, i32* %slabs_clsid.addr, align 4, !dbg !901, !tbaa !560
  %3 = load i32, i32* %limit.addr, align 4, !dbg !902, !tbaa !560
  %4 = load i32*, i32** %bytes.addr, align 8, !dbg !903, !tbaa !492
  %call1 = call i8* @do_item_cachedump(i32 %2, i32 %3, i32* %4), !dbg !904
  store i8* %call1, i8** %ret, align 8, !dbg !905, !tbaa !492
  %5 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !906
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !906
  %6 = load i8*, i8** %ret, align 8, !dbg !907, !tbaa !492
  %7 = bitcast i8** %ret to i8*, !dbg !908
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #7, !dbg !908
  ret i8* %6, !dbg !909
}

declare !dbg !304 dso_local i8* @do_item_cachedump(i32 %0, i32 %1, i32* %2) #4

; Function Attrs: nounwind uwtable
define dso_local i8* @mt_item_stats(i32* %bytes) #0 !dbg !910 {
entry:
  %bytes.addr = alloca i32*, align 8
  %ret = alloca i8*, align 8
  store i32* %bytes, i32** %bytes.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i32** %bytes.addr, metadata !912, metadata !DIExpression()), !dbg !914
  %0 = bitcast i8** %ret to i8*, !dbg !915
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !915
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !913, metadata !DIExpression()), !dbg !916
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !917
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !917
  %2 = load i32*, i32** %bytes.addr, align 8, !dbg !918, !tbaa !492
  %call1 = call i8* @do_item_stats(i32* %2), !dbg !919
  store i8* %call1, i8** %ret, align 8, !dbg !920, !tbaa !492
  %3 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !921
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !921
  %4 = load i8*, i8** %ret, align 8, !dbg !922, !tbaa !492
  %5 = bitcast i8** %ret to i8*, !dbg !923
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #7, !dbg !923
  ret i8* %4, !dbg !924
}

declare !dbg !308 dso_local i8* @do_item_stats(i32* %0) #4

; Function Attrs: nounwind uwtable
define dso_local i8* @mt_item_stats_sizes(i32* %bytes) #0 !dbg !925 {
entry:
  %bytes.addr = alloca i32*, align 8
  %ret = alloca i8*, align 8
  store i32* %bytes, i32** %bytes.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i32** %bytes.addr, metadata !927, metadata !DIExpression()), !dbg !929
  %0 = bitcast i8** %ret to i8*, !dbg !930
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !930
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !928, metadata !DIExpression()), !dbg !931
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !932
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !932
  %2 = load i32*, i32** %bytes.addr, align 8, !dbg !933, !tbaa !492
  %call1 = call i8* @do_item_stats_sizes(i32* %2), !dbg !934
  store i8* %call1, i8** %ret, align 8, !dbg !935, !tbaa !492
  %3 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !936
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cache_lock) #7, !dbg !936
  %4 = load i8*, i8** %ret, align 8, !dbg !937, !tbaa !492
  %5 = bitcast i8** %ret to i8*, !dbg !938
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #7, !dbg !938
  ret i8* %4, !dbg !939
}

declare !dbg !312 dso_local i8* @do_item_stats_sizes(i32* %0) #4

; Function Attrs: nounwind uwtable
define dso_local i8* @mt_slabs_alloc(i64 %size) #0 !dbg !940 {
entry:
  %size.addr = alloca i64, align 8
  %ret = alloca i8*, align 8
  store i64 %size, i64* %size.addr, align 8, !tbaa !701
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !944, metadata !DIExpression()), !dbg !946
  %0 = bitcast i8** %ret to i8*, !dbg !947
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !947
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !945, metadata !DIExpression()), !dbg !948
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i32 548, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__PRETTY_FUNCTION__.mt_slabs_alloc, i64 0, i64 0)) #9, !dbg !949
  unreachable, !dbg !949
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8* %0, i8* %1, i32 %2, i8* %3) #6

; Function Attrs: nounwind uwtable
define dso_local void @mt_slabs_free(i8* %ptr, i64 %size) #0 !dbg !952 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !956, metadata !DIExpression()), !dbg !958
  store i64 %size, i64* %size.addr, align 8, !tbaa !701
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !957, metadata !DIExpression()), !dbg !959
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i32 556, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__PRETTY_FUNCTION__.mt_slabs_free, i64 0, i64 0)) #9, !dbg !960
  unreachable, !dbg !960
}

; Function Attrs: nounwind uwtable
define dso_local i8* @mt_slabs_stats(i32* %buflen) #0 !dbg !963 {
entry:
  %buflen.addr = alloca i32*, align 8
  %ret = alloca i8*, align 8
  store i32* %buflen, i32** %buflen.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i32** %buflen.addr, metadata !965, metadata !DIExpression()), !dbg !967
  %0 = bitcast i8** %ret to i8*, !dbg !968
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !968
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !966, metadata !DIExpression()), !dbg !969
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @slabs_lock to i8*), i64 32), !dbg !970
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @slabs_lock) #7, !dbg !970
  %2 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @slabs_lock to i8*), i64 32), !dbg !971
  %call1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @slabs_lock) #7, !dbg !971
  %3 = load i8*, i8** %ret, align 8, !dbg !972, !tbaa !492
  %4 = bitcast i8** %ret to i8*, !dbg !973
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #7, !dbg !973
  ret i8* %3, !dbg !974
}

; Function Attrs: nounwind uwtable
define dso_local void @mt_stats_lock() #0 !dbg !975 {
entry:
  %0 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @stats_lock to i8*), i64 32), !dbg !976
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @stats_lock) #7, !dbg !976
  ret void, !dbg !977
}

; Function Attrs: nounwind uwtable
define dso_local void @mt_stats_unlock() #0 !dbg !978 {
entry:
  %0 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @stats_lock to i8*), i64 32), !dbg !979
  %call = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @stats_lock) #7, !dbg !979
  ret void, !dbg !980
}

; Function Attrs: nounwind uwtable
define dso_local void @thread_init(i32 %nthreads, %struct.event_base* %main_base) #0 !dbg !981 {
entry:
  %nthreads.addr = alloca i32, align 4
  %main_base.addr = alloca %struct.event_base*, align 8
  %i = alloca i32, align 4
  %fds = alloca [2 x i32], align 4
  store i32 %nthreads, i32* %nthreads.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %nthreads.addr, metadata !985, metadata !DIExpression()), !dbg !993
  store %struct.event_base* %main_base, %struct.event_base** %main_base.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct.event_base** %main_base.addr, metadata !986, metadata !DIExpression()), !dbg !994
  %0 = bitcast i32* %i to i8*, !dbg !995
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #7, !dbg !995
  call void @llvm.dbg.declare(metadata i32* %i, metadata !987, metadata !DIExpression()), !dbg !996
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cache_lock to i8*), i64 32), !dbg !997
  %call = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @cache_lock, %union.pthread_mutexattr_t* null) #7, !dbg !997
  %2 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @conn_lock to i8*), i64 32), !dbg !998
  %call1 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @conn_lock, %union.pthread_mutexattr_t* null) #7, !dbg !998
  %3 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @slabs_lock to i8*), i64 32), !dbg !999
  %call2 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @slabs_lock, %union.pthread_mutexattr_t* null) #7, !dbg !999
  %4 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @stats_lock to i8*), i64 32), !dbg !1000
  %call3 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @stats_lock, %union.pthread_mutexattr_t* null) #7, !dbg !1000
  %5 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @init_lock to i8*), i64 32), !dbg !1001
  %call4 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @init_lock, %union.pthread_mutexattr_t* null) #7, !dbg !1001
  %call5 = call i32 @pthread_cond_init(%union.pthread_cond_t* @init_cond, %union.pthread_condattr_t* null) #7, !dbg !1002
  %6 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cqi_freelist_lock to i8*), i64 32), !dbg !1003
  %call6 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* @cqi_freelist_lock, %union.pthread_mutexattr_t* null) #7, !dbg !1003
  store %struct.conn_queue_item* null, %struct.conn_queue_item** @cqi_freelist, align 8, !dbg !1004, !tbaa !492
  %7 = load i32, i32* %nthreads.addr, align 4, !dbg !1005, !tbaa !560
  %conv = sext i32 %7 to i64, !dbg !1005
  %mul = mul i64 256, %conv, !dbg !1006
  %call7 = call noalias i8* @malloc(i64 %mul) #7, !dbg !1007
  %8 = bitcast i8* %call7 to %struct.LIBEVENT_THREAD*, !dbg !1007
  store %struct.LIBEVENT_THREAD* %8, %struct.LIBEVENT_THREAD** @threads, align 8, !dbg !1008, !tbaa !492
  %9 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8, !dbg !1009, !tbaa !492
  %tobool = icmp ne %struct.LIBEVENT_THREAD* %9, null, !dbg !1009
  br i1 %tobool, label %if.end, label %if.then, !dbg !1011

if.then:                                          ; preds = %entry
  call void @perror(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0)), !dbg !1012
  call void @exit(i32 1) #9, !dbg !1014
  unreachable, !dbg !1014

if.end:                                           ; preds = %entry
  %10 = load %struct.event_base*, %struct.event_base** %main_base.addr, align 8, !dbg !1015, !tbaa !492
  %11 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8, !dbg !1016, !tbaa !492
  %arrayidx = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %11, i64 0, !dbg !1016
  %base = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %arrayidx, i32 0, i32 1, !dbg !1017
  store %struct.event_base* %10, %struct.event_base** %base, align 8, !dbg !1018, !tbaa !1019
  %call8 = call i64 @pthread_self() #8, !dbg !1020
  %12 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8, !dbg !1021, !tbaa !492
  %arrayidx9 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %12, i64 0, !dbg !1021
  %thread_id = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %arrayidx9, i32 0, i32 0, !dbg !1022
  store i64 %call8, i64* %thread_id, align 8, !dbg !1023, !tbaa !682
  store i32 0, i32* %i, align 4, !dbg !1024, !tbaa !560
  br label %for.cond, !dbg !1025

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !1026, !tbaa !560
  %14 = load i32, i32* %nthreads.addr, align 4, !dbg !1027, !tbaa !560
  %cmp = icmp slt i32 %13, %14, !dbg !1028
  br i1 %cmp, label %for.body, label %for.end, !dbg !1029

for.body:                                         ; preds = %for.cond
  %15 = bitcast [2 x i32]* %fds to i8*, !dbg !1030
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #7, !dbg !1030
  call void @llvm.dbg.declare(metadata [2 x i32]* %fds, metadata !988, metadata !DIExpression()), !dbg !1031
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %fds, i64 0, i64 0, !dbg !1032
  %call11 = call i32 @pipe(i32* %arraydecay) #7, !dbg !1034
  %tobool12 = icmp ne i32 %call11, 0, !dbg !1034
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !1035

if.then13:                                        ; preds = %for.body
  call void @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0)), !dbg !1036
  call void @exit(i32 1) #9, !dbg !1038
  unreachable, !dbg !1038

if.end14:                                         ; preds = %for.body
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %fds, i64 0, i64 0, !dbg !1039
  %16 = load i32, i32* %arrayidx15, align 4, !dbg !1039, !tbaa !560
  %17 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8, !dbg !1040, !tbaa !492
  %18 = load i32, i32* %i, align 4, !dbg !1041, !tbaa !560
  %idxprom = sext i32 %18 to i64, !dbg !1040
  %arrayidx16 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %17, i64 %idxprom, !dbg !1040
  %notify_receive_fd = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %arrayidx16, i32 0, i32 3, !dbg !1042
  store i32 %16, i32* %notify_receive_fd, align 8, !dbg !1043, !tbaa !1044
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %fds, i64 0, i64 1, !dbg !1045
  %19 = load i32, i32* %arrayidx17, align 4, !dbg !1045, !tbaa !560
  %20 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8, !dbg !1046, !tbaa !492
  %21 = load i32, i32* %i, align 4, !dbg !1047, !tbaa !560
  %idxprom18 = sext i32 %21 to i64, !dbg !1046
  %arrayidx19 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %20, i64 %idxprom18, !dbg !1046
  %notify_send_fd = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %arrayidx19, i32 0, i32 4, !dbg !1048
  store i32 %19, i32* %notify_send_fd, align 4, !dbg !1049, !tbaa !618
  %22 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8, !dbg !1050, !tbaa !492
  %23 = load i32, i32* %i, align 4, !dbg !1051, !tbaa !560
  %idxprom20 = sext i32 %23 to i64, !dbg !1050
  %arrayidx21 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %22, i64 %idxprom20, !dbg !1050
  call void @setup_thread(%struct.LIBEVENT_THREAD* %arrayidx21), !dbg !1052
  %24 = bitcast [2 x i32]* %fds to i8*, !dbg !1053
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #7, !dbg !1053
  br label %for.inc, !dbg !1054

for.inc:                                          ; preds = %if.end14
  %25 = load i32, i32* %i, align 4, !dbg !1055, !tbaa !560
  %inc = add nsw i32 %25, 1, !dbg !1055
  store i32 %inc, i32* %i, align 4, !dbg !1055, !tbaa !560
  br label %for.cond, !dbg !1056, !llvm.loop !1057

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %i, align 4, !dbg !1059, !tbaa !560
  br label %for.cond22, !dbg !1061

for.cond22:                                       ; preds = %for.inc28, %for.end
  %26 = load i32, i32* %i, align 4, !dbg !1062, !tbaa !560
  %27 = load i32, i32* %nthreads.addr, align 4, !dbg !1064, !tbaa !560
  %cmp23 = icmp slt i32 %26, %27, !dbg !1065
  br i1 %cmp23, label %for.body25, label %for.end30, !dbg !1066

for.body25:                                       ; preds = %for.cond22
  %28 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** @threads, align 8, !dbg !1067, !tbaa !492
  %29 = load i32, i32* %i, align 4, !dbg !1069, !tbaa !560
  %idxprom26 = sext i32 %29 to i64, !dbg !1067
  %arrayidx27 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %28, i64 %idxprom26, !dbg !1067
  %30 = bitcast %struct.LIBEVENT_THREAD* %arrayidx27 to i8*, !dbg !1070
  call void @create_worker(i8* (i8*)* @worker_libevent, i8* %30), !dbg !1071
  br label %for.inc28, !dbg !1072

for.inc28:                                        ; preds = %for.body25
  %31 = load i32, i32* %i, align 4, !dbg !1073, !tbaa !560
  %inc29 = add nsw i32 %31, 1, !dbg !1073
  store i32 %inc29, i32* %i, align 4, !dbg !1073, !tbaa !560
  br label %for.cond22, !dbg !1074, !llvm.loop !1075

for.end30:                                        ; preds = %for.cond22
  %32 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @init_lock to i8*), i64 32), !dbg !1077
  %call31 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @init_lock) #7, !dbg !1077
  %33 = load i32, i32* @init_count, align 4, !dbg !1078, !tbaa !560
  %inc32 = add nsw i32 %33, 1, !dbg !1078
  store i32 %inc32, i32* @init_count, align 4, !dbg !1078, !tbaa !560
  br label %while.cond, !dbg !1079

while.cond:                                       ; preds = %while.body, %for.end30
  %34 = load i32, i32* @init_count, align 4, !dbg !1080, !tbaa !560
  %35 = load i32, i32* %nthreads.addr, align 4, !dbg !1081, !tbaa !560
  %cmp33 = icmp slt i32 %34, %35, !dbg !1082
  br i1 %cmp33, label %while.body, label %while.end, !dbg !1079

while.body:                                       ; preds = %while.cond
  %call35 = call i32 @pthread_cond_wait(%union.pthread_cond_t* @init_cond, %union.pthread_mutex_t* @init_lock), !dbg !1083
  br label %while.cond, !dbg !1079, !llvm.loop !1085

while.end:                                        ; preds = %while.cond
  %36 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @init_lock to i8*), i64 32), !dbg !1087
  %call36 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @init_lock) #7, !dbg !1087
  %37 = bitcast i32* %i to i8*, !dbg !1088
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %37) #7, !dbg !1088
  ret void, !dbg !1088
}

; Function Attrs: nounwind
declare !dbg !313 dso_local i32 @pthread_mutex_init(%union.pthread_mutex_t* %0, %union.pthread_mutexattr_t* %1) #3

; Function Attrs: nounwind
declare !dbg !325 dso_local i32 @pthread_cond_init(%union.pthread_cond_t* %0, %union.pthread_condattr_t* %1) #3

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64 %0) #3

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32 %0) #6

; Function Attrs: nounwind
declare !dbg !373 dso_local i32 @pipe(i32* %0) #3

; Function Attrs: nounwind uwtable
define internal void @setup_thread(%struct.LIBEVENT_THREAD* %me) #0 !dbg !1089 {
entry:
  %me.addr = alloca %struct.LIBEVENT_THREAD*, align 8
  store %struct.LIBEVENT_THREAD* %me, %struct.LIBEVENT_THREAD** %me.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct.LIBEVENT_THREAD** %me.addr, metadata !1093, metadata !DIExpression()), !dbg !1094
  %0 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me.addr, align 8, !dbg !1095, !tbaa !492
  %base = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %0, i32 0, i32 1, !dbg !1097
  %1 = load %struct.event_base*, %struct.event_base** %base, align 8, !dbg !1097, !tbaa !1019
  %tobool = icmp ne %struct.event_base* %1, null, !dbg !1095
  br i1 %tobool, label %if.end6, label %if.then, !dbg !1098

if.then:                                          ; preds = %entry
  %call = call %struct.event_base* @event_init(), !dbg !1099
  %2 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me.addr, align 8, !dbg !1101, !tbaa !492
  %base1 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %2, i32 0, i32 1, !dbg !1102
  store %struct.event_base* %call, %struct.event_base** %base1, align 8, !dbg !1103, !tbaa !1019
  %3 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me.addr, align 8, !dbg !1104, !tbaa !492
  %base2 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %3, i32 0, i32 1, !dbg !1106
  %4 = load %struct.event_base*, %struct.event_base** %base2, align 8, !dbg !1106, !tbaa !1019
  %tobool3 = icmp ne %struct.event_base* %4, null, !dbg !1104
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !1107

if.then4:                                         ; preds = %if.then
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1108, !tbaa !492
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)), !dbg !1110
  call void @exit(i32 1) #9, !dbg !1111
  unreachable, !dbg !1111

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !1112

if.end6:                                          ; preds = %if.end, %entry
  %6 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me.addr, align 8, !dbg !1113, !tbaa !492
  %notify_event = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %6, i32 0, i32 2, !dbg !1114
  %7 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me.addr, align 8, !dbg !1115, !tbaa !492
  %notify_receive_fd = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %7, i32 0, i32 3, !dbg !1116
  %8 = load i32, i32* %notify_receive_fd, align 8, !dbg !1116, !tbaa !1044
  %9 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me.addr, align 8, !dbg !1117, !tbaa !492
  %10 = bitcast %struct.LIBEVENT_THREAD* %9 to i8*, !dbg !1117
  call void @event_set(%struct.event* %notify_event, i32 %8, i16 signext 18, void (i32, i16, i8*)* @thread_libevent_process, i8* %10), !dbg !1118
  %11 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me.addr, align 8, !dbg !1119, !tbaa !492
  %base7 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %11, i32 0, i32 1, !dbg !1120
  %12 = load %struct.event_base*, %struct.event_base** %base7, align 8, !dbg !1120, !tbaa !1019
  %13 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me.addr, align 8, !dbg !1121, !tbaa !492
  %notify_event8 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %13, i32 0, i32 2, !dbg !1122
  %call9 = call i32 @event_base_set(%struct.event_base* %12, %struct.event* %notify_event8), !dbg !1123
  %14 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me.addr, align 8, !dbg !1124, !tbaa !492
  %notify_event10 = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %14, i32 0, i32 2, !dbg !1126
  %call11 = call i32 @event_add(%struct.event* %notify_event10, %struct.timeval* null), !dbg !1127
  %cmp = icmp eq i32 %call11, -1, !dbg !1128
  br i1 %cmp, label %if.then12, label %if.end14, !dbg !1129

if.then12:                                        ; preds = %if.end6
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1130, !tbaa !492
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0)), !dbg !1132
  call void @exit(i32 1) #9, !dbg !1133
  unreachable, !dbg !1133

if.end14:                                         ; preds = %if.end6
  %16 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me.addr, align 8, !dbg !1134, !tbaa !492
  %new_conn_queue = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %16, i32 0, i32 5, !dbg !1135
  call void @cq_init(%struct.conn_queue* %new_conn_queue), !dbg !1136
  ret void, !dbg !1137
}

; Function Attrs: nounwind uwtable
define internal void @create_worker(i8* (i8*)* %func, i8* %arg) #0 !dbg !1138 {
entry:
  %func.addr = alloca i8* (i8*)*, align 8
  %arg.addr = alloca i8*, align 8
  %thread = alloca i64, align 8
  %attr = alloca %union.pthread_attr_t, align 8
  %ret = alloca i32, align 4
  store i8* (i8*)* %func, i8* (i8*)** %func.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i8* (i8*)** %func.addr, metadata !1145, metadata !DIExpression()), !dbg !1151
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1146, metadata !DIExpression()), !dbg !1152
  %0 = bitcast i64* %thread to i8*, !dbg !1153
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !1153
  call void @llvm.dbg.declare(metadata i64* %thread, metadata !1147, metadata !DIExpression()), !dbg !1154
  %1 = bitcast %union.pthread_attr_t* %attr to i8*, !dbg !1155
  call void @llvm.lifetime.start.p0i8(i64 56, i8* %1) #7, !dbg !1155
  call void @llvm.dbg.declare(metadata %union.pthread_attr_t* %attr, metadata !1148, metadata !DIExpression()), !dbg !1156
  %2 = bitcast i32* %ret to i8*, !dbg !1157
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #7, !dbg !1157
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !1150, metadata !DIExpression()), !dbg !1158
  %call = call i32 @pthread_attr_init(%union.pthread_attr_t* %attr) #7, !dbg !1159
  %3 = load i8* (i8*)*, i8* (i8*)** %func.addr, align 8, !dbg !1160, !tbaa !492
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !1162, !tbaa !492
  %call1 = call i32 @pthread_create(i64* %thread, %union.pthread_attr_t* %attr, i8* (i8*)* %3, i8* %4) #7, !dbg !1163
  store i32 %call1, i32* %ret, align 4, !dbg !1164, !tbaa !560
  %cmp = icmp ne i32 %call1, 0, !dbg !1165
  br i1 %cmp, label %if.then, label %if.end, !dbg !1166

if.then:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1167, !tbaa !492
  %6 = load i32, i32* %ret, align 4, !dbg !1169, !tbaa !560
  %call2 = call i8* @strerror(i32 %6) #7, !dbg !1170
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i8* %call2), !dbg !1171
  call void @exit(i32 1) #9, !dbg !1172
  unreachable, !dbg !1172

if.end:                                           ; preds = %entry
  %7 = bitcast i32* %ret to i8*, !dbg !1173
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %7) #7, !dbg !1173
  %8 = bitcast %union.pthread_attr_t* %attr to i8*, !dbg !1173
  call void @llvm.lifetime.end.p0i8(i64 56, i8* %8) #7, !dbg !1173
  %9 = bitcast i64* %thread to i8*, !dbg !1173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #7, !dbg !1173
  ret void, !dbg !1173
}

; Function Attrs: nounwind uwtable
define internal i8* @worker_libevent(i8* %arg) #0 !dbg !1174 {
entry:
  %arg.addr = alloca i8*, align 8
  %me = alloca %struct.LIBEVENT_THREAD*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1176, metadata !DIExpression()), !dbg !1178
  %0 = bitcast %struct.LIBEVENT_THREAD** %me to i8*, !dbg !1179
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !1179
  call void @llvm.dbg.declare(metadata %struct.LIBEVENT_THREAD** %me, metadata !1177, metadata !DIExpression()), !dbg !1180
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !1181, !tbaa !492
  %2 = bitcast i8* %1 to %struct.LIBEVENT_THREAD*, !dbg !1181
  store %struct.LIBEVENT_THREAD* %2, %struct.LIBEVENT_THREAD** %me, align 8, !dbg !1180, !tbaa !492
  %3 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @init_lock to i8*), i64 32), !dbg !1182
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @init_lock) #7, !dbg !1182
  %4 = load i32, i32* @init_count, align 4, !dbg !1183, !tbaa !560
  %inc = add nsw i32 %4, 1, !dbg !1183
  store i32 %inc, i32* @init_count, align 4, !dbg !1183, !tbaa !560
  %call1 = call i32 @pthread_cond_signal(%union.pthread_cond_t* @init_cond) #7, !dbg !1184
  %5 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @init_lock to i8*), i64 32), !dbg !1185
  %call2 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @init_lock) #7, !dbg !1185
  %6 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me, align 8, !dbg !1186, !tbaa !492
  %base = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %6, i32 0, i32 1, !dbg !1187
  %7 = load %struct.event_base*, %struct.event_base** %base, align 8, !dbg !1187, !tbaa !1019
  %call3 = call i32 @event_base_loop(%struct.event_base* %7, i32 0), !dbg !1188
  %8 = bitcast %struct.LIBEVENT_THREAD** %me to i8*, !dbg !1189
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #7, !dbg !1189
  ret i8* null, !dbg !1190
}

declare !dbg !376 dso_local i32 @pthread_cond_wait(%union.pthread_cond_t* %0, %union.pthread_mutex_t* %1) #4

; Function Attrs: nounwind uwtable
define internal %struct.conn_queue_item* @cqi_new() #0 !dbg !1191 {
entry:
  %retval = alloca %struct.conn_queue_item*, align 8
  %item = alloca %struct.conn_queue_item*, align 8
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %0 = bitcast %struct.conn_queue_item** %item to i8*, !dbg !1199
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !1199
  call void @llvm.dbg.declare(metadata %struct.conn_queue_item** %item, metadata !1195, metadata !DIExpression()), !dbg !1200
  store %struct.conn_queue_item* null, %struct.conn_queue_item** %item, align 8, !dbg !1200, !tbaa !492
  %1 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cqi_freelist_lock to i8*), i64 32), !dbg !1201
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cqi_freelist_lock) #7, !dbg !1201
  %2 = load %struct.conn_queue_item*, %struct.conn_queue_item** @cqi_freelist, align 8, !dbg !1202, !tbaa !492
  %tobool = icmp ne %struct.conn_queue_item* %2, null, !dbg !1202
  br i1 %tobool, label %if.then, label %if.end, !dbg !1204

if.then:                                          ; preds = %entry
  %3 = load %struct.conn_queue_item*, %struct.conn_queue_item** @cqi_freelist, align 8, !dbg !1205, !tbaa !492
  store %struct.conn_queue_item* %3, %struct.conn_queue_item** %item, align 8, !dbg !1207, !tbaa !492
  %4 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1208, !tbaa !492
  %next = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %4, i32 0, i32 5, !dbg !1209
  %5 = load %struct.conn_queue_item*, %struct.conn_queue_item** %next, align 8, !dbg !1209, !tbaa !645
  store %struct.conn_queue_item* %5, %struct.conn_queue_item** @cqi_freelist, align 8, !dbg !1210, !tbaa !492
  br label %if.end, !dbg !1211

if.end:                                           ; preds = %if.then, %entry
  %6 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cqi_freelist_lock to i8*), i64 32), !dbg !1212
  %call1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cqi_freelist_lock) #7, !dbg !1212
  %7 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1213, !tbaa !492
  %cmp = icmp eq %struct.conn_queue_item* null, %7, !dbg !1214
  br i1 %cmp, label %if.then2, label %if.end16, !dbg !1215

if.then2:                                         ; preds = %if.end
  %8 = bitcast i32* %i to i8*, !dbg !1216
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #7, !dbg !1216
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1196, metadata !DIExpression()), !dbg !1217
  %call3 = call noalias i8* @malloc(i64 2048) #7, !dbg !1218
  %9 = bitcast i8* %call3 to %struct.conn_queue_item*, !dbg !1218
  store %struct.conn_queue_item* %9, %struct.conn_queue_item** %item, align 8, !dbg !1219, !tbaa !492
  %10 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1220, !tbaa !492
  %cmp4 = icmp eq %struct.conn_queue_item* null, %10, !dbg !1222
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !1223

if.then5:                                         ; preds = %if.then2
  store %struct.conn_queue_item* null, %struct.conn_queue_item** %retval, align 8, !dbg !1224
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !1224

if.end6:                                          ; preds = %if.then2
  store i32 2, i32* %i, align 4, !dbg !1225, !tbaa !560
  br label %for.cond, !dbg !1227

for.cond:                                         ; preds = %for.inc, %if.end6
  %11 = load i32, i32* %i, align 4, !dbg !1228, !tbaa !560
  %cmp7 = icmp slt i32 %11, 64, !dbg !1230
  br i1 %cmp7, label %for.body, label %for.end, !dbg !1231

for.body:                                         ; preds = %for.cond
  %12 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1232, !tbaa !492
  %13 = load i32, i32* %i, align 4, !dbg !1233, !tbaa !560
  %idxprom = sext i32 %13 to i64, !dbg !1232
  %arrayidx = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %12, i64 %idxprom, !dbg !1232
  %14 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1234, !tbaa !492
  %15 = load i32, i32* %i, align 4, !dbg !1235, !tbaa !560
  %sub = sub nsw i32 %15, 1, !dbg !1236
  %idxprom8 = sext i32 %sub to i64, !dbg !1234
  %arrayidx9 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %14, i64 %idxprom8, !dbg !1234
  %next10 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %arrayidx9, i32 0, i32 5, !dbg !1237
  store %struct.conn_queue_item* %arrayidx, %struct.conn_queue_item** %next10, align 8, !dbg !1238, !tbaa !645
  br label %for.inc, !dbg !1234

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !1239, !tbaa !560
  %inc = add nsw i32 %16, 1, !dbg !1239
  store i32 %inc, i32* %i, align 4, !dbg !1239, !tbaa !560
  br label %for.cond, !dbg !1240, !llvm.loop !1241

for.end:                                          ; preds = %for.cond
  %17 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cqi_freelist_lock to i8*), i64 32), !dbg !1243
  %call11 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cqi_freelist_lock) #7, !dbg !1243
  %18 = load %struct.conn_queue_item*, %struct.conn_queue_item** @cqi_freelist, align 8, !dbg !1244, !tbaa !492
  %19 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1245, !tbaa !492
  %arrayidx12 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %19, i64 63, !dbg !1245
  %next13 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %arrayidx12, i32 0, i32 5, !dbg !1246
  store %struct.conn_queue_item* %18, %struct.conn_queue_item** %next13, align 8, !dbg !1247, !tbaa !645
  %20 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1248, !tbaa !492
  %arrayidx14 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %20, i64 1, !dbg !1248
  store %struct.conn_queue_item* %arrayidx14, %struct.conn_queue_item** @cqi_freelist, align 8, !dbg !1249, !tbaa !492
  %21 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cqi_freelist_lock to i8*), i64 32), !dbg !1250
  %call15 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cqi_freelist_lock) #7, !dbg !1250
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !1251
  br label %cleanup, !dbg !1251

cleanup:                                          ; preds = %for.end, %if.then5
  %22 = bitcast i32* %i to i8*, !dbg !1251
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %22) #7, !dbg !1251
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup17 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end16, !dbg !1252

if.end16:                                         ; preds = %cleanup.cont, %if.end
  %23 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1253, !tbaa !492
  store %struct.conn_queue_item* %23, %struct.conn_queue_item** %retval, align 8, !dbg !1254
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup17, !dbg !1254

cleanup17:                                        ; preds = %if.end16, %cleanup
  %24 = bitcast %struct.conn_queue_item** %item to i8*, !dbg !1255
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #7, !dbg !1255
  %25 = load %struct.conn_queue_item*, %struct.conn_queue_item** %retval, align 8, !dbg !1255
  ret %struct.conn_queue_item* %25, !dbg !1255
}

; Function Attrs: nounwind
declare !dbg !379 dso_local i32 @pthread_cond_signal(%union.pthread_cond_t* %0) #3

declare !dbg !382 dso_local %struct.event_base* @event_init() #4

declare dso_local i32 @fprintf(%struct._IO_FILE* %0, i8* %1, ...) #4

declare !dbg !386 dso_local void @event_set(%struct.event* %0, i32 %1, i16 signext %2, void (i32, i16, i8*)* %3, i8* %4) #4

; Function Attrs: nounwind uwtable
define internal void @thread_libevent_process(i32 %fd, i16 signext %which, i8* %arg) #0 !dbg !1256 {
entry:
  %fd.addr = alloca i32, align 4
  %which.addr = alloca i16, align 2
  %arg.addr = alloca i8*, align 8
  %me = alloca %struct.LIBEVENT_THREAD*, align 8
  %item = alloca %struct.conn_queue_item*, align 8
  %buf = alloca [1 x i8], align 1
  %c = alloca %struct.conn*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !560
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !1258, metadata !DIExpression()), !dbg !1270
  store i16 %which, i16* %which.addr, align 2, !tbaa !1271
  call void @llvm.dbg.declare(metadata i16* %which.addr, metadata !1259, metadata !DIExpression()), !dbg !1272
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !1260, metadata !DIExpression()), !dbg !1273
  %0 = bitcast %struct.LIBEVENT_THREAD** %me to i8*, !dbg !1274
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !1274
  call void @llvm.dbg.declare(metadata %struct.LIBEVENT_THREAD** %me, metadata !1261, metadata !DIExpression()), !dbg !1275
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !1276, !tbaa !492
  %2 = bitcast i8* %1 to %struct.LIBEVENT_THREAD*, !dbg !1276
  store %struct.LIBEVENT_THREAD* %2, %struct.LIBEVENT_THREAD** %me, align 8, !dbg !1275, !tbaa !492
  %3 = bitcast %struct.conn_queue_item** %item to i8*, !dbg !1277
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #7, !dbg !1277
  call void @llvm.dbg.declare(metadata %struct.conn_queue_item** %item, metadata !1262, metadata !DIExpression()), !dbg !1278
  %4 = bitcast [1 x i8]* %buf to i8*, !dbg !1279
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %4) #7, !dbg !1279
  call void @llvm.dbg.declare(metadata [1 x i8]* %buf, metadata !1263, metadata !DIExpression()), !dbg !1280
  %5 = load i32, i32* %fd.addr, align 4, !dbg !1281, !tbaa !560
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %buf, i64 0, i64 0, !dbg !1283
  %call = call i64 @read(i32 %5, i8* %arraydecay, i64 1), !dbg !1284
  %cmp = icmp ne i64 %call, 1, !dbg !1285
  br i1 %cmp, label %if.then, label %if.end4, !dbg !1286

if.then:                                          ; preds = %entry
  %6 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !1287, !tbaa !1289
  %cmp1 = icmp sgt i32 %6, 0, !dbg !1290
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !1291

if.then2:                                         ; preds = %if.then
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1292, !tbaa !492
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0)), !dbg !1293
  br label %if.end, !dbg !1293

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end4, !dbg !1294

if.end4:                                          ; preds = %if.end, %entry
  %8 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me, align 8, !dbg !1295, !tbaa !492
  %new_conn_queue = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %8, i32 0, i32 5, !dbg !1296
  %call5 = call %struct.conn_queue_item* @cq_peek(%struct.conn_queue* %new_conn_queue), !dbg !1297
  store %struct.conn_queue_item* %call5, %struct.conn_queue_item** %item, align 8, !dbg !1298, !tbaa !492
  %9 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1299, !tbaa !492
  %cmp6 = icmp ne %struct.conn_queue_item* null, %9, !dbg !1300
  br i1 %cmp6, label %if.then7, label %if.end24, !dbg !1301

if.then7:                                         ; preds = %if.end4
  %10 = bitcast %struct.conn** %c to i8*, !dbg !1302
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #7, !dbg !1302
  call void @llvm.dbg.declare(metadata %struct.conn** %c, metadata !1267, metadata !DIExpression()), !dbg !1303
  %11 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1304, !tbaa !492
  %sfd = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %11, i32 0, i32 0, !dbg !1305
  %12 = load i32, i32* %sfd, align 8, !dbg !1305, !tbaa !587
  %13 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1306, !tbaa !492
  %init_state = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %13, i32 0, i32 1, !dbg !1307
  %14 = load i32, i32* %init_state, align 4, !dbg !1307, !tbaa !593
  %15 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1308, !tbaa !492
  %event_flags = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %15, i32 0, i32 2, !dbg !1309
  %16 = load i32, i32* %event_flags, align 8, !dbg !1309, !tbaa !598
  %17 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1310, !tbaa !492
  %read_buffer_size = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %17, i32 0, i32 3, !dbg !1311
  %18 = load i32, i32* %read_buffer_size, align 4, !dbg !1311, !tbaa !603
  %19 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1312, !tbaa !492
  %is_udp = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %19, i32 0, i32 4, !dbg !1313
  %20 = load i32, i32* %is_udp, align 8, !dbg !1313, !tbaa !608
  %tobool = icmp ne i32 %20, 0, !dbg !1312
  %21 = load %struct.LIBEVENT_THREAD*, %struct.LIBEVENT_THREAD** %me, align 8, !dbg !1314, !tbaa !492
  %base = getelementptr inbounds %struct.LIBEVENT_THREAD, %struct.LIBEVENT_THREAD* %21, i32 0, i32 1, !dbg !1315
  %22 = load %struct.event_base*, %struct.event_base** %base, align 8, !dbg !1315, !tbaa !1019
  %call8 = call %struct.conn* @conn_new(i32 %12, i32 %14, i32 %16, i32 %18, i1 zeroext %tobool, %struct.event_base* %22), !dbg !1316
  store %struct.conn* %call8, %struct.conn** %c, align 8, !dbg !1303, !tbaa !492
  %23 = load %struct.conn*, %struct.conn** %c, align 8, !dbg !1317, !tbaa !492
  %cmp9 = icmp eq %struct.conn* %23, null, !dbg !1319
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !1320

if.then10:                                        ; preds = %if.then7
  %24 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1321, !tbaa !492
  %is_udp11 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %24, i32 0, i32 4, !dbg !1324
  %25 = load i32, i32* %is_udp11, align 8, !dbg !1324, !tbaa !608
  %tobool12 = icmp ne i32 %25, 0, !dbg !1321
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !1325

if.then13:                                        ; preds = %if.then10
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1326, !tbaa !492
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i64 0, i64 0)), !dbg !1328
  call void @exit(i32 1) #9, !dbg !1329
  unreachable, !dbg !1329

if.else:                                          ; preds = %if.then10
  %27 = load i32, i32* getelementptr inbounds (%struct.settings, %struct.settings* @settings, i32 0, i32 5), align 8, !dbg !1330, !tbaa !1289
  %cmp15 = icmp sgt i32 %27, 0, !dbg !1333
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !1334

if.then16:                                        ; preds = %if.else
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1335, !tbaa !492
  %29 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1337, !tbaa !492
  %sfd17 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %29, i32 0, i32 0, !dbg !1338
  %30 = load i32, i32* %sfd17, align 8, !dbg !1338, !tbaa !587
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0), i32 %30), !dbg !1339
  br label %if.end19, !dbg !1340

if.end19:                                         ; preds = %if.then16, %if.else
  %31 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1341, !tbaa !492
  %sfd20 = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %31, i32 0, i32 0, !dbg !1342
  %32 = load i32, i32* %sfd20, align 8, !dbg !1342, !tbaa !587
  %call21 = call i32 @close(i32 %32), !dbg !1343
  br label %if.end22

if.end22:                                         ; preds = %if.end19
  br label %if.end23, !dbg !1344

if.end23:                                         ; preds = %if.end22, %if.then7
  %33 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1345, !tbaa !492
  call void @cqi_free(%struct.conn_queue_item* %33), !dbg !1346
  %34 = bitcast %struct.conn** %c to i8*, !dbg !1347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #7, !dbg !1347
  br label %if.end24, !dbg !1348

if.end24:                                         ; preds = %if.end23, %if.end4
  %35 = bitcast [1 x i8]* %buf to i8*, !dbg !1349
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %35) #7, !dbg !1349
  %36 = bitcast %struct.conn_queue_item** %item to i8*, !dbg !1349
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #7, !dbg !1349
  %37 = bitcast %struct.LIBEVENT_THREAD** %me to i8*, !dbg !1349
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37) #7, !dbg !1349
  ret void, !dbg !1349
}

declare !dbg !389 dso_local i32 @event_base_set(%struct.event_base* %0, %struct.event* %1) #4

declare !dbg !393 dso_local i32 @event_add(%struct.event* %0, %struct.timeval* %1) #4

; Function Attrs: nounwind uwtable
define internal void @cq_init(%struct.conn_queue* %cq) #0 !dbg !1350 {
entry:
  %cq.addr = alloca %struct.conn_queue*, align 8
  store %struct.conn_queue* %cq, %struct.conn_queue** %cq.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct.conn_queue** %cq.addr, metadata !1354, metadata !DIExpression()), !dbg !1355
  %0 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !1356, !tbaa !492
  %lock = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %0, i32 0, i32 2, !dbg !1357
  %1 = bitcast %union.pthread_mutex_t* %lock to i8*, !dbg !1358
  %2 = call i32 @cpavise_store_data(i8* %1, i64 32), !dbg !1358
  %call = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %lock, %union.pthread_mutexattr_t* null) #7, !dbg !1358
  %3 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !1359, !tbaa !492
  %cond = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %3, i32 0, i32 3, !dbg !1360
  %call1 = call i32 @pthread_cond_init(%union.pthread_cond_t* %cond, %union.pthread_condattr_t* null) #7, !dbg !1361
  %4 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !1362, !tbaa !492
  %head = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %4, i32 0, i32 0, !dbg !1363
  store %struct.conn_queue_item* null, %struct.conn_queue_item** %head, align 8, !dbg !1364, !tbaa !659
  %5 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !1365, !tbaa !492
  %tail = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %5, i32 0, i32 1, !dbg !1366
  store %struct.conn_queue_item* null, %struct.conn_queue_item** %tail, align 8, !dbg !1367, !tbaa !652
  ret void, !dbg !1368
}

declare !dbg !398 dso_local i64 @read(i32 %0, i8* %1, i64 %2) #4

; Function Attrs: nounwind uwtable
define internal %struct.conn_queue_item* @cq_peek(%struct.conn_queue* %cq) #0 !dbg !1369 {
entry:
  %cq.addr = alloca %struct.conn_queue*, align 8
  %item = alloca %struct.conn_queue_item*, align 8
  store %struct.conn_queue* %cq, %struct.conn_queue** %cq.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct.conn_queue** %cq.addr, metadata !1373, metadata !DIExpression()), !dbg !1375
  %0 = bitcast %struct.conn_queue_item** %item to i8*, !dbg !1376
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #7, !dbg !1376
  call void @llvm.dbg.declare(metadata %struct.conn_queue_item** %item, metadata !1374, metadata !DIExpression()), !dbg !1377
  %1 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !1378, !tbaa !492
  %lock = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %1, i32 0, i32 2, !dbg !1379
  %2 = bitcast %union.pthread_mutex_t* %lock to i8*, !dbg !1380
  %3 = call i32 @cpavise_store_data(i8* %2, i64 32), !dbg !1380
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %lock) #7, !dbg !1380
  %4 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !1381, !tbaa !492
  %head = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %4, i32 0, i32 0, !dbg !1382
  %5 = load %struct.conn_queue_item*, %struct.conn_queue_item** %head, align 8, !dbg !1382, !tbaa !659
  store %struct.conn_queue_item* %5, %struct.conn_queue_item** %item, align 8, !dbg !1383, !tbaa !492
  %6 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1384, !tbaa !492
  %cmp = icmp ne %struct.conn_queue_item* null, %6, !dbg !1386
  br i1 %cmp, label %if.then, label %if.end5, !dbg !1387

if.then:                                          ; preds = %entry
  %7 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1388, !tbaa !492
  %next = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %7, i32 0, i32 5, !dbg !1390
  %8 = load %struct.conn_queue_item*, %struct.conn_queue_item** %next, align 8, !dbg !1390, !tbaa !645
  %9 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !1391, !tbaa !492
  %head1 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %9, i32 0, i32 0, !dbg !1392
  store %struct.conn_queue_item* %8, %struct.conn_queue_item** %head1, align 8, !dbg !1393, !tbaa !659
  %10 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !1394, !tbaa !492
  %head2 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %10, i32 0, i32 0, !dbg !1396
  %11 = load %struct.conn_queue_item*, %struct.conn_queue_item** %head2, align 8, !dbg !1396, !tbaa !659
  %cmp3 = icmp eq %struct.conn_queue_item* null, %11, !dbg !1397
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !1398

if.then4:                                         ; preds = %if.then
  %12 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !1399, !tbaa !492
  %tail = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %12, i32 0, i32 1, !dbg !1400
  store %struct.conn_queue_item* null, %struct.conn_queue_item** %tail, align 8, !dbg !1401, !tbaa !652
  br label %if.end, !dbg !1399

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !1402

if.end5:                                          ; preds = %if.end, %entry
  %13 = load %struct.conn_queue*, %struct.conn_queue** %cq.addr, align 8, !dbg !1403, !tbaa !492
  %lock6 = getelementptr inbounds %struct.conn_queue, %struct.conn_queue* %13, i32 0, i32 2, !dbg !1404
  %14 = bitcast %union.pthread_mutex_t* %lock6 to i8*, !dbg !1405
  %15 = call i32 @cpavise_store_data(i8* %14, i64 32), !dbg !1405
  %call7 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %lock6) #7, !dbg !1405
  %16 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item, align 8, !dbg !1406, !tbaa !492
  %17 = bitcast %struct.conn_queue_item** %item to i8*, !dbg !1407
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #7, !dbg !1407
  ret %struct.conn_queue_item* %16, !dbg !1408
}

declare !dbg !401 dso_local %struct.conn* @conn_new(i32 %0, i32 %1, i32 %2, i32 %3, i1 zeroext %4, %struct.event_base* %5) #4

declare !dbg !404 dso_local i32 @close(i32 %0) #4

; Function Attrs: nounwind uwtable
define internal void @cqi_free(%struct.conn_queue_item* %item) #0 !dbg !1409 {
entry:
  %item.addr = alloca %struct.conn_queue_item*, align 8
  store %struct.conn_queue_item* %item, %struct.conn_queue_item** %item.addr, align 8, !tbaa !492
  call void @llvm.dbg.declare(metadata %struct.conn_queue_item** %item.addr, metadata !1413, metadata !DIExpression()), !dbg !1414
  %0 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cqi_freelist_lock to i8*), i64 32), !dbg !1415
  %call = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* @cqi_freelist_lock) #7, !dbg !1415
  %1 = load %struct.conn_queue_item*, %struct.conn_queue_item** @cqi_freelist, align 8, !dbg !1416, !tbaa !492
  %2 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item.addr, align 8, !dbg !1417, !tbaa !492
  %next = getelementptr inbounds %struct.conn_queue_item, %struct.conn_queue_item* %2, i32 0, i32 5, !dbg !1418
  store %struct.conn_queue_item* %1, %struct.conn_queue_item** %next, align 8, !dbg !1419, !tbaa !645
  %3 = load %struct.conn_queue_item*, %struct.conn_queue_item** %item.addr, align 8, !dbg !1420, !tbaa !492
  store %struct.conn_queue_item* %3, %struct.conn_queue_item** @cqi_freelist, align 8, !dbg !1421, !tbaa !492
  %4 = call i32 @cpavise_store_data(i8* bitcast (%union.pthread_mutex_t* @cqi_freelist_lock to i8*), i64 32), !dbg !1422
  %call1 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* @cqi_freelist_lock) #7, !dbg !1422
  ret void, !dbg !1423
}

; Function Attrs: nounwind
declare !dbg !407 dso_local i32 @pthread_attr_init(%union.pthread_attr_t* %0) #3

; Function Attrs: nounwind
declare !callback !1424 dso_local i32 @pthread_create(i64* %0, %union.pthread_attr_t* %1, i8* (i8*)* %2, i8* %3) #3

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32 %0) #3

declare !dbg !418 dso_local i32 @event_base_loop(%struct.event_base* %0, i32 %1) #4

declare i32 @cpavise_store_data(i8* %0, i64 %1)

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+clflushopt,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }
attributes #9 = { noreturn nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!476, !477, !478}
!llvm.ident = !{!479}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "conn_lock", scope: !2, file: !424, line: 29, type: !425, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 11.0.0 (https://github.com/hjjq/LLVM-Pavise.git 3d210af9293f24d5e7772804ba7d1c4b26f9bb1a)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !5, globals: !421, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/ssd1/hanjie/mod-pavise/memcached-pmdk/thread.c", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk/tx-build")
!4 = !{}
!5 = !{!6, !42, !242, !243, !246, !249, !252, !258, !264, !267, !270, !274, !278, !279, !283, !286, !289, !292, !293, !294, !297, !300, !303, !304, !308, !312, !313, !325, !373, !376, !80, !379, !382, !386, !389, !393, !398, !401, !404, !407, !418}
!6 = !DISubprogram(name: "pthread_mutex_lock", scope: !7, file: !7, line: 763, type: !8, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!7 = !DIFile(filename: "/usr/include/pthread.h", directory: "")
!8 = !DISubroutineType(types: !9)
!9 = !{!10, !11}
!10 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!12 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !13, line: 67, size: 320, elements: !14)
!13 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h", directory: "")
!14 = !{!15, !35, !40}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !12, file: !13, line: 69, baseType: !16, size: 320)
!16 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_mutex_s", file: !17, line: 118, size: 320, elements: !18)
!17 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h", directory: "")
!18 = !{!19, !20, !22, !23, !24, !25, !27, !28}
!19 = !DIDerivedType(tag: DW_TAG_member, name: "__lock", scope: !16, file: !17, line: 120, baseType: !10, size: 32)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !16, file: !17, line: 121, baseType: !21, size: 32, offset: 32)
!21 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "__owner", scope: !16, file: !17, line: 122, baseType: !10, size: 32, offset: 64)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "__nusers", scope: !16, file: !17, line: 124, baseType: !21, size: 32, offset: 96)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "__kind", scope: !16, file: !17, line: 148, baseType: !10, size: 32, offset: 128)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "__spins", scope: !16, file: !17, line: 154, baseType: !26, size: 16, offset: 160)
!26 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "__elision", scope: !16, file: !17, line: 154, baseType: !26, size: 16, offset: 176)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "__list", scope: !16, file: !17, line: 155, baseType: !29, size: 128, offset: 192)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pthread_list_t", file: !17, line: 86, baseType: !30)
!30 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_internal_list", file: !17, line: 82, size: 128, elements: !31)
!31 = !{!32, !34}
!32 = !DIDerivedType(tag: DW_TAG_member, name: "__prev", scope: !30, file: !17, line: 84, baseType: !33, size: 64)
!33 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "__next", scope: !30, file: !17, line: 85, baseType: !33, size: 64, offset: 64)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !12, file: !13, line: 70, baseType: !36, size: 320)
!36 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 320, elements: !38)
!37 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!38 = !{!39}
!39 = !DISubrange(count: 40)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !12, file: !13, line: 71, baseType: !41, size: 64)
!41 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!42 = !DISubprogram(name: "do_conn_from_freelist", scope: !43, file: !43, line: 255, type: !44, spFlags: DISPFlagOptimized, retainedNodes: !4)
!43 = !DIFile(filename: "memcached.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!44 = !DISubroutineType(types: !45)
!45 = !{!46, null}
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !43, line: 169, size: 3136, elements: !48)
!48 = !{!49, !50, !51, !139, !140, !141, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !167, !168, !169, !183, !184, !185, !186, !187, !214, !215, !216, !217, !219, !220, !221, !222, !224, !225, !235, !236, !238, !239, !240, !241}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "sfd", scope: !47, file: !43, line: 170, baseType: !10, size: 32)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !47, file: !43, line: 171, baseType: !10, size: 32, offset: 32)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !47, file: !43, line: 172, baseType: !52, size: 1024, offset: 64)
!52 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "event", file: !53, line: 123, size: 1024, elements: !54)
!53 = !DIFile(filename: "/usr/include/event2/event_struct.h", directory: "")
!54 = !{!55, !92, !102, !103, !106, !136, !137, !138}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "ev_evcallback", scope: !52, file: !53, line: 124, baseType: !56, size: 320)
!56 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "event_callback", file: !53, line: 107, size: 320, elements: !57)
!57 = !{!58, !65, !66, !72, !73, !91}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_active_next", scope: !56, file: !53, line: 108, baseType: !59, size: 128)
!59 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !56, file: !53, line: 108, size: 128, elements: !60)
!60 = !{!61, !63}
!61 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !59, file: !53, line: 108, baseType: !62, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !59, file: !53, line: 108, baseType: !64, size: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_flags", scope: !56, file: !53, line: 109, baseType: !26, size: 16, offset: 128)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_pri", scope: !56, file: !53, line: 110, baseType: !67, size: 8, offset: 144)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !68, line: 24, baseType: !69)
!68 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !70, line: 37, baseType: !71)
!70 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!71 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_closure", scope: !56, file: !53, line: 111, baseType: !67, size: 8, offset: 152)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_cb_union", scope: !56, file: !53, line: 118, baseType: !74, size: 64, offset: 192)
!74 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !56, file: !53, line: 113, size: 64, elements: !75)
!75 = !{!76, !81, !85, !90}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_callback", scope: !74, file: !53, line: 114, baseType: !77, size: 64)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64)
!78 = !DISubroutineType(types: !79)
!79 = !{null, !10, !26, !80}
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_selfcb", scope: !74, file: !53, line: 115, baseType: !82, size: 64)
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !83, size: 64)
!83 = !DISubroutineType(types: !84)
!84 = !{null, !62, !80}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_evfinalize", scope: !74, file: !53, line: 116, baseType: !86, size: 64)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!87 = !DISubroutineType(types: !88)
!88 = !{null, !89, !80}
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_cbfinalize", scope: !74, file: !53, line: 117, baseType: !82, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "evcb_arg", scope: !56, file: !53, line: 119, baseType: !80, size: 64, offset: 256)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "ev_timeout_pos", scope: !52, file: !53, line: 130, baseType: !93, size: 128, offset: 320)
!93 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !52, file: !53, line: 127, size: 128, elements: !94)
!94 = !{!95, !101}
!95 = !DIDerivedType(tag: DW_TAG_member, name: "ev_next_with_common_timeout", scope: !93, file: !53, line: 128, baseType: !96, size: 128)
!96 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !93, file: !53, line: 128, size: 128, elements: !97)
!97 = !{!98, !99}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_next", scope: !96, file: !53, line: 128, baseType: !89, size: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "tqe_prev", scope: !96, file: !53, line: 128, baseType: !100, size: 64, offset: 64)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "min_heap_idx", scope: !93, file: !53, line: 129, baseType: !10, size: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "ev_fd", scope: !52, file: !53, line: 131, baseType: !10, size: 32, offset: 448)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "ev_base", scope: !52, file: !53, line: 133, baseType: !104, size: 64, offset: 512)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64)
!105 = !DICompositeType(tag: DW_TAG_structure_type, name: "event_base", file: !53, line: 122, flags: DIFlagFwdDecl)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "ev_", scope: !52, file: !53, line: 149, baseType: !107, size: 256, offset: 576)
!107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !52, file: !53, line: 135, size: 256, elements: !108)
!108 = !{!109, !125}
!109 = !DIDerivedType(tag: DW_TAG_member, name: "ev_io", scope: !107, file: !53, line: 140, baseType: !110, size: 256)
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !107, file: !53, line: 137, size: 256, elements: !111)
!111 = !{!112, !117}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "ev_io_next", scope: !110, file: !53, line: 138, baseType: !113, size: 128)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !110, file: !53, line: 138, size: 128, elements: !114)
!114 = !{!115, !116}
!115 = !DIDerivedType(tag: DW_TAG_member, name: "le_next", scope: !113, file: !53, line: 138, baseType: !89, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "le_prev", scope: !113, file: !53, line: 138, baseType: !100, size: 64, offset: 64)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "ev_timeout", scope: !110, file: !53, line: 139, baseType: !118, size: 128, offset: 128)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !119, line: 8, size: 128, elements: !120)
!119 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h", directory: "")
!120 = !{!121, !123}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !118, file: !119, line: 10, baseType: !122, size: 64)
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !70, line: 148, baseType: !41)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !118, file: !119, line: 11, baseType: !124, size: 64, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !70, line: 150, baseType: !41)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "ev_signal", scope: !107, file: !53, line: 148, baseType: !126, size: 256)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !107, file: !53, line: 143, size: 256, elements: !127)
!127 = !{!128, !133, !134}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "ev_signal_next", scope: !126, file: !53, line: 144, baseType: !129, size: 128)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !126, file: !53, line: 144, size: 128, elements: !130)
!130 = !{!131, !132}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "le_next", scope: !129, file: !53, line: 144, baseType: !89, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "le_prev", scope: !129, file: !53, line: 144, baseType: !100, size: 64, offset: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "ev_ncalls", scope: !126, file: !53, line: 145, baseType: !26, size: 16, offset: 128)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "ev_pncalls", scope: !126, file: !53, line: 147, baseType: !135, size: 64, offset: 192)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "ev_events", scope: !52, file: !53, line: 151, baseType: !26, size: 16, offset: 832)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "ev_res", scope: !52, file: !53, line: 152, baseType: !26, size: 16, offset: 848)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "ev_timeout", scope: !52, file: !53, line: 153, baseType: !118, size: 128, offset: 896)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "ev_flags", scope: !47, file: !43, line: 173, baseType: !26, size: 16, offset: 1088)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "which", scope: !47, file: !43, line: 174, baseType: !26, size: 16, offset: 1104)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "rbuf", scope: !47, file: !43, line: 176, baseType: !142, size: 64, offset: 1152)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "rcurr", scope: !47, file: !43, line: 177, baseType: !142, size: 64, offset: 1216)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "rsize", scope: !47, file: !43, line: 178, baseType: !10, size: 32, offset: 1280)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "rbytes", scope: !47, file: !43, line: 179, baseType: !10, size: 32, offset: 1312)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "wbuf", scope: !47, file: !43, line: 181, baseType: !142, size: 64, offset: 1344)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "wcurr", scope: !47, file: !43, line: 182, baseType: !142, size: 64, offset: 1408)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "wsize", scope: !47, file: !43, line: 183, baseType: !10, size: 32, offset: 1472)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "wbytes", scope: !47, file: !43, line: 184, baseType: !10, size: 32, offset: 1504)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "write_and_go", scope: !47, file: !43, line: 185, baseType: !10, size: 32, offset: 1536)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "write_and_free", scope: !47, file: !43, line: 186, baseType: !80, size: 64, offset: 1600)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "ritem", scope: !47, file: !43, line: 188, baseType: !142, size: 64, offset: 1664)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "rlbytes", scope: !47, file: !43, line: 189, baseType: !10, size: 32, offset: 1728)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "item_ptr", scope: !47, file: !43, line: 200, baseType: !80, size: 64, offset: 1792)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "item_comm", scope: !47, file: !43, line: 201, baseType: !10, size: 32, offset: 1856)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "sbytes", scope: !47, file: !43, line: 204, baseType: !10, size: 32, offset: 1888)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !47, file: !43, line: 207, baseType: !158, size: 64, offset: 1920)
!158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !160, line: 26, size: 128, elements: !161)
!160 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_iovec.h", directory: "")
!161 = !{!162, !163}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !159, file: !160, line: 28, baseType: !80, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !159, file: !160, line: 29, baseType: !164, size: 64, offset: 64)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !165, line: 46, baseType: !166)
!165 = !DIFile(filename: "llvm-project/build/lib/clang/11.0.0/include/stddef.h", directory: "/ssd1")
!166 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "iovsize", scope: !47, file: !43, line: 208, baseType: !10, size: 32, offset: 1984)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "iovused", scope: !47, file: !43, line: 209, baseType: !10, size: 32, offset: 2016)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "msglist", scope: !47, file: !43, line: 211, baseType: !170, size: 64, offset: 2048)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !172, line: 254, size: 448, elements: !173)
!172 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket.h", directory: "")
!173 = !{!174, !175, !178, !179, !180, !181, !182}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !171, file: !172, line: 256, baseType: !80, size: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !171, file: !172, line: 257, baseType: !176, size: 32, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !172, line: 33, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !70, line: 197, baseType: !21)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iov", scope: !171, file: !172, line: 259, baseType: !158, size: 64, offset: 128)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iovlen", scope: !171, file: !172, line: 260, baseType: !164, size: 64, offset: 192)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !171, file: !172, line: 262, baseType: !80, size: 64, offset: 256)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !171, file: !172, line: 263, baseType: !164, size: 64, offset: 320)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !171, file: !172, line: 268, baseType: !10, size: 32, offset: 384)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "msgsize", scope: !47, file: !43, line: 212, baseType: !10, size: 32, offset: 2112)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "msgused", scope: !47, file: !43, line: 213, baseType: !10, size: 32, offset: 2144)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "msgcurr", scope: !47, file: !43, line: 214, baseType: !10, size: 32, offset: 2176)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "msgbytes", scope: !47, file: !43, line: 215, baseType: !10, size: 32, offset: 2208)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "ilist", scope: !47, file: !43, line: 217, baseType: !188, size: 64, offset: 2240)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "item", file: !43, line: 143, baseType: !191)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_stritem", file: !43, line: 126, size: 960, elements: !192)
!192 = !{!193, !195, !196, !197, !199, !200, !201, !203, !204, !205, !206, !207, !210}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !191, file: !43, line: 127, baseType: !194, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !191, file: !43, line: 128, baseType: !194, size: 64, offset: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "h_next", scope: !191, file: !43, line: 129, baseType: !194, size: 64, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !191, file: !43, line: 130, baseType: !198, size: 32, offset: 192)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "rel_time_t", file: !43, line: 73, baseType: !21)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "exptime", scope: !191, file: !43, line: 131, baseType: !198, size: 32, offset: 224)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !191, file: !43, line: 132, baseType: !10, size: 32, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !191, file: !43, line: 133, baseType: !202, size: 16, offset: 288)
!202 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "nsuffix", scope: !191, file: !43, line: 134, baseType: !67, size: 8, offset: 304)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "it_flags", scope: !191, file: !43, line: 135, baseType: !67, size: 8, offset: 312)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "slabs_clsid", scope: !191, file: !43, line: 136, baseType: !67, size: 8, offset: 320)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "nkey", scope: !191, file: !43, line: 137, baseType: !67, size: 8, offset: 328)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "cas_id", scope: !191, file: !43, line: 138, baseType: !208, size: 64, offset: 384)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !68, line: 27, baseType: !209)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !70, line: 44, baseType: !166)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !191, file: !43, line: 139, baseType: !211, size: 512, offset: 448)
!211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !80, size: 512, elements: !212)
!212 = !{!213}
!213 = !DISubrange(count: 8)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "isize", scope: !47, file: !43, line: 218, baseType: !10, size: 32, offset: 2304)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "icurr", scope: !47, file: !43, line: 219, baseType: !188, size: 64, offset: 2368)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "ileft", scope: !47, file: !43, line: 220, baseType: !10, size: 32, offset: 2432)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "suffixlist", scope: !47, file: !43, line: 222, baseType: !218, size: 64, offset: 2496)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "suffixsize", scope: !47, file: !43, line: 223, baseType: !10, size: 32, offset: 2560)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "suffixcurr", scope: !47, file: !43, line: 224, baseType: !218, size: 64, offset: 2624)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "suffixleft", scope: !47, file: !43, line: 225, baseType: !10, size: 32, offset: 2688)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "udp", scope: !47, file: !43, line: 228, baseType: !223, size: 8, offset: 2720)
!223 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "request_id", scope: !47, file: !43, line: 229, baseType: !10, size: 32, offset: 2752)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "request_addr", scope: !47, file: !43, line: 230, baseType: !226, size: 128, offset: 2784)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !172, line: 175, size: 128, elements: !227)
!227 = !{!228, !231}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !226, file: !172, line: 177, baseType: !229, size: 16)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !230, line: 28, baseType: !202)
!230 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sockaddr.h", directory: "")
!231 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !226, file: !172, line: 178, baseType: !232, size: 112, offset: 16)
!232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 112, elements: !233)
!233 = !{!234}
!234 = !DISubrange(count: 14)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "request_addr_size", scope: !47, file: !43, line: 231, baseType: !176, size: 32, offset: 2912)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "hdrbuf", scope: !47, file: !43, line: 232, baseType: !237, size: 64, offset: 2944)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "hdrsize", scope: !47, file: !43, line: 233, baseType: !10, size: 32, offset: 3008)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "binary", scope: !47, file: !43, line: 235, baseType: !10, size: 32, offset: 3040)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !47, file: !43, line: 236, baseType: !10, size: 32, offset: 3072)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !47, file: !43, line: 238, baseType: !10, size: 32, offset: 3104)
!242 = !DISubprogram(name: "pthread_mutex_unlock", scope: !7, file: !7, line: 774, type: !8, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!243 = !DISubprogram(name: "do_conn_add_to_freelist", scope: !43, file: !43, line: 256, type: !244, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!244 = !DISubroutineType(types: !245)
!245 = !{!223, !46}
!246 = !DISubprogram(name: "do_suffix_from_freelist", scope: !43, file: !43, line: 257, type: !247, spFlags: DISPFlagOptimized, retainedNodes: !4)
!247 = !DISubroutineType(types: !248)
!248 = !{!142, null}
!249 = !DISubprogram(name: "do_suffix_add_to_freelist", scope: !43, file: !43, line: 258, type: !250, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!250 = !DISubroutineType(types: !251)
!251 = !{!223, !142}
!252 = !DISubprogram(name: "write", scope: !253, file: !253, line: 369, type: !254, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!253 = !DIFile(filename: "/usr/include/unistd.h", directory: "")
!254 = !DISubroutineType(types: !255)
!255 = !{!41, !10, !256, !166}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!258 = !DISubprogram(name: "perror", scope: !259, file: !259, line: 775, type: !260, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!259 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!260 = !DISubroutineType(types: !261)
!261 = !{null, !262}
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!264 = !DISubprogram(name: "pthread_self", scope: !7, file: !7, line: 276, type: !265, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!265 = !DISubroutineType(types: !266)
!266 = !{!166}
!267 = !DISubprogram(name: "do_run_deferred_deletes", scope: !43, file: !43, line: 260, type: !268, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!268 = !DISubroutineType(types: !269)
!269 = !{null}
!270 = !DISubprogram(name: "cpavise_tx_begin", scope: !271, file: !271, line: 48, type: !272, spFlags: DISPFlagOptimized, retainedNodes: !4)
!271 = !DIFile(filename: "/home/nvm-admin/pavise/include/pavise_interface.h", directory: "")
!272 = !DISubroutineType(types: !273)
!273 = !{null, null}
!274 = !DISubprogram(name: "do_item_alloc", scope: !275, file: !275, line: 5, type: !276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!275 = !DIFile(filename: "items.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!276 = !DISubroutineType(types: !277)
!277 = !{!194, !142, !166, !10, !21, !10}
!278 = !DISubprogram(name: "cpavise_tx_end", scope: !271, file: !271, line: 49, type: !272, spFlags: DISPFlagOptimized, retainedNodes: !4)
!279 = !DISubprogram(name: "do_item_get_notedeleted", scope: !275, file: !275, line: 24, type: !280, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!280 = !DISubroutineType(types: !281)
!281 = !{!194, !262, !166, !282}
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!283 = !DISubprogram(name: "do_item_link", scope: !275, file: !275, line: 9, type: !284, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!284 = !DISubroutineType(types: !285)
!285 = !{!10, !194}
!286 = !DISubprogram(name: "do_item_remove", scope: !275, file: !275, line: 11, type: !287, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!287 = !DISubroutineType(types: !288)
!288 = !{null, !194}
!289 = !DISubprogram(name: "do_item_replace", scope: !275, file: !275, line: 13, type: !290, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!290 = !DISubroutineType(types: !291)
!291 = !{!10, !194, !194}
!292 = !DISubprogram(name: "do_item_unlink", scope: !275, file: !275, line: 10, type: !287, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!293 = !DISubprogram(name: "do_item_update", scope: !275, file: !275, line: 12, type: !287, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!294 = !DISubprogram(name: "do_defer_delete", scope: !43, file: !43, line: 259, type: !295, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!295 = !DISubroutineType(types: !296)
!296 = !{!142, !194, !41}
!297 = !DISubprogram(name: "do_add_delta", scope: !43, file: !43, line: 261, type: !298, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!298 = !DISubroutineType(types: !299)
!299 = !{!142, !194, !223, !41, !142}
!300 = !DISubprogram(name: "do_store_item", scope: !43, file: !43, line: 262, type: !301, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!301 = !DISubroutineType(types: !302)
!302 = !{!10, !194, !10}
!303 = !DISubprogram(name: "do_item_flush_expired", scope: !275, file: !275, line: 21, type: !268, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!304 = !DISubprogram(name: "do_item_cachedump", scope: !275, file: !275, line: 16, type: !305, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!305 = !DISubroutineType(types: !306)
!306 = !{!142, !21, !21, !307}
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!308 = !DISubprogram(name: "do_item_stats", scope: !275, file: !275, line: 17, type: !309, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!309 = !DISubroutineType(types: !310)
!310 = !{!142, !311}
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!312 = !DISubprogram(name: "do_item_stats_sizes", scope: !275, file: !275, line: 20, type: !309, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!313 = !DISubprogram(name: "pthread_mutex_init", scope: !7, file: !7, line: 750, type: !314, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!314 = !DISubroutineType(types: !315)
!315 = !{!10, !11, !316}
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !318)
!318 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !13, line: 32, size: 32, elements: !319)
!319 = !{!320, !324}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !318, file: !13, line: 34, baseType: !321, size: 32)
!321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 32, elements: !322)
!322 = !{!323}
!323 = !DISubrange(count: 4)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !318, file: !13, line: 35, baseType: !10, size: 32)
!325 = !DISubprogram(name: "pthread_cond_init", scope: !7, file: !7, line: 969, type: !326, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!326 = !DISubroutineType(types: !327)
!327 = !{!10, !328, !367}
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !13, line: 75, size: 384, elements: !330)
!330 = !{!331, !361, !365}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "__data", scope: !329, file: !13, line: 77, baseType: !332, size: 384)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__pthread_cond_s", file: !17, line: 171, size: 384, elements: !333)
!333 = !{!334, !344, !353, !357, !358, !359, !360}
!334 = !DIDerivedType(tag: DW_TAG_member, scope: !332, file: !17, line: 173, baseType: !335, size: 64)
!335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !332, file: !17, line: 173, size: 64, elements: !336)
!336 = !{!337, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "__wseq", scope: !335, file: !17, line: 175, baseType: !338, size: 64)
!338 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "__wseq32", scope: !335, file: !17, line: 180, baseType: !340, size: 64)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !335, file: !17, line: 176, size: 64, elements: !341)
!341 = !{!342, !343}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "__low", scope: !340, file: !17, line: 178, baseType: !21, size: 32)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "__high", scope: !340, file: !17, line: 179, baseType: !21, size: 32, offset: 32)
!344 = !DIDerivedType(tag: DW_TAG_member, scope: !332, file: !17, line: 182, baseType: !345, size: 64, offset: 64)
!345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !332, file: !17, line: 182, size: 64, elements: !346)
!346 = !{!347, !348}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "__g1_start", scope: !345, file: !17, line: 184, baseType: !338, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "__g1_start32", scope: !345, file: !17, line: 189, baseType: !349, size: 64)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !345, file: !17, line: 185, size: 64, elements: !350)
!350 = !{!351, !352}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "__low", scope: !349, file: !17, line: 187, baseType: !21, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "__high", scope: !349, file: !17, line: 188, baseType: !21, size: 32, offset: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "__g_refs", scope: !332, file: !17, line: 191, baseType: !354, size: 64, offset: 128)
!354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 64, elements: !355)
!355 = !{!356}
!356 = !DISubrange(count: 2)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "__g_size", scope: !332, file: !17, line: 192, baseType: !354, size: 64, offset: 192)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "__g1_orig_size", scope: !332, file: !17, line: 193, baseType: !21, size: 32, offset: 256)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "__wrefs", scope: !332, file: !17, line: 194, baseType: !21, size: 32, offset: 288)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "__g_signals", scope: !332, file: !17, line: 195, baseType: !354, size: 64, offset: 320)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !329, file: !13, line: 78, baseType: !362, size: 384)
!362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 384, elements: !363)
!363 = !{!364}
!364 = !DISubrange(count: 48)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !329, file: !13, line: 79, baseType: !366, size: 64)
!366 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !13, line: 41, size: 32, elements: !370)
!370 = !{!371, !372}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !369, file: !13, line: 43, baseType: !321, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !369, file: !13, line: 44, baseType: !10, size: 32)
!373 = !DISubprogram(name: "pipe", scope: !253, file: !253, line: 420, type: !374, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!374 = !DISubroutineType(types: !375)
!375 = !{!10, !311}
!376 = !DISubprogram(name: "pthread_cond_wait", scope: !7, file: !7, line: 990, type: !377, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!377 = !DISubroutineType(types: !378)
!378 = !{!10, !328, !11}
!379 = !DISubprogram(name: "pthread_cond_signal", scope: !7, file: !7, line: 978, type: !380, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!380 = !DISubroutineType(types: !381)
!381 = !{!10, !328}
!382 = !DISubprogram(name: "event_init", scope: !383, file: !383, line: 75, type: !384, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!383 = !DIFile(filename: "/usr/include/event2/event_compat.h", directory: "")
!384 = !DISubroutineType(types: !385)
!385 = !{!104}
!386 = !DISubprogram(name: "event_set", scope: !383, file: !383, line: 184, type: !387, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!387 = !DISubroutineType(types: !388)
!388 = !{null, !89, !10, !26, !77, !80}
!389 = !DISubprogram(name: "event_base_set", scope: !390, file: !390, line: 790, type: !391, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!390 = !DIFile(filename: "/usr/include/event2/event.h", directory: "")
!391 = !DISubroutineType(types: !392)
!392 = !{!10, !104, !89}
!393 = !DISubprogram(name: "event_add", scope: !390, file: !390, line: 1230, type: !394, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!394 = !DISubroutineType(types: !395)
!395 = !{!10, !89, !396}
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!398 = !DISubprogram(name: "read", scope: !253, file: !253, line: 363, type: !399, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!399 = !DISubroutineType(types: !400)
!400 = !{!41, !10, !80, !166}
!401 = !DISubprogram(name: "conn_new", scope: !43, file: !43, line: 263, type: !402, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!402 = !DISubroutineType(types: !403)
!403 = !{!46, !10, !10, !10, !10, !223, !104}
!404 = !DISubprogram(name: "close", scope: !253, file: !253, line: 356, type: !405, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!405 = !DISubroutineType(types: !406)
!406 = !{!10, !10}
!407 = !DISubprogram(name: "pthread_attr_init", scope: !7, file: !7, line: 288, type: !408, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!408 = !DISubroutineType(types: !409)
!409 = !{!10, !410}
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "pthread_attr_t", file: !13, line: 56, size: 448, elements: !412)
!412 = !{!413, !417}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "__size", scope: !411, file: !13, line: 58, baseType: !414, size: 448)
!414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 448, elements: !415)
!415 = !{!416}
!416 = !DISubrange(count: 56)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "__align", scope: !411, file: !13, line: 59, baseType: !41, size: 64)
!418 = !DISubprogram(name: "event_base_loop", scope: !390, file: !390, line: 829, type: !419, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !4)
!419 = !DISubroutineType(types: !420)
!420 = !{!10, !104, !10}
!421 = !{!0, !422, !426, !428, !430, !432, !445, !447, !468, !470, !472, !474}
!422 = !DIGlobalVariableExpression(var: !423, expr: !DIExpression())
!423 = distinct !DIGlobalVariable(name: "suffix_lock", scope: !2, file: !424, line: 32, type: !425, isLocal: true, isDefinition: true)
!424 = !DIFile(filename: "thread.c", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_mutex_t", file: !13, line: 72, baseType: !12)
!426 = !DIGlobalVariableExpression(var: !427, expr: !DIExpression())
!427 = distinct !DIGlobalVariable(name: "cache_lock", scope: !2, file: !424, line: 35, type: !425, isLocal: true, isDefinition: true)
!428 = !DIGlobalVariableExpression(var: !429, expr: !DIExpression())
!429 = distinct !DIGlobalVariable(name: "slabs_lock", scope: !2, file: !424, line: 38, type: !425, isLocal: true, isDefinition: true)
!430 = !DIGlobalVariableExpression(var: !431, expr: !DIExpression())
!431 = distinct !DIGlobalVariable(name: "stats_lock", scope: !2, file: !424, line: 41, type: !425, isLocal: true, isDefinition: true)
!432 = !DIGlobalVariableExpression(var: !433, expr: !DIExpression())
!433 = distinct !DIGlobalVariable(name: "cqi_freelist", scope: !2, file: !424, line: 44, type: !434, isLocal: true, isDefinition: true)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "CQ_ITEM", file: !436, line: 5, baseType: !437)
!436 = !DIFile(filename: "thread.h", directory: "/ssd1/hanjie/mod-pavise/memcached-pmdk")
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conn_queue_item", file: !436, line: 6, size: 256, elements: !438)
!438 = !{!439, !440, !441, !442, !443, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "sfd", scope: !437, file: !436, line: 7, baseType: !10, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !437, file: !436, line: 8, baseType: !10, size: 32, offset: 32)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !437, file: !436, line: 9, baseType: !10, size: 32, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "read_buffer_size", scope: !437, file: !436, line: 10, baseType: !10, size: 32, offset: 96)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "is_udp", scope: !437, file: !436, line: 11, baseType: !10, size: 32, offset: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !437, file: !436, line: 12, baseType: !434, size: 64, offset: 192)
!445 = !DIGlobalVariableExpression(var: !446, expr: !DIExpression())
!446 = distinct !DIGlobalVariable(name: "cqi_freelist_lock", scope: !2, file: !424, line: 45, type: !425, isLocal: true, isDefinition: true)
!447 = !DIGlobalVariableExpression(var: !448, expr: !DIExpression())
!448 = distinct !DIGlobalVariable(name: "threads", scope: !2, file: !424, line: 47, type: !449, isLocal: false, isDefinition: true)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "LIBEVENT_THREAD", file: !436, line: 35, baseType: !451)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !436, line: 28, size: 2048, elements: !452)
!452 = !{!453, !455, !456, !457, !458, !459}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "thread_id", scope: !451, file: !436, line: 29, baseType: !454, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_t", file: !13, line: 27, baseType: !166)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !451, file: !436, line: 30, baseType: !104, size: 64, offset: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "notify_event", scope: !451, file: !436, line: 31, baseType: !52, size: 1024, offset: 128)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "notify_receive_fd", scope: !451, file: !436, line: 32, baseType: !10, size: 32, offset: 1152)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "notify_send_fd", scope: !451, file: !436, line: 33, baseType: !10, size: 32, offset: 1184)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "new_conn_queue", scope: !451, file: !436, line: 34, baseType: !460, size: 832, offset: 1216)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "CQ", file: !436, line: 16, baseType: !461)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conn_queue", file: !436, line: 17, size: 832, elements: !462)
!462 = !{!463, !464, !465, !466}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !461, file: !436, line: 18, baseType: !434, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !461, file: !436, line: 19, baseType: !434, size: 64, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !461, file: !436, line: 20, baseType: !425, size: 320, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !461, file: !436, line: 21, baseType: !467, size: 384, offset: 448)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_cond_t", file: !13, line: 80, baseType: !329)
!468 = !DIGlobalVariableExpression(var: !469, expr: !DIExpression())
!469 = distinct !DIGlobalVariable(name: "init_lock", scope: !2, file: !424, line: 53, type: !425, isLocal: true, isDefinition: true)
!470 = !DIGlobalVariableExpression(var: !471, expr: !DIExpression())
!471 = distinct !DIGlobalVariable(name: "init_cond", scope: !2, file: !424, line: 54, type: !467, isLocal: true, isDefinition: true)
!472 = !DIGlobalVariableExpression(var: !473, expr: !DIExpression())
!473 = distinct !DIGlobalVariable(name: "last_thread", scope: !2, file: !424, line: 330, type: !10, isLocal: true, isDefinition: true)
!474 = !DIGlobalVariableExpression(var: !475, expr: !DIExpression())
!475 = distinct !DIGlobalVariable(name: "init_count", scope: !2, file: !424, line: 52, type: !10, isLocal: true, isDefinition: true)
!476 = !{i32 7, !"Dwarf Version", i32 4}
!477 = !{i32 2, !"Debug Info Version", i32 3}
!478 = !{i32 1, !"wchar_size", i32 4}
!479 = !{!"clang version 11.0.0 (https://github.com/hjjq/LLVM-Pavise.git 3d210af9293f24d5e7772804ba7d1c4b26f9bb1a)"}
!480 = distinct !DISubprogram(name: "mt_conn_from_freelist", scope: !424, file: !424, line: 193, type: !481, scopeLine: 193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !485)
!481 = !DISubroutineType(types: !482)
!482 = !{!483}
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "conn", file: !43, line: 239, baseType: !47)
!485 = !{!486}
!486 = !DILocalVariable(name: "c", scope: !480, file: !424, line: 194, type: !483)
!487 = !DILocation(line: 194, column: 5, scope: !480)
!488 = !DILocation(line: 194, column: 11, scope: !480)
!489 = !DILocation(line: 196, column: 5, scope: !480)
!490 = !DILocation(line: 197, column: 9, scope: !480)
!491 = !DILocation(line: 197, column: 7, scope: !480)
!492 = !{!493, !493, i64 0}
!493 = !{!"any pointer", !494, i64 0}
!494 = !{!"omnipotent char", !495, i64 0}
!495 = !{!"Simple C/C++ TBAA"}
!496 = !DILocation(line: 198, column: 5, scope: !480)
!497 = !DILocation(line: 200, column: 12, scope: !480)
!498 = !DILocation(line: 201, column: 1, scope: !480)
!499 = !DILocation(line: 200, column: 5, scope: !480)
!500 = distinct !DISubprogram(name: "mt_conn_add_to_freelist", scope: !424, file: !424, line: 209, type: !501, scopeLine: 209, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !503)
!501 = !DISubroutineType(types: !502)
!502 = !{!223, !483}
!503 = !{!504, !505}
!504 = !DILocalVariable(name: "c", arg: 1, scope: !500, file: !424, line: 209, type: !483)
!505 = !DILocalVariable(name: "result", scope: !500, file: !424, line: 210, type: !223)
!506 = !DILocation(line: 209, column: 36, scope: !500)
!507 = !DILocation(line: 210, column: 5, scope: !500)
!508 = !DILocation(line: 210, column: 10, scope: !500)
!509 = !DILocation(line: 212, column: 5, scope: !500)
!510 = !DILocation(line: 213, column: 38, scope: !500)
!511 = !DILocation(line: 213, column: 14, scope: !500)
!512 = !DILocation(line: 213, column: 12, scope: !500)
!513 = !{!514, !514, i64 0}
!514 = !{!"_Bool", !494, i64 0}
!515 = !DILocation(line: 214, column: 5, scope: !500)
!516 = !DILocation(line: 216, column: 12, scope: !500)
!517 = !{i8 0, i8 2}
!518 = !DILocation(line: 217, column: 1, scope: !500)
!519 = !DILocation(line: 216, column: 5, scope: !500)
!520 = distinct !DISubprogram(name: "mt_suffix_from_freelist", scope: !424, file: !424, line: 222, type: !521, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !523)
!521 = !DISubroutineType(types: !522)
!522 = !{!142}
!523 = !{!524}
!524 = !DILocalVariable(name: "s", scope: !520, file: !424, line: 223, type: !142)
!525 = !DILocation(line: 223, column: 5, scope: !520)
!526 = !DILocation(line: 223, column: 11, scope: !520)
!527 = !DILocation(line: 225, column: 5, scope: !520)
!528 = !DILocation(line: 226, column: 9, scope: !520)
!529 = !DILocation(line: 226, column: 7, scope: !520)
!530 = !DILocation(line: 227, column: 5, scope: !520)
!531 = !DILocation(line: 229, column: 12, scope: !520)
!532 = !DILocation(line: 230, column: 1, scope: !520)
!533 = !DILocation(line: 229, column: 5, scope: !520)
!534 = distinct !DISubprogram(name: "mt_suffix_add_to_freelist", scope: !424, file: !424, line: 238, type: !250, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !535)
!535 = !{!536, !537}
!536 = !DILocalVariable(name: "s", arg: 1, scope: !534, file: !424, line: 238, type: !142)
!537 = !DILocalVariable(name: "result", scope: !534, file: !424, line: 239, type: !223)
!538 = !DILocation(line: 238, column: 38, scope: !534)
!539 = !DILocation(line: 239, column: 5, scope: !534)
!540 = !DILocation(line: 239, column: 10, scope: !534)
!541 = !DILocation(line: 241, column: 5, scope: !534)
!542 = !DILocation(line: 242, column: 40, scope: !534)
!543 = !DILocation(line: 242, column: 14, scope: !534)
!544 = !DILocation(line: 242, column: 12, scope: !534)
!545 = !DILocation(line: 243, column: 5, scope: !534)
!546 = !DILocation(line: 245, column: 12, scope: !534)
!547 = !DILocation(line: 246, column: 1, scope: !534)
!548 = !DILocation(line: 245, column: 5, scope: !534)
!549 = distinct !DISubprogram(name: "dispatch_conn_new", scope: !424, file: !424, line: 337, type: !550, scopeLine: 338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !552)
!550 = !DISubroutineType(types: !551)
!551 = !{null, !10, !10, !10, !10, !10}
!552 = !{!553, !554, !555, !556, !557, !558, !559}
!553 = !DILocalVariable(name: "sfd", arg: 1, scope: !549, file: !424, line: 337, type: !10)
!554 = !DILocalVariable(name: "init_state", arg: 2, scope: !549, file: !424, line: 337, type: !10)
!555 = !DILocalVariable(name: "event_flags", arg: 3, scope: !549, file: !424, line: 337, type: !10)
!556 = !DILocalVariable(name: "read_buffer_size", arg: 4, scope: !549, file: !424, line: 338, type: !10)
!557 = !DILocalVariable(name: "is_udp", arg: 5, scope: !549, file: !424, line: 338, type: !10)
!558 = !DILocalVariable(name: "item", scope: !549, file: !424, line: 339, type: !434)
!559 = !DILocalVariable(name: "thread", scope: !549, file: !424, line: 340, type: !10)
!560 = !{!561, !561, i64 0}
!561 = !{!"int", !494, i64 0}
!562 = !DILocation(line: 337, column: 28, scope: !549)
!563 = !DILocation(line: 337, column: 37, scope: !549)
!564 = !DILocation(line: 337, column: 53, scope: !549)
!565 = !DILocation(line: 338, column: 28, scope: !549)
!566 = !DILocation(line: 338, column: 50, scope: !549)
!567 = !DILocation(line: 339, column: 5, scope: !549)
!568 = !DILocation(line: 339, column: 14, scope: !549)
!569 = !DILocation(line: 339, column: 21, scope: !549)
!570 = !DILocation(line: 340, column: 5, scope: !549)
!571 = !DILocation(line: 340, column: 9, scope: !549)
!572 = !DILocation(line: 340, column: 19, scope: !549)
!573 = !DILocation(line: 340, column: 31, scope: !549)
!574 = !DILocation(line: 340, column: 47, scope: !549)
!575 = !{!576, !561, i64 68}
!576 = !{!"settings", !577, i64 0, !561, i64 8, !561, i64 12, !561, i64 16, !578, i64 20, !561, i64 24, !561, i64 28, !514, i64 32, !561, i64 36, !493, i64 40, !561, i64 48, !579, i64 56, !561, i64 64, !561, i64 68, !494, i64 72, !561, i64 76}
!577 = !{!"long", !494, i64 0}
!578 = !{!"in_addr", !561, i64 0}
!579 = !{!"double", !494, i64 0}
!580 = !DILocation(line: 340, column: 36, scope: !549)
!581 = !DILocation(line: 342, column: 19, scope: !549)
!582 = !DILocation(line: 342, column: 17, scope: !549)
!583 = !DILocation(line: 344, column: 17, scope: !549)
!584 = !DILocation(line: 344, column: 5, scope: !549)
!585 = !DILocation(line: 344, column: 11, scope: !549)
!586 = !DILocation(line: 344, column: 15, scope: !549)
!587 = !{!588, !561, i64 0}
!588 = !{!"conn_queue_item", !561, i64 0, !561, i64 4, !561, i64 8, !561, i64 12, !561, i64 16, !493, i64 24}
!589 = !DILocation(line: 345, column: 24, scope: !549)
!590 = !DILocation(line: 345, column: 5, scope: !549)
!591 = !DILocation(line: 345, column: 11, scope: !549)
!592 = !DILocation(line: 345, column: 22, scope: !549)
!593 = !{!588, !561, i64 4}
!594 = !DILocation(line: 346, column: 25, scope: !549)
!595 = !DILocation(line: 346, column: 5, scope: !549)
!596 = !DILocation(line: 346, column: 11, scope: !549)
!597 = !DILocation(line: 346, column: 23, scope: !549)
!598 = !{!588, !561, i64 8}
!599 = !DILocation(line: 347, column: 30, scope: !549)
!600 = !DILocation(line: 347, column: 5, scope: !549)
!601 = !DILocation(line: 347, column: 11, scope: !549)
!602 = !DILocation(line: 347, column: 28, scope: !549)
!603 = !{!588, !561, i64 12}
!604 = !DILocation(line: 348, column: 20, scope: !549)
!605 = !DILocation(line: 348, column: 5, scope: !549)
!606 = !DILocation(line: 348, column: 11, scope: !549)
!607 = !DILocation(line: 348, column: 18, scope: !549)
!608 = !{!588, !561, i64 16}
!609 = !DILocation(line: 350, column: 14, scope: !549)
!610 = !DILocation(line: 350, column: 22, scope: !549)
!611 = !DILocation(line: 350, column: 30, scope: !549)
!612 = !DILocation(line: 350, column: 46, scope: !549)
!613 = !DILocation(line: 350, column: 5, scope: !549)
!614 = !DILocation(line: 351, column: 15, scope: !615)
!615 = distinct !DILexicalBlock(scope: !549, file: !424, line: 351, column: 9)
!616 = !DILocation(line: 351, column: 23, scope: !615)
!617 = !DILocation(line: 351, column: 31, scope: !615)
!618 = !{!619, !561, i64 148}
!619 = !{!"", !577, i64 0, !493, i64 8, !620, i64 16, !561, i64 144, !561, i64 148, !625, i64 152}
!620 = !{!"event", !621, i64 0, !494, i64 40, !561, i64 56, !493, i64 64, !494, i64 72, !623, i64 104, !623, i64 106, !624, i64 112}
!621 = !{!"event_callback", !622, i64 0, !623, i64 16, !494, i64 18, !494, i64 19, !494, i64 24, !493, i64 32}
!622 = !{!"", !493, i64 0, !493, i64 8}
!623 = !{!"short", !494, i64 0}
!624 = !{!"timeval", !577, i64 0, !577, i64 8}
!625 = !{!"conn_queue", !493, i64 0, !493, i64 8, !494, i64 16, !494, i64 56}
!626 = !DILocation(line: 351, column: 9, scope: !615)
!627 = !DILocation(line: 351, column: 54, scope: !615)
!628 = !DILocation(line: 351, column: 9, scope: !549)
!629 = !DILocation(line: 352, column: 9, scope: !630)
!630 = distinct !DILexicalBlock(scope: !615, file: !424, line: 351, column: 60)
!631 = !DILocation(line: 353, column: 5, scope: !630)
!632 = !DILocation(line: 354, column: 1, scope: !549)
!633 = distinct !DISubprogram(name: "cq_push", scope: !424, file: !424, line: 110, type: !634, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !637)
!634 = !DISubroutineType(types: !635)
!635 = !{null, !636, !434}
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!637 = !{!638, !639}
!638 = !DILocalVariable(name: "cq", arg: 1, scope: !633, file: !424, line: 110, type: !636)
!639 = !DILocalVariable(name: "item", arg: 2, scope: !633, file: !424, line: 110, type: !434)
!640 = !DILocation(line: 110, column: 25, scope: !633)
!641 = !DILocation(line: 110, column: 38, scope: !633)
!642 = !DILocation(line: 111, column: 5, scope: !633)
!643 = !DILocation(line: 111, column: 11, scope: !633)
!644 = !DILocation(line: 111, column: 16, scope: !633)
!645 = !{!588, !493, i64 24}
!646 = !DILocation(line: 113, column: 25, scope: !633)
!647 = !DILocation(line: 113, column: 29, scope: !633)
!648 = !DILocation(line: 113, column: 5, scope: !633)
!649 = !DILocation(line: 114, column: 17, scope: !650)
!650 = distinct !DILexicalBlock(scope: !633, file: !424, line: 114, column: 9)
!651 = !DILocation(line: 114, column: 21, scope: !650)
!652 = !{!625, !493, i64 8}
!653 = !DILocation(line: 114, column: 14, scope: !650)
!654 = !DILocation(line: 114, column: 9, scope: !633)
!655 = !DILocation(line: 115, column: 20, scope: !650)
!656 = !DILocation(line: 115, column: 9, scope: !650)
!657 = !DILocation(line: 115, column: 13, scope: !650)
!658 = !DILocation(line: 115, column: 18, scope: !650)
!659 = !{!625, !493, i64 0}
!660 = !DILocation(line: 117, column: 26, scope: !650)
!661 = !DILocation(line: 117, column: 9, scope: !650)
!662 = !DILocation(line: 117, column: 13, scope: !650)
!663 = !DILocation(line: 117, column: 19, scope: !650)
!664 = !DILocation(line: 117, column: 24, scope: !650)
!665 = !DILocation(line: 118, column: 16, scope: !633)
!666 = !DILocation(line: 118, column: 5, scope: !633)
!667 = !DILocation(line: 118, column: 9, scope: !633)
!668 = !DILocation(line: 118, column: 14, scope: !633)
!669 = !DILocation(line: 119, column: 26, scope: !633)
!670 = !DILocation(line: 119, column: 30, scope: !633)
!671 = !DILocation(line: 119, column: 5, scope: !633)
!672 = !DILocation(line: 120, column: 27, scope: !633)
!673 = !DILocation(line: 120, column: 31, scope: !633)
!674 = !DILocation(line: 120, column: 5, scope: !633)
!675 = !DILocation(line: 121, column: 1, scope: !633)
!676 = distinct !DISubprogram(name: "mt_is_listen_thread", scope: !424, file: !424, line: 359, type: !677, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4)
!677 = !DISubroutineType(types: !678)
!678 = !{!10}
!679 = !DILocation(line: 360, column: 12, scope: !676)
!680 = !DILocation(line: 360, column: 30, scope: !676)
!681 = !DILocation(line: 360, column: 41, scope: !676)
!682 = !{!619, !577, i64 0}
!683 = !DILocation(line: 360, column: 27, scope: !676)
!684 = !DILocation(line: 360, column: 5, scope: !676)
!685 = distinct !DISubprogram(name: "mt_run_deferred_deletes", scope: !424, file: !424, line: 369, type: !268, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4)
!686 = !DILocation(line: 370, column: 5, scope: !685)
!687 = !DILocation(line: 371, column: 6, scope: !685)
!688 = !DILocation(line: 372, column: 5, scope: !685)
!689 = !DILocation(line: 373, column: 1, scope: !685)
!690 = distinct !DISubprogram(name: "mt_item_alloc", scope: !424, file: !424, line: 378, type: !691, scopeLine: 378, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !693)
!691 = !DISubroutineType(types: !692)
!692 = !{!189, !142, !164, !10, !198, !10}
!693 = !{!694, !695, !696, !697, !698, !699}
!694 = !DILocalVariable(name: "key", arg: 1, scope: !690, file: !424, line: 378, type: !142)
!695 = !DILocalVariable(name: "nkey", arg: 2, scope: !690, file: !424, line: 378, type: !164)
!696 = !DILocalVariable(name: "flags", arg: 3, scope: !690, file: !424, line: 378, type: !10)
!697 = !DILocalVariable(name: "exptime", arg: 4, scope: !690, file: !424, line: 378, type: !198)
!698 = !DILocalVariable(name: "nbytes", arg: 5, scope: !690, file: !424, line: 378, type: !10)
!699 = !DILocalVariable(name: "it", scope: !690, file: !424, line: 379, type: !189)
!700 = !DILocation(line: 378, column: 27, scope: !690)
!701 = !{!577, !577, i64 0}
!702 = !DILocation(line: 378, column: 39, scope: !690)
!703 = !DILocation(line: 378, column: 49, scope: !690)
!704 = !DILocation(line: 378, column: 67, scope: !690)
!705 = !DILocation(line: 378, column: 80, scope: !690)
!706 = !DILocation(line: 379, column: 5, scope: !690)
!707 = !DILocation(line: 379, column: 11, scope: !690)
!708 = !DILocation(line: 382, column: 5, scope: !690)
!709 = !DILocation(line: 384, column: 6, scope: !690)
!710 = !DILocation(line: 384, column: 44, scope: !690)
!711 = !DILocation(line: 384, column: 49, scope: !690)
!712 = !DILocation(line: 384, column: 55, scope: !690)
!713 = !DILocation(line: 384, column: 62, scope: !690)
!714 = !DILocation(line: 384, column: 71, scope: !690)
!715 = !DILocation(line: 384, column: 30, scope: !690)
!716 = !DILocation(line: 384, column: 28, scope: !690)
!717 = !DILocation(line: 384, column: 79, scope: !690)
!718 = !DILocation(line: 385, column: 5, scope: !690)
!719 = !DILocation(line: 386, column: 12, scope: !690)
!720 = !DILocation(line: 387, column: 1, scope: !690)
!721 = !DILocation(line: 386, column: 5, scope: !690)
!722 = distinct !DISubprogram(name: "mt_item_get_notedeleted", scope: !424, file: !424, line: 393, type: !723, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !726)
!723 = !DISubroutineType(types: !724)
!724 = !{!189, !262, !725, !282}
!725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !164)
!726 = !{!727, !728, !729, !730}
!727 = !DILocalVariable(name: "key", arg: 1, scope: !722, file: !424, line: 393, type: !262)
!728 = !DILocalVariable(name: "nkey", arg: 2, scope: !722, file: !424, line: 393, type: !725)
!729 = !DILocalVariable(name: "delete_locked", arg: 3, scope: !722, file: !424, line: 393, type: !282)
!730 = !DILocalVariable(name: "it", scope: !722, file: !424, line: 394, type: !189)
!731 = !DILocation(line: 393, column: 43, scope: !722)
!732 = !DILocation(line: 393, column: 61, scope: !722)
!733 = !DILocation(line: 393, column: 73, scope: !722)
!734 = !DILocation(line: 394, column: 5, scope: !722)
!735 = !DILocation(line: 394, column: 11, scope: !722)
!736 = !DILocation(line: 395, column: 5, scope: !722)
!737 = !DILocation(line: 396, column: 35, scope: !722)
!738 = !DILocation(line: 396, column: 40, scope: !722)
!739 = !DILocation(line: 396, column: 46, scope: !722)
!740 = !DILocation(line: 396, column: 11, scope: !722)
!741 = !DILocation(line: 396, column: 9, scope: !722)
!742 = !DILocation(line: 397, column: 5, scope: !722)
!743 = !DILocation(line: 398, column: 12, scope: !722)
!744 = !DILocation(line: 399, column: 1, scope: !722)
!745 = !DILocation(line: 398, column: 5, scope: !722)
!746 = distinct !DISubprogram(name: "mt_item_link", scope: !424, file: !424, line: 404, type: !747, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !749)
!747 = !DISubroutineType(types: !748)
!748 = !{!10, !189}
!749 = !{!750, !751}
!750 = !DILocalVariable(name: "item", arg: 1, scope: !746, file: !424, line: 404, type: !189)
!751 = !DILocalVariable(name: "ret", scope: !746, file: !424, line: 405, type: !10)
!752 = !DILocation(line: 404, column: 24, scope: !746)
!753 = !DILocation(line: 405, column: 5, scope: !746)
!754 = !DILocation(line: 405, column: 9, scope: !746)
!755 = !DILocation(line: 407, column: 5, scope: !746)
!756 = !DILocation(line: 408, column: 25, scope: !746)
!757 = !DILocation(line: 408, column: 12, scope: !746)
!758 = !DILocation(line: 408, column: 10, scope: !746)
!759 = !DILocation(line: 409, column: 5, scope: !746)
!760 = !DILocation(line: 410, column: 12, scope: !746)
!761 = !DILocation(line: 411, column: 1, scope: !746)
!762 = !DILocation(line: 410, column: 5, scope: !746)
!763 = distinct !DISubprogram(name: "mt_item_remove", scope: !424, file: !424, line: 417, type: !764, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !766)
!764 = !DISubroutineType(types: !765)
!765 = !{null, !189}
!766 = !{!767}
!767 = !DILocalVariable(name: "item", arg: 1, scope: !763, file: !424, line: 417, type: !189)
!768 = !DILocation(line: 417, column: 27, scope: !763)
!769 = !DILocation(line: 418, column: 5, scope: !763)
!770 = !DILocation(line: 419, column: 21, scope: !763)
!771 = !DILocation(line: 419, column: 6, scope: !763)
!772 = !DILocation(line: 420, column: 5, scope: !763)
!773 = !DILocation(line: 421, column: 1, scope: !763)
!774 = distinct !DISubprogram(name: "mt_item_replace", scope: !424, file: !424, line: 426, type: !775, scopeLine: 426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !777)
!775 = !DISubroutineType(types: !776)
!776 = !{!10, !189, !189}
!777 = !{!778, !779, !780}
!778 = !DILocalVariable(name: "old", arg: 1, scope: !774, file: !424, line: 426, type: !189)
!779 = !DILocalVariable(name: "new", arg: 2, scope: !774, file: !424, line: 426, type: !189)
!780 = !DILocalVariable(name: "ret", scope: !774, file: !424, line: 427, type: !10)
!781 = !DILocation(line: 426, column: 27, scope: !774)
!782 = !DILocation(line: 426, column: 38, scope: !774)
!783 = !DILocation(line: 427, column: 5, scope: !774)
!784 = !DILocation(line: 427, column: 9, scope: !774)
!785 = !DILocation(line: 429, column: 5, scope: !774)
!786 = !DILocation(line: 430, column: 28, scope: !774)
!787 = !DILocation(line: 430, column: 33, scope: !774)
!788 = !DILocation(line: 430, column: 12, scope: !774)
!789 = !DILocation(line: 430, column: 10, scope: !774)
!790 = !DILocation(line: 431, column: 5, scope: !774)
!791 = !DILocation(line: 432, column: 12, scope: !774)
!792 = !DILocation(line: 433, column: 1, scope: !774)
!793 = !DILocation(line: 432, column: 5, scope: !774)
!794 = distinct !DISubprogram(name: "mt_item_unlink", scope: !424, file: !424, line: 438, type: !764, scopeLine: 438, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !795)
!795 = !{!796}
!796 = !DILocalVariable(name: "item", arg: 1, scope: !794, file: !424, line: 438, type: !189)
!797 = !DILocation(line: 438, column: 27, scope: !794)
!798 = !DILocation(line: 439, column: 5, scope: !794)
!799 = !DILocation(line: 440, column: 21, scope: !794)
!800 = !DILocation(line: 440, column: 6, scope: !794)
!801 = !DILocation(line: 441, column: 5, scope: !794)
!802 = !DILocation(line: 442, column: 1, scope: !794)
!803 = distinct !DISubprogram(name: "mt_item_update", scope: !424, file: !424, line: 447, type: !764, scopeLine: 447, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !804)
!804 = !{!805}
!805 = !DILocalVariable(name: "item", arg: 1, scope: !803, file: !424, line: 447, type: !189)
!806 = !DILocation(line: 447, column: 27, scope: !803)
!807 = !DILocation(line: 448, column: 5, scope: !803)
!808 = !DILocation(line: 449, column: 21, scope: !803)
!809 = !DILocation(line: 449, column: 6, scope: !803)
!810 = !DILocation(line: 450, column: 5, scope: !803)
!811 = !DILocation(line: 451, column: 1, scope: !803)
!812 = distinct !DISubprogram(name: "mt_defer_delete", scope: !424, file: !424, line: 456, type: !813, scopeLine: 456, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !817)
!813 = !DISubroutineType(types: !814)
!814 = !{!142, !189, !815}
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !816, line: 7, baseType: !122)
!816 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!817 = !{!818, !819, !820}
!818 = !DILocalVariable(name: "item", arg: 1, scope: !812, file: !424, line: 456, type: !189)
!819 = !DILocalVariable(name: "exptime", arg: 2, scope: !812, file: !424, line: 456, type: !815)
!820 = !DILocalVariable(name: "ret", scope: !812, file: !424, line: 457, type: !142)
!821 = !DILocation(line: 456, column: 29, scope: !812)
!822 = !DILocation(line: 456, column: 42, scope: !812)
!823 = !DILocation(line: 457, column: 5, scope: !812)
!824 = !DILocation(line: 457, column: 11, scope: !812)
!825 = !DILocation(line: 459, column: 5, scope: !812)
!826 = !DILocation(line: 460, column: 28, scope: !812)
!827 = !DILocation(line: 460, column: 34, scope: !812)
!828 = !DILocation(line: 460, column: 12, scope: !812)
!829 = !DILocation(line: 460, column: 10, scope: !812)
!830 = !DILocation(line: 461, column: 5, scope: !812)
!831 = !DILocation(line: 462, column: 12, scope: !812)
!832 = !DILocation(line: 463, column: 1, scope: !812)
!833 = !DILocation(line: 462, column: 5, scope: !812)
!834 = distinct !DISubprogram(name: "mt_add_delta", scope: !424, file: !424, line: 468, type: !835, scopeLine: 468, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !841)
!835 = !DISubroutineType(types: !836)
!836 = !{!142, !189, !10, !837, !142}
!837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !838)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !839, line: 27, baseType: !840)
!839 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "")
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !70, line: 43, baseType: !41)
!841 = !{!842, !843, !844, !845, !846}
!842 = !DILocalVariable(name: "item", arg: 1, scope: !834, file: !424, line: 468, type: !189)
!843 = !DILocalVariable(name: "incr", arg: 2, scope: !834, file: !424, line: 468, type: !10)
!844 = !DILocalVariable(name: "delta", arg: 3, scope: !834, file: !424, line: 468, type: !837)
!845 = !DILocalVariable(name: "buf", arg: 4, scope: !834, file: !424, line: 468, type: !142)
!846 = !DILocalVariable(name: "ret", scope: !834, file: !424, line: 469, type: !142)
!847 = !DILocation(line: 468, column: 26, scope: !834)
!848 = !DILocation(line: 468, column: 36, scope: !834)
!849 = !DILocation(line: 468, column: 56, scope: !834)
!850 = !DILocation(line: 468, column: 69, scope: !834)
!851 = !DILocation(line: 469, column: 5, scope: !834)
!852 = !DILocation(line: 469, column: 11, scope: !834)
!853 = !DILocation(line: 471, column: 5, scope: !834)
!854 = !DILocation(line: 472, column: 24, scope: !834)
!855 = !DILocation(line: 472, column: 30, scope: !834)
!856 = !DILocation(line: 472, column: 36, scope: !834)
!857 = !DILocation(line: 472, column: 43, scope: !834)
!858 = !DILocation(line: 472, column: 11, scope: !834)
!859 = !DILocation(line: 472, column: 9, scope: !834)
!860 = !DILocation(line: 473, column: 5, scope: !834)
!861 = !DILocation(line: 474, column: 12, scope: !834)
!862 = !DILocation(line: 475, column: 1, scope: !834)
!863 = !DILocation(line: 474, column: 5, scope: !834)
!864 = distinct !DISubprogram(name: "mt_store_item", scope: !424, file: !424, line: 480, type: !865, scopeLine: 480, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !867)
!865 = !DISubroutineType(types: !866)
!866 = !{!10, !189, !10}
!867 = !{!868, !869, !870}
!868 = !DILocalVariable(name: "item", arg: 1, scope: !864, file: !424, line: 480, type: !189)
!869 = !DILocalVariable(name: "comm", arg: 2, scope: !864, file: !424, line: 480, type: !10)
!870 = !DILocalVariable(name: "ret", scope: !864, file: !424, line: 481, type: !10)
!871 = !DILocation(line: 480, column: 25, scope: !864)
!872 = !DILocation(line: 480, column: 35, scope: !864)
!873 = !DILocation(line: 481, column: 5, scope: !864)
!874 = !DILocation(line: 481, column: 9, scope: !864)
!875 = !DILocation(line: 483, column: 5, scope: !864)
!876 = !DILocation(line: 485, column: 26, scope: !864)
!877 = !DILocation(line: 485, column: 32, scope: !864)
!878 = !DILocation(line: 485, column: 12, scope: !864)
!879 = !DILocation(line: 485, column: 10, scope: !864)
!880 = !DILocation(line: 486, column: 5, scope: !864)
!881 = !DILocation(line: 487, column: 12, scope: !864)
!882 = !DILocation(line: 488, column: 1, scope: !864)
!883 = !DILocation(line: 487, column: 5, scope: !864)
!884 = distinct !DISubprogram(name: "mt_item_flush_expired", scope: !424, file: !424, line: 493, type: !268, scopeLine: 493, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4)
!885 = !DILocation(line: 494, column: 5, scope: !884)
!886 = !DILocation(line: 495, column: 6, scope: !884)
!887 = !DILocation(line: 496, column: 5, scope: !884)
!888 = !DILocation(line: 497, column: 1, scope: !884)
!889 = distinct !DISubprogram(name: "mt_item_cachedump", scope: !424, file: !424, line: 502, type: !305, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !890)
!890 = !{!891, !892, !893, !894}
!891 = !DILocalVariable(name: "slabs_clsid", arg: 1, scope: !889, file: !424, line: 502, type: !21)
!892 = !DILocalVariable(name: "limit", arg: 2, scope: !889, file: !424, line: 502, type: !21)
!893 = !DILocalVariable(name: "bytes", arg: 3, scope: !889, file: !424, line: 502, type: !307)
!894 = !DILocalVariable(name: "ret", scope: !889, file: !424, line: 503, type: !142)
!895 = !DILocation(line: 502, column: 38, scope: !889)
!896 = !DILocation(line: 502, column: 64, scope: !889)
!897 = !DILocation(line: 502, column: 85, scope: !889)
!898 = !DILocation(line: 503, column: 5, scope: !889)
!899 = !DILocation(line: 503, column: 11, scope: !889)
!900 = !DILocation(line: 505, column: 5, scope: !889)
!901 = !DILocation(line: 506, column: 30, scope: !889)
!902 = !DILocation(line: 506, column: 43, scope: !889)
!903 = !DILocation(line: 506, column: 50, scope: !889)
!904 = !DILocation(line: 506, column: 12, scope: !889)
!905 = !DILocation(line: 506, column: 10, scope: !889)
!906 = !DILocation(line: 507, column: 5, scope: !889)
!907 = !DILocation(line: 508, column: 12, scope: !889)
!908 = !DILocation(line: 509, column: 1, scope: !889)
!909 = !DILocation(line: 508, column: 5, scope: !889)
!910 = distinct !DISubprogram(name: "mt_item_stats", scope: !424, file: !424, line: 514, type: !309, scopeLine: 514, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !911)
!911 = !{!912, !913}
!912 = !DILocalVariable(name: "bytes", arg: 1, scope: !910, file: !424, line: 514, type: !311)
!913 = !DILocalVariable(name: "ret", scope: !910, file: !424, line: 515, type: !142)
!914 = !DILocation(line: 514, column: 26, scope: !910)
!915 = !DILocation(line: 515, column: 5, scope: !910)
!916 = !DILocation(line: 515, column: 11, scope: !910)
!917 = !DILocation(line: 517, column: 5, scope: !910)
!918 = !DILocation(line: 518, column: 26, scope: !910)
!919 = !DILocation(line: 518, column: 12, scope: !910)
!920 = !DILocation(line: 518, column: 10, scope: !910)
!921 = !DILocation(line: 519, column: 5, scope: !910)
!922 = !DILocation(line: 520, column: 12, scope: !910)
!923 = !DILocation(line: 521, column: 1, scope: !910)
!924 = !DILocation(line: 520, column: 5, scope: !910)
!925 = distinct !DISubprogram(name: "mt_item_stats_sizes", scope: !424, file: !424, line: 526, type: !309, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !926)
!926 = !{!927, !928}
!927 = !DILocalVariable(name: "bytes", arg: 1, scope: !925, file: !424, line: 526, type: !311)
!928 = !DILocalVariable(name: "ret", scope: !925, file: !424, line: 527, type: !142)
!929 = !DILocation(line: 526, column: 32, scope: !925)
!930 = !DILocation(line: 527, column: 5, scope: !925)
!931 = !DILocation(line: 527, column: 11, scope: !925)
!932 = !DILocation(line: 529, column: 5, scope: !925)
!933 = !DILocation(line: 530, column: 32, scope: !925)
!934 = !DILocation(line: 530, column: 12, scope: !925)
!935 = !DILocation(line: 530, column: 10, scope: !925)
!936 = !DILocation(line: 531, column: 5, scope: !925)
!937 = !DILocation(line: 532, column: 12, scope: !925)
!938 = !DILocation(line: 533, column: 1, scope: !925)
!939 = !DILocation(line: 532, column: 5, scope: !925)
!940 = distinct !DISubprogram(name: "mt_slabs_alloc", scope: !424, file: !424, line: 545, type: !941, scopeLine: 545, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !943)
!941 = !DISubroutineType(types: !942)
!942 = !{!80, !164}
!943 = !{!944, !945}
!944 = !DILocalVariable(name: "size", arg: 1, scope: !940, file: !424, line: 545, type: !164)
!945 = !DILocalVariable(name: "ret", scope: !940, file: !424, line: 546, type: !80)
!946 = !DILocation(line: 545, column: 29, scope: !940)
!947 = !DILocation(line: 546, column: 5, scope: !940)
!948 = !DILocation(line: 546, column: 11, scope: !940)
!949 = !DILocation(line: 548, column: 5, scope: !950)
!950 = distinct !DILexicalBlock(scope: !951, file: !424, line: 548, column: 5)
!951 = distinct !DILexicalBlock(scope: !940, file: !424, line: 548, column: 5)
!952 = distinct !DISubprogram(name: "mt_slabs_free", scope: !424, file: !424, line: 554, type: !953, scopeLine: 554, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !955)
!953 = !DISubroutineType(types: !954)
!954 = !{null, !80, !164}
!955 = !{!956, !957}
!956 = !DILocalVariable(name: "ptr", arg: 1, scope: !952, file: !424, line: 554, type: !80)
!957 = !DILocalVariable(name: "size", arg: 2, scope: !952, file: !424, line: 554, type: !164)
!958 = !DILocation(line: 554, column: 26, scope: !952)
!959 = !DILocation(line: 554, column: 38, scope: !952)
!960 = !DILocation(line: 556, column: 5, scope: !961)
!961 = distinct !DILexicalBlock(scope: !962, file: !424, line: 556, column: 5)
!962 = distinct !DILexicalBlock(scope: !952, file: !424, line: 556, column: 5)
!963 = distinct !DISubprogram(name: "mt_slabs_stats", scope: !424, file: !424, line: 562, type: !309, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !964)
!964 = !{!965, !966}
!965 = !DILocalVariable(name: "buflen", arg: 1, scope: !963, file: !424, line: 562, type: !311)
!966 = !DILocalVariable(name: "ret", scope: !963, file: !424, line: 563, type: !142)
!967 = !DILocation(line: 562, column: 27, scope: !963)
!968 = !DILocation(line: 563, column: 5, scope: !963)
!969 = !DILocation(line: 563, column: 11, scope: !963)
!970 = !DILocation(line: 565, column: 5, scope: !963)
!971 = !DILocation(line: 567, column: 2, scope: !963)
!972 = !DILocation(line: 568, column: 12, scope: !963)
!973 = !DILocation(line: 569, column: 1, scope: !963)
!974 = !DILocation(line: 568, column: 5, scope: !963)
!975 = distinct !DISubprogram(name: "mt_stats_lock", scope: !424, file: !424, line: 584, type: !268, scopeLine: 584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4)
!976 = !DILocation(line: 585, column: 5, scope: !975)
!977 = !DILocation(line: 586, column: 1, scope: !975)
!978 = distinct !DISubprogram(name: "mt_stats_unlock", scope: !424, file: !424, line: 588, type: !268, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4)
!979 = !DILocation(line: 589, column: 5, scope: !978)
!980 = !DILocation(line: 590, column: 1, scope: !978)
!981 = distinct !DISubprogram(name: "thread_init", scope: !424, file: !424, line: 598, type: !982, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !984)
!982 = !DISubroutineType(types: !983)
!983 = !{null, !10, !104}
!984 = !{!985, !986, !987, !988}
!985 = !DILocalVariable(name: "nthreads", arg: 1, scope: !981, file: !424, line: 598, type: !10)
!986 = !DILocalVariable(name: "main_base", arg: 2, scope: !981, file: !424, line: 598, type: !104)
!987 = !DILocalVariable(name: "i", scope: !981, file: !424, line: 599, type: !10)
!988 = !DILocalVariable(name: "fds", scope: !989, file: !424, line: 622, type: !992)
!989 = distinct !DILexicalBlock(scope: !990, file: !424, line: 621, column: 36)
!990 = distinct !DILexicalBlock(scope: !991, file: !424, line: 621, column: 5)
!991 = distinct !DILexicalBlock(scope: !981, file: !424, line: 621, column: 5)
!992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 64, elements: !355)
!993 = !DILocation(line: 598, column: 22, scope: !981)
!994 = !DILocation(line: 598, column: 51, scope: !981)
!995 = !DILocation(line: 599, column: 5, scope: !981)
!996 = !DILocation(line: 599, column: 17, scope: !981)
!997 = !DILocation(line: 601, column: 5, scope: !981)
!998 = !DILocation(line: 602, column: 5, scope: !981)
!999 = !DILocation(line: 603, column: 5, scope: !981)
!1000 = !DILocation(line: 604, column: 5, scope: !981)
!1001 = !DILocation(line: 606, column: 5, scope: !981)
!1002 = !DILocation(line: 607, column: 5, scope: !981)
!1003 = !DILocation(line: 609, column: 5, scope: !981)
!1004 = !DILocation(line: 610, column: 18, scope: !981)
!1005 = !DILocation(line: 612, column: 48, scope: !981)
!1006 = !DILocation(line: 612, column: 46, scope: !981)
!1007 = !DILocation(line: 612, column: 15, scope: !981)
!1008 = !DILocation(line: 612, column: 13, scope: !981)
!1009 = !DILocation(line: 613, column: 11, scope: !1010)
!1010 = distinct !DILexicalBlock(scope: !981, file: !424, line: 613, column: 9)
!1011 = !DILocation(line: 613, column: 9, scope: !981)
!1012 = !DILocation(line: 614, column: 9, scope: !1013)
!1013 = distinct !DILexicalBlock(scope: !1010, file: !424, line: 613, column: 20)
!1014 = !DILocation(line: 615, column: 9, scope: !1013)
!1015 = !DILocation(line: 618, column: 23, scope: !981)
!1016 = !DILocation(line: 618, column: 5, scope: !981)
!1017 = !DILocation(line: 618, column: 16, scope: !981)
!1018 = !DILocation(line: 618, column: 21, scope: !981)
!1019 = !{!619, !493, i64 8}
!1020 = !DILocation(line: 619, column: 28, scope: !981)
!1021 = !DILocation(line: 619, column: 5, scope: !981)
!1022 = !DILocation(line: 619, column: 16, scope: !981)
!1023 = !DILocation(line: 619, column: 26, scope: !981)
!1024 = !DILocation(line: 621, column: 12, scope: !991)
!1025 = !DILocation(line: 621, column: 10, scope: !991)
!1026 = !DILocation(line: 621, column: 17, scope: !990)
!1027 = !DILocation(line: 621, column: 21, scope: !990)
!1028 = !DILocation(line: 621, column: 19, scope: !990)
!1029 = !DILocation(line: 621, column: 5, scope: !991)
!1030 = !DILocation(line: 622, column: 9, scope: !989)
!1031 = !DILocation(line: 622, column: 13, scope: !989)
!1032 = !DILocation(line: 623, column: 18, scope: !1033)
!1033 = distinct !DILexicalBlock(scope: !989, file: !424, line: 623, column: 13)
!1034 = !DILocation(line: 623, column: 13, scope: !1033)
!1035 = !DILocation(line: 623, column: 13, scope: !989)
!1036 = !DILocation(line: 624, column: 13, scope: !1037)
!1037 = distinct !DILexicalBlock(scope: !1033, file: !424, line: 623, column: 24)
!1038 = !DILocation(line: 625, column: 13, scope: !1037)
!1039 = !DILocation(line: 628, column: 40, scope: !989)
!1040 = !DILocation(line: 628, column: 9, scope: !989)
!1041 = !DILocation(line: 628, column: 17, scope: !989)
!1042 = !DILocation(line: 628, column: 20, scope: !989)
!1043 = !DILocation(line: 628, column: 38, scope: !989)
!1044 = !{!619, !561, i64 144}
!1045 = !DILocation(line: 629, column: 37, scope: !989)
!1046 = !DILocation(line: 629, column: 9, scope: !989)
!1047 = !DILocation(line: 629, column: 17, scope: !989)
!1048 = !DILocation(line: 629, column: 20, scope: !989)
!1049 = !DILocation(line: 629, column: 35, scope: !989)
!1050 = !DILocation(line: 631, column: 19, scope: !989)
!1051 = !DILocation(line: 631, column: 27, scope: !989)
!1052 = !DILocation(line: 631, column: 5, scope: !989)
!1053 = !DILocation(line: 632, column: 5, scope: !990)
!1054 = !DILocation(line: 632, column: 5, scope: !989)
!1055 = !DILocation(line: 621, column: 32, scope: !990)
!1056 = !DILocation(line: 621, column: 5, scope: !990)
!1057 = distinct !{!1057, !1029, !1058}
!1058 = !DILocation(line: 632, column: 5, scope: !991)
!1059 = !DILocation(line: 635, column: 12, scope: !1060)
!1060 = distinct !DILexicalBlock(scope: !981, file: !424, line: 635, column: 5)
!1061 = !DILocation(line: 635, column: 10, scope: !1060)
!1062 = !DILocation(line: 635, column: 17, scope: !1063)
!1063 = distinct !DILexicalBlock(scope: !1060, file: !424, line: 635, column: 5)
!1064 = !DILocation(line: 635, column: 21, scope: !1063)
!1065 = !DILocation(line: 635, column: 19, scope: !1063)
!1066 = !DILocation(line: 635, column: 5, scope: !1060)
!1067 = !DILocation(line: 636, column: 41, scope: !1068)
!1068 = distinct !DILexicalBlock(scope: !1063, file: !424, line: 635, column: 36)
!1069 = !DILocation(line: 636, column: 49, scope: !1068)
!1070 = !DILocation(line: 636, column: 40, scope: !1068)
!1071 = !DILocation(line: 636, column: 9, scope: !1068)
!1072 = !DILocation(line: 637, column: 5, scope: !1068)
!1073 = !DILocation(line: 635, column: 32, scope: !1063)
!1074 = !DILocation(line: 635, column: 5, scope: !1063)
!1075 = distinct !{!1075, !1066, !1076}
!1076 = !DILocation(line: 637, column: 5, scope: !1060)
!1077 = !DILocation(line: 640, column: 5, scope: !981)
!1078 = !DILocation(line: 641, column: 15, scope: !981)
!1079 = !DILocation(line: 642, column: 5, scope: !981)
!1080 = !DILocation(line: 642, column: 12, scope: !981)
!1081 = !DILocation(line: 642, column: 25, scope: !981)
!1082 = !DILocation(line: 642, column: 23, scope: !981)
!1083 = !DILocation(line: 643, column: 9, scope: !1084)
!1084 = distinct !DILexicalBlock(scope: !981, file: !424, line: 642, column: 35)
!1085 = distinct !{!1085, !1079, !1086}
!1086 = !DILocation(line: 644, column: 5, scope: !981)
!1087 = !DILocation(line: 645, column: 5, scope: !981)
!1088 = !DILocation(line: 646, column: 1, scope: !981)
!1089 = distinct !DISubprogram(name: "setup_thread", scope: !424, file: !424, line: 254, type: !1090, scopeLine: 254, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1092)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{null, !449}
!1092 = !{!1093}
!1093 = !DILocalVariable(name: "me", arg: 1, scope: !1089, file: !424, line: 254, type: !449)
!1094 = !DILocation(line: 254, column: 43, scope: !1089)
!1095 = !DILocation(line: 255, column: 11, scope: !1096)
!1096 = distinct !DILexicalBlock(scope: !1089, file: !424, line: 255, column: 9)
!1097 = !DILocation(line: 255, column: 15, scope: !1096)
!1098 = !DILocation(line: 255, column: 9, scope: !1089)
!1099 = !DILocation(line: 256, column: 20, scope: !1100)
!1100 = distinct !DILexicalBlock(scope: !1096, file: !424, line: 255, column: 21)
!1101 = !DILocation(line: 256, column: 9, scope: !1100)
!1102 = !DILocation(line: 256, column: 13, scope: !1100)
!1103 = !DILocation(line: 256, column: 18, scope: !1100)
!1104 = !DILocation(line: 257, column: 15, scope: !1105)
!1105 = distinct !DILexicalBlock(scope: !1100, file: !424, line: 257, column: 13)
!1106 = !DILocation(line: 257, column: 19, scope: !1105)
!1107 = !DILocation(line: 257, column: 13, scope: !1100)
!1108 = !DILocation(line: 258, column: 21, scope: !1109)
!1109 = distinct !DILexicalBlock(scope: !1105, file: !424, line: 257, column: 25)
!1110 = !DILocation(line: 258, column: 13, scope: !1109)
!1111 = !DILocation(line: 259, column: 13, scope: !1109)
!1112 = !DILocation(line: 261, column: 5, scope: !1100)
!1113 = !DILocation(line: 264, column: 16, scope: !1089)
!1114 = !DILocation(line: 264, column: 20, scope: !1089)
!1115 = !DILocation(line: 264, column: 34, scope: !1089)
!1116 = !DILocation(line: 264, column: 38, scope: !1089)
!1117 = !DILocation(line: 265, column: 62, scope: !1089)
!1118 = !DILocation(line: 264, column: 5, scope: !1089)
!1119 = !DILocation(line: 266, column: 20, scope: !1089)
!1120 = !DILocation(line: 266, column: 24, scope: !1089)
!1121 = !DILocation(line: 266, column: 31, scope: !1089)
!1122 = !DILocation(line: 266, column: 35, scope: !1089)
!1123 = !DILocation(line: 266, column: 5, scope: !1089)
!1124 = !DILocation(line: 268, column: 20, scope: !1125)
!1125 = distinct !DILexicalBlock(scope: !1089, file: !424, line: 268, column: 9)
!1126 = !DILocation(line: 268, column: 24, scope: !1125)
!1127 = !DILocation(line: 268, column: 9, scope: !1125)
!1128 = !DILocation(line: 268, column: 41, scope: !1125)
!1129 = !DILocation(line: 268, column: 9, scope: !1089)
!1130 = !DILocation(line: 269, column: 17, scope: !1131)
!1131 = distinct !DILexicalBlock(scope: !1125, file: !424, line: 268, column: 48)
!1132 = !DILocation(line: 269, column: 9, scope: !1131)
!1133 = !DILocation(line: 270, column: 9, scope: !1131)
!1134 = !DILocation(line: 273, column: 14, scope: !1089)
!1135 = !DILocation(line: 273, column: 18, scope: !1089)
!1136 = !DILocation(line: 273, column: 5, scope: !1089)
!1137 = !DILocation(line: 274, column: 1, scope: !1089)
!1138 = distinct !DISubprogram(name: "create_worker", scope: !424, file: !424, line: 175, type: !1139, scopeLine: 175, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1144)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{null, !1141, !80}
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!80, !80}
!1144 = !{!1145, !1146, !1147, !1148, !1150}
!1145 = !DILocalVariable(name: "func", arg: 1, scope: !1138, file: !424, line: 175, type: !1141)
!1146 = !DILocalVariable(name: "arg", arg: 2, scope: !1138, file: !424, line: 175, type: !80)
!1147 = !DILocalVariable(name: "thread", scope: !1138, file: !424, line: 176, type: !454)
!1148 = !DILocalVariable(name: "attr", scope: !1138, file: !424, line: 177, type: !1149)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "pthread_attr_t", file: !13, line: 62, baseType: !411)
!1150 = !DILocalVariable(name: "ret", scope: !1138, file: !424, line: 178, type: !10)
!1151 = !DILocation(line: 175, column: 35, scope: !1138)
!1152 = !DILocation(line: 175, column: 56, scope: !1138)
!1153 = !DILocation(line: 176, column: 5, scope: !1138)
!1154 = !DILocation(line: 176, column: 21, scope: !1138)
!1155 = !DILocation(line: 177, column: 5, scope: !1138)
!1156 = !DILocation(line: 177, column: 21, scope: !1138)
!1157 = !DILocation(line: 178, column: 5, scope: !1138)
!1158 = !DILocation(line: 178, column: 21, scope: !1138)
!1159 = !DILocation(line: 180, column: 5, scope: !1138)
!1160 = !DILocation(line: 182, column: 47, scope: !1161)
!1161 = distinct !DILexicalBlock(scope: !1138, file: !424, line: 182, column: 9)
!1162 = !DILocation(line: 182, column: 53, scope: !1161)
!1163 = !DILocation(line: 182, column: 16, scope: !1161)
!1164 = !DILocation(line: 182, column: 14, scope: !1161)
!1165 = !DILocation(line: 182, column: 59, scope: !1161)
!1166 = !DILocation(line: 182, column: 9, scope: !1138)
!1167 = !DILocation(line: 183, column: 17, scope: !1168)
!1168 = distinct !DILexicalBlock(scope: !1161, file: !424, line: 182, column: 65)
!1169 = !DILocation(line: 184, column: 26, scope: !1168)
!1170 = !DILocation(line: 184, column: 17, scope: !1168)
!1171 = !DILocation(line: 183, column: 9, scope: !1168)
!1172 = !DILocation(line: 185, column: 9, scope: !1168)
!1173 = !DILocation(line: 187, column: 1, scope: !1138)
!1174 = distinct !DISubprogram(name: "worker_libevent", scope: !424, file: !424, line: 279, type: !1142, scopeLine: 279, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1175)
!1175 = !{!1176, !1177}
!1176 = !DILocalVariable(name: "arg", arg: 1, scope: !1174, file: !424, line: 279, type: !80)
!1177 = !DILocalVariable(name: "me", scope: !1174, file: !424, line: 280, type: !449)
!1178 = !DILocation(line: 279, column: 36, scope: !1174)
!1179 = !DILocation(line: 280, column: 5, scope: !1174)
!1180 = !DILocation(line: 280, column: 22, scope: !1174)
!1181 = !DILocation(line: 280, column: 27, scope: !1174)
!1182 = !DILocation(line: 285, column: 5, scope: !1174)
!1183 = !DILocation(line: 286, column: 15, scope: !1174)
!1184 = !DILocation(line: 287, column: 5, scope: !1174)
!1185 = !DILocation(line: 288, column: 5, scope: !1174)
!1186 = !DILocation(line: 290, column: 21, scope: !1174)
!1187 = !DILocation(line: 290, column: 25, scope: !1174)
!1188 = !DILocation(line: 290, column: 5, scope: !1174)
!1189 = !DILocation(line: 292, column: 1, scope: !1174)
!1190 = !DILocation(line: 291, column: 5, scope: !1174)
!1191 = distinct !DISubprogram(name: "cqi_new", scope: !424, file: !424, line: 126, type: !1192, scopeLine: 126, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1194)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!434}
!1194 = !{!1195, !1196}
!1195 = !DILocalVariable(name: "item", scope: !1191, file: !424, line: 127, type: !434)
!1196 = !DILocalVariable(name: "i", scope: !1197, file: !424, line: 136, type: !10)
!1197 = distinct !DILexicalBlock(scope: !1198, file: !424, line: 135, column: 23)
!1198 = distinct !DILexicalBlock(scope: !1191, file: !424, line: 135, column: 9)
!1199 = !DILocation(line: 127, column: 5, scope: !1191)
!1200 = !DILocation(line: 127, column: 14, scope: !1191)
!1201 = !DILocation(line: 128, column: 5, scope: !1191)
!1202 = !DILocation(line: 129, column: 9, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1191, file: !424, line: 129, column: 9)
!1204 = !DILocation(line: 129, column: 9, scope: !1191)
!1205 = !DILocation(line: 130, column: 16, scope: !1206)
!1206 = distinct !DILexicalBlock(scope: !1203, file: !424, line: 129, column: 23)
!1207 = !DILocation(line: 130, column: 14, scope: !1206)
!1208 = !DILocation(line: 131, column: 24, scope: !1206)
!1209 = !DILocation(line: 131, column: 30, scope: !1206)
!1210 = !DILocation(line: 131, column: 22, scope: !1206)
!1211 = !DILocation(line: 132, column: 5, scope: !1206)
!1212 = !DILocation(line: 133, column: 5, scope: !1191)
!1213 = !DILocation(line: 135, column: 17, scope: !1198)
!1214 = !DILocation(line: 135, column: 14, scope: !1198)
!1215 = !DILocation(line: 135, column: 9, scope: !1191)
!1216 = !DILocation(line: 136, column: 9, scope: !1197)
!1217 = !DILocation(line: 136, column: 13, scope: !1197)
!1218 = !DILocation(line: 139, column: 16, scope: !1197)
!1219 = !DILocation(line: 139, column: 14, scope: !1197)
!1220 = !DILocation(line: 140, column: 21, scope: !1221)
!1221 = distinct !DILexicalBlock(scope: !1197, file: !424, line: 140, column: 13)
!1222 = !DILocation(line: 140, column: 18, scope: !1221)
!1223 = !DILocation(line: 140, column: 13, scope: !1197)
!1224 = !DILocation(line: 141, column: 13, scope: !1221)
!1225 = !DILocation(line: 148, column: 16, scope: !1226)
!1226 = distinct !DILexicalBlock(scope: !1197, file: !424, line: 148, column: 9)
!1227 = !DILocation(line: 148, column: 14, scope: !1226)
!1228 = !DILocation(line: 148, column: 21, scope: !1229)
!1229 = distinct !DILexicalBlock(scope: !1226, file: !424, line: 148, column: 9)
!1230 = !DILocation(line: 148, column: 23, scope: !1229)
!1231 = !DILocation(line: 148, column: 9, scope: !1226)
!1232 = !DILocation(line: 149, column: 33, scope: !1229)
!1233 = !DILocation(line: 149, column: 38, scope: !1229)
!1234 = !DILocation(line: 149, column: 13, scope: !1229)
!1235 = !DILocation(line: 149, column: 18, scope: !1229)
!1236 = !DILocation(line: 149, column: 20, scope: !1229)
!1237 = !DILocation(line: 149, column: 25, scope: !1229)
!1238 = !DILocation(line: 149, column: 30, scope: !1229)
!1239 = !DILocation(line: 148, column: 43, scope: !1229)
!1240 = !DILocation(line: 148, column: 9, scope: !1229)
!1241 = distinct !{!1241, !1231, !1242}
!1242 = !DILocation(line: 149, column: 39, scope: !1226)
!1243 = !DILocation(line: 151, column: 9, scope: !1197)
!1244 = !DILocation(line: 152, column: 42, scope: !1197)
!1245 = !DILocation(line: 152, column: 9, scope: !1197)
!1246 = !DILocation(line: 152, column: 35, scope: !1197)
!1247 = !DILocation(line: 152, column: 40, scope: !1197)
!1248 = !DILocation(line: 153, column: 25, scope: !1197)
!1249 = !DILocation(line: 153, column: 22, scope: !1197)
!1250 = !DILocation(line: 154, column: 9, scope: !1197)
!1251 = !DILocation(line: 155, column: 5, scope: !1198)
!1252 = !DILocation(line: 155, column: 5, scope: !1197)
!1253 = !DILocation(line: 157, column: 12, scope: !1191)
!1254 = !DILocation(line: 157, column: 5, scope: !1191)
!1255 = !DILocation(line: 158, column: 1, scope: !1191)
!1256 = distinct !DISubprogram(name: "thread_libevent_process", scope: !424, file: !424, line: 299, type: !78, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1257)
!1257 = !{!1258, !1259, !1260, !1261, !1262, !1263, !1267}
!1258 = !DILocalVariable(name: "fd", arg: 1, scope: !1256, file: !424, line: 299, type: !10)
!1259 = !DILocalVariable(name: "which", arg: 2, scope: !1256, file: !424, line: 299, type: !26)
!1260 = !DILocalVariable(name: "arg", arg: 3, scope: !1256, file: !424, line: 299, type: !80)
!1261 = !DILocalVariable(name: "me", scope: !1256, file: !424, line: 300, type: !449)
!1262 = !DILocalVariable(name: "item", scope: !1256, file: !424, line: 301, type: !434)
!1263 = !DILocalVariable(name: "buf", scope: !1256, file: !424, line: 302, type: !1264)
!1264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 8, elements: !1265)
!1265 = !{!1266}
!1266 = !DISubrange(count: 1)
!1267 = !DILocalVariable(name: "c", scope: !1268, file: !424, line: 311, type: !483)
!1268 = distinct !DILexicalBlock(scope: !1269, file: !424, line: 310, column: 23)
!1269 = distinct !DILexicalBlock(scope: !1256, file: !424, line: 310, column: 9)
!1270 = !DILocation(line: 299, column: 41, scope: !1256)
!1271 = !{!623, !623, i64 0}
!1272 = !DILocation(line: 299, column: 51, scope: !1256)
!1273 = !DILocation(line: 299, column: 64, scope: !1256)
!1274 = !DILocation(line: 300, column: 5, scope: !1256)
!1275 = !DILocation(line: 300, column: 22, scope: !1256)
!1276 = !DILocation(line: 300, column: 27, scope: !1256)
!1277 = !DILocation(line: 301, column: 5, scope: !1256)
!1278 = !DILocation(line: 301, column: 14, scope: !1256)
!1279 = !DILocation(line: 302, column: 5, scope: !1256)
!1280 = !DILocation(line: 302, column: 10, scope: !1256)
!1281 = !DILocation(line: 304, column: 14, scope: !1282)
!1282 = distinct !DILexicalBlock(scope: !1256, file: !424, line: 304, column: 9)
!1283 = !DILocation(line: 304, column: 18, scope: !1282)
!1284 = !DILocation(line: 304, column: 9, scope: !1282)
!1285 = !DILocation(line: 304, column: 26, scope: !1282)
!1286 = !DILocation(line: 304, column: 9, scope: !1256)
!1287 = !DILocation(line: 305, column: 22, scope: !1288)
!1288 = distinct !DILexicalBlock(scope: !1282, file: !424, line: 305, column: 13)
!1289 = !{!576, !561, i64 24}
!1290 = !DILocation(line: 305, column: 30, scope: !1288)
!1291 = !DILocation(line: 305, column: 13, scope: !1282)
!1292 = !DILocation(line: 306, column: 21, scope: !1288)
!1293 = !DILocation(line: 306, column: 13, scope: !1288)
!1294 = !DILocation(line: 305, column: 32, scope: !1288)
!1295 = !DILocation(line: 308, column: 21, scope: !1256)
!1296 = !DILocation(line: 308, column: 25, scope: !1256)
!1297 = !DILocation(line: 308, column: 12, scope: !1256)
!1298 = !DILocation(line: 308, column: 10, scope: !1256)
!1299 = !DILocation(line: 310, column: 17, scope: !1269)
!1300 = !DILocation(line: 310, column: 14, scope: !1269)
!1301 = !DILocation(line: 310, column: 9, scope: !1256)
!1302 = !DILocation(line: 311, column: 9, scope: !1268)
!1303 = !DILocation(line: 311, column: 15, scope: !1268)
!1304 = !DILocation(line: 311, column: 28, scope: !1268)
!1305 = !DILocation(line: 311, column: 34, scope: !1268)
!1306 = !DILocation(line: 311, column: 39, scope: !1268)
!1307 = !DILocation(line: 311, column: 45, scope: !1268)
!1308 = !DILocation(line: 311, column: 57, scope: !1268)
!1309 = !DILocation(line: 311, column: 63, scope: !1268)
!1310 = !DILocation(line: 312, column: 28, scope: !1268)
!1311 = !DILocation(line: 312, column: 34, scope: !1268)
!1312 = !DILocation(line: 312, column: 52, scope: !1268)
!1313 = !DILocation(line: 312, column: 58, scope: !1268)
!1314 = !DILocation(line: 312, column: 66, scope: !1268)
!1315 = !DILocation(line: 312, column: 70, scope: !1268)
!1316 = !DILocation(line: 311, column: 19, scope: !1268)
!1317 = !DILocation(line: 313, column: 13, scope: !1318)
!1318 = distinct !DILexicalBlock(scope: !1268, file: !424, line: 313, column: 13)
!1319 = !DILocation(line: 313, column: 15, scope: !1318)
!1320 = !DILocation(line: 313, column: 13, scope: !1268)
!1321 = !DILocation(line: 314, column: 17, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1323, file: !424, line: 314, column: 17)
!1323 = distinct !DILexicalBlock(scope: !1318, file: !424, line: 313, column: 24)
!1324 = !DILocation(line: 314, column: 23, scope: !1322)
!1325 = !DILocation(line: 314, column: 17, scope: !1323)
!1326 = !DILocation(line: 315, column: 25, scope: !1327)
!1327 = distinct !DILexicalBlock(scope: !1322, file: !424, line: 314, column: 31)
!1328 = !DILocation(line: 315, column: 17, scope: !1327)
!1329 = !DILocation(line: 316, column: 17, scope: !1327)
!1330 = !DILocation(line: 318, column: 30, scope: !1331)
!1331 = distinct !DILexicalBlock(scope: !1332, file: !424, line: 318, column: 21)
!1332 = distinct !DILexicalBlock(scope: !1322, file: !424, line: 317, column: 20)
!1333 = !DILocation(line: 318, column: 38, scope: !1331)
!1334 = !DILocation(line: 318, column: 21, scope: !1332)
!1335 = !DILocation(line: 319, column: 29, scope: !1336)
!1336 = distinct !DILexicalBlock(scope: !1331, file: !424, line: 318, column: 43)
!1337 = !DILocation(line: 320, column: 25, scope: !1336)
!1338 = !DILocation(line: 320, column: 31, scope: !1336)
!1339 = !DILocation(line: 319, column: 21, scope: !1336)
!1340 = !DILocation(line: 321, column: 17, scope: !1336)
!1341 = !DILocation(line: 322, column: 23, scope: !1332)
!1342 = !DILocation(line: 322, column: 29, scope: !1332)
!1343 = !DILocation(line: 322, column: 17, scope: !1332)
!1344 = !DILocation(line: 324, column: 9, scope: !1323)
!1345 = !DILocation(line: 325, column: 18, scope: !1268)
!1346 = !DILocation(line: 325, column: 9, scope: !1268)
!1347 = !DILocation(line: 326, column: 5, scope: !1269)
!1348 = !DILocation(line: 326, column: 5, scope: !1268)
!1349 = !DILocation(line: 327, column: 1, scope: !1256)
!1350 = distinct !DISubprogram(name: "cq_init", scope: !424, file: !424, line: 62, type: !1351, scopeLine: 62, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1353)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{null, !636}
!1353 = !{!1354}
!1354 = !DILocalVariable(name: "cq", arg: 1, scope: !1350, file: !424, line: 62, type: !636)
!1355 = !DILocation(line: 62, column: 25, scope: !1350)
!1356 = !DILocation(line: 63, column: 25, scope: !1350)
!1357 = !DILocation(line: 63, column: 29, scope: !1350)
!1358 = !DILocation(line: 63, column: 5, scope: !1350)
!1359 = !DILocation(line: 64, column: 24, scope: !1350)
!1360 = !DILocation(line: 64, column: 28, scope: !1350)
!1361 = !DILocation(line: 64, column: 5, scope: !1350)
!1362 = !DILocation(line: 65, column: 5, scope: !1350)
!1363 = !DILocation(line: 65, column: 9, scope: !1350)
!1364 = !DILocation(line: 65, column: 14, scope: !1350)
!1365 = !DILocation(line: 66, column: 5, scope: !1350)
!1366 = !DILocation(line: 66, column: 9, scope: !1350)
!1367 = !DILocation(line: 66, column: 14, scope: !1350)
!1368 = !DILocation(line: 67, column: 1, scope: !1350)
!1369 = distinct !DISubprogram(name: "cq_peek", scope: !424, file: !424, line: 92, type: !1370, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1372)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!434, !636}
!1372 = !{!1373, !1374}
!1373 = !DILocalVariable(name: "cq", arg: 1, scope: !1369, file: !424, line: 92, type: !636)
!1374 = !DILocalVariable(name: "item", scope: !1369, file: !424, line: 93, type: !434)
!1375 = !DILocation(line: 92, column: 29, scope: !1369)
!1376 = !DILocation(line: 93, column: 5, scope: !1369)
!1377 = !DILocation(line: 93, column: 14, scope: !1369)
!1378 = !DILocation(line: 95, column: 25, scope: !1369)
!1379 = !DILocation(line: 95, column: 29, scope: !1369)
!1380 = !DILocation(line: 95, column: 5, scope: !1369)
!1381 = !DILocation(line: 96, column: 12, scope: !1369)
!1382 = !DILocation(line: 96, column: 16, scope: !1369)
!1383 = !DILocation(line: 96, column: 10, scope: !1369)
!1384 = !DILocation(line: 97, column: 17, scope: !1385)
!1385 = distinct !DILexicalBlock(scope: !1369, file: !424, line: 97, column: 9)
!1386 = !DILocation(line: 97, column: 14, scope: !1385)
!1387 = !DILocation(line: 97, column: 9, scope: !1369)
!1388 = !DILocation(line: 98, column: 20, scope: !1389)
!1389 = distinct !DILexicalBlock(scope: !1385, file: !424, line: 97, column: 23)
!1390 = !DILocation(line: 98, column: 26, scope: !1389)
!1391 = !DILocation(line: 98, column: 9, scope: !1389)
!1392 = !DILocation(line: 98, column: 13, scope: !1389)
!1393 = !DILocation(line: 98, column: 18, scope: !1389)
!1394 = !DILocation(line: 99, column: 21, scope: !1395)
!1395 = distinct !DILexicalBlock(scope: !1389, file: !424, line: 99, column: 13)
!1396 = !DILocation(line: 99, column: 25, scope: !1395)
!1397 = !DILocation(line: 99, column: 18, scope: !1395)
!1398 = !DILocation(line: 99, column: 13, scope: !1389)
!1399 = !DILocation(line: 100, column: 13, scope: !1395)
!1400 = !DILocation(line: 100, column: 17, scope: !1395)
!1401 = !DILocation(line: 100, column: 22, scope: !1395)
!1402 = !DILocation(line: 101, column: 5, scope: !1389)
!1403 = !DILocation(line: 102, column: 27, scope: !1369)
!1404 = !DILocation(line: 102, column: 31, scope: !1369)
!1405 = !DILocation(line: 102, column: 5, scope: !1369)
!1406 = !DILocation(line: 104, column: 12, scope: !1369)
!1407 = !DILocation(line: 105, column: 1, scope: !1369)
!1408 = !DILocation(line: 104, column: 5, scope: !1369)
!1409 = distinct !DISubprogram(name: "cqi_free", scope: !424, file: !424, line: 164, type: !1410, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1412)
!1410 = !DISubroutineType(types: !1411)
!1411 = !{null, !434}
!1412 = !{!1413}
!1413 = !DILocalVariable(name: "item", arg: 1, scope: !1409, file: !424, line: 164, type: !434)
!1414 = !DILocation(line: 164, column: 31, scope: !1409)
!1415 = !DILocation(line: 165, column: 5, scope: !1409)
!1416 = !DILocation(line: 166, column: 18, scope: !1409)
!1417 = !DILocation(line: 166, column: 5, scope: !1409)
!1418 = !DILocation(line: 166, column: 11, scope: !1409)
!1419 = !DILocation(line: 166, column: 16, scope: !1409)
!1420 = !DILocation(line: 167, column: 20, scope: !1409)
!1421 = !DILocation(line: 167, column: 18, scope: !1409)
!1422 = !DILocation(line: 168, column: 5, scope: !1409)
!1423 = !DILocation(line: 169, column: 1, scope: !1409)
!1424 = !{!1425}
!1425 = !{i64 2, i64 3, i1 false}

=========== Module Dump End ============

[100%] Linking CXX executable memcached
clang-11: warning: argument unused during compilation: '-pavise=paviseimpload' [-Wunused-command-line-argument]
[100%] Built target memcached
