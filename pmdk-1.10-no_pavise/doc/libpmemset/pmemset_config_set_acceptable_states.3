.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "" "" "2022-08-10" "PMDK - " "PMDK Programmer's Manual"
.hy
.\" SPDX-License-Identifier: BSD-3-Clause
.\" Copyright 2021, Intel Corporation
.SH NAME
.PP
\f[B]pmemset_config_set_acceptable_states\f[]() \- set acceptable part
states in shutdown data state structure
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libpmemset.h>

struct\ pmemset_config;
int\ pmemset_config_set_acceptable_states(struct\ pmemset_config\ *cfg,\ uint64_t\ states);
\f[]
.fi
.SH DESCRIPTION
.PP
The \f[B]pmemset_config_set_acceptable_states\f[]() function sets
acceptable part states in config \f[I]cfg\f[] structure, \f[I]states\f[]
variable is a bitmask of part states.
.PP
Provided \f[I]states\f[] bitmask is compared with the determined part
state during the mapping of a new part using \f[B]pmemset_map\f[](3)
function.
If determined part state is not among provided states then
\f[B]pmemset_map\f[](3) function terminates and returns an error.
.PP
This feature depends on the SDS feature, for more information please see
\f[B]pmemset_source_set_sds\f[](3) and
\f[B]libpmemset_shutdown_state\f[](7).
.PP
The mapping process determines the part to be in one of the following
states:
.IP \[bu] 2
\f[B]PMEMSET_PART_STATE_INDETERMINATE\f[] \- the part state cannot be
determined because of the errors during retrieval of device information.
.IP \[bu] 2
\f[B]PMEMSET_PART_STATE_OK\f[] \- the part is internally consistent and
was closed cleanly.
Application can assume that no custom recovery is needed.
.IP \[bu] 2
\f[B]PMEMSET_PART_STATE_OK_BUT_ALREADY_OPEN\f[] \- the part is
internally consistent, but it is in use by the libpmemset library.
It is an expected state when creating multiple mappings from the same
source.
.IP \[bu] 2
\f[B]PMEMSET_PART_STATE_OK_BUT_INTERRUPTED\f[] \- the part is internally
consistent, but it was not closed cleanly.
.IP \[bu] 2
\f[B]PMEMSET_PART_STATE_CORRUPTED\f[] \- the part can contain invalid
data as a result of hardware failure.
Reading the part is unsafe.
Application might need to perform consistency checking and custom
recovery on user data.
.PP
\f[B]PMEMSET_PART_STATE_OK\f[] and
\f[B]PMEMSET_PART_STATE_OK_BUT_ALREADY_OPEN\f[] are the default
acceptable states for each new config structure.
.SH RETURN VALUE
.PP
The \f[B]pmemset_config_set_acceptable_states\f[]() function returns 0
on success or a negative error code on failure.
.SH ERRORS
.PP
\f[B]pmemset_config_set_acceptable_states\f[]() can fail with the
following errors:
.IP \[bu] 2
\f[B]PMEMSET_E_INVALID_PART_STATES\f[] \- combination of part states to
be set in SDS structure contains a part state undefined by
\f[B]libpmemset\f[](7) library
.SH SEE ALSO
.PP
\f[B]pmemset_map\f[](3), \f[B]pmemset_source_set_sds\f[](3),
\f[B]libpmemset\f[](7), \f[B]libpmemset_shutdown_state\f[](7) and
\f[B]<http://pmem.io>\f[]
