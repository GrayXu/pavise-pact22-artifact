.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "" "" "2022-08-10" "PMDK - " "PMDK Programmer's Manual"
.hy
.\" SPDX-License-Identifier: BSD-3-Clause
.\" Copyright 2021-2022, Intel Corporation
.SH NAME
.PP
\f[B]pmemset_source_pread_mcsafe\f[](),
\f[B]pmemset_source_pwrite_mcsafe\f[]() \- read source contents or write
to the source in a safe manner
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <libpmemset.h>

struct\ pmemset_source;
int\ pmemset_source_pread_mcsafe(struct\ pmemset_source\ *src,\ void\ *buf,
\ \ \ \ \ \ \ \ size_t\ size,\ size_t\ offset);
int\ pmemset_source_pwrite_mcsafe(struct\ pmemset_source\ *src,\ void\ *buf,
\ \ \ \ \ \ \ \ size_t\ size,\ size_t\ offset);
\f[]
.fi
.SH DESCRIPTION
.PP
The \f[B]pmemset_source_pread_mcsafe\f[]() function reads \f[I]size\f[]
bytes from the source \f[I]src\f[] starting at offset \f[I]offset\f[]
into the buffer \f[I]buf\f[].
The \f[B]pmemset_source_pwrite_mcsafe\f[]() function writes
\f[I]size\f[] bytes from the buffer \f[I]buf\f[] to the source
\f[I]src\f[] starting at the offset \f[I]offset\f[].
.PP
Safe manner refers to the capability to handle errors resulting from bad
blocks, preventing them from terminating an application and returning
those errors to the user.
For details, see corresponding \f[B]libpmem2\f[](7) functions
\f[B]pmem2_source_pread_mcsafe\f[](3) and
\f[B]pmem2_source_pwrite_mcsafe\f[](3).
.PP
Source \f[I]src\f[] can be created with
\f[B]pmemset_source_from_file\f[](3),
\f[B]pmemset_xsource_from_file\f[](3),
\f[B]pmemset_source_from_pmem2\f[](3) and
\f[B]pmemset_source_from_temporary\f[](3).
.SH RETURN VALUE
.PP
The \f[B]pmemset_source_pread_mcsafe\f[]() and
\f[B]pmemset_source_pwrite_mcsafe\f[]() functions return 0 on success or
a negative error code on failure.
.SH ERRORS
.PP
The \f[B]pmemset_source_pread_mcsafe\f[]() and
\f[B]pmemset_source_pwrite_mcsafe\f[]() can fail with the following
errors:
.IP \[bu] 2
\f[B]PMEMSET_E_IO_FAIL\f[] \- a physical I/O error occurred during the
read/write operation, a possible bad block encountered.
.IP \[bu] 2
\f[B]PMEMSET_E_LENGTH_OUT_OF_RANGE\f[] \- read/write operation size
\f[I]size\f[] from offset \f[I]offset\f[] goes beyond the file length.
Sources created with \f[B]pmemset_source_from_temporary\f[](3) have
initial size 0 and are prone to this error.
.PP
Those operations can also return all errors from the underlying
\f[B]pmem2_source_pread_mcsafe\f[](3) and
\f[B]pmem2_source_pwrite_mcsafe\f[](3) functions.
.SH SEE ALSO
.PP
\f[B]pmem2_source_pread_mcsafe\f[](3),
\f[B]pmem2_source_pwrite_mcsafe\f[](3),
\f[B]pmemset_source_from_file\f[](3),
\f[B]pmemset_source_from_pmem2\f[](3),
\f[B]pmemset_source_from_temporary\f[](3),
\f[B]pmemset_xsource_from_file\f[](3), \f[B]libpmem2\f[](7) and
\f[B]<https://pmem.io>\f[]
