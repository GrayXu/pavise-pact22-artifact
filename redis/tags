!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
02_crash_and_failover	tests/sentinel/tests/02-slaves-reconf.tcl	/^proc 02_crash_and_failover {} {$/;"	p
02_test_slaves_replication	tests/sentinel/tests/02-slaves-reconf.tcl	/^proc 02_test_slaves_replication {} {$/;"	p
1	deps/lua/doc/manual.html	/^<h1>1 - <a name="1">Introduction<\/a><\/h1>$/;"	a
2	deps/lua/doc/manual.html	/^<h1>2 - <a name="2">The Language<\/a><\/h1>$/;"	a
2.1	deps/lua/doc/manual.html	/^<h2>2.1 - <a name="2.1">Lexical Conventions<\/a><\/h2>$/;"	a
2.10	deps/lua/doc/manual.html	/^<h2>2.10 - <a name="2.10">Garbage Collection<\/a><\/h2>$/;"	a
2.10.1	deps/lua/doc/manual.html	/^<h3>2.10.1 - <a name="2.10.1">Garbage-Collection Metamethods<\/a><\/h3>$/;"	a
2.10.2	deps/lua/doc/manual.html	/^<h3>2.10.2 - <a name="2.10.2">Weak Tables<\/a><\/h3>$/;"	a
2.11	deps/lua/doc/manual.html	/^<h2>2.11 - <a name="2.11">Coroutines<\/a><\/h2>$/;"	a
2.2	deps/lua/doc/manual.html	/^<h2>2.2 - <a name="2.2">Values and Types<\/a><\/h2>$/;"	a
2.2.1	deps/lua/doc/manual.html	/^<h3>2.2.1 - <a name="2.2.1">Coercion<\/a><\/h3>$/;"	a
2.3	deps/lua/doc/manual.html	/^<h2>2.3 - <a name="2.3">Variables<\/a><\/h2>$/;"	a
2.4	deps/lua/doc/manual.html	/^<h2>2.4 - <a name="2.4">Statements<\/a><\/h2>$/;"	a
2.4.1	deps/lua/doc/manual.html	/^<h3>2.4.1 - <a name="2.4.1">Chunks<\/a><\/h3>$/;"	a
2.4.2	deps/lua/doc/manual.html	/^<h3>2.4.2 - <a name="2.4.2">Blocks<\/a><\/h3><p>$/;"	a
2.4.3	deps/lua/doc/manual.html	/^<h3>2.4.3 - <a name="2.4.3">Assignment<\/a><\/h3>$/;"	a
2.4.4	deps/lua/doc/manual.html	/^<h3>2.4.4 - <a name="2.4.4">Control Structures<\/a><\/h3><p>$/;"	a
2.4.5	deps/lua/doc/manual.html	/^<h3>2.4.5 - <a name="2.4.5">For Statement<\/a><\/h3>$/;"	a
2.4.6	deps/lua/doc/manual.html	/^<h3>2.4.6 - <a name="2.4.6">Function Calls as Statements<\/a><\/h3><p>$/;"	a
2.4.7	deps/lua/doc/manual.html	/^<h3>2.4.7 - <a name="2.4.7">Local Declarations<\/a><\/h3><p>$/;"	a
2.5	deps/lua/doc/manual.html	/^<h2>2.5 - <a name="2.5">Expressions<\/a><\/h2>$/;"	a
2.5.1	deps/lua/doc/manual.html	/^<h3>2.5.1 - <a name="2.5.1">Arithmetic Operators<\/a><\/h3><p>$/;"	a
2.5.2	deps/lua/doc/manual.html	/^<h3>2.5.2 - <a name="2.5.2">Relational Operators<\/a><\/h3><p>$/;"	a
2.5.3	deps/lua/doc/manual.html	/^<h3>2.5.3 - <a name="2.5.3">Logical Operators<\/a><\/h3><p>$/;"	a
2.5.4	deps/lua/doc/manual.html	/^<h3>2.5.4 - <a name="2.5.4">Concatenation<\/a><\/h3><p>$/;"	a
2.5.5	deps/lua/doc/manual.html	/^<h3>2.5.5 - <a name="2.5.5">The Length Operator<\/a><\/h3>$/;"	a
2.5.6	deps/lua/doc/manual.html	/^<h3>2.5.6 - <a name="2.5.6">Precedence<\/a><\/h3><p>$/;"	a
2.5.7	deps/lua/doc/manual.html	/^<h3>2.5.7 - <a name="2.5.7">Table Constructors<\/a><\/h3><p>$/;"	a
2.5.8	deps/lua/doc/manual.html	/^<h3>2.5.8 - <a name="2.5.8">Function Calls<\/a><\/h3><p>$/;"	a
2.5.9	deps/lua/doc/manual.html	/^<h3>2.5.9 - <a name="2.5.9">Function Definitions<\/a><\/h3>$/;"	a
2.6	deps/lua/doc/manual.html	/^<h2>2.6 - <a name="2.6">Visibility Rules<\/a><\/h2>$/;"	a
2.7	deps/lua/doc/manual.html	/^<h2>2.7 - <a name="2.7">Error Handling<\/a><\/h2>$/;"	a
2.8	deps/lua/doc/manual.html	/^<h2>2.8 - <a name="2.8">Metatables<\/a><\/h2>$/;"	a
2.9	deps/lua/doc/manual.html	/^<h2>2.9 - <a name="2.9">Environments<\/a><\/h2>$/;"	a
3	deps/lua/doc/manual.html	/^<h1>3 - <a name="3">The Application Program Interface<\/a><\/h1>$/;"	a
3.1	deps/lua/doc/manual.html	/^<h2>3.1 - <a name="3.1">The Stack<\/a><\/h2>$/;"	a
3.2	deps/lua/doc/manual.html	/^<h2>3.2 - <a name="3.2">Stack Size<\/a><\/h2>$/;"	a
3.3	deps/lua/doc/manual.html	/^<h2>3.3 - <a name="3.3">Pseudo-Indices<\/a><\/h2>$/;"	a
3.4	deps/lua/doc/manual.html	/^<h2>3.4 - <a name="3.4">C Closures<\/a><\/h2>$/;"	a
3.5	deps/lua/doc/manual.html	/^<h2>3.5 - <a name="3.5">Registry<\/a><\/h2>$/;"	a
3.6	deps/lua/doc/manual.html	/^<h2>3.6 - <a name="3.6">Error Handling in C<\/a><\/h2>$/;"	a
3.7	deps/lua/doc/manual.html	/^<h2>3.7 - <a name="3.7">Functions and Types<\/a><\/h2>$/;"	a
3.8	deps/lua/doc/manual.html	/^<h2>3.8 - <a name="3.8">The Debug Interface<\/a><\/h2>$/;"	a
4	deps/lua/doc/manual.html	/^<h1>4 - <a name="4">The Auxiliary Library<\/a><\/h1>$/;"	a
4.1	deps/lua/doc/manual.html	/^<h2>4.1 - <a name="4.1">Functions and Types<\/a><\/h2>$/;"	a
5	deps/lua/doc/manual.html	/^<h1>5 - <a name="5">Standard Libraries<\/a><\/h1>$/;"	a
5.1	deps/lua/doc/manual.html	/^<h2>5.1 - <a name="5.1">Basic Functions<\/a><\/h2>$/;"	a
5.2	deps/lua/doc/manual.html	/^<h2>5.2 - <a name="5.2">Coroutine Manipulation<\/a><\/h2>$/;"	a
5.3	deps/lua/doc/manual.html	/^<h2>5.3 - <a name="5.3">Modules<\/a><\/h2>$/;"	a
5.4	deps/lua/doc/manual.html	/^<h2>5.4 - <a name="5.4">String Manipulation<\/a><\/h2>$/;"	a
5.4.1	deps/lua/doc/manual.html	/^<h3>5.4.1 - <a name="5.4.1">Patterns<\/a><\/h3>$/;"	a
5.5	deps/lua/doc/manual.html	/^<h2>5.5 - <a name="5.5">Table Manipulation<\/a><\/h2><p>$/;"	a
5.6	deps/lua/doc/manual.html	/^<h2>5.6 - <a name="5.6">Mathematical Functions<\/a><\/h2>$/;"	a
5.7	deps/lua/doc/manual.html	/^<h2>5.7 - <a name="5.7">Input and Output Facilities<\/a><\/h2>$/;"	a
5.8	deps/lua/doc/manual.html	/^<h2>5.8 - <a name="5.8">Operating System Facilities<\/a><\/h2>$/;"	a
5.9	deps/lua/doc/manual.html	/^<h2>5.9 - <a name="5.9">The Debug Library<\/a><\/h2>$/;"	a
6	deps/lua/doc/manual.html	/^<h1>6 - <a name="6">Lua Stand-alone<\/a><\/h1>$/;"	a
7	deps/lua/doc/manual.html	/^<h1>7 - <a name="7">Incompatibilities with the Previous Version<\/a><\/h1>$/;"	a
7.1	deps/lua/doc/manual.html	/^<h2>7.1 - <a name="7.1">Changes in the Language<\/a><\/h2>$/;"	a
7.2	deps/lua/doc/manual.html	/^<h2>7.2 - <a name="7.2">Changes in the Libraries<\/a><\/h2>$/;"	a
7.3	deps/lua/doc/manual.html	/^<h2>7.3 - <a name="7.3">Changes in the API<\/a><\/h2>$/;"	a
8	deps/lua/doc/manual.html	/^<h1>8 - <a name="8">The Complete Syntax of Lua<\/a><\/h1>$/;"	a
::redis::__dispatch__	tests/support/redis.tcl	/^proc ::redis::__dispatch__ {id method args} {$/;"	p
::redis::__dispatch__raw__	tests/support/redis.tcl	/^proc ::redis::__dispatch__raw__ {id method argv} {$/;"	p
::redis::__method__blocking	tests/support/redis.tcl	/^proc ::redis::__method__blocking {id fd val} {$/;"	p
::redis::__method__channel	tests/support/redis.tcl	/^proc ::redis::__method__channel {id fd} {$/;"	p
::redis::__method__close	tests/support/redis.tcl	/^proc ::redis::__method__close {id fd} {$/;"	p
::redis::__method__deferred	tests/support/redis.tcl	/^proc ::redis::__method__deferred {id fd val} {$/;"	p
::redis::__method__flush	tests/support/redis.tcl	/^proc ::redis::__method__flush {id fd} {$/;"	p
::redis::__method__read	tests/support/redis.tcl	/^proc ::redis::__method__read {id fd} {$/;"	p
::redis::__method__reconnect	tests/support/redis.tcl	/^proc ::redis::__method__reconnect {id fd val} {$/;"	p
::redis::__method__write	tests/support/redis.tcl	/^proc ::redis::__method__write {id fd buf} {$/;"	p
::redis::redis_bulk_read	tests/support/redis.tcl	/^proc ::redis::redis_bulk_read {fd} {$/;"	p
::redis::redis_call_callback	tests/support/redis.tcl	/^proc ::redis::redis_call_callback {id type reply} {$/;"	p
::redis::redis_multi_bulk_read	tests/support/redis.tcl	/^proc ::redis::redis_multi_bulk_read {id fd} {$/;"	p
::redis::redis_read_line	tests/support/redis.tcl	/^proc ::redis::redis_read_line fd {$/;"	p
::redis::redis_read_reply	tests/support/redis.tcl	/^proc ::redis::redis_read_reply {id fd} {$/;"	p
::redis::redis_readable	tests/support/redis.tcl	/^proc ::redis::redis_readable {fd id} {$/;"	p
::redis::redis_readnl	tests/support/redis.tcl	/^proc ::redis::redis_readnl {fd len} {$/;"	p
::redis::redis_reset_state	tests/support/redis.tcl	/^proc ::redis::redis_reset_state id {$/;"	p
::redis::redis_write	tests/support/redis.tcl	/^proc ::redis::redis_write {fd buf} {$/;"	p
::redis::redis_writenl	tests/support/redis.tcl	/^proc ::redis::redis_writenl {fd buf} {$/;"	p
::redis_cluster::__dispatch__	tests/support/cluster.tcl	/^proc ::redis_cluster::__dispatch__ {id method args} {$/;"	p
::redis_cluster::__method__close	tests/support/cluster.tcl	/^proc ::redis_cluster::__method__close {id} {$/;"	p
::redis_cluster::__method__refresh_nodes_map	tests/support/cluster.tcl	/^proc ::redis_cluster::__method__refresh_nodes_map {id} {$/;"	p
::redis_cluster::crc16	tests/support/cluster.tcl	/^proc ::redis_cluster::crc16 {s} {$/;"	p
::redis_cluster::get_keys_from_command	tests/support/cluster.tcl	/^proc ::redis_cluster::get_keys_from_command {cmd argv} {$/;"	p
::redis_cluster::get_slot_from_keys	tests/support/cluster.tcl	/^proc ::redis_cluster::get_slot_from_keys {keys} {$/;"	p
::redis_cluster::hash	tests/support/cluster.tcl	/^proc ::redis_cluster::hash {key} {$/;"	p
A	deps/jemalloc/Makefile	/^A := a$/;"	m
A	deps/pmdk/src/test/pmreorder_flushes/pmreorder_flushes.c	/^	char A[STORE_SIZE];$/;"	m	struct:stores_fields	file:
A0	src/rand.c	57;"	d	file:
A1	src/rand.c	58;"	d	file:
A2	src/rand.c	59;"	d	file:
AARCH64_CACHEOPS_H	deps/pmdk/src/libpmem/aarch64/arm_cacheops.h	74;"	d
ABI	deps/jemalloc/Makefile	/^ABI := elf$/;"	m
ABORT_NOT_IMPLEMENTED	deps/pmdk/src/examples/libpmemobj/map/map.c	42;"	d	file:
ACLASS_RESERVED	deps/pmdk/src/libpmemobj/alloc_class.c	55;"	d	file:
ACPI_SIGNATURE	deps/pmdk/src/common/os_auto_flush_windows.h	36;"	d
ACTIVE_EXPIRE_CYCLE_FAST	src/server.h	186;"	d
ACTIVE_EXPIRE_CYCLE_FAST_DURATION	src/server.h	183;"	d
ACTIVE_EXPIRE_CYCLE_LOOKUPS_PER_LOOP	src/server.h	182;"	d
ACTIVE_EXPIRE_CYCLE_SLOW	src/server.h	185;"	d
ACTIVE_EXPIRE_CYCLE_SLOW_TIME_PERC	src/server.h	184;"	d
ADDEQU	src/rand.c	53;"	d	file:
ADDR_SUM	deps/pmdk/src/common/util.h	77;"	d
ADDR_SUM	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	53;"	d	file:
ADD_HDRS	deps/pmdk/src/libpmempool/transform.c	/^	ADD_HDRS,$/;"	e	enum:transform_op	file:
ADD_RANGE_MODE_NESTED_TX	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^enum add_range_mode { ADD_RANGE_MODE_ONE_TX, ADD_RANGE_MODE_NESTED_TX };$/;"	e	enum:add_range_mode	file:
ADD_RANGE_MODE_ONE_TX	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^enum add_range_mode { ADD_RANGE_MODE_ONE_TX, ADD_RANGE_MODE_NESTED_TX };$/;"	e	enum:add_range_mode	file:
ADD_REPLICAS	deps/pmdk/src/libpmempool/transform.c	/^	ADD_REPLICAS,$/;"	e	enum:transform_op	file:
ADR_FAILURE_STR	deps/pmdk/src/libpmempool/check_sds.c	59;"	d	file:
AE_ALL_EVENTS	src/ae.h	47;"	d
AE_DELETED_EVENT_ID	src/ae.h	51;"	d
AE_DONT_WAIT	src/ae.h	48;"	d
AE_ERR	src/ae.h	39;"	d
AE_FILE_EVENTS	src/ae.h	45;"	d
AE_NOMORE	src/ae.h	50;"	d
AE_NONE	src/ae.h	41;"	d
AE_NOTUSED	src/ae.h	54;"	d
AE_OK	src/ae.h	38;"	d
AE_READABLE	src/ae.h	42;"	d
AE_TIME_EVENTS	src/ae.h	46;"	d
AE_WRITABLE	src/ae.h	43;"	d
AF_LOCAL	deps/hiredis/net.h	39;"	d
AF_LOCAL	src/anet.h	45;"	d
ALIAS	deps/jemalloc/src/jemalloc.c	2083;"	d	file:
ALIAS	deps/jemalloc/src/jemalloc.c	2095;"	d	file:
ALIENS_COL	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	73;"	d	file:
ALIENS_ROW	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	72;"	d	file:
ALIGN	deps/pmdk/src/test/mmap_fixed/mmap_fixed.c	49;"	d	file:
ALIGNED_FREE	deps/pmdk/src/test/unittest/unittest.h	351;"	d
ALIGNMENT_ADDR2BASE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	339;"	d
ALIGNMENT_ADDR2OFFSET	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	343;"	d
ALIGNMENT_CEILING	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	347;"	d
ALIGNMENT_DESC_BITS	deps/pmdk/src/common/pool_hdr.h	55;"	d
ALIGN_CL	deps/pmdk/src/benchmarks/rpmem.cpp	58;"	d	file:
ALIGN_DOWN	deps/pmdk/src/common/util.h	75;"	d
ALIGN_DOWN	deps/pmdk/src/tools/daxio/daxio.c	60;"	d	file:
ALIGN_UP	deps/pmdk/src/common/util.h	74;"	d
ALIGN_UP	deps/pmdk/src/tools/daxio/daxio.c	59;"	d	file:
ALLOC	src/Makefile	/^	echo MALLOC=$(MALLOC) >> .make-settings$/;"	m
ALLOCS	deps/pmdk/src/test/obj_heap_state/obj_heap_state.c	43;"	d	file:
ALLOC_ARGS	deps/pmdk/src/libpmemobj/tx.c	106;"	d	file:
ALLOC_BLOCK_SIZE	deps/pmdk/src/libpmemobj/alloc_class.c	115;"	d	file:
ALLOC_BLOCK_SIZE	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	117;"	d	file:
ALLOC_BLOCK_SIZE_GEN	deps/pmdk/src/libpmemobj/alloc_class.c	86;"	d	file:
ALLOC_CLASS_ARENA	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	65;"	d	file:
ALLOC_CLASS_DEFAULT_FLAGS	deps/pmdk/src/libpmemobj/alloc_class.c	132;"	d	file:
ALLOC_CURR	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	61;"	d	file:
ALLOC_HDR_COMPACT_SIZE	deps/pmdk/src/libpmemobj/heap_layout.h	179;"	d
ALLOC_HDR_FLAGS_MASK	deps/pmdk/src/libpmemobj/heap_layout.h	169;"	d
ALLOC_HDR_SIZE_SHIFT	deps/pmdk/src/libpmemobj/heap_layout.h	168;"	d
ALLOC_MIN_SIZE	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	62;"	d	file:
ALLOC_MIN_SIZE	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	60;"	d	file:
ALLOC_OVERHEAD	deps/pmdk/src/benchmarks/map_bench.cpp	59;"	d	file:
ALLOC_OVERHEAD	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	52;"	d	file:
ALLOC_PATTERN	deps/pmdk/src/test/obj_ctl_debug/obj_ctl_debug.c	42;"	d	file:
ALLOC_SIZE	deps/pmdk/src/test/obj_extend/obj_extend.c	42;"	d	file:
ALLOC_SIZE	deps/pmdk/src/test/obj_heap_state/obj_heap_state.c	44;"	d	file:
ALLOC_SIZE	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	46;"	d	file:
ALLOC_SIZE	deps/pmdk/src/test/obj_pool_lookup/obj_pool_lookup.c	41;"	d	file:
ALLOC_SIZE	deps/pmdk/src/test/obj_zones/obj_zones.c	44;"	d	file:
ALLOC_TOTAL	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	60;"	d	file:
ALL_A	deps/lua/src/Makefile	/^ALL_A= $(LUA_A)$/;"	m
ALL_O	deps/lua/src/Makefile	/^ALL_O= $(CORE_O) $(LIB_O) $(LUA_O) $(LUAC_O)$/;"	m
ALL_T	deps/lua/src/Makefile	/^ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)$/;"	m
ALL_TARGETS	deps/pmdk/src/Makefile	/^ALL_TARGETS = $(TARGETS) common librpmem libpmem2$/;"	m
ALPHABET_SIZE	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	49;"	d	file:
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params11213.h	58;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params11213.h	72;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params1279.h	58;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params1279.h	72;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params132049.h	58;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params132049.h	72;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params19937.h	58;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params19937.h	72;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params216091.h	58;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params216091.h	72;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params2281.h	58;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params2281.h	72;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params4253.h	58;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params4253.h	72;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params44497.h	58;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params44497.h	72;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params607.h	58;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params607.h	72;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params86243.h	58;"	d
ALTI_MSK	deps/jemalloc/test/include/test/SFMT-params86243.h	72;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params11213.h	59;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params11213.h	73;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params1279.h	59;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params1279.h	73;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params132049.h	59;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params132049.h	73;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params19937.h	59;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params19937.h	73;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params216091.h	59;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params216091.h	73;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params2281.h	59;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params2281.h	73;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params4253.h	59;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params4253.h	73;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params44497.h	59;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params44497.h	73;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params607.h	59;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params607.h	73;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params86243.h	59;"	d
ALTI_MSK64	deps/jemalloc/test/include/test/SFMT-params86243.h	73;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params11213.h	56;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params11213.h	70;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params1279.h	56;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params1279.h	70;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params132049.h	56;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params132049.h	70;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params19937.h	56;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params19937.h	70;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params216091.h	56;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params216091.h	70;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params2281.h	56;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params2281.h	70;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params4253.h	56;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params4253.h	70;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params44497.h	56;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params44497.h	70;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params607.h	56;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params607.h	70;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params86243.h	56;"	d
ALTI_SL1	deps/jemalloc/test/include/test/SFMT-params86243.h	70;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params11213.h	61;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params11213.h	74;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params1279.h	61;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params1279.h	74;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params132049.h	61;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params132049.h	74;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params19937.h	61;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params19937.h	74;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params216091.h	61;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params216091.h	74;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params2281.h	61;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params2281.h	74;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params4253.h	61;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params4253.h	74;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params44497.h	61;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params44497.h	74;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params607.h	61;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params607.h	74;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params86243.h	61;"	d
ALTI_SL2_PERM	deps/jemalloc/test/include/test/SFMT-params86243.h	74;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params11213.h	63;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params11213.h	75;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params1279.h	63;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params1279.h	75;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params132049.h	63;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params132049.h	75;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params19937.h	63;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params19937.h	75;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params216091.h	63;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params216091.h	75;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params2281.h	63;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params2281.h	75;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params4253.h	63;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params4253.h	75;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params44497.h	63;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params44497.h	75;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params607.h	63;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params607.h	75;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params86243.h	63;"	d
ALTI_SL2_PERM64	deps/jemalloc/test/include/test/SFMT-params86243.h	75;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params11213.h	57;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params11213.h	71;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params1279.h	57;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params1279.h	71;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params132049.h	57;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params132049.h	71;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params19937.h	57;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params19937.h	71;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params216091.h	57;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params216091.h	71;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params2281.h	57;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params2281.h	71;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params4253.h	57;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params4253.h	71;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params44497.h	57;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params44497.h	71;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params607.h	57;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params607.h	71;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params86243.h	57;"	d
ALTI_SR1	deps/jemalloc/test/include/test/SFMT-params86243.h	71;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params11213.h	65;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params11213.h	76;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params1279.h	65;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params1279.h	76;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params132049.h	65;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params132049.h	76;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params19937.h	65;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params19937.h	76;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params216091.h	65;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params216091.h	76;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params2281.h	65;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params2281.h	76;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params4253.h	65;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params4253.h	76;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params44497.h	65;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params44497.h	76;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params607.h	65;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params607.h	76;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params86243.h	65;"	d
ALTI_SR2_PERM	deps/jemalloc/test/include/test/SFMT-params86243.h	76;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params11213.h	67;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params11213.h	77;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params1279.h	67;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params1279.h	77;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params132049.h	67;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params132049.h	77;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params19937.h	67;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params19937.h	77;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params216091.h	67;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params216091.h	77;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params2281.h	67;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params2281.h	77;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params4253.h	67;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params4253.h	77;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params44497.h	67;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params44497.h	77;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params607.h	67;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params607.h	77;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params86243.h	67;"	d
ALTI_SR2_PERM64	deps/jemalloc/test/include/test/SFMT-params86243.h	77;"	d
ALTI_SWAP	deps/jemalloc/test/include/test/SFMT-alti.h	164;"	d
ALTI_SWAP	deps/jemalloc/test/include/test/SFMT-alti.h	167;"	d
AL_START_HEAD	src/adlist.h	90;"	d
AL_START_HEAD	src/quicklist.h	166;"	d
AL_START_TAIL	src/adlist.h	91;"	d
AL_START_TAIL	src/quicklist.h	167;"	d
ANALYZER_ASSERT	deps/pmdk/src/common/queue.h	95;"	d
ANALYZER_ASSERT	deps/pmdk/src/common/queue.h	97;"	d
ANET_CONNECT_BE_BINDING	src/anet.c	267;"	d	file:
ANET_CONNECT_NONBLOCK	src/anet.c	266;"	d	file:
ANET_CONNECT_NONE	src/anet.c	265;"	d	file:
ANET_ERR	src/anet.h	37;"	d
ANET_ERR_LEN	src/anet.h	38;"	d
ANET_H	src/anet.h	32;"	d
ANET_IP_ONLY	src/anet.h	42;"	d
ANET_NONE	src/anet.h	41;"	d
ANET_OK	src/anet.h	36;"	d
ANNOTATE_BARRIER_DESTROY	deps/pmdk/src/common/valgrind/drd.h	144;"	d
ANNOTATE_BARRIER_DESTROY	deps/pmdk/src/common/valgrind/drd.h	311;"	d
ANNOTATE_BARRIER_DESTROY	deps/pmdk/src/common/valgrind/helgrind.h	807;"	d
ANNOTATE_BARRIER_INIT	deps/pmdk/src/common/valgrind/drd.h	141;"	d
ANNOTATE_BARRIER_INIT	deps/pmdk/src/common/valgrind/drd.h	305;"	d
ANNOTATE_BARRIER_INIT	deps/pmdk/src/common/valgrind/helgrind.h	795;"	d
ANNOTATE_BARRIER_WAIT_AFTER	deps/pmdk/src/common/valgrind/drd.h	143;"	d
ANNOTATE_BARRIER_WAIT_AFTER	deps/pmdk/src/common/valgrind/drd.h	323;"	d
ANNOTATE_BARRIER_WAIT_AFTER	deps/pmdk/src/common/valgrind/helgrind.h	803;"	d
ANNOTATE_BARRIER_WAIT_BEFORE	deps/pmdk/src/common/valgrind/drd.h	142;"	d
ANNOTATE_BARRIER_WAIT_BEFORE	deps/pmdk/src/common/valgrind/drd.h	317;"	d
ANNOTATE_BARRIER_WAIT_BEFORE	deps/pmdk/src/common/valgrind/helgrind.h	799;"	d
ANNOTATE_BENIGN_RACE	deps/pmdk/src/common/valgrind/drd.h	149;"	d
ANNOTATE_BENIGN_RACE	deps/pmdk/src/common/valgrind/drd.h	357;"	d
ANNOTATE_BENIGN_RACE	deps/pmdk/src/common/valgrind/helgrind.h	692;"	d
ANNOTATE_BENIGN_RACE_SIZED	deps/pmdk/src/common/valgrind/drd.h	150;"	d
ANNOTATE_BENIGN_RACE_SIZED	deps/pmdk/src/common/valgrind/drd.h	362;"	d
ANNOTATE_BENIGN_RACE_SIZED	deps/pmdk/src/common/valgrind/helgrind.h	697;"	d
ANNOTATE_BENIGN_RACE_STATIC	deps/pmdk/src/common/valgrind/drd.h	555;"	d
ANNOTATE_CONDVAR_LOCK_WAIT	deps/pmdk/src/common/valgrind/drd.h	135;"	d
ANNOTATE_CONDVAR_LOCK_WAIT	deps/pmdk/src/common/valgrind/drd.h	171;"	d
ANNOTATE_CONDVAR_LOCK_WAIT	deps/pmdk/src/common/valgrind/helgrind.h	508;"	d
ANNOTATE_CONDVAR_SIGNAL	deps/pmdk/src/common/valgrind/drd.h	137;"	d
ANNOTATE_CONDVAR_SIGNAL	deps/pmdk/src/common/valgrind/drd.h	176;"	d
ANNOTATE_CONDVAR_SIGNAL	deps/pmdk/src/common/valgrind/helgrind.h	518;"	d
ANNOTATE_CONDVAR_SIGNAL_ALL	deps/pmdk/src/common/valgrind/drd.h	138;"	d
ANNOTATE_CONDVAR_SIGNAL_ALL	deps/pmdk/src/common/valgrind/drd.h	181;"	d
ANNOTATE_CONDVAR_SIGNAL_ALL	deps/pmdk/src/common/valgrind/helgrind.h	523;"	d
ANNOTATE_CONDVAR_WAIT	deps/pmdk/src/common/valgrind/drd.h	136;"	d
ANNOTATE_CONDVAR_WAIT	deps/pmdk/src/common/valgrind/drd.h	190;"	d
ANNOTATE_CONDVAR_WAIT	deps/pmdk/src/common/valgrind/helgrind.h	513;"	d
ANNOTATE_EXPECT_RACE	deps/pmdk/src/common/valgrind/helgrind.h	818;"	d
ANNOTATE_FLUSH_STATE	deps/pmdk/src/common/valgrind/helgrind.h	827;"	d
ANNOTATE_HAPPENS_AFTER	deps/pmdk/src/common/valgrind/drd.h	129;"	d
ANNOTATE_HAPPENS_AFTER	deps/pmdk/src/common/valgrind/helgrind.h	573;"	d
ANNOTATE_HAPPENS_BEFORE	deps/pmdk/src/common/valgrind/drd.h	117;"	d
ANNOTATE_HAPPENS_BEFORE	deps/pmdk/src/common/valgrind/helgrind.h	570;"	d
ANNOTATE_HAPPENS_BEFORE_FORGET_ALL	deps/pmdk/src/common/valgrind/helgrind.h	576;"	d
ANNOTATE_IGNORE_READS_AND_WRITES_BEGIN	deps/pmdk/src/common/valgrind/drd.h	155;"	d
ANNOTATE_IGNORE_READS_AND_WRITES_BEGIN	deps/pmdk/src/common/valgrind/drd.h	388;"	d
ANNOTATE_IGNORE_READS_AND_WRITES_BEGIN	deps/pmdk/src/common/valgrind/helgrind.h	720;"	d
ANNOTATE_IGNORE_READS_AND_WRITES_END	deps/pmdk/src/common/valgrind/drd.h	156;"	d
ANNOTATE_IGNORE_READS_AND_WRITES_END	deps/pmdk/src/common/valgrind/drd.h	395;"	d
ANNOTATE_IGNORE_READS_AND_WRITES_END	deps/pmdk/src/common/valgrind/helgrind.h	727;"	d
ANNOTATE_IGNORE_READS_BEGIN	deps/pmdk/src/common/valgrind/drd.h	151;"	d
ANNOTATE_IGNORE_READS_BEGIN	deps/pmdk/src/common/valgrind/drd.h	367;"	d
ANNOTATE_IGNORE_READS_BEGIN	deps/pmdk/src/common/valgrind/helgrind.h	704;"	d
ANNOTATE_IGNORE_READS_END	deps/pmdk/src/common/valgrind/drd.h	152;"	d
ANNOTATE_IGNORE_READS_END	deps/pmdk/src/common/valgrind/drd.h	373;"	d
ANNOTATE_IGNORE_READS_END	deps/pmdk/src/common/valgrind/helgrind.h	708;"	d
ANNOTATE_IGNORE_WRITES_BEGIN	deps/pmdk/src/common/valgrind/drd.h	153;"	d
ANNOTATE_IGNORE_WRITES_BEGIN	deps/pmdk/src/common/valgrind/drd.h	378;"	d
ANNOTATE_IGNORE_WRITES_BEGIN	deps/pmdk/src/common/valgrind/helgrind.h	712;"	d
ANNOTATE_IGNORE_WRITES_END	deps/pmdk/src/common/valgrind/drd.h	154;"	d
ANNOTATE_IGNORE_WRITES_END	deps/pmdk/src/common/valgrind/drd.h	383;"	d
ANNOTATE_IGNORE_WRITES_END	deps/pmdk/src/common/valgrind/helgrind.h	716;"	d
ANNOTATE_MUTEX_IS_USED_AS_CONDVAR	deps/pmdk/src/common/valgrind/drd.h	201;"	d
ANNOTATE_NEW_MEMORY	deps/pmdk/src/common/valgrind/drd.h	157;"	d
ANNOTATE_NEW_MEMORY	deps/pmdk/src/common/valgrind/drd.h	402;"	d
ANNOTATE_NEW_MEMORY	deps/pmdk/src/common/valgrind/helgrind.h	638;"	d
ANNOTATE_NO_OP	deps/pmdk/src/common/valgrind/helgrind.h	822;"	d
ANNOTATE_PCQ_CREATE	deps/pmdk/src/common/valgrind/drd.h	145;"	d
ANNOTATE_PCQ_CREATE	deps/pmdk/src/common/valgrind/drd.h	332;"	d
ANNOTATE_PCQ_CREATE	deps/pmdk/src/common/valgrind/helgrind.h	656;"	d
ANNOTATE_PCQ_DESTROY	deps/pmdk/src/common/valgrind/drd.h	146;"	d
ANNOTATE_PCQ_DESTROY	deps/pmdk/src/common/valgrind/drd.h	335;"	d
ANNOTATE_PCQ_DESTROY	deps/pmdk/src/common/valgrind/helgrind.h	660;"	d
ANNOTATE_PCQ_GET	deps/pmdk/src/common/valgrind/drd.h	148;"	d
ANNOTATE_PCQ_GET	deps/pmdk/src/common/valgrind/drd.h	351;"	d
ANNOTATE_PCQ_GET	deps/pmdk/src/common/valgrind/helgrind.h	670;"	d
ANNOTATE_PCQ_PUT	deps/pmdk/src/common/valgrind/drd.h	147;"	d
ANNOTATE_PCQ_PUT	deps/pmdk/src/common/valgrind/drd.h	340;"	d
ANNOTATE_PCQ_PUT	deps/pmdk/src/common/valgrind/helgrind.h	665;"	d
ANNOTATE_PUBLISH_MEMORY_RANGE	deps/pmdk/src/common/valgrind/drd.h	140;"	d
ANNOTATE_PUBLISH_MEMORY_RANGE	deps/pmdk/src/common/valgrind/drd.h	208;"	d
ANNOTATE_PUBLISH_MEMORY_RANGE	deps/pmdk/src/common/valgrind/helgrind.h	592;"	d
ANNOTATE_PURE_HAPPENS_BEFORE_MUTEX	deps/pmdk/src/common/valgrind/drd.h	139;"	d
ANNOTATE_PURE_HAPPENS_BEFORE_MUTEX	deps/pmdk/src/common/valgrind/drd.h	198;"	d
ANNOTATE_PURE_HAPPENS_BEFORE_MUTEX	deps/pmdk/src/common/valgrind/helgrind.h	616;"	d
ANNOTATE_READERLOCK_ACQUIRED	deps/pmdk/src/common/valgrind/drd.h	243;"	d
ANNOTATE_READERLOCK_RELEASED	deps/pmdk/src/common/valgrind/drd.h	267;"	d
ANNOTATE_RWLOCK_ACQUIRED	deps/pmdk/src/common/valgrind/drd.h	233;"	d
ANNOTATE_RWLOCK_ACQUIRED	deps/pmdk/src/common/valgrind/helgrind.h	775;"	d
ANNOTATE_RWLOCK_CREATE	deps/pmdk/src/common/valgrind/drd.h	219;"	d
ANNOTATE_RWLOCK_CREATE	deps/pmdk/src/common/valgrind/helgrind.h	764;"	d
ANNOTATE_RWLOCK_DESTROY	deps/pmdk/src/common/valgrind/drd.h	224;"	d
ANNOTATE_RWLOCK_DESTROY	deps/pmdk/src/common/valgrind/helgrind.h	769;"	d
ANNOTATE_RWLOCK_RELEASED	deps/pmdk/src/common/valgrind/drd.h	258;"	d
ANNOTATE_RWLOCK_RELEASED	deps/pmdk/src/common/valgrind/helgrind.h	780;"	d
ANNOTATE_SEM_DESTROY_POST	deps/pmdk/src/common/valgrind/drd.h	280;"	d
ANNOTATE_SEM_INIT_PRE	deps/pmdk/src/common/valgrind/drd.h	275;"	d
ANNOTATE_SEM_POST_PRE	deps/pmdk/src/common/valgrind/drd.h	295;"	d
ANNOTATE_SEM_WAIT_POST	deps/pmdk/src/common/valgrind/drd.h	290;"	d
ANNOTATE_SEM_WAIT_PRE	deps/pmdk/src/common/valgrind/drd.h	285;"	d
ANNOTATE_SWAP_MEMORY_RANGE	deps/pmdk/src/common/valgrind/drd.h	214;"	d
ANNOTATE_THREAD_NAME	deps/pmdk/src/common/valgrind/drd.h	159;"	d
ANNOTATE_THREAD_NAME	deps/pmdk/src/common/valgrind/drd.h	413;"	d
ANNOTATE_THREAD_NAME	deps/pmdk/src/common/valgrind/helgrind.h	746;"	d
ANNOTATE_TRACE_MEMORY	deps/pmdk/src/common/valgrind/drd.h	158;"	d
ANNOTATE_TRACE_MEMORY	deps/pmdk/src/common/valgrind/drd.h	407;"	d
ANNOTATE_TRACE_MEMORY	deps/pmdk/src/common/valgrind/helgrind.h	742;"	d
ANNOTATE_UNPROTECTED_READ	deps/pmdk/src/common/valgrind/drd.h	/^inline T ANNOTATE_UNPROTECTED_READ(const volatile T& x) {$/;"	f
ANNOTATE_UNPUBLISH_MEMORY_RANGE	deps/pmdk/src/common/valgrind/drd.h	211;"	d
ANNOTATE_WRITERLOCK_ACQUIRED	deps/pmdk/src/common/valgrind/drd.h	249;"	d
ANNOTATE_WRITERLOCK_RELEASED	deps/pmdk/src/common/valgrind/drd.h	272;"	d
ANSWER_BUFFSIZE	deps/pmdk/src/libpmempool/libpmempool.c	54;"	d	file:
ANY_VG_TOOL_ENABLED	deps/pmdk/src/common/valgrind_internal.h	55;"	d
ANY_VG_TOOL_ENABLED	deps/pmdk/src/common/valgrind_internal.h	57;"	d
AOF_AUTOSYNC_BYTES	src/server.h	202;"	d
AOF_FSYNC_ALWAYS	src/server.h	401;"	d
AOF_FSYNC_EVERYSEC	src/server.h	402;"	d
AOF_FSYNC_NO	src/server.h	400;"	d
AOF_OFF	src/server.h	279;"	d
AOF_ON	src/server.h	280;"	d
AOF_REWRITE_ITEMS_PER_CMD	src/server.h	128;"	d
AOF_REWRITE_MIN_SIZE	src/server.h	127;"	d
AOF_REWRITE_PERC	src/server.h	126;"	d
AOF_RW_BUF_BLOCK_SIZE	src/aof.c	60;"	d	file:
AOF_WAIT_REWRITE	src/server.h	281;"	d
AOF_WRITE_LOG_ERROR_RATE	src/aof.c	286;"	d	file:
APPEND_C	deps/jemalloc/src/util.c	324;"	d	file:
APPEND_C	deps/jemalloc/src/util.c	589;"	d	file:
APPEND_PADDED_S	deps/jemalloc/src/util.c	336;"	d	file:
APPEND_PADDED_S	deps/jemalloc/src/util.c	591;"	d	file:
APPEND_S	deps/jemalloc/src/util.c	329;"	d	file:
APPEND_S	deps/jemalloc/src/util.c	590;"	d	file:
APPEND_SIZE	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	76;"	d	file:
APPNAME	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	70;"	d	file:
APPNAME	deps/pmdk/src/tools/pmempool/pmempool.c	62;"	d	file:
APP_NAME	deps/pmdk/src/test/tools/ctrld/ctrld.c	64;"	d	file:
AR	deps/Makefile	/^AR=ar$/;"	m
AR	deps/jemalloc/Makefile	/^AR = ar$/;"	m
AR	deps/lua/src/Makefile	/^AR= ar rcu$/;"	m
ARCH_FLAGS_LOG_FILE_VAR	deps/pmdk/src/test/arch_flags/arch_flags.c	48;"	d	file:
ARCH_FLAGS_LOG_LEVEL_VAR	deps/pmdk/src/test/arch_flags/arch_flags.c	47;"	d	file:
ARCH_FLAGS_LOG_MAJOR	deps/pmdk/src/test/arch_flags/arch_flags.c	49;"	d	file:
ARCH_FLAGS_LOG_MINOR	deps/pmdk/src/test/arch_flags/arch_flags.c	50;"	d	file:
ARCH_FLAGS_LOG_PREFIX	deps/pmdk/src/test/arch_flags/arch_flags.c	46;"	d	file:
ARCH_FLAGS_RESERVED_LEN_V1	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	53;"	d	file:
ARCH_FLAGS_SIZE_V1	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	52;"	d	file:
ARENA_ID_FROM_FLAG	deps/pmdk/src/libpmemobj/obj.h	237;"	d
ARFLAGS	deps/Makefile	/^ARFLAGS=rcu$/;"	m
ARFLAGS	deps/jemalloc/Makefile	/^ARFLAGS = crus$/;"	m
ARM64_FLUSH_H	deps/pmdk/src/libpmem/aarch64/flush.h	34;"	d
ARN	src/Makefile	/^	echo WARN=$(WARN) >> .make-settings$/;"	m
ARRAY2D	deps/lua/test/life.lua	/^function ARRAY2D(w,h)$/;"	f
ARRAY_SIZE	deps/pmdk/src/benchmarks/benchmark.hpp	70;"	d
ARRAY_SIZE	deps/pmdk/src/common/util.h	125;"	d
ARRAY_SIZE_COMMON	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	60;"	d	file:
ART_LEAF	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	ART_LEAF	= 4,$/;"	e	enum:__anon102
ART_NODE	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	ART_NODE	= 6,$/;"	e	enum:__anon102
ART_NODE16	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	ART_NODE16	= 1,$/;"	e	enum:__anon102
ART_NODE256	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	ART_NODE256	= 3,$/;"	e	enum:__anon102
ART_NODE4	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	ART_NODE4	= 0,$/;"	e	enum:__anon102
ART_NODE48	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	ART_NODE48	= 2,$/;"	e	enum:__anon102
ART_NODE_U	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	ART_NODE_U	= 5,$/;"	e	enum:__anon102
ART_TREE_ROOT	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	ART_TREE_ROOT	= 7,$/;"	e	enum:__anon102
ASAN_POISON_MEMORY_REGION	deps/pmdk/src/test/unittest/unittest.h	780;"	d
ASAN_POISON_MEMORY_REGION	deps/pmdk/src/test/unittest/unittest.h	785;"	d
ASAN_UNPOISON_MEMORY_REGION	deps/pmdk/src/test/unittest/unittest.h	782;"	d
ASAN_UNPOISON_MEMORY_REGION	deps/pmdk/src/test/unittest/unittest.h	787;"	d
ASK_ALWAYS	deps/pmdk/src/tools/pmempool/rm.c	/^	ASK_ALWAYS,	\/* always ask *\/$/;"	e	enum:ask_type	file:
ASK_NEVER	deps/pmdk/src/tools/pmempool/rm.c	/^	ASK_NEVER,	\/* never ask *\/$/;"	e	enum:ask_type	file:
ASK_SOMETIMES	deps/pmdk/src/tools/pmempool/rm.c	/^	ASK_SOMETIMES,	\/* ask before removing write-protected files *\/$/;"	e	enum:ask_type	file:
ASSERT	deps/pmdk/src/common/out.h	188;"	d
ASSERT_ALIGNED_BEGIN	deps/pmdk/src/test/unittest/unittest.h	733;"	d
ASSERT_ALIGNED_CHECK	deps/pmdk/src/test/unittest/unittest.h	758;"	d
ASSERT_ALIGNED_FIELD	deps/pmdk/src/test/unittest/unittest.h	738;"	d
ASSERT_BUFSIZE	deps/jemalloc/test/include/test/test.h	1;"	d
ASSERT_COMPILE_ERROR_ON	deps/pmdk/src/common/util.h	475;"	d
ASSERT_COMPILE_ERROR_ON	deps/pmdk/src/common/util.h	479;"	d
ASSERT_COMPILE_ERROR_ON	deps/pmdk/src/common/util.h	482;"	d
ASSERT_FIELD_SIZE	deps/pmdk/src/test/unittest/unittest.h	747;"	d
ASSERT_IN_TX	deps/pmdk/src/libpmemobj/tx.c	187;"	d	file:
ASSERT_OFFSET_CHECKPOINT	deps/pmdk/src/test/unittest/unittest.h	751;"	d
ASSERT_TX_STAGE_WORK	deps/pmdk/src/libpmemobj/tx.c	193;"	d	file:
ASSERT_rt	deps/pmdk/src/common/out.h	159;"	d
ASSERTeq	deps/pmdk/src/common/out.h	207;"	d
ASSERTeq_rt	deps/pmdk/src/common/out.h	172;"	d
ASSERTinfo	deps/pmdk/src/common/out.h	199;"	d
ASSERTinfo_rt	deps/pmdk/src/common/out.h	165;"	d
ASSERTne	deps/pmdk/src/common/out.h	215;"	d
ASSERTne_rt	deps/pmdk/src/common/out.h	180;"	d
ASSET_CHECKED_OUT	deps/pmdk/src/examples/libpmemblk/assetdb/asset.h	35;"	d
ASSET_FREE	deps/pmdk/src/examples/libpmemblk/assetdb/asset.h	36;"	d
ASSET_NAME_MAX	deps/pmdk/src/examples/libpmemblk/assetdb/asset.h	33;"	d
ASSET_USER_NAME_MAX	deps/pmdk/src/examples/libpmemblk/assetdb/asset.h	34;"	d
ATOI	deps/pmdk/src/test/unittest/unittest.h	515;"	d
ATOL	deps/pmdk/src/test/unittest/unittest.h	516;"	d
ATOLL	deps/pmdk/src/test/unittest/unittest.h	517;"	d
ATOMIC_COPY_HOOK	deps/jemalloc/src/chunk.c	107;"	d	file:
ATOMIC_COPY_HOOK	deps/jemalloc/src/chunk.c	92;"	d	file:
ATOU	deps/pmdk/src/test/unittest/unittest.h	512;"	d
ATOUL	deps/pmdk/src/test/unittest/unittest.h	513;"	d
ATOULL	deps/pmdk/src/test/unittest/unittest.h	514;"	d
ATTR_CONSTRUCTOR	deps/pmdk/src/common/util.h	486;"	d
ATTR_CONSTRUCTOR	deps/pmdk/src/common/util.h	489;"	d
ATTR_DESTRUCTOR	deps/pmdk/src/common/util.h	487;"	d
ATTR_DESTRUCTOR	deps/pmdk/src/common/util.h	490;"	d
AUTO	deps/pmdk/src/test/unittest/valgrind.py	/^AUTO = 0$/;"	v
AUTOCONF	deps/jemalloc/Makefile	/^AUTOCONF := \/usr\/bin\/autoconf$/;"	m
AUXMARK	deps/lua/src/loadlib.c	590;"	d	file:
AVOID_ERRNO	src/lzfP.h	100;"	d
AVX512F_AVAILABLE	deps/pmdk/src/libpmem/x86_64/memcpy_memset.h	74;"	d
AVX512F_AVAILABLE	deps/pmdk/src/libpmem/x86_64/memcpy_memset.h	76;"	d
AVX_AVAILABLE	deps/pmdk/src/libpmem/x86_64/memcpy_memset.h	81;"	d
AbortBehave	deps/pmdk/src/test/unittest/unittest.h	/^static UINT AbortBehave;$/;"	v
Access	deps/pmdk/src/common/mmap.h	/^	DWORD Access;$/;"	m	struct:map_tracker
Access	deps/pmdk/src/windows/include/win_mmap.h	/^	DWORD Access;$/;"	m	struct:FILE_MAPPING_TRACKER
AccumulativeReorderEngine	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^class AccumulativeReorderEngine:$/;"	c
AccumulativeReverseReorderEngine	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^class AccumulativeReverseReorderEngine:$/;"	c
Addr	deps/pmdk/src/test/pmem_is_pmem/pmem_is_pmem.c	/^static void *Addr;$/;"	v	file:
Addr	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^static void *Addr;$/;"	v	file:
Align	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	/^static size_t Align;$/;"	v	file:
Any	deps/pmdk/src/test/unittest/basetest.py	/^class Any:$/;"	c
Arith	deps/lua/src/lvm.c	/^static void Arith (lua_State *L, StkId ra, const TValue *rb,$/;"	f	file:
B	deps/pmdk/src/test/pmreorder_flushes/pmreorder_flushes.c	/^	char B[STORE_SIZE];$/;"	m	struct:stores_fields	file:
B2SEC	deps/pmdk/src/common/os_badblock.h	47;"	d
B2SEC	deps/pmdk/src/test/tools/extents/extents.c	44;"	d	file:
BACKSPACE	deps/linenoise/linenoise.c	/^	BACKSPACE =  127    \/* Backspace *\/$/;"	e	enum:KEY_ACTION	file:
BAD_MSG_CREATE_COUNT	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_create.c	43;"	d	file:
BAD_MSG_HDR_COUNT	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_msg_hdr.c	43;"	d	file:
BAD_MSG_OPEN_COUNT	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_open.c	43;"	d	file:
BAD_SAR	deps/lua/src/lua_bit.c	161;"	d	file:
BAR_VALUE	deps/pmdk/src/test/obj_recovery/obj_recovery.c	61;"	d	file:
BASE	deps/pmdk/src/test/obj_defrag/TESTS.py	/^class BASE(t.BaseTest):$/;"	c
BASE	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^class BASE(t.BaseTest):$/;"	c
BASE	deps/pmdk/src/test/obj_ulog_size/TESTS.py	/^class BASE(t.BaseTest):$/;"	c
BASE_TYPE	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^	BASE_TYPE,$/;"	e	enum:types	file:
BASH_COMP_FILES	deps/pmdk/src/tools/pmempool/Makefile	/^BASH_COMP_FILES = bash_completion\/pmempool$/;"	m
BASIC	deps/pmdk/src/test/obj_basic_integration/TESTS.py	/^class BASIC(t.BaseTest):$/;"	c
BASIC_CI_SIZE	deps/lua/src/lstate.h	32;"	d
BASIC_STACK_SIZE	deps/lua/src/lstate.h	34;"	d
BB_DATA_STR	deps/pmdk/src/libpmempool/sync.c	57;"	d	file:
BB_NOT_SUPP	deps/pmdk/src/common/os_badblock.h	52;"	d
BEGIN_TX	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	46;"	d	file:
BEGIN_TX_OLD	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	51;"	d	file:
BENCHMARK	deps/pmdk/src/benchmarks/Makefile	/^BENCHMARK = pmembench$/;"	m
BENCH_MODE_MAX	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	BENCH_MODE_MAX$/;"	e	enum:benchmark_mode	file:
BENCH_MODE_MUTEX	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	BENCH_MODE_MUTEX,	  \/* PMEMmutex vs. os_mutex_t *\/$/;"	e	enum:benchmark_mode	file:
BENCH_MODE_RWLOCK	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	BENCH_MODE_RWLOCK,	 \/* PMEMrwlock vs. os_rwlock_t *\/$/;"	e	enum:benchmark_mode	file:
BENCH_MODE_VOLATILE_MUTEX	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	BENCH_MODE_VOLATILE_MUTEX, \/* PMEMmutex with os_thread mutex in RAM *\/$/;"	e	enum:benchmark_mode	file:
BENCH_RPMEM_FLUSH_NAME	deps/pmdk/src/benchmarks/rpmem.cpp	60;"	d	file:
BENCH_RPMEM_MIXED_NAME	deps/pmdk/src/benchmarks/rpmem.cpp	62;"	d	file:
BENCH_RPMEM_PERSIST_NAME	deps/pmdk/src/benchmarks/rpmem.cpp	61;"	d	file:
BFOVERFLOW_FAIL	src/bitops.c	279;"	d	file:
BFOVERFLOW_SAT	src/bitops.c	278;"	d	file:
BFOVERFLOW_WRAP	src/bitops.c	277;"	d	file:
BIG	deps/lua/src/lua_struct.c	76;"	d	file:
BIG_ENDIAN	src/config.h	142;"	d
BIG_ENDIAN	src/config.h	176;"	d
BIG_ENDIAN64	deps/jemalloc/test/src/SFMT.c	53;"	d	file:
BIG_ENDIAN64	deps/jemalloc/test/src/SFMT.c	56;"	d	file:
BIG_ENDIAN64	deps/jemalloc/test/src/SFMT.c	59;"	d	file:
BILLION	deps/jemalloc/src/nstime.c	3;"	d	file:
BILLION	deps/jemalloc/test/unit/nstime.c	3;"	d	file:
BIN	deps/lua/etc/Makefile	/^BIN= $(TOP)\/src$/;"	m
BINCOLOR	deps/Makefile	/^BINCOLOR="\\033[37;1m"$/;"	m
BINCOLOR	src/Makefile	/^BINCOLOR="\\033[37;1m"$/;"	m
BINDIR	deps/jemalloc/Makefile	/^BINDIR := $(DESTDIR)\/usr\/local\/bin$/;"	m
BININD_INVALID	deps/jemalloc/include/jemalloc/internal/arena.h	137;"	d
BINS	deps/jemalloc/Makefile	/^BINS := $(objroot)bin\/jemalloc-config $(objroot)bin\/jemalloc.sh $(objroot)bin\/jeprof$/;"	m
BIN_INFO_INIT_bin_no	deps/jemalloc/src/arena.c	3749;"	d	file:
BIN_INFO_INIT_bin_no	deps/jemalloc/src/arena.c	3754;"	d	file:
BIN_INFO_INIT_bin_yes	deps/jemalloc/src/arena.c	3744;"	d	file:
BIN_INFO_INIT_bin_yes	deps/jemalloc/src/arena.c	3753;"	d	file:
BIO_AOF_FSYNC	src/bio.h	40;"	d
BIO_CLOSE_FILE	src/bio.h	39;"	d
BIO_NUM_OPS	src/bio.h	41;"	d
BITFIELDOP_GET	src/bitops.c	393;"	d	file:
BITFIELDOP_INCRBY	src/bitops.c	395;"	d	file:
BITFIELDOP_SET	src/bitops.c	394;"	d	file:
BITMAP_BITS2GROUPS	deps/jemalloc/include/jemalloc/internal/bitmap.h	28;"	d
BITMAP_BUFF_SIZE	deps/pmdk/src/tools/pmempool/info_obj.c	53;"	d	file:
BITMAP_GROUPS_1_LEVEL	deps/jemalloc/include/jemalloc/internal/bitmap.h	48;"	d
BITMAP_GROUPS_2_LEVEL	deps/jemalloc/include/jemalloc/internal/bitmap.h	50;"	d
BITMAP_GROUPS_3_LEVEL	deps/jemalloc/include/jemalloc/internal/bitmap.h	52;"	d
BITMAP_GROUPS_4_LEVEL	deps/jemalloc/include/jemalloc/internal/bitmap.h	54;"	d
BITMAP_GROUPS_L0	deps/jemalloc/include/jemalloc/internal/bitmap.h	34;"	d
BITMAP_GROUPS_L1	deps/jemalloc/include/jemalloc/internal/bitmap.h	36;"	d
BITMAP_GROUPS_L2	deps/jemalloc/include/jemalloc/internal/bitmap.h	38;"	d
BITMAP_GROUPS_L3	deps/jemalloc/include/jemalloc/internal/bitmap.h	40;"	d
BITMAP_GROUPS_MAX	deps/jemalloc/include/jemalloc/internal/bitmap.h	63;"	d
BITMAP_GROUPS_MAX	deps/jemalloc/include/jemalloc/internal/bitmap.h	65;"	d
BITMAP_GROUPS_MAX	deps/jemalloc/include/jemalloc/internal/bitmap.h	67;"	d
BITMAP_GROUPS_MAX	deps/jemalloc/include/jemalloc/internal/bitmap.h	69;"	d
BITMAP_GROUPS_MAX	deps/jemalloc/include/jemalloc/internal/bitmap.h	81;"	d
BITMAP_GROUP_NBITS	deps/jemalloc/include/jemalloc/internal/bitmap.h	15;"	d
BITMAP_GROUP_NBITS_MASK	deps/jemalloc/include/jemalloc/internal/bitmap.h	16;"	d
BITMAP_MAXBITS	deps/jemalloc/include/jemalloc/internal/bitmap.h	6;"	d
BITMAP_MAX_LEVELS	deps/jemalloc/include/jemalloc/internal/bitmap.h	75;"	d
BITOP_AND	src/bitops.c	388;"	d	file:
BITOP_NOT	src/bitops.c	391;"	d	file:
BITOP_OR	src/bitops.c	389;"	d	file:
BITOP_XOR	src/bitops.c	390;"	d	file:
BITRK	deps/lua/src/lopcodes.h	119;"	d
BITS_32	deps/lua/src/lua_cmsgpack.c	29;"	d	file:
BITS_32	deps/lua/src/lua_cmsgpack.c	31;"	d	file:
BIT_IS_CLR	deps/pmdk/src/libpmemobj/heap.h	57;"	d
BIT_IS_SET	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	44;"	d	file:
BIT_OP	deps/lua/src/lua_bit.c	99;"	d	file:
BIT_SH	deps/lua/src/lua_bit.c	111;"	d	file:
BIULD_STATIC_DEBUG	deps/pmdk/src/test/rpmemd_obc/Makefile	/^BIULD_STATIC_DEBUG=n$/;"	m
BLACKBIT	deps/lua/src/lgc.h	56;"	d
BLACKLIST_TESTS	deps/pmdk/src/test/Makefile	/^	BLACKLIST_TESTS := $(shell cat $(BLACKLIST_FILE))$/;"	m
BLK	deps/pmdk/src/test/set_funcs/set_funcs.c	45;"	d	file:
BLKGETSIZE64	deps/pmdk/src/libpmempool/pool.c	48;"	d	file:
BLK_CONFIG_ENV_VARIABLE	deps/pmdk/src/libpmemblk/libpmemblk.c	50;"	d	file:
BLK_CONFIG_FILE_ENV_VARIABLE	deps/pmdk/src/libpmemblk/libpmemblk.c	55;"	d	file:
BLK_FORMAT_DATA_ALIGN	deps/pmdk/src/libpmemblk/blk.h	103;"	d
BLK_FORMAT_FEAT_CHECK	deps/pmdk/src/libpmemblk/blk.h	65;"	d
BLK_FORMAT_FEAT_DEFAULT	deps/pmdk/src/libpmemblk/blk.h	62;"	d
BLK_FORMAT_MAJOR	deps/pmdk/src/libpmemblk/blk.h	60;"	d
BLK_H	deps/pmdk/src/libpmemblk/blk.h	38;"	d
BLK_HDR_SIG	deps/pmdk/src/libpmemblk/blk.h	59;"	d
BLK_STR	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	43;"	d	file:
BLK_TESTS	deps/pmdk/src/test/Makefile	/^BLK_TESTS = \\$/;"	m
BLOCKED_LIST	src/server.h	318;"	d
BLOCKED_NONE	src/server.h	317;"	d
BLOCKED_WAIT	src/server.h	319;"	d
BLOCK_SIZE	deps/jemalloc/test/unit/SFMT.c	38;"	d	file:
BLOCK_SIZE64	deps/jemalloc/test/unit/SFMT.c	39;"	d	file:
BPB	deps/pmdk/src/windows/include/sys/param.h	43;"	d
BRET	deps/lua/src/lua_bit.c	94;"	d	file:
BROKEN_LOCAL	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	72;"	d	file:
BROKEN_REMOTE	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	73;"	d	file:
BSIZE	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	46;"	d	file:
BSIZE_MAX	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	65;"	d	file:
BTREE_MAP_H	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.h	38;"	d
BTREE_MAP_TYPE_OFFSET	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.h	43;"	d
BTREE_MIN	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	45;"	d	file:
BTREE_ORDER	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	44;"	d	file:
BTTINFO_FLAG_ERROR	deps/pmdk/src/libpmemblk/btt_layout.h	86;"	d
BTTINFO_FLAG_ERROR_MASK	deps/pmdk/src/libpmemblk/btt_layout.h	87;"	d
BTTINFO_MAJOR_VERSION	deps/pmdk/src/libpmemblk/btt_layout.h	92;"	d
BTTINFO_MINOR_VERSION	deps/pmdk/src/libpmemblk/btt_layout.h	93;"	d
BTTINFO_SIG	deps/pmdk/src/libpmemblk/btt_layout.h	52;"	d
BTTINFO_SIG_LEN	deps/pmdk/src/libpmemblk/btt_layout.h	49;"	d
BTTINFO_UNUSED_LEN	deps/pmdk/src/libpmemblk/btt_layout.h	51;"	d
BTTINFO_UUID_LEN	deps/pmdk/src/libpmemblk/btt_layout.h	50;"	d
BTT_ALIGNMENT	deps/pmdk/src/libpmemblk/btt_layout.h	48;"	d
BTT_CREATE_DEF_BLK_SIZE	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	57;"	d	file:
BTT_CREATE_DEF_OFFSET_SIZE	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	58;"	d	file:
BTT_CREATE_DEF_SIZE	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	56;"	d	file:
BTT_DEFAULT_NFREE	deps/pmdk/src/libpmemblk/btt_layout.h	130;"	d
BTT_FLOG_PAIR_ALIGN	deps/pmdk/src/libpmemblk/btt_layout.h	104;"	d
BTT_H	deps/pmdk/src/libpmemblk/btt.h	38;"	d
BTT_INTERNAL_LBA_ALIGNMENT	deps/pmdk/src/libpmemblk/btt_layout.h	129;"	d
BTT_LAYOUT_H	deps/pmdk/src/libpmemblk/btt_layout.h	42;"	d
BTT_MAP_ENTRY_ERROR	deps/pmdk/src/libpmemblk/btt_layout.h	117;"	d
BTT_MAP_ENTRY_LBA_MASK	deps/pmdk/src/libpmemblk/btt_layout.h	120;"	d
BTT_MAP_ENTRY_NORMAL	deps/pmdk/src/libpmemblk/btt_layout.h	119;"	d
BTT_MAP_ENTRY_SIZE	deps/pmdk/src/libpmemblk/btt_layout.h	116;"	d
BTT_MAP_ENTRY_ZERO	deps/pmdk/src/libpmemblk/btt_layout.h	118;"	d
BTT_MAP_LOCK_ALIGN	deps/pmdk/src/libpmemblk/btt_layout.h	121;"	d
BTT_MAX_ARENA	deps/pmdk/src/libpmemblk/btt_layout.h	127;"	d
BTT_MIN_LBA_SIZE	deps/pmdk/src/libpmemblk/btt_layout.h	128;"	d
BTT_MIN_SIZE	deps/pmdk/src/libpmemblk/btt_layout.h	126;"	d
BT_COUNT_CHECK_INTERVAL	deps/jemalloc/test/unit/prof_accum.c	6;"	d	file:
BT_FRAME	deps/jemalloc/src/prof.c	367;"	d	file:
BT_FRAME	deps/jemalloc/src/prof.c	522;"	d	file:
BUFERROR_BUF	deps/jemalloc/include/jemalloc/internal/util.h	35;"	d
BUFFER_SIZE	deps/pmdk/src/test/obj_ctl_debug/obj_ctl_debug.c	41;"	d	file:
BUFF_LENGTH	deps/pmdk/src/common/os_dimm_ndctl.c	97;"	d	file:
BUFF_SIZE	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	55;"	d
BUFF_SIZE	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	80;"	d
BUFF_SIZE	deps/pmdk/src/test/tools/ctrld/ctrld.c	65;"	d	file:
BUFLEN	deps/jemalloc/test/unit/util.c	163;"	d	file:
BUFLEN	deps/jemalloc/test/unit/util.c	189;"	d	file:
BUFLEN	deps/jemalloc/test/unit/util.c	196;"	d	file:
BUFLEN	deps/jemalloc/test/unit/util.c	303;"	d	file:
BUFSIZE	src/sha1.c	201;"	d	file:
BUF_LEN	deps/pmdk/src/examples/libpmem/full_copy.c	56;"	d	file:
BUF_LEN	deps/pmdk/src/examples/libpmem/simple_copy.c	56;"	d	file:
BUF_VALUE	deps/pmdk/src/test/obj_reorder_basic/obj_reorder_basic.c	48;"	d	file:
BUILD_PACKAGE_CHECK	deps/pmdk/Makefile	/^BUILD_PACKAGE_CHECK ?= y$/;"	m
BUILD_RPMEM	deps/pmdk/Makefile	/^BUILD_RPMEM ?= y$/;"	m
BUILD_STATIC_DEBUG	deps/pmdk/src/test/obj_list/Makefile	/^BUILD_STATIC_DEBUG=n$/;"	m
BUILD_STATIC_DEBUG	deps/pmdk/src/test/obj_persist_count/Makefile	/^BUILD_STATIC_DEBUG=n$/;"	m
BUILD_STATIC_DEBUG	deps/pmdk/src/test/out_err/Makefile	/^BUILD_STATIC_DEBUG=n$/;"	m
BUILD_STATIC_DEBUG	deps/pmdk/src/test/rpmem_fip/Makefile	/^BUILD_STATIC_DEBUG=n$/;"	m
BUILD_STATIC_DEBUG	deps/pmdk/src/test/rpmem_obc/Makefile	/^BUILD_STATIC_DEBUG=n$/;"	m
BUILD_STATIC_DEBUG	deps/pmdk/src/test/rpmem_obc_int/Makefile	/^BUILD_STATIC_DEBUG=n$/;"	m
BUILD_STATIC_DEBUG	deps/pmdk/src/test/rpmem_proto/Makefile	/^BUILD_STATIC_DEBUG=n$/;"	m
BUILD_STATIC_DEBUG	deps/pmdk/src/test/rpmemd_config/Makefile	/^BUILD_STATIC_DEBUG=n$/;"	m
BUILD_STATIC_DEBUG	deps/pmdk/src/test/rpmemd_dbg/Makefile	/^BUILD_STATIC_DEBUG=n$/;"	m
BUILD_STATIC_DEBUG	deps/pmdk/src/test/rpmemd_log/Makefile	/^BUILD_STATIC_DEBUG=n$/;"	m
BUILD_STATIC_DEBUG	deps/pmdk/src/test/traces/Makefile	/^BUILD_STATIC_DEBUG=n$/;"	m
BUILD_STATIC_DEBUG	deps/pmdk/src/test/traces_custom_function/Makefile	/^BUILD_STATIC_DEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/obj_debug/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/obj_list/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/obj_persist_count/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/out_err/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/rpmem_fip/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/rpmem_obc/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/rpmem_obc_int/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/rpmem_proto/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/rpmemd_config/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/rpmemd_dbg/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/rpmemd_log/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/rpmemd_obc/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/traces/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUILD_STATIC_NONDEBUG	deps/pmdk/src/test/traces_custom_function/Makefile	/^BUILD_STATIC_NONDEBUG=n$/;"	m
BUS_DEVICE_PATH	deps/pmdk/src/common/os_auto_flush_linux.c	49;"	d	file:
BUS_DEVICE_PATH	deps/pmdk/src/test/pmem_has_auto_flush/mocks_posix.c	40;"	d	file:
BYTE_ORDER	src/config.h	149;"	d
BYTE_ORDER	src/config.h	159;"	d
BYTE_ORDER	src/config.h	179;"	d
BYTE_ORDER	src/config.h	181;"	d
BaseAddress	deps/pmdk/src/windows/include/win_mmap.h	/^	void *BaseAddress;$/;"	m	struct:FILE_MAPPING_TRACKER
BaseOperation	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class BaseOperation:$/;"	c
BaseTest	deps/pmdk/src/test/unittest/basetest.py	/^class BaseTest(metaclass=_TestCase):$/;"	c
BinOpr	deps/lua/src/lcode.h	/^typedef enum BinOpr {$/;"	g
BinOpr	deps/lua/src/lcode.h	/^} BinOpr;$/;"	t	typeref:enum:BinOpr
BinaryFile	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^class BinaryFile(utils.Rangeable):$/;"	c
BinaryOutputHandler	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^class BinaryOutputHandler:$/;"	c
BitNum	deps/lua/src/lua_bit.c	/^} BitNum;$/;"	t	typeref:union:__anon40	file:
Blk_create_attr	deps/pmdk/src/libpmemblk/blk.c	/^static const struct pool_attr Blk_create_attr = {$/;"	v	typeref:struct:pool_attr	file:
Blk_open_attr	deps/pmdk/src/libpmemblk/blk.c	/^static const struct pool_attr Blk_open_attr = {$/;"	v	typeref:struct:pool_attr	file:
BlockCnt	deps/lua/src/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	deps/lua/src/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
Bsize	deps/pmdk/src/test/blk_non_zero/blk_non_zero.c	/^static size_t Bsize;$/;"	v	file:
Bsize	deps/pmdk/src/test/blk_recovery/blk_recovery.c	/^static size_t Bsize;$/;"	v	file:
Bsize	deps/pmdk/src/test/blk_rw/blk_rw.c	/^static size_t Bsize;$/;"	v	file:
Bsize	deps/pmdk/src/test/blk_rw_mt/blk_rw_mt.c	/^static size_t Bsize;$/;"	v	file:
Buf	deps/pmdk/src/test/util_cpuid/util_cpuid.c	/^static char Buf[32];$/;"	v	file:
Buff_err	deps/pmdk/src/test/unittest/ut.c	/^static char Buff_err[MAXPRINT];$/;"	v	file:
Buff_out	deps/pmdk/src/test/unittest/ut.c	/^static char Buff_out[MAXPRINT];$/;"	v	file:
Buff_stdout	deps/pmdk/src/test/unittest/ut.c	/^static char Buff_stdout[MAXPRINT];$/;"	v	file:
Buff_trace	deps/pmdk/src/test/unittest/ut.c	/^static char Buff_trace[MAXPRINT];$/;"	v	file:
C	deps/pmdk/src/test/pmreorder_flushes/pmreorder_flushes.c	/^	char C[STORE_SIZE];$/;"	m	struct:stores_fields	file:
C	src/rand.c	60;"	d	file:
CACHELINE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	316;"	d
CACHELINE	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	51;"	d	file:
CACHELINE_ALIGN	deps/pmdk/src/libpmemobj/ulog.c	59;"	d	file:
CACHELINE_CEILING	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	320;"	d
CACHELINE_MASK	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	317;"	d
CACHELINE_SIZE	deps/pmdk/src/common/util.h	61;"	d
CACHELINE_SIZE	deps/pmdk/src/common/util.h	63;"	d
CALC_SIZE_IDX	deps/pmdk/src/libpmemobj/bucket.h	51;"	d
CALLOC	deps/pmdk/src/test/unittest/unittest.h	341;"	d
CALL_FIRST	deps/pmdk/src/tools/pmempool/info_obj.c	930;"	d	file:
CALL_FN_W_10W	deps/pmdk/src/common/valgrind/valgrind.h	1448;"	d
CALL_FN_W_10W	deps/pmdk/src/common/valgrind/valgrind.h	1997;"	d
CALL_FN_W_10W	deps/pmdk/src/common/valgrind/valgrind.h	2476;"	d
CALL_FN_W_10W	deps/pmdk/src/common/valgrind/valgrind.h	3015;"	d
CALL_FN_W_10W	deps/pmdk/src/common/valgrind/valgrind.h	3571;"	d
CALL_FN_W_10W	deps/pmdk/src/common/valgrind/valgrind.h	4066;"	d
CALL_FN_W_10W	deps/pmdk/src/common/valgrind/valgrind.h	4513;"	d
CALL_FN_W_10W	deps/pmdk/src/common/valgrind/valgrind.h	5007;"	d
CALL_FN_W_10W	deps/pmdk/src/common/valgrind/valgrind.h	5512;"	d
CALL_FN_W_10W	deps/pmdk/src/common/valgrind/valgrind.h	5962;"	d
CALL_FN_W_11W	deps/pmdk/src/common/valgrind/valgrind.h	1488;"	d
CALL_FN_W_11W	deps/pmdk/src/common/valgrind/valgrind.h	2039;"	d
CALL_FN_W_11W	deps/pmdk/src/common/valgrind/valgrind.h	2523;"	d
CALL_FN_W_11W	deps/pmdk/src/common/valgrind/valgrind.h	3068;"	d
CALL_FN_W_11W	deps/pmdk/src/common/valgrind/valgrind.h	3624;"	d
CALL_FN_W_11W	deps/pmdk/src/common/valgrind/valgrind.h	4108;"	d
CALL_FN_W_11W	deps/pmdk/src/common/valgrind/valgrind.h	4556;"	d
CALL_FN_W_11W	deps/pmdk/src/common/valgrind/valgrind.h	5049;"	d
CALL_FN_W_11W	deps/pmdk/src/common/valgrind/valgrind.h	5564;"	d
CALL_FN_W_11W	deps/pmdk/src/common/valgrind/valgrind.h	6004;"	d
CALL_FN_W_12W	deps/pmdk/src/common/valgrind/valgrind.h	1531;"	d
CALL_FN_W_12W	deps/pmdk/src/common/valgrind/valgrind.h	2083;"	d
CALL_FN_W_12W	deps/pmdk/src/common/valgrind/valgrind.h	2574;"	d
CALL_FN_W_12W	deps/pmdk/src/common/valgrind/valgrind.h	3125;"	d
CALL_FN_W_12W	deps/pmdk/src/common/valgrind/valgrind.h	3681;"	d
CALL_FN_W_12W	deps/pmdk/src/common/valgrind/valgrind.h	4154;"	d
CALL_FN_W_12W	deps/pmdk/src/common/valgrind/valgrind.h	4602;"	d
CALL_FN_W_12W	deps/pmdk/src/common/valgrind/valgrind.h	5093;"	d
CALL_FN_W_12W	deps/pmdk/src/common/valgrind/valgrind.h	5620;"	d
CALL_FN_W_12W	deps/pmdk/src/common/valgrind/valgrind.h	6050;"	d
CALL_FN_W_5W	deps/pmdk/src/common/valgrind/valgrind.h	1281;"	d
CALL_FN_W_5W	deps/pmdk/src/common/valgrind/valgrind.h	1819;"	d
CALL_FN_W_5W	deps/pmdk/src/common/valgrind/valgrind.h	2299;"	d
CALL_FN_W_5W	deps/pmdk/src/common/valgrind/valgrind.h	2808;"	d
CALL_FN_W_5W	deps/pmdk/src/common/valgrind/valgrind.h	3364;"	d
CALL_FN_W_5W	deps/pmdk/src/common/valgrind/valgrind.h	3890;"	d
CALL_FN_W_5W	deps/pmdk/src/common/valgrind/valgrind.h	4343;"	d
CALL_FN_W_5W	deps/pmdk/src/common/valgrind/valgrind.h	4828;"	d
CALL_FN_W_5W	deps/pmdk/src/common/valgrind/valgrind.h	5299;"	d
CALL_FN_W_5W	deps/pmdk/src/common/valgrind/valgrind.h	5801;"	d
CALL_FN_W_6W	deps/pmdk/src/common/valgrind/valgrind.h	1310;"	d
CALL_FN_W_6W	deps/pmdk/src/common/valgrind/valgrind.h	1850;"	d
CALL_FN_W_6W	deps/pmdk/src/common/valgrind/valgrind.h	2329;"	d
CALL_FN_W_6W	deps/pmdk/src/common/valgrind/valgrind.h	2844;"	d
CALL_FN_W_6W	deps/pmdk/src/common/valgrind/valgrind.h	3400;"	d
CALL_FN_W_6W	deps/pmdk/src/common/valgrind/valgrind.h	3921;"	d
CALL_FN_W_6W	deps/pmdk/src/common/valgrind/valgrind.h	4372;"	d
CALL_FN_W_6W	deps/pmdk/src/common/valgrind/valgrind.h	4859;"	d
CALL_FN_W_6W	deps/pmdk/src/common/valgrind/valgrind.h	5334;"	d
CALL_FN_W_6W	deps/pmdk/src/common/valgrind/valgrind.h	5828;"	d
CALL_FN_W_7W	deps/pmdk/src/common/valgrind/valgrind.h	1341;"	d
CALL_FN_W_7W	deps/pmdk/src/common/valgrind/valgrind.h	1883;"	d
CALL_FN_W_7W	deps/pmdk/src/common/valgrind/valgrind.h	2361;"	d
CALL_FN_W_7W	deps/pmdk/src/common/valgrind/valgrind.h	2882;"	d
CALL_FN_W_7W	deps/pmdk/src/common/valgrind/valgrind.h	3438;"	d
CALL_FN_W_7W	deps/pmdk/src/common/valgrind/valgrind.h	3953;"	d
CALL_FN_W_7W	deps/pmdk/src/common/valgrind/valgrind.h	4403;"	d
CALL_FN_W_7W	deps/pmdk/src/common/valgrind/valgrind.h	4893;"	d
CALL_FN_W_7W	deps/pmdk/src/common/valgrind/valgrind.h	5374;"	d
CALL_FN_W_7W	deps/pmdk/src/common/valgrind/valgrind.h	5857;"	d
CALL_FN_W_8W	deps/pmdk/src/common/valgrind/valgrind.h	1375;"	d
CALL_FN_W_8W	deps/pmdk/src/common/valgrind/valgrind.h	1919;"	d
CALL_FN_W_8W	deps/pmdk/src/common/valgrind/valgrind.h	2396;"	d
CALL_FN_W_8W	deps/pmdk/src/common/valgrind/valgrind.h	2923;"	d
CALL_FN_W_8W	deps/pmdk/src/common/valgrind/valgrind.h	3479;"	d
CALL_FN_W_8W	deps/pmdk/src/common/valgrind/valgrind.h	3989;"	d
CALL_FN_W_8W	deps/pmdk/src/common/valgrind/valgrind.h	4437;"	d
CALL_FN_W_8W	deps/pmdk/src/common/valgrind/valgrind.h	4929;"	d
CALL_FN_W_8W	deps/pmdk/src/common/valgrind/valgrind.h	5417;"	d
CALL_FN_W_8W	deps/pmdk/src/common/valgrind/valgrind.h	5889;"	d
CALL_FN_W_9W	deps/pmdk/src/common/valgrind/valgrind.h	1410;"	d
CALL_FN_W_9W	deps/pmdk/src/common/valgrind/valgrind.h	1957;"	d
CALL_FN_W_9W	deps/pmdk/src/common/valgrind/valgrind.h	2433;"	d
CALL_FN_W_9W	deps/pmdk/src/common/valgrind/valgrind.h	2966;"	d
CALL_FN_W_9W	deps/pmdk/src/common/valgrind/valgrind.h	3522;"	d
CALL_FN_W_9W	deps/pmdk/src/common/valgrind/valgrind.h	4026;"	d
CALL_FN_W_9W	deps/pmdk/src/common/valgrind/valgrind.h	4473;"	d
CALL_FN_W_9W	deps/pmdk/src/common/valgrind/valgrind.h	4967;"	d
CALL_FN_W_9W	deps/pmdk/src/common/valgrind/valgrind.h	5463;"	d
CALL_FN_W_9W	deps/pmdk/src/common/valgrind/valgrind.h	5923;"	d
CALL_FN_W_W	deps/pmdk/src/common/valgrind/valgrind.h	1186;"	d
CALL_FN_W_W	deps/pmdk/src/common/valgrind/valgrind.h	1715;"	d
CALL_FN_W_W	deps/pmdk/src/common/valgrind/valgrind.h	2199;"	d
CALL_FN_W_W	deps/pmdk/src/common/valgrind/valgrind.h	2684;"	d
CALL_FN_W_W	deps/pmdk/src/common/valgrind/valgrind.h	3240;"	d
CALL_FN_W_W	deps/pmdk/src/common/valgrind/valgrind.h	3794;"	d
CALL_FN_W_W	deps/pmdk/src/common/valgrind/valgrind.h	4247;"	d
CALL_FN_W_W	deps/pmdk/src/common/valgrind/valgrind.h	4724;"	d
CALL_FN_W_W	deps/pmdk/src/common/valgrind/valgrind.h	5179;"	d
CALL_FN_W_W	deps/pmdk/src/common/valgrind/valgrind.h	5712;"	d
CALL_FN_W_WW	deps/pmdk/src/common/valgrind/valgrind.h	1207;"	d
CALL_FN_W_WW	deps/pmdk/src/common/valgrind/valgrind.h	1738;"	d
CALL_FN_W_WW	deps/pmdk/src/common/valgrind/valgrind.h	2221;"	d
CALL_FN_W_WW	deps/pmdk/src/common/valgrind/valgrind.h	2712;"	d
CALL_FN_W_WW	deps/pmdk/src/common/valgrind/valgrind.h	3268;"	d
CALL_FN_W_WW	deps/pmdk/src/common/valgrind/valgrind.h	3815;"	d
CALL_FN_W_WW	deps/pmdk/src/common/valgrind/valgrind.h	4268;"	d
CALL_FN_W_WW	deps/pmdk/src/common/valgrind/valgrind.h	4747;"	d
CALL_FN_W_WW	deps/pmdk/src/common/valgrind/valgrind.h	5206;"	d
CALL_FN_W_WW	deps/pmdk/src/common/valgrind/valgrind.h	5731;"	d
CALL_FN_W_WWW	deps/pmdk/src/common/valgrind/valgrind.h	1230;"	d
CALL_FN_W_WWW	deps/pmdk/src/common/valgrind/valgrind.h	1763;"	d
CALL_FN_W_WWW	deps/pmdk/src/common/valgrind/valgrind.h	2245;"	d
CALL_FN_W_WWW	deps/pmdk/src/common/valgrind/valgrind.h	2742;"	d
CALL_FN_W_WWW	deps/pmdk/src/common/valgrind/valgrind.h	3298;"	d
CALL_FN_W_WWW	deps/pmdk/src/common/valgrind/valgrind.h	3838;"	d
CALL_FN_W_WWW	deps/pmdk/src/common/valgrind/valgrind.h	4291;"	d
CALL_FN_W_WWW	deps/pmdk/src/common/valgrind/valgrind.h	4772;"	d
CALL_FN_W_WWW	deps/pmdk/src/common/valgrind/valgrind.h	5235;"	d
CALL_FN_W_WWW	deps/pmdk/src/common/valgrind/valgrind.h	5753;"	d
CALL_FN_W_WWWW	deps/pmdk/src/common/valgrind/valgrind.h	1255;"	d
CALL_FN_W_WWWW	deps/pmdk/src/common/valgrind/valgrind.h	1790;"	d
CALL_FN_W_WWWW	deps/pmdk/src/common/valgrind/valgrind.h	2271;"	d
CALL_FN_W_WWWW	deps/pmdk/src/common/valgrind/valgrind.h	2774;"	d
CALL_FN_W_WWWW	deps/pmdk/src/common/valgrind/valgrind.h	3330;"	d
CALL_FN_W_WWWW	deps/pmdk/src/common/valgrind/valgrind.h	3863;"	d
CALL_FN_W_WWWW	deps/pmdk/src/common/valgrind/valgrind.h	4316;"	d
CALL_FN_W_WWWW	deps/pmdk/src/common/valgrind/valgrind.h	4799;"	d
CALL_FN_W_WWWW	deps/pmdk/src/common/valgrind/valgrind.h	5266;"	d
CALL_FN_W_WWWW	deps/pmdk/src/common/valgrind/valgrind.h	5776;"	d
CALL_FN_W_v	deps/pmdk/src/common/valgrind/valgrind.h	1168;"	d
CALL_FN_W_v	deps/pmdk/src/common/valgrind/valgrind.h	1694;"	d
CALL_FN_W_v	deps/pmdk/src/common/valgrind/valgrind.h	2179;"	d
CALL_FN_W_v	deps/pmdk/src/common/valgrind/valgrind.h	2658;"	d
CALL_FN_W_v	deps/pmdk/src/common/valgrind/valgrind.h	3214;"	d
CALL_FN_W_v	deps/pmdk/src/common/valgrind/valgrind.h	3775;"	d
CALL_FN_W_v	deps/pmdk/src/common/valgrind/valgrind.h	4228;"	d
CALL_FN_W_v	deps/pmdk/src/common/valgrind/valgrind.h	4702;"	d
CALL_FN_W_v	deps/pmdk/src/common/valgrind/valgrind.h	5154;"	d
CALL_FN_W_v	deps/pmdk/src/common/valgrind/valgrind.h	5695;"	d
CALL_FN_v_5W	deps/pmdk/src/common/valgrind/valgrind.h	1133;"	d
CALL_FN_v_6W	deps/pmdk/src/common/valgrind/valgrind.h	1137;"	d
CALL_FN_v_7W	deps/pmdk/src/common/valgrind/valgrind.h	1141;"	d
CALL_FN_v_W	deps/pmdk/src/common/valgrind/valgrind.h	1117;"	d
CALL_FN_v_WW	deps/pmdk/src/common/valgrind/valgrind.h	1121;"	d
CALL_FN_v_WWW	deps/pmdk/src/common/valgrind/valgrind.h	1125;"	d
CALL_FN_v_WWWW	deps/pmdk/src/common/valgrind/valgrind.h	1129;"	d
CALL_FN_v_v	deps/pmdk/src/common/valgrind/valgrind.h	1113;"	d
CAP_POSITION	deps/lua/src/lstrlib.c	168;"	d	file:
CAP_UNFINISHED	deps/lua/src/lstrlib.c	167;"	d	file:
CARRY	src/rand.c	52;"	d	file:
CC	deps/hiredis/Makefile	/^CC:=$(shell sh -c 'type $(CC) >\/dev\/null 2>\/dev\/null && echo $(CC) || echo gcc')$/;"	m
CC	deps/jemalloc/Makefile	/^CC := gcc$/;"	m
CC	deps/lua/etc/Makefile	/^CC= gcc$/;"	m
CC	deps/lua/src/Makefile	/^CC?= gcc$/;"	m
CC	deps/pmdk/user.mk	/^CC=clang$/;"	m
CCCOLOR	deps/Makefile	/^CCCOLOR="\\033[34m"$/;"	m
CCCOLOR	src/Makefile	/^CCCOLOR="\\033[34m"$/;"	m
CC_MM	deps/jemalloc/Makefile	/^CC_MM = 1$/;"	m
CCallS	deps/lua/src/lapi.c	/^struct CCallS {  \/* data to `f_Ccall' *\/$/;"	s	file:
CClosure	deps/lua/src/lobject.h	/^typedef struct CClosure {$/;"	s
CClosure	deps/lua/src/lobject.h	/^} CClosure;$/;"	t	typeref:struct:CClosure
CELLS	deps/lua/test/life.lua	/^function CELLS(w,h)$/;"	f
CFLAGS	deps/jemalloc/Makefile	/^CFLAGS := -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops  -fvisibility=hidden $(EXTRA_CFLAGS)$/;"	m
CFLAGS	deps/lua/etc/Makefile	/^CFLAGS= -O2 -Wall -I$(INC) $(MYCFLAGS)$/;"	m
CFLAGS	deps/lua/src/Makefile	/^CFLAGS= -O2 -Wall $(MYCFLAGS)$/;"	m
CFLAGS	deps/pmdk/src/test/unittest/Makefile	/^CFLAGS = -I$(TOP)\/src\/include$/;"	m
CHECK_ANSWER_NO	deps/pmdk/src/libpmempool/check_util.c	56;"	d	file:
CHECK_ANSWER_YES	deps/pmdk/src/libpmempool/check_util.c	55;"	d	file:
CHECK_ASK	deps/pmdk/src/libpmempool/check_util.h	188;"	d
CHECK_BIT	deps/pmdk/src/common/os_auto_flush_windows.h	50;"	d
CHECK_BYTES	deps/pmdk/src/test/pmem_map_file/pmem_map_file.c	43;"	d	file:
CHECK_BYTES	deps/pmdk/src/test/pmem_map_file_win/pmem_map_file_win.c	43;"	d	file:
CHECK_END	deps/pmdk/src/libpmempool/check_util.c	46;"	d	file:
CHECK_ERR	deps/pmdk/src/libpmempool/check_util.h	184;"	d
CHECK_FLAG	deps/pmdk/src/libpmempool/rm.c	58;"	d	file:
CHECK_FLAGS	deps/pmdk/src/examples/libpmempool/manpage.c	44;"	d	file:
CHECK_FUNC_COMPATIBLE	deps/pmdk/src/common/util.h	513;"	d
CHECK_FUNC_COMPATIBLE	deps/pmdk/src/common/util.h	517;"	d
CHECK_H	deps/pmdk/src/libpmempool/check.h	38;"	d
CHECK_INCOMPAT_MAPPING	deps/pmdk/src/libpmempool/feature.c	709;"	d	file:
CHECK_INCOMPAT_MAPPING	deps/pmdk/src/libpmempool/feature.c	717;"	d	file:
CHECK_INFO	deps/pmdk/src/libpmempool/check_util.h	175;"	d
CHECK_INFO_ERRNO	deps/pmdk/src/libpmempool/check_util.h	179;"	d
CHECK_INPUT	src/lzfP.h	121;"	d
CHECK_INVALID_QUESTION	deps/pmdk/src/libpmempool/check_util.h	48;"	d
CHECK_IS	deps/pmdk/src/libpmempool/check_util.h	212;"	d
CHECK_IS_NOT	deps/pmdk/src/libpmempool/check_util.h	215;"	d
CHECK_NOT_COMPLETE	deps/pmdk/src/libpmempool/check_util.h	192;"	d
CHECK_PRIV	deps/pmdk/src/test/mmap/mmap.c	63;"	d	file:
CHECK_RESULT_ASK_QUESTIONS	deps/pmdk/src/libpmempool/pmempool.h	/^	CHECK_RESULT_ASK_QUESTIONS,$/;"	e	enum:check_result
CHECK_RESULT_CANNOT_REPAIR	deps/pmdk/src/libpmempool/pmempool.h	/^	CHECK_RESULT_CANNOT_REPAIR,$/;"	e	enum:check_result
CHECK_RESULT_CANNOT_REPAIR	deps/pmdk/src/tools/pmempool/check.c	/^	CHECK_RESULT_CANNOT_REPAIR,$/;"	e	enum:__anon112	file:
CHECK_RESULT_CONSISTENT	deps/pmdk/src/libpmempool/pmempool.h	/^	CHECK_RESULT_CONSISTENT,$/;"	e	enum:check_result
CHECK_RESULT_CONSISTENT	deps/pmdk/src/tools/pmempool/check.c	/^	CHECK_RESULT_CONSISTENT,$/;"	e	enum:__anon112	file:
CHECK_RESULT_ERROR	deps/pmdk/src/libpmempool/pmempool.h	/^	CHECK_RESULT_ERROR,$/;"	e	enum:check_result
CHECK_RESULT_ERROR	deps/pmdk/src/tools/pmempool/check.c	/^	CHECK_RESULT_ERROR$/;"	e	enum:__anon112	file:
CHECK_RESULT_INTERNAL_ERROR	deps/pmdk/src/libpmempool/pmempool.h	/^	CHECK_RESULT_INTERNAL_ERROR$/;"	e	enum:check_result
CHECK_RESULT_IS_STOP	deps/pmdk/src/libpmempool/check.c	46;"	d	file:
CHECK_RESULT_NOT_CONSISTENT	deps/pmdk/src/libpmempool/pmempool.h	/^	CHECK_RESULT_NOT_CONSISTENT,$/;"	e	enum:check_result
CHECK_RESULT_NOT_CONSISTENT	deps/pmdk/src/tools/pmempool/check.c	/^	CHECK_RESULT_NOT_CONSISTENT,$/;"	e	enum:__anon112	file:
CHECK_RESULT_PROCESS_ANSWERS	deps/pmdk/src/libpmempool/pmempool.h	/^	CHECK_RESULT_PROCESS_ANSWERS,$/;"	e	enum:check_result
CHECK_RESULT_REPAIRED	deps/pmdk/src/libpmempool/pmempool.h	/^	CHECK_RESULT_REPAIRED,$/;"	e	enum:check_result
CHECK_RESULT_REPAIRED	deps/pmdk/src/tools/pmempool/check.c	/^	CHECK_RESULT_REPAIRED,$/;"	e	enum:__anon112	file:
CHECK_RESULT_SYNC_REQ	deps/pmdk/src/tools/pmempool/check.c	/^	CHECK_RESULT_SYNC_REQ,$/;"	e	enum:__anon112	file:
CHECK_RO	deps/pmdk/src/test/mmap/mmap.c	62;"	d	file:
CHECK_STEP_COMPLETE	deps/pmdk/src/libpmempool/check_util.h	47;"	d
CHECK_UTIL_H	deps/pmdk/src/libpmempool/check_util.h	37;"	d
CHECK_WITHOUT_FIXING	deps/pmdk/src/libpmempool/check_util.h	218;"	d
CHILD	deps/jemalloc/src/ctl.c	217;"	d	file:
CHILD	deps/jemalloc/src/ctl.c	511;"	d	file:
CHUNK	deps/jemalloc/test/integration/aligned_alloc.c	3;"	d	file:
CHUNK	deps/jemalloc/test/integration/posix_memalign.c	3;"	d	file:
CHUNKSIZE	deps/pmdk/src/libpmemobj/heap_layout.h	52;"	d
CHUNKSIZE	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	59;"	d	file:
CHUNKSIZE	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	50;"	d	file:
CHUNKS_PER_THREAD	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	51;"	d	file:
CHUNK_ADDR2BASE	deps/jemalloc/include/jemalloc/internal/chunk.h	11;"	d
CHUNK_ADDR2OFFSET	deps/jemalloc/include/jemalloc/internal/chunk.h	15;"	d
CHUNK_ALIGN_UP	deps/pmdk/src/libpmemobj/heap_layout.h	93;"	d
CHUNK_BASE_ALIGNMENT	deps/pmdk/src/libpmemobj/heap_layout.h	51;"	d
CHUNK_CEILING	deps/jemalloc/include/jemalloc/internal/chunk.h	19;"	d
CHUNK_FLAGS_ALL_VALID	deps/pmdk/src/libpmemobj/heap_layout.h	102;"	d
CHUNK_FLAG_ALIGNED	deps/pmdk/src/libpmemobj/heap_layout.h	/^	CHUNK_FLAG_ALIGNED		=	0x0004,$/;"	e	enum:chunk_flags
CHUNK_FLAG_COMPACT_HEADER	deps/pmdk/src/libpmemobj/heap_layout.h	/^	CHUNK_FLAG_COMPACT_HEADER	=	0x0001,$/;"	e	enum:chunk_flags
CHUNK_FLAG_FLEX_BITMAP	deps/pmdk/src/libpmemobj/heap_layout.h	/^	CHUNK_FLAG_FLEX_BITMAP		=	0x0008,$/;"	e	enum:chunk_flags
CHUNK_FLAG_HEADER_NONE	deps/pmdk/src/libpmemobj/heap_layout.h	/^	CHUNK_FLAG_HEADER_NONE		=	0x0002,$/;"	e	enum:chunk_flags
CHUNK_HOOKS_INITIALIZER	deps/jemalloc/include/jemalloc/internal/chunk.h	22;"	d
CHUNK_MAP_ALLOCATED	deps/jemalloc/include/jemalloc/internal/arena.h	127;"	d
CHUNK_MAP_BININD_INVALID	deps/jemalloc/include/jemalloc/internal/arena.h	139;"	d
CHUNK_MAP_BININD_MASK	deps/jemalloc/include/jemalloc/internal/arena.h	138;"	d
CHUNK_MAP_BININD_SHIFT	deps/jemalloc/include/jemalloc/internal/arena.h	136;"	d
CHUNK_MAP_DECOMMITTED	deps/jemalloc/include/jemalloc/internal/arena.h	131;"	d
CHUNK_MAP_DIRTY	deps/jemalloc/include/jemalloc/internal/arena.h	133;"	d
CHUNK_MAP_FLAGS_MASK	deps/jemalloc/include/jemalloc/internal/arena.h	134;"	d
CHUNK_MAP_LARGE	deps/jemalloc/include/jemalloc/internal/arena.h	128;"	d
CHUNK_MAP_RUNIND_SHIFT	deps/jemalloc/include/jemalloc/internal/arena.h	141;"	d
CHUNK_MAP_SIZE_MASK	deps/jemalloc/include/jemalloc/internal/arena.h	143;"	d
CHUNK_MAP_SIZE_SHIFT	deps/jemalloc/include/jemalloc/internal/arena.h	142;"	d
CHUNK_MAP_STATE_MASK	deps/jemalloc/include/jemalloc/internal/arena.h	129;"	d
CHUNK_MAP_UNZEROED	deps/jemalloc/include/jemalloc/internal/arena.h	132;"	d
CHUNK_MASK	deps/pmdk/src/libpmemobj/heap_layout.h	92;"	d
CHUNK_TYPE_FOOTER	deps/pmdk/src/libpmemobj/heap_layout.h	/^	CHUNK_TYPE_FOOTER, \/* not actual chunk type *\/$/;"	e	enum:chunk_type
CHUNK_TYPE_FREE	deps/pmdk/src/libpmemobj/heap_layout.h	/^	CHUNK_TYPE_FREE,$/;"	e	enum:chunk_type
CHUNK_TYPE_RUN	deps/pmdk/src/libpmemobj/heap_layout.h	/^	CHUNK_TYPE_RUN,$/;"	e	enum:chunk_type
CHUNK_TYPE_RUN_DATA	deps/pmdk/src/libpmemobj/heap_layout.h	/^	CHUNK_TYPE_RUN_DATA,$/;"	e	enum:chunk_type
CHUNK_TYPE_UNKNOWN	deps/pmdk/src/libpmemobj/heap_layout.h	/^	CHUNK_TYPE_UNKNOWN,$/;"	e	enum:chunk_type
CHUNK_TYPE_USED	deps/pmdk/src/libpmemobj/heap_layout.h	/^	CHUNK_TYPE_USED,$/;"	e	enum:chunk_type
CI	tests/cluster/cluster.tcl	/^proc CI {n field} {$/;"	p
CJSON_MODNAME	deps/lua/src/lua_cjson.c	52;"	d	file:
CJSON_VERSION	deps/lua/src/lua_cjson.c	56;"	d	file:
CLASS_HUGE	deps/pmdk/src/libpmemobj/alloc_class.h	/^	CLASS_HUGE,$/;"	e	enum:alloc_class_type
CLASS_ID_FROM_FLAG	deps/pmdk/src/libpmemobj/obj.h	234;"	d
CLASS_RUN	deps/pmdk/src/libpmemobj/alloc_class.h	/^	CLASS_RUN,$/;"	e	enum:alloc_class_type
CLASS_UNKNOWN	deps/pmdk/src/libpmemobj/alloc_class.h	/^	CLASS_UNKNOWN,$/;"	e	enum:alloc_class_type
CLEAN_TARGETS	deps/pmdk/src/Makefile	/^CLEAN_TARGETS = $(POSSIBLE_TARGETS)$/;"	m
CLIENTS_CRON_MIN_ITERATIONS	src/server.c	1029;"	d	file:
CLIENT_ASKING	src/server.h	294;"	d
CLIENT_BLOCKED	src/server.h	288;"	d
CLIENT_CLOSE_AFTER_REPLY	src/server.h	290;"	d
CLIENT_CLOSE_ASAP	src/server.h	295;"	d
CLIENT_DIRTY_CAS	src/server.h	289;"	d
CLIENT_DIRTY_EXEC	src/server.h	297;"	d
CLIENT_FORCE_AOF	src/server.h	299;"	d
CLIENT_FORCE_REPL	src/server.h	300;"	d
CLIENT_LUA	src/server.h	293;"	d
CLIENT_LUA_DEBUG	src/server.h	312;"	d
CLIENT_LUA_DEBUG_SYNC	src/server.h	313;"	d
CLIENT_MASTER	src/server.h	285;"	d
CLIENT_MASTER_FORCE_REPLY	src/server.h	298;"	d
CLIENT_MONITOR	src/server.h	286;"	d
CLIENT_MULTI	src/server.h	287;"	d
CLIENT_PENDING_WRITE	src/server.h	307;"	d
CLIENT_PREVENT_AOF_PROP	src/server.h	304;"	d
CLIENT_PREVENT_PROP	src/server.h	306;"	d
CLIENT_PREVENT_REPL_PROP	src/server.h	305;"	d
CLIENT_PRE_PSYNC	src/server.h	301;"	d
CLIENT_PUBSUB	src/server.h	303;"	d
CLIENT_READONLY	src/server.h	302;"	d
CLIENT_REPLY_OFF	src/server.h	309;"	d
CLIENT_REPLY_SKIP	src/server.h	311;"	d
CLIENT_REPLY_SKIP_NEXT	src/server.h	310;"	d
CLIENT_SLAVE	src/server.h	284;"	d
CLIENT_TYPE_MASTER	src/server.h	330;"	d
CLIENT_TYPE_NORMAL	src/server.h	327;"	d
CLIENT_TYPE_OBUF_COUNT	src/server.h	331;"	d
CLIENT_TYPE_PUBSUB	src/server.h	329;"	d
CLIENT_TYPE_SLAVE	src/server.h	328;"	d
CLIENT_UNBLOCKED	src/server.h	291;"	d
CLIENT_UNIX_SOCKET	src/server.h	296;"	d
CLI_HELP_COMMAND	src/redis-cli.c	205;"	d	file:
CLI_HELP_GROUP	src/redis-cli.c	206;"	d	file:
CLOBBER_TARGETS	deps/pmdk/src/Makefile	/^CLOBBER_TARGETS = $(POSSIBLE_TARGETS)$/;"	m
CLOCK_MONOTONIC	deps/pmdk/src/windows/include/platform.h	131;"	d
CLOCK_REALTIME	deps/pmdk/src/windows/include/platform.h	132;"	d
CLOSE	deps/pmdk/src/test/unittest/unittest.h	458;"	d
CLOSE_EPROTO_COUNT	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_close.c	104;"	d	file:
CLOSE_MSG	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^static const struct rpmem_msg_close CLOSE_MSG = {$/;"	v	typeref:struct:rpmem_msg_close
CLOSE_RESP	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_close.c	/^static const struct rpmem_msg_close_resp CLOSE_RESP = {$/;"	v	typeref:struct:rpmem_msg_close_resp	file:
CLOSE_RESP	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_misc.c	/^static const struct rpmem_msg_close_resp CLOSE_RESP = {$/;"	v	typeref:struct:rpmem_msg_close_resp	file:
CLO_INT_BASE_DEC	deps/pmdk/src/benchmarks/benchmark.hpp	170;"	d
CLO_INT_BASE_HEX	deps/pmdk/src/benchmarks/benchmark.hpp	171;"	d
CLO_INT_BASE_NONE	deps/pmdk/src/benchmarks/benchmark.hpp	169;"	d
CLO_INT_BASE_OCT	deps/pmdk/src/benchmarks/benchmark.hpp	172;"	d
CLO_TYPE_FLAG	deps/pmdk/src/benchmarks/benchmark.hpp	/^	CLO_TYPE_FLAG,$/;"	e	enum:clo_type
CLO_TYPE_INT	deps/pmdk/src/benchmarks/benchmark.hpp	/^	CLO_TYPE_INT,$/;"	e	enum:clo_type
CLO_TYPE_MAX	deps/pmdk/src/benchmarks/benchmark.hpp	/^	CLO_TYPE_MAX,$/;"	e	enum:clo_type
CLO_TYPE_STR	deps/pmdk/src/benchmarks/benchmark.hpp	/^	CLO_TYPE_STR,$/;"	e	enum:clo_type
CLO_TYPE_UINT	deps/pmdk/src/benchmarks/benchmark.hpp	/^	CLO_TYPE_UINT,$/;"	e	enum:clo_type
CLUSTERMSG_FLAG0_FORCEACK	src/cluster.h	253;"	d
CLUSTERMSG_FLAG0_PAUSED	src/cluster.h	252;"	d
CLUSTERMSG_MIN_LEN	src/cluster.h	248;"	d
CLUSTERMSG_TYPE_FAIL	src/cluster.h	159;"	d
CLUSTERMSG_TYPE_FAILOVER_AUTH_ACK	src/cluster.h	162;"	d
CLUSTERMSG_TYPE_FAILOVER_AUTH_REQUEST	src/cluster.h	161;"	d
CLUSTERMSG_TYPE_MEET	src/cluster.h	158;"	d
CLUSTERMSG_TYPE_MFSTART	src/cluster.h	164;"	d
CLUSTERMSG_TYPE_PING	src/cluster.h	156;"	d
CLUSTERMSG_TYPE_PONG	src/cluster.h	157;"	d
CLUSTERMSG_TYPE_PUBLISH	src/cluster.h	160;"	d
CLUSTERMSG_TYPE_UPDATE	src/cluster.h	163;"	d
CLUSTER_BLACKLIST_TTL	src/cluster.c	1074;"	d	file:
CLUSTER_BROADCAST_ALL	src/cluster.c	2307;"	d	file:
CLUSTER_BROADCAST_LOCAL_SLAVES	src/cluster.c	2308;"	d	file:
CLUSTER_CANT_FAILOVER_DATA_AGE	src/cluster.h	70;"	d
CLUSTER_CANT_FAILOVER_EXPIRED	src/cluster.h	72;"	d
CLUSTER_CANT_FAILOVER_NONE	src/cluster.h	69;"	d
CLUSTER_CANT_FAILOVER_RELOG_PERIOD	src/cluster.h	74;"	d
CLUSTER_CANT_FAILOVER_WAITING_DELAY	src/cluster.h	71;"	d
CLUSTER_CANT_FAILOVER_WAITING_VOTES	src/cluster.h	73;"	d
CLUSTER_DEFAULT_MIGRATION_BARRIER	src/cluster.h	23;"	d
CLUSTER_DEFAULT_NODE_TIMEOUT	src/cluster.h	16;"	d
CLUSTER_DEFAULT_REQUIRE_FULL_COVERAGE	src/cluster.h	18;"	d
CLUSTER_DEFAULT_SLAVE_VALIDITY	src/cluster.h	17;"	d
CLUSTER_FAIL	src/cluster.h	10;"	d
CLUSTER_FAILOVER_DELAY	src/cluster.h	22;"	d
CLUSTER_FAIL_REPORT_VALIDITY_MULT	src/cluster.h	19;"	d
CLUSTER_FAIL_UNDO_TIME_ADD	src/cluster.h	21;"	d
CLUSTER_FAIL_UNDO_TIME_MULT	src/cluster.h	20;"	d
CLUSTER_MAX_REJOIN_DELAY	src/cluster.c	3466;"	d	file:
CLUSTER_MF_PAUSE_MULT	src/cluster.h	25;"	d
CLUSTER_MF_TIMEOUT	src/cluster.h	24;"	d
CLUSTER_MIN_REJOIN_DELAY	src/cluster.c	3467;"	d	file:
CLUSTER_NAMELEN	src/cluster.h	11;"	d
CLUSTER_NODE_FAIL	src/cluster.h	52;"	d
CLUSTER_NODE_HANDSHAKE	src/cluster.h	54;"	d
CLUSTER_NODE_MASTER	src/cluster.h	49;"	d
CLUSTER_NODE_MEET	src/cluster.h	56;"	d
CLUSTER_NODE_MIGRATE_TO	src/cluster.h	57;"	d
CLUSTER_NODE_MYSELF	src/cluster.h	53;"	d
CLUSTER_NODE_NOADDR	src/cluster.h	55;"	d
CLUSTER_NODE_NULL_NAME	src/cluster.h	58;"	d
CLUSTER_NODE_PFAIL	src/cluster.h	51;"	d
CLUSTER_NODE_SLAVE	src/cluster.h	50;"	d
CLUSTER_OK	src/cluster.h	9;"	d
CLUSTER_PORT_INCR	src/cluster.h	12;"	d
CLUSTER_PROTO_VER	src/cluster.h	222;"	d
CLUSTER_REDIR_ASK	src/cluster.h	32;"	d
CLUSTER_REDIR_CROSS_SLOT	src/cluster.h	30;"	d
CLUSTER_REDIR_DOWN_STATE	src/cluster.h	34;"	d
CLUSTER_REDIR_DOWN_UNBOUND	src/cluster.h	35;"	d
CLUSTER_REDIR_MOVED	src/cluster.h	33;"	d
CLUSTER_REDIR_NONE	src/cluster.h	29;"	d
CLUSTER_REDIR_UNSTABLE	src/cluster.h	31;"	d
CLUSTER_SLAVE_MIGRATION_DELAY	src/cluster.h	26;"	d
CLUSTER_SLOTS	src/cluster.h	8;"	d
CLUSTER_TODO_FSYNC_CONFIG	src/cluster.h	148;"	d
CLUSTER_TODO_HANDLE_FAILOVER	src/cluster.h	145;"	d
CLUSTER_TODO_SAVE_CONFIG	src/cluster.h	147;"	d
CLUSTER_TODO_UPDATE_STATE	src/cluster.h	146;"	d
CLUSTER_WRITABLE_DELAY	src/cluster.c	3468;"	d	file:
CL_ALIGNMENT	deps/pmdk/src/benchmarks/rpmem.cpp	55;"	d	file:
CMD_ADMIN	src/server.h	219;"	d
CMD_ASKING	src/server.h	227;"	d
CMD_BUFF_SIZE	deps/pmdk/src/test/rpmem_fip/rpmem_fip_oob.c	50;"	d	file:
CMD_BUFF_SIZE	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.c	43;"	d	file:
CMD_BUFF_SIZE	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	44;"	d	file:
CMD_CALL_FULL	src/server.h	453;"	d
CMD_CALL_NONE	src/server.h	447;"	d
CMD_CALL_PROPAGATE	src/server.h	452;"	d
CMD_CALL_PROPAGATE_AOF	src/server.h	450;"	d
CMD_CALL_PROPAGATE_REPL	src/server.h	451;"	d
CMD_CALL_SLOWLOG	src/server.h	448;"	d
CMD_CALL_STATS	src/server.h	449;"	d
CMD_DENYOOM	src/server.h	217;"	d
CMD_FAST	src/server.h	228;"	d
CMD_LOADING	src/server.h	224;"	d
CMD_NOSCRIPT	src/server.h	221;"	d
CMD_NOT_USED_1	src/server.h	218;"	d
CMD_PUBSUB	src/server.h	220;"	d
CMD_RANDOM	src/server.h	222;"	d
CMD_READONLY	src/server.h	216;"	d
CMD_SKIP_MONITOR	src/server.h	226;"	d
CMD_SORT_FOR_SCRIPT	src/server.h	223;"	d
CMD_STALE	src/server.h	225;"	d
CMD_WRITE	src/server.h	215;"	d
CMPMAP_ZERO	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	51;"	d	file:
CMSG_BYE	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^	CMSG_BYE,$/;"	e	enum:kv_cmsg
CMSG_GET	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^	CMSG_GET,$/;"	e	enum:kv_cmsg
CMSG_INSERT	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^	CMSG_INSERT,$/;"	e	enum:kv_cmsg
CMSG_KILL	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^	CMSG_KILL,$/;"	e	enum:kv_cmsg
CMSG_REMOVE	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^	CMSG_REMOVE,$/;"	e	enum:kv_cmsg
CNT	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	321;"	d	file:
CNT	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	336;"	d	file:
COLOR_BLACK	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	COLOR_BLACK,$/;"	e	enum:rb_color	file:
COLOR_RED	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	COLOR_RED,$/;"	e	enum:rb_color	file:
COM	deps/geohash-int/geohash_helper.c	45;"	d	file:
COMMANDS_FOREACH	deps/pmdk/src/test/obj_debug/obj_debug.c	79;"	d	file:
COMMANDS_LISTS	deps/pmdk/src/test/obj_debug/obj_debug.c	115;"	d	file:
COMMANDS_NUMBER	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	192;"	d	file:
COMMANDS_NUMBER	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	136;"	d	file:
COMMANDS_NUMBER	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	118;"	d	file:
COMMANDS_NUMBER	deps/pmdk/src/tools/pmempool/pmempool.c	187;"	d	file:
COMMENT_STR_LEN	deps/pmdk/utils/check_license/check-license.c	64;"	d	file:
COMMON_ALLOC_H	deps/pmdk/src/common/alloc.h	34;"	d
COMMON_FAULT_INJECTION	deps/pmdk/src/common/fault_injection.h	34;"	d
COMPARE_TO_FIRST_PART_ONLY	deps/pmdk/src/libpmempool/check_pool_hdr.c	543;"	d	file:
COMPILE_ERROR_ON	deps/pmdk/src/common/util.h	474;"	d
COMPILE_ERROR_ON	deps/pmdk/src/common/util.h	477;"	d
COMPILE_ERROR_ON	deps/pmdk/src/common/util.h	481;"	d
COMPILE_ERROR_ON	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	59;"	d	file:
COMPLEX_ARG_TEST_A	deps/pmdk/src/test/util_ctl/util_ctl.c	118;"	d	file:
COMPLEX_ARG_TEST_B	deps/pmdk/src/test/util_ctl/util_ctl.c	119;"	d	file:
COMPLEX_ARG_TEST_C	deps/pmdk/src/test/util_ctl/util_ctl.c	120;"	d	file:
COMPLEX_ARG_TEST_D	deps/pmdk/src/test/util_ctl/util_ctl.c	121;"	d	file:
COMPRESS_MAX	src/quicklist.c	106;"	d	file:
CONFIGS	deps/pmdk/src/benchmarks/Makefile	/^CONFIGS=pmembench_log\\$/;"	m
CONFIG_AUTHPASS_MAX_LEN	src/server.h	132;"	d
CONFIG_BGSAVE_RETRY_DELAY	src/server.h	141;"	d
CONFIG_BINDADDR_MAX	src/server.h	173;"	d
CONFIG_DEFAULT_ACTIVE_REHASHING	src/server.h	167;"	d
CONFIG_DEFAULT_AOF_FILENAME	src/server.h	164;"	d
CONFIG_DEFAULT_AOF_FSYNC	src/server.h	403;"	d
CONFIG_DEFAULT_AOF_LOAD_TRUNCATED	src/server.h	166;"	d
CONFIG_DEFAULT_AOF_NO_FSYNC_ON_REWRITE	src/server.h	165;"	d
CONFIG_DEFAULT_AOF_REWRITE_INCREMENTAL_FSYNC	src/server.h	168;"	d
CONFIG_DEFAULT_CLIENT_TIMEOUT	src/server.h	117;"	d
CONFIG_DEFAULT_CLUSTER_CONFIG_FILE	src/server.h	144;"	d
CONFIG_DEFAULT_DAEMONIZE	src/server.h	145;"	d
CONFIG_DEFAULT_DBNUM	src/server.h	118;"	d
CONFIG_DEFAULT_HLL_SPARSE_MAX_BYTES	src/server.h	417;"	d
CONFIG_DEFAULT_HZ	src/server.h	112;"	d
CONFIG_DEFAULT_LATENCY_MONITOR_THRESHOLD	src/server.h	175;"	d
CONFIG_DEFAULT_LOGFILE	src/server.h	149;"	d
CONFIG_DEFAULT_MAXMEMORY	src/server.h	162;"	d
CONFIG_DEFAULT_MAXMEMORY_POLICY	src/server.h	431;"	d
CONFIG_DEFAULT_MAXMEMORY_SAMPLES	src/server.h	163;"	d
CONFIG_DEFAULT_MAX_CLIENTS	src/server.h	131;"	d
CONFIG_DEFAULT_MIN_SLAVES_MAX_LAG	src/server.h	170;"	d
CONFIG_DEFAULT_MIN_SLAVES_TO_WRITE	src/server.h	169;"	d
CONFIG_DEFAULT_PID_FILE	src/server.h	142;"	d
CONFIG_DEFAULT_PM_FILE_SIZE	src/server.h	179;"	d
CONFIG_DEFAULT_PROTECTED_MODE	src/server.h	148;"	d
CONFIG_DEFAULT_RDB_CHECKSUM	src/server.h	153;"	d
CONFIG_DEFAULT_RDB_COMPRESSION	src/server.h	152;"	d
CONFIG_DEFAULT_RDB_FILENAME	src/server.h	154;"	d
CONFIG_DEFAULT_REPL_BACKLOG_SIZE	src/server.h	138;"	d
CONFIG_DEFAULT_REPL_BACKLOG_TIME_LIMIT	src/server.h	139;"	d
CONFIG_DEFAULT_REPL_DISABLE_TCP_NODELAY	src/server.h	161;"	d
CONFIG_DEFAULT_REPL_DISKLESS_SYNC	src/server.h	155;"	d
CONFIG_DEFAULT_REPL_DISKLESS_SYNC_DELAY	src/server.h	156;"	d
CONFIG_DEFAULT_REPL_PING_SLAVE_PERIOD	src/server.h	135;"	d
CONFIG_DEFAULT_REPL_TIMEOUT	src/server.h	134;"	d
CONFIG_DEFAULT_SERVER_PORT	src/server.h	115;"	d
CONFIG_DEFAULT_SLAVE_ANNOUNCE_IP	src/server.h	159;"	d
CONFIG_DEFAULT_SLAVE_ANNOUNCE_PORT	src/server.h	160;"	d
CONFIG_DEFAULT_SLAVE_PRIORITY	src/server.h	133;"	d
CONFIG_DEFAULT_SLAVE_READ_ONLY	src/server.h	158;"	d
CONFIG_DEFAULT_SLAVE_SERVE_STALE_DATA	src/server.h	157;"	d
CONFIG_DEFAULT_SLOWLOG_LOG_SLOWER_THAN	src/server.h	129;"	d
CONFIG_DEFAULT_SLOWLOG_MAX_LEN	src/server.h	130;"	d
CONFIG_DEFAULT_STOP_WRITES_ON_BGSAVE_ERROR	src/server.h	151;"	d
CONFIG_DEFAULT_SYSLOG_ENABLED	src/server.h	150;"	d
CONFIG_DEFAULT_SYSLOG_IDENT	src/server.h	143;"	d
CONFIG_DEFAULT_TCP_BACKLOG	src/server.h	116;"	d
CONFIG_DEFAULT_TCP_KEEPALIVE	src/server.h	147;"	d
CONFIG_DEFAULT_UNIX_SOCKET_PERM	src/server.h	146;"	d
CONFIG_DEFAULT_VERBOSITY	src/server.h	385;"	d
CONFIG_FDSET_INCR	src/server.h	208;"	d
CONFIG_LINE_SIZE_INIT	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	55;"	d	file:
CONFIG_MAX_HZ	src/server.h	114;"	d
CONFIG_MAX_LINE	src/server.h	119;"	d
CONFIG_MIN_HZ	src/server.h	113;"	d
CONFIG_MIN_PM_FILE_SIZE	src/server.h	178;"	d
CONFIG_MIN_RESERVED_FDS	src/server.h	174;"	d
CONFIG_REPL_BACKLOG_MIN_SIZE	src/server.h	140;"	d
CONFIG_REPL_SYNCIO_TIMEOUT	src/server.h	370;"	d
CONFIG_RUN_ID_SIZE	src/server.h	136;"	d
CONFIG_WRITE_BOOL_JSON	deps/jemalloc/src/stats.c	582;"	d	file:
CONFIG_WRITE_BOOL_JSON	deps/jemalloc/src/stats.c	633;"	d	file:
CONF_HANDLE_BOOL	deps/jemalloc/src/jemalloc.c	1045;"	d	file:
CONF_HANDLE_BOOL	deps/jemalloc/src/jemalloc.c	1299;"	d	file:
CONF_HANDLE_CHAR_P	deps/jemalloc/src/jemalloc.c	1126;"	d	file:
CONF_HANDLE_CHAR_P	deps/jemalloc/src/jemalloc.c	1308;"	d	file:
CONF_HANDLE_SIZE_T	deps/jemalloc/src/jemalloc.c	1102;"	d	file:
CONF_HANDLE_SIZE_T	deps/jemalloc/src/jemalloc.c	1306;"	d	file:
CONF_HANDLE_SSIZE_T	deps/jemalloc/src/jemalloc.c	1105;"	d	file:
CONF_HANDLE_SSIZE_T	deps/jemalloc/src/jemalloc.c	1307;"	d	file:
CONF_HANDLE_T_U	deps/jemalloc/src/jemalloc.c	1063;"	d	file:
CONF_HANDLE_T_U	deps/jemalloc/src/jemalloc.c	1304;"	d	file:
CONF_HANDLE_UNSIGNED	deps/jemalloc/src/jemalloc.c	1098;"	d	file:
CONF_HANDLE_UNSIGNED	deps/jemalloc/src/jemalloc.c	1305;"	d	file:
CONF_MATCH	deps/jemalloc/src/jemalloc.c	1041;"	d	file:
CONF_MATCH	deps/jemalloc/src/jemalloc.c	1297;"	d	file:
CONF_MATCH_VALUE	deps/jemalloc/src/jemalloc.c	1043;"	d	file:
CONF_MATCH_VALUE	deps/jemalloc/src/jemalloc.c	1298;"	d	file:
CONF_MAX_no	deps/jemalloc/src/jemalloc.c	1061;"	d	file:
CONF_MAX_no	deps/jemalloc/src/jemalloc.c	1302;"	d	file:
CONF_MAX_yes	deps/jemalloc/src/jemalloc.c	1062;"	d	file:
CONF_MAX_yes	deps/jemalloc/src/jemalloc.c	1303;"	d	file:
CONF_MIN_no	deps/jemalloc/src/jemalloc.c	1059;"	d	file:
CONF_MIN_no	deps/jemalloc/src/jemalloc.c	1300;"	d	file:
CONF_MIN_yes	deps/jemalloc/src/jemalloc.c	1060;"	d	file:
CONF_MIN_yes	deps/jemalloc/src/jemalloc.c	1301;"	d	file:
CONN_CLOSE	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^	CONN_CLOSE,$/;"	e	enum:conn_wait_close
CONN_FD	deps/hiredis/test.c	/^    CONN_FD$/;"	e	enum:connection_type	file:
CONN_TCP	deps/hiredis/test.c	/^    CONN_TCP,$/;"	e	enum:connection_type	file:
CONN_UNIX	deps/hiredis/test.c	/^    CONN_UNIX,$/;"	e	enum:connection_type	file:
CONN_WAIT_CLOSE	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^	CONN_WAIT_CLOSE,$/;"	e	enum:conn_wait_close
CONSTRUCTOR	deps/pmdk/src/common/util.h	494;"	d
CONSTRUCTOR	deps/pmdk/src/common/util.h	497;"	d
CONSTRUCTOR	deps/pmdk/src/common/util.h	506;"	d
CONSTRUCTOR	deps/pmdk/src/test/pmem_has_auto_flush_win/mocks_windows.c	/^CONSTRUCTOR(libpmem_init)$/;"	f
CONSTRUCTOR	deps/pmdk/src/test/util_poolset/mocks_windows.c	/^CONSTRUCTOR(libpmem_init)$/;"	f
CONST_B	deps/pmdk/src/benchmarks/pmem_memset.cpp	50;"	d	file:
CONST_B	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	65;"	d	file:
CONVERSION_FLAG_OLD_SET_CACHE	deps/pmdk/src/libpmemobj/obj.h	124;"	d
COPYRIGHT	deps/pmdk/utils/check_license/check-license.c	52;"	d	file:
COPYRIGHT_LEN	deps/pmdk/utils/check_license/check-license.c	53;"	d	file:
COPYRIGHT_SYMBOL	deps/pmdk/utils/check_license/check-license.c	54;"	d	file:
COPYRIGHT_SYMBOL_LEN	deps/pmdk/utils/check_license/check-license.c	55;"	d	file:
COPY_ARGS	deps/pmdk/src/libpmemobj/tx.c	103;"	d	file:
COPY_BLOB	deps/pmdk/src/examples/libpmemobj/libart/art.h	190;"	d
CORE_O	deps/lua/src/Makefile	/^CORE_O=	lapi.o lcode.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o lmem.o \\$/;"	m
COUNT_1	deps/jemalloc/test/unit/SFMT.c	40;"	d	file:
COUNT_2	deps/jemalloc/test/unit/SFMT.c	41;"	d	file:
COUNT_OF	deps/pmdk/src/examples/libpmemobj/array/array.c	46;"	d	file:
COUNT_OF	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	58;"	d	file:
COUNT_OF	deps/pmdk/src/tools/pmempool/common.h	64;"	d
COUNT_PER_LANE	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	58;"	d	file:
COUNT_RPMEMD_CMD	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	950;"	d	file:
COW_at_open	deps/pmdk/src/common/set.c	/^int COW_at_open = 0;$/;"	v
CO_DEAD	deps/lua/src/lbaselib.c	485;"	d	file:
CO_NOR	deps/lua/src/lbaselib.c	484;"	d	file:
CO_RUN	deps/lua/src/lbaselib.c	482;"	d	file:
CO_SUS	deps/lua/src/lbaselib.c	483;"	d	file:
CPPFLAGS	deps/jemalloc/Makefile	/^CPPFLAGS :=  -D_GNU_SOURCE -D_REENTRANT -I$(srcroot)include -I$(objroot)include$/;"	m
CPU_SPINWAIT	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	24;"	d
CRC64_H	src/crc64.h	2;"	d
CREATE	deps/pmdk/src/test/unittest/poolset.py	/^class CREATE(Enum):$/;"	c
CREATE_ABC	deps/lua/src/lopcodes.h	104;"	d
CREATE_ABx	deps/lua/src/lopcodes.h	109;"	d
CREATE_EPROTO_COUNT	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_create.c	99;"	d	file:
CREATE_MODE_RW	deps/pmdk/src/examples/ex_common.h	51;"	d
CREATE_MODE_RW	deps/pmdk/src/examples/ex_common.h	76;"	d
CREATE_MSG	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^static const struct rpmem_msg_create CREATE_MSG = {$/;"	v	typeref:struct:rpmem_msg_create
CREATE_RESP	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_create.c	/^static const struct rpmem_msg_create_resp CREATE_RESP = {$/;"	v	typeref:struct:rpmem_msg_create_resp	file:
CRON_DBS_PER_CALL	src/server.h	120;"	d
CSTYLE_TARGETS	deps/pmdk/src/Makefile	/^CSTYLE_TARGETS = $(POSSIBLE_TARGETS)$/;"	m
CTARGET	deps/jemalloc/Makefile	/^CTARGET = -o $@$/;"	m
CTL	deps/jemalloc/src/ctl.c	221;"	d	file:
CTL	deps/jemalloc/src/ctl.c	512;"	d	file:
CTL_ARG	deps/pmdk/src/common/ctl.h	185;"	d
CTL_ARG_BOOLEAN	deps/pmdk/src/common/ctl.h	138;"	d
CTL_ARG_INT	deps/pmdk/src/common/ctl.h	143;"	d
CTL_ARG_LONG_LONG	deps/pmdk/src/common/ctl.h	147;"	d
CTL_ARG_PARSER	deps/pmdk/src/common/ctl.h	103;"	d
CTL_ARG_PARSER_END	deps/pmdk/src/common/ctl.h	109;"	d
CTL_ARG_PARSER_STRUCT	deps/pmdk/src/common/ctl.h	106;"	d
CTL_ARG_STRING	deps/pmdk/src/common/ctl.h	152;"	d
CTL_CHILD	deps/pmdk/src/common/ctl.h	167;"	d
CTL_GET	deps/jemalloc/src/stats.c	4;"	d	file:
CTL_INDEXED	deps/pmdk/src/common/ctl.h	172;"	d
CTL_LEAF_RO	deps/pmdk/src/common/ctl.h	192;"	d
CTL_LEAF_RUNNABLE	deps/pmdk/src/common/ctl.h	209;"	d
CTL_LEAF_RW	deps/pmdk/src/common/ctl.h	218;"	d
CTL_LEAF_WO	deps/pmdk/src/common/ctl.h	200;"	d
CTL_M2_GET	deps/jemalloc/src/stats.c	9;"	d	file:
CTL_M2_M4_GET	deps/jemalloc/src/stats.c	18;"	d	file:
CTL_MAX_DEPTH	deps/jemalloc/src/ctl.c	214;"	d	file:
CTL_MAX_ENTRIES	deps/pmdk/src/common/ctl.c	41;"	d	file:
CTL_NAME_VALUE_SEPARATOR	deps/pmdk/src/common/ctl.c	46;"	d	file:
CTL_NODE	deps/pmdk/src/common/ctl.h	160;"	d
CTL_NODE_END	deps/pmdk/src/common/ctl.h	158;"	d
CTL_NODE_INDEXED	deps/pmdk/src/common/ctl.h	/^	CTL_NODE_INDEXED,$/;"	e	enum:ctl_node_type
CTL_NODE_LEAF	deps/pmdk/src/common/ctl.h	/^	CTL_NODE_LEAF,$/;"	e	enum:ctl_node_type
CTL_NODE_NAMED	deps/pmdk/src/common/ctl.h	/^	CTL_NODE_NAMED,$/;"	e	enum:ctl_node_type
CTL_NODE_UNKNOWN	deps/pmdk/src/common/ctl.h	/^	CTL_NODE_UNKNOWN,$/;"	e	enum:ctl_node_type
CTL_PROTO	deps/jemalloc/src/ctl.c	44;"	d	file:
CTL_QUERY_CONFIG_INPUT	deps/pmdk/src/common/ctl.h	/^	CTL_QUERY_CONFIG_INPUT,$/;"	e	enum:ctl_query_source
CTL_QUERY_LEN	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	61;"	d	file:
CTL_QUERY_NODE_SEPARATOR	deps/pmdk/src/common/ctl.c	47;"	d	file:
CTL_QUERY_PROGRAMMATIC	deps/pmdk/src/common/ctl.h	/^	CTL_QUERY_PROGRAMMATIC,$/;"	e	enum:ctl_query_source
CTL_QUERY_READ	deps/pmdk/src/common/ctl.h	/^	CTL_QUERY_READ,$/;"	e	enum:ctl_query_type
CTL_QUERY_RUNNABLE	deps/pmdk/src/common/ctl.h	/^	CTL_QUERY_RUNNABLE,$/;"	e	enum:ctl_query_type
CTL_QUERY_WRITE	deps/pmdk/src/common/ctl.h	/^	CTL_QUERY_WRITE,$/;"	e	enum:ctl_query_type
CTL_READ_HANDLER	deps/pmdk/src/common/ctl.h	176;"	d
CTL_READ_HANDLER	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_READ_HANDLER(automatic, narenas)(void *ctx,$/;"	f	file:
CTL_REGISTER_MODULE	deps/pmdk/src/common/ctl.h	223;"	d
CTL_RO_CGEN	deps/jemalloc/src/ctl.c	1119;"	d	file:
CTL_RO_CLGEN	deps/jemalloc/src/ctl.c	1096;"	d	file:
CTL_RO_CONFIG_GEN	deps/jemalloc/src/ctl.c	1218;"	d	file:
CTL_RO_GEN	deps/jemalloc/src/ctl.c	1140;"	d	file:
CTL_RO_NL_CGEN	deps/jemalloc/src/ctl.c	1163;"	d	file:
CTL_RO_NL_GEN	deps/jemalloc/src/ctl.c	1182;"	d	file:
CTL_RUNNABLE_HANDLER	deps/pmdk/src/common/ctl.h	182;"	d
CTL_STR	deps/pmdk/src/common/ctl.h	156;"	d
CTL_STRING_QUERY_SEPARATOR	deps/pmdk/src/common/ctl.c	45;"	d	file:
CTL_TSD_RO_NL_CGEN	deps/jemalloc/src/ctl.c	1199;"	d	file:
CTL_UNKNOWN_QUERY_SOURCE	deps/pmdk/src/common/ctl.h	/^	CTL_UNKNOWN_QUERY_SOURCE,$/;"	e	enum:ctl_query_source
CTL_VALUE_ARG_SEPARATOR	deps/pmdk/src/common/ctl.c	48;"	d	file:
CTL_WRITE_HANDLER	deps/pmdk/src/common/ctl.h	179;"	d
CTREE_MAP_H	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.h	38;"	d
CTREE_MAP_TYPE_OFFSET	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.h	43;"	d
CTRLD_LOG	deps/pmdk/src/test/tools/ctrld/ctrld.c	96;"	d	file:
CTRL_A	deps/linenoise/linenoise.c	/^	CTRL_A = 1,         \/* Ctrl+a *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_B	deps/linenoise/linenoise.c	/^	CTRL_B = 2,         \/* Ctrl-b *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_C	deps/linenoise/linenoise.c	/^	CTRL_C = 3,         \/* Ctrl-c *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_D	deps/linenoise/linenoise.c	/^	CTRL_D = 4,         \/* Ctrl-d *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_E	deps/linenoise/linenoise.c	/^	CTRL_E = 5,         \/* Ctrl-e *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_F	deps/linenoise/linenoise.c	/^	CTRL_F = 6,         \/* Ctrl-f *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_H	deps/linenoise/linenoise.c	/^	CTRL_H = 8,         \/* Ctrl-h *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_K	deps/linenoise/linenoise.c	/^	CTRL_K = 11,        \/* Ctrl+k *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_L	deps/linenoise/linenoise.c	/^	CTRL_L = 12,        \/* Ctrl+l *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_N	deps/linenoise/linenoise.c	/^	CTRL_N = 14,        \/* Ctrl-n *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_P	deps/linenoise/linenoise.c	/^	CTRL_P = 16,        \/* Ctrl-p *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_T	deps/linenoise/linenoise.c	/^	CTRL_T = 20,        \/* Ctrl-t *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_U	deps/linenoise/linenoise.c	/^	CTRL_U = 21,        \/* Ctrl+u *\/$/;"	e	enum:KEY_ACTION	file:
CTRL_W	deps/linenoise/linenoise.c	/^	CTRL_W = 23,        \/* Ctrl+w *\/$/;"	e	enum:KEY_ACTION	file:
CTX_COMPONENTS	deps/pmdk/src/test/unittest/basetest.py	/^CTX_COMPONENTS = ($/;"	v
CUSTOM_GRANULARITY	deps/pmdk/src/test/obj_ctl_heap_size/obj_ctl_heap_size.c	40;"	d	file:
CXX	deps/pmdk/user.mk	/^CXX=clang++$/;"	m
CXXFLAGS	deps/pmdk/src/benchmarks/Makefile	/^CXXFLAGS = -Wall$/;"	m
C_ALIEN	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	C_ALIEN,$/;"	e	enum:colors	file:
C_ALIEN	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	C_ALIEN,$/;"	e	enum:colors	file:
C_BULLET	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	C_BULLET,$/;"	e	enum:colors	file:
C_BULLET	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	C_BULLET,$/;"	e	enum:colors	file:
C_ERR	src/server.h	109;"	d
C_HDRS	deps/jemalloc/Makefile	/^C_HDRS := $(objroot)include\/jemalloc\/jemalloc$(install_suffix).h$/;"	m
C_INTRO	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	C_INTRO$/;"	e	enum:colors	file:
C_JET_OBJS	deps/jemalloc/Makefile	/^C_JET_OBJS := $(C_SRCS:$(srcroot)%.c=$(objroot)%.jet.$(O))$/;"	m
C_OBJS	deps/jemalloc/Makefile	/^C_OBJS := $(C_SRCS:$(srcroot)%.c=$(objroot)%.$(O))$/;"	m
C_OK	src/server.h	108;"	d
C_PIC_OBJS	deps/jemalloc/Makefile	/^C_PIC_OBJS := $(C_SRCS:$(srcroot)%.c=$(objroot)%.pic.$(O))$/;"	m
C_PLAYER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	C_PLAYER,$/;"	e	enum:colors	file:
C_PLAYER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	C_PLAYER,$/;"	e	enum:colors	file:
C_SRCS	deps/jemalloc/Makefile	/^C_SRCS := $(srcroot)src\/jemalloc.c \\$/;"	m
C_STAR	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	C_STAR,$/;"	e	enum:colors	file:
C_TESTLIB_INTEGRATION_OBJS	deps/jemalloc/Makefile	/^C_TESTLIB_INTEGRATION_OBJS := $(C_TESTLIB_SRCS:$(srcroot)%.c=$(objroot)%.integration.$(O))$/;"	m
C_TESTLIB_OBJS	deps/jemalloc/Makefile	/^C_TESTLIB_OBJS := $(C_TESTLIB_UNIT_OBJS) $(C_TESTLIB_INTEGRATION_OBJS) $(C_UTIL_INTEGRATION_OBJS) $(C_TESTLIB_STRESS_OBJS)$/;"	m
C_TESTLIB_SRCS	deps/jemalloc/Makefile	/^C_TESTLIB_SRCS := $(srcroot)test\/src\/btalloc.c $(srcroot)test\/src\/btalloc_0.c \\$/;"	m
C_TESTLIB_STRESS_OBJS	deps/jemalloc/Makefile	/^C_TESTLIB_STRESS_OBJS := $(C_TESTLIB_SRCS:$(srcroot)%.c=$(objroot)%.stress.$(O))$/;"	m
C_TESTLIB_UNIT_OBJS	deps/jemalloc/Makefile	/^C_TESTLIB_UNIT_OBJS := $(C_TESTLIB_SRCS:$(srcroot)%.c=$(objroot)%.unit.$(O))$/;"	m
C_UNKNOWN	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	C_UNKNOWN,$/;"	e	enum:colors	file:
C_UNKNOWN	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	C_UNKNOWN,$/;"	e	enum:colors	file:
C_UTIL_INTEGRATION_OBJS	deps/jemalloc/Makefile	/^C_UTIL_INTEGRATION_OBJS := $(C_UTIL_INTEGRATION_SRCS:$(srcroot)%.c=$(objroot)%.integration.$(O))$/;"	m
C_UTIL_INTEGRATION_SRCS	deps/jemalloc/Makefile	/^C_UTIL_INTEGRATION_SRCS := $(srcroot)src\/nstime.c $(srcroot)src\/util.c$/;"	m
C_UTIL_INTEGRATION_SRCS	deps/jemalloc/Makefile	/^C_UTIL_INTEGRATION_SRCS :=$/;"	m
Cached_pool_key	deps/pmdk/src/libpmemobj/obj.c	/^static os_tls_key_t Cached_pool_key;$/;"	v	file:
Cached_pool_key_once	deps/pmdk/src/libpmemobj/obj.c	/^static os_once_t Cached_pool_key_once = OS_ONCE_INIT;$/;"	v	file:
CallInfo	deps/lua/src/lstate.h	/^typedef struct CallInfo {$/;"	s
CallInfo	deps/lua/src/lstate.h	/^} CallInfo;$/;"	t	typeref:struct:CallInfo
CallS	deps/lua/src/lapi.c	/^struct CallS {  \/* data to `f_call' *\/$/;"	s	file:
Canceled_ptr	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^static struct foo *Canceled_ptr;$/;"	v	typeref:struct:foo	file:
Check	deps/pmdk/src/test/unittest/context.py	/^class Check(_TestType):$/;"	c
Closure	deps/lua/src/lobject.h	/^typedef union Closure {$/;"	u
Closure	deps/lua/src/lobject.h	/^} Closure;$/;"	t	typeref:union:Closure
ClosureHeader	deps/lua/src/lobject.h	/^  ClosureHeader;$/;"	m	struct:CClosure
ClosureHeader	deps/lua/src/lobject.h	/^  ClosureHeader;$/;"	m	struct:LClosure
ClosureHeader	deps/lua/src/lobject.h	291;"	d
ClusterNode	src/redis-trib.rb	/^class ClusterNode$/;"	c
CollectingState	deps/pmdk/src/tools/pmreorder/statemachine.py	/^class CollectingState(State):$/;"	c
Color	deps/pmdk/src/test/unittest/futils.py	/^class Color:$/;"	c
Common	deps/pmdk/src/test/scope/TESTS.py	/^class Common(t.BaseTest):$/;"	c
CommonHeader	deps/lua/src/lobject.h	/^    CommonHeader;$/;"	m	struct:TString::__anon24
CommonHeader	deps/lua/src/lobject.h	/^    CommonHeader;$/;"	m	struct:Udata::__anon25
CommonHeader	deps/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:GCheader
CommonHeader	deps/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Proto
CommonHeader	deps/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Table
CommonHeader	deps/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:UpVal
CommonHeader	deps/lua/src/lobject.h	43;"	d
CommonHeader	deps/lua/src/lstate.h	/^  CommonHeader;$/;"	m	struct:lua_State
Configurator	deps/pmdk/src/test/unittest/configurator.py	/^class Configurator():$/;"	c
ConsControl	deps/lua/src/lparser.c	/^struct ConsControl {$/;"	s	file:
ConsistencyCheckerBase	deps/pmdk/src/tools/pmreorder/consistencycheckwrap.py	/^class ConsistencyCheckerBase:$/;"	c
Context	deps/pmdk/src/test/unittest/context.py	/^class Context(ContextBase):$/;"	c
ContextBase	deps/pmdk/src/test/unittest/context.py	/^class ContextBase:$/;"	c
Create	deps/pmdk/src/test/unittest/poolset.py	/^    def Create(self, create, fsize, mode=None):$/;"	m	class:File
CreatorBackTraceIndex	deps/pmdk/src/test/unittest/ut.c	/^	USHORT CreatorBackTraceIndex;$/;"	m	struct:_SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	file:
Ctx	deps/pmdk/src/tools/daxio/daxio.c	/^static struct daxio_context Ctx = {$/;"	v	typeref:struct:daxio_context	file:
D	deps/pmdk/src/test/pmreorder_flushes/pmreorder_flushes.c	/^	char D[STORE_SIZE];$/;"	m	struct:stores_fields	file:
D	src/debugmacro.h	34;"	d
D	src/quicklist.c	63;"	d	file:
D	src/quicklist.c	65;"	d	file:
D2S_BUFSIZE	deps/jemalloc/src/util.c	37;"	d	file:
DAEMON_NAME	deps/pmdk/src/tools/rpmemd/rpmemd.h	37;"	d
DATADIR	deps/jemalloc/Makefile	/^DATADIR := $(DESTDIR)\/usr\/local\/share$/;"	m
DATA_INIT	deps/jemalloc/test/unit/tsd.c	51;"	d	file:
DATA_OFF	deps/pmdk/src/examples/librpmem/basic.c	46;"	d	file:
DATA_OFF	deps/pmdk/src/examples/librpmem/hello.c	64;"	d	file:
DATA_OFF	deps/pmdk/src/examples/librpmem/manpage.c	48;"	d	file:
DATA_OFF	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	79;"	d	file:
DATA_OFF	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	62;"	d	file:
DATA_SIZE	deps/pmdk/src/examples/librpmem/basic.c	47;"	d	file:
DATA_SIZE	deps/pmdk/src/examples/librpmem/hello.c	66;"	d	file:
DATA_SIZE	deps/pmdk/src/examples/librpmem/manpage.c	49;"	d	file:
DATA_SIZE	deps/pmdk/src/test/obj_sync/obj_sync.c	45;"	d	file:
DATA_SIZE	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	80;"	d	file:
DATA_SIZE	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	63;"	d	file:
DAXIO_TESTS	deps/pmdk/src/test/Makefile	/^DAXIO_TESTS = \\$/;"	m
DAX_REGION_DETECT	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	61;"	d	file:
DAX_REGION_ID_LEN	deps/pmdk/src/common/file_posix.c	55;"	d	file:
DDax	deps/pmdk/src/test/unittest/poolset.py	/^class DDax(_Part):$/;"	c
DEBUG	deps/geohash-int/Makefile	/^DEBUG= -g$/;"	m
DEBUG	deps/hiredis/Makefile	/^DEBUG?= -g -ggdb$/;"	m
DEBUG	deps/linenoise/Makefile	/^DEBUG= -g$/;"	m
DEBUG	deps/pmdk/src/windows/include/platform.h	82;"	d
DEBUG	src/Makefile	/^DEBUG=-g -ggdb$/;"	m
DEBUG_LIBDIR	deps/pmdk/src/test/unittest/futils.py	/^    DEBUG_LIBDIR = abspath(join(ROOTDIR, '..', 'debug'))$/;"	v
DEBUG_LIBDIR	deps/pmdk/src/test/unittest/futils.py	/^    DEBUG_LIBDIR = abspath(join(WIN_DEBUG_BUILDDIR, 'libs'))$/;"	v
DEBUG_RELEASE_TARGETS	deps/pmdk/src/Makefile	/^DEBUG_RELEASE_TARGETS = common libpmem libpmemblk libpmemlog libpmemobj\\$/;"	m
DECAY_NTICKS_PER_UPDATE	deps/jemalloc/include/jemalloc/internal/arena.h	36;"	d
DECAY_TIME_DEFAULT	deps/jemalloc/include/jemalloc/internal/arena.h	34;"	d
DEFAULT_ALLOC_CLASS_ID	deps/pmdk/src/libpmemobj/alloc_class.h	50;"	d
DEFAULT_ARENAS_MAX	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	68;"	d	file:
DEFAULT_CHUNK_TYPES	deps/pmdk/src/tools/pmempool/info.c	60;"	d	file:
DEFAULT_DECODE_INVALID_NUMBERS	deps/lua/src/lua_cjson.c	70;"	d	file:
DEFAULT_DECODE_INVALID_NUMBERS	deps/lua/src/lua_cjson.c	75;"	d	file:
DEFAULT_DECODE_INVALID_NUMBERS	deps/lua/src/lua_cjson.c	76;"	d	file:
DEFAULT_DECODE_MAX_DEPTH	deps/lua/src/lua_cjson.c	68;"	d	file:
DEFAULT_DESC_SIZE	deps/pmdk/src/tools/pmempool/common.h	103;"	d
DEFAULT_ENCODE_INVALID_NUMBERS	deps/lua/src/lua_cjson.c	69;"	d	file:
DEFAULT_ENCODE_KEEP_BUFFER	deps/lua/src/lua_cjson.c	71;"	d	file:
DEFAULT_ENCODE_MAX_DEPTH	deps/lua/src/lua_cjson.c	67;"	d	file:
DEFAULT_ENCODE_NUMBER_PRECISION	deps/lua/src/lua_cjson.c	72;"	d	file:
DEFAULT_FILE_SIZE	deps/pmdk/src/test/obj_fragmentation/obj_fragmentation.c	52;"	d	file:
DEFAULT_FILE_SIZE	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	64;"	d	file:
DEFAULT_HDR_SIZE	deps/pmdk/src/tools/pmempool/common.h	102;"	d
DEFAULT_MODE	deps/pmdk/src/tools/pmempool/create.c	59;"	d	file:
DEFAULT_SPARSE_CONVERT	deps/lua/src/lua_cjson.c	64;"	d	file:
DEFAULT_SPARSE_RATIO	deps/lua/src/lua_cjson.c	65;"	d	file:
DEFAULT_SPARSE_SAFE	deps/lua/src/lua_cjson.c	66;"	d	file:
DEG_TO_RAD	deps/geohash-int/geohash_helper.c	/^const double DEG_TO_RAD = 0.017453292519943295769236907684886;$/;"	v
DELETED_LIFE	deps/pmdk/src/libpmemobj/critnib.c	105;"	d	file:
DELETE_ALL_PARTS	deps/pmdk/src/common/set.h	/^	DELETE_ALL_PARTS	\/* force delete all parts files *\/$/;"	e	enum:del_parts_mode
DELETE_CREATED_PARTS	deps/pmdk/src/common/set.h	/^	DELETE_CREATED_PARTS,	\/* delete only newly created parts files *\/$/;"	e	enum:del_parts_mode
DELTA_WIN2UNIX	deps/pmdk/src/common/os_thread_windows.c	83;"	d	file:
DELTA_WIN2UNIX	deps/pmdk/src/common/os_windows.c	445;"	d	file:
DEPENDENCY_TARGETS	src/Makefile	/^DEPENDENCY_TARGETS=hiredis linenoise lua geohash-int$/;"	m
DESC_MASK	deps/pmdk/src/common/pool_hdr.h	182;"	d
DESTDIR	deps/jemalloc/Makefile	/^DESTDIR =$/;"	m
DEVDAX_ALIGN	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	59;"	d	file:
DEVDAX_DETECT	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	58;"	d	file:
DEVICE_DAX_ZERO_LEN	deps/pmdk/src/common/file.c	58;"	d	file:
DFLAGS	src/Makefile	/^	echo LDFLAGS=$(LDFLAGS) >> .make-settings$/;"	m
DICT_ERR	deps/hiredis/dict.h	40;"	d
DICT_ERR	src/dict.h	42;"	d
DICT_HT_INITIAL_SIZE	deps/hiredis/dict.h	76;"	d
DICT_HT_INITIAL_SIZE	src/dict.h	100;"	d
DICT_NOTUSED	deps/hiredis/dict.h	43;"	d
DICT_NOTUSED	src/dict.h	45;"	d
DICT_OK	deps/hiredis/dict.h	39;"	d
DICT_OK	src/dict.h	41;"	d
DICT_STATS_VECTLEN	src/dict.c	1136;"	d	file:
DIFF_LEN	deps/pmdk/utils/check_license/check-license.c	63;"	d	file:
DIRECT_RO	deps/pmdk/src/include/libpmemobj/types.h	213;"	d
DIRECT_RO	deps/pmdk/src/include/libpmemobj/types.h	222;"	d
DIRECT_RW	deps/pmdk/src/include/libpmemobj/types.h	210;"	d
DIRECT_RW	deps/pmdk/src/include/libpmemobj/types.h	220;"	d
DIRS	deps/pmdk/src/examples/Makefile	/^DIRS = libpmem libpmemblk libpmemlog libpmemobj librpmem libpmempool pmreorder$/;"	m
DIRS	deps/pmdk/src/examples/libpmemblk/Makefile	/^DIRS = assetdb$/;"	m
DIRS	deps/pmdk/src/examples/libpmemlog/Makefile	/^DIRS = logfile$/;"	m
DIRS	deps/pmdk/src/examples/libpmemobj/Makefile	/^DIRS = pminvaders pmemlog pmemblk string_store string_store_tx\\$/;"	m
DIRS	deps/pmdk/src/examples/librpmem/Makefile	/^DIRS = fibonacci$/;"	m
DIRS	deps/pmdk/src/test/tools/Makefile	/^DIRS = \\$/;"	m
DIR_MODE	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	53;"	d	file:
DIR_SYNC	deps/pmdk/src/test/Makefile	/^DIR_SYNC=$(TOP)\/src\/test\/.sync-dir$/;"	m
DIR_SYNC	deps/pmdk/src/test/sync-remotes/Makefile	/^DIR_SYNC=..\/.sync-dir$/;"	m
DISABLE	deps/pmdk/src/test/unittest/valgrind.py	/^DISABLE = -1$/;"	v
DISABLED	deps/pmdk/src/libpmempool/feature.c	/^	DISABLED,$/;"	e	enum:__anon95	file:
DLMSG	deps/lua/src/loadlib.c	236;"	d	file:
DOCS	deps/jemalloc/Makefile	/^DOCS := $(DOCS_HTML) $(DOCS_MAN3)$/;"	m
DOCS_DESTDIR	deps/pmdk/doc/Makefile	/^DOCS_DESTDIR = $(DESTDIR)$(docdir)$/;"	m
DOCS_HTML	deps/jemalloc/Makefile	/^DOCS_HTML := $(DOCS_XML:$(objroot)%.xml=$(objroot)%.html)$/;"	m
DOCS_MAN3	deps/jemalloc/Makefile	/^DOCS_MAN3 := $(DOCS_XML:$(objroot)%.xml=$(objroot)%.3)$/;"	m
DOCS_XML	deps/jemalloc/Makefile	/^DOCS_XML := $(objroot)doc\/jemalloc$(install_suffix).xml$/;"	m
DOMAIN_VALUE_LEN	deps/pmdk/src/common/os_auto_flush_linux.c	51;"	d	file:
DONE	deps/pmdk/src/test/unittest/unittest.h	194;"	d
DONE	deps/pmdk/src/test/unittest/unittest.h	197;"	d
DONEW	deps/pmdk/src/test/unittest/unittest.h	203;"	d
DO_CREQ_W_W	deps/pmdk/src/common/valgrind/helgrind.h	173;"	d
DO_CREQ_W_WWW	deps/pmdk/src/common/valgrind/helgrind.h	212;"	d
DO_CREQ_v_W	deps/pmdk/src/common/valgrind/helgrind.h	163;"	d
DO_CREQ_v_WW	deps/pmdk/src/common/valgrind/helgrind.h	185;"	d
DO_CREQ_v_WWW	deps/pmdk/src/common/valgrind/helgrind.h	197;"	d
DO_LOCK	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	51;"	d	file:
DO_NOT_DELETE_PARTS	deps/pmdk/src/common/set.h	/^	DO_NOT_DELETE_PARTS,	\/* do not delete part files *\/$/;"	e	enum:del_parts_mode
DPKG_BUILDDIR	deps/pmdk/Makefile	/^DPKG_BUILDDIR=dpkgbuild$/;"	m
DRD	deps/pmdk/src/test/unittest/valgrind.py	/^    DRD = 4$/;"	v	class:_Tool
DRD	deps/pmdk/src/test/unittest/valgrind.py	/^DRD = _Tool.DRD$/;"	v
DRD_GET_DRD_THREADID	deps/pmdk/src/common/valgrind/drd.h	73;"	d
DRD_GET_VALGRIND_THREADID	deps/pmdk/src/common/valgrind/drd.h	67;"	d
DRD_IGNORE_VAR	deps/pmdk/src/common/valgrind/drd.h	80;"	d
DRD_STOP_IGNORING_VAR	deps/pmdk/src/common/valgrind/drd.h	83;"	d
DRD_STOP_TRACING_VAR	deps/pmdk/src/common/valgrind/drd.h	98;"	d
DRD_TRACE_VAR	deps/pmdk/src/common/valgrind/drd.h	91;"	d
DSOS	deps/jemalloc/Makefile	/^DSOS := $(objroot)lib\/$(LIBJEMALLOC).$(SOREV)$/;"	m
DSO_LDFLAGS	deps/jemalloc/Makefile	/^DSO_LDFLAGS = -shared -Wl,-soname,$(@F)$/;"	m
DSS_DEFAULT	deps/jemalloc/include/jemalloc/internal/chunk_dss.h	12;"	d
DSS_PREC_DEFAULT	deps/jemalloc/include/jemalloc/internal/chunk_dss.h	11;"	d
DUMP	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	101;"	d	file:
DUMP_FILENAME_BUFSIZE	deps/jemalloc/src/prof.c	1633;"	d	file:
DUMP_INTERVAL	deps/jemalloc/test/unit/prof_accum.c	5;"	d	file:
DUMP_INTERVAL	deps/jemalloc/test/unit/prof_reset.c	151;"	d	file:
DUMP_INTERVAL	deps/jemalloc/test/unit/prof_reset.c	238;"	d	file:
DYLIBNAME	deps/hiredis/Makefile	/^DYLIBNAME=$(LIBNAME).$(DYLIBSUFFIX)$/;"	m
DYLIBSUFFIX	deps/hiredis/Makefile	/^  DYLIBSUFFIX=dylib$/;"	m
DYLIBSUFFIX	deps/hiredis/Makefile	/^DYLIBSUFFIX=so$/;"	m
DYLIB_MAJOR_NAME	deps/hiredis/Makefile	/^  DYLIB_MAJOR_NAME=$(LIBNAME).$(HIREDIS_MAJOR).$(DYLIBSUFFIX)$/;"	m
DYLIB_MAJOR_NAME	deps/hiredis/Makefile	/^DYLIB_MAJOR_NAME=$(LIBNAME).$(DYLIBSUFFIX).$(HIREDIS_MAJOR)$/;"	m
DYLIB_MAKE_CMD	deps/hiredis/Makefile	/^  DYLIB_MAKE_CMD=$(CC) -G -o $(DYLIBNAME) -h $(DYLIB_MINOR_NAME) $(LDFLAGS)$/;"	m
DYLIB_MAKE_CMD	deps/hiredis/Makefile	/^  DYLIB_MAKE_CMD=$(CC) -shared -Wl,-install_name,$(DYLIB_MINOR_NAME) -o $(DYLIBNAME) $(LDFLAGS)$/;"	m
DYLIB_MAKE_CMD	deps/hiredis/Makefile	/^DYLIB_MAKE_CMD=$(CC) -shared -Wl,-soname,$(DYLIB_MINOR_NAME) -o $(DYLIBNAME) $(LDFLAGS)$/;"	m
DYLIB_MINOR_NAME	deps/hiredis/Makefile	/^  DYLIB_MINOR_NAME=$(LIBNAME).$(HIREDIS_MAJOR).$(HIREDIS_MINOR).$(DYLIBSUFFIX)$/;"	m
DYLIB_MINOR_NAME	deps/hiredis/Makefile	/^DYLIB_MINOR_NAME=$(LIBNAME).$(DYLIBSUFFIX).$(HIREDIS_MAJOR).$(HIREDIS_MINOR)$/;"	m
D_R	deps/geohash-int/geohash_helper.c	40;"	d	file:
D_RO	deps/pmdk/src/include/libpmemobj/types.h	229;"	d
D_RW	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^		TX_SET(D_RW(child)->slots[c], parent, node);$/;"	e	enum:c	file:
D_RW	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	D_RW(child)->slots[c] = node;$/;"	e	enum:c	file:
D_RW	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	D_RW(node)->parent = child;$/;"	e	enum:c	file:
D_RW	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	D_RW(node)->slots[!c] = D_RO(child)->slots[c];$/;"	e	enum:c	file:
D_RW	deps/pmdk/src/include/libpmemobj/types.h	228;"	d
Debug	deps/pmdk/src/test/unittest/context.py	/^class Debug(_Build):$/;"	c
DefaultFileLogger	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^class DefaultFileLogger(LoggingBase):$/;"	c
DefaultPrintLogger	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^class DefaultPrintLogger(LoggingBase):$/;"	c
Dir	deps/pmdk/src/test/unittest/poolset.py	/^class Dir(_Part):$/;"	c
DllMain	deps/pmdk/src/libpmem/libpmem_main.c	/^DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID lpReserved)$/;"	f
DllMain	deps/pmdk/src/libpmem2/libpmem2_main.c	/^DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID lpReserved)$/;"	f
DllMain	deps/pmdk/src/libpmemblk/libpmemblk_main.c	/^DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID lpReserved)$/;"	f
DllMain	deps/pmdk/src/libpmemlog/libpmemlog_main.c	/^DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID lpReserved)$/;"	f
DllMain	deps/pmdk/src/libpmemobj/libpmemobj_main.c	/^DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID lpReserved)$/;"	f
DllMain	deps/pmdk/src/libpmempool/libpmempool_main.c	/^DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID lpReserved)$/;"	f
DontUseThisType	deps/pmdk/src/test/unittest/ut.c	/^	DontUseThisType,$/;"	e	enum:_POOL_TYPE	file:
Dst	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^static char *Dst;$/;"	v	file:
DumpBlock	deps/lua/src/ldump.c	/^static void DumpBlock(const void* b, size_t size, DumpState* D)$/;"	f	file:
DumpChar	deps/lua/src/ldump.c	/^static void DumpChar(int y, DumpState* D)$/;"	f	file:
DumpCode	deps/lua/src/ldump.c	76;"	d	file:
DumpConstants	deps/lua/src/ldump.c	/^static void DumpConstants(const Proto* f, DumpState* D)$/;"	f	file:
DumpDebug	deps/lua/src/ldump.c	/^static void DumpDebug(const Proto* f, DumpState* D)$/;"	f	file:
DumpFunction	deps/lua/src/ldump.c	/^static void DumpFunction(const Proto* f, const TString* p, DumpState* D)$/;"	f	file:
DumpHeader	deps/lua/src/ldump.c	/^static void DumpHeader(DumpState* D)$/;"	f	file:
DumpInt	deps/lua/src/ldump.c	/^static void DumpInt(int x, DumpState* D)$/;"	f	file:
DumpMem	deps/lua/src/ldump.c	26;"	d	file:
DumpNumber	deps/lua/src/ldump.c	/^static void DumpNumber(lua_Number x, DumpState* D)$/;"	f	file:
DumpState	deps/lua/src/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon34	file:
DumpString	deps/lua/src/ldump.c	/^static void DumpString(const TString* s, DumpState* D)$/;"	f	file:
DumpVar	deps/lua/src/ldump.c	27;"	d	file:
DumpVector	deps/lua/src/ldump.c	/^static void DumpVector(const void* b, int n, size_t size, DumpState* D)$/;"	f	file:
E	deps/pmdk/src/test/pmreorder_flushes/pmreorder_flushes.c	/^	char E[STORE_SIZE];$/;"	m	struct:stores_fields	file:
EARTH_RADIUS_IN_METERS	deps/geohash-int/geohash_helper.c	/^const double EARTH_RADIUS_IN_METERS = 6372797.560856;$/;"	v
EAX_IDX	deps/pmdk/src/libpmem/x86_64/cpu.c	54;"	d	file:
EBADFD	deps/pmdk/src/common/errno_freebsd.h	41;"	d
EBADFD	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	1911;"	d	file:
EBX_IDX	deps/pmdk/src/libpmem/x86_64/cpu.c	55;"	d	file:
ECANCELED_STR	deps/pmdk/src/common/util_windows.c	49;"	d	file:
ECCENT	deps/geohash-int/geohash_helper.c	44;"	d	file:
ECONNRESET_LOOP	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	105;"	d
ECX_IDX	deps/pmdk/src/libpmem/x86_64/cpu.c	56;"	d	file:
EDIS_CFLAGS	src/Makefile	/^	echo REDIS_CFLAGS=$(REDIS_CFLAGS) >> .make-settings$/;"	m
EDIS_LDFLAGS	src/Makefile	/^	echo REDIS_LDFLAGS=$(REDIS_LDFLAGS) >> .make-settings$/;"	m
EDX_IDX	deps/pmdk/src/libpmem/x86_64/cpu.c	57;"	d	file:
ELEMENT_NO	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	45;"	d	file:
ELEMENT_SIZE	deps/pmdk/src/examples/libpmemblk/manpage.c	51;"	d	file:
ELIBACC	deps/pmdk/src/common/errno_freebsd.h	42;"	d
ELIBACC	deps/pmdk/src/windows/include/platform.h	102;"	d
EMEDIUMTYPE	deps/pmdk/src/common/errno_freebsd.h	43;"	d
EMPTY_FLAGS	deps/pmdk/src/test/libpmempool_feature/libpmempool_feature.c	46;"	d	file:
ENABLE	deps/pmdk/src/test/unittest/valgrind.py	/^ENABLE = 1$/;"	v
ENABLED	deps/pmdk/src/libpmempool/feature.c	/^	ENABLED$/;"	e	enum:__anon95	file:
END	deps/pmdk/src/test/unittest/futils.py	/^        END = '\\33[0m'$/;"	v	class:Color
END	deps/pmdk/src/test/unittest/unittest.h	206;"	d
ENDCOLOR	deps/Makefile	/^ENDCOLOR="\\033[0m"$/;"	m
ENDCOLOR	src/Makefile	/^ENDCOLOR="\\033[0m"$/;"	m
ENDIAN_H	deps/pmdk/src/windows/include/endian.h	38;"	d
ENOERROR	deps/pmdk/src/common/util_windows.c	50;"	d	file:
ENOERROR_STR	deps/pmdk/src/common/util_windows.c	51;"	d	file:
ENOMEDIUM	deps/pmdk/src/common/errno_freebsd.h	44;"	d
ENOTSUP_STR	deps/pmdk/src/common/util_windows.c	48;"	d	file:
ENOTSUP_STR	deps/pmdk/src/test/unittest/ut.c	119;"	d	file:
ENTER	deps/linenoise/linenoise.c	/^	ENTER = 13,         \/* Enter *\/$/;"	e	enum:KEY_ACTION	file:
ENTIRE_UINT64	deps/pmdk/src/tools/pmempool/common.h	/^static const struct range ENTIRE_UINT64 = {$/;"	v	typeref:struct:range
ENTRY_TO_ALLOC_HDR	deps/pmdk/src/tools/pmempool/common.h	96;"	d
EOL_char	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^	uint64_t EOL_char;$/;"	m	struct:rpmemd_special_chars_pos	file:
EOZ	deps/lua/src/lzio.h	16;"	d
EQ_MAX_WQ_SIZE	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	858;"	d	file:
EREMOTEIO	deps/pmdk/src/common/errno_freebsd.h	45;"	d
ERR	deps/jemalloc/test/unit/util.c	132;"	d	file:
ERR	deps/jemalloc/test/unit/util.c	76;"	d	file:
ERR	deps/pmdk/src/common/out.h	222;"	d
ERR	deps/pmdk/src/tools/daxio/daxio.c	62;"	d	file:
ERR	src/quicklist.c	1437;"	d	file:
ERRFUNC	deps/lua/src/loadlib.c	40;"	d	file:
ERRLIB	deps/lua/src/loadlib.c	39;"	d	file:
ERROR	deps/pmdk/utils/check_license/check-license.c	70;"	d	file:
ERROR	src/quicklist.c	1431;"	d	file:
ERROR	src/redis-check-aof.c	39;"	d	file:
ERROR2	deps/pmdk/utils/check_license/check-license.c	71;"	d	file:
ERROR_MASK	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	67;"	d	file:
ERR_BUFF_LEN	deps/pmdk/src/librpmem/rpmem_ssh.c	54;"	d	file:
ERR_F	deps/pmdk/src/libpmempool/rm.c	51;"	d	file:
ERR_H	deps/pmdk/src/windows/include/err.h	38;"	d
ERR_MSG_BB	deps/pmdk/src/libpmempool/replica.c	1281;"	d	file:
ESC	deps/linenoise/linenoise.c	/^	ESC = 27,           \/* Escape *\/$/;"	e	enum:KEY_ACTION	file:
ESTDIR	deps/pmdk/Makefile	/^dpkg: override DESTDIR="$(CURDIR)\/$(DPKG_BUILDDIR)"$/;"	m
ESTDIR	deps/pmdk/Makefile	/^rpm : override DESTDIR="$(CURDIR)\/$(RPM_BUILDDIR)"$/;"	m
EVALUATE_DBG_EXPRESSIONS	deps/pmdk/src/common/out.h	64;"	d
EVALUATE_DBG_EXPRESSIONS	deps/pmdk/src/common/out.h	66;"	d
EVENT_ALIENS_KILLED	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	EVENT_ALIENS_KILLED$/;"	e	enum:game_event	file:
EVENT_BOUNCE	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	EVENT_BOUNCE,$/;"	e	enum:game_event	file:
EVENT_NOP	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	EVENT_NOP,$/;"	e	enum:game_event	file:
EVENT_PLAYER_KILLED	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	EVENT_PLAYER_KILLED,$/;"	e	enum:game_event	file:
EVICTION_SAMPLES_ARRAY_SIZE	src/server.c	3451;"	d	file:
EXAMPLES	deps/hiredis/Makefile	/^EXAMPLES=hiredis-example hiredis-example-libevent hiredis-example-libev$/;"	m
EXAMPLES	deps/pmdk/src/test/ex_libpmem/Makefile	/^EXAMPLES=$(EX_LIBPMEM)\/simple_copy \\$/;"	m
EXAMPLES	deps/pmdk/src/test/ex_libpmemblk/Makefile	/^EXAMPLES=$(EX_LIBPMEMBLK)\/assetdb\/asset_load \\$/;"	m
EXAMPLES	deps/pmdk/src/test/ex_libpmemlog/Makefile	/^EXAMPLES=$(EX_LIBPMEMLOG)\/logfile\/addlog \\$/;"	m
EXAMPLES	deps/pmdk/src/test/ex_libpmemobj/Makefile	/^EXAMPLES=$(EX_LIBPMEMOBJ)\/pi \\$/;"	m
EXAMPLES	deps/pmdk/src/test/ex_pmreorder/Makefile	/^EXAMPLES=$(EX_PMREORDER)\/pmreorder_list$/;"	m
EXAMPLES_TARGETS	deps/pmdk/src/Makefile	/^EXAMPLES_TARGETS = $(TARGETS) librpmem$/;"	m
EXAMPLES_TESTS	deps/pmdk/src/test/Makefile	/^EXAMPLES_TESTS = \\$/;"	m
EXE	deps/jemalloc/Makefile	/^EXE := $/;"	m
EXISTING_FILE	deps/pmdk/src/test/set_funcs/set_funcs.c	38;"	d	file:
EXPECTED_SIZE	deps/pmdk/src/test/pmem_map_file_trunc/pmem_map_file_trunc.c	43;"	d	file:
EXPERIMENTAL	deps/pmdk/Makefile	/^EXPERIMENTAL ?= n$/;"	m
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx.h	/^EXPORTED_SYMBOL(char *dest, const char *src, size_t len)$/;"	f
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^EXPORTED_SYMBOL(char *dest, const char *src, size_t len)$/;"	f
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_clflush.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_clflushopt.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_clwb.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_empty.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_noflush.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_clflush.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_clflushopt.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_clwb.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_empty.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_noflush.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2.h	/^EXPORTED_SYMBOL(char *dest, const char *src, size_t len)$/;"	f
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_clflush.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_clflushopt.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_clwb.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_empty.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_noflush.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx.h	/^EXPORTED_SYMBOL(char *dest, const char *src, size_t len)$/;"	f
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f.h	/^EXPORTED_SYMBOL(char *dest, const char *src, size_t len)$/;"	f
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_clflush.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_clflushopt.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_clwb.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_empty.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_noflush.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_clflush.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_clflushopt.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_clwb.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_empty.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_noflush.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2.h	/^EXPORTED_SYMBOL(char *dest, const char *src, size_t len)$/;"	f
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_clflush.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_clflushopt.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_clwb.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_empty.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_noflush.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx.h	/^EXPORTED_SYMBOL(char *dest, int c, size_t len)$/;"	f
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f.h	/^EXPORTED_SYMBOL(char *dest, int c, size_t len)$/;"	f
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_clflush.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_clflushopt.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_clwb.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_empty.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_noflush.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_clflush.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_clflushopt.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_clwb.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_empty.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_noflush.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2.h	/^EXPORTED_SYMBOL(char *dest, int c, size_t len)$/;"	f
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_clflush.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_clflushopt.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_clwb.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_empty.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_noflush.c	34;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx.h	/^EXPORTED_SYMBOL(char *dest, int c, size_t len)$/;"	f
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f.h	/^EXPORTED_SYMBOL(char *dest, int c, size_t len)$/;"	f
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_clflush.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_clflushopt.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_clwb.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_empty.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_noflush.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_clflush.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_clflushopt.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_clwb.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_empty.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_noflush.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2.h	/^EXPORTED_SYMBOL(char *dest, int c, size_t len)$/;"	f
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_clflush.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_clflushopt.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_clwb.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_empty.c	35;"	d	file:
EXPORTED_SYMBOL	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_noflush.c	35;"	d	file:
EXTEND_SIZE	deps/pmdk/src/test/obj_badblock/obj_badblock.c	45;"	d	file:
EXTRA	deps/pmdk/src/test/set_funcs/set_funcs.c	42;"	d	file:
EXTRA_ALLOCS	deps/pmdk/src/test/obj_defrag/obj_defrag.c	106;"	d	file:
EXTRA_ALLOCS	deps/pmdk/src/test/obj_defrag/obj_defrag.c	99;"	d	file:
EXTRA_CFLAGS	deps/jemalloc/Makefile	/^EXTRA_CFLAGS := $/;"	m
EXTRA_CFLAGS	deps/pmdk/user.mk	/^EXTRA_CFLAGS = -g -fexperimental-new-pass-manager -pavise=pavisehello$/;"	m
EXTRA_LDFLAGS	deps/jemalloc/Makefile	/^EXTRA_LDFLAGS := $/;"	m
EXTRA_OID_PTRS	deps/pmdk/src/test/obj_defrag/obj_defrag.c	138;"	d	file:
EXTRA_STACK	deps/lua/src/lstate.h	29;"	d
EX_COMMON_H	deps/pmdk/src/examples/ex_common.h	37;"	d
EndAddress	deps/pmdk/src/windows/include/win_mmap.h	/^	void *EndAddress;$/;"	m	struct:FILE_MAPPING_TRACKER
EnumSystemFirmwareTables	deps/pmdk/src/test/pmem_has_auto_flush_win/mocks_windows.h	49;"	d
ErrMode	deps/pmdk/src/test/unittest/unittest.h	/^static DWORD ErrMode;$/;"	v
Errfp	deps/pmdk/src/test/unittest/ut.c	/^static FILE *Errfp;$/;"	v	file:
Extend_size	deps/pmdk/src/test/util_poolset/util_poolset.c	/^static size_t Extend_size = MIN_PART * 2;$/;"	v	file:
F 	deps/lua/test/factorial.lua	/^F = function (f)$/;"	f
FACTOR	deps/pmdk/src/benchmarks/map_bench.cpp	58;"	d	file:
FACTOR	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	59;"	d	file:
FACTOR	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	49;"	d	file:
FACTOR	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	52;"	d	file:
FACTOR	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	57;"	d	file:
FACTOR	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	51;"	d	file:
FAIL	deps/pmdk/src/test/util_sds/util_sds.c	52;"	d	file:
FAIL	deps/pmdk/src/tools/daxio/daxio.c	67;"	d	file:
FAILED_FUNC	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	54;"	d	file:
FAILED_FUNC_PARAM	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	57;"	d	file:
FAIL_AFTER_FINISH	deps/pmdk/src/test/obj_list/obj_list.h	/^	FAIL_AFTER_FINISH,$/;"	e	enum:ulog_fail
FAIL_AFTER_PROCESS	deps/pmdk/src/test/obj_list/obj_list.h	/^	FAIL_AFTER_PROCESS$/;"	e	enum:ulog_fail
FAIL_BEFORE_FINISH	deps/pmdk/src/test/obj_list/obj_list.h	/^	FAIL_BEFORE_FINISH,$/;"	e	enum:ulog_fail
FAIL_CHECKSUM	deps/pmdk/src/test/obj_memops/obj_memops.c	/^	FAIL_CHECKSUM,$/;"	e	enum:fail_types	file:
FAIL_MODIFY_NEXT	deps/pmdk/src/test/obj_memops/obj_memops.c	/^	FAIL_MODIFY_NEXT,$/;"	e	enum:fail_types	file:
FAIL_MODIFY_VALUE	deps/pmdk/src/test/obj_memops/obj_memops.c	/^	FAIL_MODIFY_VALUE,$/;"	e	enum:fail_types	file:
FAIL_NONE	deps/pmdk/src/test/obj_memops/obj_memops.c	/^	FAIL_NONE,$/;"	e	enum:fail_types	file:
FATAL	deps/pmdk/src/common/out.h	155;"	d
FATAL_USAGE	deps/pmdk/src/test/arch_flags/arch_flags.c	43;"	d	file:
FATAL_USAGE	deps/pmdk/src/test/libpmempool_rm/libpmempool_rm.c	45;"	d	file:
FATAL_USAGE	deps/pmdk/src/test/libpmempool_rm_win/libpmempool_rm_win.c	45;"	d	file:
FATAL_USAGE	deps/pmdk/src/test/obj_first_next/obj_first_next.c	58;"	d	file:
FATAL_USAGE	deps/pmdk/src/test/obj_list/obj_list.h	113;"	d
FATAL_USAGE	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	60;"	d	file:
FATAL_USAGE	deps/pmdk/src/test/obj_sync/obj_sync.c	53;"	d	file:
FATAL_USAGE_FAIL	deps/pmdk/src/test/obj_list/obj_list.h	129;"	d
FATAL_USAGE_INSERT	deps/pmdk/src/test/obj_list/obj_list.h	119;"	d
FATAL_USAGE_INSERT	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	66;"	d	file:
FATAL_USAGE_INSERT_NEW	deps/pmdk/src/test/obj_list/obj_list.h	121;"	d
FATAL_USAGE_INSERT_NEW	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	68;"	d	file:
FATAL_USAGE_MOVE	deps/pmdk/src/test/obj_list/obj_list.h	127;"	d
FATAL_USAGE_MOVE	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	74;"	d	file:
FATAL_USAGE_PRINT	deps/pmdk/src/test/obj_list/obj_list.h	115;"	d
FATAL_USAGE_PRINT	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	62;"	d	file:
FATAL_USAGE_PRINT_REVERSE	deps/pmdk/src/test/obj_list/obj_list.h	117;"	d
FATAL_USAGE_PRINT_REVERSE	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	64;"	d	file:
FATAL_USAGE_REMOVE	deps/pmdk/src/test/obj_list/obj_list.h	125;"	d
FATAL_USAGE_REMOVE	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	72;"	d	file:
FATAL_USAGE_REMOVE_FREE	deps/pmdk/src/test/obj_list/obj_list.h	123;"	d
FATAL_USAGE_REMOVE_FREE	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	70;"	d	file:
FCLOSE	deps/pmdk/src/test/unittest/unittest.h	466;"	d
FEATURES_T_SIZE_V1	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	50;"	d	file:
FEATURE_DISABLE	deps/pmdk/src/common/pool_hdr.c	283;"	d	file:
FEATURE_DISABLE	deps/pmdk/src/common/pool_hdr.c	290;"	d	file:
FEATURE_ENABLE	deps/pmdk/src/common/pool_hdr.c	267;"	d	file:
FEATURE_ENABLE	deps/pmdk/src/common/pool_hdr.c	274;"	d	file:
FEATURE_FUNCS_MAX	deps/pmdk/src/libpmempool/feature.c	627;"	d	file:
FEATURE_INCOMPAT	deps/pmdk/src/libpmempool/feature.c	51;"	d	file:
FEATURE_IS_DISABLED_STR	deps/pmdk/src/libpmempool/feature.c	299;"	d	file:
FEATURE_IS_ENABLED_STR	deps/pmdk/src/libpmempool/feature.c	298;"	d	file:
FEATURE_IS_NOT_DISABLED_PRIOR_STR	deps/pmdk/src/libpmempool/feature.c	321;"	d	file:
FEATURE_IS_NOT_ENABLED_PRIOR_STR	deps/pmdk/src/libpmempool/feature.c	320;"	d	file:
FEATURE_MAXPRINT	deps/pmdk/src/libpmempool/feature.c	64;"	d	file:
FEAT_2_PMEMPOOL_FEATURE_MAP_SIZE	deps/pmdk/src/common/pool_hdr.c	300;"	d	file:
FEAT_COMPAT	deps/pmdk/src/common/pool_hdr.h	211;"	d
FEAT_INCOMPAT	deps/pmdk/src/common/pool_hdr.h	259;"	d
FEAT_INVALID	deps/pmdk/src/libpmempool/feature.c	59;"	d	file:
FGETS_BUFF_LEN	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	162;"	d	file:
FIBO_OFF	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	60;"	d	file:
FIBO_SIG_LEN	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	48;"	d	file:
FIBO_SIZE	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	61;"	d	file:
FILE_MAPPING_TRACKER	deps/pmdk/src/windows/include/win_mmap.h	/^typedef struct FILE_MAPPING_TRACKER {$/;"	s
FILE_MAPPING_TRACKER	deps/pmdk/src/windows/include/win_mmap.h	/^} FILE_MAPPING_TRACKER, *PFILE_MAPPING_TRACKER;$/;"	t	typeref:struct:FILE_MAPPING_TRACKER
FILE_MAPPING_TRACKER_FLAGS	deps/pmdk/src/windows/include/win_mmap.h	/^typedef enum FILE_MAPPING_TRACKER_FLAGS {$/;"	g
FILE_MAPPING_TRACKER_FLAGS	deps/pmdk/src/windows/include/win_mmap.h	/^} FILE_MAPPING_TRACKER_FLAGS;$/;"	t	typeref:enum:FILE_MAPPING_TRACKER_FLAGS
FILE_MAPPING_TRACKER_FLAGS_MASK	deps/pmdk/src/windows/include/win_mmap.h	/^	FILE_MAPPING_TRACKER_FLAGS_MASK =$/;"	e	enum:FILE_MAPPING_TRACKER_FLAGS
FILE_MAPPING_TRACKER_FLAG_DIRECT_MAPPED	deps/pmdk/src/windows/include/win_mmap.h	/^	FILE_MAPPING_TRACKER_FLAG_DIRECT_MAPPED = 0x0001,$/;"	e	enum:FILE_MAPPING_TRACKER_FLAGS
FILE_MAX_DAX_DEVICES	deps/pmdk/src/test/Makefile	/^FILE_MAX_DAX_DEVICES=$(TOP)\/src\/test\/tools\/anonymous_mmap\/max_dax_devices$/;"	m
FILE_MODE	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	54;"	d	file:
FILE_SIZE	deps/pmdk/src/test/mmap/mmap.c	60;"	d	file:
FILE_SIZE	deps/pmdk/src/test/obj_root/obj_root.c	39;"	d	file:
FILE_SIZE	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	62;"	d	file:
FILL	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	100;"	d	file:
FILL_BYTE	deps/jemalloc/test/integration/rallocx.c	119;"	d	file:
FILL_BYTE	deps/jemalloc/test/integration/rallocx.c	155;"	d	file:
FILL_BYTE	deps/jemalloc/test/integration/xallocx.c	419;"	d	file:
FILL_CHAR	deps/pmdk/src/test/pmem_map_file_trunc/pmem_map_file_trunc.c	49;"	d	file:
FILL_MAX	src/quicklist.c	116;"	d	file:
FILL_SIZE	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	47;"	d	file:
FINALIZEDBIT	deps/lua/src/lgc.h	57;"	d
FINAL_CFLAGS	src/Makefile	/^FINAL_CFLAGS=$(STD) $(WARN) $(OPT) $(DEBUG) $(CFLAGS) $(REDIS_CFLAGS) -I..\/deps\/geohash-int$/;"	m
FINAL_LDFLAGS	src/Makefile	/^FINAL_LDFLAGS=$(LDFLAGS) $(REDIS_LDFLAGS) $(DEBUG)$/;"	m
FINAL_LIBS	src/Makefile	/^FINAL_LIBS=-lm$/;"	m
FIP_CLIENT_DEFAULT	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	86;"	d	file:
FIRST_GENERATED_CLASS_SIZE	deps/pmdk/src/libpmemobj/alloc_class.c	81;"	d	file:
FIRST_RESERVED	deps/lua/src/llex.h	14;"	d
FIRST_SIZE	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	233;"	d	file:
FIRST_USIZE	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	234;"	d	file:
FIXEDBIT	deps/lua/src/lgc.h	60;"	d
FLAGS	deps/lua/src/lstrlib.c	688;"	d	file:
FLAGS	src/Makefile	/^	echo CFLAGS=$(CFLAGS) >> .make-settings$/;"	m
FLAKE8	deps/pmdk/src/tools/pmreorder/Makefile	/^FLAKE8 := $(shell flake8 --version 2>\/dev\/null)$/;"	m
FLOAT_WIDTH_TEST	deps/hiredis/test.c	174;"	d	file:
FLUSH_ALIGN	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	49;"	d	file:
FLUSH_ALIGN	deps/pmdk/src/libpmem/aarch64/flush.h	40;"	d
FLUSH_ALIGN	deps/pmdk/src/libpmem/x86_64/flush.h	41;"	d
FLUSH_ALIGN	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	59;"	d	file:
FLUSH_SDS	deps/pmdk/src/common/shutdown_state.c	47;"	d	file:
FMT64_PREFIX	deps/jemalloc/include/jemalloc/internal/util.h	6;"	d
FMT64_PREFIX	deps/jemalloc/include/jemalloc/internal/util.h	9;"	d
FMTPTR_PREFIX	deps/jemalloc/include/jemalloc/internal/util.h	10;"	d
FMTPTR_PREFIX	deps/jemalloc/include/jemalloc/internal/util.h	7;"	d
FMTd32	deps/jemalloc/include/jemalloc/internal/util.h	12;"	d
FMTd32	deps/jemalloc/include/jemalloc/internal/util.h	23;"	d
FMTd64	deps/jemalloc/include/jemalloc/internal/util.h	15;"	d
FMTd64	deps/jemalloc/include/jemalloc/internal/util.h	26;"	d
FMTdPTR	deps/jemalloc/include/jemalloc/internal/util.h	18;"	d
FMTdPTR	deps/jemalloc/include/jemalloc/internal/util.h	29;"	d
FMTu32	deps/jemalloc/include/jemalloc/internal/util.h	13;"	d
FMTu32	deps/jemalloc/include/jemalloc/internal/util.h	24;"	d
FMTu64	deps/jemalloc/include/jemalloc/internal/util.h	16;"	d
FMTu64	deps/jemalloc/include/jemalloc/internal/util.h	27;"	d
FMTuPTR	deps/jemalloc/include/jemalloc/internal/util.h	19;"	d
FMTuPTR	deps/jemalloc/include/jemalloc/internal/util.h	30;"	d
FMTx32	deps/jemalloc/include/jemalloc/internal/util.h	14;"	d
FMTx32	deps/jemalloc/include/jemalloc/internal/util.h	25;"	d
FMTx64	deps/jemalloc/include/jemalloc/internal/util.h	17;"	d
FMTx64	deps/jemalloc/include/jemalloc/internal/util.h	28;"	d
FMTxPTR	deps/jemalloc/include/jemalloc/internal/util.h	20;"	d
FMTxPTR	deps/jemalloc/include/jemalloc/internal/util.h	31;"	d
FOPEN	deps/pmdk/src/test/unittest/unittest.h	462;"	d
FOREACH_BUS_REGION_NAMESPACE	deps/pmdk/src/common/os_dimm_ndctl.c	57;"	d	file:
FOREACH_KV	deps/pmdk/src/benchmarks/scenario.hpp	58;"	d
FOREACH_RANGE	deps/pmdk/src/tools/pmempool/common.h	90;"	d
FOREACH_SCENARIO	deps/pmdk/src/benchmarks/scenario.hpp	57;"	d
FORMAT_PRINTF	deps/pmdk/src/common/util.h	80;"	d
FORMAT_PRINTF	deps/pmdk/src/tools/pmempool/common.h	116;"	d
FORMAT_PRINTF	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	40;"	d
FPCONV_G_FMT_BUFSIZE	deps/lua/src/fpconv.h	7;"	d
FRAG	deps/pmdk/src/test/obj_extend/obj_extend.c	44;"	d	file:
FREE	deps/pmdk/src/test/unittest/unittest.h	348;"	d
FREELIST_REF	deps/lua/src/lauxlib.c	28;"	d	file:
FREES_P	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	62;"	d	file:
FREE_OPS	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	333;"	d	file:
FREE_PCT	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	332;"	d	file:
FRST	src/lzf_c.c	48;"	d	file:
FSTAT	deps/pmdk/src/test/unittest/unittest.h	488;"	d
FS_ENTRY_DIRECTORY	deps/pmdk/src/common/fs.h	/^	FS_ENTRY_DIRECTORY,$/;"	e	enum:fs_entry_type
FS_ENTRY_FILE	deps/pmdk/src/common/fs.h	/^	FS_ENTRY_FILE,$/;"	e	enum:fs_entry_type
FS_ENTRY_OTHER	deps/pmdk/src/common/fs.h	/^	FS_ENTRY_OTHER,$/;"	e	enum:fs_entry_type
FS_ENTRY_SYMLINK	deps/pmdk/src/common/fs.h	/^	FS_ENTRY_SYMLINK,$/;"	e	enum:fs_entry_type
FTRUNCATE	deps/pmdk/src/test/unittest/unittest.h	509;"	d
FUNC_LOG_LEN	deps/pmdk/src/common/util.c	64;"	d	file:
FUNC_MOCK	deps/pmdk/src/test/unittest/unittest.h	628;"	d
FUNC_MOCK_DLLIMPORT	deps/pmdk/src/test/unittest/unittest.h	635;"	d
FUNC_MOCK_END	deps/pmdk/src/test/unittest/unittest.h	642;"	d
FUNC_MOCK_RCOUNTER_SET	deps/pmdk/src/test/unittest/unittest.h	625;"	d
FUNC_MOCK_RET_ALWAYS	deps/pmdk/src/test/unittest/unittest.h	660;"	d
FUNC_MOCK_RET_ALWAYS_VOID	deps/pmdk/src/test/unittest/unittest.h	665;"	d
FUNC_MOCK_RUN	deps/pmdk/src/test/unittest/unittest.h	645;"	d
FUNC_MOCK_RUN_DEFAULT	deps/pmdk/src/test/unittest/unittest.h	648;"	d
FUNC_MOCK_RUN_RET	deps/pmdk/src/test/unittest/unittest.h	651;"	d
FUNC_MOCK_RUN_RET_DEFAULT	deps/pmdk/src/test/unittest/unittest.h	657;"	d
FUNC_MOCK_RUN_RET_DEFAULT_REAL	deps/pmdk/src/test/obj_sync/mocks_posix.c	/^	FUNC_MOCK_RUN_RET_DEFAULT_REAL(pthread_cond_init, cond, attr)$/;"	f
FUNC_MOCK_RUN_RET_DEFAULT_REAL	deps/pmdk/src/test/obj_sync/mocks_posix.c	/^	FUNC_MOCK_RUN_RET_DEFAULT_REAL(pthread_mutex_init, mutex, attr)$/;"	f
FUNC_MOCK_RUN_RET_DEFAULT_REAL	deps/pmdk/src/test/obj_sync/mocks_posix.c	/^	FUNC_MOCK_RUN_RET_DEFAULT_REAL(pthread_rwlock_init, rwlock, attr)$/;"	f
FUNC_MOCK_RUN_RET_DEFAULT_REAL	deps/pmdk/src/test/obj_sync/mocks_windows.c	/^	FUNC_MOCK_RUN_RET_DEFAULT_REAL(os_cond_init, cond)$/;"	f
FUNC_MOCK_RUN_RET_DEFAULT_REAL	deps/pmdk/src/test/obj_sync/mocks_windows.c	/^	FUNC_MOCK_RUN_RET_DEFAULT_REAL(os_mutex_init, mutex)$/;"	f
FUNC_MOCK_RUN_RET_DEFAULT_REAL	deps/pmdk/src/test/obj_sync/mocks_windows.c	/^	FUNC_MOCK_RUN_RET_DEFAULT_REAL(os_rwlock_init, rwlock)$/;"	f
FUNC_MOCK_RUN_RET_DEFAULT_REAL	deps/pmdk/src/test/unittest/unittest.h	654;"	d
FUSE	deps/pmdk/src/examples/libpmemobj/pmemobjfs/Makefile	/^FUSE := $(call check_package, fuse --atleast-version $(FUSE_REQ_VER))$/;"	m
FUSE_REQ_VER	deps/pmdk/src/examples/libpmemobj/pmemobjfs/Makefile	/^FUSE_REQ_VER = 2.9.1$/;"	m
F_OK	deps/pmdk/src/windows/include/unistd.h	48;"	d
Factory	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    class Factory():$/;"	c	class:Register_file
Factory	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    class Factory():$/;"	c	class:Store
Factory	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    class Factory:$/;"	c	class:Fence
Factory	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    class Factory:$/;"	c	class:Flush
Factory	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    class Factory:$/;"	c	class:NoReorderDoCheck
Factory	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    class Factory:$/;"	c	class:NoReorderNoCheck
Factory	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    class Factory:$/;"	c	class:ReorderAccumulative
Factory	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    class Factory:$/;"	c	class:ReorderDefault
Factory	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    class Factory:$/;"	c	class:ReorderFull
Factory	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    class Factory:$/;"	c	class:ReorderPartial
Factory	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    class Factory:$/;"	c	class:ReorderReverseAccumulative
Fail	deps/pmdk/src/test/unittest/futils.py	/^class Fail(Exception):$/;"	c
Fallocate_at_create	deps/pmdk/src/common/set.c	/^int Fallocate_at_create = 1;$/;"	v
Fallocate_len	deps/pmdk/src/test/util_poolset/util_poolset.c	/^os_off_t Fallocate_len = -1;$/;"	v
Fd_errcount	deps/pmdk/src/test/unittest/ut.c	/^static int Fd_errcount;$/;"	v	file:
Fd_lut	deps/pmdk/src/test/unittest/ut.c	/^} *Fd_lut;$/;"	v	typeref:struct:fd_lut	file:
Fence	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class Fence(BaseOperation):$/;"	c
File	deps/pmdk/src/test/unittest/poolset.py	/^class File(_Part):$/;"	c
File1	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	/^static char *File1 = NULL;	\/* file1 name *\/$/;"	v	file:
File2	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	/^static char *File2 = NULL;	\/* file2 name *\/$/;"	v	file:
FileHandle	deps/pmdk/src/common/mmap.h	/^	HANDLE FileHandle;$/;"	m	struct:map_tracker
FileHandle	deps/pmdk/src/windows/include/win_mmap.h	/^	HANDLE FileHandle;$/;"	m	struct:FILE_MAPPING_TRACKER
FileLen	deps/pmdk/src/common/mmap.h	/^	size_t FileLen;$/;"	m	struct:map_tracker
FileLen	deps/pmdk/src/windows/include/win_mmap.h	/^	size_t FileLen;$/;"	m	struct:FILE_MAPPING_TRACKER
FileMappingHandle	deps/pmdk/src/common/mmap.h	/^	HANDLE FileMappingHandle;$/;"	m	struct:map_tracker
FileMappingHandle	deps/pmdk/src/windows/include/win_mmap.h	/^	HANDLE FileMappingHandle;$/;"	m	struct:FILE_MAPPING_TRACKER
FileMappingQHead	deps/pmdk/src/windows/win_mmap.c	/^struct FMLHead FileMappingQHead =$/;"	v	typeref:struct:FMLHead
FileMappingQLock	deps/pmdk/src/windows/win_mmap.c	/^SRWLOCK FileMappingQLock = SRWLOCK_INIT;$/;"	v
FilterPartialReorderEngine	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^class FilterPartialReorderEngine:$/;"	c
Flags	deps/pmdk/src/test/obj_mem/obj_mem.c	/^static unsigned Flags[] = {$/;"	v	file:
Flags	deps/pmdk/src/test/pmem_memcpy/pmem_memcpy.c	/^static unsigned Flags[] = {$/;"	v	file:
Flags	deps/pmdk/src/test/pmem_memmove/pmem_memmove.c	/^static unsigned Flags[] = {$/;"	v	file:
Flags	deps/pmdk/src/test/pmem_memset/pmem_memset.c	/^static unsigned Flags[] = {$/;"	v	file:
Flags	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^static unsigned Flags[] = {$/;"	v	file:
Flags	deps/pmdk/src/windows/include/win_mmap.h	/^	FILE_MAPPING_TRACKER_FLAGS Flags;$/;"	m	struct:FILE_MAPPING_TRACKER
Flush	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class Flush(FlushBase):$/;"	c
FlushBase	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class FlushBase(BaseOperation, Rangeable):$/;"	c
Force_quiet	deps/pmdk/src/test/unittest/ut.c	/^static int Force_quiet;		\/* set by UNITTEST_FORCE_QUIET env variable *\/$/;"	v	file:
Free	deps/pmdk/src/common/alloc.c	/^Free_func Free = free;$/;"	v
Free_func	deps/pmdk/src/common/alloc.h	/^typedef void (*Free_func)(void *ptr);$/;"	t
FullReorderEngine	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^class FullReorderEngine:$/;"	c
FuncState	deps/lua/src/lparser.h	/^typedef struct FuncState {$/;"	s
FuncState	deps/lua/src/lparser.h	/^} FuncState;$/;"	t	typeref:struct:FuncState
Func_qvmi	deps/pmdk/src/libpmem/pmem_windows.c	/^static PQVM Func_qvmi = NULL;$/;"	v	file:
Funcs	deps/pmdk/src/libpmem/pmem.c	/^static struct pmem_funcs Funcs;$/;"	v	typeref:struct:pmem_funcs	file:
G	deps/lua/src/lstate.h	130;"	d
GAME_HEIGHT	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	56;"	d	file:
GAME_HEIGHT	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	70;"	d	file:
GAME_WIDTH	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	55;"	d	file:
GAME_WIDTH	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	69;"	d	file:
GCFINALIZECOST	deps/lua/src/lgc.c	29;"	d	file:
GCObject	deps/lua/src/lobject.h	/^typedef union GCObject GCObject;$/;"	t	typeref:union:GCObject
GCObject	deps/lua/src/lstate.h	/^union GCObject {$/;"	u
GCSTEPSIZE	deps/lua/src/lgc.c	26;"	d	file:
GCSWEEPCOST	deps/lua/src/lgc.c	28;"	d	file:
GCSWEEPMAX	deps/lua/src/lgc.c	27;"	d	file:
GCSfinalize	deps/lua/src/lgc.h	21;"	d
GCSpause	deps/lua/src/lgc.h	17;"	d
GCSpropagate	deps/lua/src/lgc.h	18;"	d
GCSsweep	deps/lua/src/lgc.h	20;"	d
GCSsweepstring	deps/lua/src/lgc.h	19;"	d
GCTM	deps/lua/src/lgc.c	/^static void GCTM (lua_State *L) {$/;"	f	file:
GCheader	deps/lua/src/lobject.h	/^typedef struct GCheader {$/;"	s
GCheader	deps/lua/src/lobject.h	/^} GCheader;$/;"	t	typeref:struct:GCheader
GCthreshold	deps/lua/src/lstate.h	/^  lu_mem GCthreshold;$/;"	m	struct:global_State
GEOHASH_EAST	deps/geohash-int/geohash.h	/^    GEOHASH_EAST,$/;"	e	enum:__anon142
GEOHASH_HELPER_HPP_	deps/geohash-int/geohash_helper.h	33;"	d
GEOHASH_H_	deps/geohash-int/geohash.h	33;"	d
GEOHASH_NORTH	deps/geohash-int/geohash.h	/^    GEOHASH_NORTH = 0,$/;"	e	enum:__anon142
GEOHASH_NORT_EAST	deps/geohash-int/geohash.h	/^    GEOHASH_NORT_EAST$/;"	e	enum:__anon142
GEOHASH_NORT_WEST	deps/geohash-int/geohash.h	/^    GEOHASH_NORT_WEST,$/;"	e	enum:__anon142
GEOHASH_SOUTH	deps/geohash-int/geohash.h	/^    GEOHASH_SOUTH,$/;"	e	enum:__anon142
GEOHASH_SOUTH_EAST	deps/geohash-int/geohash.h	/^    GEOHASH_SOUTH_EAST,$/;"	e	enum:__anon142
GEOHASH_SOUTH_WEST	deps/geohash-int/geohash.h	/^    GEOHASH_SOUTH_WEST,$/;"	e	enum:__anon142
GEOHASH_WEST	deps/geohash-int/geohash.h	/^    GEOHASH_WEST,$/;"	e	enum:__anon142
GEO_LAT_MAX	deps/geohash-int/geohash.h	51;"	d
GEO_LAT_MIN	deps/geohash-int/geohash.h	50;"	d
GEO_LONG_MAX	deps/geohash-int/geohash.h	53;"	d
GEO_LONG_MIN	deps/geohash-int/geohash.h	52;"	d
GEO_STEP_MAX	deps/geohash-int/geohash.h	47;"	d
GETARG_A	deps/lua/src/lopcodes.h	84;"	d
GETARG_B	deps/lua/src/lopcodes.h	88;"	d
GETARG_Bx	deps/lua/src/lopcodes.h	96;"	d
GETARG_C	deps/lua/src/lopcodes.h	92;"	d
GETARG_sBx	deps/lua/src/lopcodes.h	100;"	d
GET_ALIGNMENT	deps/pmdk/src/tools/pmempool/info.c	65;"	d	file:
GET_ARG_NUMERIC	deps/jemalloc/src/util.c	354;"	d	file:
GET_ARG_NUMERIC	deps/jemalloc/src/util.c	592;"	d	file:
GET_CHUNK	deps/pmdk/src/libpmemobj/heap_layout.h	/^GET_CHUNK(struct heap_layout *layout, size_t zone_id, unsigned chunk_id)$/;"	f
GET_CHUNK_HDR	deps/pmdk/src/libpmemobj/heap_layout.h	/^GET_CHUNK_HDR(struct heap_layout *layout, size_t zone_id, unsigned chunk_id)$/;"	f
GET_CHUNK_RUN	deps/pmdk/src/libpmemobj/heap_layout.h	/^GET_CHUNK_RUN(struct heap_layout *layout, size_t zone_id, unsigned chunk_id)$/;"	f
GET_KEY	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	221;"	d	file:
GET_NULL	deps/pmdk/src/test/obj_critnib/obj_critnib.c	262;"	d	file:
GET_NULL	deps/pmdk/src/test/obj_critnib/obj_critnib.c	281;"	d	file:
GET_OPCODE	deps/lua/src/lopcodes.h	80;"	d
GET_RPMEMD_PID_CMD	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	949;"	d	file:
GET_SAME	deps/pmdk/src/test/obj_critnib/obj_critnib.c	261;"	d	file:
GET_SAME	deps/pmdk/src/test/obj_critnib/obj_critnib.c	280;"	d	file:
GET_VOLATILE_MUTEX	deps/pmdk/src/benchmarks/obj_locks.cpp	134;"	d	file:
GIGABYTE	deps/pmdk/src/common/mmap.h	140;"	d
GIGABYTE	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	50;"	d	file:
GIGABYTE	deps/pmdk/src/test/util_map_proc/util_map_proc.c	46;"	d	file:
GISNOTZERO	deps/geohash-int/geohash_helper.h	40;"	d
GISZERO	deps/geohash-int/geohash_helper.h	39;"	d
GLIB	deps/pmdk/src/benchmarks/Makefile	/^GLIB:= $(call check_package, glib-2.0)$/;"	m
GLIB_SILENCE	deps/pmdk/src/benchmarks/Makefile	/^GLIB_SILENCE := $(shell printf $(GLIB_TEST_PROG) |\\$/;"	m
GLIB_TEST_PROG	deps/pmdk/src/benchmarks/Makefile	/^GLIB_TEST_PROG="\\#include <glib.h>\\nint main(){return 0;}"$/;"	m
GNUC_VERSION	src/config.h	198;"	d
GRAPH	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	102;"	d	file:
GRAPH_LAYOUT	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	285;"	d	file:
GREEN	deps/pmdk/src/test/unittest/futils.py	/^        GREEN = '\\33[92m'$/;"	v	class:Color
GT_MAX_WQ_SIZE	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	859;"	d	file:
GUARD	deps/pmdk/src/test/set_funcs/set_funcs.c	41;"	d	file:
GUID_SIZE	deps/pmdk/src/common/os_dimm_windows.c	42;"	d	file:
GZERO	deps/geohash-int/geohash_helper.h	38;"	d
GZFILES	deps/pmdk/doc/Makefile	/^GZFILES = $(GZFILES_7) $(GZFILES_5) $(GZFILES_3) $(GZFILES_1) \\$/;"	m
GZFILES_1	deps/pmdk/doc/Makefile	/^GZFILES_1 = $(MANPAGES_1_GROFF:=.gz)$/;"	m
GZFILES_1_NOINSTALL	deps/pmdk/doc/Makefile	/^GZFILES_1_NOINSTALL = $(MANPAGES_1_NOINSTALL:=.gz)$/;"	m
GZFILES_3	deps/pmdk/doc/Makefile	/^GZFILES_3 = $(MANPAGES_3_GROFF:=.gz)$/;"	m
GZFILES_3_DUMMY	deps/pmdk/doc/Makefile	/^GZFILES_3_DUMMY = $(MANPAGES_3_DUMMY:=.gz)$/;"	m
GZFILES_3_NOINSTALL	deps/pmdk/doc/Makefile	/^GZFILES_3_NOINSTALL = $(MANPAGES_3_NOINSTALL:=.gz)$/;"	m
GZFILES_5	deps/pmdk/doc/Makefile	/^GZFILES_5 = $(MANPAGES_5_GROFF:=.gz)$/;"	m
GZFILES_5_NOINSTALL	deps/pmdk/doc/Makefile	/^GZFILES_5_NOINSTALL = $(MANPAGES_5_NOINSTALL:=.gz)$/;"	m
GZFILES_7	deps/pmdk/doc/Makefile	/^GZFILES_7 = $(MANPAGES_7_GROFF:=.gz)$/;"	m
GZFILES_7_NOINSTALL	deps/pmdk/doc/Makefile	/^GZFILES_7_NOINSTALL = $(MANPAGES_7_NOINSTALL:=.gz)$/;"	m
GenericMapping	deps/pmdk/src/test/unittest/ut.c	/^	GENERIC_MAPPING GenericMapping;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
GeoDirection	deps/geohash-int/geohash.h	/^} GeoDirection;$/;"	t	typeref:enum:__anon142
GeoHashArea	deps/geohash-int/geohash.h	/^} GeoHashArea;$/;"	t	typeref:struct:__anon145
GeoHashBits	deps/geohash-int/geohash.h	/^} GeoHashBits;$/;"	t	typeref:struct:__anon143
GeoHashFix52Bits	deps/geohash-int/geohash_helper.h	/^typedef uint64_t GeoHashFix52Bits;$/;"	t
GeoHashNeighbors	deps/geohash-int/geohash.h	/^} GeoHashNeighbors;$/;"	t	typeref:struct:__anon146
GeoHashRadius	deps/geohash-int/geohash_helper.h	/^} GeoHashRadius;$/;"	t	typeref:struct:__anon141
GeoHashRange	deps/geohash-int/geohash.h	/^} GeoHashRange;$/;"	t	typeref:struct:__anon144
GeoHashVarBits	deps/geohash-int/geohash_helper.h	/^typedef uint64_t GeoHashVarBits;$/;"	t
GetSystemFirmwareTable	deps/pmdk/src/test/pmem_has_auto_flush_win/mocks_windows.h	50;"	d
Get_time_avg	deps/pmdk/src/benchmarks/pmembench.cpp	/^unsigned long long Get_time_avg;$/;"	v
GiB	deps/pmdk/src/test/unittest/utils.py	/^GiB = 2 ** 30$/;"	v
GrantedAccess	deps/pmdk/src/test/unittest/ut.c	/^	ULONG GrantedAccess;$/;"	m	struct:_SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	file:
HALF_OF_DEFAULT_UNDO_SIZE	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	59;"	d	file:
HASHISZERO	deps/geohash-int/geohash.h	43;"	d
HASHMAP_ATOMIC_H	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.h	33;"	d
HASHMAP_ATOMIC_TYPE_OFFSET	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.h	41;"	d
HASHMAP_CMD_DEBUG	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap.h	/^	HASHMAP_CMD_DEBUG,$/;"	e	enum:hashmap_cmd
HASHMAP_CMD_REBUILD	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap.h	/^	HASHMAP_CMD_REBUILD,$/;"	e	enum:hashmap_cmd
HASHMAP_H	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap.h	33;"	d
HASHMAP_RP_H	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.h	33;"	d
HASHMAP_RP_LOAD_FACTOR	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.h	50;"	d
HASHMAP_RP_MAX_ACTIONS	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.h	54;"	d
HASHMAP_RP_MAX_SWAPS	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.h	52;"	d
HASHMAP_RP_NO_REBUILD	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.h	46;"	d
HASHMAP_RP_REBUILD	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.h	45;"	d
HASHMAP_RP_TYPE_OFFSET	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.h	41;"	d
HASHMAP_TX_H	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.h	33;"	d
HASHMAP_TX_TYPE_OFFSET	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.h	41;"	d
HASHSET_INTERNAL_H	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_internal.h	34;"	d
HASHTABLE_MIN_FILL	src/server.h	211;"	d
HASH_FUNC_COEFF_P	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_internal.h	37;"	d
HAS_BAD_BLOCKS	deps/pmdk/src/libpmempool/replica.h	65;"	d
HAS_CORRUPTED_HEADER	deps/pmdk/src/libpmempool/replica.h	70;"	d
HAS_LIBPMEMOBJ	deps/pmdk/utils/docker/test_package/Makefile	/^HAS_LIBPMEMOBJ := $(call check_package, libpmemobj --atleast-version $(LIBPMEMOBJ_MIN_VERSION) --print-errors)$/;"	m
HAS_TO_EXIST	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	146;"	d	file:
HAVE_ATOMIC	src/config.h	200;"	d
HAVE_ATOMIC	src/config.h	204;"	d
HAVE_BACKTRACE	src/config.h	66;"	d
HAVE_EPOLL	src/config.h	76;"	d
HAVE_EVPORT	src/config.h	86;"	d
HAVE_KQUEUE	src/config.h	80;"	d
HAVE_MALLOC_SIZE	src/zmalloc.h	42;"	d
HAVE_MALLOC_SIZE	src/zmalloc.h	52;"	d
HAVE_MALLOC_SIZE	src/zmalloc.h	60;"	d
HAVE_MSG_NOSIGNAL	src/config.h	71;"	d
HAVE_PROC_MAPS	src/config.h	54;"	d
HAVE_PROC_SMAPS	src/config.h	55;"	d
HAVE_PROC_SOMAXCONN	src/config.h	56;"	d
HAVE_PROC_STAT	src/config.h	53;"	d
HAVE_SETPROCTITLE	src/setproctitle.c	42;"	d	file:
HAVE_SYNC_FILE_RANGE	src/config.h	102;"	d
HAVE_SYNC_FILE_RANGE	src/config.h	106;"	d
HAVE_TASKINFO	src/config.h	61;"	d
HDR	deps/pmdk/src/common/set.h	/^HDR(struct pool_replica *rep, unsigned p)$/;"	f
HDRN	deps/pmdk/src/common/set.h	/^HDRN(struct pool_replica *rep, unsigned p)$/;"	f
HDRNidx	deps/pmdk/src/common/set.h	/^HDRNidx(const struct pool_replica *rep, unsigned p)$/;"	f
HDRP	deps/pmdk/src/common/set.h	/^HDRP(struct pool_replica *rep, unsigned p)$/;"	f
HDRPidx	deps/pmdk/src/common/set.h	/^HDRPidx(const struct pool_replica *rep, unsigned p)$/;"	f
HDR_ZEROED	deps/pmdk/src/test/unittest/poolset.py	/^    HDR_ZEROED = 2$/;"	v	class:CREATE
HDRidx	deps/pmdk/src/common/set.h	/^HDRidx(const struct pool_replica *rep, unsigned p)$/;"	f
HEADERS	deps/jemalloc/Makefile	/^HEADERS = $(wildcard $(foreach dir,$(HEADER_DIRS),$(dir)\/*.h))$/;"	m
HEADERS	deps/pmdk/src/Makefile	/^HEADERS =\\$/;"	m
HEADERS	deps/pmdk/src/rpmem_common/Makefile	/^HEADERS = $(wildcard *.h)$/;"	m
HEADERS_DESTDIR	deps/pmdk/src/Makefile	/^HEADERS_DESTDIR = $(DESTDIR)$(includedir)$/;"	m
HEADERS_INSTALL	deps/pmdk/src/Makefile	/^HEADERS_INSTALL = include\/libpmem.h\\$/;"	m
HEADER_COMPACT	deps/pmdk/src/libpmemobj/heap_layout.h	/^	HEADER_COMPACT,$/;"	e	enum:header_type
HEADER_DIRS	deps/jemalloc/Makefile	/^HEADER_DIRS = $(srcroot)include\/jemalloc\/internal \\$/;"	m
HEADER_LEGACY	deps/pmdk/src/libpmemobj/heap_layout.h	/^	HEADER_LEGACY,$/;"	e	enum:header_type
HEADER_NONE	deps/pmdk/src/libpmemobj/heap_layout.h	/^	HEADER_NONE,$/;"	e	enum:header_type
HEADER_SIZE	deps/pmdk/src/test/unittest/utils.py	/^HEADER_SIZE = 4096$/;"	v
HEAP_ARENA_PER_THREAD	deps/pmdk/src/libpmemobj/heap.h	58;"	d
HEAP_DEFAULT_GROW_SIZE	deps/pmdk/src/libpmemobj/heap.c	61;"	d	file:
HEAP_MAJOR	deps/pmdk/src/libpmemobj/heap_layout.h	47;"	d
HEAP_MINOR	deps/pmdk/src/libpmemobj/heap_layout.h	48;"	d
HEAP_MIN_SIZE	deps/pmdk/src/libpmemobj/heap_layout.h	59;"	d
HEAP_OFFSET	deps/pmdk/src/test/obj_list/obj_list.h	49;"	d
HEAP_OFF_TO_PTR	deps/pmdk/src/libpmemobj/heap.h	53;"	d
HEAP_PTR_TO_OFF	deps/pmdk/src/libpmemobj/heap.h	54;"	d
HEAP_SIGNATURE	deps/pmdk/src/libpmemobj/heap_layout.h	55;"	d
HEAP_SIGNATURE_LEN	deps/pmdk/src/libpmemobj/heap_layout.h	54;"	d
HELGRIND	deps/pmdk/src/test/unittest/valgrind.py	/^    HELGRIND = 3$/;"	v	class:_Tool
HELGRIND	deps/pmdk/src/test/unittest/valgrind.py	/^HELGRIND = _Tool.HELGRIND$/;"	v
HEXDUMP_ROW_ASCII_LEN	deps/pmdk/src/tools/pmempool/output.c	63;"	d	file:
HEXDUMP_ROW_HEX_LEN	deps/pmdk/src/tools/pmempool/output.c	61;"	d	file:
HEXDUMP_ROW_WIDTH	deps/pmdk/src/tools/pmempool/output.c	56;"	d	file:
HIGH	src/rand.c	49;"	d	file:
HIREDIS_MAJOR	deps/hiredis/Makefile	/^HIREDIS_MAJOR=0$/;"	m
HIREDIS_MAJOR	deps/hiredis/hiredis.h	38;"	d
HIREDIS_MINOR	deps/hiredis/Makefile	/^HIREDIS_MINOR=11$/;"	m
HIREDIS_MINOR	deps/hiredis/hiredis.h	39;"	d
HIREDIS_PATCH	deps/hiredis/hiredis.h	40;"	d
HI_BIT	src/rand.c	66;"	d	file:
HLL_BITS	src/hyperloglog.c	197;"	d	file:
HLL_DENSE	src/hyperloglog.c	201;"	d	file:
HLL_DENSE_GET_REGISTER	src/hyperloglog.c	337;"	d	file:
HLL_DENSE_SET_REGISTER	src/hyperloglog.c	349;"	d	file:
HLL_DENSE_SIZE	src/hyperloglog.c	200;"	d	file:
HLL_HDR_SIZE	src/hyperloglog.c	199;"	d	file:
HLL_INVALIDATE_CACHE	src/hyperloglog.c	191;"	d	file:
HLL_MAX_ENCODING	src/hyperloglog.c	204;"	d	file:
HLL_P	src/hyperloglog.c	194;"	d	file:
HLL_P_MASK	src/hyperloglog.c	196;"	d	file:
HLL_RAW	src/hyperloglog.c	203;"	d	file:
HLL_REGISTERS	src/hyperloglog.c	195;"	d	file:
HLL_REGISTER_MAX	src/hyperloglog.c	198;"	d	file:
HLL_SPARSE	src/hyperloglog.c	202;"	d	file:
HLL_SPARSE_IS_VAL	src/hyperloglog.c	367;"	d	file:
HLL_SPARSE_IS_XZERO	src/hyperloglog.c	366;"	d	file:
HLL_SPARSE_IS_ZERO	src/hyperloglog.c	365;"	d	file:
HLL_SPARSE_VAL_BIT	src/hyperloglog.c	364;"	d	file:
HLL_SPARSE_VAL_LEN	src/hyperloglog.c	371;"	d	file:
HLL_SPARSE_VAL_MAX_LEN	src/hyperloglog.c	373;"	d	file:
HLL_SPARSE_VAL_MAX_VALUE	src/hyperloglog.c	372;"	d	file:
HLL_SPARSE_VAL_SET	src/hyperloglog.c	376;"	d	file:
HLL_SPARSE_VAL_VALUE	src/hyperloglog.c	370;"	d	file:
HLL_SPARSE_XZERO_BIT	src/hyperloglog.c	363;"	d	file:
HLL_SPARSE_XZERO_LEN	src/hyperloglog.c	369;"	d	file:
HLL_SPARSE_XZERO_MAX_LEN	src/hyperloglog.c	375;"	d	file:
HLL_SPARSE_XZERO_SET	src/hyperloglog.c	382;"	d	file:
HLL_SPARSE_ZERO_LEN	src/hyperloglog.c	368;"	d	file:
HLL_SPARSE_ZERO_MAX_LEN	src/hyperloglog.c	374;"	d	file:
HLL_SPARSE_ZERO_SET	src/hyperloglog.c	379;"	d	file:
HLL_TEST_CYCLES	src/hyperloglog.c	1350;"	d	file:
HLL_VALID_CACHE	src/hyperloglog.c	192;"	d	file:
HLOG	src/lzfP.h	55;"	d
HM_ASSERT	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	50;"	d	file:
HM_ASSERT	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	52;"	d	file:
HOME_ENV	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	55;"	d
HOME_STR_PLACEHOLDER	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	57;"	d
HSIZE	src/lzf_c.c	39;"	d	file:
HTMLFILES	deps/pmdk/doc/Makefile	/^HTMLFILES = $(MANPAGES:=.html)$/;"	m
HUGE_ALLOC_SIZE	deps/pmdk/src/test/obj_action/obj_action.c	77;"	d	file:
HUGE_MAXCLASS	deps/jemalloc/include/jemalloc/internal/size_classes.h	181;"	d
HUGE_MAXCLASS	deps/jemalloc/include/jemalloc/internal/size_classes.h	491;"	d
Handle	deps/pmdk/src/test/blk_rw_mt/blk_rw_mt.c	/^static PMEMblkpool *Handle;$/;"	v	file:
HandleAttributes	deps/pmdk/src/test/unittest/ut.c	/^	ULONG HandleAttributes;$/;"	m	struct:_SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	file:
HandleValue	deps/pmdk/src/test/unittest/ut.c	/^	HANDLE HandleValue;$/;"	m	struct:_SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	file:
Handles	deps/pmdk/src/test/unittest/ut.c	/^	SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX Handles[1];$/;"	m	struct:_SYSTEM_HANDLE_INFORMATION_EX	file:
Header	deps/lua/src/lua_struct.c	/^typedef struct Header {$/;"	s	file:
Header	deps/lua/src/lua_struct.c	/^} Header;$/;"	t	typeref:struct:Header	file:
Heap_offset	deps/pmdk/src/test/obj_list/obj_list.c	/^uint64_t *Heap_offset;$/;"	v
Heavy	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^static int Heavy;$/;"	v	file:
HighWaterHandleTableUsage	deps/pmdk/src/test/unittest/ut.c	/^	ULONG HighWaterHandleTableUsage;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
HighWaterNamePoolUsage	deps/pmdk/src/test/unittest/ut.c	/^	ULONG HighWaterNamePoolUsage;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
HighWaterNonPagedPoolUsage	deps/pmdk/src/test/unittest/ut.c	/^	ULONG HighWaterNonPagedPoolUsage;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
HighWaterNumberOfHandles	deps/pmdk/src/test/unittest/ut.c	/^	ULONG HighWaterNumberOfHandles;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
HighWaterNumberOfObjects	deps/pmdk/src/test/unittest/ut.c	/^	ULONG HighWaterNumberOfObjects;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
HighWaterPagedPoolUsage	deps/pmdk/src/test/unittest/ut.c	/^	ULONG HighWaterPagedPoolUsage;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
IDSTR	deps/jemalloc/test/include/test/SFMT-params11213.h	79;"	d
IDSTR	deps/jemalloc/test/include/test/SFMT-params1279.h	79;"	d
IDSTR	deps/jemalloc/test/include/test/SFMT-params132049.h	79;"	d
IDSTR	deps/jemalloc/test/include/test/SFMT-params19937.h	79;"	d
IDSTR	deps/jemalloc/test/include/test/SFMT-params216091.h	79;"	d
IDSTR	deps/jemalloc/test/include/test/SFMT-params2281.h	79;"	d
IDSTR	deps/jemalloc/test/include/test/SFMT-params4253.h	79;"	d
IDSTR	deps/jemalloc/test/include/test/SFMT-params44497.h	79;"	d
IDSTR	deps/jemalloc/test/include/test/SFMT-params607.h	79;"	d
IDSTR	deps/jemalloc/test/include/test/SFMT-params86243.h	79;"	d
IDX	src/lzf_c.c	51;"	d	file:
IDX	src/lzf_c.c	53;"	d	file:
IDX	src/lzf_c.c	55;"	d	file:
IF	deps/lua/src/lundump.c	31;"	d	file:
IF	deps/lua/src/lundump.c	34;"	d	file:
IGNORE_SDS	deps/pmdk/src/common/pool_hdr.h	281;"	d
IMPORTLIB	deps/jemalloc/Makefile	/^IMPORTLIB := so$/;"	m
INC	deps/lua/etc/Makefile	/^INC= $(TOP)\/src$/;"	m
INCLUDEDIR	deps/jemalloc/Makefile	/^INCLUDEDIR := $(DESTDIR)\/usr\/local\/include$/;"	m
INCLUDED_GETOPT_PORT_H	deps/pmdk/src/windows/getopt/getopt.h	29;"	d
INDENT_CHAR	deps/pmdk/src/tools/pmempool/output.c	66;"	d	file:
INDEX	deps/jemalloc/src/ctl.c	227;"	d	file:
INDEX	deps/jemalloc/src/ctl.c	513;"	d	file:
INDEXK	deps/lua/src/lopcodes.h	125;"	d
INDEX_PROTO	deps/jemalloc/src/ctl.c	48;"	d	file:
INFINITY	deps/jemalloc/test/unit/math.c	13;"	d	file:
INFINITY	deps/jemalloc/test/unit/math.c	9;"	d	file:
INITIALIZER	deps/jemalloc/src/jemalloc.c	198;"	d	file:
INITIALIZER	deps/jemalloc/src/jemalloc.c	203;"	d	file:
INIT_BUCKETS_NUM	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_internal.h	40;"	d
INIT_ENTRIES_NUM_RP	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.h	48;"	d
INIT_HTAB	src/lzfP.h	91;"	d
INIT_SETPROCTITLE_REPLACEMENT	src/config.h	126;"	d
INPUT_BUF_LEN	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	203;"	d	file:
INS	deps/pmdk/src/test/obj_critnib/obj_critnib.c	250;"	d	file:
INS	deps/pmdk/src/test/obj_critnib/obj_critnib.c	279;"	d	file:
INSERT	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	103;"	d	file:
INSTALL	deps/hiredis/Makefile	/^  INSTALL= cp -r$/;"	m
INSTALL	deps/hiredis/Makefile	/^  INSTALL?= cp -r$/;"	m
INSTALL	deps/hiredis/Makefile	/^INSTALL?= cp -a$/;"	m
INSTALL	deps/jemalloc/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	deps/lua/Makefile	/^INSTALL= install -p$/;"	m
INSTALL	src/Makefile	/^	INSTALL=cp -pf$/;"	m
INSTALL	src/Makefile	/^INSTALL=install$/;"	m
INSTALL_BIN	deps/lua/Makefile	/^INSTALL_BIN= $(INSTALL_TOP)\/bin$/;"	m
INSTALL_BIN	src/Makefile	/^INSTALL_BIN=$(PREFIX)\/bin$/;"	m
INSTALL_CMOD	deps/lua/Makefile	/^INSTALL_CMOD= $(INSTALL_TOP)\/lib\/lua\/$V$/;"	m
INSTALL_DATA	deps/lua/Makefile	/^INSTALL_DATA= $(INSTALL) -m 0644$/;"	m
INSTALL_EXEC	deps/lua/Makefile	/^INSTALL_EXEC= $(INSTALL) -m 0755$/;"	m
INSTALL_INC	deps/lua/Makefile	/^INSTALL_INC= $(INSTALL_TOP)\/include$/;"	m
INSTALL_INCLUDE_PATH	deps/hiredis/Makefile	/^INSTALL_INCLUDE_PATH= $(PREFIX)\/include\/hiredis$/;"	m
INSTALL_LIB	deps/lua/Makefile	/^INSTALL_LIB= $(INSTALL_TOP)\/lib$/;"	m
INSTALL_LIBRARY_PATH	deps/hiredis/Makefile	/^INSTALL_LIBRARY_PATH= $(PREFIX)\/lib$/;"	m
INSTALL_LMOD	deps/lua/Makefile	/^INSTALL_LMOD= $(INSTALL_TOP)\/share\/lua\/$V$/;"	m
INSTALL_MAN	deps/lua/Makefile	/^INSTALL_MAN= $(INSTALL_TOP)\/man\/man1$/;"	m
INSTALL_TARGET	deps/pmdk/src/tools/rpmemd/Makefile	/^INSTALL_TARGET=y$/;"	m
INSTALL_TARGETS	deps/pmdk/src/Makefile	/^INSTALL_TARGETS = $(TARGETS)$/;"	m
INSTALL_TOP	deps/lua/Makefile	/^INSTALL_TOP= \/usr\/local$/;"	m
INT16_C	deps/jemalloc/include/msvc_compat/C99/stdint.h	231;"	d
INT16_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	135;"	d
INT16_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	134;"	d
INT24_MAX	src/ziplist.c	135;"	d	file:
INT24_MIN	src/ziplist.c	136;"	d	file:
INT32_C	deps/jemalloc/include/msvc_compat/C99/stdint.h	232;"	d
INT32_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	137;"	d
INT32_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	136;"	d
INT64_C	deps/jemalloc/include/msvc_compat/C99/stdint.h	233;"	d
INT64_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	139;"	d
INT64_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	138;"	d
INT8_C	deps/jemalloc/include/msvc_compat/C99/stdint.h	230;"	d
INT8_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	133;"	d
INT8_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	132;"	d
INTEGER_WIDTH_TEST	deps/hiredis/test.c	165;"	d	file:
INTMAX_C	deps/jemalloc/include/msvc_compat/C99/stdint.h	241;"	d
INTMAX_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	186;"	d
INTMAX_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	185;"	d
INTPTR_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	176;"	d
INTPTR_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	180;"	d
INTPTR_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	175;"	d
INTPTR_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	179;"	d
INTSET_ENC_INT16	src/intset.c	40;"	d	file:
INTSET_ENC_INT32	src/intset.c	41;"	d	file:
INTSET_ENC_INT64	src/intset.c	42;"	d	file:
INT_ARRAY_TYPE	deps/pmdk/src/examples/libpmemobj/array/array.c	/^	INT_ARRAY_TYPE,$/;"	e	enum:array_types	file:
INT_FAST16_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	163;"	d
INT_FAST16_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	162;"	d
INT_FAST32_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	165;"	d
INT_FAST32_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	164;"	d
INT_FAST64_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	167;"	d
INT_FAST64_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	166;"	d
INT_FAST8_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	161;"	d
INT_FAST8_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	160;"	d
INT_LEAST16_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	149;"	d
INT_LEAST16_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	148;"	d
INT_LEAST32_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	151;"	d
INT_LEAST32_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	150;"	d
INT_LEAST64_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	153;"	d
INT_LEAST64_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	152;"	d
INT_LEAST8_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	147;"	d
INT_LEAST8_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	146;"	d
INVALID_CHAR_POS	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	56;"	d	file:
INVALID_CHECKSUM	deps/pmdk/src/libpmempool/check_pool_hdr.c	53;"	d	file:
INVALID_FD	deps/pmdk/src/libpmem2/config.h	41;"	d
INVALID_UUID	deps/pmdk/src/libpmempool/check_pool_hdr.c	52;"	d	file:
INV_ANS	deps/pmdk/src/tools/pmempool/common.h	114;"	d
IO_INPUT	deps/lua/src/liolib.c	23;"	d	file:
IO_OUTPUT	deps/lua/src/liolib.c	24;"	d	file:
IS	deps/lua/src/luac.c	68;"	d	file:
ISK	deps/lua/src/lopcodes.h	122;"	d
IS_BROKEN	deps/pmdk/src/libpmempool/replica.h	54;"	d
IS_CACHELINE_ALIGNED	deps/pmdk/src/libpmemobj/ulog.c	60;"	d	file:
IS_INCONSISTENT	deps/pmdk/src/libpmempool/replica.h	60;"	d
IS_INITIALIZER	deps/jemalloc/src/jemalloc.c	199;"	d	file:
IS_INITIALIZER	deps/jemalloc/src/jemalloc.c	204;"	d	file:
IS_INT64_EQUIVALENT	deps/lua/src/lua_cmsgpack.c	24;"	d	file:
IS_INT_EQUIVALENT	deps/lua/src/lua_cmsgpack.c	25;"	d	file:
IS_INT_TYPE_EQUIVALENT	deps/lua/src/lua_cmsgpack.c	22;"	d	file:
IS_LEAF	deps/pmdk/src/examples/libpmemobj/libart/art.h	187;"	d
IS_LOCKED	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	69;"	d	file:
IS_PAGE_ALIGNED	deps/pmdk/src/common/util.h	71;"	d
IS_TRANSFORMED	deps/pmdk/src/libpmempool/replica.h	76;"	d
IS_UNLOCKED	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	57;"	d	file:
I_REPLACE_SONAME_FNNAME_ZU	deps/pmdk/src/common/valgrind/valgrind.h	1104;"	d
I_REPLACE_SONAME_FNNAME_ZZ	deps/pmdk/src/common/valgrind/valgrind.h	1107;"	d
I_WRAP_SONAME_FNNAME_ZU	deps/pmdk/src/common/valgrind/valgrind.h	1086;"	d
I_WRAP_SONAME_FNNAME_ZZ	deps/pmdk/src/common/valgrind/valgrind.h	1089;"	d
Id	deps/pmdk/src/test/obj_list/obj_list.c	/^int *Id;$/;"	v
Ignore_bb	deps/pmdk/src/test/unittest/ut.c	/^static int Ignore_bb;$/;"	v	file:
InconsistentFileException	deps/pmdk/src/tools/pmreorder/reorderexceptions.py	/^class InconsistentFileException(Exception):$/;"	c
InitState	deps/pmdk/src/tools/pmreorder/statemachine.py	/^class InitState(State):$/;"	c
Instruction	deps/lua/src/llimits.h	/^typedef lu_int32 Instruction;$/;"	t
IntPoint	deps/lua/src/llimits.h	42;"	d
Inttype	deps/lua/src/lua_struct.c	/^typedef STRUCT_INT Inttype;$/;"	t	file:
InvalidAttributes	deps/pmdk/src/test/unittest/ut.c	/^	ULONG InvalidAttributes;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
Is_nfit	deps/pmdk/src/test/pmem_has_auto_flush_win/pmem_has_auto_flush_win.c	/^size_t Is_nfit = 0;$/;"	v
Is_pmem_len	deps/pmdk/src/test/util_poolset/util_poolset.c	/^size_t Is_pmem_len = 0;$/;"	v
JEMALLOC_ALIGNED	deps/jemalloc/include/jemalloc/jemalloc.h	124;"	d
JEMALLOC_ALIGNED	deps/jemalloc/include/jemalloc/jemalloc.h	150;"	d
JEMALLOC_ALIGNED	deps/jemalloc/include/jemalloc/jemalloc.h	175;"	d
JEMALLOC_ALIGNED	deps/jemalloc/include/jemalloc/jemalloc_macros.h	42;"	d
JEMALLOC_ALIGNED	deps/jemalloc/include/jemalloc/jemalloc_macros.h	68;"	d
JEMALLOC_ALIGNED	deps/jemalloc/include/jemalloc/jemalloc_macros.h	93;"	d
JEMALLOC_ALLOCATOR	deps/jemalloc/include/jemalloc/jemalloc.h	144;"	d
JEMALLOC_ALLOCATOR	deps/jemalloc/include/jemalloc/jemalloc.h	146;"	d
JEMALLOC_ALLOCATOR	deps/jemalloc/include/jemalloc/jemalloc.h	172;"	d
JEMALLOC_ALLOCATOR	deps/jemalloc/include/jemalloc/jemalloc.h	184;"	d
JEMALLOC_ALLOCATOR	deps/jemalloc/include/jemalloc/jemalloc_macros.h	102;"	d
JEMALLOC_ALLOCATOR	deps/jemalloc/include/jemalloc/jemalloc_macros.h	62;"	d
JEMALLOC_ALLOCATOR	deps/jemalloc/include/jemalloc/jemalloc_macros.h	64;"	d
JEMALLOC_ALLOCATOR	deps/jemalloc/include/jemalloc/jemalloc_macros.h	90;"	d
JEMALLOC_ALLOC_JUNK	deps/jemalloc/include/jemalloc/internal/util.h	45;"	d
JEMALLOC_ALLOC_SIZE	deps/jemalloc/include/jemalloc/jemalloc.h	125;"	d
JEMALLOC_ALLOC_SIZE	deps/jemalloc/include/jemalloc/jemalloc.h	152;"	d
JEMALLOC_ALLOC_SIZE	deps/jemalloc/include/jemalloc/jemalloc.h	155;"	d
JEMALLOC_ALLOC_SIZE	deps/jemalloc/include/jemalloc/jemalloc.h	176;"	d
JEMALLOC_ALLOC_SIZE	deps/jemalloc/include/jemalloc/jemalloc_macros.h	43;"	d
JEMALLOC_ALLOC_SIZE	deps/jemalloc/include/jemalloc/jemalloc_macros.h	70;"	d
JEMALLOC_ALLOC_SIZE	deps/jemalloc/include/jemalloc/jemalloc_macros.h	73;"	d
JEMALLOC_ALLOC_SIZE	deps/jemalloc/include/jemalloc/jemalloc_macros.h	94;"	d
JEMALLOC_ALLOC_SIZE2	deps/jemalloc/include/jemalloc/jemalloc.h	126;"	d
JEMALLOC_ALLOC_SIZE2	deps/jemalloc/include/jemalloc/jemalloc.h	153;"	d
JEMALLOC_ALLOC_SIZE2	deps/jemalloc/include/jemalloc/jemalloc.h	156;"	d
JEMALLOC_ALLOC_SIZE2	deps/jemalloc/include/jemalloc/jemalloc.h	177;"	d
JEMALLOC_ALLOC_SIZE2	deps/jemalloc/include/jemalloc/jemalloc_macros.h	44;"	d
JEMALLOC_ALLOC_SIZE2	deps/jemalloc/include/jemalloc/jemalloc_macros.h	71;"	d
JEMALLOC_ALLOC_SIZE2	deps/jemalloc/include/jemalloc/jemalloc_macros.h	74;"	d
JEMALLOC_ALLOC_SIZE2	deps/jemalloc/include/jemalloc/jemalloc_macros.h	95;"	d
JEMALLOC_ALWAYS_INLINE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	12;"	d
JEMALLOC_ALWAYS_INLINE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	20;"	d
JEMALLOC_ALWAYS_INLINE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	25;"	d
JEMALLOC_ALWAYS_INLINE_C	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	13;"	d
JEMALLOC_ALWAYS_INLINE_C	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	22;"	d
JEMALLOC_ALWAYS_INLINE_C	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	26;"	d
JEMALLOC_ARENA_C_	deps/jemalloc/src/arena.c	1;"	d	file:
JEMALLOC_ARENA_INLINE_A	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	980;"	d
JEMALLOC_ARENA_INLINE_A	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	982;"	d
JEMALLOC_ARENA_INLINE_B	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	984;"	d
JEMALLOC_ARENA_INLINE_B	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	986;"	d
JEMALLOC_ARENA_STRUCTS_A	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	417;"	d
JEMALLOC_ARENA_STRUCTS_A	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	419;"	d
JEMALLOC_ARENA_STRUCTS_B	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	421;"	d
JEMALLOC_ARENA_STRUCTS_B	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	423;"	d
JEMALLOC_ARG_CONCAT	deps/jemalloc/include/jemalloc/internal/util.h	55;"	d
JEMALLOC_ATOMIC_C_	deps/jemalloc/src/atomic.c	1;"	d	file:
JEMALLOC_ATTR	deps/jemalloc/include/jemalloc/jemalloc.h	123;"	d
JEMALLOC_ATTR	deps/jemalloc/include/jemalloc/jemalloc.h	149;"	d
JEMALLOC_ATTR	deps/jemalloc/include/jemalloc/jemalloc.h	174;"	d
JEMALLOC_ATTR	deps/jemalloc/include/jemalloc/jemalloc_macros.h	41;"	d
JEMALLOC_ATTR	deps/jemalloc/include/jemalloc/jemalloc_macros.h	67;"	d
JEMALLOC_ATTR	deps/jemalloc/include/jemalloc/jemalloc_macros.h	92;"	d
JEMALLOC_ATTR	deps/jemalloc/src/jemalloc.c	/^JEMALLOC_ATTR(malloc) JEMALLOC_ALLOC_SIZE(1)$/;"	f
JEMALLOC_ATTR	deps/jemalloc/src/jemalloc.c	/^JEMALLOC_ATTR(malloc) JEMALLOC_ALLOC_SIZE(2)$/;"	f
JEMALLOC_ATTR	deps/jemalloc/src/jemalloc.c	/^JEMALLOC_ATTR(malloc) JEMALLOC_ALLOC_SIZE2(1, 2)$/;"	f
JEMALLOC_ATTR	deps/jemalloc/src/jemalloc.c	/^JEMALLOC_ATTR(malloc)$/;"	f
JEMALLOC_ATTR	deps/jemalloc/src/jemalloc.c	/^JEMALLOC_ATTR(pure)$/;"	f
JEMALLOC_ATTR	deps/jemalloc/src/zone.c	/^JEMALLOC_ATTR(constructor)$/;"	f
JEMALLOC_BASE_C_	deps/jemalloc/src/base.c	1;"	d	file:
JEMALLOC_BITMAP_C_	deps/jemalloc/src/bitmap.c	1;"	d	file:
JEMALLOC_CACHE_OBLIVIOUS	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	237;"	d
JEMALLOC_CC_SILENCE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	128;"	d
JEMALLOC_CC_SILENCE_INIT	deps/jemalloc/include/jemalloc/internal/util.h	63;"	d
JEMALLOC_CC_SILENCE_INIT	deps/jemalloc/include/jemalloc/internal/util.h	65;"	d
JEMALLOC_CFLAGS	deps/Makefile	/^JEMALLOC_CFLAGS= -std=gnu99 -Wall -pipe -g3 -O3 -funroll-loops $(CFLAGS)$/;"	m
JEMALLOC_CHUNK_C_	deps/jemalloc/src/chunk.c	1;"	d	file:
JEMALLOC_CHUNK_DSS_C_	deps/jemalloc/src/chunk_dss.c	1;"	d	file:
JEMALLOC_CHUNK_MMAP_C_	deps/jemalloc/src/chunk_mmap.c	1;"	d	file:
JEMALLOC_CKH_C_	deps/jemalloc/src/ckh.c	37;"	d	file:
JEMALLOC_CONFIG_MALLOC_CONF	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	312;"	d
JEMALLOC_CPREFIX	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	10;"	d
JEMALLOC_CTL_C_	deps/jemalloc/src/ctl.c	1;"	d	file:
JEMALLOC_CXX_THROW	deps/jemalloc/include/jemalloc/jemalloc.h	117;"	d
JEMALLOC_CXX_THROW	deps/jemalloc/include/jemalloc/jemalloc.h	119;"	d
JEMALLOC_CXX_THROW	deps/jemalloc/include/jemalloc/jemalloc_macros.h	35;"	d
JEMALLOC_CXX_THROW	deps/jemalloc/include/jemalloc/jemalloc_macros.h	37;"	d
JEMALLOC_C_	deps/jemalloc/src/jemalloc.c	1;"	d	file:
JEMALLOC_DSS	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	165;"	d
JEMALLOC_ENABLE_INLINE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	18;"	d
JEMALLOC_EXPORT	deps/jemalloc/include/jemalloc/jemalloc.h	129;"	d
JEMALLOC_EXPORT	deps/jemalloc/include/jemalloc/jemalloc.h	131;"	d
JEMALLOC_EXPORT	deps/jemalloc/include/jemalloc/jemalloc.h	159;"	d
JEMALLOC_EXPORT	deps/jemalloc/include/jemalloc/jemalloc.h	178;"	d
JEMALLOC_EXPORT	deps/jemalloc/include/jemalloc/jemalloc_macros.h	47;"	d
JEMALLOC_EXPORT	deps/jemalloc/include/jemalloc/jemalloc_macros.h	49;"	d
JEMALLOC_EXPORT	deps/jemalloc/include/jemalloc/jemalloc_macros.h	77;"	d
JEMALLOC_EXPORT	deps/jemalloc/include/jemalloc/jemalloc_macros.h	96;"	d
JEMALLOC_EXTENT_C_	deps/jemalloc/src/extent.c	1;"	d	file:
JEMALLOC_FILL	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	168;"	d
JEMALLOC_FORMAT_PRINTF	deps/jemalloc/include/jemalloc/jemalloc.h	134;"	d
JEMALLOC_FORMAT_PRINTF	deps/jemalloc/include/jemalloc/jemalloc.h	162;"	d
JEMALLOC_FORMAT_PRINTF	deps/jemalloc/include/jemalloc/jemalloc.h	164;"	d
JEMALLOC_FORMAT_PRINTF	deps/jemalloc/include/jemalloc/jemalloc.h	166;"	d
JEMALLOC_FORMAT_PRINTF	deps/jemalloc/include/jemalloc/jemalloc.h	179;"	d
JEMALLOC_FORMAT_PRINTF	deps/jemalloc/include/jemalloc/jemalloc_macros.h	52;"	d
JEMALLOC_FORMAT_PRINTF	deps/jemalloc/include/jemalloc/jemalloc_macros.h	80;"	d
JEMALLOC_FORMAT_PRINTF	deps/jemalloc/include/jemalloc/jemalloc_macros.h	82;"	d
JEMALLOC_FORMAT_PRINTF	deps/jemalloc/include/jemalloc/jemalloc_macros.h	84;"	d
JEMALLOC_FORMAT_PRINTF	deps/jemalloc/include/jemalloc/jemalloc_macros.h	97;"	d
JEMALLOC_FREE_JUNK	deps/jemalloc/include/jemalloc/internal/util.h	48;"	d
JEMALLOC_GLIBC_MALLOC_HOOK	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	297;"	d
JEMALLOC_GLIBC_MEMALIGN_HOOK	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	300;"	d
JEMALLOC_HASH_C_	deps/jemalloc/src/hash.c	1;"	d	file:
JEMALLOC_HAS_ALLOCA_H	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	276;"	d
JEMALLOC_HAVE_ATTR	deps/jemalloc/include/jemalloc/jemalloc.h	8;"	d
JEMALLOC_HAVE_ATTR	deps/jemalloc/include/jemalloc/jemalloc_defs.h	3;"	d
JEMALLOC_HAVE_ATTR_ALLOC_SIZE	deps/jemalloc/include/jemalloc/jemalloc.h	11;"	d
JEMALLOC_HAVE_ATTR_ALLOC_SIZE	deps/jemalloc/include/jemalloc/jemalloc_defs.h	6;"	d
JEMALLOC_HAVE_ATTR_FORMAT_GNU_PRINTF	deps/jemalloc/include/jemalloc/jemalloc.h	14;"	d
JEMALLOC_HAVE_ATTR_FORMAT_GNU_PRINTF	deps/jemalloc/include/jemalloc/jemalloc_defs.h	9;"	d
JEMALLOC_HAVE_ATTR_FORMAT_PRINTF	deps/jemalloc/include/jemalloc/jemalloc.h	17;"	d
JEMALLOC_HAVE_ATTR_FORMAT_PRINTF	deps/jemalloc/include/jemalloc/jemalloc_defs.h	12;"	d
JEMALLOC_HAVE_BUILTIN_CLZ	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	57;"	d
JEMALLOC_HAVE_CLOCK_MONOTONIC	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	94;"	d
JEMALLOC_HAVE_CLOCK_MONOTONIC_COARSE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	89;"	d
JEMALLOC_HAVE_MADVISE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	255;"	d
JEMALLOC_HAVE_PTHREAD_ATFORK	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	84;"	d
JEMALLOC_HAVE_PTHREAD_MUTEX_ADAPTIVE_NP	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	303;"	d
JEMALLOC_HAVE_SECURE_GETENV	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	76;"	d
JEMALLOC_HUGE_C_	deps/jemalloc/src/huge.c	1;"	d	file:
JEMALLOC_H_	deps/jemalloc/include/jemalloc/jemalloc.h	2;"	d
JEMALLOC_H_EXTERNS	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	438;"	d
JEMALLOC_H_EXTERNS	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	533;"	d
JEMALLOC_H_EXTERNS	deps/jemalloc/test/include/test/jemalloc_test.h	69;"	d
JEMALLOC_H_EXTERNS	deps/jemalloc/test/include/test/jemalloc_test.h	77;"	d
JEMALLOC_H_INLINES	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	1286;"	d
JEMALLOC_H_INLINES	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	535;"	d
JEMALLOC_H_INLINES	deps/jemalloc/test/include/test/jemalloc_test.h	70;"	d
JEMALLOC_H_INLINES	deps/jemalloc/test/include/test/jemalloc_test.h	78;"	d
JEMALLOC_H_STRUCTS	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	399;"	d
JEMALLOC_H_STRUCTS	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	436;"	d
JEMALLOC_H_STRUCTS	deps/jemalloc/test/include/test/jemalloc_test.h	68;"	d
JEMALLOC_H_STRUCTS	deps/jemalloc/test/include/test/jemalloc_test.h	76;"	d
JEMALLOC_H_TYPES	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	186;"	d
JEMALLOC_H_TYPES	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	397;"	d
JEMALLOC_H_TYPES	deps/jemalloc/test/include/test/jemalloc_test.h	67;"	d
JEMALLOC_H_TYPES	deps/jemalloc/test/include/test/jemalloc_test.h	75;"	d
JEMALLOC_INLINE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	14;"	d
JEMALLOC_INLINE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	28;"	d
JEMALLOC_INLINE_C	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	15;"	d
JEMALLOC_INLINE_C	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	29;"	d
JEMALLOC_INTERNAL_DECLS_H	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h	2;"	d
JEMALLOC_INTERNAL_DEFS_H_	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	3;"	d
JEMALLOC_INTERNAL_FFS	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	225;"	d
JEMALLOC_INTERNAL_FFSL	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	224;"	d
JEMALLOC_INTERNAL_FFSLL	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	223;"	d
JEMALLOC_INTERNAL_H	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	2;"	d
JEMALLOC_INTERNAL_UNREACHABLE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	217;"	d
JEMALLOC_JET	deps/jemalloc/test/include/test/jemalloc_test.h	40;"	d
JEMALLOC_JET	deps/jemalloc/test/include/test/jemalloc_test.h	92;"	d
JEMALLOC_JET	deps/jemalloc/test/include/test/jemalloc_test.h	95;"	d
JEMALLOC_LDFLAGS	deps/Makefile	/^JEMALLOC_LDFLAGS= $(LDFLAGS)$/;"	m
JEMALLOC_MANGLE	deps/jemalloc/test/include/test/jemalloc_test.h	41;"	d
JEMALLOC_MANGLE	deps/jemalloc/test/include/test/jemalloc_test.h	51;"	d
JEMALLOC_MANGLE	deps/jemalloc/test/include/test/jemalloc_test.h	98;"	d
JEMALLOC_MAPS_COALESCE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	201;"	d
JEMALLOC_MB_C_	deps/jemalloc/src/mb.c	1;"	d	file:
JEMALLOC_MUTEX_C_	deps/jemalloc/src/mutex.c	1;"	d	file:
JEMALLOC_N	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	13;"	d
JEMALLOC_N	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	19;"	d
JEMALLOC_N	deps/jemalloc/test/include/test/jemalloc_test.h	64;"	d
JEMALLOC_NOINLINE	deps/jemalloc/include/jemalloc/jemalloc.h	135;"	d
JEMALLOC_NOINLINE	deps/jemalloc/include/jemalloc/jemalloc.h	168;"	d
JEMALLOC_NOINLINE	deps/jemalloc/include/jemalloc/jemalloc.h	180;"	d
JEMALLOC_NOINLINE	deps/jemalloc/include/jemalloc/jemalloc_macros.h	53;"	d
JEMALLOC_NOINLINE	deps/jemalloc/include/jemalloc/jemalloc_macros.h	86;"	d
JEMALLOC_NOINLINE	deps/jemalloc/include/jemalloc/jemalloc_macros.h	98;"	d
JEMALLOC_NOTHROW	deps/jemalloc/include/jemalloc/jemalloc.h	137;"	d
JEMALLOC_NOTHROW	deps/jemalloc/include/jemalloc/jemalloc.h	139;"	d
JEMALLOC_NOTHROW	deps/jemalloc/include/jemalloc/jemalloc.h	169;"	d
JEMALLOC_NOTHROW	deps/jemalloc/include/jemalloc/jemalloc.h	181;"	d
JEMALLOC_NOTHROW	deps/jemalloc/include/jemalloc/jemalloc_macros.h	55;"	d
JEMALLOC_NOTHROW	deps/jemalloc/include/jemalloc/jemalloc_macros.h	57;"	d
JEMALLOC_NOTHROW	deps/jemalloc/include/jemalloc/jemalloc_macros.h	87;"	d
JEMALLOC_NOTHROW	deps/jemalloc/include/jemalloc/jemalloc_macros.h	99;"	d
JEMALLOC_NO_DEMANGLE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	11;"	d
JEMALLOC_NO_DEMANGLE	deps/jemalloc/include/jemalloc/jemalloc.h	321;"	d
JEMALLOC_NO_DEMANGLE	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	10;"	d
JEMALLOC_NO_DEMANGLE	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	10;"	d
JEMALLOC_NO_RENAME	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	15;"	d
JEMALLOC_NO_RENAME	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	17;"	d
JEMALLOC_OVERRIDE_MEMALIGN	deps/jemalloc/include/jemalloc/jemalloc.h	23;"	d
JEMALLOC_OVERRIDE_MEMALIGN	deps/jemalloc/include/jemalloc/jemalloc_defs.h	18;"	d
JEMALLOC_OVERRIDE_VALLOC	deps/jemalloc/include/jemalloc/jemalloc.h	24;"	d
JEMALLOC_OVERRIDE_VALLOC	deps/jemalloc/include/jemalloc/jemalloc_defs.h	19;"	d
JEMALLOC_PAGES_C_	deps/jemalloc/src/pages.c	1;"	d	file:
JEMALLOC_PREFIX	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	9;"	d
JEMALLOC_PRIVATE_NAMESPACE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	18;"	d
JEMALLOC_PRNG_C_	deps/jemalloc/src/prng.c	1;"	d	file:
JEMALLOC_PROC_SYS_VM_OVERCOMMIT_MEMORY	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	252;"	d
JEMALLOC_PROF_C_	deps/jemalloc/src/prof.c	1;"	d	file:
JEMALLOC_PURGE_MADVISE_DONTNEED	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	267;"	d
JEMALLOC_PURGE_MADVISE_FREE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	266;"	d
JEMALLOC_QUARANTINE_C_	deps/jemalloc/src/quarantine.c	1;"	d	file:
JEMALLOC_RESTRICT_RETURN	deps/jemalloc/include/jemalloc/jemalloc.h	142;"	d
JEMALLOC_RESTRICT_RETURN	deps/jemalloc/include/jemalloc/jemalloc.h	171;"	d
JEMALLOC_RESTRICT_RETURN	deps/jemalloc/include/jemalloc/jemalloc.h	183;"	d
JEMALLOC_RESTRICT_RETURN	deps/jemalloc/include/jemalloc/jemalloc_macros.h	101;"	d
JEMALLOC_RESTRICT_RETURN	deps/jemalloc/include/jemalloc/jemalloc_macros.h	60;"	d
JEMALLOC_RESTRICT_RETURN	deps/jemalloc/include/jemalloc/jemalloc_macros.h	89;"	d
JEMALLOC_RTREE_C_	deps/jemalloc/src/rtree.c	1;"	d	file:
JEMALLOC_SECTION	deps/jemalloc/include/jemalloc/jemalloc.h	141;"	d
JEMALLOC_SECTION	deps/jemalloc/include/jemalloc/jemalloc.h	170;"	d
JEMALLOC_SECTION	deps/jemalloc/include/jemalloc/jemalloc.h	182;"	d
JEMALLOC_SECTION	deps/jemalloc/include/jemalloc/jemalloc_macros.h	100;"	d
JEMALLOC_SECTION	deps/jemalloc/include/jemalloc/jemalloc_macros.h	59;"	d
JEMALLOC_SECTION	deps/jemalloc/include/jemalloc/jemalloc_macros.h	88;"	d
JEMALLOC_SPIN_C_	deps/jemalloc/src/spin.c	1;"	d	file:
JEMALLOC_STATS	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	140;"	d
JEMALLOC_STATS_C_	deps/jemalloc/src/stats.c	1;"	d	file:
JEMALLOC_TCACHE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	159;"	d
JEMALLOC_TCACHE_C_	deps/jemalloc/src/tcache.c	1;"	d	file:
JEMALLOC_TEST_JUNK_OPT	deps/jemalloc/test/unit/junk.c	5;"	d	file:
JEMALLOC_TEST_JUNK_OPT	deps/jemalloc/test/unit/junk_alloc.c	1;"	d	file:
JEMALLOC_TEST_JUNK_OPT	deps/jemalloc/test/unit/junk_alloc.c	3;"	d	file:
JEMALLOC_TEST_JUNK_OPT	deps/jemalloc/test/unit/junk_free.c	1;"	d	file:
JEMALLOC_TEST_JUNK_OPT	deps/jemalloc/test/unit/junk_free.c	3;"	d	file:
JEMALLOC_THP	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	273;"	d
JEMALLOC_THREADED_INIT	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	115;"	d
JEMALLOC_TICKER_C_	deps/jemalloc/src/ticker.c	1;"	d	file:
JEMALLOC_TLS	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	211;"	d
JEMALLOC_TLS_MODEL	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	125;"	d
JEMALLOC_TSD_C_	deps/jemalloc/src/tsd.c	1;"	d	file:
JEMALLOC_USABLE_SIZE_CONST	deps/jemalloc/include/jemalloc/jemalloc.h	33;"	d
JEMALLOC_USABLE_SIZE_CONST	deps/jemalloc/include/jemalloc/jemalloc_defs.h	28;"	d
JEMALLOC_USE_CXX_THROW	deps/jemalloc/include/jemalloc/jemalloc.h	40;"	d
JEMALLOC_USE_CXX_THROW	deps/jemalloc/include/jemalloc/jemalloc_defs.h	35;"	d
JEMALLOC_USE_SYSCALL	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	71;"	d
JEMALLOC_UTIL_C_	deps/jemalloc/src/util.c	27;"	d	file:
JEMALLOC_VALGRIND	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	174;"	d
JEMALLOC_VALGRIND_FREE	deps/jemalloc/include/jemalloc/internal/valgrind.h	104;"	d
JEMALLOC_VALGRIND_FREE	deps/jemalloc/include/jemalloc/internal/valgrind.h	91;"	d
JEMALLOC_VALGRIND_MAKE_MEM_DEFINED	deps/jemalloc/include/jemalloc/internal/valgrind.h	24;"	d
JEMALLOC_VALGRIND_MAKE_MEM_DEFINED	deps/jemalloc/include/jemalloc/internal/valgrind.h	99;"	d
JEMALLOC_VALGRIND_MAKE_MEM_NOACCESS	deps/jemalloc/include/jemalloc/internal/valgrind.h	16;"	d
JEMALLOC_VALGRIND_MAKE_MEM_NOACCESS	deps/jemalloc/include/jemalloc/internal/valgrind.h	97;"	d
JEMALLOC_VALGRIND_MAKE_MEM_UNDEFINED	deps/jemalloc/include/jemalloc/internal/valgrind.h	20;"	d
JEMALLOC_VALGRIND_MAKE_MEM_UNDEFINED	deps/jemalloc/include/jemalloc/internal/valgrind.h	98;"	d
JEMALLOC_VALGRIND_MALLOC	deps/jemalloc/include/jemalloc/internal/valgrind.h	100;"	d
JEMALLOC_VALGRIND_MALLOC	deps/jemalloc/include/jemalloc/internal/valgrind.h	33;"	d
JEMALLOC_VALGRIND_QUARANTINE_DEFAULT	deps/jemalloc/include/jemalloc/internal/quarantine.h	8;"	d
JEMALLOC_VALGRIND_REALLOC	deps/jemalloc/include/jemalloc/internal/valgrind.h	101;"	d
JEMALLOC_VALGRIND_REALLOC	deps/jemalloc/include/jemalloc/internal/valgrind.h	51;"	d
JEMALLOC_VALGRIND_REALLOC_MOVED_maybe	deps/jemalloc/include/jemalloc/internal/valgrind.h	41;"	d
JEMALLOC_VALGRIND_REALLOC_MOVED_no	deps/jemalloc/include/jemalloc/internal/valgrind.h	39;"	d
JEMALLOC_VALGRIND_REALLOC_OLD_PTR_NULL_maybe	deps/jemalloc/include/jemalloc/internal/valgrind.h	49;"	d
JEMALLOC_VALGRIND_REALLOC_OLD_PTR_NULL_no	deps/jemalloc/include/jemalloc/internal/valgrind.h	47;"	d
JEMALLOC_VALGRIND_REALLOC_PTR_NULL_maybe	deps/jemalloc/include/jemalloc/internal/valgrind.h	45;"	d
JEMALLOC_VALGRIND_REALLOC_PTR_NULL_no	deps/jemalloc/include/jemalloc/internal/valgrind.h	43;"	d
JEMALLOC_VERSION	deps/jemalloc/include/jemalloc/jemalloc.h	89;"	d
JEMALLOC_VERSION	deps/jemalloc/include/jemalloc/jemalloc_macros.h	7;"	d
JEMALLOC_VERSION_BUGFIX	deps/jemalloc/include/jemalloc/jemalloc.h	92;"	d
JEMALLOC_VERSION_BUGFIX	deps/jemalloc/include/jemalloc/jemalloc_macros.h	10;"	d
JEMALLOC_VERSION_GID	deps/jemalloc/include/jemalloc/jemalloc.h	94;"	d
JEMALLOC_VERSION_GID	deps/jemalloc/include/jemalloc/jemalloc_macros.h	12;"	d
JEMALLOC_VERSION_MAJOR	deps/jemalloc/include/jemalloc/jemalloc.h	90;"	d
JEMALLOC_VERSION_MAJOR	deps/jemalloc/include/jemalloc/jemalloc_macros.h	8;"	d
JEMALLOC_VERSION_MINOR	deps/jemalloc/include/jemalloc/jemalloc.h	91;"	d
JEMALLOC_VERSION_MINOR	deps/jemalloc/include/jemalloc/jemalloc_macros.h	9;"	d
JEMALLOC_VERSION_NREV	deps/jemalloc/include/jemalloc/jemalloc.h	93;"	d
JEMALLOC_VERSION_NREV	deps/jemalloc/include/jemalloc/jemalloc_macros.h	11;"	d
JEMALLOC_WITNESS_C_	deps/jemalloc/src/witness.c	1;"	d	file:
Jmp	deps/pmdk/src/test/log_recovery/log_recovery.c	/^static ut_jmp_buf_t Jmp;$/;"	v	file:
Jmp	deps/pmdk/src/test/log_walker/log_walker.c	/^static ut_jmp_buf_t Jmp;$/;"	v	file:
Jmp	deps/pmdk/src/test/mmap/mmap.c	/^static ut_jmp_buf_t Jmp;$/;"	v	file:
Jmp	deps/pmdk/src/test/obj_lane/obj_lane.c	/^static ut_jmp_buf_t Jmp;$/;"	v	file:
Jmp	deps/pmdk/src/test/pmem_map_file/pmem_map_file.c	/^static ut_jmp_buf_t Jmp;$/;"	v	file:
Jmp	deps/pmdk/src/test/pmem_map_file_win/pmem_map_file_win.c	/^ut_jmp_buf_t Jmp;$/;"	v
Jmp	deps/pmdk/src/test/signal_handle/signal_handle.c	/^ut_jmp_buf_t Jmp;$/;"	v
K	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	87;"	d	file:
KBx	deps/lua/src/lvm.c	355;"	d	file:
KEYWEAK	deps/lua/src/lgc.c	47;"	d	file:
KEYWEAKBIT	deps/lua/src/lgc.h	58;"	d
KEY_ACTION	deps/linenoise/linenoise.c	/^enum KEY_ACTION{$/;"	g	file:
KEY_BENCHMARK	deps/pmdk/src/benchmarks/config_reader.cpp	46;"	d	file:
KEY_BENCHMARK	deps/pmdk/src/benchmarks/config_reader_win.cpp	46;"	d	file:
KEY_GROUP	deps/pmdk/src/benchmarks/config_reader.cpp	47;"	d	file:
KEY_GROUP	deps/pmdk/src/benchmarks/config_reader_win.cpp	47;"	d	file:
KEY_HOOK	deps/lua/src/ldblib.c	/^static const char KEY_HOOK = 'h';$/;"	v	file:
KEY_NULL	deps/linenoise/linenoise.c	/^	KEY_NULL = 0,	    \/* NULL *\/$/;"	e	enum:KEY_ACTION	file:
KEY_SIZE	deps/jemalloc/test/unit/hash.c	154;"	d	file:
KEY_SIZE	deps/jemalloc/test/unit/hash.c	62;"	d	file:
KILOBYTE	deps/pmdk/src/test/pmem_unmap/pmem_unmap.c	39;"	d	file:
KILOBYTE	deps/pmdk/src/test/win_mmap_dtor/win_mmap_dtor.c	41;"	d	file:
KILOBYTE	deps/pmdk/src/test/win_poolset_unmap/win_poolset_unmap.c	44;"	d	file:
KQI	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	49;"	d
KQU	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	48;"	d
KSMAX	deps/jemalloc/test/unit/util.c	134;"	d	file:
KSMAX	deps/jemalloc/test/unit/util.c	78;"	d	file:
KUMAX	deps/jemalloc/test/unit/util.c	133;"	d	file:
KUMAX	deps/jemalloc/test/unit/util.c	77;"	d	file:
KV_FIRST	deps/pmdk/src/benchmarks/config_reader_win.cpp	58;"	d	file:
KV_LIST	deps/pmdk/src/benchmarks/config_reader_win.cpp	68;"	d	file:
KV_LIST_EMPTY	deps/pmdk/src/benchmarks/config_reader_win.cpp	57;"	d	file:
KV_LIST_INIT	deps/pmdk/src/benchmarks/config_reader_win.cpp	65;"	d	file:
KV_LIST_KEY	deps/pmdk/src/benchmarks/config_reader_win.cpp	63;"	d	file:
KV_LIST_NEXT	deps/pmdk/src/benchmarks/config_reader_win.cpp	59;"	d	file:
KV_LIST_VALUE	deps/pmdk/src/benchmarks/config_reader_win.cpp	64;"	d	file:
KV_PROTOCOL_H	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	38;"	d
KV_SIZE	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	428;"	d	file:
KZI	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	47;"	d
KZU	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	46;"	d
KiB	deps/pmdk/src/test/unittest/utils.py	/^KiB = 2 ** 10$/;"	v
L	deps/lua/src/lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer
L	deps/lua/src/ldump.c	/^ lua_State* L;$/;"	m	struct:__anon34	file:
L	deps/lua/src/llex.h	/^  struct lua_State *L;$/;"	m	struct:LexState	typeref:struct:LexState::lua_State
L	deps/lua/src/lparser.h	/^  struct lua_State *L;  \/* copy of the Lua state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::lua_State
L	deps/lua/src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:
L	deps/lua/src/lundump.c	/^ lua_State* L;$/;"	m	struct:__anon39	file:
L	deps/lua/src/lzio.h	/^  lua_State *L;			\/* Lua state (for reader) *\/$/;"	m	struct:Zio
LANE_ALIGN	deps/pmdk/src/librpmem/rpmem_fip.c	/^} LANE_ALIGN;$/;"	v	typeref:struct:rpmem_fip_plane
LANE_ALIGN	deps/pmdk/src/librpmem/rpmem_fip.c	79;"	d	file:
LANE_ALIGN_SIZE	deps/pmdk/src/librpmem/rpmem_fip.c	78;"	d	file:
LANE_CLEANUP	deps/pmdk/src/test/obj_lane/obj_lane.c	/^	LANE_CLEANUP$/;"	e	enum:thread_work_type	file:
LANE_INFO_DESTROY	deps/pmdk/src/test/obj_lane/obj_lane.c	/^	LANE_INFO_DESTROY,$/;"	e	enum:thread_work_type	file:
LANE_JUMP	deps/pmdk/src/libpmemobj/lane.h	53;"	d
LANE_PRIMARY_ATTEMPTS	deps/pmdk/src/libpmemobj/lane.h	60;"	d
LANE_REDO_EXTERNAL_SIZE	deps/pmdk/src/libpmemobj/lane.h	89;"	d
LANE_REDO_INTERNAL_SIZE	deps/pmdk/src/libpmemobj/lane.h	91;"	d
LANE_TOTAL_SIZE	deps/pmdk/src/libpmemobj/lane.h	64;"	d
LANE_UNDO_SIZE	deps/pmdk/src/libpmemobj/lane.h	85;"	d
LANG_NUM	deps/pmdk/src/examples/librpmem/hello.c	54;"	d	file:
LARGE_MINCLASS	deps/jemalloc/include/jemalloc/internal/arena.h	4;"	d
LARGE_SNAPSHOT	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	340;"	d	file:
LAST_TAG	deps/lua/src/lobject.h	20;"	d
LATENCY_DIST_DEFAULT_INTERVAL	src/redis-cli.c	1519;"	d	file:
LATENCY_GRAPH_COLS	src/latency.c	515;"	d	file:
LATENCY_HISTORY_DEFAULT_INTERVAL	src/redis-cli.c	1472;"	d	file:
LATENCY_SAMPLE_RATE	src/redis-cli.c	1471;"	d	file:
LATENCY_TS_LEN	src/latency.h	37;"	d
LAYOUT	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	47;"	d	file:
LAYOUT	deps/pmdk/src/test/obj_ctl_alignment/obj_ctl_alignment.c	39;"	d	file:
LAYOUT	deps/pmdk/src/test/obj_ctl_alloc_class/obj_ctl_alloc_class.c	40;"	d	file:
LAYOUT	deps/pmdk/src/test/obj_ctl_alloc_class_config/obj_ctl_alloc_class_config.c	39;"	d	file:
LAYOUT	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	60;"	d	file:
LAYOUT	deps/pmdk/src/test/obj_ctl_config/obj_ctl_config.c	40;"	d	file:
LAYOUT	deps/pmdk/src/test/obj_ctl_debug/obj_ctl_debug.c	40;"	d	file:
LAYOUT	deps/pmdk/src/test/obj_ctl_heap_size/obj_ctl_heap_size.c	39;"	d	file:
LAYOUT	deps/pmdk/src/test/obj_pool_lock/obj_pool_lock.c	39;"	d	file:
LAYOUT_NAME	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	50;"	d	file:
LAYOUT_NAME	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	51;"	d	file:
LAYOUT_NAME	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	50;"	d	file:
LAYOUT_NAME	deps/pmdk/src/examples/libpmemobj/manpage.c	52;"	d	file:
LAYOUT_NAME	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	62;"	d	file:
LAYOUT_NAME	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	51;"	d	file:
LAYOUT_NAME	deps/pmdk/src/examples/libpmemobj/setjmp.c	47;"	d	file:
LAYOUT_NAME	deps/pmdk/src/examples/libpmemobj/string_store/layout.h	37;"	d
LAYOUT_NAME	deps/pmdk/src/examples/libpmemobj/string_store_tx/layout.h	37;"	d
LAYOUT_NAME	deps/pmdk/src/test/obj_action/obj_action.c	40;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_badblock/obj_badblock.c	43;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_debug/obj_debug.c	48;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_direct/obj_direct.c	42;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_first_next/obj_first_next.c	41;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_fragmentation/obj_fragmentation.c	43;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	47;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_heap_state/obj_heap_state.c	41;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	57;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_locks/obj_locks.c	42;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	43;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_oid_thread/obj_oid_thread.c	42;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_out_of_memory/obj_out_of_memory.c	40;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_pmalloc_oom_mt/obj_pmalloc_oom_mt.c	43;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_pool_lookup/obj_pool_lookup.c	39;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_recreate/obj_recreate.c	52;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_reorder_basic/obj_reorder_basic.c	46;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_strdup/obj_strdup.c	43;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_toid/obj_toid.c	39;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	44;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	44;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	45;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	38;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	39;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	43;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	40;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	38;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_tx_locks_abort/obj_tx_locks_abort.c	38;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	42;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	42;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_tx_user_data/obj_tx_user_data.c	38;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	55;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/obj_zones/obj_zones.c	42;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/pmem_deep_persist/pmem_deep_persist.c	54;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/remote_obj_basic/remote_obj_basic.c	41;"	d	file:
LAYOUT_NAME	deps/pmdk/src/test/win_poolset_unmap/win_poolset_unmap.c	47;"	d	file:
LAYOUT_NAME	deps/pmdk/utils/docker/test_package/test_package.c	37;"	d	file:
LAZY_LOAD_BIG_SIZE	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	47;"	d	file:
LAZY_LOAD_SIZE	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	46;"	d	file:
LClosure	deps/lua/src/lobject.h	/^typedef struct LClosure {$/;"	s
LClosure	deps/lua/src/lobject.h	/^} LClosure;$/;"	t	typeref:struct:LClosure
LDB_BREAKPOINTS_MAX	src/scripting.c	58;"	d	file:
LDB_MAX_LEN_DEFAULT	src/scripting.c	59;"	d	file:
LDB_MAX_VALUES_DEPTH	src/scripting.c	1853;"	d	file:
LDFLAGS	deps/jemalloc/Makefile	/^LDFLAGS := $/;"	m
LDFLAGS	deps/pmdk/src/benchmarks/Makefile	/^LDFLAGS = -L$(LIBS_PATH) $(OS_LIBS)$/;"	m
LDTARGET	deps/jemalloc/Makefile	/^LDTARGET = -o $@$/;"	m
LE	deps/pmdk/src/test/obj_critnib/obj_critnib.c	271;"	d	file:
LE	deps/pmdk/src/test/obj_critnib/obj_critnib.c	282;"	d	file:
LERR	deps/pmdk/src/librpmem/rpmem_util.h	/^	LERR = 1,$/;"	e	enum:__anon97
LEVELS1	deps/lua/src/ldblib.c	319;"	d	file:
LEVELS2	deps/lua/src/ldblib.c	320;"	d	file:
LFIELDS_PER_FLUSH	deps/lua/src/lopcodes.h	265;"	d
LG	deps/lua/src/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	deps/lua/src/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LG_BITMAP_GROUP_NBITS	deps/jemalloc/include/jemalloc/internal/bitmap.h	14;"	d
LG_BITMAP_MAXBITS	deps/jemalloc/include/jemalloc/internal/bitmap.h	5;"	d
LG_CACHELINE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	315;"	d
LG_CHUNK_DEFAULT	deps/jemalloc/include/jemalloc/internal/chunk.h	8;"	d
LG_CKH_BUCKET_CELLS	deps/jemalloc/include/jemalloc/internal/ckh.h	20;"	d
LG_DIRTY_MULT_DEFAULT	deps/jemalloc/include/jemalloc/internal/arena.h	24;"	d
LG_LARGE_MINCLASS	deps/jemalloc/include/jemalloc/internal/size_classes.h	180;"	d
LG_LARGE_MINCLASS	deps/jemalloc/include/jemalloc/internal/size_classes.h	490;"	d
LG_MAXOBJS_INIT	deps/jemalloc/include/jemalloc/internal/quarantine.h	23;"	d
LG_PAGE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	192;"	d
LG_PROF_INTERVAL_DEFAULT	deps/jemalloc/include/jemalloc/internal/prof.h	17;"	d
LG_PROF_SAMPLE_DEFAULT	deps/jemalloc/include/jemalloc/internal/prof.h	16;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	234;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	237;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	240;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	243;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	246;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	249;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	252;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	255;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	258;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	261;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	264;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	267;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	270;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	273;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	276;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	279;"	d
LG_QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	189;"	d
LG_RTREE_BITS_PER_LEVEL	deps/jemalloc/include/jemalloc/internal/rtree.h	17;"	d
LG_RUN_MAXREGS	deps/jemalloc/include/jemalloc/internal/arena.h	7;"	d
LG_SIZEOF_BITMAP	deps/jemalloc/include/jemalloc/internal/bitmap.h	11;"	d
LG_SIZEOF_INT	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	285;"	d
LG_SIZEOF_INTMAX_T	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	294;"	d
LG_SIZEOF_LONG	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	288;"	d
LG_SIZEOF_LONG_LONG	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	291;"	d
LG_SIZEOF_PTR	deps/jemalloc/include/jemalloc/jemalloc.h	51;"	d
LG_SIZEOF_PTR	deps/jemalloc/include/jemalloc/jemalloc_defs.h	46;"	d
LG_SIZEOF_PTR_WIN	deps/jemalloc/include/jemalloc/jemalloc.h	44;"	d
LG_SIZEOF_PTR_WIN	deps/jemalloc/include/jemalloc/jemalloc.h	46;"	d
LG_SIZEOF_PTR_WIN	deps/jemalloc/include/jemalloc/jemalloc_defs.h	39;"	d
LG_SIZEOF_PTR_WIN	deps/jemalloc/include/jemalloc/jemalloc_defs.h	41;"	d
LG_SIZE_CLASS_GROUP	deps/jemalloc/include/jemalloc/internal/size_classes.h	32;"	d
LG_TCACHE_MAXCLASS_DEFAULT	deps/jemalloc/include/jemalloc/internal/tcache.h	37;"	d
LG_TINY_MAXCLASS	deps/jemalloc/include/jemalloc/internal/size_classes.h	177;"	d
LG_TINY_MAXCLASS	deps/jemalloc/include/jemalloc/internal/size_classes.h	487;"	d
LG_TINY_MIN	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_defs.h	183;"	d
LHS_assign	deps/lua/src/lparser.c	/^struct LHS_assign {$/;"	s	file:
LIB	deps/lua/etc/Makefile	/^LIB= $(TOP)\/src$/;"	m
LIBDIR	deps/jemalloc/Makefile	/^LIBDIR := $(DESTDIR)\/usr\/local\/lib$/;"	m
LIBFABRIC_FORK_UNSAFE_VAR	deps/pmdk/src/librpmem/rpmem_fip.c	2006;"	d	file:
LIBJEMALLOC	deps/jemalloc/Makefile	/^LIBJEMALLOC := $(LIBPREFIX)jemalloc$(install_suffix)$/;"	m
LIBMAP	deps/pmdk/src/benchmarks/Makefile	/^LIBMAP=$(LIBMAP_DIR)\/libmap.a$/;"	m
LIBMAP_DIR	deps/pmdk/src/benchmarks/Makefile	/^LIBMAP_DIR=..\/examples\/libpmemobj\/map$/;"	m
LIBNAME	deps/hiredis/Makefile	/^LIBNAME=libhiredis$/;"	m
LIBPMEM	deps/pmdk/src/test/out_err_mt/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmem_has_auto_flush/Makefile	/^LIBPMEM=internal-debug$/;"	m
LIBPMEM	deps/pmdk/src/test/pmem_include/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmem_is_pmem/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmem_map_file/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmem_map_file_trunc/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmem_memcpy/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmem_memmove/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmem_memset/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmem_movnt/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmem_movnt_align/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmem_unmap/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmem_valgr_simple/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmreorder_flushes/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmreorder_simple/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/pmreorder_stack/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/rpmemd_util/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/set_funcs/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/anonymous_mmap/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/bttcreate/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/cmpmap/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/ddmap/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/extents/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/fallocate_detect/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/obj_verify/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/pmemalloc/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/pmemdetect/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/pmemobjcli/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/pmemspoil/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/pmemwrite/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/tools/usc_permission_check/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/traces_pmem/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/test/util_sds/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/tools/daxio/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/tools/pmempool/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM	deps/pmdk/src/tools/rpmemd/Makefile	/^LIBPMEM=y$/;"	m
LIBPMEM2	deps/pmdk/src/test/pmem2_include/Makefile	/^LIBPMEM2=y$/;"	m
LIBPMEM2_H	deps/pmdk/src/include/libpmem2.h	44;"	d
LIBPMEMBLK	deps/pmdk/src/test/blk_include/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/blk_nblock/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/blk_non_zero/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/blk_pool/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/blk_pool_lock/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/blk_recovery/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/blk_rw/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/blk_rw_mt/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/compat_incompat_features/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/ctl_cow/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/ctl_prefault/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/out_err_mt/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/set_funcs/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/tools/pmemwrite/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/test/traces_pmem/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK	deps/pmdk/src/tools/pmempool/Makefile	/^LIBPMEMBLK=y$/;"	m
LIBPMEMBLK_H	deps/pmdk/src/include/libpmemblk.h	44;"	d
LIBPMEMBLK_PRIV	deps/pmdk/src/test/tools/ddmap/Makefile	/^LIBPMEMBLK_PRIV=btt_info_convert2h$/;"	m
LIBPMEMBLK_PRIV	deps/pmdk/src/test/tools/pmemdetect/Makefile	/^LIBPMEMBLK_PRIV=btt_info_convert2h$/;"	m
LIBPMEMBLK_PRIV	deps/pmdk/src/test/tools/pmemobjcli/Makefile	/^LIBPMEMBLK_PRIV=btt_info_convert2h$/;"	m
LIBPMEMBLK_PRIV	deps/pmdk/src/test/tools/pmemspoil/Makefile	/^LIBPMEMBLK_PRIV=btt_info_convert2h$/;"	m
LIBPMEMBLK_PRIV	deps/pmdk/src/test/tools/pmemwrite/Makefile	/^LIBPMEMBLK_PRIV=btt_info_convert2h$/;"	m
LIBPMEMBLK_PRIV	deps/pmdk/src/tools/pmempool/Makefile	/^LIBPMEMBLK_PRIV=btt_init btt_write btt_fini btt_info_convert2h\\$/;"	m
LIBPMEMBLK_PRIV	deps/pmdk/src/tools/rpmemd/Makefile	/^LIBPMEMBLK_PRIV=btt_info_convert2h$/;"	m
LIBPMEMBLK_PRIV_FUNCS	deps/pmdk/src/libpmempool/Makefile	/^LIBPMEMBLK_PRIV_FUNCS=btt_info_set btt_arena_datasize btt_flog_size\\$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/arch_flags/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/checksum/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/libpmempool_feature/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/obj_critnib_mt/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/obj_pmalloc_rand_mt/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/obj_recovery/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/obj_reorder_basic/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/obj_sync/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/obj_tx_add_range/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/obj_tx_add_range_direct/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/obj_tx_alloc/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/obj_tx_free/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/obj_tx_invalid/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/obj_tx_realloc/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/out_err/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/out_err_mt/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/pmem2_config/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/pmem2_map/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/pmem_has_auto_flush/Makefile	/^LIBPMEMCOMMON=internal-debug$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/pmem_is_pmem_posix/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/pmem_memcpy/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/pmem_memmove/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/pmem_memset/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/pmreorder_flushes/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/pmreorder_simple/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/pmreorder_stack/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/remote_basic/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/rpmem_basic/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/rpmem_fip/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/rpmem_obc/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/rpmem_obc_int/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/rpmemd_config/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/rpmemd_db/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/rpmemd_dbg/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/rpmemd_log/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/rpmemd_obc/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/tools/anonymous_mmap/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/tools/bttcreate/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/tools/cmpmap/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/tools/extents/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/tools/fallocate_detect/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/tools/obj_verify/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/tools/pmemalloc/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/tools/usc_permission_check/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/traces/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/traces_custom_function/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_badblock/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_cpuid/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_ctl/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_extent/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_file_create/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_file_open/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_is_absolute/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_is_poolset/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_is_zeroed/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_map_proc/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_parse_size/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_pool_hdr/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_poolset/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_poolset_foreach/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_poolset_parse/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_poolset_size/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_sds/Makefile	/^LIBPMEMCOMMON=internal-debug$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_uuid_generate/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_vec/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/test/util_vecq/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMCOMMON	deps/pmdk/src/tools/daxio/Makefile	/^LIBPMEMCOMMON=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/compat_incompat_features/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/ctl_cow/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/ctl_prefault/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/log_basic/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/log_include/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/log_pool/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/log_pool_lock/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/log_recovery/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/log_walker/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/out_err_mt/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/set_funcs/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/tools/pmemwrite/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/test/traces_pmem/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG	deps/pmdk/src/tools/pmempool/Makefile	/^LIBPMEMLOG=y$/;"	m
LIBPMEMLOG_H	deps/pmdk/src/include/libpmemlog.h	44;"	d
LIBPMEMOBJ	deps/pmdk/src/test/compat_incompat_features/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/ctl_cow/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/ctl_prefault/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/ex_linkedlist/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/libpmempool_rm/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_action/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_alloc/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_badblock/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_basic_integration/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_bucket/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_check/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_check_remote/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_constructor/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_critnib/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_ctl_alignment/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_ctl_alloc_class/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_ctl_alloc_class_config/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_ctl_arenas/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_ctl_config/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_ctl_debug/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_ctl_heap_size/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_ctl_stats/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_debug/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_defrag/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_defrag_advanced/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_direct/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_direct_volatile/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_extend/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_first_next/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_fragmentation/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_fragmentation2/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_heap/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_heap_interrupt/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_heap_state/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_include/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_lane/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_layout/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_list/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_list_macro/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_locks/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_many_size_allocs/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_mem/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_memblock/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_memcheck/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_memcheck_register/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_memops/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_oid_thread/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_out_of_memory/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_persist_count/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_pmalloc_basic/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_pmalloc_mt/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_pmalloc_oom_mt/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_pmalloc_rand_mt/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_pmemcheck/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_pool/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_pool_lock/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_pool_lookup/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_ravl/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_realloc/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_recovery/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_recreate/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_reorder_basic/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_root/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_sds/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_strdup/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_toid/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_add_range/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_add_range_direct/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_alloc/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_callbacks/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_flow/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_free/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_invalid/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_lock/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_locks/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_locks_abort/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_mt/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_realloc/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_strdup/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_tx_user_data/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_ulog_size/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/obj_zones/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/out_err_mt/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/pmem_deep_persist/Makefile	/^LIBPMEMOBJ=internal-debug$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/remote_obj_basic/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/set_funcs/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/tools/obj_verify/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/tools/pmemalloc/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/tools/pmemobjcli/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/test/traces_pmem/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ	deps/pmdk/src/tools/pmempool/Makefile	/^LIBPMEMOBJ=y$/;"	m
LIBPMEMOBJ_ACTION_BASE_H	deps/pmdk/src/include/libpmemobj/action_base.h	38;"	d
LIBPMEMOBJ_ACTION_H	deps/pmdk/src/include/libpmemobj/action.h	38;"	d
LIBPMEMOBJ_ALLOC_CLASS_H	deps/pmdk/src/libpmemobj/alloc_class.h	38;"	d
LIBPMEMOBJ_ATOMIC_BASE_H	deps/pmdk/src/include/libpmemobj/atomic_base.h	38;"	d
LIBPMEMOBJ_ATOMIC_H	deps/pmdk/src/include/libpmemobj/atomic.h	38;"	d
LIBPMEMOBJ_BASE_H	deps/pmdk/src/include/libpmemobj/base.h	38;"	d
LIBPMEMOBJ_BUCKET_H	deps/pmdk/src/libpmemobj/bucket.h	38;"	d
LIBPMEMOBJ_CONTAINER_H	deps/pmdk/src/libpmemobj/container.h	38;"	d
LIBPMEMOBJ_CONTAINER_RAVL_H	deps/pmdk/src/libpmemobj/container_ravl.h	38;"	d
LIBPMEMOBJ_CONTAINER_SEGLISTS_H	deps/pmdk/src/libpmemobj/container_seglists.h	39;"	d
LIBPMEMOBJ_CRITNIB_H	deps/pmdk/src/libpmemobj/critnib.h	38;"	d
LIBPMEMOBJ_CTL_DEBUG_H	deps/pmdk/src/libpmemobj/ctl_debug.h	37;"	d
LIBPMEMOBJ_CTL_H	deps/pmdk/src/include/libpmemobj/ctl.h	38;"	d
LIBPMEMOBJ_H	deps/pmdk/src/include/libpmemobj.h	44;"	d
LIBPMEMOBJ_HEAP_H	deps/pmdk/src/libpmemobj/heap.h	38;"	d
LIBPMEMOBJ_HEAP_LAYOUT_H	deps/pmdk/src/libpmemobj/heap_layout.h	38;"	d
LIBPMEMOBJ_INTERNAL_TX_H	deps/pmdk/src/libpmemobj/tx.h	38;"	d
LIBPMEMOBJ_ITERATOR_BASE_H	deps/pmdk/src/include/libpmemobj/iterator_base.h	38;"	d
LIBPMEMOBJ_ITERATOR_H	deps/pmdk/src/include/libpmemobj/iterator.h	38;"	d
LIBPMEMOBJ_LANE_H	deps/pmdk/src/libpmemobj/lane.h	38;"	d
LIBPMEMOBJ_LISTS_ATOMIC_BASE_H	deps/pmdk/src/include/libpmemobj/lists_atomic_base.h	38;"	d
LIBPMEMOBJ_LISTS_ATOMIC_H	deps/pmdk/src/include/libpmemobj/lists_atomic.h	38;"	d
LIBPMEMOBJ_LIST_H	deps/pmdk/src/libpmemobj/list.h	38;"	d
LIBPMEMOBJ_MEMBLOCK_H	deps/pmdk/src/libpmemobj/memblock.h	38;"	d
LIBPMEMOBJ_MEMOPS_H	deps/pmdk/src/libpmemobj/memops.h	38;"	d
LIBPMEMOBJ_OBJ_H	deps/pmdk/src/libpmemobj/obj.h	38;"	d
LIBPMEMOBJ_PALLOC_H	deps/pmdk/src/libpmemobj/palloc.h	38;"	d
LIBPMEMOBJ_PMALLOC_H	deps/pmdk/src/libpmemobj/pmalloc.h	38;"	d
LIBPMEMOBJ_PMEMOPS_H	deps/pmdk/src/libpmemobj/pmemops.h	34;"	d
LIBPMEMOBJ_POOL_BASE_H	deps/pmdk/src/include/libpmemobj/pool_base.h	38;"	d
LIBPMEMOBJ_POOL_H	deps/pmdk/src/include/libpmemobj/pool.h	38;"	d
LIBPMEMOBJ_PRIV	deps/pmdk/src/tools/pmempool/Makefile	/^LIBPMEMOBJ_PRIV=memblock_from_offset alloc_class_by_id\\$/;"	m
LIBPMEMOBJ_RAVL_H	deps/pmdk/src/libpmemobj/ravl.h	38;"	d
LIBPMEMOBJ_RECYCLER_H	deps/pmdk/src/libpmemobj/recycler.h	41;"	d
LIBPMEMOBJ_STATS_H	deps/pmdk/src/libpmemobj/stats.h	38;"	d
LIBPMEMOBJ_SYNC_H	deps/pmdk/src/libpmemobj/sync.h	38;"	d
LIBPMEMOBJ_THREAD_H	deps/pmdk/src/include/libpmemobj/thread.h	38;"	d
LIBPMEMOBJ_TX_BASE_H	deps/pmdk/src/include/libpmemobj/tx_base.h	38;"	d
LIBPMEMOBJ_TX_H	deps/pmdk/src/include/libpmemobj/tx.h	38;"	d
LIBPMEMOBJ_TYPES_H	deps/pmdk/src/include/libpmemobj/types.h	37;"	d
LIBPMEMOBJ_ULOG_H	deps/pmdk/src/libpmemobj/ulog.h	38;"	d
LIBPMEMPOOL	deps/pmdk/src/test/libpmempool_api/Makefile	/^LIBPMEMPOOL=y$/;"	m
LIBPMEMPOOL	deps/pmdk/src/test/libpmempool_check_version/Makefile	/^LIBPMEMPOOL=y$/;"	m
LIBPMEMPOOL	deps/pmdk/src/test/libpmempool_feature/Makefile	/^LIBPMEMPOOL=y$/;"	m
LIBPMEMPOOL	deps/pmdk/src/test/libpmempool_include/Makefile	/^LIBPMEMPOOL=y$/;"	m
LIBPMEMPOOL	deps/pmdk/src/test/libpmempool_rm/Makefile	/^LIBPMEMPOOL=y$/;"	m
LIBPMEMPOOL	deps/pmdk/src/test/libpmempool_sync/Makefile	/^LIBPMEMPOOL=y$/;"	m
LIBPMEMPOOL	deps/pmdk/src/test/libpmempool_transform/Makefile	/^LIBPMEMPOOL=y$/;"	m
LIBPMEMPOOL	deps/pmdk/src/test/obj_sds/Makefile	/^LIBPMEMPOOL=y$/;"	m
LIBPMEMPOOL	deps/pmdk/src/test/out_err_mt/Makefile	/^LIBPMEMPOOL=y$/;"	m
LIBPMEMPOOL	deps/pmdk/src/tools/pmempool/Makefile	/^LIBPMEMPOOL=y$/;"	m
LIBPMEMPOOL_DEPS	deps/pmdk/src/test/Makefile	/^LIBPMEMPOOL_DEPS = \\$/;"	m
LIBPMEMPOOL_H	deps/pmdk/src/include/libpmempool.h	40;"	d
LIBPMEMPOOL_MOD_DEPS	deps/pmdk/src/test/Makefile	/^LIBPMEMPOOL_MOD_DEPS = \\$/;"	m
LIBPMEMPOOL_MOD_TESTS	deps/pmdk/src/test/Makefile	/^LIBPMEMPOOL_MOD_TESTS = \\$/;"	m
LIBPMEMPOOL_TESTS	deps/pmdk/src/test/Makefile	/^LIBPMEMPOOL_TESTS = \\$/;"	m
LIBPMEM_H	deps/pmdk/src/include/libpmem.h	44;"	d
LIBPREFIX	deps/jemalloc/Makefile	/^LIBPREFIX := lib$/;"	m
LIBPREFIX	deps/lua/src/loadlib.c	32;"	d	file:
LIBRARIES	deps/pmdk/src/examples/libpmemobj/hashmap/Makefile	/^LIBRARIES = hashmap_atomic hashmap_tx hashmap_rp$/;"	m
LIBRARIES	deps/pmdk/src/examples/libpmemobj/libart/Makefile	/^LIBRARIES = art$/;"	m
LIBRARIES	deps/pmdk/src/examples/libpmemobj/list_map/Makefile	/^LIBRARIES = skiplist_map$/;"	m
LIBRARIES	deps/pmdk/src/examples/libpmemobj/map/Makefile	/^LIBRARIES = map_ctree map_btree map_rbtree map_skiplist\\$/;"	m
LIBRARIES	deps/pmdk/src/examples/libpmemobj/slab_allocator/Makefile	/^LIBRARIES = slab_allocator$/;"	m
LIBRARIES	deps/pmdk/src/examples/libpmemobj/tree_map/Makefile	/^LIBRARIES = ctree_map btree_map rtree_map rbtree_map$/;"	m
LIBRARY_NAME	deps/pmdk/src/common/Makefile	/^LIBRARY_NAME = pmemcommon$/;"	m
LIBRARY_NAME	deps/pmdk/src/libpmem/Makefile	/^LIBRARY_NAME = pmem$/;"	m
LIBRARY_NAME	deps/pmdk/src/libpmem2/Makefile	/^LIBRARY_NAME = pmem2$/;"	m
LIBRARY_NAME	deps/pmdk/src/libpmemblk/Makefile	/^LIBRARY_NAME = pmemblk$/;"	m
LIBRARY_NAME	deps/pmdk/src/libpmemlog/Makefile	/^LIBRARY_NAME = pmemlog$/;"	m
LIBRARY_NAME	deps/pmdk/src/libpmemobj/Makefile	/^LIBRARY_NAME = pmemobj$/;"	m
LIBRARY_NAME	deps/pmdk/src/libpmempool/Makefile	/^LIBRARY_NAME = pmempool$/;"	m
LIBRARY_NAME	deps/pmdk/src/librpmem/Makefile	/^LIBRARY_NAME = rpmem$/;"	m
LIBRARY_REMOTE	deps/pmdk/src/common/set.c	74;"	d	file:
LIBRARY_SO_VERSION	deps/pmdk/src/libpmem/Makefile	/^LIBRARY_SO_VERSION = 1$/;"	m
LIBRARY_SO_VERSION	deps/pmdk/src/libpmem2/Makefile	/^LIBRARY_SO_VERSION = 1$/;"	m
LIBRARY_SO_VERSION	deps/pmdk/src/libpmemblk/Makefile	/^LIBRARY_SO_VERSION = 1$/;"	m
LIBRARY_SO_VERSION	deps/pmdk/src/libpmemlog/Makefile	/^LIBRARY_SO_VERSION = 1$/;"	m
LIBRARY_SO_VERSION	deps/pmdk/src/libpmemobj/Makefile	/^LIBRARY_SO_VERSION = 1$/;"	m
LIBRARY_SO_VERSION	deps/pmdk/src/libpmempool/Makefile	/^LIBRARY_SO_VERSION = 1$/;"	m
LIBRARY_SO_VERSION	deps/pmdk/src/librpmem/Makefile	/^LIBRARY_SO_VERSION = 1$/;"	m
LIBRARY_VERSION	deps/pmdk/src/libpmem/Makefile	/^LIBRARY_VERSION = 0.0$/;"	m
LIBRARY_VERSION	deps/pmdk/src/libpmem2/Makefile	/^LIBRARY_VERSION = 0.0$/;"	m
LIBRARY_VERSION	deps/pmdk/src/libpmemblk/Makefile	/^LIBRARY_VERSION = 0.0$/;"	m
LIBRARY_VERSION	deps/pmdk/src/libpmemlog/Makefile	/^LIBRARY_VERSION = 0.0$/;"	m
LIBRARY_VERSION	deps/pmdk/src/libpmemobj/Makefile	/^LIBRARY_VERSION = 0.0$/;"	m
LIBRARY_VERSION	deps/pmdk/src/libpmempool/Makefile	/^LIBRARY_VERSION = 0.0$/;"	m
LIBRARY_VERSION	deps/pmdk/src/librpmem/Makefile	/^LIBRARY_VERSION = 0.0$/;"	m
LIBRPMEM	deps/pmdk/src/test/rpmem_addr_ext/Makefile	/^LIBRPMEM=y$/;"	m
LIBRPMEM	deps/pmdk/src/test/rpmem_basic/Makefile	/^LIBRPMEM=y$/;"	m
LIBRPMEM_H	deps/pmdk/src/include/librpmem.h	43;"	d
LIBS	deps/jemalloc/Makefile	/^LIBS := -lm  -lpthread$/;"	m
LIBS	deps/lua/src/Makefile	/^LIBS= -lm $(MYLIBS)$/;"	m
LIBS	deps/pmdk/src/examples/libpmem/Makefile	/^LIBS = -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemblk/Makefile	/^LIBS = -lpmemblk -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemblk/assetdb/Makefile	/^LIBS = -lpmemblk -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemlog/Makefile	/^LIBS = -lpmemlog -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemlog/logfile/Makefile	/^LIBS = -lpmemlog -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/Makefile	/^LIBS = -lpmemobj -lpmem -pthread -lm -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/array/Makefile	/^LIBS = -lpmemobj -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/hashmap/Makefile	/^LIBS = -lpmemobj$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/libart/Makefile	/^LIBS = -lpmemobj$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/linkedlist/Makefile	/^LIBS = -lpmemobj -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/list_map/Makefile	/^LIBS = -lpmemobj$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/map/Makefile	/^LIBS = -lpmemobj -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/pmemblk/Makefile	/^LIBS = -lpmemobj -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/pmemlog/Makefile	/^LIBS = -lpmemobj -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/pminvaders/Makefile	/^LIBS = -lpmemobj -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/queue/Makefile	/^LIBS = -lpmemobj$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/slab_allocator/Makefile	/^LIBS = -lpmemobj$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/string_store/Makefile	/^LIBS = -lpmemobj -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/string_store_tx/Makefile	/^LIBS = -lpmemobj -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/string_store_tx_type/Makefile	/^LIBS = -lpmemobj -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/libpmemobj/tree_map/Makefile	/^LIBS = -lpmemobj$/;"	m
LIBS	deps/pmdk/src/examples/libpmempool/Makefile	/^LIBS = -lpmempool -pthread$/;"	m
LIBS	deps/pmdk/src/examples/librpmem/Makefile	/^LIBS = -lrpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/librpmem/fibonacci/Makefile	/^LIBS = -lrpmem -lpmem -pthread$/;"	m
LIBS	deps/pmdk/src/examples/pmreorder/Makefile	/^LIBS = -lpmem -pthread$/;"	m
LIBS_PATH	deps/pmdk/src/benchmarks/Makefile	/^LIBS_PATH=..\/debug$/;"	m
LIBS_PATH	deps/pmdk/src/benchmarks/Makefile	/^LIBS_PATH=..\/nondebug$/;"	m
LIBUV	deps/pmdk/src/examples/libpmemobj/map/Makefile	/^LIBUV := $(call check_package, libuv --atleast-version 1.0)$/;"	m
LIB_FAIL	deps/lua/src/loadlib.c	232;"	d	file:
LIB_FAIL	deps/lua/src/loadlib.c	233;"	d	file:
LIB_FAIL	deps/lua/src/loadlib.c	35;"	d	file:
LIB_LOG_LEN	deps/pmdk/src/common/util.c	63;"	d	file:
LIB_MODE_DRAM	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	LIB_MODE_DRAM,$/;"	e	enum:lib_mode	file:
LIB_MODE_NONE	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	LIB_MODE_NONE,$/;"	e	enum:lib_mode	file:
LIB_MODE_OBJ_ATOMIC	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	LIB_MODE_OBJ_ATOMIC,$/;"	e	enum:lib_mode	file:
LIB_MODE_OBJ_TX	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	LIB_MODE_OBJ_TX,$/;"	e	enum:lib_mode	file:
LIB_O	deps/lua/src/Makefile	/^LIB_O=	lauxlib.o lbaselib.o ldblib.o liolib.o lmathlib.o loslib.o ltablib.o \\$/;"	m
LICENSE_BEG	deps/pmdk/utils/check_license/check-license.c	61;"	d	file:
LICENSE_END	deps/pmdk/utils/check_license/check-license.c	62;"	d	file:
LICENSE_MAX_LEN	deps/pmdk/utils/check_license/check-license.c	51;"	d	file:
LIFE	deps/lua/test/life.lua	/^function LIFE(w,h)$/;"	f
LIMIT	deps/lua/src/lauxlib.c	395;"	d	file:
LINENOISE_DEFAULT_HISTORY_MAX_LEN	deps/linenoise/linenoise.c	120;"	d	file:
LINENOISE_HISTORY_NEXT	deps/linenoise/linenoise.c	698;"	d	file:
LINENOISE_HISTORY_PREV	deps/linenoise/linenoise.c	699;"	d	file:
LINENOISE_MAX_LINE	deps/linenoise/linenoise.c	121;"	d	file:
LINFO	deps/pmdk/src/librpmem/rpmem_util.h	/^	LINFO = 4,$/;"	e	enum:__anon97
LINKCOLOR	deps/Makefile	/^LINKCOLOR="\\033[34;1m"$/;"	m
LINKCOLOR	src/Makefile	/^LINKCOLOR="\\033[34;1m"$/;"	m
LINKS	deps/pmdk/src/examples/libpmemobj/pmemobjfs/Makefile	/^LINKS = mkfs.pmemobjfs\\$/;"	m
LIST	deps/pmdk/src/benchmarks/config_reader_win.cpp	67;"	d	file:
LIST_BAR	deps/pmdk/src/examples/libpmemobj/lists.c	/^	LIST_BAR,$/;"	e	enum:list_type	file:
LIST_FOO	deps/pmdk/src/examples/libpmemobj/lists.c	/^	LIST_FOO,$/;"	e	enum:list_type	file:
LIST_INVALID	deps/pmdk/src/examples/libpmemobj/lists.c	/^	LIST_INVALID,$/;"	e	enum:list_type	file:
LITTLE	deps/lua/src/lua_struct.c	77;"	d	file:
LITTLE_ENDIAN	src/config.h	141;"	d
LITTLE_ENDIAN	src/config.h	173;"	d
LJEMALLOC	deps/jemalloc/Makefile	/^LJEMALLOC := $(objroot)lib\/$(LIBJEMALLOC).$(IMPORTLIB)$/;"	m
LJEMALLOC	deps/jemalloc/Makefile	/^LJEMALLOC := -Wl,--whole-archive -L$(objroot)lib -l$(LIBJEMALLOC) -Wl,--no-whole-archive$/;"	m
LL_DEBUG	src/server.h	380;"	d
LL_NOTICE	src/server.h	382;"	d
LL_RAW	src/server.h	384;"	d
LL_VERBOSE	src/server.h	381;"	d
LL_WARNING	src/server.h	383;"	d
LM	deps/jemalloc/Makefile	/^LM := -lm$/;"	m
LNOTICE	deps/pmdk/src/librpmem/rpmem_util.h	/^	LNOTICE = 3,$/;"	e	enum:__anon97
LOCAL_TESTS	deps/pmdk/src/test/Makefile	/^	LOCAL_TESTS := $(filter-out $(BLACKLIST_TESTS),$(LOCAL_TESTS))$/;"	m
LOCAL_TESTS	deps/pmdk/src/test/Makefile	/^LOCAL_TESTS = \\$/;"	m
LOCKED_MUTEX	deps/pmdk/src/test/obj_sync/obj_sync.c	47;"	d	file:
LOG	deps/pmdk/src/common/out.h	143;"	d
LOG	deps/pmdk/src/test/set_funcs/set_funcs.c	46;"	d	file:
LOG_BUFFER	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	63;"	d	file:
LOG_BUFFER_NUM	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	64;"	d	file:
LOG_CONFIG_ENV_VARIABLE	deps/pmdk/src/libpmemlog/libpmemlog.c	50;"	d	file:
LOG_CONFIG_FILE_ENV_VARIABLE	deps/pmdk/src/libpmemlog/libpmemlog.c	55;"	d	file:
LOG_FILE_VAR	deps/pmdk/src/test/out_err/out_err.c	39;"	d	file:
LOG_FILE_VAR	deps/pmdk/src/test/out_err_win/out_err_win.c	39;"	d	file:
LOG_FILE_VAR	deps/pmdk/src/test/pmem_has_auto_flush_win/pmem_has_auto_flush_win.c	54;"	d	file:
LOG_FILE_VAR	deps/pmdk/src/test/traces/traces.c	39;"	d	file:
LOG_FILE_VAR	deps/pmdk/src/test/traces_custom_function/traces_custom_function.c	43;"	d	file:
LOG_FILE_VAR	deps/pmdk/src/test/util_ctl/util_ctl.c	45;"	d	file:
LOG_FILE_VAR	deps/pmdk/src/test/util_is_poolset/util_is_poolset.c	46;"	d	file:
LOG_FILE_VAR	deps/pmdk/src/test/util_poolset/util_poolset.c	49;"	d	file:
LOG_FILE_VAR	deps/pmdk/src/test/util_poolset_foreach/util_poolset_foreach.c	46;"	d	file:
LOG_FILE_VAR	deps/pmdk/src/test/util_poolset_parse/util_poolset_parse.c	46;"	d	file:
LOG_FILE_VAR	deps/pmdk/src/test/util_poolset_size/util_poolset_size.c	46;"	d	file:
LOG_FILE_VAR	deps/pmdk/src/test/util_sds/util_sds.c	61;"	d	file:
LOG_FORMAT_DATA_ALIGN	deps/pmdk/src/libpmemlog/log.h	94;"	d
LOG_FORMAT_FEAT_CHECK	deps/pmdk/src/libpmemlog/log.h	68;"	d
LOG_FORMAT_FEAT_DEFAULT	deps/pmdk/src/libpmemlog/log.h	65;"	d
LOG_FORMAT_MAJOR	deps/pmdk/src/libpmemlog/log.h	63;"	d
LOG_H	deps/pmdk/src/libpmemlog/log.h	38;"	d
LOG_HDR_SIG	deps/pmdk/src/libpmemlog/log.h	62;"	d
LOG_HDR_TYPE	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^	LOG_HDR_TYPE,$/;"	e	enum:types	file:
LOG_LEVEL_VAR	deps/pmdk/src/test/out_err/out_err.c	38;"	d	file:
LOG_LEVEL_VAR	deps/pmdk/src/test/out_err_win/out_err_win.c	38;"	d	file:
LOG_LEVEL_VAR	deps/pmdk/src/test/pmem_has_auto_flush_win/pmem_has_auto_flush_win.c	53;"	d	file:
LOG_LEVEL_VAR	deps/pmdk/src/test/traces/traces.c	38;"	d	file:
LOG_LEVEL_VAR	deps/pmdk/src/test/traces_custom_function/traces_custom_function.c	42;"	d	file:
LOG_LEVEL_VAR	deps/pmdk/src/test/util_ctl/util_ctl.c	44;"	d	file:
LOG_LEVEL_VAR	deps/pmdk/src/test/util_is_poolset/util_is_poolset.c	45;"	d	file:
LOG_LEVEL_VAR	deps/pmdk/src/test/util_poolset/util_poolset.c	48;"	d	file:
LOG_LEVEL_VAR	deps/pmdk/src/test/util_poolset_foreach/util_poolset_foreach.c	45;"	d	file:
LOG_LEVEL_VAR	deps/pmdk/src/test/util_poolset_parse/util_poolset_parse.c	45;"	d	file:
LOG_LEVEL_VAR	deps/pmdk/src/test/util_poolset_size/util_poolset_size.c	45;"	d	file:
LOG_LEVEL_VAR	deps/pmdk/src/test/util_sds/util_sds.c	60;"	d	file:
LOG_MAX_LEN	src/server.h	125;"	d
LOG_NONL	deps/pmdk/src/common/out.h	149;"	d
LOG_PERSISTENT	deps/pmdk/src/libpmemobj/memops.h	/^	LOG_PERSISTENT, \/* log of persistent modifications *\/$/;"	e	enum:operation_log_type
LOG_PREFIX	deps/pmdk/src/test/out_err/out_err.c	37;"	d	file:
LOG_PREFIX	deps/pmdk/src/test/out_err_win/out_err_win.c	37;"	d	file:
LOG_PREFIX	deps/pmdk/src/test/pmem_has_auto_flush_win/pmem_has_auto_flush_win.c	52;"	d	file:
LOG_PREFIX	deps/pmdk/src/test/traces/traces.c	37;"	d	file:
LOG_PREFIX	deps/pmdk/src/test/traces_custom_function/traces_custom_function.c	41;"	d	file:
LOG_PREFIX	deps/pmdk/src/test/util_ctl/util_ctl.c	43;"	d	file:
LOG_PREFIX	deps/pmdk/src/test/util_is_poolset/util_is_poolset.c	44;"	d	file:
LOG_PREFIX	deps/pmdk/src/test/util_poolset/util_poolset.c	47;"	d	file:
LOG_PREFIX	deps/pmdk/src/test/util_poolset_foreach/util_poolset_foreach.c	44;"	d	file:
LOG_PREFIX	deps/pmdk/src/test/util_poolset_parse/util_poolset_parse.c	44;"	d	file:
LOG_PREFIX	deps/pmdk/src/test/util_poolset_size/util_poolset_size.c	44;"	d	file:
LOG_PREFIX	deps/pmdk/src/test/util_sds/util_sds.c	59;"	d	file:
LOG_STR	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	44;"	d	file:
LOG_TESTS	deps/pmdk/src/test/Makefile	/^LOG_TESTS = \\$/;"	m
LOG_TRANSIENT	deps/pmdk/src/libpmemobj/memops.h	/^	LOG_TRANSIENT, \/* log of transient memory modifications *\/$/;"	e	enum:operation_log_type
LOG_TYPE	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^	LOG_TYPE,$/;"	e	enum:types	file:
LOG_TYPE_REDO	deps/pmdk/src/libpmemobj/memops.h	/^	LOG_TYPE_REDO,$/;"	e	enum:log_type
LOG_TYPE_UNDO	deps/pmdk/src/libpmemobj/memops.h	/^	LOG_TYPE_UNDO,$/;"	e	enum:log_type
LONG	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	294;"	d
LONG_CEILING	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	298;"	d
LONG_MASK	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	295;"	d
LONG_STR_SIZE	src/server.h	201;"	d
LOOKUP_MAXCLASS	deps/jemalloc/include/jemalloc/internal/size_classes.h	178;"	d
LOOKUP_MAXCLASS	deps/jemalloc/include/jemalloc/internal/size_classes.h	488;"	d
LOOKUP_NONE	src/server.h	1469;"	d
LOOKUP_NOTOUCH	src/server.h	1470;"	d
LOOPS	deps/pmdk/src/test/obj_tx_mt/obj_tx_mt.c	43;"	d	file:
LOW	src/rand.c	48;"	d	file:
LRUTestGenKey	src/redis-cli.c	/^void LRUTestGenKey(char *buf, size_t buflen) {$/;"	f
LRUTestMode	src/redis-cli.c	/^static void LRUTestMode(void) {$/;"	f	file:
LRU_BITS	src/server.h	499;"	d
LRU_CLOCK	src/server.h	514;"	d
LRU_CLOCK_MAX	src/server.h	500;"	d
LRU_CLOCK_RESOLUTION	src/server.h	501;"	d
LRU_CYCLE_PERIOD	src/redis-cli.c	2419;"	d	file:
LRU_CYCLE_PIPELINE_SIZE	src/redis-cli.c	2420;"	d	file:
LSEEK	deps/pmdk/src/test/unittest/unittest.h	482;"	d
LT_MAX_WQ_SIZE	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	857;"	d	file:
LUACMSGPACK_COPYRIGHT	deps/lua/src/lua_cmsgpack.c	13;"	d	file:
LUACMSGPACK_DESCRIPTION	deps/lua/src/lua_cmsgpack.c	14;"	d	file:
LUACMSGPACK_MAX_NESTING	deps/lua/src/lua_cmsgpack.c	18;"	d	file:
LUACMSGPACK_NAME	deps/lua/src/lua_cmsgpack.c	10;"	d	file:
LUACMSGPACK_SAFE_NAME	deps/lua/src/lua_cmsgpack.c	11;"	d	file:
LUACMSGPACK_VERSION	deps/lua/src/lua_cmsgpack.c	12;"	d	file:
LUAC_FORMAT	deps/lua/src/lundump.h	31;"	d
LUAC_HEADERSIZE	deps/lua/src/lundump.h	34;"	d
LUAC_O	deps/lua/src/Makefile	/^LUAC_O=	luac.o print.o$/;"	m
LUAC_T	deps/lua/src/Makefile	/^LUAC_T=	luac$/;"	m
LUAC_VERSION	deps/lua/src/lundump.h	28;"	d
LUAI_BITSINT	deps/lua/src/luaconf.h	392;"	d
LUAI_BITSINT	deps/lua/src/luaconf.h	395;"	d
LUAI_DATA	deps/lua/src/luaconf.h	183;"	d
LUAI_DATA	deps/lua/src/luaconf.h	188;"	d
LUAI_DATA	deps/lua/src/luaconf.h	192;"	d
LUAI_EXTRASPACE	deps/lua/src/luaconf.h	715;"	d
LUAI_FUNC	deps/lua/src/luaconf.h	182;"	d
LUAI_FUNC	deps/lua/src/luaconf.h	187;"	d
LUAI_FUNC	deps/lua/src/luaconf.h	191;"	d
LUAI_GCMUL	deps/lua/src/luaconf.h	313;"	d
LUAI_GCPAUSE	deps/lua/src/luaconf.h	302;"	d
LUAI_INT32	deps/lua/src/luaconf.h	415;"	d
LUAI_INT32	deps/lua/src/luaconf.h	422;"	d
LUAI_MAXCALLS	deps/lua/src/luaconf.h	435;"	d
LUAI_MAXCCALLS	deps/lua/src/luaconf.h	468;"	d
LUAI_MAXCSTACK	deps/lua/src/luaconf.h	446;"	d
LUAI_MAXINT32	deps/lua/src/luaconf.h	416;"	d
LUAI_MAXINT32	deps/lua/src/luaconf.h	423;"	d
LUAI_MAXNUMBER2STR	deps/lua/src/luaconf.h	524;"	d
LUAI_MAXUPVALUES	deps/lua/src/luaconf.h	482;"	d
LUAI_MAXVARS	deps/lua/src/luaconf.h	475;"	d
LUAI_MEM	deps/lua/src/luaconf.h	418;"	d
LUAI_MEM	deps/lua/src/luaconf.h	425;"	d
LUAI_THROW	deps/lua/src/luaconf.h	608;"	d
LUAI_THROW	deps/lua/src/luaconf.h	615;"	d
LUAI_THROW	deps/lua/src/luaconf.h	621;"	d
LUAI_TRY	deps/lua/src/luaconf.h	609;"	d
LUAI_TRY	deps/lua/src/luaconf.h	616;"	d
LUAI_TRY	deps/lua/src/luaconf.h	622;"	d
LUAI_UACNUMBER	deps/lua/src/luaconf.h	511;"	d
LUAI_UINT32	deps/lua/src/luaconf.h	414;"	d
LUAI_UINT32	deps/lua/src/luaconf.h	421;"	d
LUAI_UMEM	deps/lua/src/luaconf.h	417;"	d
LUAI_UMEM	deps/lua/src/luaconf.h	424;"	d
LUAI_USER_ALIGNMENT_T	deps/lua/src/luaconf.h	595;"	d
LUALIB_API	deps/lua/src/luaconf.h	169;"	d
LUAL_BUFFERSIZE	deps/lua/src/luaconf.h	488;"	d
LUA_A	deps/lua/src/Makefile	/^LUA_A=	liblua.a$/;"	m
LUA_ANSI	deps/lua/src/luaconf.h	28;"	d
LUA_API	deps/lua/src/luaconf.h	157;"	d
LUA_API	deps/lua/src/luaconf.h	159;"	d
LUA_API	deps/lua/src/luaconf.h	164;"	d
LUA_AUTHORS	deps/lua/src/lua.h	23;"	d
LUA_BITOP_VERSION	deps/lua/src/lua_bit.c	29;"	d	file:
LUA_CDIR	deps/lua/src/luaconf.h	89;"	d
LUA_CDIR	deps/lua/src/luaconf.h	99;"	d
LUA_CFLAGS	deps/Makefile	/^	LUA_CFLAGS= -D__C99FEATURES__=1$/;"	m
LUA_CMD_OBJCACHE_MAX_LEN	src/scripting.c	347;"	d	file:
LUA_CMD_OBJCACHE_SIZE	src/scripting.c	346;"	d	file:
LUA_COLIBNAME	deps/lua/src/lualib.h	18;"	d
LUA_COMPAT_GETN	deps/lua/src/luaconf.h	322;"	d
LUA_COMPAT_GFIND	deps/lua/src/luaconf.h	358;"	d
LUA_COMPAT_LOADLIB	deps/lua/src/luaconf.h	329;"	d
LUA_COMPAT_LSTR	deps/lua/src/luaconf.h	351;"	d
LUA_COMPAT_MOD	deps/lua/src/luaconf.h	343;"	d
LUA_COMPAT_OPENLIB	deps/lua/src/luaconf.h	366;"	d
LUA_COMPAT_VARARG	deps/lua/src/luaconf.h	336;"	d
LUA_COPYRIGHT	deps/lua/src/lua.h	22;"	d
LUA_CORE	deps/lua/etc/noparser.c	15;"	d	file:
LUA_CORE	deps/lua/src/lapi.c	14;"	d	file:
LUA_CORE	deps/lua/src/lcode.c	11;"	d	file:
LUA_CORE	deps/lua/src/ldebug.c	14;"	d	file:
LUA_CORE	deps/lua/src/ldo.c	13;"	d	file:
LUA_CORE	deps/lua/src/ldump.c	10;"	d	file:
LUA_CORE	deps/lua/src/lfunc.c	11;"	d	file:
LUA_CORE	deps/lua/src/lgc.c	10;"	d	file:
LUA_CORE	deps/lua/src/llex.c	13;"	d	file:
LUA_CORE	deps/lua/src/lmem.c	11;"	d	file:
LUA_CORE	deps/lua/src/lobject.c	14;"	d	file:
LUA_CORE	deps/lua/src/lopcodes.c	8;"	d	file:
LUA_CORE	deps/lua/src/lparser.c	11;"	d	file:
LUA_CORE	deps/lua/src/lstate.c	11;"	d	file:
LUA_CORE	deps/lua/src/lstring.c	11;"	d	file:
LUA_CORE	deps/lua/src/ltable.c	25;"	d	file:
LUA_CORE	deps/lua/src/ltm.c	11;"	d	file:
LUA_CORE	deps/lua/src/luac.c	13;"	d	file:
LUA_CORE	deps/lua/src/lundump.c	10;"	d	file:
LUA_CORE	deps/lua/src/lvm.c	13;"	d	file:
LUA_CORE	deps/lua/src/lzio.c	11;"	d	file:
LUA_CORE	deps/lua/src/print.c	11;"	d	file:
LUA_CPATH	deps/lua/src/luaconf.h	70;"	d
LUA_CPATH_DEFAULT	deps/lua/src/luaconf.h	103;"	d
LUA_CPATH_DEFAULT	deps/lua/src/luaconf.h	93;"	d
LUA_DBLIBNAME	deps/lua/src/lualib.h	36;"	d
LUA_DIRSEP	deps/lua/src/luaconf.h	114;"	d
LUA_DIRSEP	deps/lua/src/luaconf.h	116;"	d
LUA_DL_DLL	deps/lua/src/luaconf.h	705;"	d
LUA_DL_DLOPEN	deps/lua/src/luaconf.h	701;"	d
LUA_DL_DYLD	deps/lua/src/luaconf.h	44;"	d
LUA_ENVIRONINDEX	deps/lua/src/lua.h	37;"	d
LUA_ERRERR	deps/lua/src/lua.h	47;"	d
LUA_ERRFILE	deps/lua/src/lauxlib.h	32;"	d
LUA_ERRMEM	deps/lua/src/lua.h	46;"	d
LUA_ERRRUN	deps/lua/src/lua.h	44;"	d
LUA_ERRSYNTAX	deps/lua/src/lua.h	45;"	d
LUA_EXECDIR	deps/lua/src/luaconf.h	134;"	d
LUA_FILEHANDLE	deps/lua/src/lualib.h	15;"	d
LUA_GCCOLLECT	deps/lua/src/lua.h	223;"	d
LUA_GCCOUNT	deps/lua/src/lua.h	224;"	d
LUA_GCCOUNTB	deps/lua/src/lua.h	225;"	d
LUA_GCRESTART	deps/lua/src/lua.h	222;"	d
LUA_GCSETPAUSE	deps/lua/src/lua.h	227;"	d
LUA_GCSETSTEPMUL	deps/lua/src/lua.h	228;"	d
LUA_GCSTEP	deps/lua/src/lua.h	226;"	d
LUA_GCSTOP	deps/lua/src/lua.h	221;"	d
LUA_GC_CYCLE_PERIOD	src/scripting.c	1338;"	d	file:
LUA_GLOBALSINDEX	deps/lua/src/lua.h	38;"	d
LUA_HOOKCALL	deps/lua/src/lua.h	311;"	d
LUA_HOOKCOUNT	deps/lua/src/lua.h	314;"	d
LUA_HOOKLINE	deps/lua/src/lua.h	313;"	d
LUA_HOOKRET	deps/lua/src/lua.h	312;"	d
LUA_HOOKTAILRET	deps/lua/src/lua.h	315;"	d
LUA_IDSIZE	deps/lua/src/luaconf.h	210;"	d
LUA_IGMARK	deps/lua/src/luaconf.h	135;"	d
LUA_INIT	deps/lua/src/luaconf.h	71;"	d
LUA_INTEGER	deps/lua/src/luaconf.h	143;"	d
LUA_INTFRMLEN	deps/lua/src/luaconf.h	741;"	d
LUA_INTFRMLEN	deps/lua/src/luaconf.h	746;"	d
LUA_INTFRM_T	deps/lua/src/luaconf.h	742;"	d
LUA_INTFRM_T	deps/lua/src/luaconf.h	747;"	d
LUA_IOLIBNAME	deps/lua/src/lualib.h	24;"	d
LUA_LDIR	deps/lua/src/luaconf.h	88;"	d
LUA_LDIR	deps/lua/src/luaconf.h	98;"	d
LUA_LIB	deps/lua/src/lauxlib.c	21;"	d	file:
LUA_LIB	deps/lua/src/lbaselib.c	15;"	d	file:
LUA_LIB	deps/lua/src/ldblib.c	13;"	d	file:
LUA_LIB	deps/lua/src/linit.c	9;"	d	file:
LUA_LIB	deps/lua/src/liolib.c	14;"	d	file:
LUA_LIB	deps/lua/src/lmathlib.c	12;"	d	file:
LUA_LIB	deps/lua/src/loadlib.c	17;"	d	file:
LUA_LIB	deps/lua/src/loslib.c	15;"	d	file:
LUA_LIB	deps/lua/src/lstrlib.c	15;"	d	file:
LUA_LIB	deps/lua/src/ltablib.c	11;"	d	file:
LUA_LIB	deps/lua/src/lua_bit.c	31;"	d	file:
LUA_LOADLIBNAME	deps/lua/src/lualib.h	39;"	d
LUA_MASKCALL	deps/lua/src/lua.h	321;"	d
LUA_MASKCOUNT	deps/lua/src/lua.h	324;"	d
LUA_MASKLINE	deps/lua/src/lua.h	323;"	d
LUA_MASKRET	deps/lua/src/lua.h	322;"	d
LUA_MATHLIBNAME	deps/lua/src/lualib.h	33;"	d
LUA_MAXCAPTURES	deps/lua/src/luaconf.h	633;"	d
LUA_MAXINPUT	deps/lua/src/luaconf.h	262;"	d
LUA_MINBUFFER	deps/lua/src/llimits.h	105;"	d
LUA_MINSTACK	deps/lua/src/lua.h	87;"	d
LUA_MULTRET	deps/lua/src/lua.h	30;"	d
LUA_NOREF	deps/lua/src/lauxlib.h	159;"	d
LUA_NUMBER	deps/lua/src/luaconf.h	505;"	d
LUA_NUMBER_DOUBLE	deps/lua/src/luaconf.h	504;"	d
LUA_NUMBER_FMT	deps/lua/src/luaconf.h	522;"	d
LUA_NUMBER_SCAN	deps/lua/src/luaconf.h	521;"	d
LUA_O	deps/lua/src/Makefile	/^LUA_O=	lua.o$/;"	m
LUA_OFSEP	deps/lua/src/loadlib.c	29;"	d	file:
LUA_OSLIBNAME	deps/lua/src/lualib.h	27;"	d
LUA_PATH	deps/lua/src/luaconf.h	69;"	d
LUA_PATHSEP	deps/lua/src/luaconf.h	132;"	d
LUA_PATH_DEFAULT	deps/lua/src/luaconf.h	100;"	d
LUA_PATH_DEFAULT	deps/lua/src/luaconf.h	90;"	d
LUA_PATH_MARK	deps/lua/src/luaconf.h	133;"	d
LUA_POF	deps/lua/src/loadlib.c	26;"	d	file:
LUA_PROGNAME	deps/lua/src/luaconf.h	254;"	d
LUA_PROMPT	deps/lua/src/luaconf.h	245;"	d
LUA_PROMPT2	deps/lua/src/luaconf.h	246;"	d
LUA_QL	deps/lua/src/luaconf.h	201;"	d
LUA_QS	deps/lua/src/luaconf.h	202;"	d
LUA_REFNIL	deps/lua/src/lauxlib.h	160;"	d
LUA_REGISTRYINDEX	deps/lua/src/lua.h	36;"	d
LUA_RELEASE	deps/lua/src/lua.h	20;"	d
LUA_ROOT	deps/lua/src/luaconf.h	97;"	d
LUA_SCRIPT_TIME_LIMIT	src/server.h	434;"	d
LUA_SIGNATURE	deps/lua/src/lua.h	27;"	d
LUA_STRLIBNAME	deps/lua/src/lualib.h	30;"	d
LUA_T	deps/lua/src/Makefile	/^LUA_T=	lua$/;"	m
LUA_TABLIBNAME	deps/lua/src/lualib.h	21;"	d
LUA_TBOOLEAN	deps/lua/src/lua.h	75;"	d
LUA_TDEADKEY	deps/lua/src/lobject.h	30;"	d
LUA_TFUNCTION	deps/lua/src/lua.h	80;"	d
LUA_TLIGHTUSERDATA	deps/lua/src/lua.h	76;"	d
LUA_TMPNAMBUFSIZE	deps/lua/src/luaconf.h	648;"	d
LUA_TMPNAMBUFSIZE	deps/lua/src/luaconf.h	656;"	d
LUA_TNIL	deps/lua/src/lua.h	74;"	d
LUA_TNONE	deps/lua/src/lua.h	72;"	d
LUA_TNUMBER	deps/lua/src/lua.h	77;"	d
LUA_TPROTO	deps/lua/src/lobject.h	28;"	d
LUA_TSTRING	deps/lua/src/lua.h	78;"	d
LUA_TTABLE	deps/lua/src/lua.h	79;"	d
LUA_TTHREAD	deps/lua/src/lua.h	82;"	d
LUA_TUPVAL	deps/lua/src/lobject.h	29;"	d
LUA_TUSERDATA	deps/lua/src/lua.h	81;"	d
LUA_USE_DLOPEN	deps/lua/src/luaconf.h	38;"	d
LUA_USE_ISATTY	deps/lua/src/luaconf.h	56;"	d
LUA_USE_MKSTEMP	deps/lua/src/luaconf.h	55;"	d
LUA_USE_POPEN	deps/lua/src/luaconf.h	57;"	d
LUA_USE_POSIX	deps/lua/src/luaconf.h	37;"	d
LUA_USE_POSIX	deps/lua/src/luaconf.h	43;"	d
LUA_USE_READLINE	deps/lua/src/luaconf.h	39;"	d
LUA_USE_ULONGJMP	deps/lua/src/luaconf.h	58;"	d
LUA_VERSION	deps/lua/src/lua.h	19;"	d
LUA_VERSION_NUM	deps/lua/src/lua.h	21;"	d
LUA_WIN	deps/lua/src/luaconf.h	33;"	d
LUA_YIELD	deps/lua/src/lua.h	43;"	d
LWARN	deps/pmdk/src/librpmem/rpmem_util.h	/^	LWARN = 2,$/;"	e	enum:__anon97
LZFP_h	src/lzfP.h	38;"	d
LZF_H	src/lzf.h	38;"	d
LZF_HSLOT	src/lzfP.h	/^  typedef const u8 *LZF_HSLOT;$/;"	t
LZF_HSLOT	src/lzfP.h	/^  typedef unsigned int LZF_HSLOT;$/;"	t
LZF_HSLOT_BIAS	src/lzfP.h	159;"	d
LZF_HSLOT_BIAS	src/lzfP.h	162;"	d
LZF_STATE	src/lzfP.h	/^typedef LZF_HSLOT LZF_STATE[1 << (HLOG)];$/;"	t
LZF_STATE_ARG	src/lzfP.h	109;"	d
LZF_USE_OFFSETS	src/lzfP.h	145;"	d
LZF_VERSION	src/lzf.h	49;"	d
L_ESC	deps/lua/src/lstrlib.c	182;"	d	file:
L_Umaxalign	deps/lua/src/llimits.h	/^typedef LUAI_USER_ALIGNMENT_T L_Umaxalign;$/;"	t
Lane	deps/pmdk/src/test/obj_list/obj_list.c	/^struct lane Lane;$/;"	v	typeref:struct:lane
Lane_info_cache	deps/pmdk/src/libpmemobj/lane.c	/^static __thread struct lane_info *Lane_info_cache;$/;"	v	typeref:struct:lane_info	file:
Lane_info_ht	deps/pmdk/src/libpmemobj/lane.c	/^static __thread struct critnib *Lane_info_ht;$/;"	v	typeref:struct:critnib	file:
Lane_info_key	deps/pmdk/src/libpmemobj/lane.c	/^static os_tls_key_t Lane_info_key;$/;"	v	file:
Lane_info_records	deps/pmdk/src/libpmemobj/lane.c	/^static __thread struct lane_info *Lane_info_records;$/;"	v	typeref:struct:lane_info	file:
Last_errormsg	deps/pmdk/src/common/out.c	/^static __thread struct errormsg Last_errormsg;$/;"	v	typeref:struct:errormsg	file:
Last_errormsg_fini	deps/pmdk/src/common/out.c	/^Last_errormsg_fini(void)$/;"	f	file:
Last_errormsg_get	deps/pmdk/src/common/out.c	/^Last_errormsg_get(void)$/;"	f	file:
Last_errormsg_key	deps/pmdk/src/common/out.c	/^static os_tls_key_t Last_errormsg_key;$/;"	v	file:
Last_errormsg_key_alloc	deps/pmdk/src/common/out.c	/^Last_errormsg_key_alloc(void)$/;"	f	file:
Last_errormsg_key_once	deps/pmdk/src/common/out.c	/^static os_once_t Last_errormsg_key_once = OS_ONCE_INIT;$/;"	v	file:
Length	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	/^static size_t Length = 0;	\/* number of bytes to read *\/$/;"	v	file:
LexState	deps/lua/src/llex.h	/^typedef struct LexState {$/;"	s
LexState	deps/lua/src/llex.h	/^} LexState;$/;"	t	typeref:struct:LexState
LibChecker	deps/pmdk/src/tools/pmreorder/consistencycheckwrap.py	/^class LibChecker(ConsistencyCheckerBase):$/;"	c
ListEntry	deps/pmdk/src/windows/include/win_mmap.h	/^	PMDK_SORTEDQ_ENTRY(FILE_MAPPING_TRACKER) ListEntry;$/;"	m	struct:FILE_MAPPING_TRACKER
LoadBlock	deps/lua/src/lundump.c	/^static void LoadBlock(LoadState* S, void* b, size_t size)$/;"	f	file:
LoadByte	deps/lua/src/lundump.c	44;"	d	file:
LoadChar	deps/lua/src/lundump.c	/^static int LoadChar(LoadState* S)$/;"	f	file:
LoadCode	deps/lua/src/lundump.c	/^static void LoadCode(LoadState* S, Proto* f)$/;"	f	file:
LoadConstants	deps/lua/src/lundump.c	/^static void LoadConstants(LoadState* S, Proto* f)$/;"	f	file:
LoadDebug	deps/lua/src/lundump.c	/^static void LoadDebug(LoadState* S, Proto* f)$/;"	f	file:
LoadF	deps/lua/src/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	deps/lua/src/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadFunction	deps/lua/src/lundump.c	/^static Proto* LoadFunction(LoadState* S, TString* p)$/;"	f	file:
LoadHeader	deps/lua/src/lundump.c	/^static void LoadHeader(LoadState* S)$/;"	f	file:
LoadInt	deps/lua/src/lundump.c	/^static int LoadInt(LoadState* S)$/;"	f	file:
LoadMem	deps/lua/src/lundump.c	43;"	d	file:
LoadNumber	deps/lua/src/lundump.c	/^static lua_Number LoadNumber(LoadState* S)$/;"	f	file:
LoadS	deps/lua/src/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	deps/lua/src/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadState	deps/lua/src/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon39	file:
LoadString	deps/lua/src/lundump.c	/^static TString* LoadString(LoadState* S)$/;"	f	file:
LoadVar	deps/lua/src/lundump.c	45;"	d	file:
LoadVector	deps/lua/src/lundump.c	46;"	d	file:
LocVar	deps/lua/src/lobject.h	/^typedef struct LocVar {$/;"	s
LocVar	deps/lua/src/lobject.h	/^} LocVar;$/;"	t	typeref:struct:LocVar
LogLevel	deps/pmdk/src/test/unittest/ut.c	/^static int LogLevel;		\/* set by UNITTEST_LOG_LEVEL env variable *\/$/;"	v	file:
Log_alignment	deps/pmdk/src/common/out.c	/^static unsigned Log_alignment;$/;"	v	file:
Log_create_attr	deps/pmdk/src/libpmemlog/log.c	/^static const struct pool_attr Log_create_attr = {$/;"	v	typeref:struct:pool_attr	file:
Log_level	deps/pmdk/src/common/out.c	/^static int Log_level;$/;"	v	file:
Log_open_attr	deps/pmdk/src/libpmemlog/log.c	/^static const struct pool_attr Log_open_attr = {$/;"	v	typeref:struct:pool_attr	file:
Log_prefix	deps/pmdk/src/common/out.c	/^static const char *Log_prefix;$/;"	v	file:
LoggingBase	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^class LoggingBase:$/;"	c
Long	deps/pmdk/src/test/unittest/context.py	/^class Long(_TestType):$/;"	c
MADV_DONTFORK	deps/pmdk/src/common/os.h	63;"	d
MAGIC	deps/jemalloc/test/unit/zero.c	13;"	d	file:
MAGIC	deps/jemalloc/test/unit/zero.c	45;"	d	file:
MAJOR_VERSION	deps/pmdk/src/test/out_err/out_err.c	40;"	d	file:
MAJOR_VERSION	deps/pmdk/src/test/out_err_win/out_err_win.c	40;"	d	file:
MAJOR_VERSION	deps/pmdk/src/test/pmem_has_auto_flush_win/pmem_has_auto_flush_win.c	55;"	d	file:
MAJOR_VERSION	deps/pmdk/src/test/traces/traces.c	40;"	d	file:
MAJOR_VERSION	deps/pmdk/src/test/traces_custom_function/traces_custom_function.c	44;"	d	file:
MAJOR_VERSION	deps/pmdk/src/test/util_ctl/util_ctl.c	46;"	d	file:
MAJOR_VERSION	deps/pmdk/src/test/util_is_poolset/util_is_poolset.c	47;"	d	file:
MAJOR_VERSION	deps/pmdk/src/test/util_poolset/util_poolset.c	50;"	d	file:
MAJOR_VERSION	deps/pmdk/src/test/util_poolset_foreach/util_poolset_foreach.c	47;"	d	file:
MAJOR_VERSION	deps/pmdk/src/test/util_poolset_parse/util_poolset_parse.c	47;"	d	file:
MAJOR_VERSION	deps/pmdk/src/test/util_poolset_size/util_poolset_size.c	47;"	d	file:
MAJOR_VERSION	deps/pmdk/src/test/util_sds/util_sds.c	62;"	d	file:
MAKECOLOR	deps/Makefile	/^MAKECOLOR="\\033[32;1m"$/;"	m
MAKECOLOR	src/Makefile	/^MAKECOLOR="\\033[32;1m"$/;"	m
MALLOC	deps/pmdk/src/test/unittest/unittest.h	337;"	d
MALLOC	src/Makefile	/^	MALLOC=jemalloc$/;"	m
MALLOC	src/Makefile	/^	MALLOC=libc$/;"	m
MALLOC	src/Makefile	/^	MALLOC=tcmalloc$/;"	m
MALLOC	src/Makefile	/^	MALLOC=tcmalloc_minimal$/;"	m
MALLOCX_ALIGN	deps/jemalloc/include/jemalloc/jemalloc.h	100;"	d
MALLOCX_ALIGN	deps/jemalloc/include/jemalloc/jemalloc.h	98;"	d
MALLOCX_ALIGN	deps/jemalloc/include/jemalloc/jemalloc_macros.h	16;"	d
MALLOCX_ALIGN	deps/jemalloc/include/jemalloc/jemalloc_macros.h	18;"	d
MALLOCX_ALIGN_GET	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	215;"	d
MALLOCX_ALIGN_GET_SPECIFIED	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	213;"	d
MALLOCX_ARENA	deps/jemalloc/include/jemalloc/jemalloc.h	114;"	d
MALLOCX_ARENA	deps/jemalloc/include/jemalloc/jemalloc_macros.h	32;"	d
MALLOCX_ARENA_GET	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	222;"	d
MALLOCX_ARENA_MASK	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	207;"	d
MALLOCX_ARENA_MAX	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	208;"	d
MALLOCX_LG_ALIGN	deps/jemalloc/include/jemalloc/jemalloc.h	96;"	d
MALLOCX_LG_ALIGN	deps/jemalloc/include/jemalloc/jemalloc_macros.h	14;"	d
MALLOCX_LG_ALIGN_MASK	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	211;"	d
MALLOCX_TCACHE	deps/jemalloc/include/jemalloc/jemalloc.h	109;"	d
MALLOCX_TCACHE	deps/jemalloc/include/jemalloc/jemalloc_macros.h	27;"	d
MALLOCX_TCACHE_GET	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	220;"	d
MALLOCX_TCACHE_MASK	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	209;"	d
MALLOCX_TCACHE_MAX	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	210;"	d
MALLOCX_TCACHE_NONE	deps/jemalloc/include/jemalloc/jemalloc.h	110;"	d
MALLOCX_TCACHE_NONE	deps/jemalloc/include/jemalloc/jemalloc_macros.h	28;"	d
MALLOCX_ZERO	deps/jemalloc/include/jemalloc/jemalloc.h	104;"	d
MALLOCX_ZERO	deps/jemalloc/include/jemalloc/jemalloc_macros.h	22;"	d
MALLOCX_ZERO_GET	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	217;"	d
MALLOC_CONF	deps/jemalloc/Makefile	/^MALLOC_CONF := JE_MALLOC_CONF$/;"	m
MALLOC_FREE_SIZE	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	54;"	d	file:
MALLOC_MUTEX_INITIALIZER	deps/jemalloc/include/jemalloc/internal/mutex.h	12;"	d
MALLOC_MUTEX_INITIALIZER	deps/jemalloc/include/jemalloc/internal/mutex.h	14;"	d
MALLOC_MUTEX_INITIALIZER	deps/jemalloc/include/jemalloc/internal/mutex.h	20;"	d
MALLOC_MUTEX_INITIALIZER	deps/jemalloc/include/jemalloc/internal/mutex.h	25;"	d
MALLOC_MUTEX_INITIALIZER	deps/jemalloc/include/jemalloc/internal/mutex.h	7;"	d
MALLOC_MUTEX_INITIALIZER	deps/jemalloc/include/jemalloc/internal/mutex.h	9;"	d
MALLOC_MUTEX_TYPE	deps/jemalloc/include/jemalloc/internal/mutex.h	19;"	d
MALLOC_MUTEX_TYPE	deps/jemalloc/include/jemalloc/internal/mutex.h	24;"	d
MALLOC_PRINTF_BUFSIZE	deps/jemalloc/include/jemalloc/internal/util.h	41;"	d
MALLOC_TSD	deps/jemalloc/include/jemalloc/internal/tsd.h	591;"	d
MALLOC_TSD_CLEANUPS_MAX	deps/jemalloc/include/jemalloc/internal/tsd.h	5;"	d
MAN3	deps/jemalloc/Makefile	/^MAN3 := $(objroot)doc\/jemalloc$(install_suffix).3$/;"	m
MANDIR	deps/jemalloc/Makefile	/^MANDIR := $(DESTDIR)\/usr\/local\/share\/man$/;"	m
MANPAGES	deps/pmdk/doc/Makefile	/^MANPAGES = $(MANPAGES_7_GROFF) $(MANPAGES_5_GROFF) $(MANPAGES_3_GROFF) $(MANPAGES_1_GROFF) \\$/;"	m
MANPAGES	deps/pmdk/src/tools/daxio/Makefile	/^MANPAGES = $(TOP)\/doc\/daxio.1$/;"	m
MANPAGES	deps/pmdk/src/tools/pmempool/Makefile	/^MANPAGES = $(TOP)\/doc\/pmempool.1\\$/;"	m
MANPAGES_1_DUMMY_EXP	deps/pmdk/doc/Makefile	/^MANPAGES_1_DUMMY_EXP =$/;"	m
MANPAGES_1_GROFF	deps/pmdk/doc/Makefile	/^MANPAGES_1_GROFF = $(MANPAGES_1_MD:.1.md=.1)$/;"	m
MANPAGES_1_GROFF_EXP	deps/pmdk/doc/Makefile	/^MANPAGES_1_GROFF_EXP = $(MANPAGES_1_MD_EXP:.1.md=.1)$/;"	m
MANPAGES_1_GROFF_PMEM2	deps/pmdk/doc/Makefile	/^MANPAGES_1_GROFF_PMEM2 = $(MANPAGES_1_MD_PMEM2:.1.md=.1)$/;"	m
MANPAGES_1_MD	deps/pmdk/doc/Makefile	/^MANPAGES_1_MD = pmempool\/pmempool.1.md pmempool\/pmempool-info.1.md pmempool\/pmempool-create.1.md \\$/;"	m
MANPAGES_1_MD_EXP	deps/pmdk/doc/Makefile	/^MANPAGES_1_MD_EXP =$/;"	m
MANPAGES_1_MD_PMEM2	deps/pmdk/doc/Makefile	/^MANPAGES_1_MD_PMEM2 =$/;"	m
MANPAGES_3_DUMMY	deps/pmdk/doc/Makefile	/^MANPAGES_3_DUMMY = libpmem\/pmem_drain.3 libpmem\/pmem_has_hw_drain.3 libpmem\/pmem_has_auto_flush.3 \\$/;"	m
MANPAGES_3_DUMMY_EXP	deps/pmdk/doc/Makefile	/^MANPAGES_3_DUMMY_EXP =$/;"	m
MANPAGES_3_GROFF	deps/pmdk/doc/Makefile	/^MANPAGES_3_GROFF = $(MANPAGES_3_MD:.3.md=.3)$/;"	m
MANPAGES_3_GROFF_EXP	deps/pmdk/doc/Makefile	/^MANPAGES_3_GROFF_EXP = $(MANPAGES_3_MD_EXP:.3.md=.3)$/;"	m
MANPAGES_3_GROFF_PMEM2	deps/pmdk/doc/Makefile	/^MANPAGES_3_GROFF_PMEM2 = $(MANPAGES_3_MD_PMEM2:.3.md=.3)$/;"	m
MANPAGES_3_MD	deps/pmdk/doc/Makefile	/^MANPAGES_3_MD = libpmem\/pmem_flush.3.md libpmem\/pmem_is_pmem.3.md libpmem\/pmem_memmove_persist.3.md \\$/;"	m
MANPAGES_3_MD_EXP	deps/pmdk/doc/Makefile	/^MANPAGES_3_MD_EXP =$/;"	m
MANPAGES_3_MD_PMEM2	deps/pmdk/doc/Makefile	/^MANPAGES_3_MD_PMEM2 = libpmem2\/pmem2_errormsg.3.md libpmem2\/pmem2_config.3.md libpmem2\/pmem2_mapping.3.md$/;"	m
MANPAGES_5_GROFF	deps/pmdk/doc/Makefile	/^MANPAGES_5_GROFF = $(MANPAGES_5_MD:.5.md=.5)$/;"	m
MANPAGES_5_GROFF_EXP	deps/pmdk/doc/Makefile	/^MANPAGES_5_GROFF_EXP = $(MANPAGES_5_MD_EXP:.5.md=.5)$/;"	m
MANPAGES_5_GROFF_PMEM2	deps/pmdk/doc/Makefile	/^MANPAGES_5_GROFF_PMEM2 = $(MANPAGES_5_MD_PMEM2:.5.md=.5)$/;"	m
MANPAGES_5_MD	deps/pmdk/doc/Makefile	/^MANPAGES_5_MD = poolset\/poolset.5.md pmem_ctl\/pmem_ctl.5.md$/;"	m
MANPAGES_5_MD_EXP	deps/pmdk/doc/Makefile	/^MANPAGES_5_MD_EXP =$/;"	m
MANPAGES_5_MD_PMEM2	deps/pmdk/doc/Makefile	/^MANPAGES_5_MD_PMEM2 =$/;"	m
MANPAGES_7_GROFF	deps/pmdk/doc/Makefile	/^MANPAGES_7_GROFF = $(MANPAGES_7_MD:.7.md=.7)$/;"	m
MANPAGES_7_GROFF_EXP	deps/pmdk/doc/Makefile	/^MANPAGES_7_GROFF_EXP = $(MANPAGES_7_MD_EXP:.7.md=.7)$/;"	m
MANPAGES_7_GROFF_PMEM2	deps/pmdk/doc/Makefile	/^MANPAGES_7_GROFF_PMEM2 = $(MANPAGES_7_MD_PMEM2:.7.md=.7)$/;"	m
MANPAGES_7_MD	deps/pmdk/doc/Makefile	/^MANPAGES_7_MD = libpmem\/libpmem.7.md libpmemblk\/libpmemblk.7.md libpmemlog\/libpmemlog.7.md \\$/;"	m
MANPAGES_7_MD_EXP	deps/pmdk/doc/Makefile	/^MANPAGES_7_MD_EXP =$/;"	m
MANPAGES_7_MD_PMEM2	deps/pmdk/doc/Makefile	/^MANPAGES_7_MD_PMEM2 = libpmem2\/libpmem2.7.md$/;"	m
MANPAGES_DESTDIR_1	deps/pmdk/doc/Makefile	/^MANPAGES_DESTDIR_1 = $(DESTDIR)$(man1dir)$/;"	m
MANPAGES_DESTDIR_3	deps/pmdk/doc/Makefile	/^MANPAGES_DESTDIR_3 = $(DESTDIR)$(man3dir)$/;"	m
MANPAGES_DESTDIR_5	deps/pmdk/doc/Makefile	/^MANPAGES_DESTDIR_5 = $(DESTDIR)$(man5dir)$/;"	m
MANPAGES_DESTDIR_7	deps/pmdk/doc/Makefile	/^MANPAGES_DESTDIR_7 = $(DESTDIR)$(man7dir)$/;"	m
MANPAGES_WEBDIR_LINUX	deps/pmdk/doc/Makefile	/^MANPAGES_WEBDIR_LINUX = web_linux$/;"	m
MANPAGES_WEBDIR_WINDOWS	deps/pmdk/doc/Makefile	/^MANPAGES_WEBDIR_WINDOWS = web_windows$/;"	m
MAP_ANON	deps/pmdk/src/windows/include/sys/mman.h	54;"	d
MAP_ANONYMOUS	deps/pmdk/src/windows/include/sys/mman.h	53;"	d
MAP_BTREE	deps/pmdk/src/examples/libpmemobj/map/map_btree.h	48;"	d
MAP_BTREE_H	deps/pmdk/src/examples/libpmemobj/map/map_btree.h	38;"	d
MAP_CTREE	deps/pmdk/src/examples/libpmemobj/map/map_ctree.h	48;"	d
MAP_CTREE_H	deps/pmdk/src/examples/libpmemobj/map/map_ctree.h	38;"	d
MAP_FAILED	deps/pmdk/src/windows/include/sys/mman.h	62;"	d
MAP_FIXED	deps/pmdk/src/windows/include/sys/mman.h	52;"	d
MAP_H	deps/pmdk/src/examples/libpmemobj/map/map.h	38;"	d
MAP_HASHMAP_ATOMIC	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.h	48;"	d
MAP_HASHMAP_ATOMIC_H	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.h	38;"	d
MAP_HASHMAP_RP	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.h	48;"	d
MAP_HASHMAP_RP_H	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.h	38;"	d
MAP_HASHMAP_TX	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.h	48;"	d
MAP_HASHMAP_TX_H	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.h	38;"	d
MAP_NORESERVE	deps/pmdk/src/common/mmap.h	69;"	d
MAP_NORESERVE	deps/pmdk/src/windows/include/sys/mman.h	56;"	d
MAP_PRIVATE	deps/pmdk/src/windows/include/sys/mman.h	50;"	d
MAP_RBTREE	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.h	48;"	d
MAP_RBTREE_H	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.h	38;"	d
MAP_RTREE	deps/pmdk/src/examples/libpmemobj/map/map_rtree.h	48;"	d
MAP_RTREE_H	deps/pmdk/src/examples/libpmemobj/map/map_rtree.h	38;"	d
MAP_SHARED	deps/pmdk/src/windows/include/sys/mman.h	49;"	d
MAP_SHARED_VALIDATE	deps/pmdk/src/common/mmap.h	80;"	d
MAP_SKIPLIST	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.h	44;"	d
MAP_SKIPLIST_H	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.h	38;"	d
MAP_SYNC	deps/pmdk/src/common/mmap.h	76;"	d
MAP_SYNC_SUPP	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	60;"	d	file:
MAP_TYPES_NUM	deps/pmdk/src/benchmarks/map_bench.cpp	88;"	d	file:
MAP_TYPE_OFFSET	deps/pmdk/src/examples/libpmemobj/map/map.h	47;"	d
MASK	src/rand.c	47;"	d	file:
MASK0	deps/lua/src/lopcodes.h	74;"	d
MASK1	deps/lua/src/lopcodes.h	71;"	d
MATH_C_	deps/jemalloc/test/src/math.c	1;"	d	file:
MAX	deps/pmdk/src/windows/include/sys/param.h	50;"	d
MAX1	utils/hashtable/rehashing.c	99;"	d	file:
MAX2	utils/hashtable/rehashing.c	100;"	d	file:
MAXALIGN	deps/jemalloc/test/integration/aligned_alloc.c	4;"	d	file:
MAXALIGN	deps/jemalloc/test/integration/mallocx.c	168;"	d	file:
MAXALIGN	deps/jemalloc/test/integration/mallocx.c	220;"	d	file:
MAXALIGN	deps/jemalloc/test/integration/posix_memalign.c	4;"	d	file:
MAXALIGN	deps/jemalloc/test/integration/sdallocx.c	3;"	d	file:
MAXALIGN	deps/lua/src/lua_struct.c	72;"	d	file:
MAXARG_A	deps/lua/src/lopcodes.h	65;"	d
MAXARG_B	deps/lua/src/lopcodes.h	66;"	d
MAXARG_Bx	deps/lua/src/lopcodes.h	57;"	d
MAXARG_Bx	deps/lua/src/lopcodes.h	60;"	d
MAXARG_C	deps/lua/src/lopcodes.h	67;"	d
MAXARG_sBx	deps/lua/src/lopcodes.h	58;"	d
MAXARG_sBx	deps/lua/src/lopcodes.h	61;"	d
MAXASIZE	deps/lua/src/ltable.c	47;"	d	file:
MAXBITS	deps/lua/src/ltable.c	42;"	d	file:
MAXBITS	deps/lua/src/ltable.c	44;"	d	file:
MAXINDEXRK	deps/lua/src/lopcodes.h	127;"	d
MAXINTSIZE	deps/lua/src/lua_struct.c	59;"	d	file:
MAXLOGFILENAME	deps/pmdk/src/test/unittest/ut.c	184;"	d	file:
MAXMEMORY_ALLKEYS_LRU	src/server.h	428;"	d
MAXMEMORY_ALLKEYS_RANDOM	src/server.h	429;"	d
MAXMEMORY_EVICTION_POOL_SIZE	src/server.h	534;"	d
MAXMEMORY_NO_EVICTION	src/server.h	430;"	d
MAXMEMORY_VOLATILE_LRU	src/server.h	425;"	d
MAXMEMORY_VOLATILE_RANDOM	src/server.h	427;"	d
MAXMEMORY_VOLATILE_TTL	src/server.h	426;"	d
MAXPRINT	deps/pmdk/src/common/out.c	64;"	d	file:
MAXPRINT	deps/pmdk/src/common/out.c	66;"	d	file:
MAXPRINT	deps/pmdk/src/test/tools/sparsefile/sparsefile.c	47;"	d	file:
MAXPRINT	deps/pmdk/src/test/unittest/ut.c	185;"	d	file:
MAXSRC	deps/lua/src/llex.c	75;"	d	file:
MAXSTACK	deps/lua/src/llimits.h	93;"	d
MAXSZ	deps/jemalloc/test/integration/mallocx.c	130;"	d	file:
MAXSZ	deps/jemalloc/test/integration/mallocx.c	162;"	d	file:
MAXSZ	deps/jemalloc/test/integration/rallocx.c	57;"	d	file:
MAXSZ	deps/jemalloc/test/integration/rallocx.c	88;"	d	file:
MAXTAGLOOP	deps/lua/src/lvm.c	32;"	d	file:
MAXTHREADS	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	50;"	d	file:
MAX_ABS_ERR	deps/jemalloc/test/unit/math.c	4;"	d	file:
MAX_ACCEPTS_PER_CALL	src/networking.c	615;"	d	file:
MAX_ACTS	deps/pmdk/src/test/obj_action/obj_action.c	78;"	d	file:
MAX_ALIEN_TIMER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	66;"	d	file:
MAX_ALIEN_TIMER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	84;"	d	file:
MAX_ALIGN	deps/jemalloc/test/integration/rallocx.c	163;"	d	file:
MAX_ALIGN	deps/jemalloc/test/integration/rallocx.c	180;"	d	file:
MAX_ALIGN	deps/jemalloc/test/unit/hash.c	146;"	d	file:
MAX_ALIGN	deps/jemalloc/test/unit/hash.c	152;"	d	file:
MAX_ALLOC	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	58;"	d	file:
MAX_ALLOCATION_CLASSES	deps/pmdk/src/libpmemobj/alloc_class.h	49;"	d
MAX_ALLOC_CATEGORIES	deps/pmdk/src/libpmemobj/alloc_class.c	74;"	d	file:
MAX_ALLOC_CLASS	deps/pmdk/src/test/obj_realloc/obj_realloc.c	47;"	d	file:
MAX_ALLOC_CLASS_TYPES	deps/pmdk/src/libpmemobj/alloc_class.h	/^	MAX_ALLOC_CLASS_TYPES$/;"	e	enum:alloc_class_type
MAX_ALLOC_MUL	deps/pmdk/src/test/obj_realloc/obj_realloc.c	46;"	d	file:
MAX_ARRAY_TYPE	deps/pmdk/src/examples/libpmemobj/array/array.c	/^	MAX_ARRAY_TYPE$/;"	e	enum:array_types	file:
MAX_BLOCKS	deps/pmdk/src/test/obj_heap/obj_heap.c	62;"	d	file:
MAX_BUCKET_MAP_ENTRIES	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	118;"	d	file:
MAX_BUFFLEN	deps/pmdk/src/examples/libpmemobj/array/array.c	47;"	d	file:
MAX_BUF_LEN	deps/pmdk/src/examples/libpmemobj/string_store/layout.h	38;"	d
MAX_BUF_LEN	deps/pmdk/src/examples/libpmemobj/string_store_tx/layout.h	38;"	d
MAX_BUF_LEN	deps/pmdk/src/examples/libpmemobj/string_store_tx_type/layout.h	37;"	d
MAX_BUF_LEN	deps/pmdk/src/test/obj_reorder_basic/obj_reorder_basic.c	47;"	d	file:
MAX_BULLET_TIMER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	69;"	d	file:
MAX_BULLET_TIMER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	86;"	d	file:
MAX_C	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	MAX_C$/;"	e	enum:colors	file:
MAX_CACHED_RANGES	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	714;"	d	file:
MAX_CHUNK	deps/pmdk/src/libpmemobj/heap_layout.h	50;"	d
MAX_CHUNK_TYPE	deps/pmdk/src/libpmemobj/heap_layout.h	/^	MAX_CHUNK_TYPE$/;"	e	enum:chunk_type
MAX_CHUNK_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	50;"	d	file:
MAX_CLUSTER_ACCEPTS_PER_CALL	src/cluster.c	573;"	d	file:
MAX_CMSG	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^	MAX_CMSG$/;"	e	enum:kv_cmsg
MAX_COLOR	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	MAX_COLOR$/;"	e	enum:rb_color	file:
MAX_CONFIG_FILE_LEN	deps/pmdk/src/common/ctl.c	43;"	d	file:
MAX_CTL_NODE	deps/pmdk/src/common/ctl.h	/^	MAX_CTL_NODE$/;"	e	enum:ctl_node_type
MAX_CTL_QUERY_SOURCE	deps/pmdk/src/common/ctl.h	/^	MAX_CTL_QUERY_SOURCE$/;"	e	enum:ctl_query_source
MAX_CTL_QUERY_TYPE	deps/pmdk/src/common/ctl.h	/^	MAX_CTL_QUERY_TYPE$/;"	e	enum:ctl_query_type
MAX_DEFAULT_ARENAS	deps/pmdk/src/libpmemobj/heap.c	62;"	d	file:
MAX_DIGITS	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	56;"	d	file:
MAX_EVENT_BATCHSZ	src/ae_evport.c	66;"	d	file:
MAX_FORMAT	deps/lua/src/lstrlib.c	693;"	d	file:
MAX_FS_ENTRY_TYPES	deps/pmdk/src/common/fs.h	/^	MAX_FS_ENTRY_TYPES$/;"	e	enum:fs_entry_type
MAX_FUNC	deps/pmdk/src/test/obj_locks/obj_locks.c	44;"	d	file:
MAX_FUNC	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	78;"	d	file:
MAX_GSTATE_TIMER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	63;"	d	file:
MAX_GSTATE_TIMER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	81;"	d	file:
MAX_HASHSET_THRESHOLD	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_internal.h	46;"	d
MAX_HEADER_TYPES	deps/pmdk/src/libpmemobj/heap_layout.h	/^	MAX_HEADER_TYPES$/;"	e	enum:header_type
MAX_IDS	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	138;"	d	file:
MAX_INDENT	deps/pmdk/src/tools/pmempool/output.c	65;"	d	file:
MAX_INSERTS	deps/pmdk/src/examples/libpmemobj/map/data_store.c	59;"	d	file:
MAX_INT	deps/lua/src/llimits.h	35;"	d
MAX_ITEM	deps/lua/src/lstrlib.c	686;"	d	file:
MAX_KEY_LEN	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	42;"	d
MAX_LEN	deps/pmdk/src/test/pmem_map_file/mocks_posix.c	41;"	d	file:
MAX_LEN	deps/pmdk/src/test/pmem_map_file/mocks_windows.c	40;"	d	file:
MAX_LEN	deps/pmdk/src/test/pmem_map_file_win/mocks_windows.c	40;"	d	file:
MAX_LG_ALIGN	deps/jemalloc/test/integration/rallocx.c	189;"	d	file:
MAX_LG_ALIGN	deps/jemalloc/test/integration/rallocx.c	218;"	d	file:
MAX_LISTS	deps/pmdk/src/examples/libpmemobj/lists.c	51;"	d	file:
MAX_LIST_TYPES	deps/pmdk/src/examples/libpmemobj/lists.c	/^	MAX_LIST_TYPES$/;"	e	enum:list_type	file:
MAX_LIT	src/lzf_c.c	74;"	d	file:
MAX_LOG_TYPE	deps/pmdk/src/libpmemobj/memops.h	/^	MAX_LOG_TYPE,$/;"	e	enum:log_type
MAX_LUMEM	deps/lua/src/llimits.h	32;"	d
MAX_MALLOC_FREE_LOOP	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	53;"	d	file:
MAX_MEMBLOCK_STATE	deps/pmdk/src/libpmemobj/memblock.h	/^	MAX_MEMBLOCK_STATE,$/;"	e	enum:memblock_state
MAX_MEMORY_BLOCK	deps/pmdk/src/libpmemobj/memblock.h	/^	MAX_MEMORY_BLOCK$/;"	e	enum:memory_block_type
MAX_MEMORY_BLOCK_SIZE	deps/pmdk/src/libpmemobj/heap_layout.h	53;"	d
MAX_MOCK_LANES	deps/pmdk/src/test/obj_lane/obj_lane.c	49;"	d	file:
MAX_MSG_STR_SIZE	deps/pmdk/src/libpmempool/check_util.c	53;"	d	file:
MAX_NODES	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	47;"	d	file:
MAX_OBJECTS	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	58;"	d	file:
MAX_OFF	src/lzf_c.c	75;"	d	file:
MAX_OFFSET	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	51;"	d	file:
MAX_OFFSET	deps/pmdk/src/benchmarks/pmem_memset.cpp	49;"	d	file:
MAX_OFFSET	deps/pmdk/src/benchmarks/rpmem.cpp	56;"	d	file:
MAX_OPENS	deps/pmdk/src/test/obj_sync/obj_sync.c	51;"	d	file:
MAX_OPERATION_LOG_TYPE	deps/pmdk/src/libpmemobj/memops.h	/^	MAX_OPERATION_LOG_TYPE$/;"	e	enum:operation_log_type
MAX_OPERATION_TYPE	deps/pmdk/src/libpmemobj/pmalloc.c	/^	MAX_OPERATION_TYPE,$/;"	e	enum:pmalloc_operation_type	file:
MAX_OPS	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	57;"	d	file:
MAX_OPS_PER_THREAD	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	45;"	d	file:
MAX_OVERALL_OVERHEAD	deps/pmdk/src/test/obj_fragmentation/obj_fragmentation.c	45;"	d	file:
MAX_PATH_LEN	deps/pmdk/src/test/obj_direct/obj_direct.c	41;"	d	file:
MAX_PATH_LEN	deps/pmdk/src/test/obj_oid_thread/obj_oid_thread.c	41;"	d	file:
MAX_PATH_LEN	deps/pmdk/src/test/obj_pool_lookup/obj_pool_lookup.c	38;"	d	file:
MAX_PLAYER_TIMER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	68;"	d	file:
MAX_PLAYER_TIMER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	85;"	d	file:
MAX_PMEM_TYPE	deps/pmdk/src/common/mmap.h	/^	MAX_PMEM_TYPE$/;"	e	enum:pmem_map_type
MAX_POBJ_HEADER_TYPES	deps/pmdk/src/include/libpmemobj/ctl.h	/^	MAX_POBJ_HEADER_TYPES$/;"	e	enum:pobj_header_type
MAX_POOL_SIZE	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	63;"	d	file:
MAX_POOL_SIZE	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	63;"	d	file:
MAX_PREFIX_LEN	deps/pmdk/src/examples/libpmemobj/libart/art.h	62;"	d
MAX_PREFIX_LEN	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	52;"	d
MAX_QUEUE_OP	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	MAX_QUEUE_OP,$/;"	e	enum:queue_op	file:
MAX_RANGE	deps/jemalloc/test/unit/prng.c	154;"	d	file:
MAX_RANGE	deps/jemalloc/test/unit/prng.c	175;"	d	file:
MAX_RANGE	deps/jemalloc/test/unit/prng.c	196;"	d	file:
MAX_RB	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	MAX_RB$/;"	e	enum:rb_children	file:
MAX_READ_LEN	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	430;"	d	file:
MAX_REF	src/lzf_c.c	76;"	d	file:
MAX_REL_ERR	deps/jemalloc/test/unit/math.c	3;"	d	file:
MAX_RESP_MSG	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^	MAX_RESP_MSG$/;"	e	enum:resp_messages
MAX_RPD_LOG	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	/^	MAX_RPD_LOG,$/;"	e	enum:rpmemd_log_level
MAX_RPMEM_ERR	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	MAX_RPMEM_ERR,$/;"	e	enum:rpmem_err
MAX_RPMEM_FIP_NODE	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	/^	MAX_RPMEM_FIP_NODE,$/;"	e	enum:rpmem_fip_node
MAX_RPMEM_MSG_TYPE	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	MAX_RPMEM_MSG_TYPE,$/;"	e	enum:rpmem_msg_type
MAX_RPMEM_PM	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	MAX_RPMEM_PM,$/;"	e	enum:rpmem_persist_method
MAX_RPMEM_PROV	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	MAX_RPMEM_PROV,$/;"	e	enum:rpmem_provider
MAX_RUN_LOCKS	deps/pmdk/src/libpmemobj/heap.c	55;"	d	file:
MAX_RUN_LOCKS_VG	deps/pmdk/src/libpmemobj/heap.c	56;"	d	file:
MAX_RUN_SIZE	deps/pmdk/src/libpmemobj/alloc_class.c	60;"	d	file:
MAX_RUN_WASTED_BYTES	deps/pmdk/src/libpmemobj/alloc_class.c	66;"	d	file:
MAX_SIZET	deps/lua/src/llimits.h	30;"	d
MAX_SIZE_LENGTH	deps/pmdk/src/common/file.c	56;"	d	file:
MAX_SIZE_LENGTH	deps/pmdk/src/common/file_posix.c	54;"	d	file:
MAX_SLOTS	deps/pmdk/src/libpmemobj/ravl.c	/^	MAX_SLOTS,$/;"	e	enum:ravl_slot_type	file:
MAX_STAR1_TIMER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	87;"	d	file:
MAX_STAR2_TIMER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	88;"	d	file:
MAX_TARGET_LENGTH	deps/pmdk/src/test/rpmem_addr_ext/rpmem_addr_ext.c	52;"	d	file:
MAX_THREADS	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	64;"	d	file:
MAX_THREADS	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	44;"	d	file:
MAX_THREAD_NUM	deps/pmdk/src/test/obj_sync/obj_sync.c	43;"	d	file:
MAX_TX_STAGE	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	MAX_TX_STAGE$/;"	e	enum:pobj_tx_stage
MAX_TYPES	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^	MAX_TYPES$/;"	e	enum:types	file:
MAX_TYPE_MODE	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	MAX_TYPE_MODE,$/;"	e	enum:type_mode	file:
MAX_TYPE_NUM	deps/pmdk/src/examples/libpmemobj/array/array.c	48;"	d	file:
MAX_UNDEFS	deps/pmdk/src/libpmemobj/obj.c	733;"	d	file:
MAX_VALIDATE	deps/jemalloc/test/integration/rallocx.c	190;"	d	file:
MAX_VALIDATE	deps/jemalloc/test/integration/rallocx.c	217;"	d	file:
MAX_WORKER_STATE	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	MAX_WORKER_STATE,$/;"	e	enum:benchmark_worker_state
MB	deps/pmdk/src/test/blk_pool/blk_pool.c	48;"	d	file:
MB	deps/pmdk/src/test/blk_pool_win/blk_pool_win.c	46;"	d	file:
MB	deps/pmdk/src/test/log_pool/log_pool.c	46;"	d	file:
MB	deps/pmdk/src/test/log_pool_win/log_pool_win.c	46;"	d	file:
MB	deps/pmdk/src/test/obj_pool/obj_pool.c	48;"	d	file:
MB	deps/pmdk/src/test/obj_pool_win/obj_pool_win.c	46;"	d	file:
MB	deps/pmdk/src/test/obj_recovery/obj_recovery.c	49;"	d	file:
MEGABYTE	deps/pmdk/src/common/mmap.h	139;"	d
MEGABYTE	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	49;"	d	file:
MEGABYTE	deps/pmdk/src/test/pmem_unmap/pmem_unmap.c	40;"	d	file:
MEGABYTE	deps/pmdk/src/test/win_mmap_dtor/win_mmap_dtor.c	42;"	d	file:
MEGABYTE	deps/pmdk/src/test/win_poolset_unmap/win_poolset_unmap.c	45;"	d	file:
MEMALIGN	deps/pmdk/src/test/unittest/unittest.h	367;"	d
MEMBLOCK_ALLOCATED	deps/pmdk/src/libpmemobj/memblock.h	/^	MEMBLOCK_ALLOCATED,$/;"	e	enum:memblock_state
MEMBLOCK_FREE	deps/pmdk/src/libpmemobj/memblock.h	/^	MEMBLOCK_FREE,$/;"	e	enum:memblock_state
MEMBLOCK_STATE_UNKNOWN	deps/pmdk/src/libpmemobj/memblock.h	/^	MEMBLOCK_STATE_UNKNOWN,$/;"	e	enum:memblock_state
MEMCHECK	deps/pmdk/src/test/unittest/valgrind.py	/^    MEMCHECK = 1$/;"	v	class:_Tool
MEMCHECK	deps/pmdk/src/test/unittest/valgrind.py	/^MEMCHECK = _Tool.MEMCHECK$/;"	v
MEMCPY_AVX	deps/pmdk/src/libpmem/x86_64/init.c	/^	MEMCPY_AVX,$/;"	e	enum:memcpy_impl	file:
MEMCPY_AVX512F	deps/pmdk/src/libpmem/x86_64/init.c	/^	MEMCPY_AVX512F$/;"	e	enum:memcpy_impl	file:
MEMCPY_GENERIC	deps/pmdk/src/libpmem/x86_64/init.c	/^	MEMCPY_GENERIC,$/;"	e	enum:memcpy_impl	file:
MEMCPY_INVALID	deps/pmdk/src/libpmem/x86_64/init.c	/^	MEMCPY_INVALID,$/;"	e	enum:memcpy_impl	file:
MEMCPY_LIBC	deps/pmdk/src/libpmem/x86_64/init.c	/^	MEMCPY_LIBC,$/;"	e	enum:memcpy_impl	file:
MEMCPY_MEMSET_H	deps/pmdk/src/libpmem/x86_64/memcpy_memset.h	34;"	d
MEMCPY_SSE2	deps/pmdk/src/libpmem/x86_64/init.c	/^	MEMCPY_SSE2,$/;"	e	enum:memcpy_impl	file:
MEMCPY_TEMPLATE	deps/pmdk/src/libpmem/x86_64/init.c	119;"	d	file:
MEMERRMSG	deps/lua/src/lmem.h	16;"	d
MEMORY_BLOCK_EQUALS	deps/pmdk/src/libpmemobj/memblock.h	59;"	d
MEMORY_BLOCK_HUGE	deps/pmdk/src/libpmemobj/memblock.h	/^	MEMORY_BLOCK_HUGE,$/;"	e	enum:memory_block_type
MEMORY_BLOCK_IS_NONE	deps/pmdk/src/libpmemobj/memblock.h	56;"	d
MEMORY_BLOCK_NONE	deps/pmdk/src/libpmemobj/memblock.h	52;"	d
MEMORY_BLOCK_RUN	deps/pmdk/src/libpmemobj/memblock.h	/^	MEMORY_BLOCK_RUN,$/;"	e	enum:memory_block_type
MEMSET_TEMPLATE	deps/pmdk/src/libpmem/x86_64/init.c	141;"	d	file:
MEMTEST_32BIT	src/memtest.c	44;"	d	file:
MEMTEST_64BIT	src/memtest.c	46;"	d	file:
MEMTEST_BACKUP_WORDS	src/memtest.c	275;"	d	file:
MEMTEST_DECACHE_SIZE	src/memtest.c	279;"	d	file:
MEMTEST_MAX_REGIONS	src/debug.c	914;"	d	file:
MERCATOR_MAX	deps/geohash-int/geohash_helper.c	/^const double MERCATOR_MAX = 20037726.37;$/;"	v
MERCATOR_MIN	deps/geohash-int/geohash_helper.c	/^const double MERCATOR_MIN = -20037726.37;$/;"	v
MEXP	deps/jemalloc/test/include/test/SFMT-params.h	125;"	d
MEXP	deps/jemalloc/test/include/test/SFMT-params.h	127;"	d
MEXP	deps/jemalloc/test/include/test/SFMT-params.h	43;"	d
MEXP	deps/jemalloc/test/include/test/jemalloc_test.h	125;"	d
MIGRATE_SOCKET_CACHE_ITEMS	src/cluster.c	4534;"	d	file:
MIGRATE_SOCKET_CACHE_TTL	src/cluster.c	4535;"	d	file:
MIN	deps/pmdk/src/examples/ex_common.h	41;"	d
MIN	deps/pmdk/src/windows/include/sys/param.h	49;"	d
MINOR_VERSION	deps/pmdk/src/test/out_err/out_err.c	41;"	d	file:
MINOR_VERSION	deps/pmdk/src/test/out_err_win/out_err_win.c	41;"	d	file:
MINOR_VERSION	deps/pmdk/src/test/pmem_has_auto_flush_win/pmem_has_auto_flush_win.c	56;"	d	file:
MINOR_VERSION	deps/pmdk/src/test/traces/traces.c	41;"	d	file:
MINOR_VERSION	deps/pmdk/src/test/traces_custom_function/traces_custom_function.c	45;"	d	file:
MINOR_VERSION	deps/pmdk/src/test/util_ctl/util_ctl.c	47;"	d	file:
MINOR_VERSION	deps/pmdk/src/test/util_is_poolset/util_is_poolset.c	48;"	d	file:
MINOR_VERSION	deps/pmdk/src/test/util_poolset/util_poolset.c	51;"	d	file:
MINOR_VERSION	deps/pmdk/src/test/util_poolset_foreach/util_poolset_foreach.c	48;"	d	file:
MINOR_VERSION	deps/pmdk/src/test/util_poolset_parse/util_poolset_parse.c	48;"	d	file:
MINOR_VERSION	deps/pmdk/src/test/util_poolset_size/util_poolset_size.c	48;"	d	file:
MINOR_VERSION	deps/pmdk/src/test/util_sds/util_sds.c	63;"	d	file:
MINSIZEARRAY	deps/lua/src/lmem.c	43;"	d	file:
MINSTRTABSIZE	deps/lua/src/llimits.h	99;"	d
MIN_ALLOC	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	57;"	d	file:
MIN_COMPRESS_BYTES	src/quicklist.c	54;"	d	file:
MIN_COMPRESS_IMPROVE	src/quicklist.c	59;"	d	file:
MIN_EXE_TIME_E	deps/pmdk/src/benchmarks/pmembench.cpp	75;"	d	file:
MIN_GSTATE_TIMER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	64;"	d	file:
MIN_GSTATE_TIMER	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	82;"	d	file:
MIN_HASHSET_THRESHOLD	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_internal.h	43;"	d
MIN_NOIDS	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	67;"	d	file:
MIN_PART	deps/pmdk/src/test/util_badblock/util_badblock.c	49;"	d	file:
MIN_PART	deps/pmdk/src/test/util_poolset/util_poolset.c	53;"	d	file:
MIN_POOL	deps/pmdk/src/test/util_badblock/util_badblock.c	48;"	d	file:
MIN_UNIT_SIZE	deps/pmdk/src/libpmemobj/alloc_class.c	91;"	d	file:
MIN_VEC_SIZE	deps/pmdk/src/benchmarks/log.cpp	55;"	d	file:
MIPS64_LONG2REG_CAST	deps/pmdk/src/common/valgrind/valgrind.h	5693;"	d
MIX_RERUNS	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	48;"	d	file:
MKDIR	deps/lua/Makefile	/^MKDIR= mkdir -p$/;"	m
MKLIB	deps/jemalloc/Makefile	/^MKLIB = $/;"	m
MMAP	deps/pmdk/src/test/unittest/unittest.h	492;"	d
MMAP_ALIGN	deps/pmdk/src/test/mmap/mmap.c	53;"	d	file:
MMAP_ALIGN	deps/pmdk/src/test/mmap/mmap.c	55;"	d	file:
MMAP_ANON_ALIGNED	deps/pmdk/src/test/unittest/unittest.h	374;"	d
MMAP_SIZE	deps/pmdk/src/test/mmap/mmap.c	59;"	d	file:
MOCKS_H	deps/pmdk/src/test/util_poolset/mocks.h	34;"	d
MOCK_LAYOUT	deps/pmdk/src/test/obj_lane/obj_lane.c	51;"	d	file:
MOCK_POOL_SIZE	deps/pmdk/src/test/obj_heap/obj_heap.c	60;"	d	file:
MOCK_POOL_SIZE	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	45;"	d	file:
MODES	deps/pmdk/src/benchmarks/pmem_flush.cpp	159;"	d	file:
MODE_INVALID	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^	MODE_INVALID,$/;"	e	enum:mode	file:
MODE_MAX	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^	MODE_MAX$/;"	e	enum:mode	file:
MODE_PRINT_ALL_EXTENTS	deps/pmdk/src/test/tools/extents/extents.c	/^	MODE_PRINT_ALL_EXTENTS = 0,$/;"	e	enum:modes	file:
MODE_PRINT_ONE_PHY_OF_LOG	deps/pmdk/src/test/tools/extents/extents.c	/^	MODE_PRINT_ONE_PHY_OF_LOG,$/;"	e	enum:modes	file:
MODE_VALID	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^	MODE_VALID,$/;"	e	enum:mode	file:
MOVNT_THRESHOLD	deps/pmdk/src/libpmem/x86_64/init.c	45;"	d	file:
MOVNT_THRESHOLD	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	60;"	d	file:
MPROTECT	deps/pmdk/src/test/unittest/unittest.h	500;"	d
MP_CUR_ERROR_BADFMT	deps/lua/src/lua_cmsgpack.c	146;"	d	file:
MP_CUR_ERROR_EOF	deps/lua/src/lua_cmsgpack.c	145;"	d	file:
MP_CUR_ERROR_NONE	deps/lua/src/lua_cmsgpack.c	144;"	d	file:
MSG_HDR	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^static const struct rpmem_msg_hdr MSG_HDR = {$/;"	v	typeref:struct:rpmem_msg_hdr
MSG_PLACE_OF_SEPARATION	deps/pmdk/src/libpmempool/check_util.c	52;"	d	file:
MSG_SEPARATOR	deps/pmdk/src/libpmempool/check_util.c	49;"	d	file:
MSK1	deps/jemalloc/test/include/test/SFMT-params11213.h	44;"	d
MSK1	deps/jemalloc/test/include/test/SFMT-params1279.h	44;"	d
MSK1	deps/jemalloc/test/include/test/SFMT-params132049.h	44;"	d
MSK1	deps/jemalloc/test/include/test/SFMT-params19937.h	44;"	d
MSK1	deps/jemalloc/test/include/test/SFMT-params216091.h	44;"	d
MSK1	deps/jemalloc/test/include/test/SFMT-params2281.h	44;"	d
MSK1	deps/jemalloc/test/include/test/SFMT-params4253.h	44;"	d
MSK1	deps/jemalloc/test/include/test/SFMT-params44497.h	44;"	d
MSK1	deps/jemalloc/test/include/test/SFMT-params607.h	44;"	d
MSK1	deps/jemalloc/test/include/test/SFMT-params86243.h	44;"	d
MSK2	deps/jemalloc/test/include/test/SFMT-params11213.h	45;"	d
MSK2	deps/jemalloc/test/include/test/SFMT-params1279.h	45;"	d
MSK2	deps/jemalloc/test/include/test/SFMT-params132049.h	45;"	d
MSK2	deps/jemalloc/test/include/test/SFMT-params19937.h	45;"	d
MSK2	deps/jemalloc/test/include/test/SFMT-params216091.h	45;"	d
MSK2	deps/jemalloc/test/include/test/SFMT-params2281.h	45;"	d
MSK2	deps/jemalloc/test/include/test/SFMT-params4253.h	45;"	d
MSK2	deps/jemalloc/test/include/test/SFMT-params44497.h	45;"	d
MSK2	deps/jemalloc/test/include/test/SFMT-params607.h	45;"	d
MSK2	deps/jemalloc/test/include/test/SFMT-params86243.h	45;"	d
MSK3	deps/jemalloc/test/include/test/SFMT-params11213.h	46;"	d
MSK3	deps/jemalloc/test/include/test/SFMT-params1279.h	46;"	d
MSK3	deps/jemalloc/test/include/test/SFMT-params132049.h	46;"	d
MSK3	deps/jemalloc/test/include/test/SFMT-params19937.h	46;"	d
MSK3	deps/jemalloc/test/include/test/SFMT-params216091.h	46;"	d
MSK3	deps/jemalloc/test/include/test/SFMT-params2281.h	46;"	d
MSK3	deps/jemalloc/test/include/test/SFMT-params4253.h	46;"	d
MSK3	deps/jemalloc/test/include/test/SFMT-params44497.h	46;"	d
MSK3	deps/jemalloc/test/include/test/SFMT-params607.h	46;"	d
MSK3	deps/jemalloc/test/include/test/SFMT-params86243.h	46;"	d
MSK4	deps/jemalloc/test/include/test/SFMT-params11213.h	47;"	d
MSK4	deps/jemalloc/test/include/test/SFMT-params1279.h	47;"	d
MSK4	deps/jemalloc/test/include/test/SFMT-params132049.h	47;"	d
MSK4	deps/jemalloc/test/include/test/SFMT-params19937.h	47;"	d
MSK4	deps/jemalloc/test/include/test/SFMT-params216091.h	47;"	d
MSK4	deps/jemalloc/test/include/test/SFMT-params2281.h	47;"	d
MSK4	deps/jemalloc/test/include/test/SFMT-params4253.h	47;"	d
MSK4	deps/jemalloc/test/include/test/SFMT-params44497.h	47;"	d
MSK4	deps/jemalloc/test/include/test/SFMT-params607.h	47;"	d
MSK4	deps/jemalloc/test/include/test/SFMT-params86243.h	47;"	d
MSVC_COMPAT_WINDOWS_EXTRA_H	deps/jemalloc/include/msvc_compat/windows_extra.h	2;"	d
MSVC_CONSTR	deps/pmdk/src/windows/include/platform.h	209;"	d
MSVC_DESTR	deps/pmdk/src/windows/include/platform.h	216;"	d
MS_ALL	deps/pmdk/src/test/mmap/mmap.c	584;"	d	file:
MS_ALL	deps/pmdk/src/windows/win_mmap.c	900;"	d	file:
MS_ASYNC	deps/pmdk/src/windows/include/sys/mman.h	58;"	d
MS_INVALIDATE	deps/pmdk/src/windows/include/sys/mman.h	60;"	d
MS_SYNC	deps/pmdk/src/windows/include/sys/mman.h	59;"	d
MUL	src/rand.c	50;"	d	file:
MUNMAP	deps/pmdk/src/test/unittest/unittest.h	496;"	d
MUNMAP_ANON_ALIGNED	deps/pmdk/src/test/unittest/unittest.h	377;"	d
MYCFLAGS	deps/lua/etc/Makefile	/^MYCFLAGS= $/;"	m
MYCFLAGS	deps/lua/src/Makefile	/^MYCFLAGS=$/;"	m
MYCOMPILE	deps/lua/etc/luavs.bat	/^@set MYCOMPILE=cl \/nologo \/MD \/O2 \/W3 \/c \/D_CRT_SECURE_NO_DEPRECATE$/;"	v
MYLDFLAGS	deps/lua/etc/Makefile	/^MYLDFLAGS= -Wl,-E$/;"	m
MYLDFLAGS	deps/lua/src/Makefile	/^MYLDFLAGS=$/;"	m
MYLIBS	deps/lua/etc/Makefile	/^MYLIBS= -lm$/;"	m
MYLIBS	deps/lua/src/Makefile	/^MYLIBS=$/;"	m
MYLINK	deps/lua/etc/luavs.bat	/^@set MYLINK=link \/nologo$/;"	v
MYMT	deps/lua/etc/luavs.bat	/^@set MYMT=mt \/nologo$/;"	v
MaintainHandleCount	deps/pmdk/src/test/unittest/ut.c	/^	BOOLEAN MaintainHandleCount;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
MaintainTypeList	deps/pmdk/src/test/unittest/ut.c	/^	USHORT MaintainTypeList;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
Malloc	deps/pmdk/src/common/alloc.h	52;"	d
Malloc	deps/pmdk/src/common/alloc.h	58;"	d
Malloc_func	deps/pmdk/src/common/alloc.h	/^typedef void *(*Malloc_func)(size_t size);$/;"	t
MarkerParser	deps/pmdk/src/tools/pmreorder/markerparser.py	/^class MarkerParser:$/;"	c
MatchState	deps/lua/src/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	deps/lua/src/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
Mbuffer	deps/lua/src/lzio.h	/^typedef struct Mbuffer {$/;"	s
Mbuffer	deps/lua/src/lzio.h	/^} Mbuffer;$/;"	t	typeref:struct:Mbuffer
Medium	deps/pmdk/src/test/unittest/context.py	/^class Medium(_TestType):$/;"	c
Message	deps/pmdk/src/test/unittest/futils.py	/^class Message:$/;"	c
MiB	deps/pmdk/src/test/unittest/utils.py	/^MiB = 2 ** 20$/;"	v
Mmap_align	deps/pmdk/src/common/util.c	/^unsigned long long Mmap_align;$/;"	v
Mmap_align	deps/pmdk/src/test/win_mmap_dtor/win_mmap_dtor.c	/^unsigned long long Mmap_align;$/;"	v
Mmap_hint	deps/pmdk/src/common/mmap.c	/^void *Mmap_hint;$/;"	v
Mmap_list_lock	deps/pmdk/src/common/mmap.c	/^static os_rwlock_t Mmap_list_lock;$/;"	v	file:
Mmap_mapfile	deps/pmdk/src/common/mmap_posix.c	/^char *Mmap_mapfile = OS_MAPFILE; \/* Should be modified only for testing *\/$/;"	v
Mmap_no_random	deps/pmdk/src/common/mmap.c	/^int Mmap_no_random;$/;"	v
Mock_pop	deps/pmdk/src/test/obj_sync/obj_sync.c	/^static PMEMobjpool Mock_pop;$/;"	v	file:
Movnt_threshold	deps/pmdk/src/libpmem/x86_64/init.c	/^size_t Movnt_threshold = MOVNT_THRESHOLD;$/;"	v
MurmurHash64A	src/hyperloglog.c	/^uint64_t MurmurHash64A (const void * key, int len, unsigned int seed) {$/;"	f
N	deps/jemalloc/test/include/test/SFMT-params.h	53;"	d
N	deps/pmdk/src/test/obj_recreate/obj_recreate.c	53;"	d	file:
N	src/rand.c	46;"	d	file:
N32	deps/jemalloc/test/include/test/SFMT-params.h	56;"	d
N64	deps/jemalloc/test/include/test/SFMT-params.h	59;"	d
NALLOCS_PER_THREAD	deps/jemalloc/test/unit/prof_accum.c	4;"	d	file:
NALLOCS_PER_THREAD	deps/jemalloc/test/unit/prof_reset.c	148;"	d	file:
NALLOCS_PER_THREAD	deps/jemalloc/test/unit/prof_reset.c	235;"	d	file:
NAME	deps/jemalloc/src/ctl.c	216;"	d	file:
NAME	deps/jemalloc/src/ctl.c	510;"	d	file:
NAME_MAX	deps/pmdk/src/common/file.h	52;"	d
NANO_PER_ONE	deps/pmdk/src/test/obj_sync/obj_sync.c	48;"	d	file:
NARENAS	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	67;"	d	file:
NBAGS	deps/jemalloc/test/unit/ph.c	168;"	d	file:
NBAGS	deps/jemalloc/test/unit/rb.c	231;"	d	file:
NBAGS	deps/jemalloc/test/unit/rb.c	342;"	d	file:
NBINS	deps/jemalloc/include/jemalloc/internal/size_classes.h	174;"	d
NBINS	deps/jemalloc/include/jemalloc/internal/size_classes.h	484;"	d
NCHUNKS	deps/jemalloc/test/unit/pack.c	25;"	d	file:
NCHUNKS	deps/pmdk/src/test/obj_memblock/obj_memblock.c	42;"	d	file:
NCURSES	deps/pmdk/src/examples/libpmemobj/pminvaders/Makefile	/^NCURSES := $(call check_package, ncurses)$/;"	m
NCURSES	deps/pmdk/src/test/ex_libpmemobj/Makefile	/^NCURSES := $(call check_package, ncurses)$/;"	m
NCYCLES	deps/jemalloc/test/integration/rallocx.c	53;"	d	file:
NCYCLES	deps/jemalloc/test/integration/rallocx.c	90;"	d	file:
NENTRIES	deps/jemalloc/test/unit/ql.c	4;"	d	file:
NENTRIES	deps/jemalloc/test/unit/qr.c	4;"	d	file:
NESTING_MODE_SIM	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	NESTING_MODE_SIM,$/;"	e	enum:nesting_mode	file:
NESTING_MODE_TX	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	NESTING_MODE_TX,$/;"	e	enum:nesting_mode	file:
NESTING_MODE_UNKNOWN	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	NESTING_MODE_UNKNOWN,$/;"	e	enum:nesting_mode	file:
NET_FIRST_BIND_ADDR	src/server.h	480;"	d
NET_IP_STR_LEN	src/server.h	171;"	d
NET_MAX_WRITES_PER_EVENT	src/server.h	121;"	d
NET_PEER_ID_LEN	src/server.h	172;"	d
NEXT	src/lzf_c.c	49;"	d	file:
NEXT_OFF	deps/pmdk/src/libpmemobj/list.c	47;"	d	file:
NFIT_MAX_STRUCTURES	deps/pmdk/src/common/os_auto_flush_windows.h	43;"	d
NFIT_OEM_ID_LEN	deps/pmdk/src/common/os_auto_flush_windows.h	41;"	d
NFIT_OEM_TABLE_ID_LEN	deps/pmdk/src/common/os_auto_flush_windows.h	42;"	d
NFIT_REV_SIGNATURE	deps/pmdk/src/common/os_auto_flush_windows.h	37;"	d
NFIT_SIGNATURE_LEN	deps/pmdk/src/common/os_auto_flush_windows.h	40;"	d
NFIT_STR_SIGNATURE	deps/pmdk/src/common/os_auto_flush_windows.h	38;"	d
NHUGE	deps/jemalloc/test/unit/arena_reset.c	83;"	d	file:
NIB	deps/pmdk/src/libpmemobj/critnib.c	108;"	d	file:
NINCRS	deps/jemalloc/test/unit/mtx.c	4;"	d	file:
NITEMS	deps/jemalloc/test/unit/ckh.c	110;"	d	file:
NITEMS	deps/jemalloc/test/unit/ckh.c	202;"	d	file:
NITER	deps/jemalloc/test/integration/aligned_alloc.c	127;"	d	file:
NITER	deps/jemalloc/test/integration/aligned_alloc.c	88;"	d	file:
NITER	deps/jemalloc/test/integration/mallocx.c	169;"	d	file:
NITER	deps/jemalloc/test/integration/mallocx.c	221;"	d	file:
NITER	deps/jemalloc/test/integration/posix_memalign.c	121;"	d	file:
NITER	deps/jemalloc/test/integration/posix_memalign.c	80;"	d	file:
NITER	deps/jemalloc/test/integration/sdallocx.c	4;"	d	file:
NITER	deps/jemalloc/test/unit/prof_reset.c	241;"	d	file:
NITER	deps/jemalloc/test/unit/prof_reset.c	290;"	d	file:
NITER_FAST	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	46;"	d	file:
NITER_MID	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	47;"	d	file:
NITER_SLOW	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	48;"	d	file:
NLANES	deps/pmdk/src/examples/librpmem/basic.c	48;"	d	file:
NLANES	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	70;"	d	file:
NLANES	deps/pmdk/src/examples/librpmem/hello.c	65;"	d	file:
NLANES	deps/pmdk/src/examples/librpmem/manpage.c	46;"	d	file:
NLANES	deps/pmdk/src/test/rpmem_addr_ext/rpmem_addr_ext.c	50;"	d	file:
NLANES	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	123;"	d	file:
NLANES	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	59;"	d	file:
NLANES	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	48;"	d
NLANES	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	51;"	d	file:
NLANES	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	76;"	d
NLANES_RESP	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	49;"	d
NLANES_RESP	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	52;"	d	file:
NLANES_RESP	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	77;"	d
NLBINS	deps/jemalloc/include/jemalloc/internal/size_classes.h	173;"	d
NLBINS	deps/jemalloc/include/jemalloc/internal/size_classes.h	483;"	d
NMSGS	deps/jemalloc/test/unit/mq.c	4;"	d	file:
NNODES	deps/jemalloc/test/unit/ph.c	167;"	d	file:
NNODES	deps/jemalloc/test/unit/ph.c	278;"	d	file:
NNODES	deps/jemalloc/test/unit/rb.c	230;"	d	file:
NNODES	deps/jemalloc/test/unit/rb.c	341;"	d	file:
NOBJECT_THREAD	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	64;"	d	file:
NODE16	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	NODE16		= 1,$/;"	e	enum:__anon99
NODE256	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	NODE256		= 3,$/;"	e	enum:__anon99
NODE4	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	NODE4		= 0,$/;"	e	enum:__anon99
NODE48	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	NODE48		= 2,$/;"	e	enum:__anon99
NODE_CHILD_CAN_CONTAIN_ITEM	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	497;"	d	file:
NODE_CONTAINS_ITEM	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	494;"	d	file:
NODE_GRANDP	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	46;"	d	file:
NODE_IS	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	55;"	d	file:
NODE_IS_NULL	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	67;"	d	file:
NODE_IS_RIGHT	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	58;"	d	file:
NODE_LOCATION	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	61;"	d	file:
NODE_MAGIC	deps/jemalloc/test/unit/ph.c	6;"	d	file:
NODE_MAGIC	deps/jemalloc/test/unit/rb.c	17;"	d	file:
NODE_P	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	NODE_P(child) = NODE_P(node);$/;"	e	enum:c	file:
NODE_P	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TX_SET(NODE_P(node), slots[NODE_LOCATION(node)], child);$/;"	e	enum:c	file:
NODE_P	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	43;"	d	file:
NODE_PARENT_AT	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	49;"	d	file:
NODE_PARENT_RIGHT	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	52;"	d	file:
NODE_PTR	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	48;"	d	file:
NONE	deps/pmdk/src/test/unittest/valgrind.py	/^    NONE = 5$/;"	v	class:_Tool
NONE	deps/pmdk/src/test/unittest/valgrind.py	/^NONE = _Tool.NONE$/;"	v
NON_ZEROED	deps/pmdk/src/test/unittest/poolset.py	/^    NON_ZEROED = 1$/;"	v	class:CREATE
NON_ZERO_POOL_SIZE	deps/pmdk/src/test/set_funcs/set_funcs.c	39;"	d	file:
NOPS	deps/pmdk/src/benchmarks/pmem_flush.cpp	353;"	d	file:
NOPS	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	583;"	d	file:
NORETURN	deps/pmdk/src/common/util.h	130;"	d
NORETURN	deps/pmdk/src/common/util.h	133;"	d
NOTIFY_ALL	src/server.h	477;"	d
NOTIFY_EVICTED	src/server.h	476;"	d
NOTIFY_EXPIRED	src/server.h	475;"	d
NOTIFY_GENERIC	src/server.h	469;"	d
NOTIFY_HASH	src/server.h	473;"	d
NOTIFY_KEYEVENT	src/server.h	468;"	d
NOTIFY_KEYSPACE	src/server.h	467;"	d
NOTIFY_LIST	src/server.h	471;"	d
NOTIFY_SET	src/server.h	472;"	d
NOTIFY_STRING	src/server.h	470;"	d
NOTIFY_ZSET	src/server.h	474;"	d
NOT_EXISTS	deps/pmdk/src/common/file.h	/^	NOT_EXISTS = -1,$/;"	e	enum:file_type
NOT_TRANSFORMABLE	deps/pmdk/src/libpmempool/transform.c	/^	NOT_TRANSFORMABLE,$/;"	e	enum:transform_op	file:
NOWAIT	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	NOWAIT$/;"	e	enum:wait_type	file:
NO_COMMON_POOLSET_UUID	deps/pmdk/src/libpmempool/check_pool_hdr.c	51;"	d	file:
NO_FAIL	deps/pmdk/src/test/obj_list/obj_list.h	/^	NO_FAIL,$/;"	e	enum:ulog_fail
NO_HEALTHY_REPLICA	deps/pmdk/src/common/os_badblock.h	50;"	d
NO_INITIALIZER	deps/jemalloc/src/jemalloc.c	197;"	d	file:
NO_INITIALIZER	deps/jemalloc/src/jemalloc.c	202;"	d	file:
NO_JUMP	deps/lua/src/lcode.h	20;"	d
NO_REG	deps/lua/src/lopcodes.h	136;"	d
NPOOLS_DUAL	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	60;"	d	file:
NPS	deps/jemalloc/test/unit/decay.c	209;"	d	file:
NPS	deps/jemalloc/test/unit/decay.c	298;"	d	file:
NPS	deps/jemalloc/test/unit/decay.c	304;"	d	file:
NPS	deps/jemalloc/test/unit/decay.c	362;"	d	file:
NPSIZES	deps/jemalloc/include/jemalloc/internal/size_classes.h	176;"	d
NPSIZES	deps/jemalloc/include/jemalloc/internal/size_classes.h	486;"	d
NQUARANTINED	deps/jemalloc/test/unit/quarantine.c	25;"	d	file:
NQUARANTINED	deps/jemalloc/test/unit/quarantine.c	54;"	d	file:
NREPS	deps/jemalloc/test/unit/prng.c	156;"	d	file:
NREPS	deps/jemalloc/test/unit/prng.c	177;"	d	file:
NREPS	deps/jemalloc/test/unit/prng.c	198;"	d	file:
NREPS	deps/jemalloc/test/unit/ticker.c	5;"	d	file:
NRESET	deps/jemalloc/test/unit/prof_thread_name.c	122;"	d	file:
NRESET	deps/jemalloc/test/unit/prof_thread_name.c	80;"	d	file:
NSECPSEC	deps/pmdk/src/benchmarks/benchmark_time.cpp	42;"	d	file:
NSEC_IN_SEC	deps/pmdk/src/common/os_windows.c	443;"	d	file:
NSENDERS	deps/jemalloc/test/unit/mq.c	3;"	d	file:
NSEQ	deps/pmdk/src/libpmemblk/btt.c	271;"	d	file:
NSET	deps/jemalloc/test/unit/rtree.c	137;"	d	file:
NSET	deps/jemalloc/test/unit/rtree.c	98;"	d	file:
NSIZES	deps/jemalloc/include/jemalloc/internal/size_classes.h	175;"	d
NSIZES	deps/jemalloc/include/jemalloc/internal/size_classes.h	485;"	d
NSTIME_MONOTONIC	deps/jemalloc/src/nstime.c	101;"	d	file:
NSTIME_MONOTONIC	deps/jemalloc/src/nstime.c	114;"	d	file:
NSTIME_MONOTONIC	deps/jemalloc/src/nstime.c	124;"	d	file:
NSTIME_MONOTONIC	deps/jemalloc/src/nstime.c	134;"	d	file:
NSTIME_MONOTONIC	deps/jemalloc/src/nstime.c	142;"	d	file:
NSTIME_MONOTONIC	deps/jemalloc/src/nstime.c	162;"	d	file:
NSTIME_SEC_MAX	deps/jemalloc/include/jemalloc/internal/nstime.h	7;"	d
NSZS	deps/jemalloc/test/integration/rallocx.c	55;"	d	file:
NSZS	deps/jemalloc/test/integration/rallocx.c	89;"	d	file:
NTBINS	deps/jemalloc/include/jemalloc/internal/size_classes.h	172;"	d
NTBINS	deps/jemalloc/include/jemalloc/internal/size_classes.h	482;"	d
NTCACHES	deps/jemalloc/test/unit/mallctl.c	252;"	d	file:
NTESTS	deps/pmdk/src/test/pmem2_map/pmem2_map.c	57;"	d	file:
NTESTS	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	1115;"	d	file:
NTESTS	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	990;"	d	file:
NTESTS	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test.c	75;"	d	file:
NTESTS	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	400;"	d	file:
NTESTS	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test.c	61;"	d	file:
NTHREAD	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	62;"	d	file:
NTHREAD	deps/pmdk/src/test/pmem_is_pmem/pmem_is_pmem.c	42;"	d	file:
NTHREAD	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	46;"	d	file:
NTHREADS	deps/jemalloc/test/integration/MALLOCX_ARENA.c	3;"	d	file:
NTHREADS	deps/jemalloc/test/integration/thread_arena.c	3;"	d	file:
NTHREADS	deps/jemalloc/test/unit/mtx.c	3;"	d	file:
NTHREADS	deps/jemalloc/test/unit/prof_accum.c	3;"	d	file:
NTHREADS	deps/jemalloc/test/unit/prof_reset.c	147;"	d	file:
NTHREADS	deps/jemalloc/test/unit/prof_reset.c	234;"	d	file:
NTHREADS	deps/jemalloc/test/unit/prof_thread_name.c	121;"	d	file:
NTHREADS	deps/jemalloc/test/unit/prof_thread_name.c	79;"	d	file:
NTHREADS	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	61;"	d	file:
NTHREADX	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	66;"	d	file:
NTHREAD_ARENA	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	63;"	d	file:
NTICKS	deps/jemalloc/test/unit/ticker.c	25;"	d	file:
NTICKS	deps/jemalloc/test/unit/ticker.c	31;"	d	file:
NTICKS	deps/jemalloc/test/unit/ticker.c	44;"	d	file:
NTICKS	deps/jemalloc/test/unit/ticker.c	50;"	d	file:
NTICKS	deps/jemalloc/test/unit/ticker.c	64;"	d	file:
NTICKS	deps/jemalloc/test/unit/ticker.c	6;"	d	file:
NULL_LIST_EMPTY	deps/pmdk/src/benchmarks/config_reader_win.cpp	54;"	d	file:
NULL_LIST_NEXT	deps/pmdk/src/benchmarks/config_reader_win.cpp	55;"	d	file:
NULL_NODE	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	44;"	d	file:
NUMBER_LEN	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	46;"	d	file:
NUM_LOCKS	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	42;"	d	file:
NUM_LOCKS	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	40;"	d	file:
NUM_MODE_ONE	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	NUM_MODE_ONE,$/;"	e	enum:type_num_mode	file:
NUM_MODE_PER_THREAD	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	NUM_MODE_PER_THREAD,$/;"	e	enum:type_num_mode	file:
NUM_MODE_RAND	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	NUM_MODE_RAND,$/;"	e	enum:type_num_mode	file:
NUM_MODE_UNKNOWN	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	NUM_MODE_UNKNOWN$/;"	e	enum:type_num_mode	file:
NUM_OPCODES	deps/lua/src/lopcodes.h	211;"	d
NUM_RESERVED	deps/lua/src/llex.h	36;"	d
NUM_TAGS	deps/lua/src/lobject.h	22;"	d
NUM_THREADS	deps/pmdk/src/test/obj_locks/obj_locks.c	43;"	d	file:
NUM_THREADS	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	41;"	d	file:
NUM_THREADS	deps/pmdk/src/test/out_err_mt/out_err_mt.c	44;"	d	file:
NUM_THREADS	deps/pmdk/src/test/out_err_mt_win/out_err_mt_win.c	44;"	d	file:
NVALGRIND	deps/pmdk/src/common/valgrind/valgrind.h	170;"	d
N_BYTES	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	52;"	d	file:
N_PROBES_GET_TIME	deps/pmdk/src/benchmarks/benchmark_time.cpp	115;"	d	file:
Name	deps/pmdk/src/test/unittest/ut.c	/^	UNICODE_STRING Name;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
Nblock	deps/pmdk/src/test/blk_rw_mt/blk_rw_mt.c	/^static const unsigned Nblock = 100;$/;"	v	file:
NoCheckerEngine	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^class NoCheckerEngine:$/;"	c
NoReorderDoCheck	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class NoReorderDoCheck(ReorderBase):$/;"	c
NoReorderEngine	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^class NoReorderEngine:$/;"	c
NoReorderNoCheck	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class NoReorderNoCheck(ReorderBase):$/;"	c
Node	deps/lua/src/lobject.h	/^typedef struct Node {$/;"	s
Node	deps/lua/src/lobject.h	/^} Node;$/;"	t	typeref:struct:Node
Non	deps/pmdk/src/test/unittest/context.py	/^class Non(_Fs):$/;"	c
NonPagedPool	deps/pmdk/src/test/unittest/ut.c	/^	NonPagedPool,$/;"	e	enum:_POOL_TYPE	file:
NonPagedPoolCacheAligned	deps/pmdk/src/test/unittest/ut.c	/^	NonPagedPoolCacheAligned,$/;"	e	enum:_POOL_TYPE	file:
NonPagedPoolCacheAlignedMustS	deps/pmdk/src/test/unittest/ut.c	/^	NonPagedPoolCacheAlignedMustS$/;"	e	enum:_POOL_TYPE	file:
NonPagedPoolMustSucceed	deps/pmdk/src/test/unittest/ut.c	/^	NonPagedPoolMustSucceed,$/;"	e	enum:_POOL_TYPE	file:
NonPagedPoolUsage	deps/pmdk/src/test/unittest/ut.c	/^	ULONG NonPagedPoolUsage;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
Nonpmem	deps/pmdk/src/test/unittest/context.py	/^class Nonpmem(_Fs):$/;"	c
Nops	deps/pmdk/src/test/blk_rw_mt/blk_rw_mt.c	/^static unsigned Nops;$/;"	v	file:
NotSupportedOperationException	deps/pmdk/src/tools/pmreorder/reorderexceptions.py	/^class NotSupportedOperationException(Exception):$/;"	c
Nseq	deps/pmdk/src/libpmemblk/btt.c	/^static const unsigned Nseq[] = { 0, 2, 3, 1 };$/;"	v	file:
Nthread	deps/pmdk/src/test/blk_rw_mt/blk_rw_mt.c	/^static unsigned Nthread;$/;"	v	file:
NumberOfHandles	deps/pmdk/src/test/unittest/ut.c	/^	ULONG_PTR NumberOfHandles;$/;"	m	struct:_SYSTEM_HANDLE_INFORMATION_EX	file:
O	deps/jemalloc/Makefile	/^O := o$/;"	m
O	deps/jemalloc/include/jemalloc/internal/tsd.h	626;"	d
O	deps/jemalloc/include/jemalloc/internal/tsd.h	629;"	d
O	deps/jemalloc/include/jemalloc/internal/tsd.h	674;"	d
O	deps/jemalloc/include/jemalloc/internal/tsd.h	679;"	d
O	deps/jemalloc/include/jemalloc/internal/tsd.h	734;"	d
O	deps/jemalloc/include/jemalloc/internal/tsd.h	757;"	d
O	deps/jemalloc/src/tsd.c	80;"	d	file:
O	deps/jemalloc/src/tsd.c	83;"	d	file:
O2S_BUFSIZE	deps/jemalloc/src/util.c	39;"	d	file:
OBJ	deps/hiredis/Makefile	/^OBJ=net.o hiredis.o sds.o async.o$/;"	m
OBJ	deps/pmdk/src/test/set_funcs/set_funcs.c	44;"	d	file:
OBJECT_OVERHEAD	deps/pmdk/src/test/obj_fragmentation/obj_fragmentation.c	44;"	d	file:
OBJECT_SIZE	deps/pmdk/src/test/obj_defrag/obj_defrag.c	40;"	d	file:
OBJECT_TYPE_INFORMATION	deps/pmdk/src/test/unittest/ut.c	/^} OBJECT_TYPE_INFORMATION, *POBJECT_TYPE_INFORMATION;$/;"	t	typeref:struct:_OBJECT_TYPE_INFORMATION	file:
OBJH_FROM_PTR	deps/pmdk/src/tools/pmempool/common.h	99;"	d
OBJH_TO_PTR	deps/pmdk/src/tools/pmempool/common.h	110;"	d
OBJS	deps/pmdk/src/benchmarks/Makefile	/^OBJS=$(SRC:.cpp=.o)$/;"	m
OBJS	deps/pmdk/src/test/arch_flags/Makefile	/^OBJS = arch_flags.o$/;"	m
OBJS	deps/pmdk/src/test/blk_include/Makefile	/^OBJS = blk_include.o$/;"	m
OBJS	deps/pmdk/src/test/blk_nblock/Makefile	/^OBJS = blk_nblock.o$/;"	m
OBJS	deps/pmdk/src/test/blk_non_zero/Makefile	/^OBJS = blk_non_zero.o$/;"	m
OBJS	deps/pmdk/src/test/blk_pool/Makefile	/^OBJS = blk_pool.o$/;"	m
OBJS	deps/pmdk/src/test/blk_pool_lock/Makefile	/^OBJS = blk_pool_lock.o$/;"	m
OBJS	deps/pmdk/src/test/blk_recovery/Makefile	/^OBJS = blk_recovery.o$/;"	m
OBJS	deps/pmdk/src/test/blk_rw/Makefile	/^OBJS = blk_rw.o$/;"	m
OBJS	deps/pmdk/src/test/blk_rw_mt/Makefile	/^OBJS = blk_rw_mt.o$/;"	m
OBJS	deps/pmdk/src/test/checksum/Makefile	/^OBJS = checksum.o$/;"	m
OBJS	deps/pmdk/src/test/compat_incompat_features/Makefile	/^OBJS = pool_open.o$/;"	m
OBJS	deps/pmdk/src/test/ctl_cow/Makefile	/^OBJS = ctl_cow.o$/;"	m
OBJS	deps/pmdk/src/test/ctl_prefault/Makefile	/^OBJS = ctl_prefault.o$/;"	m
OBJS	deps/pmdk/src/test/ex_linkedlist/Makefile	/^OBJS = ex_linkedlist.o$/;"	m
OBJS	deps/pmdk/src/test/getopt/Makefile	/^OBJS = getopt.o$/;"	m
OBJS	deps/pmdk/src/test/libpmempool_api/Makefile	/^OBJS = libpmempool_test.o$/;"	m
OBJS	deps/pmdk/src/test/libpmempool_check_version/Makefile	/^OBJS = libpmempool_check_version.o$/;"	m
OBJS	deps/pmdk/src/test/libpmempool_feature/Makefile	/^OBJS = libpmempool_feature.o$/;"	m
OBJS	deps/pmdk/src/test/libpmempool_include/Makefile	/^OBJS = libpmempool_include.o$/;"	m
OBJS	deps/pmdk/src/test/libpmempool_rm/Makefile	/^OBJS = libpmempool_rm.o$/;"	m
OBJS	deps/pmdk/src/test/libpmempool_sync/Makefile	/^OBJS = libpmempool_sync.o$/;"	m
OBJS	deps/pmdk/src/test/libpmempool_transform/Makefile	/^OBJS = libpmempool_transform.o$/;"	m
OBJS	deps/pmdk/src/test/log_basic/Makefile	/^OBJS = log_basic.o$/;"	m
OBJS	deps/pmdk/src/test/log_include/Makefile	/^OBJS = log_include.o$/;"	m
OBJS	deps/pmdk/src/test/log_pool/Makefile	/^OBJS = log_pool.o$/;"	m
OBJS	deps/pmdk/src/test/log_pool_lock/Makefile	/^OBJS = log_pool_lock.o$/;"	m
OBJS	deps/pmdk/src/test/log_recovery/Makefile	/^OBJS = log_recovery.o$/;"	m
OBJS	deps/pmdk/src/test/log_walker/Makefile	/^OBJS = log_walker.o$/;"	m
OBJS	deps/pmdk/src/test/mmap/Makefile	/^OBJS = mmap.o$/;"	m
OBJS	deps/pmdk/src/test/mmap_fixed/Makefile	/^OBJS = mmap_fixed.o$/;"	m
OBJS	deps/pmdk/src/test/obj_action/Makefile	/^OBJS = obj_action.o$/;"	m
OBJS	deps/pmdk/src/test/obj_alloc/Makefile	/^OBJS = obj_alloc.o$/;"	m
OBJS	deps/pmdk/src/test/obj_badblock/Makefile	/^OBJS = obj_badblock.o$/;"	m
OBJS	deps/pmdk/src/test/obj_basic_integration/Makefile	/^OBJS = obj_basic_integration.o$/;"	m
OBJS	deps/pmdk/src/test/obj_bucket/Makefile	/^OBJS = obj_bucket.o$/;"	m
OBJS	deps/pmdk/src/test/obj_check/Makefile	/^OBJS = obj_check.o$/;"	m
OBJS	deps/pmdk/src/test/obj_check_remote/Makefile	/^OBJS = obj_check_remote.o$/;"	m
OBJS	deps/pmdk/src/test/obj_constructor/Makefile	/^OBJS = obj_constructor.o$/;"	m
OBJS	deps/pmdk/src/test/obj_critnib/Makefile	/^OBJS = obj_critnib.o$/;"	m
OBJS	deps/pmdk/src/test/obj_critnib_mt/Makefile	/^OBJS = obj_critnib_mt.o critnib.o$/;"	m
OBJS	deps/pmdk/src/test/obj_ctl_alignment/Makefile	/^OBJS = obj_ctl_alignment.o$/;"	m
OBJS	deps/pmdk/src/test/obj_ctl_alloc_class/Makefile	/^OBJS = obj_ctl_alloc_class.o$/;"	m
OBJS	deps/pmdk/src/test/obj_ctl_alloc_class_config/Makefile	/^OBJS = obj_ctl_alloc_class_config.o$/;"	m
OBJS	deps/pmdk/src/test/obj_ctl_arenas/Makefile	/^OBJS = obj_ctl_arenas.o$/;"	m
OBJS	deps/pmdk/src/test/obj_ctl_config/Makefile	/^OBJS = obj_ctl_config.o$/;"	m
OBJS	deps/pmdk/src/test/obj_ctl_debug/Makefile	/^OBJS = obj_ctl_debug.o$/;"	m
OBJS	deps/pmdk/src/test/obj_ctl_heap_size/Makefile	/^OBJS = obj_ctl_heap_size.o$/;"	m
OBJS	deps/pmdk/src/test/obj_ctl_stats/Makefile	/^OBJS = obj_ctl_stats.o$/;"	m
OBJS	deps/pmdk/src/test/obj_debug/Makefile	/^OBJS = obj_debug.o$/;"	m
OBJS	deps/pmdk/src/test/obj_defrag/Makefile	/^OBJS = obj_defrag.o$/;"	m
OBJS	deps/pmdk/src/test/obj_defrag_advanced/Makefile	/^OBJS = vgraph.o pgraph.o obj_defrag_advanced.o$/;"	m
OBJS	deps/pmdk/src/test/obj_direct/Makefile	/^OBJS = obj_direct.o obj_direct_inline.o obj_direct_non_inline.o$/;"	m
OBJS	deps/pmdk/src/test/obj_direct_volatile/Makefile	/^OBJS = obj_direct_volatile.o$/;"	m
OBJS	deps/pmdk/src/test/obj_extend/Makefile	/^OBJS = obj_extend.o$/;"	m
OBJS	deps/pmdk/src/test/obj_first_next/Makefile	/^OBJS = obj_first_next.o$/;"	m
OBJS	deps/pmdk/src/test/obj_fragmentation/Makefile	/^OBJS = obj_fragmentation.o$/;"	m
OBJS	deps/pmdk/src/test/obj_fragmentation2/Makefile	/^OBJS = obj_fragmentation2.o$/;"	m
OBJS	deps/pmdk/src/test/obj_heap/Makefile	/^OBJS = obj_heap.o$/;"	m
OBJS	deps/pmdk/src/test/obj_heap_interrupt/Makefile	/^OBJS = obj_heap_interrupt.o$/;"	m
OBJS	deps/pmdk/src/test/obj_heap_state/Makefile	/^OBJS = obj_heap_state.o$/;"	m
OBJS	deps/pmdk/src/test/obj_include/Makefile	/^OBJS = obj_atomic_base_include.o obj_atomic_include.o \\$/;"	m
OBJS	deps/pmdk/src/test/obj_lane/Makefile	/^OBJS = obj_lane.o$/;"	m
OBJS	deps/pmdk/src/test/obj_layout/Makefile	/^OBJS = obj_layout.o$/;"	m
OBJS	deps/pmdk/src/test/obj_list/Makefile	/^OBJS = obj_list.o obj_list_mocks.o obj_list_mocks_palloc.o$/;"	m
OBJS	deps/pmdk/src/test/obj_list_macro/Makefile	/^OBJS = obj_list_macro.o$/;"	m
OBJS	deps/pmdk/src/test/obj_locks/Makefile	/^OBJS = obj_locks.o$/;"	m
OBJS	deps/pmdk/src/test/obj_many_size_allocs/Makefile	/^OBJS = obj_many_size_allocs.o$/;"	m
OBJS	deps/pmdk/src/test/obj_mem/Makefile	/^OBJS = obj_mem.o$/;"	m
OBJS	deps/pmdk/src/test/obj_memblock/Makefile	/^OBJS = obj_memblock.o$/;"	m
OBJS	deps/pmdk/src/test/obj_memcheck/Makefile	/^OBJS = obj_memcheck.o$/;"	m
OBJS	deps/pmdk/src/test/obj_memcheck_register/Makefile	/^OBJS = obj_memcheck_register.o$/;"	m
OBJS	deps/pmdk/src/test/obj_memops/Makefile	/^OBJS = obj_memops.o$/;"	m
OBJS	deps/pmdk/src/test/obj_oid_thread/Makefile	/^OBJS = obj_oid_thread.o$/;"	m
OBJS	deps/pmdk/src/test/obj_out_of_memory/Makefile	/^OBJS = obj_out_of_memory.o$/;"	m
OBJS	deps/pmdk/src/test/obj_persist_count/Makefile	/^OBJS = obj_persist_count.o$/;"	m
OBJS	deps/pmdk/src/test/obj_pmalloc_basic/Makefile	/^OBJS = obj_pmalloc_basic.o$/;"	m
OBJS	deps/pmdk/src/test/obj_pmalloc_mt/Makefile	/^OBJS = obj_pmalloc_mt.o$/;"	m
OBJS	deps/pmdk/src/test/obj_pmalloc_oom_mt/Makefile	/^OBJS = obj_pmalloc_oom_mt.o$/;"	m
OBJS	deps/pmdk/src/test/obj_pmalloc_rand_mt/Makefile	/^OBJS = obj_pmalloc_rand_mt.o$/;"	m
OBJS	deps/pmdk/src/test/obj_pmemcheck/Makefile	/^OBJS = obj_pmemcheck.o$/;"	m
OBJS	deps/pmdk/src/test/obj_pool/Makefile	/^OBJS = obj_pool.o$/;"	m
OBJS	deps/pmdk/src/test/obj_pool_lock/Makefile	/^OBJS = obj_pool_lock.o$/;"	m
OBJS	deps/pmdk/src/test/obj_pool_lookup/Makefile	/^OBJS = obj_pool_lookup.o$/;"	m
OBJS	deps/pmdk/src/test/obj_ravl/Makefile	/^OBJS = obj_ravl.o$/;"	m
OBJS	deps/pmdk/src/test/obj_realloc/Makefile	/^OBJS = obj_realloc.o$/;"	m
OBJS	deps/pmdk/src/test/obj_recovery/Makefile	/^OBJS = obj_recovery.o$/;"	m
OBJS	deps/pmdk/src/test/obj_recreate/Makefile	/^OBJS = obj_recreate.o$/;"	m
OBJS	deps/pmdk/src/test/obj_reorder_basic/Makefile	/^OBJS = obj_reorder_basic.o$/;"	m
OBJS	deps/pmdk/src/test/obj_root/Makefile	/^OBJS = obj_root.o$/;"	m
OBJS	deps/pmdk/src/test/obj_sds/Makefile	/^OBJS = obj_sds.o$/;"	m
OBJS	deps/pmdk/src/test/obj_strdup/Makefile	/^OBJS = obj_strdup.o$/;"	m
OBJS	deps/pmdk/src/test/obj_sync/Makefile	/^OBJS = obj_sync.o sync.o mocks_posix.o$/;"	m
OBJS	deps/pmdk/src/test/obj_toid/Makefile	/^OBJS = obj_toid.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_add_range/Makefile	/^OBJS = obj_tx_add_range.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_add_range_direct/Makefile	/^OBJS = obj_tx_add_range_direct.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_alloc/Makefile	/^OBJS = obj_tx_alloc.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_callbacks/Makefile	/^OBJS = obj_tx_callbacks.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_flow/Makefile	/^OBJS = obj_tx_flow.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_free/Makefile	/^OBJS = obj_tx_free.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_invalid/Makefile	/^OBJS = obj_tx_invalid.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_lock/Makefile	/^OBJS = obj_tx_lock.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_locks/Makefile	/^OBJS = obj_tx_locks.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_locks_abort/Makefile	/^OBJS = obj_tx_locks_abort.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_mt/Makefile	/^OBJS = obj_tx_mt.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_realloc/Makefile	/^OBJS = obj_tx_realloc.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_strdup/Makefile	/^OBJS = obj_tx_strdup.o$/;"	m
OBJS	deps/pmdk/src/test/obj_tx_user_data/Makefile	/^OBJS = obj_tx_user_data.o$/;"	m
OBJS	deps/pmdk/src/test/obj_ulog_size/Makefile	/^OBJS = obj_ulog_size.o$/;"	m
OBJS	deps/pmdk/src/test/obj_zones/Makefile	/^OBJS = obj_zones.o$/;"	m
OBJS	deps/pmdk/src/test/out_err/Makefile	/^OBJS = out_err.o$/;"	m
OBJS	deps/pmdk/src/test/out_err_mt/Makefile	/^OBJS = out_err_mt.o$/;"	m
OBJS	deps/pmdk/src/test/pmem2_include/Makefile	/^OBJS = pmem2_include.o$/;"	m
OBJS	deps/pmdk/src/test/pmem_deep_persist/Makefile	/^OBJS = pmem_deep_persist.o\\$/;"	m
OBJS	deps/pmdk/src/test/pmem_has_auto_flush/Makefile	/^OBJS = pmem_has_auto_flush.o \\$/;"	m
OBJS	deps/pmdk/src/test/pmem_include/Makefile	/^OBJS = pmem_include.o$/;"	m
OBJS	deps/pmdk/src/test/pmem_is_pmem/Makefile	/^OBJS = pmem_is_pmem.o$/;"	m
OBJS	deps/pmdk/src/test/pmem_is_pmem_posix/Makefile	/^OBJS = pmem_is_pmem_posix.o\\$/;"	m
OBJS	deps/pmdk/src/test/pmem_map_file/Makefile	/^OBJS = pmem_map_file.o mocks_posix.o$/;"	m
OBJS	deps/pmdk/src/test/pmem_map_file_trunc/Makefile	/^OBJS = pmem_map_file_trunc.o$/;"	m
OBJS	deps/pmdk/src/test/pmem_memcpy/Makefile	/^OBJS = pmem_memcpy.o$/;"	m
OBJS	deps/pmdk/src/test/pmem_memmove/Makefile	/^OBJS = pmem_memmove.o$/;"	m
OBJS	deps/pmdk/src/test/pmem_memset/Makefile	/^OBJS = pmem_memset.o$/;"	m
OBJS	deps/pmdk/src/test/pmem_movnt/Makefile	/^OBJS = pmem_movnt.o$/;"	m
OBJS	deps/pmdk/src/test/pmem_movnt_align/Makefile	/^OBJS = pmem_movnt_align.o$/;"	m
OBJS	deps/pmdk/src/test/pmem_unmap/Makefile	/^OBJS = pmem_unmap.o$/;"	m
OBJS	deps/pmdk/src/test/pmem_valgr_simple/Makefile	/^OBJS = pmem_valgr_simple.o$/;"	m
OBJS	deps/pmdk/src/test/pmreorder_flushes/Makefile	/^OBJS = pmreorder_flushes.o$/;"	m
OBJS	deps/pmdk/src/test/pmreorder_simple/Makefile	/^OBJS = pmreorder_simple.o$/;"	m
OBJS	deps/pmdk/src/test/pmreorder_stack/Makefile	/^OBJS = pmreorder_stack.o$/;"	m
OBJS	deps/pmdk/src/test/remote_basic/Makefile	/^OBJS = remote_basic.o$/;"	m
OBJS	deps/pmdk/src/test/remote_obj_basic/Makefile	/^OBJS = remote_obj_basic.o$/;"	m
OBJS	deps/pmdk/src/test/rpmem_addr/Makefile	/^OBJS = rpmem_addr.o\\$/;"	m
OBJS	deps/pmdk/src/test/rpmem_addr_ext/Makefile	/^OBJS = rpmem_addr_ext.o$/;"	m
OBJS	deps/pmdk/src/test/rpmem_basic/Makefile	/^OBJS = rpmem_basic.o\\$/;"	m
OBJS	deps/pmdk/src/test/rpmem_fip/Makefile	/^OBJS = rpmem_fip_test.o\\$/;"	m
OBJS	deps/pmdk/src/test/rpmem_obc/Makefile	/^OBJS = rpmem_obc_test.o\\$/;"	m
OBJS	deps/pmdk/src/test/rpmem_obc_int/Makefile	/^OBJS = rpmem_obc_int.o\\$/;"	m
OBJS	deps/pmdk/src/test/rpmem_proto/Makefile	/^OBJS = rpmem_proto.o$/;"	m
OBJS	deps/pmdk/src/test/rpmemd_config/Makefile	/^OBJS = rpmemd_config_test.o rpmemd_config.o rpmemd_log.o$/;"	m
OBJS	deps/pmdk/src/test/rpmemd_db/Makefile	/^OBJS = rpmemd_db_test.o rpmemd_log.o rpmemd_db.o$/;"	m
OBJS	deps/pmdk/src/test/rpmemd_dbg/Makefile	/^OBJS = rpmemd_log_test.o rpmemd_log.o$/;"	m
OBJS	deps/pmdk/src/test/rpmemd_log/Makefile	/^OBJS = rpmemd_log_test.o rpmemd_log.o$/;"	m
OBJS	deps/pmdk/src/test/rpmemd_obc/Makefile	/^OBJS = rpmemd_obc_test.o\\$/;"	m
OBJS	deps/pmdk/src/test/rpmemd_util/Makefile	/^OBJS = rpmemd_util_test.o rpmem_common.o rpmemd_log.o rpmemd_util.o$/;"	m
OBJS	deps/pmdk/src/test/set_funcs/Makefile	/^OBJS = set_funcs.o$/;"	m
OBJS	deps/pmdk/src/test/tools/anonymous_mmap/Makefile	/^OBJS = anonymous_mmap.o$/;"	m
OBJS	deps/pmdk/src/test/tools/bttcreate/Makefile	/^OBJS = bttcreate.o btt.o$/;"	m
OBJS	deps/pmdk/src/test/tools/cmpmap/Makefile	/^OBJS = cmpmap.o$/;"	m
OBJS	deps/pmdk/src/test/tools/ctrld/Makefile	/^OBJS = ctrld.o os_posix.o$/;"	m
OBJS	deps/pmdk/src/test/tools/ddmap/Makefile	/^OBJS = ddmap.o$/;"	m
OBJS	deps/pmdk/src/test/tools/extents/Makefile	/^OBJS = extents.o$/;"	m
OBJS	deps/pmdk/src/test/tools/fallocate_detect/Makefile	/^OBJS = fallocate_detect.o$/;"	m
OBJS	deps/pmdk/src/test/tools/fip/Makefile	/^OBJS = fip.o rpmem_fip_common.o rpmem_common.o util.o os_posix.o alloc.o$/;"	m
OBJS	deps/pmdk/src/test/tools/obj_verify/Makefile	/^OBJS = obj_verify.o$/;"	m
OBJS	deps/pmdk/src/test/tools/pmemalloc/Makefile	/^OBJS = pmemalloc.o$/;"	m
OBJS	deps/pmdk/src/test/tools/pmemdetect/Makefile	/^OBJS = pmemdetect.o$/;"	m
OBJS	deps/pmdk/src/test/tools/pmemobjcli/Makefile	/^OBJS = pmemobjcli.o$/;"	m
OBJS	deps/pmdk/src/test/tools/pmemspoil/Makefile	/^OBJS = spoil.o$/;"	m
OBJS	deps/pmdk/src/test/tools/pmemwrite/Makefile	/^OBJS = write.o$/;"	m
OBJS	deps/pmdk/src/test/tools/usc_permission_check/Makefile	/^OBJS = usc_permission_check.o$/;"	m
OBJS	deps/pmdk/src/test/traces/Makefile	/^OBJS = traces.o$/;"	m
OBJS	deps/pmdk/src/test/traces_custom_function/Makefile	/^OBJS = traces_custom_function.o$/;"	m
OBJS	deps/pmdk/src/test/traces_pmem/Makefile	/^OBJS = traces_pmem.o$/;"	m
OBJS	deps/pmdk/src/test/util_badblock/Makefile	/^OBJS = util_badblock.o$/;"	m
OBJS	deps/pmdk/src/test/util_cpuid/Makefile	/^OBJS = util_cpuid.o cpu.o$/;"	m
OBJS	deps/pmdk/src/test/util_ctl/Makefile	/^OBJS = util_ctl.o$/;"	m
OBJS	deps/pmdk/src/test/util_extent/Makefile	/^OBJS = util_extent.o$/;"	m
OBJS	deps/pmdk/src/test/util_file_create/Makefile	/^OBJS = util_file_create.o$/;"	m
OBJS	deps/pmdk/src/test/util_file_open/Makefile	/^OBJS = util_file_open.o$/;"	m
OBJS	deps/pmdk/src/test/util_is_absolute/Makefile	/^OBJS = util_is_absolute.o$/;"	m
OBJS	deps/pmdk/src/test/util_is_poolset/Makefile	/^OBJS = util_is_poolset.o$/;"	m
OBJS	deps/pmdk/src/test/util_is_zeroed/Makefile	/^OBJS = util_is_zeroed.o$/;"	m
OBJS	deps/pmdk/src/test/util_map_proc/Makefile	/^OBJS = util_map_proc.o$/;"	m
OBJS	deps/pmdk/src/test/util_parse_size/Makefile	/^OBJS = util_parse_size.o$/;"	m
OBJS	deps/pmdk/src/test/util_pool_hdr/Makefile	/^OBJS = util_pool_hdr.o$/;"	m
OBJS	deps/pmdk/src/test/util_poolset/Makefile	/^OBJS = util_poolset.o mocks_posix.o$/;"	m
OBJS	deps/pmdk/src/test/util_poolset_foreach/Makefile	/^OBJS = util_poolset_foreach.o$/;"	m
OBJS	deps/pmdk/src/test/util_poolset_parse/Makefile	/^OBJS = util_poolset_parse.o$/;"	m
OBJS	deps/pmdk/src/test/util_poolset_size/Makefile	/^OBJS = util_poolset_size.o$/;"	m
OBJS	deps/pmdk/src/test/util_sds/Makefile	/^OBJS = util_sds.o$/;"	m
OBJS	deps/pmdk/src/test/util_uuid_generate/Makefile	/^OBJS = util_uuid_generate.o$/;"	m
OBJS	deps/pmdk/src/test/util_vec/Makefile	/^OBJS = util_vec.o$/;"	m
OBJS	deps/pmdk/src/test/util_vecq/Makefile	/^OBJS = util_vecq.o$/;"	m
OBJS	deps/pmdk/src/tools/daxio/Makefile	/^OBJS = daxio.o$/;"	m
OBJS	deps/pmdk/src/tools/pmempool/Makefile	/^OBJS = pmempool.o\\$/;"	m
OBJS	deps/pmdk/src/tools/rpmemd/Makefile	/^OBJS = rpmemd.o\\$/;"	m
OBJS_UT	deps/pmdk/src/test/unittest/Makefile	/^OBJS_UT = ut.o ut_alloc.o ut_file.o ut_pthread.o ut_signal.o ut_backtrace.o\\$/;"	m
OBJS_UT_PMEM2	deps/pmdk/src/test/unittest/Makefile	/^OBJS_UT_PMEM2 = ut_pmem2_config.o ut_pmem2_utils.o$/;"	m
OBJ_CONFIG_ENV_VARIABLE	deps/pmdk/src/libpmemobj/obj.c	64;"	d	file:
OBJ_CONFIG_FILE_ENV_VARIABLE	deps/pmdk/src/libpmemobj/obj.c	69;"	d	file:
OBJ_DEFRAG_ADV_PGRAPH	deps/pmdk/src/test/obj_defrag_advanced/pgraph.h	38;"	d
OBJ_DEFRAG_ADV_VGRAPH	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	38;"	d
OBJ_DEPS	deps/pmdk/src/test/Makefile	/^OBJ_DEPS = \\$/;"	m
OBJ_DIRECT_H	deps/pmdk/src/test/obj_direct/obj_direct.h	37;"	d
OBJ_DIRECT_NITER	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	547;"	d	file:
OBJ_DIRECT_NITER	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	559;"	d	file:
OBJ_DSC_P_SIZE	deps/pmdk/src/libpmemobj/obj.h	76;"	d
OBJ_DSC_P_UNUSED	deps/pmdk/src/libpmemobj/obj.h	78;"	d
OBJ_ENCODING_EMBSTR	src/server.h	248;"	d
OBJ_ENCODING_EMBSTR_SIZE_LIMIT	src/object.c	146;"	d	file:
OBJ_ENCODING_HT	src/server.h	242;"	d
OBJ_ENCODING_INT	src/server.h	241;"	d
OBJ_ENCODING_INTSET	src/server.h	246;"	d
OBJ_ENCODING_LINKEDLIST	src/server.h	244;"	d
OBJ_ENCODING_QUICKLIST	src/server.h	249;"	d
OBJ_ENCODING_RAW	src/server.h	240;"	d
OBJ_ENCODING_SKIPLIST	src/server.h	247;"	d
OBJ_ENCODING_ZIPLIST	src/server.h	245;"	d
OBJ_ENCODING_ZIPMAP	src/server.h	243;"	d
OBJ_EXTRA_NALLOC	deps/pmdk/src/test/set_funcs/set_funcs.c	217;"	d	file:
OBJ_FORMAT_FEAT_CHECK	deps/pmdk/src/libpmemobj/obj.h	70;"	d
OBJ_FORMAT_FEAT_DEFAULT	deps/pmdk/src/libpmemobj/obj.h	67;"	d
OBJ_FORMAT_MAJOR	deps/pmdk/src/libpmemobj/obj.h	65;"	d
OBJ_HASH	src/server.h	235;"	d
OBJ_HASH_KEY	src/server.h	1108;"	d
OBJ_HASH_MAX_ZIPLIST_ENTRIES	src/server.h	406;"	d
OBJ_HASH_MAX_ZIPLIST_VALUE	src/server.h	407;"	d
OBJ_HASH_VALUE	src/server.h	1109;"	d
OBJ_HDR_SIG	deps/pmdk/src/libpmemobj/obj.h	64;"	d
OBJ_HEADERS_INSTALL	deps/pmdk/src/Makefile	/^OBJ_HEADERS_INSTALL = include\/libpmemobj\/*.h$/;"	m
OBJ_INTERNAL_OBJECT_MASK	deps/pmdk/src/libpmemobj/obj.h	232;"	d
OBJ_LANES_OFFSET	deps/pmdk/src/libpmemobj/obj.h	80;"	d
OBJ_LIST	src/server.h	232;"	d
OBJ_LIST_COMPRESS_DEPTH	src/server.h	414;"	d
OBJ_LIST_EMPTY	deps/pmdk/src/libpmemobj/obj.h	86;"	d
OBJ_LIST_MAX_ZIPLIST_SIZE	src/server.h	413;"	d
OBJ_NLANES	deps/pmdk/src/libpmemobj/obj.h	81;"	d
OBJ_NLANES_ENV_VARIABLE	deps/pmdk/src/libpmemobj/obj.c	74;"	d	file:
OBJ_OFF_FROM_HEAP	deps/pmdk/src/libpmemobj/obj.h	87;"	d
OBJ_OFF_FROM_LANES	deps/pmdk/src/libpmemobj/obj.h	90;"	d
OBJ_OFF_IS_VALID	deps/pmdk/src/libpmemobj/obj.h	100;"	d
OBJ_OFF_IS_VALID_FROM_CTX	deps/pmdk/src/libpmemobj/obj.h	/^OBJ_OFF_IS_VALID_FROM_CTX(void *ctx, uint64_t offset)$/;"	f
OBJ_OFF_TO_PTR	deps/pmdk/src/libpmemobj/obj.h	83;"	d
OBJ_OID_IS_NULL	deps/pmdk/src/libpmemobj/obj.h	85;"	d
OBJ_OID_IS_VALID	deps/pmdk/src/libpmemobj/obj.h	/^OBJ_OID_IS_VALID(PMEMobjpool *pop, PMEMoid oid)$/;"	f
OBJ_PTR_FROM_POOL	deps/pmdk/src/libpmemobj/obj.h	95;"	d
OBJ_PTR_IS_VALID	deps/pmdk/src/libpmemobj/obj.h	106;"	d
OBJ_PTR_TO_OFF	deps/pmdk/src/libpmemobj/obj.h	84;"	d
OBJ_REMOTE_DEPS	deps/pmdk/src/test/Makefile	/^OBJ_REMOTE_DEPS = \\$/;"	m
OBJ_REMOTE_TESTS	deps/pmdk/src/test/Makefile	/^OBJ_REMOTE_TESTS = \\$/;"	m
OBJ_RING_BUF_COUNT	deps/jemalloc/test/unit/prof_reset.c	149;"	d	file:
OBJ_RING_BUF_COUNT	deps/jemalloc/test/unit/prof_reset.c	236;"	d	file:
OBJ_SET	src/server.h	233;"	d
OBJ_SET_EX	src/t_string.c	64;"	d	file:
OBJ_SET_MAX_INTSET_ENTRIES	src/server.h	408;"	d
OBJ_SET_NO_FLAGS	src/t_string.c	61;"	d	file:
OBJ_SET_NX	src/t_string.c	62;"	d	file:
OBJ_SET_PX	src/t_string.c	65;"	d	file:
OBJ_SET_XX	src/t_string.c	63;"	d	file:
OBJ_SHARED_BULKHDR_LEN	src/server.h	124;"	d
OBJ_SHARED_INTEGERS	src/server.h	123;"	d
OBJ_SIZE	deps/pmdk/src/test/obj_ctl_heap_size/obj_ctl_heap_size.c	41;"	d	file:
OBJ_SIZE	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	46;"	d	file:
OBJ_SIZE	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	46;"	d	file:
OBJ_SIZE	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	49;"	d	file:
OBJ_SIZE	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	45;"	d	file:
OBJ_SIZE	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	45;"	d	file:
OBJ_STR	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	42;"	d	file:
OBJ_STRING	src/server.h	231;"	d
OBJ_TESTS	deps/pmdk/src/test/Makefile	/^OBJ_TESTS = \\$/;"	m
OBJ_TYPE_NUM	deps/pmdk/src/benchmarks/map_bench.cpp	67;"	d	file:
OBJ_X_VALID_FLAGS	deps/pmdk/src/libpmemobj/obj.c	76;"	d	file:
OBJ_ZSET	src/server.h	234;"	d
OBJ_ZSET_MAX_ZIPLIST_ENTRIES	src/server.h	409;"	d
OBJ_ZSET_MAX_ZIPLIST_VALUE	src/server.h	410;"	d
OFF_TO_PTR	deps/pmdk/src/tools/pmempool/info_obj.c	55;"	d	file:
OF_ERR	deps/pmdk/src/test/unittest/ut.c	214;"	d	file:
OF_NAME	deps/pmdk/src/test/unittest/ut.c	216;"	d	file:
OF_NONL	deps/pmdk/src/test/unittest/ut.c	213;"	d	file:
OF_TRACE	deps/pmdk/src/test/unittest/ut.c	215;"	d	file:
OIDS_ALL	deps/pmdk/src/test/obj_defrag/obj_defrag.c	139;"	d	file:
OID_EQUALS	deps/pmdk/src/include/libpmemobj/base.h	121;"	d
OID_INSTANCEOF	deps/pmdk/src/include/libpmemobj/types.h	163;"	d
OID_IS_NULL	deps/pmdk/src/include/libpmemobj/base.h	120;"	d
OID_NULL	deps/pmdk/src/include/libpmemobj/base.h	/^static const PMEMoid OID_NULL = { 0, 0 };$/;"	v
OID_PTRS	deps/pmdk/src/test/obj_defrag/obj_defrag.c	137;"	d	file:
OK	src/quicklist.c	1429;"	d	file:
ONLY64	deps/jemalloc/test/src/SFMT.c	65;"	d	file:
OOB_HEADER_SIZE	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	65;"	d	file:
OOB_HEADER_SIZE	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	63;"	d	file:
OOB_OFF	deps/pmdk/src/test/obj_list/obj_list.h	47;"	d
OPEN	deps/pmdk/src/test/unittest/unittest.h	450;"	d
OPEN_EPROTO_COUNT	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_open.c	98;"	d	file:
OPEN_MSG	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^static const struct rpmem_msg_open OPEN_MSG = {$/;"	v	typeref:struct:rpmem_msg_open
OPEN_RESP	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_open.c	/^static const struct rpmem_msg_open_resp OPEN_RESP = {$/;"	v	typeref:struct:rpmem_msg_open_resp	file:
OPERATION_CLEANUP	deps/pmdk/src/libpmemobj/memops.c	/^	OPERATION_CLEANUP,$/;"	e	enum:operation_state	file:
OPERATION_EXTERNAL	deps/pmdk/src/libpmemobj/pmalloc.c	/^	OPERATION_EXTERNAL, \/* used for everything else, incl. large redos *\/$/;"	e	enum:pmalloc_operation_type	file:
OPERATION_IDLE	deps/pmdk/src/libpmemobj/memops.c	/^	OPERATION_IDLE,$/;"	e	enum:operation_state	file:
OPERATION_INTERNAL	deps/pmdk/src/libpmemobj/pmalloc.c	/^	OPERATION_INTERNAL, \/* used only for single, one-off operations *\/$/;"	e	enum:pmalloc_operation_type	file:
OPERATION_IN_PROGRESS	deps/pmdk/src/libpmemobj/memops.c	/^	OPERATION_IN_PROGRESS,$/;"	e	enum:operation_state	file:
OPERATION_REPEAT_COUNT	deps/pmdk/src/benchmarks/obj_lanes.cpp	53;"	d	file:
OPR_ADD	deps/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_AND	deps/lua/src/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_CONCAT	deps/lua/src/lcode.h	/^  OPR_CONCAT,$/;"	e	enum:BinOpr
OPR_DIV	deps/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_EQ	deps/lua/src/lcode.h	/^  OPR_NE, OPR_EQ,$/;"	e	enum:BinOpr
OPR_GE	deps/lua/src/lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_GT	deps/lua/src/lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_LE	deps/lua/src/lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_LEN	deps/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_LT	deps/lua/src/lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_MINUS	deps/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_MOD	deps/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_MUL	deps/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_NE	deps/lua/src/lcode.h	/^  OPR_NE, OPR_EQ,$/;"	e	enum:BinOpr
OPR_NOBINOPR	deps/lua/src/lcode.h	/^  OPR_NOBINOPR$/;"	e	enum:BinOpr
OPR_NOT	deps/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_NOUNOPR	deps/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_OR	deps/lua/src/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_POW	deps/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_SUB	deps/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPS_NUM	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	44;"	d	file:
OPS_PER_TX	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	197;"	d	file:
OPT	deps/geohash-int/Makefile	/^OPT= -O2$/;"	m
OPT	deps/linenoise/Makefile	/^OPT= -Os$/;"	m
OPT	src/Makefile	/^OPT=$(OPTIMIZATION)$/;"	m
OPTIMIZATION	deps/hiredis/Makefile	/^OPTIMIZATION?=-O3$/;"	m
OPTIMIZATION	src/Makefile	/^OPTIMIZATION?=-O2$/;"	m
OPTION_NOHDRS	deps/pmdk/src/common/set.h	/^	OPTION_NOHDRS = 0x2,	\/* no pool headers, remote replicas only *\/$/;"	e	enum:pool_set_option_flag
OPTION_SINGLEHDR	deps/pmdk/src/common/set.h	/^	OPTION_SINGLEHDR = 0x1,	\/* pool headers only in the first part *\/$/;"	e	enum:pool_set_option_flag
OPTION_UNKNOWN	deps/pmdk/src/common/set.h	/^	OPTION_UNKNOWN = 0x0,$/;"	e	enum:pool_set_option_flag
OPT_ALL	deps/pmdk/src/tools/pmempool/common.h	72;"	d
OPT_BLK	deps/pmdk/src/tools/pmempool/common.h	69;"	d
OPT_BTT	deps/pmdk/src/tools/pmempool/common.h	71;"	d
OPT_LOG	deps/pmdk/src/tools/pmempool/common.h	68;"	d
OPT_MASK	deps/pmdk/src/tools/pmempool/common.h	67;"	d
OPT_OBJ	deps/pmdk/src/tools/pmempool/common.h	70;"	d
OPT_REQ0	deps/pmdk/src/tools/pmempool/common.h	77;"	d
OPT_REQ1	deps/pmdk/src/tools/pmempool/common.h	78;"	d
OPT_REQ2	deps/pmdk/src/tools/pmempool/common.h	79;"	d
OPT_REQ3	deps/pmdk/src/tools/pmempool/common.h	80;"	d
OPT_REQ4	deps/pmdk/src/tools/pmempool/common.h	81;"	d
OPT_REQ5	deps/pmdk/src/tools/pmempool/common.h	82;"	d
OPT_REQ6	deps/pmdk/src/tools/pmempool/common.h	83;"	d
OPT_REQ7	deps/pmdk/src/tools/pmempool/common.h	84;"	d
OPT_REQ_MASK	deps/pmdk/src/tools/pmempool/common.h	75;"	d
OPT_REQ_SHIFT	deps/pmdk/src/tools/pmempool/common.h	74;"	d
OPT_SHIFT	deps/pmdk/src/tools/pmempool/common.h	66;"	d
OPT_WRITE_BOOL	deps/jemalloc/src/stats.c	636;"	d	file:
OPT_WRITE_BOOL	deps/jemalloc/src/stats.c	766;"	d	file:
OPT_WRITE_BOOL_MUTABLE	deps/jemalloc/src/stats.c	647;"	d	file:
OPT_WRITE_BOOL_MUTABLE	deps/jemalloc/src/stats.c	767;"	d	file:
OPT_WRITE_CHAR_P	deps/jemalloc/src/stats.c	706;"	d	file:
OPT_WRITE_CHAR_P	deps/jemalloc/src/stats.c	770;"	d	file:
OPT_WRITE_SIZE_T	deps/jemalloc/src/stats.c	672;"	d	file:
OPT_WRITE_SIZE_T	deps/jemalloc/src/stats.c	768;"	d	file:
OPT_WRITE_SSIZE_T	deps/jemalloc/src/stats.c	682;"	d	file:
OPT_WRITE_SSIZE_T	deps/jemalloc/src/stats.c	769;"	d	file:
OPT_WRITE_SSIZE_T_MUTABLE	deps/jemalloc/src/stats.c	692;"	d	file:
OPT_WRITE_UNSIGNED	deps/jemalloc/src/stats.c	662;"	d	file:
OPVAL_DIRTY_LL	src/t_zset.c	1629;"	d	file:
OPVAL_DIRTY_ROBJ	src/t_zset.c	1628;"	d	file:
OPVAL_VALID_LL	src/t_zset.c	1630;"	d	file:
OP_ADD	deps/lua/src/lopcodes.h	/^OP_ADD,\/*	A B C	R(A) := RK(B) + RK(C)				*\/$/;"	e	enum:__anon37
OP_CALL	deps/lua/src/lopcodes.h	/^OP_CALL,\/*	A B C	R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1)) *\/$/;"	e	enum:__anon37
OP_CLOSE	deps/lua/src/lopcodes.h	/^OP_CLOSE,\/*	A 	close all variables in the stack up to (>=) R(A)*\/$/;"	e	enum:__anon37
OP_CLOSURE	deps/lua/src/lopcodes.h	/^OP_CLOSURE,\/*	A Bx	R(A) := closure(KPROTO[Bx], R(A), ... ,R(A+n))	*\/$/;"	e	enum:__anon37
OP_CONCAT	deps/lua/src/lopcodes.h	/^OP_CONCAT,\/*	A B C	R(A) := R(B).. ... ..R(C)			*\/$/;"	e	enum:__anon37
OP_DIV	deps/lua/src/lopcodes.h	/^OP_DIV,\/*	A B C	R(A) := RK(B) \/ RK(C)				*\/$/;"	e	enum:__anon37
OP_EQ	deps/lua/src/lopcodes.h	/^OP_EQ,\/*	A B C	if ((RK(B) == RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon37
OP_FORLOOP	deps/lua/src/lopcodes.h	/^OP_FORLOOP,\/*	A sBx	R(A)+=R(A+2);$/;"	e	enum:__anon37
OP_FORPREP	deps/lua/src/lopcodes.h	/^OP_FORPREP,\/*	A sBx	R(A)-=R(A+2); pc+=sBx				*\/$/;"	e	enum:__anon37
OP_GETGLOBAL	deps/lua/src/lopcodes.h	/^OP_GETGLOBAL,\/*	A Bx	R(A) := Gbl[Kst(Bx)]				*\/$/;"	e	enum:__anon37
OP_GETTABLE	deps/lua/src/lopcodes.h	/^OP_GETTABLE,\/*	A B C	R(A) := R(B)[RK(C)]				*\/$/;"	e	enum:__anon37
OP_GETUPVAL	deps/lua/src/lopcodes.h	/^OP_GETUPVAL,\/*	A B	R(A) := UpValue[B]				*\/$/;"	e	enum:__anon37
OP_JMP	deps/lua/src/lopcodes.h	/^OP_JMP,\/*	sBx	pc+=sBx					*\/$/;"	e	enum:__anon37
OP_LE	deps/lua/src/lopcodes.h	/^OP_LE,\/*	A B C	if ((RK(B) <= RK(C)) ~= A) then pc++  		*\/$/;"	e	enum:__anon37
OP_LEN	deps/lua/src/lopcodes.h	/^OP_LEN,\/*	A B	R(A) := length of R(B)				*\/$/;"	e	enum:__anon37
OP_LOADBOOL	deps/lua/src/lopcodes.h	/^OP_LOADBOOL,\/*	A B C	R(A) := (Bool)B; if (C) pc++			*\/$/;"	e	enum:__anon37
OP_LOADK	deps/lua/src/lopcodes.h	/^OP_LOADK,\/*	A Bx	R(A) := Kst(Bx)					*\/$/;"	e	enum:__anon37
OP_LOADNIL	deps/lua/src/lopcodes.h	/^OP_LOADNIL,\/*	A B	R(A) := ... := R(B) := nil			*\/$/;"	e	enum:__anon37
OP_LT	deps/lua/src/lopcodes.h	/^OP_LT,\/*	A B C	if ((RK(B) <  RK(C)) ~= A) then pc++  		*\/$/;"	e	enum:__anon37
OP_MERGE_SEARCH	deps/pmdk/src/libpmemobj/memops.c	55;"	d	file:
OP_MOD	deps/lua/src/lopcodes.h	/^OP_MOD,\/*	A B C	R(A) := RK(B) % RK(C)				*\/$/;"	e	enum:__anon37
OP_MODE_1BY1	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	OP_MODE_1BY1,     \/* lock and unlock one lock at a time *\/$/;"	e	enum:operation_mode	file:
OP_MODE_ABORT	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	OP_MODE_ABORT,$/;"	e	enum:op_mode	file:
OP_MODE_ABORT_NESTED	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	OP_MODE_ABORT_NESTED,$/;"	e	enum:op_mode	file:
OP_MODE_ALL_LOCK	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	OP_MODE_ALL_LOCK, \/* grab all locks, then unlock them all *\/$/;"	e	enum:operation_mode	file:
OP_MODE_ALL_OBJ	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	OP_MODE_ALL_OBJ,$/;"	e	enum:op_mode	file:
OP_MODE_ALL_OBJ_NESTED	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	OP_MODE_ALL_OBJ_NESTED,$/;"	e	enum:op_mode	file:
OP_MODE_COMMIT	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	OP_MODE_COMMIT,$/;"	e	enum:op_mode	file:
OP_MODE_MAX	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	OP_MODE_MAX,$/;"	e	enum:operation_mode	file:
OP_MODE_ONE_OBJ	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	OP_MODE_ONE_OBJ,$/;"	e	enum:op_mode	file:
OP_MODE_ONE_OBJ_NESTED	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	OP_MODE_ONE_OBJ_NESTED,$/;"	e	enum:op_mode	file:
OP_MODE_ONE_OBJ_NESTED_RANGE	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	OP_MODE_ONE_OBJ_NESTED_RANGE,$/;"	e	enum:op_mode	file:
OP_MODE_ONE_OBJ_RANGE	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	OP_MODE_ONE_OBJ_RANGE,$/;"	e	enum:op_mode	file:
OP_MODE_RAND	deps/pmdk/src/benchmarks/blk.cpp	/^	OP_MODE_RAND  \/* read\/write to chunks selected randomly *\/$/;"	e	enum:op_mode	file:
OP_MODE_RAND	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	OP_MODE_RAND$/;"	e	enum:operation_mode	file:
OP_MODE_RAND	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	OP_MODE_RAND  \/* use random chunks *\/$/;"	e	enum:operation_mode	file:
OP_MODE_RAND	deps/pmdk/src/benchmarks/rpmem.cpp	/^	OP_MODE_RAND,      \/* use random chunks *\/$/;"	e	enum:operation_mode	file:
OP_MODE_RAND_WRAP	deps/pmdk/src/benchmarks/rpmem.cpp	/^	OP_MODE_RAND_WRAP, \/* use random chunks, but use file size *\/$/;"	e	enum:operation_mode	file:
OP_MODE_SEQ	deps/pmdk/src/benchmarks/blk.cpp	/^	OP_MODE_SEQ,  \/* read\/write chunk by chunk *\/$/;"	e	enum:op_mode	file:
OP_MODE_SEQ	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	OP_MODE_SEQ,$/;"	e	enum:operation_mode	file:
OP_MODE_SEQ	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	OP_MODE_SEQ,  \/* use consecutive chunks *\/$/;"	e	enum:operation_mode	file:
OP_MODE_SEQ	deps/pmdk/src/benchmarks/rpmem.cpp	/^	OP_MODE_SEQ,       \/* use consecutive chunks *\/$/;"	e	enum:operation_mode	file:
OP_MODE_SEQ_WRAP	deps/pmdk/src/benchmarks/rpmem.cpp	/^	OP_MODE_SEQ_WRAP,  \/* use consecutive chunks, but use file size *\/$/;"	e	enum:operation_mode	file:
OP_MODE_STAT	deps/pmdk/src/benchmarks/blk.cpp	/^	OP_MODE_STAT, \/* read\/write always the same chunk *\/$/;"	e	enum:op_mode	file:
OP_MODE_STAT	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	OP_MODE_STAT,$/;"	e	enum:operation_mode	file:
OP_MODE_STAT	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	OP_MODE_STAT, \/* always use the same chunk *\/$/;"	e	enum:operation_mode	file:
OP_MODE_STAT	deps/pmdk/src/benchmarks/rpmem.cpp	/^	OP_MODE_STAT,      \/* always use the same chunk *\/$/;"	e	enum:operation_mode	file:
OP_MODE_UNKNOWN	deps/pmdk/src/benchmarks/blk.cpp	/^	OP_MODE_UNKNOWN,$/;"	e	enum:op_mode	file:
OP_MODE_UNKNOWN	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	OP_MODE_UNKNOWN,$/;"	e	enum:operation_mode	file:
OP_MODE_UNKNOWN	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	OP_MODE_UNKNOWN,$/;"	e	enum:operation_mode	file:
OP_MODE_UNKNOWN	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	OP_MODE_UNKNOWN$/;"	e	enum:op_mode	file:
OP_MODE_UNKNOWN	deps/pmdk/src/benchmarks/rpmem.cpp	/^	OP_MODE_UNKNOWN,$/;"	e	enum:operation_mode	file:
OP_MOVE	deps/lua/src/lopcodes.h	/^OP_MOVE,\/*	A B	R(A) := R(B)					*\/$/;"	e	enum:__anon37
OP_MUL	deps/lua/src/lopcodes.h	/^OP_MUL,\/*	A B C	R(A) := RK(B) * RK(C)				*\/$/;"	e	enum:__anon37
OP_NEWTABLE	deps/lua/src/lopcodes.h	/^OP_NEWTABLE,\/*	A B C	R(A) := {} (size = B,C)				*\/$/;"	e	enum:__anon37
OP_NOT	deps/lua/src/lopcodes.h	/^OP_NOT,\/*	A B	R(A) := not R(B)				*\/$/;"	e	enum:__anon37
OP_POW	deps/lua/src/lopcodes.h	/^OP_POW,\/*	A B C	R(A) := RK(B) ^ RK(C)				*\/$/;"	e	enum:__anon37
OP_RETURN	deps/lua/src/lopcodes.h	/^OP_RETURN,\/*	A B	return R(A), ... ,R(A+B-2)	(see note)	*\/$/;"	e	enum:__anon37
OP_SELF	deps/lua/src/lopcodes.h	/^OP_SELF,\/*	A B C	R(A+1) := R(B); R(A) := R(B)[RK(C)]		*\/$/;"	e	enum:__anon37
OP_SETGLOBAL	deps/lua/src/lopcodes.h	/^OP_SETGLOBAL,\/*	A Bx	Gbl[Kst(Bx)] := R(A)				*\/$/;"	e	enum:__anon37
OP_SETLIST	deps/lua/src/lopcodes.h	/^OP_SETLIST,\/*	A B C	R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B	*\/$/;"	e	enum:__anon37
OP_SETTABLE	deps/lua/src/lopcodes.h	/^OP_SETTABLE,\/*	A B C	R(A)[RK(B)] := RK(C)				*\/$/;"	e	enum:__anon37
OP_SETUPVAL	deps/lua/src/lopcodes.h	/^OP_SETUPVAL,\/*	A B	UpValue[B] := R(A)				*\/$/;"	e	enum:__anon37
OP_SUB	deps/lua/src/lopcodes.h	/^OP_SUB,\/*	A B C	R(A) := RK(B) - RK(C)				*\/$/;"	e	enum:__anon37
OP_TAILCALL	deps/lua/src/lopcodes.h	/^OP_TAILCALL,\/*	A B C	return R(A)(R(A+1), ... ,R(A+B-1))		*\/$/;"	e	enum:__anon37
OP_TEST	deps/lua/src/lopcodes.h	/^OP_TEST,\/*	A C	if not (R(A) <=> C) then pc++			*\/ $/;"	e	enum:__anon37
OP_TESTSET	deps/lua/src/lopcodes.h	/^OP_TESTSET,\/*	A B C	if (R(B) <=> C) then R(A) := R(B) else pc++	*\/ $/;"	e	enum:__anon37
OP_TFORLOOP	deps/lua/src/lopcodes.h	/^OP_TFORLOOP,\/*	A C	R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2)); $/;"	e	enum:__anon37
OP_TYPE_BLK	deps/pmdk/src/benchmarks/blk.cpp	/^	OP_TYPE_BLK,$/;"	e	enum:op_type	file:
OP_TYPE_FILE	deps/pmdk/src/benchmarks/blk.cpp	/^	OP_TYPE_FILE,$/;"	e	enum:op_type	file:
OP_TYPE_MEMCPY	deps/pmdk/src/benchmarks/blk.cpp	/^	OP_TYPE_MEMCPY,$/;"	e	enum:op_type	file:
OP_TYPE_READ	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^enum operation_type { OP_TYPE_UNKNOWN, OP_TYPE_READ, OP_TYPE_WRITE };$/;"	e	enum:operation_type	file:
OP_TYPE_UNKNOWN	deps/pmdk/src/benchmarks/blk.cpp	/^	OP_TYPE_UNKNOWN,$/;"	e	enum:op_type	file:
OP_TYPE_UNKNOWN	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^enum operation_type { OP_TYPE_UNKNOWN, OP_TYPE_READ, OP_TYPE_WRITE };$/;"	e	enum:operation_type	file:
OP_TYPE_WRITE	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^enum operation_type { OP_TYPE_UNKNOWN, OP_TYPE_READ, OP_TYPE_WRITE };$/;"	e	enum:operation_type	file:
OP_UNM	deps/lua/src/lopcodes.h	/^OP_UNM,\/*	A B	R(A) := -R(B)					*\/$/;"	e	enum:__anon37
OP_VARARG	deps/lua/src/lopcodes.h	/^OP_VARARG\/*	A B	R(A), R(A+1), ..., R(A+B-1) = vararg		*\/$/;"	e	enum:__anon37
OS_DIR_SEPARATOR	deps/pmdk/src/common/os.h	51;"	d
OS_DIR_SEPARATOR	deps/pmdk/src/common/os.h	54;"	d
OS_DIR_SEP_STR	deps/pmdk/src/common/os.h	52;"	d
OS_DIR_SEP_STR	deps/pmdk/src/common/os.h	55;"	d
OS_LOCK_EX	deps/pmdk/src/common/os.h	88;"	d
OS_LOCK_NB	deps/pmdk/src/common/os.h	89;"	d
OS_LOCK_SH	deps/pmdk/src/common/os.h	87;"	d
OS_LOCK_UN	deps/pmdk/src/common/os.h	90;"	d
OS_MAPFILE	deps/pmdk/src/common/mmap.h	70;"	d
OS_MAPFILE	deps/pmdk/src/common/mmap.h	72;"	d
OS_ONCE_INIT	deps/pmdk/src/common/os_thread.h	73;"	d
OS_THREAD_H	deps/pmdk/src/common/os_thread.h	39;"	d
OTHER_ERROR	deps/pmdk/src/common/file.h	/^	OTHER_ERROR = -2,$/;"	e	enum:file_type
OTHER_TESTS	deps/pmdk/src/test/Makefile	/^OTHER_TESTS = \\$/;"	m
OUTPUT	deps/lua/src/luac.c	27;"	d	file:
OUTPUT_CSV	src/redis-cli.c	61;"	d	file:
OUTPUT_RAW	src/redis-cli.c	60;"	d	file:
OUTPUT_STANDARD	src/redis-cli.c	59;"	d	file:
OUT_FATAL	deps/pmdk/src/common/out.h	121;"	d
OUT_FATAL	deps/pmdk/src/common/out.h	74;"	d
OUT_FATAL_ABORT	deps/pmdk/src/common/out.h	122;"	d
OUT_FATAL_ABORT	deps/pmdk/src/common/out.h	75;"	d
OUT_FATAL_DISCARD_NORETURN	deps/pmdk/src/common/out.h	56;"	d
OUT_FATAL_DISCARD_NORETURN	deps/pmdk/src/common/out.h	58;"	d
OUT_LOG	deps/pmdk/src/common/out.h	119;"	d
OUT_LOG	deps/pmdk/src/common/out.h	72;"	d
OUT_NONL	deps/pmdk/src/common/out.h	120;"	d
OUT_NONL	deps/pmdk/src/common/out.h	73;"	d
OVERLAP_SIZE	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	47;"	d	file:
O_SYNC	deps/pmdk/src/windows/include/platform.h	110;"	d
ObjDefragAdvanced	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^class ObjDefragAdvanced(t.BaseTest):$/;"	c
ObjDefragAdvancedMt	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^class ObjDefragAdvancedMt(ObjDefragAdvanced):$/;"	c
Obj_create_attr	deps/pmdk/src/libpmemobj/obj.c	/^static const struct pool_attr Obj_create_attr = {$/;"	v	typeref:struct:pool_attr	file:
Obj_open_attr	deps/pmdk/src/libpmemobj/obj.c	/^static const struct pool_attr Obj_open_attr = {$/;"	v	typeref:struct:pool_attr	file:
Object	deps/pmdk/src/test/unittest/ut.c	/^	PVOID Object;$/;"	m	struct:_SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	file:
ObjectTypeIndex	deps/pmdk/src/test/unittest/ut.c	/^	USHORT ObjectTypeIndex;$/;"	m	struct:_SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	file:
ObjectTypeInformation	deps/pmdk/src/test/unittest/ut.c	555;"	d	file:
Offset	deps/pmdk/src/common/mmap.h	/^	os_off_t Offset;$/;"	m	struct:map_tracker
Offset	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	/^static os_off_t Offset = 0;	\/* offset from beginning of file *\/$/;"	v	file:
Offset	deps/pmdk/src/windows/include/win_mmap.h	/^	os_off_t Offset;$/;"	m	struct:FILE_MAPPING_TRACKER
On_valgrind	deps/pmdk/src/common/valgrind_internal.h	62;"	d
On_valgrind	deps/pmdk/src/common/valgrind_internal.h	65;"	d
OpArgK	deps/lua/src/lopcodes.h	/^  OpArgK   \/* argument is a constant or register\/constant *\/$/;"	e	enum:OpArgMask
OpArgMask	deps/lua/src/lopcodes.h	/^enum OpArgMask {$/;"	g
OpArgN	deps/lua/src/lopcodes.h	/^  OpArgN,  \/* argument is not used *\/$/;"	e	enum:OpArgMask
OpArgR	deps/lua/src/lopcodes.h	/^  OpArgR,  \/* argument is a register or a jump offset *\/$/;"	e	enum:OpArgMask
OpArgU	deps/lua/src/lopcodes.h	/^  OpArgU,  \/* argument is used *\/$/;"	e	enum:OpArgMask
OpCode	deps/lua/src/lopcodes.h	/^} OpCode;$/;"	t	typeref:enum:__anon37
OpMode	deps/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	g
Open_path	deps/pmdk/src/test/util_poolset/util_poolset.c	/^const char *Open_path = "";$/;"	v
OperationFactory	deps/pmdk/src/tools/pmreorder/operationfactory.py	/^class OperationFactory:$/;"	c
OpsContext	deps/pmdk/src/tools/pmreorder/opscontext.py	/^class OpsContext:$/;"	c
Ops_per_thread	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^static unsigned Ops_per_thread;$/;"	v	file:
Opt_force	deps/pmdk/src/test/tools/sparsefile/sparsefile.c	/^static int Opt_force;$/;"	v	file:
Opt_sparse	deps/pmdk/src/test/tools/sparsefile/sparsefile.c	/^static int Opt_sparse;$/;"	v	file:
Opt_verbose	deps/pmdk/src/test/tools/sparsefile/sparsefile.c	/^static int Opt_verbose;$/;"	v	file:
Options	deps/pmdk/src/common/set.c	/^static const struct pool_set_option Options[] = {$/;"	v	typeref:struct:pool_set_option	file:
Opts	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	/^static int Opts = 0;		\/* options flag *\/$/;"	v	file:
Opts	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	/^static int Opts;$/;"	v	file:
OrigFn	deps/pmdk/src/common/valgrind/valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon54
OrigFn	deps/pmdk/src/common/valgrind/valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon55
OrigFn	deps/pmdk/src/common/valgrind/valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon56
OrigFn	deps/pmdk/src/common/valgrind/valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon57
OrigFn	deps/pmdk/src/common/valgrind/valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon58
OrigFn	deps/pmdk/src/common/valgrind/valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon59
OrigFn	deps/pmdk/src/common/valgrind/valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon60
OrigFn	deps/pmdk/src/common/valgrind/valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon61
OrigFn	deps/pmdk/src/common/valgrind/valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon63
OrigFn	deps/pmdk/src/common/valgrind/valgrind.h	/^   OrigFn;$/;"	t	typeref:struct:__anon64
OrigFn	deps/pmdk/src/common/valgrind/valgrind.h	/^  OrigFn;$/;"	t	typeref:struct:__anon62
Out_fp	deps/pmdk/src/common/out.c	/^static FILE *Out_fp;$/;"	v	file:
Outfp	deps/pmdk/src/test/unittest/ut.c	/^static FILE *Outfp;$/;"	v	file:
Output	deps/lua/src/luac.c	/^static char Output[]={ OUTPUT };	\/* default output file name *\/$/;"	v	file:
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_close
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_close_resp
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_common
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_create
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_create_resp
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_hdr
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_hdr_resp
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_ibc_attr
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_open
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_open_resp
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_pool_desc
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_set_attr
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_msg_set_attr_resp
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^} PACKED;$/;"	v	typeref:struct:rpmem_pool_attr_packed
PACKED	deps/pmdk/src/rpmem_common/rpmem_proto.h	49;"	d
PADDING	deps/lua/src/lua_struct.c	71;"	d	file:
PAD_SIZE	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	55;"	d	file:
PAGE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	327;"	d
PAGEALIGNMALLOC	deps/pmdk/src/test/unittest/unittest.h	363;"	d
PAGES_PROT_COMMIT	deps/jemalloc/src/pages.c	12;"	d	file:
PAGES_PROT_DECOMMIT	deps/jemalloc/src/pages.c	13;"	d	file:
PAGE_2M	deps/pmdk/src/benchmarks/pmem_flush.cpp	51;"	d	file:
PAGE_2M	deps/pmdk/src/test/pmem_unmap/pmem_unmap.c	43;"	d	file:
PAGE_4K	deps/pmdk/src/benchmarks/pmem_flush.cpp	50;"	d	file:
PAGE_4K	deps/pmdk/src/test/pmem_unmap/pmem_unmap.c	42;"	d	file:
PAGE_ADDR2BASE	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	331;"	d
PAGE_ALIGNED_DOWN_SIZE	deps/pmdk/src/common/util.h	68;"	d
PAGE_ALIGNED_UP_SIZE	deps/pmdk/src/common/util.h	69;"	d
PAGE_ALIGN_UP	deps/pmdk/src/common/util.h	72;"	d
PAGE_CEILING	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	335;"	d
PAGE_MASK	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	325;"	d
PAGE_MASK	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	328;"	d
PAGE_SIZE	deps/pmdk/src/test/mmap/mmap.c	58;"	d	file:
PALLOC_CTL_DEBUG_NO_PATTERN	deps/pmdk/src/libpmemobj/palloc.h	53;"	d
PALLOC_FLAG	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	231;"	d	file:
PARITY1	deps/jemalloc/test/include/test/SFMT-params11213.h	48;"	d
PARITY1	deps/jemalloc/test/include/test/SFMT-params1279.h	48;"	d
PARITY1	deps/jemalloc/test/include/test/SFMT-params132049.h	48;"	d
PARITY1	deps/jemalloc/test/include/test/SFMT-params19937.h	48;"	d
PARITY1	deps/jemalloc/test/include/test/SFMT-params216091.h	48;"	d
PARITY1	deps/jemalloc/test/include/test/SFMT-params2281.h	48;"	d
PARITY1	deps/jemalloc/test/include/test/SFMT-params4253.h	48;"	d
PARITY1	deps/jemalloc/test/include/test/SFMT-params44497.h	48;"	d
PARITY1	deps/jemalloc/test/include/test/SFMT-params607.h	48;"	d
PARITY1	deps/jemalloc/test/include/test/SFMT-params86243.h	48;"	d
PARITY2	deps/jemalloc/test/include/test/SFMT-params11213.h	49;"	d
PARITY2	deps/jemalloc/test/include/test/SFMT-params1279.h	49;"	d
PARITY2	deps/jemalloc/test/include/test/SFMT-params132049.h	49;"	d
PARITY2	deps/jemalloc/test/include/test/SFMT-params19937.h	49;"	d
PARITY2	deps/jemalloc/test/include/test/SFMT-params216091.h	49;"	d
PARITY2	deps/jemalloc/test/include/test/SFMT-params2281.h	49;"	d
PARITY2	deps/jemalloc/test/include/test/SFMT-params4253.h	49;"	d
PARITY2	deps/jemalloc/test/include/test/SFMT-params44497.h	49;"	d
PARITY2	deps/jemalloc/test/include/test/SFMT-params607.h	49;"	d
PARITY2	deps/jemalloc/test/include/test/SFMT-params86243.h	49;"	d
PARITY3	deps/jemalloc/test/include/test/SFMT-params11213.h	50;"	d
PARITY3	deps/jemalloc/test/include/test/SFMT-params1279.h	50;"	d
PARITY3	deps/jemalloc/test/include/test/SFMT-params132049.h	50;"	d
PARITY3	deps/jemalloc/test/include/test/SFMT-params19937.h	50;"	d
PARITY3	deps/jemalloc/test/include/test/SFMT-params216091.h	50;"	d
PARITY3	deps/jemalloc/test/include/test/SFMT-params2281.h	50;"	d
PARITY3	deps/jemalloc/test/include/test/SFMT-params4253.h	50;"	d
PARITY3	deps/jemalloc/test/include/test/SFMT-params44497.h	50;"	d
PARITY3	deps/jemalloc/test/include/test/SFMT-params607.h	50;"	d
PARITY3	deps/jemalloc/test/include/test/SFMT-params86243.h	50;"	d
PARITY4	deps/jemalloc/test/include/test/SFMT-params11213.h	51;"	d
PARITY4	deps/jemalloc/test/include/test/SFMT-params1279.h	51;"	d
PARITY4	deps/jemalloc/test/include/test/SFMT-params132049.h	51;"	d
PARITY4	deps/jemalloc/test/include/test/SFMT-params19937.h	51;"	d
PARITY4	deps/jemalloc/test/include/test/SFMT-params216091.h	51;"	d
PARITY4	deps/jemalloc/test/include/test/SFMT-params2281.h	51;"	d
PARITY4	deps/jemalloc/test/include/test/SFMT-params4253.h	51;"	d
PARITY4	deps/jemalloc/test/include/test/SFMT-params44497.h	51;"	d
PARITY4	deps/jemalloc/test/include/test/SFMT-params607.h	51;"	d
PARITY4	deps/jemalloc/test/include/test/SFMT-params86243.h	51;"	d
PARSER_ABSOLUTE_PATH_EXPECTED	deps/pmdk/src/common/set.c	/^	PARSER_ABSOLUTE_PATH_EXPECTED,$/;"	e	enum:parser_codes	file:
PARSER_CANNOT_READ_SIZE	deps/pmdk/src/common/set.c	/^	PARSER_CANNOT_READ_SIZE,$/;"	e	enum:parser_codes	file:
PARSER_CONTINUE	deps/pmdk/src/common/set.c	/^	PARSER_CONTINUE = 0,$/;"	e	enum:parser_codes	file:
PARSER_FORMAT_OK	deps/pmdk/src/common/set.c	/^	PARSER_FORMAT_OK,$/;"	e	enum:parser_codes	file:
PARSER_INVALID_TOKEN	deps/pmdk/src/common/set.c	/^	PARSER_INVALID_TOKEN,$/;"	e	enum:parser_codes	file:
PARSER_MAX_CODE	deps/pmdk/src/common/set.c	/^	PARSER_MAX_CODE$/;"	e	enum:parser_codes	file:
PARSER_MAX_LINE	deps/pmdk/src/common/util.c	401;"	d	file:
PARSER_OPTION_EXPECTED	deps/pmdk/src/common/set.c	/^	PARSER_OPTION_EXPECTED,$/;"	e	enum:parser_codes	file:
PARSER_OPTION_UNKNOWN	deps/pmdk/src/common/set.c	/^	PARSER_OPTION_UNKNOWN,$/;"	e	enum:parser_codes	file:
PARSER_OUT_OF_MEMORY	deps/pmdk/src/common/set.c	/^	PARSER_OUT_OF_MEMORY,$/;"	e	enum:parser_codes	file:
PARSER_PMEMPOOLSET	deps/pmdk/src/common/set.c	/^	PARSER_PMEMPOOLSET,$/;"	e	enum:parser_codes	file:
PARSER_RELATIVE_PATH_EXPECTED	deps/pmdk/src/common/set.c	/^	PARSER_RELATIVE_PATH_EXPECTED,$/;"	e	enum:parser_codes	file:
PARSER_REMOTE_REPLICA_EXPECTED	deps/pmdk/src/common/set.c	/^	PARSER_REMOTE_REPLICA_EXPECTED,$/;"	e	enum:parser_codes	file:
PARSER_REMOTE_REP_UNEXPECTED_PARTS	deps/pmdk/src/common/set.c	/^	PARSER_REMOTE_REP_UNEXPECTED_PARTS,$/;"	e	enum:parser_codes	file:
PARSER_REPLICA	deps/pmdk/src/common/set.c	/^	PARSER_REPLICA,$/;"	e	enum:parser_codes	file:
PARSER_REP_NO_PARTS	deps/pmdk/src/common/set.c	/^	PARSER_REP_NO_PARTS,$/;"	e	enum:parser_codes	file:
PARSER_SET_NO_PARTS	deps/pmdk/src/common/set.c	/^	PARSER_SET_NO_PARTS,$/;"	e	enum:parser_codes	file:
PARSER_SIZE_MISMATCH	deps/pmdk/src/common/set.c	/^	PARSER_SIZE_MISMATCH,$/;"	e	enum:parser_codes	file:
PARSER_WRONG_SIZE	deps/pmdk/src/common/set.c	/^	PARSER_WRONG_SIZE,$/;"	e	enum:parser_codes	file:
PARSE_OP_MODE	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^enum parse_mode { PARSE_OP_MODE, PARSE_OP_MODE_ADD_RANGE };$/;"	e	enum:parse_mode	file:
PARSE_OP_MODE_ADD_RANGE	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^enum parse_mode { PARSE_OP_MODE, PARSE_OP_MODE_ADD_RANGE };$/;"	e	enum:parse_mode	file:
PART	deps/pmdk/src/common/set.h	/^PART(struct pool_replica *rep, unsigned p)$/;"	f
PARTN	deps/pmdk/src/common/set.h	/^PARTN(struct pool_replica *rep, unsigned p)$/;"	f
PARTNidx	deps/pmdk/src/common/set.h	/^PARTNidx(const struct pool_replica *rep, unsigned p)$/;"	f
PARTP	deps/pmdk/src/common/set.h	/^PARTP(struct pool_replica *rep, unsigned p)$/;"	f
PARTPidx	deps/pmdk/src/common/set.h	/^PARTPidx(const struct pool_replica *rep, unsigned p)$/;"	f
PART_HEALTH	deps/pmdk/src/libpmempool/replica.h	/^PART_HEALTH(struct replica_health_status *rep, unsigned p)$/;"	f
PART_HEALTHidx	deps/pmdk/src/libpmempool/replica.h	/^PART_HEALTHidx(struct replica_health_status *rep, unsigned p)$/;"	f
PART_MIN_SIZE	deps/pmdk/src/test/unittest/poolset.py	/^PART_MIN_SIZE = 2 * MiB$/;"	v
PART_NAME	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	55;"	d	file:
PART_TEMPLATE	deps/pmdk/src/benchmarks/poolset_util.cpp	41;"	d	file:
PARTidx	deps/pmdk/src/common/set.h	/^PARTidx(const struct pool_replica *rep, unsigned p)$/;"	f
PATH	deps/pmdk/src/examples/libpmem/manpage.c	54;"	d	file:
PATH	deps/pmdk/src/examples/libpmempool/manpage.c	43;"	d	file:
PATH_MAX	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h	54;"	d
PATH_MAX	deps/pmdk/src/windows/include/platform.h	78;"	d
PATTERN	deps/pmdk/src/test/obj_defrag_advanced/pgraph.c	44;"	d	file:
PC	deps/jemalloc/Makefile	/^PC := $(objroot)jemalloc.pc$/;"	m
PCRC	deps/lua/src/ldo.h	33;"	d
PCRLUA	deps/lua/src/ldo.h	32;"	d
PCRYIELD	deps/lua/src/ldo.h	34;"	d
PCS_RESERVED	deps/pmdk/src/common/os_auto_flush_windows.h	45;"	d
PCS_RESERVED_2	deps/pmdk/src/common/os_auto_flush_windows.h	46;"	d
PCS_TYPE_NUMBER	deps/pmdk/src/common/os_auto_flush_windows.h	47;"	d
PDLL_ENTRY	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	98;"	d	file:
PDLL_FOREACH	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	115;"	d	file:
PDLL_FOREACH_SAFE	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	119;"	d	file:
PDLL_HEAD	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	104;"	d	file:
PDLL_HEAD_INIT	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	110;"	d	file:
PDLL_INSERT_HEAD	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	124;"	d	file:
PDLL_REMOVE	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	143;"	d	file:
PDP_ENDIAN	src/config.h	143;"	d
PERSISTENCE_DOMAIN	deps/pmdk/src/common/os_auto_flush_linux.c	50;"	d	file:
PERSIST_METHOD	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	58;"	d	file:
PERSIST_METHOD	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	50;"	d
PFILE_MAPPING_TRACKER	deps/pmdk/src/windows/include/win_mmap.h	/^} FILE_MAPPING_TRACKER, *PFILE_MAPPING_TRACKER;$/;"	t	typeref:struct:FILE_MAPPING_TRACKER
PH_H_	deps/jemalloc/include/jemalloc/internal/ph.h	16;"	d
PI	deps/lua/src/lmathlib.c	20;"	d	file:
PI	deps/lua/src/lmathlib.c	21;"	d	file:
PIC_CFLAGS	deps/jemalloc/Makefile	/^PIC_CFLAGS = -fPIC -DPIC$/;"	m
PIPEMODE_WRITE_LOOP_MAX_BYTES	src/redis-cli.c	1777;"	d	file:
PKG_CONFIG_COMMON	deps/pmdk/src/Makefile	/^PKG_CONFIG_COMMON = common.pc$/;"	m
PKG_CONFIG_DESTDIR	deps/pmdk/src/Makefile	/^PKG_CONFIG_DESTDIR = $(DESTDIR)$(pkgconfigdir)$/;"	m
PKG_CONFIG_FILES	deps/pmdk/src/Makefile	/^PKG_CONFIG_FILES = libpmem.pc libpmemobj.pc libpmemlog.pc libpmemblk.pc\\$/;"	m
PLAT	deps/lua/Makefile	/^PLAT= none$/;"	m
PLAT	deps/lua/src/Makefile	/^PLAT= none$/;"	m
PLATFORM_H	deps/pmdk/src/windows/include/platform.h	43;"	d
PLATS	deps/lua/Makefile	/^PLATS= aix ansi bsd freebsd generic linux macosx mingw posix solaris$/;"	m
PLATS	deps/lua/src/Makefile	/^PLATS= aix ansi bsd freebsd generic linux macosx mingw posix solaris$/;"	m
PLAT_amd64_darwin	deps/pmdk/src/common/valgrind/valgrind.h	112;"	d
PLAT_amd64_darwin	deps/pmdk/src/common/valgrind/valgrind.h	132;"	d
PLAT_amd64_darwin	deps/pmdk/src/common/valgrind/valgrind.h	6632;"	d
PLAT_amd64_linux	deps/pmdk/src/common/valgrind/valgrind.h	116;"	d
PLAT_amd64_linux	deps/pmdk/src/common/valgrind/valgrind.h	143;"	d
PLAT_amd64_linux	deps/pmdk/src/common/valgrind/valgrind.h	6636;"	d
PLAT_amd64_solaris	deps/pmdk/src/common/valgrind/valgrind.h	126;"	d
PLAT_amd64_solaris	deps/pmdk/src/common/valgrind/valgrind.h	165;"	d
PLAT_amd64_solaris	deps/pmdk/src/common/valgrind/valgrind.h	6645;"	d
PLAT_amd64_win64	deps/pmdk/src/common/valgrind/valgrind.h	114;"	d
PLAT_amd64_win64	deps/pmdk/src/common/valgrind/valgrind.h	139;"	d
PLAT_amd64_win64	deps/pmdk/src/common/valgrind/valgrind.h	6634;"	d
PLAT_arm64_linux	deps/pmdk/src/common/valgrind/valgrind.h	121;"	d
PLAT_arm64_linux	deps/pmdk/src/common/valgrind/valgrind.h	155;"	d
PLAT_arm_linux	deps/pmdk/src/common/valgrind/valgrind.h	120;"	d
PLAT_arm_linux	deps/pmdk/src/common/valgrind/valgrind.h	153;"	d
PLAT_arm_linux	deps/pmdk/src/common/valgrind/valgrind.h	6640;"	d
PLAT_mips32_linux	deps/pmdk/src/common/valgrind/valgrind.h	123;"	d
PLAT_mips32_linux	deps/pmdk/src/common/valgrind/valgrind.h	161;"	d
PLAT_mips32_linux	deps/pmdk/src/common/valgrind/valgrind.h	6642;"	d
PLAT_mips64_linux	deps/pmdk/src/common/valgrind/valgrind.h	124;"	d
PLAT_mips64_linux	deps/pmdk/src/common/valgrind/valgrind.h	159;"	d
PLAT_mips64_linux	deps/pmdk/src/common/valgrind/valgrind.h	6643;"	d
PLAT_ppc32_linux	deps/pmdk/src/common/valgrind/valgrind.h	117;"	d
PLAT_ppc32_linux	deps/pmdk/src/common/valgrind/valgrind.h	145;"	d
PLAT_ppc32_linux	deps/pmdk/src/common/valgrind/valgrind.h	6637;"	d
PLAT_ppc64be_linux	deps/pmdk/src/common/valgrind/valgrind.h	118;"	d
PLAT_ppc64be_linux	deps/pmdk/src/common/valgrind/valgrind.h	148;"	d
PLAT_ppc64be_linux	deps/pmdk/src/common/valgrind/valgrind.h	6638;"	d
PLAT_ppc64le_linux	deps/pmdk/src/common/valgrind/valgrind.h	119;"	d
PLAT_ppc64le_linux	deps/pmdk/src/common/valgrind/valgrind.h	151;"	d
PLAT_ppc64le_linux	deps/pmdk/src/common/valgrind/valgrind.h	6639;"	d
PLAT_s390x_linux	deps/pmdk/src/common/valgrind/valgrind.h	122;"	d
PLAT_s390x_linux	deps/pmdk/src/common/valgrind/valgrind.h	157;"	d
PLAT_s390x_linux	deps/pmdk/src/common/valgrind/valgrind.h	6641;"	d
PLAT_x86_darwin	deps/pmdk/src/common/valgrind/valgrind.h	111;"	d
PLAT_x86_darwin	deps/pmdk/src/common/valgrind/valgrind.h	130;"	d
PLAT_x86_darwin	deps/pmdk/src/common/valgrind/valgrind.h	6631;"	d
PLAT_x86_linux	deps/pmdk/src/common/valgrind/valgrind.h	115;"	d
PLAT_x86_linux	deps/pmdk/src/common/valgrind/valgrind.h	141;"	d
PLAT_x86_linux	deps/pmdk/src/common/valgrind/valgrind.h	6635;"	d
PLAT_x86_solaris	deps/pmdk/src/common/valgrind/valgrind.h	125;"	d
PLAT_x86_solaris	deps/pmdk/src/common/valgrind/valgrind.h	163;"	d
PLAT_x86_solaris	deps/pmdk/src/common/valgrind/valgrind.h	6644;"	d
PLAT_x86_win32	deps/pmdk/src/common/valgrind/valgrind.h	113;"	d
PLAT_x86_win32	deps/pmdk/src/common/valgrind/valgrind.h	136;"	d
PLAT_x86_win32	deps/pmdk/src/common/valgrind/valgrind.h	6633;"	d
PLAYER_Y	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	62;"	d	file:
PLAYER_Y	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	79;"	d	file:
PLIST_FOREACH	deps/pmdk/src/test/obj_list/obj_list.c	81;"	d	file:
PLIST_FOREACH_REVERSE	deps/pmdk/src/test/obj_list/obj_list.c	94;"	d	file:
PLIST_OFF_TO_PTR	deps/pmdk/src/tools/pmempool/common.h	93;"	d
PMALLOC_ELEMENTS	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	250;"	d	file:
PMALLOC_EXTRA	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	230;"	d	file:
PMDK_BADBLOCK_H	deps/pmdk/src/common/os_badblock.h	38;"	d
PMDK_BADBLOCK_POOLSET_H	deps/pmdk/src/common/badblock.h	38;"	d
PMDK_CIRCLEQ_EMPTY	deps/pmdk/src/common/queue.h	586;"	d
PMDK_CIRCLEQ_ENTRY	deps/pmdk/src/common/queue.h	506;"	d
PMDK_CIRCLEQ_FIRST	deps/pmdk/src/common/queue.h	587;"	d
PMDK_CIRCLEQ_FOREACH	deps/pmdk/src/common/queue.h	573;"	d
PMDK_CIRCLEQ_FOREACH_REVERSE	deps/pmdk/src/common/queue.h	578;"	d
PMDK_CIRCLEQ_HEAD	deps/pmdk/src/common/queue.h	497;"	d
PMDK_CIRCLEQ_HEAD_INITIALIZER	deps/pmdk/src/common/queue.h	503;"	d
PMDK_CIRCLEQ_INIT	deps/pmdk/src/common/queue.h	515;"	d
PMDK_CIRCLEQ_INSERT_AFTER	deps/pmdk/src/common/queue.h	520;"	d
PMDK_CIRCLEQ_INSERT_BEFORE	deps/pmdk/src/common/queue.h	530;"	d
PMDK_CIRCLEQ_INSERT_HEAD	deps/pmdk/src/common/queue.h	540;"	d
PMDK_CIRCLEQ_INSERT_TAIL	deps/pmdk/src/common/queue.h	550;"	d
PMDK_CIRCLEQ_LAST	deps/pmdk/src/common/queue.h	588;"	d
PMDK_CIRCLEQ_LOOP_NEXT	deps/pmdk/src/common/queue.h	592;"	d
PMDK_CIRCLEQ_LOOP_PREV	deps/pmdk/src/common/queue.h	596;"	d
PMDK_CIRCLEQ_NEXT	deps/pmdk/src/common/queue.h	589;"	d
PMDK_CIRCLEQ_PREV	deps/pmdk/src/common/queue.h	590;"	d
PMDK_CIRCLEQ_REMOVE	deps/pmdk/src/common/queue.h	560;"	d
PMDK_CPU_H	deps/pmdk/src/libpmem/x86_64/cpu.h	34;"	d
PMDK_CTL_GLOBAL_H	deps/pmdk/src/common/ctl_global.h	38;"	d
PMDK_CTL_H	deps/pmdk/src/common/ctl.h	38;"	d
PMDK_DATA_BE	deps/pmdk/src/common/pool_hdr.h	112;"	d
PMDK_DATA_LE	deps/pmdk/src/common/pool_hdr.h	111;"	d
PMDK_DLSYM_H	deps/pmdk/src/common/dlsym.h	38;"	d
PMDK_ERRNO_FREEBSD_H	deps/pmdk/src/common/errno_freebsd.h	38;"	d
PMDK_EXTENT_H	deps/pmdk/src/common/extent.h	38;"	d
PMDK_FILE_H	deps/pmdk/src/common/file.h	38;"	d
PMDK_FS_H	deps/pmdk/src/common/fs.h	38;"	d
PMDK_HAS_AUTO_FLUSH_WIN_H	deps/pmdk/src/test/pmem_has_auto_flush_win/pmem_has_auto_flush_win.h	38;"	d
PMDK_LIST_EMPTY	deps/pmdk/src/common/queue.h	168;"	d
PMDK_LIST_ENTRY	deps/pmdk/src/common/queue.h	117;"	d
PMDK_LIST_FIRST	deps/pmdk/src/common/queue.h	169;"	d
PMDK_LIST_FOREACH	deps/pmdk/src/common/queue.h	160;"	d
PMDK_LIST_HEAD	deps/pmdk/src/common/queue.h	103;"	d
PMDK_LIST_HEAD_INITIALIZER	deps/pmdk/src/common/queue.h	108;"	d
PMDK_LIST_INIT	deps/pmdk/src/common/queue.h	126;"	d
PMDK_LIST_INSERT_AFTER	deps/pmdk/src/common/queue.h	130;"	d
PMDK_LIST_INSERT_BEFORE	deps/pmdk/src/common/queue.h	138;"	d
PMDK_LIST_INSERT_HEAD	deps/pmdk/src/common/queue.h	145;"	d
PMDK_LIST_NEXT	deps/pmdk/src/common/queue.h	170;"	d
PMDK_LIST_REMOVE	deps/pmdk/src/common/queue.h	152;"	d
PMDK_MACHINE	deps/pmdk/src/common/pool_hdr.c	48;"	d	file:
PMDK_MACHINE	deps/pmdk/src/common/pool_hdr.c	53;"	d	file:
PMDK_MACHINE	deps/pmdk/src/common/pool_hdr.c	57;"	d	file:
PMDK_MACHINE_AARCH64	deps/pmdk/src/common/pool_hdr.h	107;"	d
PMDK_MACHINE_CLASS	deps/pmdk/src/common/pool_hdr.c	49;"	d	file:
PMDK_MACHINE_CLASS	deps/pmdk/src/common/pool_hdr.c	54;"	d	file:
PMDK_MACHINE_CLASS	deps/pmdk/src/common/pool_hdr.c	58;"	d	file:
PMDK_MACHINE_CLASS_64	deps/pmdk/src/common/pool_hdr.h	103;"	d
PMDK_MACHINE_PPC64	deps/pmdk/src/common/pool_hdr.h	108;"	d
PMDK_MACHINE_X86_64	deps/pmdk/src/common/pool_hdr.h	106;"	d
PMDK_MMAP_H	deps/pmdk/src/common/mmap.h	38;"	d
PMDK_OS_AUTO_FLUSH_H	deps/pmdk/src/common/os_auto_flush.h	38;"	d
PMDK_OS_AUTO_FLUSH_WINDOWS_H	deps/pmdk/src/common/os_auto_flush_windows.h	34;"	d
PMDK_OS_DEEP_PERSIST_H	deps/pmdk/src/common/os_deep.h	38;"	d
PMDK_OS_DIMM_H	deps/pmdk/src/common/os_dimm.h	38;"	d
PMDK_OS_H	deps/pmdk/src/common/os.h	38;"	d
PMDK_OUT_H	deps/pmdk/src/common/out.h	38;"	d
PMDK_PAGE_SIZE_H	deps/pmdk/src/common/page_size.h	34;"	d
PMDK_POOL_HDR_H	deps/pmdk/src/common/pool_hdr.h	38;"	d
PMDK_SET_H	deps/pmdk/src/common/set.h	39;"	d
PMDK_SHUTDOWN_STATE_H	deps/pmdk/src/common/shutdown_state.h	38;"	d
PMDK_SIMPLEQ_EMPTY	deps/pmdk/src/common/queue.h	385;"	d
PMDK_SIMPLEQ_ENTRY	deps/pmdk/src/common/queue.h	328;"	d
PMDK_SIMPLEQ_FIRST	deps/pmdk/src/common/queue.h	386;"	d
PMDK_SIMPLEQ_FOREACH	deps/pmdk/src/common/queue.h	377;"	d
PMDK_SIMPLEQ_HEAD	deps/pmdk/src/common/queue.h	319;"	d
PMDK_SIMPLEQ_HEAD_INITIALIZER	deps/pmdk/src/common/queue.h	325;"	d
PMDK_SIMPLEQ_INIT	deps/pmdk/src/common/queue.h	336;"	d
PMDK_SIMPLEQ_INSERT_AFTER	deps/pmdk/src/common/queue.h	353;"	d
PMDK_SIMPLEQ_INSERT_HEAD	deps/pmdk/src/common/queue.h	341;"	d
PMDK_SIMPLEQ_INSERT_TAIL	deps/pmdk/src/common/queue.h	347;"	d
PMDK_SIMPLEQ_NEXT	deps/pmdk/src/common/queue.h	387;"	d
PMDK_SIMPLEQ_REMOVE	deps/pmdk/src/common/queue.h	364;"	d
PMDK_SIMPLEQ_REMOVE_HEAD	deps/pmdk/src/common/queue.h	359;"	d
PMDK_SLIST_EMPTY	deps/pmdk/src/common/queue.h	229;"	d
PMDK_SLIST_ENTRY	deps/pmdk/src/common/queue.h	184;"	d
PMDK_SLIST_FIRST	deps/pmdk/src/common/queue.h	230;"	d
PMDK_SLIST_FOREACH	deps/pmdk/src/common/queue.h	223;"	d
PMDK_SLIST_HEAD	deps/pmdk/src/common/queue.h	176;"	d
PMDK_SLIST_HEAD_INITIALIZER	deps/pmdk/src/common/queue.h	181;"	d
PMDK_SLIST_INIT	deps/pmdk/src/common/queue.h	192;"	d
PMDK_SLIST_INSERT_AFTER	deps/pmdk/src/common/queue.h	196;"	d
PMDK_SLIST_INSERT_HEAD	deps/pmdk/src/common/queue.h	201;"	d
PMDK_SLIST_NEXT	deps/pmdk/src/common/queue.h	231;"	d
PMDK_SLIST_REMOVE	deps/pmdk/src/common/queue.h	210;"	d
PMDK_SLIST_REMOVE_HEAD	deps/pmdk/src/common/queue.h	206;"	d
PMDK_SORTEDQ_EMPTY	deps/pmdk/src/common/queue.h	628;"	d
PMDK_SORTEDQ_ENTRY	deps/pmdk/src/common/queue.h	606;"	d
PMDK_SORTEDQ_FIRST	deps/pmdk/src/common/queue.h	629;"	d
PMDK_SORTEDQ_FOREACH	deps/pmdk/src/common/queue.h	621;"	d
PMDK_SORTEDQ_FOREACH_REVERSE	deps/pmdk/src/common/queue.h	622;"	d
PMDK_SORTEDQ_HEAD	deps/pmdk/src/common/queue.h	604;"	d
PMDK_SORTEDQ_HEAD_INITIALIZER	deps/pmdk/src/common/queue.h	605;"	d
PMDK_SORTEDQ_INIT	deps/pmdk/src/common/queue.h	607;"	d
PMDK_SORTEDQ_INSERT	deps/pmdk/src/common/queue.h	608;"	d
PMDK_SORTEDQ_LAST	deps/pmdk/src/common/queue.h	630;"	d
PMDK_SORTEDQ_NEXT	deps/pmdk/src/common/queue.h	631;"	d
PMDK_SORTEDQ_PREV	deps/pmdk/src/common/queue.h	632;"	d
PMDK_SORTEDQ_REMOVE	deps/pmdk/src/common/queue.h	620;"	d
PMDK_STAILQ_CONCAT	deps/pmdk/src/common/queue.h	300;"	d
PMDK_STAILQ_EMPTY	deps/pmdk/src/common/queue.h	311;"	d
PMDK_STAILQ_ENTRY	deps/pmdk/src/common/queue.h	246;"	d
PMDK_STAILQ_FIRST	deps/pmdk/src/common/queue.h	312;"	d
PMDK_STAILQ_FOREACH	deps/pmdk/src/common/queue.h	295;"	d
PMDK_STAILQ_HEAD	deps/pmdk/src/common/queue.h	237;"	d
PMDK_STAILQ_HEAD_INITIALIZER	deps/pmdk/src/common/queue.h	243;"	d
PMDK_STAILQ_INIT	deps/pmdk/src/common/queue.h	254;"	d
PMDK_STAILQ_INSERT_AFTER	deps/pmdk/src/common/queue.h	271;"	d
PMDK_STAILQ_INSERT_HEAD	deps/pmdk/src/common/queue.h	259;"	d
PMDK_STAILQ_INSERT_TAIL	deps/pmdk/src/common/queue.h	265;"	d
PMDK_STAILQ_NEXT	deps/pmdk/src/common/queue.h	313;"	d
PMDK_STAILQ_REMOVE	deps/pmdk/src/common/queue.h	282;"	d
PMDK_STAILQ_REMOVE_HEAD	deps/pmdk/src/common/queue.h	277;"	d
PMDK_SYS_UTIL_H	deps/pmdk/src/common/sys_util.h	38;"	d
PMDK_TAILQ_CONCAT	deps/pmdk/src/common/queue.h	472;"	d
PMDK_TAILQ_EMPTY	deps/pmdk/src/common/queue.h	484;"	d
PMDK_TAILQ_ENTRY	deps/pmdk/src/common/queue.h	408;"	d
PMDK_TAILQ_FIRST	deps/pmdk/src/common/queue.h	485;"	d
PMDK_TAILQ_FOREACH	deps/pmdk/src/common/queue.h	462;"	d
PMDK_TAILQ_FOREACH_REVERSE	deps/pmdk/src/common/queue.h	467;"	d
PMDK_TAILQ_HEAD	deps/pmdk/src/common/queue.h	398;"	d
PMDK_TAILQ_HEAD_INITIALIZER	deps/pmdk/src/common/queue.h	400;"	d
PMDK_TAILQ_INIT	deps/pmdk/src/common/queue.h	413;"	d
PMDK_TAILQ_INSERT_AFTER	deps/pmdk/src/common/queue.h	435;"	d
PMDK_TAILQ_INSERT_BEFORE	deps/pmdk/src/common/queue.h	445;"	d
PMDK_TAILQ_INSERT_HEAD	deps/pmdk/src/common/queue.h	418;"	d
PMDK_TAILQ_INSERT_TAIL	deps/pmdk/src/common/queue.h	428;"	d
PMDK_TAILQ_LAST	deps/pmdk/src/common/queue.h	488;"	d
PMDK_TAILQ_NEXT	deps/pmdk/src/common/queue.h	486;"	d
PMDK_TAILQ_PREV	deps/pmdk/src/common/queue.h	490;"	d
PMDK_TAILQ_REMOVE	deps/pmdk/src/common/queue.h	452;"	d
PMDK_UTF8_API	deps/pmdk/src/include/pmemcompat.h	45;"	d
PMDK_UTIL_H	deps/pmdk/src/common/util.h	39;"	d
PMDK_UTIL_PMEM_H	deps/pmdk/src/common/util_pmem.h	38;"	d
PMDK_UUID_H	deps/pmdk/src/common/uuid.h	38;"	d
PMDK_VALGRIND_INTERNAL_H	deps/pmdk/src/common/valgrind_internal.h	38;"	d
PMDK_VECQ_H	deps/pmdk/src/common/vecq.h	38;"	d
PMDK_VEC_H	deps/pmdk/src/common/vec.h	38;"	d
PMDK__CAST_AND_ASSIGN	deps/pmdk/src/common/queue.h	112;"	d
PMDK__CAST_AND_ASSIGN	deps/pmdk/src/common/queue.h	114;"	d
PMDK__TAILQ_ENTRY	deps/pmdk/src/common/queue.h	403;"	d
PMDK__TAILQ_HEAD	deps/pmdk/src/common/queue.h	393;"	d
PMEM2_ADDRESS_ANY	deps/pmdk/src/include/libpmem2.h	104;"	d
PMEM2_ADDRESS_FIXED_NOREPLACE	deps/pmdk/src/include/libpmem2.h	106;"	d
PMEM2_ADDRESS_FIXED_REPLACE	deps/pmdk/src/include/libpmem2.h	105;"	d
PMEM2_CONFIG	deps/pmdk/src/test/pmem2_config/TESTS.py	/^class PMEM2_CONFIG(t.BaseTest):$/;"	c
PMEM2_CONFIG_DELETE	deps/pmdk/src/test/unittest/ut_pmem2_config.h	49;"	d
PMEM2_CONFIG_H	deps/pmdk/src/libpmem2/config.h	37;"	d
PMEM2_CONFIG_NEW	deps/pmdk/src/test/unittest/ut_pmem2_config.h	41;"	d
PMEM2_CONFIG_SET_FD	deps/pmdk/src/test/unittest/ut_pmem2_config.h	45;"	d
PMEM2_E_INVALID_ARG	deps/pmdk/src/include/libpmem2.h	69;"	d
PMEM2_E_INVALID_HANDLE	deps/pmdk/src/include/libpmem2.h	70;"	d
PMEM2_E_NOSUPP	deps/pmdk/src/include/libpmem2.h	68;"	d
PMEM2_E_OK	deps/pmdk/src/include/libpmem2.h	66;"	d
PMEM2_E_UNKNOWN	deps/pmdk/src/include/libpmem2.h	67;"	d
PMEM2_F_MEM_NODRAIN	deps/pmdk/src/include/libpmem2.h	148;"	d
PMEM2_F_MEM_NOFLUSH	deps/pmdk/src/include/libpmem2.h	156;"	d
PMEM2_F_MEM_NONTEMPORAL	deps/pmdk/src/include/libpmem2.h	150;"	d
PMEM2_F_MEM_TEMPORAL	deps/pmdk/src/include/libpmem2.h	151;"	d
PMEM2_F_MEM_VALID_FLAGS	deps/pmdk/src/include/libpmem2.h	158;"	d
PMEM2_F_MEM_WB	deps/pmdk/src/include/libpmem2.h	154;"	d
PMEM2_F_MEM_WC	deps/pmdk/src/include/libpmem2.h	153;"	d
PMEM2_GRANULARITY_BYTE	deps/pmdk/src/include/libpmem2.h	/^	PMEM2_GRANULARITY_BYTE,$/;"	e	enum:pmem2_granularity
PMEM2_GRANULARITY_CACHE_LINE	deps/pmdk/src/include/libpmem2.h	/^	PMEM2_GRANULARITY_CACHE_LINE,$/;"	e	enum:pmem2_granularity
PMEM2_GRANULARITY_PAGE	deps/pmdk/src/include/libpmem2.h	/^	PMEM2_GRANULARITY_PAGE,$/;"	e	enum:pmem2_granularity
PMEM2_H	deps/pmdk/src/libpmem2/pmem2.h	37;"	d
PMEM2_INSTALL	deps/pmdk/Makefile	/^PMEM2_INSTALL ?= n$/;"	m
PMEM2_LOG_FILE_VAR	deps/pmdk/src/libpmem2/pmem2.h	50;"	d
PMEM2_LOG_LEVEL_VAR	deps/pmdk/src/libpmem2/pmem2.h	49;"	d
PMEM2_LOG_PREFIX	deps/pmdk/src/libpmem2/pmem2.h	48;"	d
PMEM2_MAJOR_VERSION	deps/pmdk/src/libpmem2/pmem2.h	45;"	d
PMEM2_MAP	deps/pmdk/src/test/pmem2_map/TESTS.py	/^class PMEM2_MAP(t.BaseTest):$/;"	c
PMEM2_MAP_H	deps/pmdk/src/libpmem2/map.h	37;"	d
PMEM2_MINOR_VERSION	deps/pmdk/src/libpmem2/pmem2.h	46;"	d
PMEM2_PRIVATE	deps/pmdk/src/include/libpmem2.h	91;"	d
PMEM2_PROT_EXEC	deps/pmdk/src/include/libpmem2.h	96;"	d
PMEM2_PROT_FROM_FD	deps/pmdk/src/include/libpmem2.h	95;"	d
PMEM2_PROT_READ	deps/pmdk/src/include/libpmem2.h	97;"	d
PMEM2_PROT_WRITE	deps/pmdk/src/include/libpmem2.h	98;"	d
PMEM2_SHARED	deps/pmdk/src/include/libpmem2.h	90;"	d
PMEM2_TESTS	deps/pmdk/src/test/Makefile	/^PMEM2_TESTS = \\$/;"	m
PMEM2_UTILS_H	deps/pmdk/src/libpmem2/pmem2_utils.h	38;"	d
PMEMBLK_LOG_FILE_VAR	deps/pmdk/src/libpmemblk/blk.h	56;"	d
PMEMBLK_LOG_LEVEL_VAR	deps/pmdk/src/libpmemblk/blk.h	55;"	d
PMEMBLK_LOG_PREFIX	deps/pmdk/src/libpmemblk/blk.h	54;"	d
PMEMBLK_MAJOR_VERSION	deps/pmdk/src/include/libpmemblk.h	88;"	d
PMEMBLK_MINOR_VERSION	deps/pmdk/src/include/libpmemblk.h	89;"	d
PMEMBLK_MIN_BLK	deps/pmdk/src/include/libpmemblk.h	124;"	d
PMEMBLK_MIN_PART	deps/pmdk/src/include/libpmemblk.h	122;"	d
PMEMBLK_MIN_POOL	deps/pmdk/src/include/libpmemblk.h	106;"	d
PMEMBLK_MIN_POOL	deps/pmdk/src/include/libpmemblk.h	109;"	d
PMEMBLK_MIN_POOL	deps/pmdk/src/include/libpmemblk.h	115;"	d
PMEMCHECK	deps/pmdk/src/test/unittest/valgrind.py	/^    PMEMCHECK = 2$/;"	v	class:_Tool
PMEMCHECK	deps/pmdk/src/test/unittest/valgrind.py	/^PMEMCHECK = _Tool.PMEMCHECK$/;"	v
PMEMCOMMON_H	deps/pmdk/src/common/pmemcommon.h	38;"	d
PMEMCOMPAT_H	deps/pmdk/src/include/pmemcompat.h	38;"	d
PMEMDETECT_ERROR	deps/pmdk/src/test/unittest/tools.py	/^PMEMDETECT_ERROR = 2$/;"	v
PMEMDETECT_FALSE	deps/pmdk/src/test/unittest/tools.py	/^PMEMDETECT_FALSE = 0$/;"	v
PMEMDETECT_TRUE	deps/pmdk/src/test/unittest/tools.py	/^PMEMDETECT_TRUE = 1$/;"	v
PMEMLOG_LOG_FILE_VAR	deps/pmdk/src/libpmemlog/log.h	59;"	d
PMEMLOG_LOG_LEVEL_VAR	deps/pmdk/src/libpmemlog/log.h	58;"	d
PMEMLOG_LOG_PREFIX	deps/pmdk/src/libpmemlog/log.h	57;"	d
PMEMLOG_MAJOR_VERSION	deps/pmdk/src/include/libpmemlog.h	91;"	d
PMEMLOG_MINOR_VERSION	deps/pmdk/src/include/libpmemlog.h	92;"	d
PMEMLOG_MIN_PART	deps/pmdk/src/include/libpmemlog.h	113;"	d
PMEMLOG_MIN_POOL	deps/pmdk/src/include/libpmemlog.h	107;"	d
PMEMOBJFS	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	96;"	d	file:
PMEMOBJFS_CTL	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	78;"	d	file:
PMEMOBJFS_CTL_TX_ABORT	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	81;"	d	file:
PMEMOBJFS_CTL_TX_BEGIN	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	79;"	d	file:
PMEMOBJFS_CTL_TX_COMMIT	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	80;"	d	file:
PMEMOBJFS_MIN_BLOCK_SIZE	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	191;"	d	file:
PMEMOBJFS_MKFS	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	71;"	d	file:
PMEMOBJFS_MOUNT	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	70;"	d	file:
PMEMOBJFS_TMP_TEMPLATE	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	76;"	d	file:
PMEMOBJFS_TRACK_BLOCKS	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	53;"	d	file:
PMEMOBJFS_TX_ABORT	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	74;"	d	file:
PMEMOBJFS_TX_BEGIN	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	72;"	d	file:
PMEMOBJFS_TX_COMMIT	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	73;"	d	file:
PMEMOBJ_API_END	deps/pmdk/src/common/valgrind_internal.h	265;"	d
PMEMOBJ_API_END	deps/pmdk/src/common/valgrind_internal.h	366;"	d
PMEMOBJ_API_START	deps/pmdk/src/common/valgrind_internal.h	262;"	d
PMEMOBJ_API_START	deps/pmdk/src/common/valgrind_internal.h	364;"	d
PMEMOBJ_DIRECT_NON_INLINE	deps/pmdk/src/test/obj_direct/obj_direct_non_inline.c	36;"	d	file:
PMEMOBJ_F_MEM_NODRAIN	deps/pmdk/src/include/libpmemobj/base.h	92;"	d
PMEMOBJ_F_MEM_NOFLUSH	deps/pmdk/src/include/libpmemobj/base.h	100;"	d
PMEMOBJ_F_MEM_NONTEMPORAL	deps/pmdk/src/include/libpmemobj/base.h	94;"	d
PMEMOBJ_F_MEM_TEMPORAL	deps/pmdk/src/include/libpmemobj/base.h	95;"	d
PMEMOBJ_F_MEM_WB	deps/pmdk/src/include/libpmemobj/base.h	98;"	d
PMEMOBJ_F_MEM_WC	deps/pmdk/src/include/libpmemobj/base.h	97;"	d
PMEMOBJ_F_RELAXED	deps/pmdk/src/include/libpmemobj/base.h	105;"	d
PMEMOBJ_LISTS_H	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	38;"	d
PMEMOBJ_LOG_FILE_VAR	deps/pmdk/src/libpmemobj/obj.h	61;"	d
PMEMOBJ_LOG_LEVEL_VAR	deps/pmdk/src/libpmemobj/obj.h	60;"	d
PMEMOBJ_LOG_PREFIX	deps/pmdk/src/libpmemobj/obj.h	59;"	d
PMEMOBJ_MAJOR_VERSION	deps/pmdk/src/include/libpmemobj/base.h	287;"	d
PMEMOBJ_MAX_ALLOC_SIZE	deps/pmdk/src/include/libpmemobj/base.h	69;"	d
PMEMOBJ_MAX_LAYOUT	deps/pmdk/src/include/libpmemobj/types.h	46;"	d
PMEMOBJ_MINOR_VERSION	deps/pmdk/src/include/libpmemobj/base.h	288;"	d
PMEMOBJ_MIN_PART	deps/pmdk/src/include/libpmemobj/pool_base.h	55;"	d
PMEMOBJ_MIN_POOL	deps/pmdk/src/include/libpmemobj/pool_base.h	49;"	d
PMEMOBJ_SYMBOLS	deps/pmdk/src/benchmarks/Makefile	/^PMEMOBJ_SYMBOLS=pmalloc pfree lane_hold lane_release$/;"	m
PMEMOID_ARRAY_TYPE	deps/pmdk/src/examples/libpmemobj/array/array.c	/^	PMEMOID_ARRAY_TYPE,$/;"	e	enum:array_types	file:
PMEMOIDcopy	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^PMEMOIDcopy(PMEMoid *dest, const PMEMoid *src, const int n)$/;"	f	file:
PMEMOIDmove	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^PMEMOIDmove(PMEMoid *dest, PMEMoid *src, const int n)$/;"	f	file:
PMEMPOOL_CHECK_ADVANCED	deps/pmdk/src/include/libpmempool.h	110;"	d
PMEMPOOL_CHECK_ALWAYS_YES	deps/pmdk/src/include/libpmempool.h	114;"	d
PMEMPOOL_CHECK_ANSWER_DEFAULT	deps/pmdk/src/libpmempool/check_util.c	/^	PMEMPOOL_CHECK_ANSWER_DEFAULT,$/;"	e	enum:check_answer	file:
PMEMPOOL_CHECK_ANSWER_EMPTY	deps/pmdk/src/libpmempool/check_util.c	/^	PMEMPOOL_CHECK_ANSWER_EMPTY,$/;"	e	enum:check_answer	file:
PMEMPOOL_CHECK_ANSWER_NO	deps/pmdk/src/libpmempool/check_util.c	/^	PMEMPOOL_CHECK_ANSWER_NO,$/;"	e	enum:check_answer	file:
PMEMPOOL_CHECK_ANSWER_YES	deps/pmdk/src/libpmempool/check_util.c	/^	PMEMPOOL_CHECK_ANSWER_YES,$/;"	e	enum:check_answer	file:
PMEMPOOL_CHECK_DRY_RUN	deps/pmdk/src/include/libpmempool.h	106;"	d
PMEMPOOL_CHECK_FORMAT_STR	deps/pmdk/src/include/libpmempool.h	122;"	d
PMEMPOOL_CHECK_MSG_TYPE_ERROR	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_CHECK_MSG_TYPE_ERROR,$/;"	e	enum:pmempool_check_msg_type
PMEMPOOL_CHECK_MSG_TYPE_INFO	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_CHECK_MSG_TYPE_INFO,$/;"	e	enum:pmempool_check_msg_type
PMEMPOOL_CHECK_MSG_TYPE_QUESTION	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_CHECK_MSG_TYPE_QUESTION,$/;"	e	enum:pmempool_check_msg_type
PMEMPOOL_CHECK_REPAIR	deps/pmdk/src/include/libpmempool.h	102;"	d
PMEMPOOL_CHECK_RESULT_CANNOT_REPAIR	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_CHECK_RESULT_CANNOT_REPAIR,$/;"	e	enum:pmempool_check_result
PMEMPOOL_CHECK_RESULT_CONSISTENT	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_CHECK_RESULT_CONSISTENT,$/;"	e	enum:pmempool_check_result
PMEMPOOL_CHECK_RESULT_ERROR	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_CHECK_RESULT_ERROR,$/;"	e	enum:pmempool_check_result
PMEMPOOL_CHECK_RESULT_NOT_CONSISTENT	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_CHECK_RESULT_NOT_CONSISTENT,$/;"	e	enum:pmempool_check_result
PMEMPOOL_CHECK_RESULT_REPAIRED	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_CHECK_RESULT_REPAIRED,$/;"	e	enum:pmempool_check_result
PMEMPOOL_CHECK_RESULT_SYNC_REQ	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_CHECK_RESULT_SYNC_REQ,$/;"	e	enum:pmempool_check_result
PMEMPOOL_CHECK_VERBOSE	deps/pmdk/src/include/libpmempool.h	118;"	d
PMEMPOOL_FEATURE_2_STR_MAP_SIZE	deps/pmdk/src/common/pool_hdr.c	310;"	d	file:
PMEMPOOL_FEAT_CHECK_BAD_BLOCKS	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_FEAT_CHECK_BAD_BLOCKS,$/;"	e	enum:pmempool_feature
PMEMPOOL_FEAT_CKSUM_2K	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_FEAT_CKSUM_2K,$/;"	e	enum:pmempool_feature
PMEMPOOL_FEAT_SHUTDOWN_STATE	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_FEAT_SHUTDOWN_STATE,$/;"	e	enum:pmempool_feature
PMEMPOOL_FEAT_SINGLEHDR	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_FEAT_SINGLEHDR,$/;"	e	enum:pmempool_feature
PMEMPOOL_H	deps/pmdk/src/libpmempool/pmempool.h	38;"	d
PMEMPOOL_LOG_FILE_VAR	deps/pmdk/src/libpmempool/pmempool.h	46;"	d
PMEMPOOL_LOG_LEVEL_VAR	deps/pmdk/src/libpmempool/pmempool.h	45;"	d
PMEMPOOL_LOG_PREFIX	deps/pmdk/src/libpmempool/pmempool.h	44;"	d
PMEMPOOL_MAJOR_VERSION	deps/pmdk/src/include/libpmempool.h	189;"	d
PMEMPOOL_MINOR_VERSION	deps/pmdk/src/include/libpmempool.h	190;"	d
PMEMPOOL_POOL_TYPE_BLK	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_POOL_TYPE_BLK,$/;"	e	enum:pmempool_pool_type
PMEMPOOL_POOL_TYPE_BTT	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_POOL_TYPE_BTT,$/;"	e	enum:pmempool_pool_type
PMEMPOOL_POOL_TYPE_DETECT	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_POOL_TYPE_DETECT,$/;"	e	enum:pmempool_pool_type
PMEMPOOL_POOL_TYPE_LOG	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_POOL_TYPE_LOG,$/;"	e	enum:pmempool_pool_type
PMEMPOOL_POOL_TYPE_OBJ	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_POOL_TYPE_OBJ,$/;"	e	enum:pmempool_pool_type
PMEMPOOL_POOL_TYPE_RESERVED1	deps/pmdk/src/include/libpmempool.h	/^	PMEMPOOL_POOL_TYPE_RESERVED1, \/* used to be cto *\/$/;"	e	enum:pmempool_pool_type
PMEMPOOL_RM_ALL_FLAGS	deps/pmdk/src/libpmempool/rm.c	46;"	d	file:
PMEMPOOL_RM_FORCE	deps/pmdk/src/include/libpmempool.h	157;"	d
PMEMPOOL_RM_POOLSET_LOCAL	deps/pmdk/src/include/libpmempool.h	158;"	d
PMEMPOOL_RM_POOLSET_REMOTE	deps/pmdk/src/include/libpmempool.h	159;"	d
PMEMPOOL_SYNC_DRY_RUN	deps/pmdk/src/include/libpmempool.h	172;"	d
PMEMPOOL_SYNC_FIX_BAD_BLOCKS	deps/pmdk/src/include/libpmempool.h	168;"	d
PMEMPOOL_TESTS	deps/pmdk/src/test/Makefile	/^PMEMPOOL_TESTS = \\$/;"	m
PMEMPOOL_TRANSFORM_DRY_RUN	deps/pmdk/src/include/libpmempool.h	181;"	d
PMEM_API_END	deps/pmdk/src/common/valgrind_internal.h	272;"	d
PMEM_API_END	deps/pmdk/src/common/valgrind_internal.h	370;"	d
PMEM_API_START	deps/pmdk/src/common/valgrind_internal.h	269;"	d
PMEM_API_START	deps/pmdk/src/common/valgrind_internal.h	368;"	d
PMEM_AVX_H	deps/pmdk/src/libpmem/x86_64/avx.h	34;"	d
PMEM_DAX_VALID_FLAGS	deps/pmdk/src/libpmem/pmem.c	405;"	d	file:
PMEM_DEV_DAX	deps/pmdk/src/common/mmap.h	/^	PMEM_DEV_DAX,	\/* device dax *\/$/;"	e	enum:pmem_map_type
PMEM_EXT	deps/pmdk/src/common/set.c	77;"	d	file:
PMEM_EXT_LEN	deps/pmdk/src/common/set.c	78;"	d	file:
PMEM_FILE_ALL_FLAGS	deps/pmdk/src/libpmem/pmem.c	402;"	d	file:
PMEM_FILE_ALL_FLAGS	deps/pmdk/src/test/pmem_map_file/pmem_map_file.c	56;"	d	file:
PMEM_FILE_ALL_FLAGS	deps/pmdk/src/test/pmem_map_file_win/pmem_map_file_win.c	56;"	d	file:
PMEM_FILE_CREATE	deps/pmdk/src/include/libpmem.h	76;"	d
PMEM_FILE_EXCL	deps/pmdk/src/include/libpmem.h	77;"	d
PMEM_FILE_MAX_LEN	deps/pmdk/src/common/set.c	81;"	d	file:
PMEM_FILE_NAME_MAX_LEN	deps/pmdk/src/common/set.c	80;"	d	file:
PMEM_FILE_PADDING	deps/pmdk/src/common/set.c	79;"	d	file:
PMEM_FILE_SPARSE	deps/pmdk/src/include/libpmem.h	78;"	d
PMEM_FILE_TMPFILE	deps/pmdk/src/include/libpmem.h	79;"	d
PMEM_F_MEM_MOV	deps/pmdk/src/libpmem/x86_64/init.c	117;"	d	file:
PMEM_F_MEM_MOV	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	73;"	d	file:
PMEM_F_MEM_MOVNT	deps/pmdk/src/libpmem/x86_64/init.c	116;"	d	file:
PMEM_F_MEM_MOVNT	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	72;"	d	file:
PMEM_F_MEM_NODRAIN	deps/pmdk/src/include/libpmem.h	110;"	d
PMEM_F_MEM_NOFLUSH	deps/pmdk/src/include/libpmem.h	118;"	d
PMEM_F_MEM_NONTEMPORAL	deps/pmdk/src/include/libpmem.h	112;"	d
PMEM_F_MEM_TEMPORAL	deps/pmdk/src/include/libpmem.h	113;"	d
PMEM_F_MEM_VALID_FLAGS	deps/pmdk/src/include/libpmem.h	120;"	d
PMEM_F_MEM_WB	deps/pmdk/src/include/libpmem.h	116;"	d
PMEM_F_MEM_WC	deps/pmdk/src/include/libpmem.h	115;"	d
PMEM_H	deps/pmdk/src/libpmem/pmem.h	37;"	d
PMEM_LEN	deps/pmdk/src/examples/libpmem/manpage.c	52;"	d	file:
PMEM_LEN	deps/pmdk/src/test/util_sds/util_sds.c	43;"	d	file:
PMEM_LOG_FILE_VAR	deps/pmdk/src/libpmem/pmem.h	53;"	d
PMEM_LOG_LEVEL_VAR	deps/pmdk/src/libpmem/pmem.h	52;"	d
PMEM_LOG_PREFIX	deps/pmdk/src/libpmem/pmem.h	51;"	d
PMEM_MAJOR_VERSION	deps/pmdk/src/include/libpmem.h	137;"	d
PMEM_MALLOC	deps/pmdk/src/common/fault_injection.h	/^enum pmem_allocation_type { PMEM_MALLOC, PMEM_REALLOC };$/;"	e	enum:pmem_allocation_type
PMEM_MAP_SYNC	deps/pmdk/src/common/mmap.h	/^	PMEM_MAP_SYNC,	\/* mapping with MAP_SYNC flag on dax fs *\/$/;"	e	enum:pmem_map_type
PMEM_MEMCPY_AVX512F_H	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_avx512f.h	34;"	d
PMEM_MEMCPY_AVX_H	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_avx.h	34;"	d
PMEM_MEMCPY_SSE2_H	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_sse2.h	34;"	d
PMEM_MEMSET_AVX512F_H	deps/pmdk/src/libpmem/x86_64/memset/memset_avx512f.h	34;"	d
PMEM_MEMSET_AVX_H	deps/pmdk/src/libpmem/x86_64/memset/memset_avx.h	34;"	d
PMEM_MEMSET_SSE2_H	deps/pmdk/src/libpmem/x86_64/memset/memset_sse2.h	34;"	d
PMEM_MINOR_VERSION	deps/pmdk/src/include/libpmem.h	138;"	d
PMEM_MIN_PART	deps/pmdk/src/include/libpmem.h	71;"	d
PMEM_OBJ_POOL_HEAD_SIZE	deps/pmdk/src/libpmemobj/obj.h	127;"	d
PMEM_OBJ_POOL_UNUSED2_SIZE	deps/pmdk/src/libpmemobj/obj.h	128;"	d
PMEM_PAGESIZE	deps/pmdk/src/common/page_size.h	38;"	d
PMEM_PAGESIZE	deps/pmdk/src/common/page_size.h	42;"	d
PMEM_POOL_TYPE_ALL	deps/pmdk/src/tools/pmempool/common.h	/^	PMEM_POOL_TYPE_ALL	= 0x0f,$/;"	e	enum:__anon103
PMEM_POOL_TYPE_BLK	deps/pmdk/src/tools/pmempool/common.h	/^	PMEM_POOL_TYPE_BLK	= 0x02,$/;"	e	enum:__anon103
PMEM_POOL_TYPE_BTT	deps/pmdk/src/tools/pmempool/common.h	/^	PMEM_POOL_TYPE_BTT	= 0x08,$/;"	e	enum:__anon103
PMEM_POOL_TYPE_LOG	deps/pmdk/src/tools/pmempool/common.h	/^	PMEM_POOL_TYPE_LOG	= 0x01,$/;"	e	enum:__anon103
PMEM_POOL_TYPE_OBJ	deps/pmdk/src/tools/pmempool/common.h	/^	PMEM_POOL_TYPE_OBJ	= 0x04,$/;"	e	enum:__anon103
PMEM_POOL_TYPE_UNKNOWN	deps/pmdk/src/tools/pmempool/common.h	/^	PMEM_POOL_TYPE_UNKNOWN	= 0x80,$/;"	e	enum:__anon103
PMEM_REALLOC	deps/pmdk/src/common/fault_injection.h	/^enum pmem_allocation_type { PMEM_MALLOC, PMEM_REALLOC };$/;"	e	enum:pmem_allocation_type
PMEM_TESTS	deps/pmdk/src/test/Makefile	/^PMEM_TESTS = \\$/;"	m
PMEM_volatile_mutex	deps/pmdk/src/benchmarks/obj_locks.cpp	/^} PMEM_volatile_mutex;$/;"	t	typeref:union:padded_volatile_pmemmutex	file:
PMEMblkpool	deps/pmdk/src/include/libpmemblk.h	/^typedef struct pmemblk PMEMblkpool;$/;"	t	typeref:struct:pmemblk
PMEMcond	deps/pmdk/src/include/libpmemobj/thread.h	/^} PMEMcond;$/;"	t	typeref:union:__anon52
PMEMcond_bsd_cond_p	deps/pmdk/src/libpmemobj/sync.h	102;"	d
PMEMcond_cond	deps/pmdk/src/libpmemobj/sync.h	101;"	d
PMEMcond_internal	deps/pmdk/src/libpmemobj/sync.h	/^} PMEMcond_internal;$/;"	t	typeref:union:padded_pmemcond
PMEMcond_next	deps/pmdk/src/libpmemobj/sync.h	103;"	d
PMEMlogpool	deps/pmdk/src/include/libpmemlog.h	/^typedef struct pmemlog PMEMlogpool;$/;"	t	typeref:struct:pmemlog
PMEMmutex	deps/pmdk/src/include/libpmemobj/thread.h	/^} PMEMmutex;$/;"	t	typeref:union:__anon50
PMEMmutex_bsd_mutex_p	deps/pmdk/src/libpmemobj/sync.h	68;"	d
PMEMmutex_internal	deps/pmdk/src/libpmemobj/sync.h	/^} PMEMmutex_internal;$/;"	t	typeref:union:padded_pmemmutex
PMEMmutex_lock	deps/pmdk/src/libpmemobj/sync.h	67;"	d
PMEMmutex_next	deps/pmdk/src/libpmemobj/sync.h	69;"	d
PMEMobjpool	deps/pmdk/src/include/libpmemobj/base.h	/^typedef struct pmemobjpool PMEMobjpool;$/;"	t	typeref:struct:pmemobjpool
PMEMoid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^} PMEMoid;$/;"	t	typeref:struct:pmemoid
PMEMoid	deps/pmdk/src/include/libpmemobj/base.h	/^} PMEMoid;$/;"	t	typeref:struct:pmemoid
PMEMpoolcheck	deps/pmdk/src/include/libpmempool.h	/^typedef struct pmempool_check_ctx PMEMpoolcheck;$/;"	t	typeref:struct:pmempool_check_ctx
PMEMrwlock	deps/pmdk/src/include/libpmemobj/thread.h	/^} PMEMrwlock;$/;"	t	typeref:union:__anon51
PMEMrwlock_bsd_rwlock_p	deps/pmdk/src/libpmemobj/sync.h	85;"	d
PMEMrwlock_internal	deps/pmdk/src/libpmemobj/sync.h	/^} PMEMrwlock_internal;$/;"	t	typeref:union:padded_pmemrwlock
PMEMrwlock_lock	deps/pmdk/src/libpmemobj/sync.h	84;"	d
PMEMrwlock_next	deps/pmdk/src/libpmemobj/sync.h	86;"	d
PMEMvlt	deps/pmdk/src/include/libpmemobj/base.h	178;"	d
PMINVADERS_POOL_SIZE	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	53;"	d	file:
PMREORDER_BIN	deps/pmdk/src/Makefile	/^PMREORDER_BIN = $(DESTDIR)$(bindir)$/;"	m
PMREORDER_DESTDIR	deps/pmdk/src/Makefile	/^PMREORDER_DESTDIR = $(DESTDIR)$(datarootdir)\/pmreorder$/;"	m
PMREORDER_FILES	deps/pmdk/src/Makefile	/^PMREORDER_FILES = $(PMREORDER_SRC)\/*.py$/;"	m
PMREORDER_ROOTDIR	deps/pmdk/src/Makefile	/^PMREORDER_ROOTDIR = $(datarootdir)\/pmreorder$/;"	m
PMREORDER_SRC	deps/pmdk/src/Makefile	/^PMREORDER_SRC = tools\/pmreorder$/;"	m
PMREORDER_TESTS	deps/pmdk/src/test/Makefile	/^PMREORDER_TESTS = \\$/;"	m
PM_HASHSET_POOL_SIZE	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	54;"	d	file:
PM_LAYOUT_NAME	src/server.h	56;"	d
PM_TYPE_EMB_SDS	src/server.h	75;"	d
PM_TYPE_KEY_VAL_PAIR_PM	src/server.h	71;"	d
PM_TYPE_SDS	src/server.h	73;"	d
POBJECT_TYPE_INFORMATION	deps/pmdk/src/test/unittest/ut.c	/^} OBJECT_TYPE_INFORMATION, *POBJECT_TYPE_INFORMATION;$/;"	t	typeref:struct:_OBJECT_TYPE_INFORMATION	file:
POBJ_ACTION_TYPE_HEAP	deps/pmdk/src/include/libpmemobj/action_base.h	/^	POBJ_ACTION_TYPE_HEAP,$/;"	e	enum:pobj_action_type
POBJ_ACTION_TYPE_MEM	deps/pmdk/src/include/libpmemobj/action_base.h	/^	POBJ_ACTION_TYPE_MEM,$/;"	e	enum:pobj_action_type
POBJ_ACTION_XRESERVE_VALID_FLAGS	deps/pmdk/src/include/libpmemobj/action_base.h	76;"	d
POBJ_ALLOC	deps/pmdk/src/include/libpmemobj/atomic.h	51;"	d
POBJ_ARENA_ID	deps/pmdk/src/include/libpmemobj/base.h	81;"	d
POBJ_CLASS_ID	deps/pmdk/src/include/libpmemobj/base.h	80;"	d
POBJ_FIRST	deps/pmdk/src/include/libpmemobj/iterator.h	71;"	d
POBJ_FIRST_TYPE_NUM	deps/pmdk/src/include/libpmemobj/iterator.h	/^POBJ_FIRST_TYPE_NUM(PMEMobjpool *pop, uint64_t type_num)$/;"	f
POBJ_FLAG_ASSUME_INITIALIZED	deps/pmdk/src/include/libpmemobj/base.h	77;"	d
POBJ_FLAG_NO_FLUSH	deps/pmdk/src/include/libpmemobj/base.h	75;"	d
POBJ_FLAG_NO_SNAPSHOT	deps/pmdk/src/include/libpmemobj/base.h	76;"	d
POBJ_FLAG_TX_NO_ABORT	deps/pmdk/src/include/libpmemobj/base.h	78;"	d
POBJ_FLAG_ZERO	deps/pmdk/src/include/libpmemobj/base.h	74;"	d
POBJ_FOREACH	deps/pmdk/src/include/libpmemobj/iterator.h	78;"	d
POBJ_FOREACH_SAFE	deps/pmdk/src/include/libpmemobj/iterator.h	86;"	d
POBJ_FOREACH_SAFE_TYPE	deps/pmdk/src/include/libpmemobj/iterator.h	103;"	d
POBJ_FOREACH_TYPE	deps/pmdk/src/include/libpmemobj/iterator.h	95;"	d
POBJ_FREE	deps/pmdk/src/include/libpmemobj/atomic.h	67;"	d
POBJ_HEADER_COMPACT	deps/pmdk/src/include/libpmemobj/ctl.h	/^	POBJ_HEADER_COMPACT,$/;"	e	enum:pobj_header_type
POBJ_HEADER_LEGACY	deps/pmdk/src/include/libpmemobj/ctl.h	/^	POBJ_HEADER_LEGACY,$/;"	e	enum:pobj_header_type
POBJ_HEADER_NONE	deps/pmdk/src/include/libpmemobj/ctl.h	/^	POBJ_HEADER_NONE,$/;"	e	enum:pobj_header_type
POBJ_LAYOUT_BEGIN	deps/pmdk/src/include/libpmemobj/types.h	168;"	d
POBJ_LAYOUT_END	deps/pmdk/src/include/libpmemobj/types.h	174;"	d
POBJ_LAYOUT_NAME	deps/pmdk/src/include/libpmemobj/types.h	198;"	d
POBJ_LAYOUT_ROOT	deps/pmdk/src/include/libpmemobj/types.h	192;"	d
POBJ_LAYOUT_TOID	deps/pmdk/src/include/libpmemobj/types.h	186;"	d
POBJ_LAYOUT_TYPES_NUM	deps/pmdk/src/include/libpmemobj/types.h	181;"	d
POBJ_LIST_DEST_AFTER	deps/pmdk/src/include/libpmemobj/lists_atomic.h	75;"	d
POBJ_LIST_DEST_BEFORE	deps/pmdk/src/include/libpmemobj/lists_atomic.h	74;"	d
POBJ_LIST_DEST_HEAD	deps/pmdk/src/include/libpmemobj/lists_atomic.h	72;"	d
POBJ_LIST_DEST_TAIL	deps/pmdk/src/include/libpmemobj/lists_atomic.h	73;"	d
POBJ_LIST_EMPTY	deps/pmdk/src/include/libpmemobj/lists_atomic.h	69;"	d
POBJ_LIST_ENTRY	deps/pmdk/src/include/libpmemobj/lists_atomic.h	51;"	d
POBJ_LIST_FIRST	deps/pmdk/src/include/libpmemobj/lists_atomic.h	63;"	d
POBJ_LIST_FOREACH	deps/pmdk/src/include/libpmemobj/lists_atomic.h	77;"	d
POBJ_LIST_FOREACH_REVERSE	deps/pmdk/src/include/libpmemobj/lists_atomic.h	86;"	d
POBJ_LIST_HEAD	deps/pmdk/src/include/libpmemobj/lists_atomic.h	57;"	d
POBJ_LIST_INSERT_AFTER	deps/pmdk/src/include/libpmemobj/lists_atomic.h	107;"	d
POBJ_LIST_INSERT_BEFORE	deps/pmdk/src/include/libpmemobj/lists_atomic.h	113;"	d
POBJ_LIST_INSERT_HEAD	deps/pmdk/src/include/libpmemobj/lists_atomic.h	95;"	d
POBJ_LIST_INSERT_NEW_AFTER	deps/pmdk/src/include/libpmemobj/lists_atomic.h	131;"	d
POBJ_LIST_INSERT_NEW_BEFORE	deps/pmdk/src/include/libpmemobj/lists_atomic.h	138;"	d
POBJ_LIST_INSERT_NEW_HEAD	deps/pmdk/src/include/libpmemobj/lists_atomic.h	119;"	d
POBJ_LIST_INSERT_NEW_TAIL	deps/pmdk/src/include/libpmemobj/lists_atomic.h	125;"	d
POBJ_LIST_INSERT_TAIL	deps/pmdk/src/include/libpmemobj/lists_atomic.h	101;"	d
POBJ_LIST_LAST	deps/pmdk/src/include/libpmemobj/lists_atomic.h	64;"	d
POBJ_LIST_MOVE_ELEMENT_AFTER	deps/pmdk/src/include/libpmemobj/lists_atomic.h	169;"	d
POBJ_LIST_MOVE_ELEMENT_BEFORE	deps/pmdk/src/include/libpmemobj/lists_atomic.h	179;"	d
POBJ_LIST_MOVE_ELEMENT_HEAD	deps/pmdk/src/include/libpmemobj/lists_atomic.h	155;"	d
POBJ_LIST_MOVE_ELEMENT_TAIL	deps/pmdk/src/include/libpmemobj/lists_atomic.h	162;"	d
POBJ_LIST_NEXT	deps/pmdk/src/include/libpmemobj/lists_atomic.h	70;"	d
POBJ_LIST_PREV	deps/pmdk/src/include/libpmemobj/lists_atomic.h	71;"	d
POBJ_LIST_REMOVE	deps/pmdk/src/include/libpmemobj/lists_atomic.h	145;"	d
POBJ_LIST_REMOVE_FREE	deps/pmdk/src/include/libpmemobj/lists_atomic.h	150;"	d
POBJ_MAX_ACTIONS	deps/pmdk/src/test/obj_action/obj_action.c	166;"	d	file:
POBJ_MAX_ACTION_TYPE	deps/pmdk/src/include/libpmemobj/action_base.h	/^	POBJ_MAX_ACTION_TYPE$/;"	e	enum:pobj_action_type
POBJ_NEW	deps/pmdk/src/include/libpmemobj/atomic.h	47;"	d
POBJ_NEXT	deps/pmdk/src/include/libpmemobj/iterator.h	73;"	d
POBJ_NEXT_TYPE_NUM	deps/pmdk/src/include/libpmemobj/iterator.h	/^POBJ_NEXT_TYPE_NUM(PMEMoid o)$/;"	f
POBJ_REALLOC	deps/pmdk/src/include/libpmemobj/atomic.h	61;"	d
POBJ_RESERVE_ALLOC	deps/pmdk/src/include/libpmemobj/action.h	49;"	d
POBJ_RESERVE_NEW	deps/pmdk/src/include/libpmemobj/action.h	46;"	d
POBJ_ROOT	deps/pmdk/src/include/libpmemobj/pool.h	43;"	d
POBJ_ROOT_TYPE_NUM	deps/pmdk/src/include/libpmemobj/types.h	94;"	d
POBJ_SLIST_EMPTY	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	94;"	d
POBJ_SLIST_ENTRY	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	86;"	d
POBJ_SLIST_FIRST	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	95;"	d
POBJ_SLIST_FOREACH	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	144;"	d
POBJ_SLIST_HEAD	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	81;"	d
POBJ_SLIST_INIT	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	101;"	d
POBJ_SLIST_INSERT_AFTER	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	113;"	d
POBJ_SLIST_INSERT_HEAD	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	106;"	d
POBJ_SLIST_NEXT	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	96;"	d
POBJ_SLIST_REMOVE	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	127;"	d
POBJ_SLIST_REMOVE_FREE	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	139;"	d
POBJ_SLIST_REMOVE_HEAD	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	122;"	d
POBJ_STATS_DISABLED	deps/pmdk/src/include/libpmemobj/ctl.h	/^	POBJ_STATS_DISABLED,$/;"	e	enum:pobj_stats_enabled
POBJ_STATS_ENABLED_BOTH	deps/pmdk/src/include/libpmemobj/ctl.h	/^	POBJ_STATS_ENABLED_BOTH,$/;"	e	enum:pobj_stats_enabled
POBJ_STATS_ENABLED_PERSISTENT	deps/pmdk/src/include/libpmemobj/ctl.h	/^	POBJ_STATS_ENABLED_PERSISTENT,$/;"	e	enum:pobj_stats_enabled
POBJ_STATS_ENABLED_TRANSIENT	deps/pmdk/src/include/libpmemobj/ctl.h	/^	POBJ_STATS_ENABLED_TRANSIENT,$/;"	e	enum:pobj_stats_enabled
POBJ_TAILQ_EMPTY	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	170;"	d
POBJ_TAILQ_ENTRY	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	152;"	d
POBJ_TAILQ_FIRST	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	167;"	d
POBJ_TAILQ_FOREACH	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	195;"	d
POBJ_TAILQ_FOREACH_REVERSE	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	200;"	d
POBJ_TAILQ_HEAD	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	158;"	d
POBJ_TAILQ_INIT	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	205;"	d
POBJ_TAILQ_INSERT_AFTER	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	252;"	d
POBJ_TAILQ_INSERT_BEFORE	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	269;"	d
POBJ_TAILQ_INSERT_HEAD	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	212;"	d
POBJ_TAILQ_INSERT_TAIL	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	232;"	d
POBJ_TAILQ_LAST	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	168;"	d
POBJ_TAILQ_MOVE_ELEMENT_HEAD	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	326;"	d
POBJ_TAILQ_MOVE_ELEMENT_TAIL	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	354;"	d
POBJ_TAILQ_NEXT	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	171;"	d
POBJ_TAILQ_PREV	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	172;"	d
POBJ_TAILQ_REMOVE	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	286;"	d
POBJ_TAILQ_REMOVE_FREE	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	317;"	d
POBJ_TAILQ_SWAP_HEAD_TAIL	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	188;"	d
POBJ_TX_XALLOC_VALID_FLAGS	deps/pmdk/src/include/libpmemobj/tx_base.h	124;"	d
POBJ_XADD_ASSUME_INITIALIZED	deps/pmdk/src/include/libpmemobj/tx_base.h	132;"	d
POBJ_XADD_NO_ABORT	deps/pmdk/src/include/libpmemobj/tx_base.h	133;"	d
POBJ_XADD_NO_FLUSH	deps/pmdk/src/include/libpmemobj/tx_base.h	130;"	d
POBJ_XADD_NO_SNAPSHOT	deps/pmdk/src/include/libpmemobj/tx_base.h	131;"	d
POBJ_XADD_VALID_FLAGS	deps/pmdk/src/include/libpmemobj/tx_base.h	134;"	d
POBJ_XALLOC_ARENA_MASK	deps/pmdk/src/include/libpmemobj/base.h	84;"	d
POBJ_XALLOC_CLASS_MASK	deps/pmdk/src/include/libpmemobj/base.h	83;"	d
POBJ_XALLOC_NO_ABORT	deps/pmdk/src/include/libpmemobj/base.h	87;"	d
POBJ_XALLOC_NO_FLUSH	deps/pmdk/src/include/libpmemobj/base.h	86;"	d
POBJ_XALLOC_VALID_FLAGS	deps/pmdk/src/include/libpmemobj/atomic_base.h	53;"	d
POBJ_XALLOC_ZERO	deps/pmdk/src/include/libpmemobj/base.h	85;"	d
POBJ_XFREE_NO_ABORT	deps/pmdk/src/include/libpmemobj/tx_base.h	142;"	d
POBJ_XFREE_VALID_FLAGS	deps/pmdk/src/include/libpmemobj/tx_base.h	143;"	d
POBJ_XLOCK_NO_ABORT	deps/pmdk/src/include/libpmemobj/tx_base.h	139;"	d
POBJ_XLOCK_VALID_FLAGS	deps/pmdk/src/include/libpmemobj/tx_base.h	140;"	d
POBJ_XLOG_APPEND_BUFFER_NO_ABORT	deps/pmdk/src/include/libpmemobj/tx_base.h	148;"	d
POBJ_XLOG_APPEND_BUFFER_VALID_FLAGS	deps/pmdk/src/include/libpmemobj/tx_base.h	149;"	d
POBJ_XPUBLISH_NO_ABORT	deps/pmdk/src/include/libpmemobj/tx_base.h	145;"	d
POBJ_XPUBLISH_VALID_FLAGS	deps/pmdk/src/include/libpmemobj/tx_base.h	146;"	d
POBJ_XRESERVE_ALLOC	deps/pmdk/src/include/libpmemobj/action.h	55;"	d
POBJ_XRESERVE_NEW	deps/pmdk/src/include/libpmemobj/action.h	52;"	d
POBJ_ZALLOC	deps/pmdk/src/include/libpmemobj/atomic.h	58;"	d
POBJ_ZNEW	deps/pmdk/src/include/libpmemobj/atomic.h	55;"	d
POBJ_ZREALLOC	deps/pmdk/src/include/libpmemobj/atomic.h	64;"	d
POCLI_CMD_DELIM	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	58;"	d	file:
POCLI_CMD_PROMPT	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	59;"	d	file:
POCLI_ENV_COMMENTS	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	54;"	d	file:
POCLI_ENV_ECHO_MODE	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	53;"	d	file:
POCLI_ENV_EMPTY_CMDS	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	55;"	d	file:
POCLI_ENV_EXIT_ON_ERROR	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	52;"	d	file:
POCLI_ENV_HELP	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	57;"	d	file:
POCLI_ENV_LONG_NAMES	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	56;"	d	file:
POCLI_ERR_ARGS	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	POCLI_ERR_ARGS,$/;"	e	enum:pocli_ret	file:
POCLI_ERR_CMD	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	POCLI_ERR_CMD,$/;"	e	enum:pocli_ret	file:
POCLI_ERR_MALLOC	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	POCLI_ERR_MALLOC,$/;"	e	enum:pocli_ret	file:
POCLI_ERR_PARS	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	POCLI_ERR_PARS,$/;"	e	enum:pocli_ret	file:
POCLI_INBUF_LEN	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	60;"	d	file:
POCLI_NCOMMANDS	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	2106;"	d	file:
POCLI_RET_OK	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	POCLI_RET_OK,$/;"	e	enum:pocli_ret	file:
POCLI_RET_QUIT	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	POCLI_RET_QUIT,$/;"	e	enum:pocli_ret	file:
POF	deps/lua/src/loadlib.c	155;"	d	file:
POF	deps/lua/src/loadlib.c	156;"	d	file:
POF	deps/lua/src/loadlib.c	34;"	d	file:
POOLSET_HDR_SIG	deps/pmdk/src/common/set.h	59;"	d
POOLSET_HDR_SIG_LEN	deps/pmdk/src/common/set.h	60;"	d
POOLSET_OPTION_SIG	deps/pmdk/src/common/set.h	65;"	d
POOLSET_OPTION_SIG_LEN	deps/pmdk/src/common/set.h	66;"	d
POOLSET_PATH	deps/pmdk/src/benchmarks/poolset_util.hpp	42;"	d
POOLSET_REPLICA_SIG	deps/pmdk/src/common/set.h	62;"	d
POOLSET_REPLICA_SIG_LEN	deps/pmdk/src/common/set.h	63;"	d
POOLSET_UTIL_HPP	deps/pmdk/src/benchmarks/poolset_util.hpp	38;"	d
POOL_ATTR	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^static const struct rpmem_pool_attr POOL_ATTR = POOL_ATTR_INIT;$/;"	v	typeref:struct:rpmem_pool_attr
POOL_ATTR_ALT	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	80;"	d	file:
POOL_ATTR_ALT	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	70;"	d
POOL_ATTR_ALT	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	84;"	d	file:
POOL_ATTR_ALT	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	63;"	d
POOL_ATTR_ALT_SINGLEHDR	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	94;"	d	file:
POOL_ATTR_CREATE	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	62;"	d	file:
POOL_ATTR_INIT	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	53;"	d	file:
POOL_ATTR_INIT	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	57;"	d
POOL_ATTR_INIT	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	72;"	d	file:
POOL_ATTR_INIT	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	51;"	d
POOL_ATTR_INIT_INDEX	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	121;"	d	file:
POOL_ATTR_INIT_SINGLEHDR	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	67;"	d	file:
POOL_ATTR_OPEN	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	63;"	d	file:
POOL_ATTR_SET_ATTR	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	64;"	d	file:
POOL_DESC	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	51;"	d
POOL_DESC	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	54;"	d	file:
POOL_DESC	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	79;"	d
POOL_DESC_SIZE	deps/pmdk/src/common/pool_hdr.h	158;"	d
POOL_DESC_SIZE	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	83;"	d
POOL_E_FEAT_SDS	deps/pmdk/src/common/pool_hdr.h	228;"	d
POOL_E_FEAT_SDS	deps/pmdk/src/common/pool_hdr.h	230;"	d
POOL_E_FEAT_SDS_FINAL	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	126;"	d	file:
POOL_E_FEAT_SDS_FINAL	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	128;"	d	file:
POOL_E_FEAT_SDS_FINAL	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	135;"	d	file:
POOL_FEAT_CHECK_BAD_BLOCKS	deps/pmdk/src/common/pool_hdr.h	206;"	d
POOL_FEAT_CKSUM_2K	deps/pmdk/src/common/pool_hdr.h	218;"	d
POOL_FEAT_CKSUM_2K_FINAL	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	120;"	d	file:
POOL_FEAT_COMPAT_ALL	deps/pmdk/src/common/pool_hdr.h	208;"	d
POOL_FEAT_COMPAT_DEFAULT	deps/pmdk/src/common/pool_hdr.h	252;"	d
POOL_FEAT_COMPAT_DEFAULT	deps/pmdk/src/common/pool_hdr.h	255;"	d
POOL_FEAT_COMPAT_VALID	deps/pmdk/src/common/pool_hdr.h	233;"	d
POOL_FEAT_INCOMPAT_ALL	deps/pmdk/src/common/pool_hdr.h	221;"	d
POOL_FEAT_INCOMPAT_DEFAULT	deps/pmdk/src/common/pool_hdr.h	240;"	d
POOL_FEAT_INCOMPAT_DEFAULT	deps/pmdk/src/common/pool_hdr.h	247;"	d
POOL_FEAT_INCOMPAT_DEFAULT_V1	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	138;"	d	file:
POOL_FEAT_INCOMPAT_VALID	deps/pmdk/src/common/pool_hdr.h	236;"	d
POOL_FEAT_SDS	deps/pmdk/src/common/pool_hdr.h	219;"	d
POOL_FEAT_SDS_FINAL	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	121;"	d	file:
POOL_FEAT_SINGLEHDR	deps/pmdk/src/common/pool_hdr.h	217;"	d
POOL_FEAT_SINGLEHDR_FINAL	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	119;"	d	file:
POOL_FEAT_VALID	deps/pmdk/src/common/pool_hdr.h	262;"	d
POOL_FEAT_ZERO	deps/pmdk/src/common/pool_hdr.h	198;"	d
POOL_H	deps/pmdk/src/libpmempool/pool.h	38;"	d
POOL_HDR_2K_CHECKPOINT	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	48;"	d	file:
POOL_HDR_ALIGN_PAD	deps/pmdk/src/common/pool_hdr.h	132;"	d
POOL_HDR_ARCH_LEN	deps/pmdk/src/common/pool_hdr.h	100;"	d
POOL_HDR_CSUM_2K_END_OFF	deps/pmdk/src/common/pool_hdr.h	269;"	d
POOL_HDR_CSUM_4K_END_OFF	deps/pmdk/src/common/pool_hdr.h	270;"	d
POOL_HDR_CSUM_END_OFF	deps/pmdk/src/common/pool_hdr.h	276;"	d
POOL_HDR_DESC_SIZE	deps/pmdk/src/tools/pmempool/common.h	104;"	d
POOL_HDR_SIG_LEN	deps/pmdk/src/common/pool_hdr.h	129;"	d
POOL_HDR_SIG_LEN_V1	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	45;"	d	file:
POOL_HDR_SIZE	deps/pmdk/src/benchmarks/log.cpp	54;"	d	file:
POOL_HDR_SIZE	deps/pmdk/src/common/pool_hdr.h	156;"	d
POOL_HDR_UNUSED2_LEN_V1	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	47;"	d	file:
POOL_HDR_UNUSED2_SIZE	deps/pmdk/src/common/pool_hdr.h	131;"	d
POOL_HDR_UNUSED_LEN_V1	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	46;"	d	file:
POOL_HDR_UNUSED_SIZE	deps/pmdk/src/common/pool_hdr.h	130;"	d
POOL_HDR_UUID_GEN_FILE	deps/pmdk/src/common/uuid.h	62;"	d
POOL_HDR_UUID_LEN	deps/pmdk/src/common/uuid.h	60;"	d
POOL_HDR_UUID_STR_LEN	deps/pmdk/src/common/uuid.h	61;"	d
POOL_LOCAL	deps/pmdk/src/common/set.h	80;"	d
POOL_MIN_SIZE	deps/pmdk/src/test/unittest/poolset.py	/^POOL_MIN_SIZE = 8 * MiB$/;"	v
POOL_MODE	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	52;"	d	file:
POOL_OPEN_CHECK_BAD_BLOCKS	deps/pmdk/src/common/set.h	90;"	d
POOL_OPEN_COW	deps/pmdk/src/common/set.h	87;"	d
POOL_OPEN_IGNORE_BAD_BLOCKS	deps/pmdk/src/common/set.h	89;"	d
POOL_OPEN_IGNORE_SDS	deps/pmdk/src/common/set.h	88;"	d
POOL_PART_SIZE	deps/pmdk/src/benchmarks/poolset_util.cpp	42;"	d	file:
POOL_REMOTE	deps/pmdk/src/common/set.h	81;"	d
POOL_SIGNATURE	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	47;"	d	file:
POOL_SIGNATURE	deps/pmdk/src/examples/librpmem/hello.c	45;"	d	file:
POOL_SIGNATURE	deps/pmdk/src/examples/librpmem/manpage.c	44;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/libpmemblk/manpage.c	48;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/libpmemlog/manpage.c	48;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/libpmemobj/manpage.c	49;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	62;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	64;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	62;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	63;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	64;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	67;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/librpmem/basic.c	45;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	58;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/librpmem/hello.c	63;"	d	file:
POOL_SIZE	deps/pmdk/src/examples/librpmem/manpage.c	45;"	d	file:
POOL_SIZE	deps/pmdk/src/test/rpmem_addr_ext/rpmem_addr_ext.c	48;"	d	file:
POOL_SIZE	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	63;"	d	file:
POOL_SIZE	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	47;"	d
POOL_SIZE	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	50;"	d	file:
POOL_SIZE	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	75;"	d
POOL_STATE_CLOSED	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	69;"	d	file:
POOL_STATE_CREATED	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	67;"	d	file:
POOL_STATE_INITIAL	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	66;"	d	file:
POOL_STATE_OPENED	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	68;"	d	file:
POOL_STATE_REMOVED	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	70;"	d	file:
POOL_TYPE	deps/pmdk/src/test/unittest/ut.c	/^} POOL_TYPE, *PPOOL_TYPE;$/;"	t	typeref:enum:_POOL_TYPE	file:
POOL_TYPE_ANY	deps/pmdk/src/libpmempool/pool.h	/^	POOL_TYPE_ANY		= POOL_TYPE_UNKNOWN | POOL_TYPE_LOG |$/;"	e	enum:pool_type
POOL_TYPE_BLK	deps/pmdk/src/libpmempool/pool.h	/^	POOL_TYPE_BLK		= (1 << 2),$/;"	e	enum:pool_type
POOL_TYPE_BTT	deps/pmdk/src/libpmempool/pool.h	/^	POOL_TYPE_BTT		= (1 << 4),$/;"	e	enum:pool_type
POOL_TYPE_LOG	deps/pmdk/src/libpmempool/pool.h	/^	POOL_TYPE_LOG		= (1 << 1),$/;"	e	enum:pool_type
POOL_TYPE_OBJ	deps/pmdk/src/libpmempool/pool.h	/^	POOL_TYPE_OBJ		= (1 << 3),$/;"	e	enum:pool_type
POOL_TYPE_UNKNOWN	deps/pmdk/src/libpmempool/pool.h	/^	POOL_TYPE_UNKNOWN	= (1 << 0),$/;"	e	enum:pool_type
PORT	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	54;"	d
PORT	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	57;"	d	file:
PORT	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	47;"	d
POS1	deps/jemalloc/test/include/test/SFMT-params11213.h	39;"	d
POS1	deps/jemalloc/test/include/test/SFMT-params1279.h	39;"	d
POS1	deps/jemalloc/test/include/test/SFMT-params132049.h	39;"	d
POS1	deps/jemalloc/test/include/test/SFMT-params19937.h	39;"	d
POS1	deps/jemalloc/test/include/test/SFMT-params216091.h	39;"	d
POS1	deps/jemalloc/test/include/test/SFMT-params2281.h	39;"	d
POS1	deps/jemalloc/test/include/test/SFMT-params4253.h	39;"	d
POS1	deps/jemalloc/test/include/test/SFMT-params44497.h	39;"	d
POS1	deps/jemalloc/test/include/test/SFMT-params607.h	39;"	d
POS1	deps/jemalloc/test/include/test/SFMT-params86243.h	39;"	d
POSITION_MODE_HEAD	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	POSITION_MODE_HEAD,$/;"	e	enum:position_mode	file:
POSITION_MODE_MIDDLE	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	POSITION_MODE_MIDDLE,$/;"	e	enum:position_mode	file:
POSITION_MODE_RAND	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	POSITION_MODE_RAND,$/;"	e	enum:position_mode	file:
POSITION_MODE_TAIL	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	POSITION_MODE_TAIL,$/;"	e	enum:position_mode	file:
POSITION_MODE_UNKNOWN	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	POSITION_MODE_UNKNOWN,$/;"	e	enum:position_mode	file:
POSIX_FALLOCATE	deps/pmdk/src/test/unittest/unittest.h	485;"	d
POSSIBLE_TARGETS	deps/pmdk/src/Makefile	/^POSSIBLE_TARGETS = $(TARGETS) common librpmem rpmem_common test\\$/;"	m
POS_A	deps/lua/src/lopcodes.h	45;"	d
POS_B	deps/lua/src/lopcodes.h	47;"	d
POS_Bx	deps/lua/src/lopcodes.h	48;"	d
POS_C	deps/lua/src/lopcodes.h	46;"	d
POS_OP	deps/lua/src/lopcodes.h	44;"	d
PPOOL_TYPE	deps/pmdk/src/test/unittest/ut.c	/^} POOL_TYPE, *PPOOL_TYPE;$/;"	t	typeref:enum:_POOL_TYPE	file:
PQVM	deps/pmdk/src/libpmem/pmem_windows.c	/^typedef BOOL (WINAPI *PQVM)($/;"	t	file:
PREALIAS	deps/jemalloc/src/jemalloc.c	2085;"	d	file:
PREALIAS	deps/jemalloc/src/jemalloc.c	2094;"	d	file:
PREFIX	deps/hiredis/Makefile	/^PREFIX?=\/usr\/local$/;"	m
PREFIX	deps/pmdk/src/test/rpmemd_log/rpmemd_log_test.c	44;"	d	file:
PREFIX	src/Makefile	/^PREFIX?=\/usr\/local$/;"	m
PREFIX_MAX_SIZE	deps/pmdk/src/libpmempool/check_util.h	65;"	d
PREFIX_SIZE	src/zmalloc.c	48;"	d	file:
PREFIX_SIZE	src/zmalloc.c	51;"	d	file:
PREFIX_SIZE	src/zmalloc.c	53;"	d	file:
PREV_OFF	deps/pmdk/src/libpmemobj/list.c	46;"	d	file:
PRINT_BAD_BLOCKS_MAX	deps/pmdk/src/tools/pmempool/info.h	/^	PRINT_BAD_BLOCKS_MAX$/;"	e	enum:print_bb_e
PRINT_BAD_BLOCKS_NO	deps/pmdk/src/tools/pmempool/info.h	/^	PRINT_BAD_BLOCKS_NO,$/;"	e	enum:print_bb_e
PRINT_BAD_BLOCKS_NOT_SET	deps/pmdk/src/tools/pmempool/info.h	/^	PRINT_BAD_BLOCKS_NOT_SET,$/;"	e	enum:print_bb_e
PRINT_BAD_BLOCKS_YES	deps/pmdk/src/tools/pmempool/info.h	/^	PRINT_BAD_BLOCKS_YES,$/;"	e	enum:print_bb_e
PRINT_RES	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	46;"	d	file:
PRNG_A_32	deps/jemalloc/include/jemalloc/internal/prng.h	23;"	d
PRNG_A_64	deps/jemalloc/include/jemalloc/internal/prng.h	26;"	d
PRNG_C_32	deps/jemalloc/include/jemalloc/internal/prng.h	24;"	d
PRNG_C_64	deps/jemalloc/include/jemalloc/internal/prng.h	27;"	d
PROCESS	deps/pmdk/src/test/tools/pmemspoil/spoil.c	125;"	d	file:
PROCESS_BEGIN	deps/pmdk/src/test/tools/pmemspoil/spoil.c	93;"	d	file:
PROCESS_END	deps/pmdk/src/test/tools/pmemspoil/spoil.c	104;"	d	file:
PROCESS_FIELD	deps/pmdk/src/test/tools/pmemspoil/spoil.c	140;"	d	file:
PROCESS_FIELD_ARRAY	deps/pmdk/src/test/tools/pmemspoil/spoil.c	181;"	d	file:
PROCESS_FIELD_LE	deps/pmdk/src/test/tools/pmemspoil/spoil.c	153;"	d	file:
PROCESS_FUNC	deps/pmdk/src/test/tools/pmemspoil/spoil.c	166;"	d	file:
PROCESS_INDEX	deps/pmdk/src/test/tools/pmemspoil/spoil.c	102;"	d	file:
PROCESS_RET	deps/pmdk/src/test/tools/pmemspoil/spoil.c	98;"	d	file:
PROCESS_STATE_ERROR	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	PROCESS_STATE_ERROR,$/;"	e	enum:process_state	file:
PROCESS_STATE_ERROR_MSG	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	PROCESS_STATE_ERROR_MSG,$/;"	e	enum:process_state	file:
PROCESS_STATE_FIELD	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	PROCESS_STATE_FIELD,$/;"	e	enum:process_state	file:
PROCESS_STATE_FOUND	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	PROCESS_STATE_FOUND,$/;"	e	enum:process_state	file:
PROCESS_STATE_FUNC	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	PROCESS_STATE_FUNC,$/;"	e	enum:process_state	file:
PROCESS_STATE_NOT_FOUND	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	PROCESS_STATE_NOT_FOUND,$/;"	e	enum:process_state	file:
PROCMAXLEN	deps/pmdk/src/common/mmap_posix.c	44;"	d	file:
PROCNAMELEN	deps/pmdk/src/test/unittest/ut_backtrace.c	49;"	d	file:
PROF_BT_MAX	deps/jemalloc/include/jemalloc/internal/prof.h	24;"	d
PROF_CKH_MINITEMS	deps/jemalloc/include/jemalloc/internal/prof.h	27;"	d
PROF_DUMP_BUFSIZE	deps/jemalloc/include/jemalloc/internal/prof.h	30;"	d
PROF_NCTX_LOCKS	deps/jemalloc/include/jemalloc/internal/prof.h	39;"	d
PROF_NTDATA_LOCKS	deps/jemalloc/include/jemalloc/internal/prof.h	45;"	d
PROF_PREFIX_DEFAULT	deps/jemalloc/include/jemalloc/internal/prof.h	12;"	d
PROF_PREFIX_DEFAULT	deps/jemalloc/include/jemalloc/internal/prof.h	14;"	d
PROF_PRINTF_BUFSIZE	deps/jemalloc/include/jemalloc/internal/prof.h	33;"	d
PROF_TDATA_STATE_MAX	deps/jemalloc/include/jemalloc/internal/prof.h	53;"	d
PROF_TDATA_STATE_PURGATORY	deps/jemalloc/include/jemalloc/internal/prof.h	52;"	d
PROF_TDATA_STATE_REINCARNATED	deps/jemalloc/include/jemalloc/internal/prof.h	51;"	d
PROGNAME	deps/lua/src/luac.c	26;"	d	file:
PROGS	deps/pmdk/src/examples/libpmem/Makefile	/^PROGS = manpage simple_copy full_copy$/;"	m
PROGS	deps/pmdk/src/examples/libpmemblk/Makefile	/^PROGS = manpage$/;"	m
PROGS	deps/pmdk/src/examples/libpmemblk/assetdb/Makefile	/^PROGS = asset_load asset_list asset_checkout asset_checkin$/;"	m
PROGS	deps/pmdk/src/examples/libpmemlog/Makefile	/^PROGS = manpage$/;"	m
PROGS	deps/pmdk/src/examples/libpmemlog/logfile/Makefile	/^PROGS = addlog printlog$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/Makefile	/^PROGS = manpage btree pi lists setjmp$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/array/Makefile	/^PROGS = array$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/libart/Makefile	/^PROGS = arttree examine_arttree$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/linkedlist/Makefile	/^PROGS = fifo$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/map/Makefile	/^PROGS = mapcli data_store$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/pmemblk/Makefile	/^PROGS = obj_pmemblk$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/pmemlog/Makefile	/^PROGS = obj_pmemlog obj_pmemlog_macros obj_pmemlog_minimal obj_pmemlog_simple$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/pmemobjfs/Makefile	/^PROGS = pmemobjfs$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/pminvaders/Makefile	/^PROGS = pminvaders pminvaders2$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/queue/Makefile	/^PROGS = queue$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/slab_allocator/Makefile	/^PROGS = main$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/string_store/Makefile	/^PROGS = writer reader$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/string_store_tx/Makefile	/^PROGS = writer reader$/;"	m
PROGS	deps/pmdk/src/examples/libpmemobj/string_store_tx_type/Makefile	/^PROGS = writer reader$/;"	m
PROGS	deps/pmdk/src/examples/libpmempool/Makefile	/^PROGS = manpage$/;"	m
PROGS	deps/pmdk/src/examples/librpmem/Makefile	/^PROGS = basic hello manpage$/;"	m
PROGS	deps/pmdk/src/examples/librpmem/fibonacci/Makefile	/^PROGS = fibonacci$/;"	m
PROGS	deps/pmdk/src/examples/pmreorder/Makefile	/^PROGS = pmreorder_list$/;"	m
PROPAGATE_AOF	src/server.h	457;"	d
PROPAGATE_NONE	src/server.h	456;"	d
PROPAGATE_REPL	src/server.h	458;"	d
PROTO_INLINE_MAX_SIZE	src/server.h	199;"	d
PROTO_IOBUF_LEN	src/server.h	197;"	d
PROTO_MAX_QUERYBUF_LEN	src/server.h	196;"	d
PROTO_MBULK_BIG_ARG	src/server.h	200;"	d
PROTO_REPLY_CHUNK_BYTES	src/server.h	198;"	d
PROTO_REQ_INLINE	src/server.h	322;"	d
PROTO_REQ_MULTIBULK	src/server.h	323;"	d
PROTO_SHARED_SELECT_CMDS	src/server.h	122;"	d
PROT_ALL	deps/pmdk/src/test/mmap/mmap.c	687;"	d	file:
PROT_ALL	deps/pmdk/src/windows/win_mmap.c	1006;"	d	file:
PROT_ALL	deps/pmdk/src/windows/win_mmap.c	248;"	d	file:
PROT_EXEC	deps/pmdk/src/windows/include/sys/mman.h	47;"	d
PROT_NONE	deps/pmdk/src/windows/include/sys/mman.h	44;"	d
PROT_READ	deps/pmdk/src/windows/include/sys/mman.h	45;"	d
PROT_WRITE	deps/pmdk/src/windows/include/sys/mman.h	46;"	d
PROVIDER	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	50;"	d
PROVIDER	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	53;"	d	file:
PROVIDER	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	78;"	d
PSYNC_CONTINUE	src/replication.c	1277;"	d	file:
PSYNC_FULLRESYNC	src/replication.c	1278;"	d	file:
PSYNC_NOT_SUPPORTED	src/replication.c	1279;"	d	file:
PSYNC_WAIT_REPLY	src/replication.c	1276;"	d	file:
PSYNC_WRITE_ERROR	src/replication.c	1275;"	d	file:
PSYSTEM_HANDLE_INFORMATION_EX	deps/pmdk/src/test/unittest/ut.c	/^} SYSTEM_HANDLE_INFORMATION_EX, *PSYSTEM_HANDLE_INFORMATION_EX;$/;"	t	typeref:struct:_SYSTEM_HANDLE_INFORMATION_EX	file:
PSYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	deps/pmdk/src/test/unittest/ut.c	/^} SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX, *PSYSTEM_HANDLE_TABLE_ENTRY_INFO_EX;$/;"	t	typeref:struct:_SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	file:
PSZ_no	deps/jemalloc/src/jemalloc.c	101;"	d	file:
PSZ_no	deps/jemalloc/src/jemalloc.c	96;"	d	file:
PSZ_yes	deps/jemalloc/src/jemalloc.c	100;"	d	file:
PSZ_yes	deps/jemalloc/src/jemalloc.c	94;"	d	file:
PT	src/Makefile	/^	echo OPT=$(OPT) >> .make-settings$/;"	m
PTEST_LIST_NODE	deps/pmdk/src/test/win_lists/win_lists.c	/^} *PTEST_LIST_NODE;$/;"	t	typeref:struct:TEST_LIST_NODE	file:
PTEST_SORTEDQ_NODE	deps/pmdk/src/test/win_lists/win_lists.c	/^} TEST_SORTEDQ_NODE, *PTEST_SORTEDQ_NODE;$/;"	t	typeref:struct:TEST_SORTEDQ_NODE	file:
PTRDIFF_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	193;"	d
PTRDIFF_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	196;"	d
PTRDIFF_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	192;"	d
PTRDIFF_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	195;"	d
PTR_CEILING	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	305;"	d
PTR_MASK	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	302;"	d
PTR_TO_ALLOC_HDR	deps/pmdk/src/tools/pmempool/common.h	106;"	d
PTR_TO_OFF	deps/pmdk/src/tools/pmempool/info_obj.c	57;"	d	file:
PURGE_DEFAULT	deps/jemalloc/include/jemalloc/internal/arena.h	32;"	d
PagedPool	deps/pmdk/src/test/unittest/ut.c	/^	PagedPool,$/;"	e	enum:_POOL_TYPE	file:
PagedPoolCacheAligned	deps/pmdk/src/test/unittest/ut.c	/^	PagedPoolCacheAligned,$/;"	e	enum:_POOL_TYPE	file:
PagedPoolUsage	deps/pmdk/src/test/unittest/ut.c	/^	ULONG PagedPoolUsage;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
Pagesize	deps/pmdk/src/common/util.c	/^unsigned long long Pagesize;$/;"	v
Path	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	/^static char *Path;$/;"	v	file:
Pc_capabilities	deps/pmdk/src/test/pmem_has_auto_flush_win/pmem_has_auto_flush_win.c	/^size_t Pc_capabilities = 3;$/;"	v
Pc_type	deps/pmdk/src/test/pmem_has_auto_flush_win/pmem_has_auto_flush_win.c	/^size_t Pc_type = 0;$/;"	v
Pfunc	deps/lua/src/ldo.h	/^typedef void (*Pfunc) (lua_State *L, void *ud);$/;"	t
PiB	deps/pmdk/src/test/unittest/utils.py	/^PiB = 2 ** 50$/;"	v
Pip	deps/pmdk/src/tools/pmempool/info_obj.c	/^static struct pmem_info *Pip;$/;"	v	typeref:struct:pmem_info	file:
Pmem	deps/pmdk/src/test/unittest/context.py	/^class Pmem(_Fs):$/;"	c
Pmreorder_emit	deps/pmdk/src/common/valgrind_internal.h	153;"	d
Pmreorder_emit	deps/pmdk/src/common/valgrind_internal.h	278;"	d
PoolType	deps/pmdk/src/test/unittest/ut.c	/^	POOL_TYPE PoolType;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
Pool_addr	deps/pmdk/src/test/obj_list/obj_list_mocks.c	/^static uintptr_t Pool_addr;$/;"	v	file:
Pool_size	deps/pmdk/src/test/obj_list/obj_list_mocks.c	/^static size_t Pool_size;$/;"	v	file:
Pop	deps/pmdk/src/test/libpmempool_rm/libpmempool_rm.c	/^static PMEMobjpool *Pop;$/;"	v	file:
Pop	deps/pmdk/src/test/libpmempool_rm_win/libpmempool_rm_win.c	/^static PMEMobjpool *Pop;$/;"	v	file:
Pop	deps/pmdk/src/test/obj_list/obj_list.c	/^PMEMobjpool *Pop;$/;"	v
Pop	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	/^static PMEMobjpool *Pop;$/;"	v	file:
Pop	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^static PMEMobjpool *Pop;$/;"	v	file:
Prefault_at_create	deps/pmdk/src/common/set.c	/^int Prefault_at_create = 0;$/;"	v
Prefault_at_open	deps/pmdk/src/common/set.c	/^int Prefault_at_open = 0;$/;"	v
Print	deps/pmdk/src/common/out.c	/^static Print_func Print = out_print_func;$/;"	v	file:
PrintCode	deps/lua/src/print.c	/^static void PrintCode(const Proto* f)$/;"	f	file:
PrintConstant	deps/lua/src/print.c	/^static void PrintConstant(const Proto* f, int i)$/;"	f	file:
PrintConstants	deps/lua/src/print.c	/^static void PrintConstants(const Proto* f)$/;"	f	file:
PrintFunction	deps/lua/src/print.c	/^void PrintFunction(const Proto* f, int full)$/;"	f
PrintFunction	deps/lua/src/print.c	18;"	d	file:
PrintHeader	deps/lua/src/print.c	/^static void PrintHeader(const Proto* f)$/;"	f	file:
PrintLocals	deps/lua/src/print.c	/^static void PrintLocals(const Proto* f)$/;"	f	file:
PrintString	deps/lua/src/print.c	/^static void PrintString(const TString* ts)$/;"	f	file:
PrintUpvalues	deps/lua/src/print.c	/^static void PrintUpvalues(const Proto* f)$/;"	f	file:
Print_func	deps/pmdk/src/common/out.c	/^typedef void (*Print_func)(const char *s);$/;"	t	file:
ProgChecker	deps/pmdk/src/tools/pmreorder/consistencycheckwrap.py	/^class ProgChecker(ConsistencyCheckerBase):$/;"	c
Protect	deps/lua/src/lvm.c	361;"	d	file:
Proto	deps/lua/src/lobject.h	/^typedef struct Proto {$/;"	s
Proto	deps/lua/src/lobject.h	/^} Proto;$/;"	t	typeref:struct:Proto
QI	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	44;"	d
QL_TEST_VERBOSE	src/quicklist.c	1447;"	d	file:
QU	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	43;"	d
QUANTUM	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	287;"	d
QUANTUM_CEILING	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	291;"	d
QUANTUM_MASK	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	288;"	d
QUARANTINE_SIZE	deps/jemalloc/test/unit/quarantine.c	3;"	d	file:
QUARANTINE_STATE_MAX	deps/jemalloc/src/quarantine.c	10;"	d	file:
QUARANTINE_STATE_PURGATORY	deps/jemalloc/src/quarantine.c	9;"	d	file:
QUARANTINE_STATE_REINCARNATED	deps/jemalloc/src/quarantine.c	8;"	d	file:
QUERY_GRAPHS_NUM	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	241;"	d	file:
QUEUE_DEQUEUE	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	QUEUE_DEQUEUE,$/;"	e	enum:queue_op	file:
QUEUE_ENQUEUE	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	QUEUE_ENQUEUE,$/;"	e	enum:queue_op	file:
QUEUE_NEW	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	QUEUE_NEW,$/;"	e	enum:queue_op	file:
QUEUE_SHOW	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	QUEUE_SHOW,$/;"	e	enum:queue_op	file:
QUICKLIST_HEAD	src/quicklist.h	100;"	d
QUICKLIST_NOCOMPRESS	src/quicklist.h	108;"	d
QUICKLIST_NODE_CONTAINER_NONE	src/quicklist.h	111;"	d
QUICKLIST_NODE_CONTAINER_ZIPLIST	src/quicklist.h	112;"	d
QUICKLIST_NODE_ENCODING_LZF	src/quicklist.h	105;"	d
QUICKLIST_NODE_ENCODING_RAW	src/quicklist.h	104;"	d
QUICKLIST_TAIL	src/quicklist.h	101;"	d
QUIET_CC	src/Makefile	/^QUIET_CC = @printf '    %b %b\\n' $(CCCOLOR)CC$(ENDCOLOR) $(SRCCOLOR)$@$(ENDCOLOR) 1>&2;$/;"	m
QUIET_INSTALL	src/Makefile	/^QUIET_INSTALL = @printf '    %b %b\\n' $(LINKCOLOR)INSTALL$(ENDCOLOR) $(BINCOLOR)$@$(ENDCOLOR) 1>&2;$/;"	m
QUIET_LINK	src/Makefile	/^QUIET_LINK = @printf '    %b %b\\n' $(LINKCOLOR)LINK$(ENDCOLOR) $(BINCOLOR)$@$(ENDCOLOR) 1>&2;$/;"	m
Q_ARCH_FLAGS	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_ARCH_FLAGS,$/;"	e	enum:question	file:
Q_BLK_BSIZE	deps/pmdk/src/libpmempool/check_blk.c	/^	Q_BLK_BSIZE,$/;"	e	enum:question	file:
Q_BUFF_SIZE	deps/pmdk/src/tools/pmempool/common.c	72;"	d	file:
Q_CHECKSUM	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_CHECKSUM,$/;"	e	enum:question	file:
Q_CRTIME	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_CRTIME,$/;"	e	enum:question	file:
Q_DEFAULT_COMPAT_FEATURES	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_DEFAULT_COMPAT_FEATURES,$/;"	e	enum:question	file:
Q_DEFAULT_INCOMPAT_FEATURES	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_DEFAULT_INCOMPAT_FEATURES,$/;"	e	enum:question	file:
Q_DEFAULT_MAJOR	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_DEFAULT_MAJOR,$/;"	e	enum:question	file:
Q_DEFAULT_RO_COMPAT_FEATURES	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_DEFAULT_RO_COMPAT_FEATURES,$/;"	e	enum:question	file:
Q_DEFAULT_SIGNATURE	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_DEFAULT_SIGNATURE,$/;"	e	enum:question	file:
Q_LOG_END_OFFSET	deps/pmdk/src/libpmempool/check_log.c	/^	Q_LOG_END_OFFSET,$/;"	e	enum:question	file:
Q_LOG_START_OFFSET	deps/pmdk/src/libpmempool/check_log.c	/^	Q_LOG_START_OFFSET,$/;"	e	enum:question	file:
Q_LOG_WRITE_OFFSET	deps/pmdk/src/libpmempool/check_log.c	/^	Q_LOG_WRITE_OFFSET,$/;"	e	enum:question	file:
Q_NEXT_PART_UUID_SET	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_NEXT_PART_UUID_SET,$/;"	e	enum:question	file:
Q_NEXT_REPL_UUID_SET	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_NEXT_REPL_UUID_SET,$/;"	e	enum:question	file:
Q_OVERWRITE_EXISTING_FILE	deps/pmdk/src/libpmempool/check_backup.c	/^	Q_OVERWRITE_EXISTING_FILE,$/;"	e	enum:question	file:
Q_OVERWRITE_EXISTING_PARTS	deps/pmdk/src/libpmempool/check_backup.c	/^	Q_OVERWRITE_EXISTING_PARTS$/;"	e	enum:question	file:
Q_POOLSET_UUID_FROM_BTT_INFO	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_POOLSET_UUID_FROM_BTT_INFO,$/;"	e	enum:question	file:
Q_POOLSET_UUID_REGENERATE	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_POOLSET_UUID_REGENERATE,$/;"	e	enum:question	file:
Q_POOLSET_UUID_SET	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_POOLSET_UUID_SET,$/;"	e	enum:question	file:
Q_PREV_PART_UUID_SET	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_PREV_PART_UUID_SET,$/;"	e	enum:question	file:
Q_PREV_REPL_UUID_SET	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_PREV_REPL_UUID_SET$/;"	e	enum:question	file:
Q_REGENERATE	deps/pmdk/src/libpmempool/check_btt_info.c	/^	Q_REGENERATE,$/;"	e	enum:question	file:
Q_REGENERATE_CHECKSUM	deps/pmdk/src/libpmempool/check_btt_info.c	/^	Q_REGENERATE_CHECKSUM,$/;"	e	enum:question	file:
Q_REPAIR_FLOG	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^	Q_REPAIR_FLOG,$/;"	e	enum:questions	file:
Q_REPAIR_FLOG	deps/pmdk/src/libpmempool/check_write.c	/^	Q_REPAIR_FLOG,$/;"	e	enum:questions	file:
Q_REPAIR_MAP	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^	Q_REPAIR_MAP,$/;"	e	enum:questions	file:
Q_REPAIR_MAP	deps/pmdk/src/libpmempool/check_write.c	/^	Q_REPAIR_MAP,$/;"	e	enum:questions	file:
Q_RESET_SDS	deps/pmdk/src/libpmempool/check_sds.c	/^	Q_RESET_SDS,$/;"	e	enum:question	file:
Q_RESTORE_FROM_BACKUP	deps/pmdk/src/libpmempool/check_btt_info.c	/^	Q_RESTORE_FROM_BACKUP,$/;"	e	enum:question	file:
Q_RESTORE_FROM_HEADER	deps/pmdk/src/libpmempool/check_btt_info.c	/^	Q_RESTORE_FROM_HEADER$/;"	e	enum:question	file:
Q_UUID_REGENERATE	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_UUID_REGENERATE,$/;"	e	enum:question	file:
Q_UUID_SET	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_UUID_SET,$/;"	e	enum:question	file:
Q_ZERO_UNUSED_AREA	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	Q_ZERO_UNUSED_AREA,$/;"	e	enum:question	file:
R	deps/lua/Makefile	/^R= 5.1.5$/;"	m
R	tests/instances.tcl	/^proc R {n args} {$/;"	p
R0	src/sha1.c	47;"	d	file:
R1	src/sha1.c	48;"	d	file:
R2	src/sha1.c	49;"	d	file:
R3	src/sha1.c	50;"	d	file:
R4	src/sha1.c	51;"	d	file:
RA	deps/lua/src/lvm.c	347;"	d	file:
RADDR	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	53;"	d
RADDR	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	56;"	d	file:
RADDR	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	49;"	d
RADIANS_PER_DEGREE	deps/lua/src/lmathlib.c	22;"	d	file:
RADIUS_COORDS	src/geo.c	457;"	d	file:
RADIUS_MEMBER	src/geo.c	458;"	d	file:
RANDPTR_INITIAL_SIZE	src/redis-benchmark.c	50;"	d	file:
RAND_H	deps/pmdk/src/common/rand.h	38;"	d
RANGE	deps/jemalloc/test/integration/rallocx.c	120;"	d	file:
RANGE	deps/pmdk/src/common/mmap.h	88;"	d
RANGE	deps/pmdk/src/common/mmap.h	94;"	d
RANGE	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	65;"	d	file:
RANGEISZERO	deps/geohash-int/geohash.h	44;"	d
RANGEPISZERO	deps/geohash-int/geohash.h	45;"	d
RANGE_NONE	deps/pmdk/src/common/mmap.h	100;"	d
RANGE_NUM	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	66;"	d	file:
RANGE_RO	deps/pmdk/src/common/mmap.h	98;"	d
RANGE_RW	deps/pmdk/src/common/mmap.h	99;"	d
RANGE_STEP	deps/jemalloc/test/unit/prng.c	155;"	d	file:
RANGE_STEP	deps/jemalloc/test/unit/prng.c	176;"	d	file:
RANGE_STEP	deps/jemalloc/test/unit/prng.c	197;"	d	file:
RANLIB	deps/lua/Makefile	/^RANLIB= ranlib$/;"	m
RANLIB	deps/lua/src/Makefile	/^RANLIB= ranlib$/;"	m
RATIO	deps/geohash-int/geohash_helper.c	43;"	d	file:
RAVL_DEFAULT_DATA_SIZE	deps/pmdk/src/libpmemobj/ravl.c	45;"	d	file:
RAVL_LEFT	deps/pmdk/src/libpmemobj/ravl.c	/^	RAVL_LEFT,$/;"	e	enum:ravl_slot_type	file:
RAVL_PREDICATE_EQUAL	deps/pmdk/src/libpmemobj/ravl.h	/^	RAVL_PREDICATE_EQUAL		=	1 << 0,$/;"	e	enum:ravl_predicate
RAVL_PREDICATE_GREATER	deps/pmdk/src/libpmemobj/ravl.h	/^	RAVL_PREDICATE_GREATER		=	1 << 1,$/;"	e	enum:ravl_predicate
RAVL_PREDICATE_GREATER_EQUAL	deps/pmdk/src/libpmemobj/ravl.h	/^	RAVL_PREDICATE_GREATER_EQUAL	=$/;"	e	enum:ravl_predicate
RAVL_PREDICATE_LESS	deps/pmdk/src/libpmemobj/ravl.h	/^	RAVL_PREDICATE_LESS		=	1 << 2,$/;"	e	enum:ravl_predicate
RAVL_PREDICATE_LESS_EQUAL	deps/pmdk/src/libpmemobj/ravl.h	/^	RAVL_PREDICATE_LESS_EQUAL	=$/;"	e	enum:ravl_predicate
RAVL_RIGHT	deps/pmdk/src/libpmemobj/ravl.c	/^	RAVL_RIGHT,$/;"	e	enum:ravl_slot_type	file:
RAVL_ROOT	deps/pmdk/src/libpmemobj/ravl.c	/^	RAVL_ROOT$/;"	e	enum:ravl_slot_type	file:
RB	deps/lua/src/lvm.c	349;"	d	file:
RBTREE_MAP_H	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.h	38;"	d
RBTREE_MAP_TYPE_OFFSET	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.h	43;"	d
RB_COMPACT	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	166;"	d
RB_FIRST	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	64;"	d	file:
RB_H_	deps/jemalloc/include/jemalloc/internal/rb.h	23;"	d
RB_LEFT	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	RB_LEFT,$/;"	e	enum:rb_children	file:
RB_RIGHT	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	RB_RIGHT,$/;"	e	enum:rb_children	file:
RC	deps/lua/src/lvm.c	350;"	d	file:
RCOUNTER	deps/pmdk/src/test/unittest/unittest.h	622;"	d
RDB_14BITLEN	src/rdb.h	57;"	d
RDB_14BITLEN	src/server.h	265;"	d
RDB_32BITLEN	src/rdb.h	58;"	d
RDB_32BITLEN	src/server.h	266;"	d
RDB_6BITLEN	src/rdb.h	56;"	d
RDB_6BITLEN	src/server.h	264;"	d
RDB_CHECK_DOING_CHECK_SUM	src/redis-check-rdb.c	59;"	d	file:
RDB_CHECK_DOING_READ_AUX	src/redis-check-rdb.c	61;"	d	file:
RDB_CHECK_DOING_READ_EXPIRE	src/redis-check-rdb.c	56;"	d	file:
RDB_CHECK_DOING_READ_KEY	src/redis-check-rdb.c	57;"	d	file:
RDB_CHECK_DOING_READ_LEN	src/redis-check-rdb.c	60;"	d	file:
RDB_CHECK_DOING_READ_OBJECT_VALUE	src/redis-check-rdb.c	58;"	d	file:
RDB_CHECK_DOING_READ_TYPE	src/redis-check-rdb.c	55;"	d	file:
RDB_CHECK_DOING_START	src/redis-check-rdb.c	54;"	d	file:
RDB_CHILD_TYPE_DISK	src/server.h	462;"	d
RDB_CHILD_TYPE_NONE	src/server.h	461;"	d
RDB_CHILD_TYPE_SOCKET	src/server.h	463;"	d
RDB_ENCVAL	src/rdb.h	59;"	d
RDB_ENCVAL	src/server.h	267;"	d
RDB_ENC_INT16	src/rdb.h	66;"	d
RDB_ENC_INT16	src/server.h	274;"	d
RDB_ENC_INT32	src/rdb.h	67;"	d
RDB_ENC_INT32	src/server.h	275;"	d
RDB_ENC_INT8	src/rdb.h	65;"	d
RDB_ENC_INT8	src/server.h	273;"	d
RDB_ENC_LZF	src/rdb.h	68;"	d
RDB_ENC_LZF	src/server.h	276;"	d
RDB_EOF_MARK_SIZE	src/server.h	137;"	d
RDB_LENERR	src/rdb.h	60;"	d
RDB_LENERR	src/server.h	268;"	d
RDB_LOAD_ENC	src/rdb.c	45;"	d	file:
RDB_LOAD_NONE	src/rdb.c	44;"	d	file:
RDB_LOAD_PLAIN	src/rdb.c	46;"	d	file:
RDB_OPCODE_AUX	src/rdb.h	92;"	d
RDB_OPCODE_EOF	src/rdb.h	97;"	d
RDB_OPCODE_EXPIRETIME	src/rdb.h	95;"	d
RDB_OPCODE_EXPIRETIME_MS	src/rdb.h	94;"	d
RDB_OPCODE_RESIZEDB	src/rdb.h	93;"	d
RDB_OPCODE_SELECTDB	src/rdb.h	96;"	d
RDB_TYPE_HASH	src/rdb.h	76;"	d
RDB_TYPE_HASH_ZIPLIST	src/rdb.h	84;"	d
RDB_TYPE_HASH_ZIPMAP	src/rdb.h	80;"	d
RDB_TYPE_LIST	src/rdb.h	73;"	d
RDB_TYPE_LIST_QUICKLIST	src/rdb.h	85;"	d
RDB_TYPE_LIST_ZIPLIST	src/rdb.h	81;"	d
RDB_TYPE_SET	src/rdb.h	74;"	d
RDB_TYPE_SET_INTSET	src/rdb.h	82;"	d
RDB_TYPE_STRING	src/rdb.h	72;"	d
RDB_TYPE_ZSET	src/rdb.h	75;"	d
RDB_TYPE_ZSET_ZIPLIST	src/rdb.h	83;"	d
RDB_VERSION	src/rdb.h	41;"	d
RDONLY	deps/pmdk/src/libpmempool/feature.c	49;"	d	file:
READ	deps/jemalloc/src/ctl.c	1069;"	d	file:
READ	deps/pmdk/src/test/unittest/unittest.h	478;"	d
READONLY	deps/jemalloc/src/ctl.c	1047;"	d	file:
READ_XOR_WRITE	deps/jemalloc/src/ctl.c	1061;"	d	file:
REALLOC	deps/pmdk/src/test/unittest/unittest.h	355;"	d
REALLOC_SIZE	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	47;"	d	file:
REAL_CFLAGS	deps/hiredis/Makefile	/^REAL_CFLAGS=$(OPTIMIZATION) -fPIC $(CFLAGS) $(WARNINGS) $(DEBUG) $(ARCH)$/;"	m
REAL_LDFLAGS	deps/hiredis/Makefile	/^REAL_LDFLAGS=$(LDFLAGS) $(ARCH)$/;"	m
RECORD_LOCK	deps/pmdk/src/libpmemobj/sync.c	48;"	d	file:
RECORD_LOCK	deps/pmdk/src/libpmemobj/sync.c	58;"	d	file:
RECOVERY_FILES_DO_NOT_EXIST	deps/pmdk/src/libpmempool/replica.c	/^	RECOVERY_FILES_DO_NOT_EXIST = 0,$/;"	e	enum:badblocks_recovery_files_status	file:
RECOVERY_FILES_ERROR	deps/pmdk/src/libpmempool/replica.c	/^	RECOVERY_FILES_ERROR = -1,$/;"	e	enum:badblocks_recovery_files_status	file:
RECOVERY_FILES_EXIST_ALL	deps/pmdk/src/libpmempool/replica.c	/^	RECOVERY_FILES_EXIST_ALL = 1,$/;"	e	enum:badblocks_recovery_files_status	file:
RECOVERY_FILES_NOT_ALL_EXIST	deps/pmdk/src/libpmempool/replica.c	/^	RECOVERY_FILES_NOT_ALL_EXIST = 2$/;"	e	enum:badblocks_recovery_files_status	file:
RED	deps/pmdk/src/test/unittest/futils.py	/^        RED = '\\33[91m'$/;"	v	class:Color
REDIS_AGGR_MAX	src/t_zset.c	1917;"	d	file:
REDIS_AGGR_MIN	src/t_zset.c	1916;"	d	file:
REDIS_AGGR_SUM	src/t_zset.c	1915;"	d	file:
REDIS_BENCHMARK_NAME	src/Makefile	/^REDIS_BENCHMARK_NAME=redis-benchmark$/;"	m
REDIS_BENCHMARK_OBJ	src/Makefile	/^REDIS_BENCHMARK_OBJ=ae.o anet.o redis-benchmark.o adlist.o zmalloc.o redis-benchmark.o$/;"	m
REDIS_BLOCK	deps/hiredis/hiredis.h	57;"	d
REDIS_BUILD_ID	src/release.h	3;"	d
REDIS_CC	src/Makefile	/^REDIS_CC=$(QUIET_CC)$(CC) $(FINAL_CFLAGS)$/;"	m
REDIS_CHECK_AOF_NAME	src/Makefile	/^REDIS_CHECK_AOF_NAME=redis-check-aof$/;"	m
REDIS_CHECK_AOF_OBJ	src/Makefile	/^REDIS_CHECK_AOF_OBJ=redis-check-aof.o$/;"	m
REDIS_CHECK_RDB_NAME	src/Makefile	/^REDIS_CHECK_RDB_NAME=redis-check-rdb$/;"	m
REDIS_CLI_DEFAULT_PIPE_TIMEOUT	src/redis-cli.c	63;"	d	file:
REDIS_CLI_HISTFILE_DEFAULT	src/redis-cli.c	65;"	d	file:
REDIS_CLI_HISTFILE_ENV	src/redis-cli.c	64;"	d	file:
REDIS_CLI_KEEPALIVE_INTERVAL	src/redis-cli.c	62;"	d	file:
REDIS_CLI_NAME	src/Makefile	/^REDIS_CLI_NAME=redis-cli$/;"	m
REDIS_CLI_OBJ	src/Makefile	/^REDIS_CLI_OBJ=anet.o adlist.o redis-cli.o zmalloc.o release.o anet.o ae.o crc64.o$/;"	m
REDIS_CLI_RCFILE_DEFAULT	src/redis-cli.c	67;"	d	file:
REDIS_CLI_RCFILE_ENV	src/redis-cli.c	66;"	d	file:
REDIS_COMPARE_BINARY	src/object.c	577;"	d	file:
REDIS_COMPARE_COLL	src/object.c	578;"	d	file:
REDIS_CONFIG_REWRITE_SIGNATURE	src/config.c	1266;"	d	file:
REDIS_CONNECTED	deps/hiredis/hiredis.h	61;"	d
REDIS_DISCONNECTING	deps/hiredis/hiredis.h	67;"	d
REDIS_ERR	deps/hiredis/hiredis.h	42;"	d
REDIS_ERR_EOF	deps/hiredis/hiredis.h	50;"	d
REDIS_ERR_IO	deps/hiredis/hiredis.h	49;"	d
REDIS_ERR_OOM	deps/hiredis/hiredis.h	52;"	d
REDIS_ERR_OTHER	deps/hiredis/hiredis.h	53;"	d
REDIS_ERR_PROTOCOL	deps/hiredis/hiredis.h	51;"	d
REDIS_FREEING	deps/hiredis/hiredis.h	71;"	d
REDIS_GEOHASH_OBJ	src/Makefile	/^REDIS_GEOHASH_OBJ=..\/deps\/geohash-int\/geohash.o ..\/deps\/geohash-int\/geohash_helper.o$/;"	m
REDIS_GIT_DIRTY	src/release.h	2;"	d
REDIS_GIT_SHA1	src/release.h	1;"	d
REDIS_INSTALL	src/Makefile	/^REDIS_INSTALL=$(QUIET_INSTALL)$(INSTALL)$/;"	m
REDIS_IN_CALLBACK	deps/hiredis/hiredis.h	74;"	d
REDIS_KEEPALIVE_INTERVAL	deps/hiredis/hiredis.h	91;"	d
REDIS_LD	src/Makefile	/^REDIS_LD=$(QUIET_LINK)$(CC) $(FINAL_LDFLAGS)$/;"	m
REDIS_LIST_HEAD	src/server.h	373;"	d
REDIS_LIST_TAIL	src/server.h	374;"	d
REDIS_LRAND48_MAX	src/rand.h	36;"	d
REDIS_MONITORING	deps/hiredis/hiredis.h	80;"	d
REDIS_OK	deps/hiredis/hiredis.h	43;"	d
REDIS_PORT	deps/hiredis/Makefile	/^REDIS_PORT=56379$/;"	m
REDIS_RANDOM_H	src/rand.h	31;"	d
REDIS_READER_MAX_BUF	deps/hiredis/hiredis.h	89;"	d
REDIS_REPLY_ARRAY	deps/hiredis/hiredis.h	83;"	d
REDIS_REPLY_ERROR	deps/hiredis/hiredis.h	87;"	d
REDIS_REPLY_INTEGER	deps/hiredis/hiredis.h	84;"	d
REDIS_REPLY_NIL	deps/hiredis/hiredis.h	85;"	d
REDIS_REPLY_STATUS	deps/hiredis/hiredis.h	86;"	d
REDIS_REPLY_STRING	deps/hiredis/hiredis.h	82;"	d
REDIS_SENTINEL_NAME	src/Makefile	/^REDIS_SENTINEL_NAME=redis-sentinel$/;"	m
REDIS_SENTINEL_PORT	src/sentinel.c	43;"	d	file:
REDIS_SERVER	deps/hiredis/Makefile	/^REDIS_SERVER=redis-server$/;"	m
REDIS_SERVER_NAME	src/Makefile	/^REDIS_SERVER_NAME=redis-server$/;"	m
REDIS_SERVER_OBJ	src/Makefile	/^REDIS_SERVER_OBJ=adlist.o quicklist.o ae.o anet.o dict.o server.o sds.o zmalloc.o lzf_c.o lzf_d.o pqsort.o zipmap.o sha1.o ziplist.o release.o networking.o util.o object.o db.o replication.o rdb.o t_string.o t_list.o t_set.o t_zset.o t_hash.o config.o aof.o pubsub.o multi.o debug.o sort.o intset.o syncio.o cluster.o crc16.o endianconv.o slowlog.o scripting.o bio.o rio.o rand.o memtest.o crc64.o bitops.o sentinel.o notify.o setproctitle.o blocked.o hyperloglog.o latency.o sparkline.o redis-check-rdb.o geo.o$/;"	m
REDIS_STATIC	src/quicklist.c	43;"	d	file:
REDIS_SUBSCRIBED	deps/hiredis/hiredis.h	77;"	d
REDIS_TEST_CONFIG	deps/hiredis/Makefile	/^define REDIS_TEST_CONFIG$/;"	m
REDIS_THREAD_STACK_SIZE	src/bio.c	89;"	d	file:
REDIS_VERSION	src/version.h	1;"	d
REDO_OVERFLOW	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	73;"	d	file:
REDZONE_MINSIZE	deps/jemalloc/include/jemalloc/internal/arena.h	14;"	d
REGISTER_BENCHMARK	deps/pmdk/src/benchmarks/benchmark.hpp	347;"	d
RELEASE_LIBDIR	deps/pmdk/src/test/unittest/futils.py	/^    RELEASE_LIBDIR = abspath(join(ROOTDIR, '..', 'nondebug'))$/;"	v
RELEASE_LIBDIR	deps/pmdk/src/test/unittest/futils.py	/^    RELEASE_LIBDIR = abspath(join(WIN_RELEASE_BUILDDIR, 'libs'))$/;"	v
RELEASE_TARGETS	deps/pmdk/src/Makefile	/^RELEASE_TARGETS = tools$/;"	m
REMOTE_NLANES	deps/pmdk/src/libpmempool/replica.h	81;"	d
REMOTE_TESTS	deps/pmdk/src/test/Makefile	/^	REMOTE_TESTS := $(filter-out $(BLACKLIST_TESTS),$(REMOTE_TESTS))$/;"	m
REMOTE_TESTS	deps/pmdk/src/test/Makefile	/^REMOTE_TESTS = \\$/;"	m
REMOTE_TOOLS	deps/pmdk/src/test/tools/Makefile	/^REMOTE_TOOLS = \\$/;"	m
REMOVE	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	105;"	d	file:
REOPEN_COUNT	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	51;"	d	file:
REP	deps/pmdk/src/common/set.h	/^REP(const struct pool_set *set, unsigned r)$/;"	f
REPLICAS_DISABLED	deps/pmdk/src/common/set.h	83;"	d
REPLICAS_ENABLED	deps/pmdk/src/common/set.h	84;"	d
REPLICA_H	deps/pmdk/src/libpmempool/replica.h	37;"	d
REPL_MAX_WRITTEN_BEFORE_FSYNC	src/replication.c	983;"	d	file:
REPL_STATE_CONNECT	src/server.h	338;"	d
REPL_STATE_CONNECTED	src/server.h	354;"	d
REPL_STATE_CONNECTING	src/server.h	339;"	d
REPL_STATE_NONE	src/server.h	337;"	d
REPL_STATE_RECEIVE_AUTH	src/server.h	343;"	d
REPL_STATE_RECEIVE_CAPA	src/server.h	349;"	d
REPL_STATE_RECEIVE_IP	src/server.h	347;"	d
REPL_STATE_RECEIVE_PONG	src/server.h	341;"	d
REPL_STATE_RECEIVE_PORT	src/server.h	345;"	d
REPL_STATE_RECEIVE_PSYNC	src/server.h	351;"	d
REPL_STATE_SEND_AUTH	src/server.h	342;"	d
REPL_STATE_SEND_CAPA	src/server.h	348;"	d
REPL_STATE_SEND_IP	src/server.h	346;"	d
REPL_STATE_SEND_PORT	src/server.h	344;"	d
REPL_STATE_SEND_PSYNC	src/server.h	350;"	d
REPL_STATE_TRANSFER	src/server.h	353;"	d
REPN	deps/pmdk/src/common/set.h	/^REPN(const struct pool_set *set, unsigned r)$/;"	f
REPN_HEALTHidx	deps/pmdk/src/libpmempool/replica.h	/^REPN_HEALTHidx(struct poolset_health_status *set, unsigned r)$/;"	f
REPNidx	deps/pmdk/src/common/set.h	/^REPNidx(const struct pool_set *set, unsigned r)$/;"	f
REPP	deps/pmdk/src/common/set.h	/^REPP(const struct pool_set *set, unsigned r)$/;"	f
REPPidx	deps/pmdk/src/common/set.h	/^REPPidx(const struct pool_set *set, unsigned r)$/;"	f
REP_HEALTH	deps/pmdk/src/libpmempool/replica.h	/^REP_HEALTH(struct poolset_health_status *set, unsigned r)$/;"	f
REP_HEALTHidx	deps/pmdk/src/libpmempool/replica.h	/^REP_HEALTHidx(struct poolset_health_status *set, unsigned r)$/;"	f
REPidx	deps/pmdk/src/common/set.h	/^REPidx(const struct pool_set *set, unsigned r)$/;"	f
REQ	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^static struct rpmemd_obc_requests REQ = {$/;"	v	typeref:struct:rpmemd_obc_requests	file:
REQUIRE_ADVANCED	deps/pmdk/src/libpmempool/check_util.h	50;"	d
REQ_ATTR_INIT	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	66;"	d	file:
REQ_BUFF_SIZE	deps/pmdk/src/tools/pmempool/common.c	71;"	d	file:
REQ_CB	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^struct rpmemd_obc_requests REQ_CB = {$/;"	v	typeref:struct:rpmemd_obc_requests
RESERVED	deps/lua/src/llex.h	/^enum RESERVED {$/;"	g
RESERVED_SIZE	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	62;"	d	file:
RESET_INTERVAL	deps/jemalloc/test/unit/prof_reset.c	150;"	d	file:
RESET_INTERVAL	deps/jemalloc/test/unit/prof_reset.c	237;"	d	file:
RESET_SDS_STR	deps/pmdk/src/libpmempool/check_sds.c	65;"	d	file:
RESP_ATTR_INIT	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	59;"	d	file:
RESP_MSG_FAIL	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^	RESP_MSG_FAIL,$/;"	e	enum:resp_messages
RESP_MSG_NULL	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^	RESP_MSG_NULL,$/;"	e	enum:resp_messages
RESP_MSG_SUCCESS	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^	RESP_MSG_SUCCESS,$/;"	e	enum:resp_messages
RESP_MSG_UNKNOWN	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^	RESP_MSG_UNKNOWN,$/;"	e	enum:resp_messages
REST	src/rand.c	64;"	d	file:
RESTART_SERVER_CONFIG_REWRITE	src/server.h	1400;"	d
RESTART_SERVER_GRACEFULLY	src/server.h	1399;"	d
RESTART_SERVER_NONE	src/server.h	1398;"	d
RESV_SIZE	deps/pmdk/src/test/obj_extend/obj_extend.c	43;"	d	file:
REV	deps/jemalloc/Makefile	/^REV := 2$/;"	m
REV_FINAL_CFLAGS	src/Makefile	/^	echo PREV_FINAL_CFLAGS=$(FINAL_CFLAGS) >> .make-settings$/;"	m
REV_FINAL_LDFLAGS	src/Makefile	/^	echo PREV_FINAL_LDFLAGS=$(FINAL_LDFLAGS) >> .make-settings$/;"	m
RI	tests/instances.tcl	/^proc RI {n field} {$/;"	p
RKASK	deps/lua/src/lopcodes.h	130;"	d
RKB	deps/lua/src/lvm.c	351;"	d	file:
RKC	deps/lua/src/lvm.c	353;"	d	file:
RKEY	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	52;"	d
RKEY	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	55;"	d	file:
RKEY	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	48;"	d
RLANE_DEFAULT	deps/pmdk/src/libpmemobj/lane.h	62;"	d
RM	deps/lua/etc/Makefile	/^RM= rm -f$/;"	m
RM	deps/lua/src/Makefile	/^RM= rm -f$/;"	m
RM_HDRS	deps/pmdk/src/libpmempool/transform.c	/^	RM_HDRS,$/;"	e	enum:transform_op	file:
RM_POOLSET_ALL	deps/pmdk/src/tools/pmempool/rm.c	70;"	d	file:
RM_POOLSET_LOCAL	deps/pmdk/src/tools/pmempool/rm.c	68;"	d	file:
RM_POOLSET_NONE	deps/pmdk/src/tools/pmempool/rm.c	67;"	d	file:
RM_POOLSET_REMOTE	deps/pmdk/src/tools/pmempool/rm.c	69;"	d	file:
RM_REPLICAS	deps/pmdk/src/libpmempool/transform.c	/^	RM_REPLICAS,$/;"	e	enum:transform_op	file:
ROOTDIR	deps/pmdk/src/test/unittest/futils.py	/^ROOTDIR = abspath(join(dirname(__file__), '..'))$/;"	v
ROOT_SIZE	deps/pmdk/src/test/obj_heap_state/obj_heap_state.c	42;"	d	file:
ROOT_TAB_SIZE	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	48;"	d	file:
RPATH	deps/jemalloc/Makefile	/^RPATH = $(if $(1),$(call _RPATH,$(1)))$/;"	m
RPATH_EXTRA	deps/jemalloc/Makefile	/^RPATH_EXTRA := $/;"	m
RPD_LOG_ERR	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	/^	RPD_LOG_ERR,$/;"	e	enum:rpmemd_log_level
RPD_LOG_INFO	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	/^	RPD_LOG_INFO,$/;"	e	enum:rpmemd_log_level
RPD_LOG_NOTICE	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	/^	RPD_LOG_NOTICE,$/;"	e	enum:rpmemd_log_level
RPD_LOG_WARN	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	/^	RPD_LOG_WARN,$/;"	e	enum:rpmemd_log_level
RPD_OPT_INVALID	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^	RPD_OPT_INVALID			= UINT64_MAX,$/;"	e	enum:rpmemd_option	file:
RPD_OPT_LOG_FILE	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^	RPD_OPT_LOG_FILE,$/;"	e	enum:rpmemd_option	file:
RPD_OPT_LOG_LEVEL	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^	RPD_OPT_LOG_LEVEL,$/;"	e	enum:rpmemd_option	file:
RPD_OPT_MAX_VALUE	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^	RPD_OPT_MAX_VALUE,$/;"	e	enum:rpmemd_option	file:
RPD_OPT_PERSIST_APM	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^	RPD_OPT_PERSIST_APM,$/;"	e	enum:rpmemd_option	file:
RPD_OPT_PERSIST_GENERAL	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^	RPD_OPT_PERSIST_GENERAL,$/;"	e	enum:rpmemd_option	file:
RPD_OPT_POOLSET_DIR	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^	RPD_OPT_POOLSET_DIR,$/;"	e	enum:rpmemd_option	file:
RPD_OPT_RM_POOLSET	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^	RPD_OPT_RM_POOLSET,$/;"	e	enum:rpmemd_option	file:
RPD_OPT_USE_SYSLOG	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^	RPD_OPT_USE_SYSLOG,$/;"	e	enum:rpmemd_option	file:
RPMEMC_ASSERT	deps/pmdk/src/rpmem_common/rpmem_common_log.h	46;"	d
RPMEMC_ASSERT	deps/pmdk/src/rpmem_common/rpmem_common_log.h	56;"	d
RPMEMC_ASSERT	deps/pmdk/src/rpmem_common/rpmem_common_log.h	65;"	d
RPMEMC_DBG	deps/pmdk/src/rpmem_common/rpmem_common_log.h	44;"	d
RPMEMC_DBG	deps/pmdk/src/rpmem_common/rpmem_common_log.h	54;"	d
RPMEMC_DBG	deps/pmdk/src/rpmem_common/rpmem_common_log.h	63;"	d
RPMEMC_FATAL	deps/pmdk/src/rpmem_common/rpmem_common_log.h	45;"	d
RPMEMC_FATAL	deps/pmdk/src/rpmem_common/rpmem_common_log.h	55;"	d
RPMEMC_FATAL	deps/pmdk/src/rpmem_common/rpmem_common_log.h	64;"	d
RPMEMC_LOG	deps/pmdk/src/rpmem_common/rpmem_common_log.h	43;"	d
RPMEMC_LOG	deps/pmdk/src/rpmem_common/rpmem_common_log.h	53;"	d
RPMEMC_LOG	deps/pmdk/src/rpmem_common/rpmem_common_log.h	62;"	d
RPMEMD_ASSERT	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	79;"	d
RPMEMD_DBG	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	62;"	d
RPMEMD_DBG	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	67;"	d
RPMEMD_DEFAULT_FH	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	49;"	d	file:
RPMEMD_DEFAULT_LOG_FILE	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	41;"	d
RPMEMD_ERR	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	70;"	d
RPMEMD_FATAL	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	74;"	d
RPMEMD_FI_CLOSE	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	66;"	d	file:
RPMEMD_FI_ERR	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	63;"	d	file:
RPMEMD_GLOBAL_CONFIG_FILE	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	45;"	d
RPMEMD_LOG	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	50;"	d
RPMEMD_LOG	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	55;"	d
RPMEMD_LOG_INDENT	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	47;"	d
RPMEMD_MAX_MSG	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	50;"	d	file:
RPMEMD_MAX_PREFIX	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	51;"	d	file:
RPMEMD_SYSLOG_FACILITY	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	48;"	d	file:
RPMEMD_SYSLOG_OPTS	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	47;"	d	file:
RPMEMD_TERMINATE_CMD	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	948;"	d	file:
RPMEMD_USER_CONFIG_FILE	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	49;"	d
RPMEM_ACCEPT_TIMEOUT	deps/pmdk/src/rpmem_common/rpmem_common.h	52;"	d
RPMEM_ASSERT	deps/pmdk/src/librpmem/rpmem_util.h	55;"	d
RPMEM_CHECK_FORK	deps/pmdk/src/librpmem/rpmem.c	62;"	d	file:
RPMEM_CLOSE_FLAGS_REMOVE	deps/pmdk/src/rpmem_common/rpmem_common.h	141;"	d
RPMEM_CMD_ENV	deps/pmdk/src/rpmem_common/rpmem_common.h	44;"	d
RPMEM_CMD_H	deps/pmdk/src/librpmem/rpmem_cmd.h	38;"	d
RPMEM_CMD_SEPARATOR	deps/pmdk/src/librpmem/rpmem_util.c	117;"	d	file:
RPMEM_COMMON_H	deps/pmdk/src/rpmem_common/rpmem_common.h	38;"	d
RPMEM_COMPLETION	deps/pmdk/src/rpmem_common/rpmem_proto.h	224;"	d
RPMEM_CONNECT_TIMEOUT	deps/pmdk/src/rpmem_common/rpmem_common.h	53;"	d
RPMEM_DBG	deps/pmdk/src/librpmem/rpmem_util.h	53;"	d
RPMEM_DEEP_PERSIST	deps/pmdk/src/rpmem_common/rpmem_proto.h	222;"	d
RPMEM_DEFAULT_MAX_LANES	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	51;"	d
RPMEM_DEFAULT_NTHREADS	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	53;"	d
RPMEM_DEF_BUFF_SIZE	deps/pmdk/src/rpmem_common/rpmem_common.h	142;"	d
RPMEM_DEF_CMD	deps/pmdk/src/rpmem_common/rpmem_common.h	46;"	d
RPMEM_DEF_SSH	deps/pmdk/src/rpmem_common/rpmem_common.h	47;"	d
RPMEM_ERR_BADNAME	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_BADNAME	= 2,$/;"	e	enum:rpmem_err
RPMEM_ERR_BADNLANES	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_BADNLANES	= 4,$/;"	e	enum:rpmem_err
RPMEM_ERR_BADPROTO	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_BADPROTO	= 1,$/;"	e	enum:rpmem_err
RPMEM_ERR_BADPROVIDER	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_BADPROVIDER	= 5,$/;"	e	enum:rpmem_err
RPMEM_ERR_BADSIZE	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_BADSIZE	= 3,$/;"	e	enum:rpmem_err
RPMEM_ERR_BUSY	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_BUSY		= 8,$/;"	e	enum:rpmem_err
RPMEM_ERR_EXISTS	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_EXISTS	= 9,$/;"	e	enum:rpmem_err
RPMEM_ERR_FATAL	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_FATAL		= 6,$/;"	e	enum:rpmem_err
RPMEM_ERR_FATAL_CONN	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_FATAL_CONN	= 7,$/;"	e	enum:rpmem_err
RPMEM_ERR_NOACCESS	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_NOACCESS	= 12,$/;"	e	enum:rpmem_err
RPMEM_ERR_NOEXIST	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_NOEXIST	= 11,$/;"	e	enum:rpmem_err
RPMEM_ERR_POOL_CFG	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_POOL_CFG	= 13,$/;"	e	enum:rpmem_err
RPMEM_ERR_PROVNOSUP	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_ERR_PROVNOSUP	= 10,$/;"	e	enum:rpmem_err
RPMEM_EXAMPLES_TESTS	deps/pmdk/src/test/Makefile	/^RPMEM_EXAMPLES_TESTS = \\$/;"	m
RPMEM_FATAL	deps/pmdk/src/librpmem/rpmem_util.h	54;"	d
RPMEM_FIP_COMMON_H	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	38;"	d
RPMEM_FIP_CQ_WAIT_MS	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	52;"	d
RPMEM_FIP_H	deps/pmdk/src/librpmem/rpmem_fip.h	38;"	d
RPMEM_FIP_MSG_H	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	38;"	d
RPMEM_FIP_NODE_CLIENT	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	/^	RPMEM_FIP_NODE_CLIENT,$/;"	e	enum:rpmem_fip_node
RPMEM_FIP_NODE_SERVER	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	/^	RPMEM_FIP_NODE_SERVER,$/;"	e	enum:rpmem_fip_node
RPMEM_FIP_WQ_FLUSH_REQ	deps/pmdk/src/librpmem/rpmem_fip.c	1040;"	d	file:
RPMEM_FIVERSION	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	51;"	d
RPMEM_FI_CLOSE	deps/pmdk/src/librpmem/rpmem_fip.c	68;"	d	file:
RPMEM_FI_ERR	deps/pmdk/src/librpmem/rpmem_fip.c	65;"	d	file:
RPMEM_FLAGS_USE_IPV4	deps/pmdk/src/rpmem_common/rpmem_common.h	136;"	d
RPMEM_FLUSH_FLAGS_ALL	deps/pmdk/src/librpmem/rpmem_util.h	60;"	d
RPMEM_FLUSH_FLAGS_MASK	deps/pmdk/src/librpmem/rpmem_util.h	61;"	d
RPMEM_FLUSH_PERSIST_MASK	deps/pmdk/src/rpmem_common/rpmem_proto.h	227;"	d
RPMEM_FLUSH_RELAXED	deps/pmdk/src/include/librpmem.h	84;"	d
RPMEM_FLUSH_WRITE	deps/pmdk/src/rpmem_common/rpmem_proto.h	221;"	d
RPMEM_HAS_SERVICE	deps/pmdk/src/rpmem_common/rpmem_common.h	135;"	d
RPMEM_HAS_USER	deps/pmdk/src/rpmem_common/rpmem_common.h	134;"	d
RPMEM_HDR_SIZE	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	59;"	d	file:
RPMEM_HDR_SIZE	deps/pmdk/src/rpmem_common/rpmem_common.h	140;"	d
RPMEM_LOG	deps/pmdk/src/librpmem/rpmem_util.h	52;"	d
RPMEM_LOG_FILE_VAR	deps/pmdk/src/librpmem/rpmem.h	41;"	d
RPMEM_LOG_LEVEL_VAR	deps/pmdk/src/librpmem/rpmem.h	40;"	d
RPMEM_LOG_PREFIX	deps/pmdk/src/librpmem/rpmem.h	39;"	d
RPMEM_MAJOR_VERSION	deps/pmdk/src/include/librpmem.h	108;"	d
RPMEM_MAX_NLANES_ENV	deps/pmdk/src/rpmem_common/rpmem_common.h	50;"	d
RPMEM_MAX_NODE	deps/pmdk/src/rpmem_common/rpmem_common.h	138;"	d
RPMEM_MAX_SERVICE	deps/pmdk/src/rpmem_common/rpmem_common.h	139;"	d
RPMEM_MAX_USER	deps/pmdk/src/rpmem_common/rpmem_common.h	137;"	d
RPMEM_MINOR_VERSION	deps/pmdk/src/include/librpmem.h	109;"	d
RPMEM_MIN_PART	deps/pmdk/src/include/librpmem.h	122;"	d
RPMEM_MIN_POOL	deps/pmdk/src/include/librpmem.h	116;"	d
RPMEM_MONITOR_TIMEOUT	deps/pmdk/src/rpmem_common/rpmem_common.h	54;"	d
RPMEM_MSG_TYPE_CLOSE	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	RPMEM_MSG_TYPE_CLOSE		= 5, \/* close request *\/$/;"	e	enum:rpmem_msg_type
RPMEM_MSG_TYPE_CLOSE_RESP	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	RPMEM_MSG_TYPE_CLOSE_RESP	= 6, \/* close request response *\/$/;"	e	enum:rpmem_msg_type
RPMEM_MSG_TYPE_CREATE	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	RPMEM_MSG_TYPE_CREATE		= 1, \/* create request *\/$/;"	e	enum:rpmem_msg_type
RPMEM_MSG_TYPE_CREATE_RESP	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	RPMEM_MSG_TYPE_CREATE_RESP	= 2, \/* create request response *\/$/;"	e	enum:rpmem_msg_type
RPMEM_MSG_TYPE_OPEN	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	RPMEM_MSG_TYPE_OPEN		= 3, \/* open request *\/$/;"	e	enum:rpmem_msg_type
RPMEM_MSG_TYPE_OPEN_RESP	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	RPMEM_MSG_TYPE_OPEN_RESP	= 4, \/* open request response *\/$/;"	e	enum:rpmem_msg_type
RPMEM_MSG_TYPE_SET_ATTR	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	RPMEM_MSG_TYPE_SET_ATTR		= 7, \/* set attributes request *\/$/;"	e	enum:rpmem_msg_type
RPMEM_MSG_TYPE_SET_ATTR_RESP	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	RPMEM_MSG_TYPE_SET_ATTR_RESP	= 8,$/;"	e	enum:rpmem_msg_type
RPMEM_OBC_H	deps/pmdk/src/librpmem/rpmem_obc.h	38;"	d
RPMEM_PERSIST_FLAGS_ALL	deps/pmdk/src/librpmem/rpmem_util.h	57;"	d
RPMEM_PERSIST_FLAGS_MASK	deps/pmdk/src/librpmem/rpmem_util.h	58;"	d
RPMEM_PERSIST_MAX	deps/pmdk/src/rpmem_common/rpmem_proto.h	229;"	d
RPMEM_PERSIST_RELAXED	deps/pmdk/src/include/librpmem.h	83;"	d
RPMEM_PERSIST_SEND	deps/pmdk/src/rpmem_common/rpmem_proto.h	223;"	d
RPMEM_PM_APM	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_PM_APM	= 2,	\/* Appliance Persistency Method *\/$/;"	e	enum:rpmem_persist_method
RPMEM_PM_GPSPM	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_PM_GPSPM	= 1,	\/* General Purpose Server Persistency Method *\/$/;"	e	enum:rpmem_persist_method
RPMEM_POOL_HDR_SIG_LEN	deps/pmdk/src/include/librpmem.h	54;"	d
RPMEM_POOL_HDR_UUID_LEN	deps/pmdk/src/include/librpmem.h	55;"	d
RPMEM_POOL_USER_FLAGS_LEN	deps/pmdk/src/include/librpmem.h	56;"	d
RPMEM_PROTO	deps/pmdk/src/rpmem_common/rpmem_proto.h	51;"	d
RPMEM_PROTO_H	deps/pmdk/src/rpmem_common/rpmem_proto.h	38;"	d
RPMEM_PROTO_MAJOR	deps/pmdk/src/rpmem_common/rpmem_proto.h	52;"	d
RPMEM_PROTO_MINOR	deps/pmdk/src/rpmem_common/rpmem_proto.h	53;"	d
RPMEM_PROV_LIBFABRIC_SOCKETS	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_PROV_LIBFABRIC_SOCKETS	= 2,$/;"	e	enum:rpmem_provider
RPMEM_PROV_LIBFABRIC_VERBS	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_PROV_LIBFABRIC_VERBS	= 1,$/;"	e	enum:rpmem_provider
RPMEM_PROV_SIZE	deps/pmdk/src/rpmem_common/rpmem_proto.h	56;"	d
RPMEM_PROV_SOCKET_ENV	deps/pmdk/src/rpmem_common/rpmem_common.h	48;"	d
RPMEM_PROV_UNKNOWN	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_PROV_UNKNOWN = 0,$/;"	e	enum:rpmem_provider
RPMEM_PROV_VERBS_ENV	deps/pmdk/src/rpmem_common/rpmem_common.h	49;"	d
RPMEM_RAW_BUFF_SIZE	deps/pmdk/src/librpmem/rpmem_fip.c	81;"	d	file:
RPMEM_RAW_SIZE	deps/pmdk/src/librpmem/rpmem_fip.c	82;"	d	file:
RPMEM_REMOVE_FLAGS_ALL	deps/pmdk/src/librpmem/rpmem.c	57;"	d	file:
RPMEM_REMOVE_FORCE	deps/pmdk/src/include/librpmem.h	97;"	d
RPMEM_REMOVE_POOL_SET	deps/pmdk/src/include/librpmem.h	98;"	d
RPMEM_SIG_SIZE	deps/pmdk/src/rpmem_common/rpmem_proto.h	54;"	d
RPMEM_SSH_ENV	deps/pmdk/src/rpmem_common/rpmem_common.h	45;"	d
RPMEM_SSH_H	deps/pmdk/src/librpmem/rpmem_ssh.h	37;"	d
RPMEM_SUCCESS	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	RPMEM_SUCCESS		= 0,$/;"	e	enum:rpmem_err
RPMEM_TESTS	deps/pmdk/src/test/Makefile	/^RPMEM_TESTS = \\$/;"	m
RPMEM_USER_SIZE	deps/pmdk/src/rpmem_common/rpmem_proto.h	57;"	d
RPMEM_UTIL_H	deps/pmdk/src/librpmem/rpmem_util.h	38;"	d
RPMEM_UUID_SIZE	deps/pmdk/src/rpmem_common/rpmem_proto.h	55;"	d
RPMEM_WQ_SIZE_ENV	deps/pmdk/src/rpmem_common/rpmem_common.h	51;"	d
RPMEMpool	deps/pmdk/src/include/librpmem.h	/^typedef struct rpmem_pool RPMEMpool;$/;"	t	typeref:struct:rpmem_pool
RPM_BUILDDIR	deps/pmdk/Makefile	/^RPM_BUILDDIR=rpmbuild$/;"	m
RRAND	deps/pmdk/src/benchmarks/benchmark.hpp	72;"	d
RRAND	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	58;"	d	file:
RRAND	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	75;"	d	file:
RRAND	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	52;"	d	file:
RRAND	deps/pmdk/src/test/obj_pmalloc_rand_mt/obj_pmalloc_rand_mt.c	42;"	d	file:
RRAND_R	deps/pmdk/src/benchmarks/benchmark.hpp	73;"	d
RTLD_DEEPBIND	deps/pmdk/src/common/os.h	70;"	d
RTREE_BITS_PER_LEVEL	deps/jemalloc/include/jemalloc/internal/rtree.h	18;"	d
RTREE_GET_BIAS	deps/jemalloc/include/jemalloc/internal/rtree.h	253;"	d
RTREE_GET_BIAS	deps/jemalloc/include/jemalloc/internal/rtree.h	330;"	d
RTREE_GET_LEAF	deps/jemalloc/include/jemalloc/internal/rtree.h	264;"	d
RTREE_GET_LEAF	deps/jemalloc/include/jemalloc/internal/rtree.h	327;"	d
RTREE_GET_SUBTREE	deps/jemalloc/include/jemalloc/internal/rtree.h	255;"	d
RTREE_GET_SUBTREE	deps/jemalloc/include/jemalloc/internal/rtree.h	326;"	d
RTREE_HEIGHT_MAX	deps/jemalloc/include/jemalloc/internal/rtree.h	20;"	d
RTREE_MAP_H	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.h	38;"	d
RTREE_MAP_TYPE_OFFSET	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.h	43;"	d
RTREE_NODE_INITIALIZING	deps/jemalloc/include/jemalloc/internal/rtree.h	24;"	d
RUNNING_ON_VALGRIND	deps/jemalloc/include/jemalloc/internal/valgrind.h	96;"	d
RUNNING_ON_VALGRIND	deps/pmdk/src/common/valgrind/valgrind.h	6213;"	d
RUN_BASE_METADATA_SIZE	deps/pmdk/src/libpmemobj/heap_layout.h	65;"	d
RUN_BASE_METADATA_VALUES	deps/pmdk/src/libpmemobj/heap_layout.h	63;"	d
RUN_BITMAP_SEPARATOR_DISTANCE	deps/pmdk/src/tools/pmempool/info_obj.c	70;"	d	file:
RUN_BITS_PER_VALUE	deps/pmdk/src/libpmemobj/heap_layout.h	62;"	d
RUN_CLASS_KEY_PACK	deps/pmdk/src/libpmemobj/alloc_class.c	47;"	d	file:
RUN_CONTENT_SIZE	deps/pmdk/src/libpmemobj/heap_layout.h	67;"	d
RUN_CONTENT_SIZE_BYTES	deps/pmdk/src/libpmemobj/heap_layout.h	72;"	d
RUN_DEFAULT_BITMAP_NBITS	deps/pmdk/src/libpmemobj/heap_layout.h	80;"	d
RUN_DEFAULT_BITMAP_SIZE	deps/pmdk/src/libpmemobj/heap_layout.h	79;"	d
RUN_DEFAULT_BITMAP_VALUES	deps/pmdk/src/libpmemobj/heap_layout.h	77;"	d
RUN_DEFAULT_METADATA_VALUES	deps/pmdk/src/libpmemobj/heap_layout.h	76;"	d
RUN_DEFAULT_SIZE	deps/pmdk/src/libpmemobj/heap_layout.h	82;"	d
RUN_DEFAULT_SIZE_BYTES	deps/pmdk/src/libpmemobj/heap_layout.h	89;"	d
RUN_MAXREGS	deps/jemalloc/include/jemalloc/internal/arena.h	8;"	d
RUN_MIN_NALLOCS	deps/pmdk/src/libpmemobj/alloc_class.c	125;"	d	file:
RUN_SIZE_IDX_CAP	deps/pmdk/src/libpmemobj/alloc_class.c	130;"	d	file:
RUN_UNIT_MAX	deps/pmdk/src/libpmemobj/alloc_class.h	51;"	d
RUN_UNIT_MAX_ALLOC	deps/pmdk/src/libpmemobj/alloc_class.c	109;"	d	file:
RW	deps/pmdk/src/libpmempool/feature.c	48;"	d	file:
RW_BUFFERING_SIZE	deps/pmdk/src/libpmempool/pool.c	73;"	d	file:
R_CC	deps/geohash-int/Makefile	/^R_CC=$(CC) $(R_CFLAGS)$/;"	m
R_CC	deps/linenoise/Makefile	/^R_CC=$(CC) $(R_CFLAGS)$/;"	m
R_CFLAGS	deps/geohash-int/Makefile	/^R_CFLAGS= $(STD) $(WARN) $(OPT) $(DEBUG) $(CFLAGS)$/;"	m
R_CFLAGS	deps/linenoise/Makefile	/^R_CFLAGS= $(STD) $(WARN) $(OPT) $(DEBUG) $(CFLAGS)$/;"	m
R_LD	deps/geohash-int/Makefile	/^R_LD=$(CC) $(R_LDFLAGS)$/;"	m
R_LD	deps/linenoise/Makefile	/^R_LD=$(CC) $(R_LDFLAGS)$/;"	m
R_LDFLAGS	deps/geohash-int/Makefile	/^R_LDFLAGS= $(LDFLAGS)$/;"	m
R_LDFLAGS	deps/linenoise/Makefile	/^R_LDFLAGS= $(LDFLAGS)$/;"	m
R_MAJOR	deps/geohash-int/geohash_helper.c	41;"	d	file:
R_MINOR	deps/geohash-int/geohash_helper.c	42;"	d	file:
R_Nan	src/server.c	/^double R_Zero, R_PosInf, R_NegInf, R_Nan;$/;"	v
R_NegInf	src/server.c	/^double R_Zero, R_PosInf, R_NegInf, R_Nan;$/;"	v
R_OK	deps/pmdk/src/windows/include/unistd.h	45;"	d
R_PosInf	src/server.c	/^double R_Zero, R_PosInf, R_NegInf, R_Nan;$/;"	v
R_Zero	src/server.c	/^double R_Zero, R_PosInf, R_NegInf, R_Nan;$/;"	v
RandomPartialReorderEngine	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^class RandomPartialReorderEngine:$/;"	c
Rangeable	deps/pmdk/src/tools/pmreorder/utils.py	/^class Rangeable:$/;"	c
Rcounter_malloc	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^static int Rcounter_malloc;$/;"	v	file:
Realloc	deps/pmdk/src/common/alloc.h	53;"	d
Realloc	deps/pmdk/src/common/alloc.h	59;"	d
Realloc_func	deps/pmdk/src/common/alloc.h	/^typedef void *(*Realloc_func)(void *ptr, size_t size);$/;"	t
RedisClusterCRC16	src/redis-trib.rb	/^module RedisClusterCRC16$/;"	m	class:RedisTrib
RedisTrib	src/redis-trib.rb	/^class RedisTrib$/;"	c
Register_file	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class Register_file(BaseOperation):$/;"	c
Release	deps/pmdk/src/test/unittest/context.py	/^class Release(_Build):$/;"	c
Remote_lock	deps/pmdk/src/common/set.c	/^static os_mutex_t Remote_lock;$/;"	v	file:
Remote_replication_available	deps/pmdk/src/common/set.c	/^static int Remote_replication_available;$/;"	v	file:
ReorderAccumulative	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class ReorderAccumulative(ReorderBase):$/;"	c
ReorderBase	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class ReorderBase(BaseOperation):$/;"	c
ReorderDefault	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class ReorderDefault(ReorderBase):$/;"	c
ReorderFull	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class ReorderFull(ReorderBase):$/;"	c
ReorderPartial	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class ReorderPartial(ReorderBase):$/;"	c
ReorderReverseAccumulative	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class ReorderReverseAccumulative(ReorderBase):$/;"	c
ReplayingState	deps/pmdk/src/tools/pmreorder/statemachine.py	/^class ReplayingState(State):$/;"	c
Reserved	deps/pmdk/src/test/unittest/ut.c	/^	ULONG Reserved;$/;"	m	struct:_SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	file:
Reserved	deps/pmdk/src/test/unittest/ut.c	/^	ULONG_PTR Reserved;$/;"	m	struct:_SYSTEM_HANDLE_INFORMATION_EX	file:
Rpmem_close	deps/pmdk/src/common/set.c	/^int (*Rpmem_close)(RPMEMpool *rpp);$/;"	v
Rpmem_cmd_arr	deps/pmdk/src/librpmem/rpmem_util.c	/^static char **Rpmem_cmd_arr;$/;"	v	file:
Rpmem_cmds	deps/pmdk/src/librpmem/rpmem_util.c	/^static char *Rpmem_cmds;$/;"	v	file:
Rpmem_create	deps/pmdk/src/common/set.c	/^static RPMEMpool *(*Rpmem_create)(const char *target, const char *pool_set_name,$/;"	v	file:
Rpmem_current_cmd	deps/pmdk/src/librpmem/rpmem_util.c	/^static size_t Rpmem_current_cmd;$/;"	v	file:
Rpmem_deep_persist	deps/pmdk/src/common/set.c	/^int (*Rpmem_deep_persist)(RPMEMpool *rpp, size_t offset, size_t length,$/;"	v
Rpmem_fork_unsafe	deps/pmdk/src/rpmem_common/rpmem_common.c	/^int Rpmem_fork_unsafe;$/;"	v
Rpmem_fork_unsafe_key_once	deps/pmdk/src/librpmem/rpmem.c	/^static os_once_t Rpmem_fork_unsafe_key_once = OS_ONCE_INIT;$/;"	v	file:
Rpmem_handle_remote	deps/pmdk/src/common/set.c	/^static void *Rpmem_handle_remote;$/;"	v	file:
Rpmem_max_nlanes	deps/pmdk/src/rpmem_common/rpmem_common.c	/^unsigned Rpmem_max_nlanes = UINT_MAX;$/;"	v
Rpmem_ncmds	deps/pmdk/src/librpmem/rpmem_util.c	/^static size_t Rpmem_ncmds;$/;"	v	file:
Rpmem_open	deps/pmdk/src/common/set.c	/^static RPMEMpool *(*Rpmem_open)(const char *target, const char *pool_set_name,$/;"	v	file:
Rpmem_persist	deps/pmdk/src/common/set.c	/^int (*Rpmem_persist)(RPMEMpool *rpp, size_t offset, size_t length,$/;"	v
Rpmem_read	deps/pmdk/src/common/set.c	/^int (*Rpmem_read)(RPMEMpool *rpp, void *buff, size_t offset,$/;"	v
Rpmem_remove	deps/pmdk/src/common/set.c	/^int (*Rpmem_remove)(const char *target, const char *pool_set_name, int flags);$/;"	v
Rpmem_set_attr	deps/pmdk/src/common/set.c	/^int (*Rpmem_set_attr)(RPMEMpool *rpp, const struct rpmem_pool_attr *rattr);$/;"	v
Rpmem_wq_size	deps/pmdk/src/rpmem_common/rpmem_common.c	/^unsigned Rpmem_wq_size = 50;$/;"	v
S	deps/lua/src/print.c	159;"	d	file:
S	tests/instances.tcl	/^proc S {n args} {$/;"	p
S2B_0	deps/jemalloc/src/jemalloc.c	117;"	d	file:
S2B_1	deps/jemalloc/src/jemalloc.c	146;"	d	file:
S2B_10	deps/jemalloc/src/jemalloc.c	173;"	d	file:
S2B_10	deps/jemalloc/src/jemalloc.c	189;"	d	file:
S2B_11	deps/jemalloc/src/jemalloc.c	176;"	d	file:
S2B_11	deps/jemalloc/src/jemalloc.c	190;"	d	file:
S2B_2	deps/jemalloc/src/jemalloc.c	149;"	d	file:
S2B_3	deps/jemalloc/src/jemalloc.c	152;"	d	file:
S2B_3	deps/jemalloc/src/jemalloc.c	182;"	d	file:
S2B_4	deps/jemalloc/src/jemalloc.c	155;"	d	file:
S2B_4	deps/jemalloc/src/jemalloc.c	183;"	d	file:
S2B_5	deps/jemalloc/src/jemalloc.c	158;"	d	file:
S2B_5	deps/jemalloc/src/jemalloc.c	184;"	d	file:
S2B_6	deps/jemalloc/src/jemalloc.c	161;"	d	file:
S2B_6	deps/jemalloc/src/jemalloc.c	185;"	d	file:
S2B_7	deps/jemalloc/src/jemalloc.c	164;"	d	file:
S2B_7	deps/jemalloc/src/jemalloc.c	186;"	d	file:
S2B_8	deps/jemalloc/src/jemalloc.c	167;"	d	file:
S2B_8	deps/jemalloc/src/jemalloc.c	187;"	d	file:
S2B_9	deps/jemalloc/src/jemalloc.c	170;"	d	file:
S2B_9	deps/jemalloc/src/jemalloc.c	188;"	d	file:
S2B_no	deps/jemalloc/src/jemalloc.c	178;"	d	file:
S2B_no	deps/jemalloc/src/jemalloc.c	191;"	d	file:
SA_ONSTACK	src/debug.c	48;"	d	file:
SBits	deps/lua/src/lua_bit.c	/^typedef int32_t SBits;$/;"	t	file:
SC	deps/jemalloc/src/arena.c	3750;"	d	file:
SC	deps/jemalloc/src/arena.c	3755;"	d	file:
SC	deps/jemalloc/src/jemalloc.c	102;"	d	file:
SC	deps/jemalloc/src/jemalloc.c	107;"	d	file:
SC	deps/jemalloc/src/jemalloc.c	110;"	d	file:
SC	deps/jemalloc/src/jemalloc.c	179;"	d	file:
SC	deps/jemalloc/src/jemalloc.c	192;"	d	file:
SC	deps/jemalloc/src/jemalloc.c	97;"	d	file:
SCOPEDIRS	deps/pmdk/src/tools/Makefile	/^SCOPEDIRS=$(TARGETS)$/;"	m
SCOPEFILES	deps/pmdk/src/Makefile	/^SCOPEFILES = $(SCOPE_SRC_FILES) $(SCOPE_HDR_FILES)$/;"	m
SCOPEFILES	deps/pmdk/src/tools/Makefile	/^SCOPEFILES=$(foreach dir, $(SCOPEDIRS), $(shell find $(dir) -name *.[ch] ))$/;"	m
SCOPE_DIRS	deps/pmdk/src/Makefile	/^SCOPE_DIRS = $(TARGETS) common librpmem rpmem_common$/;"	m
SCOPE_HDR_DIRS	deps/pmdk/src/Makefile	/^SCOPE_HDR_DIRS = $(SCOPE_DIRS) include$/;"	m
SCOPE_HDR_FILES	deps/pmdk/src/Makefile	/^SCOPE_HDR_FILES = $(foreach d, $(SCOPE_HDR_DIRS), $(wildcard $(D)\/*.h))$/;"	m
SCOPE_SRC_DIRS	deps/pmdk/src/Makefile	/^SCOPE_SRC_DIRS = $(SCOPE_DIRS) include$/;"	m
SCOPE_SRC_FILES	deps/pmdk/src/Makefile	/^SCOPE_SRC_FILES = $(foreach d, $(SCOPE_SRC_DIRS), $(wildcard $(d)\/*.c))$/;"	m
SCP_SRC_DIR	deps/pmdk/src/test/ex_librpmem_basic/Makefile	/^SCP_SRC_DIR = ..\/..\/examples\/librpmem$/;"	m
SCP_SRC_DIR	deps/pmdk/src/test/ex_librpmem_fibonacci/Makefile	/^SCP_SRC_DIR = ..\/..\/examples\/librpmem\/fibonacci$/;"	m
SCP_SRC_DIR	deps/pmdk/src/test/ex_librpmem_hello/Makefile	/^SCP_SRC_DIR = ..\/..\/examples\/librpmem$/;"	m
SCP_SRC_DIR	deps/pmdk/src/test/ex_librpmem_manpage/Makefile	/^SCP_SRC_DIR = ..\/..\/examples\/librpmem$/;"	m
SCP_SRC_DIR	deps/pmdk/src/test/libpmempool_rm_remote/Makefile	/^SCP_SRC_DIR = ..\/libpmempool_rm$/;"	m
SCP_SRC_DIR	deps/pmdk/src/test/obj_rpmem_basic_integration/Makefile	/^SCP_SRC_DIR = ..\/obj_basic_integration$/;"	m
SCP_SRC_DIR	deps/pmdk/src/test/obj_rpmem_heap_interrupt/Makefile	/^SCP_SRC_DIR = ..\/obj_heap_interrupt$/;"	m
SCP_SRC_DIR	deps/pmdk/src/test/obj_rpmem_heap_state/Makefile	/^SCP_SRC_DIR = ..\/obj_heap_state$/;"	m
SCP_TARGET	deps/pmdk/src/test/ex_librpmem_basic/Makefile	/^SCP_TARGET = basic$/;"	m
SCP_TARGET	deps/pmdk/src/test/ex_librpmem_fibonacci/Makefile	/^SCP_TARGET = fibonacci$/;"	m
SCP_TARGET	deps/pmdk/src/test/ex_librpmem_hello/Makefile	/^SCP_TARGET = hello$/;"	m
SCP_TARGET	deps/pmdk/src/test/ex_librpmem_manpage/Makefile	/^SCP_TARGET = manpage$/;"	m
SCP_TARGET	deps/pmdk/src/test/libpmempool_rm_remote/Makefile	/^SCP_TARGET = libpmempool_rm$/;"	m
SCP_TARGET	deps/pmdk/src/test/obj_rpmem_basic_integration/Makefile	/^SCP_TARGET = obj_basic_integration$/;"	m
SCP_TARGET	deps/pmdk/src/test/obj_rpmem_heap_interrupt/Makefile	/^SCP_TARGET = obj_heap_interrupt$/;"	m
SCP_TARGET	deps/pmdk/src/test/obj_rpmem_heap_state/Makefile	/^SCP_TARGET = obj_heap_state$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/ex_librpmem_basic/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/ex_librpmem_fibonacci/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/ex_librpmem_hello/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/ex_librpmem_manpage/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/libpmempool_rm_remote/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/obj_check_remote/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/obj_rpmem_basic_integration/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/obj_rpmem_heap_interrupt/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/obj_rpmem_heap_state/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/pmempool_feature_remote/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/pmempool_info_remote/Makefile	/^SCP_TO_REMOTE_NODES=y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/pmempool_rm_remote/Makefile	/^SCP_TO_REMOTE_NODES=y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/pmempool_sync_remote/Makefile	/^SCP_TO_REMOTE_NODES=y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/pmempool_transform_remote/Makefile	/^SCP_TO_REMOTE_NODES=y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/remote_basic/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/remote_obj_basic/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/rpmem_addr_ext/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/rpmem_basic/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/rpmem_fip/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/rpmem_obc/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/rpmem_obc_int/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/rpmemd_obc/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/tools/ctrld/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/tools/extents/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/tools/fip/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/tools/obj_verify/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/tools/pmemdetect/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/tools/pmemobjcli/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/test/tools/pmemspoil/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/tools/daxio/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/tools/pmempool/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCP_TO_REMOTE_NODES	deps/pmdk/src/tools/rpmemd/Makefile	/^SCP_TO_REMOTE_NODES = y$/;"	m
SCRIPTS	deps/pmdk/src/Makefile	/^SCRIPTS = $(call rwildcard,,*.sh)$/;"	m
SCRIPTS	deps/pmdk/utils/Makefile	/^SCRIPTS = $(call rwildcard,,*.sh)$/;"	m
SDS_AT_CREATE_EXPECTED	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	142;"	d	file:
SDS_AT_CREATE_EXPECTED	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	144;"	d	file:
SDS_CHECK_STR	deps/pmdk/src/libpmempool/check_sds.c	55;"	d	file:
SDS_DIRTY_STR	deps/pmdk/src/libpmempool/check_sds.c	57;"	d	file:
SDS_FAIL_MSG	deps/pmdk/src/libpmempool/check_sds.c	70;"	d	file:
SDS_HDR	deps/hiredis/sds.h	83;"	d
SDS_HDR	src/sds.h	87;"	d
SDS_HDR_VAR	deps/hiredis/sds.h	82;"	d
SDS_HDR_VAR	src/sds.h	86;"	d
SDS_LLSTR_SIZE	deps/hiredis/sds.c	428;"	d	file:
SDS_LLSTR_SIZE	src/sds.c	538;"	d	file:
SDS_MAX_PREALLOC	deps/hiredis/sds.h	36;"	d
SDS_MAX_PREALLOC	src/sds.h	36;"	d
SDS_OK_STR	deps/pmdk/src/libpmempool/check_sds.c	56;"	d	file:
SDS_REPAIR_MSG	deps/pmdk/src/libpmempool/check_sds.c	73;"	d	file:
SDS_TYPE_16	deps/hiredis/sds.h	77;"	d
SDS_TYPE_16	src/sds.h	81;"	d
SDS_TYPE_32	deps/hiredis/sds.h	78;"	d
SDS_TYPE_32	src/sds.h	82;"	d
SDS_TYPE_5	deps/hiredis/sds.h	75;"	d
SDS_TYPE_5	src/sds.h	79;"	d
SDS_TYPE_5_LEN	deps/hiredis/sds.h	84;"	d
SDS_TYPE_5_LEN	src/sds.h	88;"	d
SDS_TYPE_64	deps/hiredis/sds.h	79;"	d
SDS_TYPE_64	src/sds.h	83;"	d
SDS_TYPE_8	deps/hiredis/sds.h	76;"	d
SDS_TYPE_8	src/sds.h	80;"	d
SDS_TYPE_BITS	deps/hiredis/sds.h	81;"	d
SDS_TYPE_BITS	src/sds.h	85;"	d
SDS_TYPE_MASK	deps/hiredis/sds.h	80;"	d
SDS_TYPE_MASK	src/sds.h	84;"	d
SDS_at_create	deps/pmdk/src/common/set.c	/^int SDS_at_create = POOL_FEAT_INCOMPAT_DEFAULT & POOL_E_FEAT_SDS ? 1 : 0;$/;"	v
SEARCH	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	104;"	d	file:
SEC2B	deps/pmdk/src/common/os_badblock.h	48;"	d
SECTION_GLOBAL	deps/pmdk/src/benchmarks/config_reader.cpp	45;"	d	file:
SECTION_GLOBAL	deps/pmdk/src/benchmarks/config_reader_win.cpp	45;"	d	file:
SEED	deps/jemalloc/test/unit/ph.c	169;"	d	file:
SEED	deps/jemalloc/test/unit/ph.c	279;"	d	file:
SEED	deps/jemalloc/test/unit/rb.c	232;"	d	file:
SEED	deps/jemalloc/test/unit/rb.c	343;"	d	file:
SEED	deps/jemalloc/test/unit/rtree.c	138;"	d	file:
SEED	deps/jemalloc/test/unit/rtree.c	99;"	d	file:
SEED	src/rand.c	63;"	d	file:
SEGLIST_BLOCK_LISTS	deps/pmdk/src/libpmemobj/container_seglists.c	48;"	d	file:
SENTINEL_ASK_FORCED	src/sentinel.c	3550;"	d	file:
SENTINEL_ASK_PERIOD	src/sentinel.c	73;"	d	file:
SENTINEL_DEFAULT_DOWN_AFTER	src/sentinel.c	75;"	d	file:
SENTINEL_DEFAULT_FAILOVER_TIMEOUT	src/sentinel.c	83;"	d	file:
SENTINEL_DEFAULT_PARALLEL_SYNCS	src/sentinel.c	81;"	d	file:
SENTINEL_DEFAULT_SLAVE_PRIORITY	src/sentinel.c	79;"	d	file:
SENTINEL_ELECTION_TIMEOUT	src/sentinel.c	85;"	d	file:
SENTINEL_FAILOVER_STATE_NONE	src/sentinel.c	89;"	d	file:
SENTINEL_FAILOVER_STATE_RECONF_SLAVES	src/sentinel.c	94;"	d	file:
SENTINEL_FAILOVER_STATE_SELECT_SLAVE	src/sentinel.c	91;"	d	file:
SENTINEL_FAILOVER_STATE_SEND_SLAVEOF_NOONE	src/sentinel.c	92;"	d	file:
SENTINEL_FAILOVER_STATE_UPDATE_CONFIG	src/sentinel.c	95;"	d	file:
SENTINEL_FAILOVER_STATE_WAIT_PROMOTION	src/sentinel.c	93;"	d	file:
SENTINEL_FAILOVER_STATE_WAIT_START	src/sentinel.c	90;"	d	file:
SENTINEL_GENERATE_EVENT	src/sentinel.c	104;"	d	file:
SENTINEL_HELLO_CHANNEL	src/sentinel.c	76;"	d	file:
SENTINEL_INFO_PERIOD	src/sentinel.c	71;"	d	file:
SENTINEL_ISQR_NOAUTH	src/sentinel.c	2859;"	d	file:
SENTINEL_ISQR_NOQUORUM	src/sentinel.c	2858;"	d	file:
SENTINEL_ISQR_OK	src/sentinel.c	2857;"	d	file:
SENTINEL_LEADER	src/sentinel.c	105;"	d	file:
SENTINEL_MASTER_LINK_STATUS_DOWN	src/sentinel.c	98;"	d	file:
SENTINEL_MASTER_LINK_STATUS_UP	src/sentinel.c	97;"	d	file:
SENTINEL_MAX_DESYNC	src/sentinel.c	86;"	d	file:
SENTINEL_MAX_PENDING_COMMANDS	src/sentinel.c	84;"	d	file:
SENTINEL_MIN_LINK_RECONNECT_PERIOD	src/sentinel.c	82;"	d	file:
SENTINEL_NO_FLAGS	src/sentinel.c	103;"	d	file:
SENTINEL_OBSERVER	src/sentinel.c	106;"	d	file:
SENTINEL_PING_PERIOD	src/sentinel.c	72;"	d	file:
SENTINEL_PUBLISH_PERIOD	src/sentinel.c	74;"	d	file:
SENTINEL_RESET_NO_SENTINELS	src/sentinel.c	1397;"	d	file:
SENTINEL_SCRIPT_MAX_ARGS	src/sentinel.c	666;"	d	file:
SENTINEL_SCRIPT_MAX_QUEUE	src/sentinel.c	111;"	d	file:
SENTINEL_SCRIPT_MAX_RETRY	src/sentinel.c	114;"	d	file:
SENTINEL_SCRIPT_MAX_RUNNING	src/sentinel.c	112;"	d	file:
SENTINEL_SCRIPT_MAX_RUNTIME	src/sentinel.c	113;"	d	file:
SENTINEL_SCRIPT_NONE	src/sentinel.c	109;"	d	file:
SENTINEL_SCRIPT_RETRY_DELAY	src/sentinel.c	115;"	d	file:
SENTINEL_SCRIPT_RUNNING	src/sentinel.c	110;"	d	file:
SENTINEL_SIMFAILURE_CRASH_AFTER_ELECTION	src/sentinel.c	119;"	d	file:
SENTINEL_SIMFAILURE_CRASH_AFTER_PROMOTION	src/sentinel.c	120;"	d	file:
SENTINEL_SIMFAILURE_NONE	src/sentinel.c	118;"	d	file:
SENTINEL_SLAVE_RECONF_TIMEOUT	src/sentinel.c	80;"	d	file:
SENTINEL_TILT_PERIOD	src/sentinel.c	78;"	d	file:
SENTINEL_TILT_TRIGGER	src/sentinel.c	77;"	d	file:
SEPARATOR_CHAR	deps/pmdk/src/tools/pmempool/output.c	64;"	d	file:
SET3	src/rand.c	61;"	d	file:
SETARG_A	deps/lua/src/lopcodes.h	85;"	d
SETARG_B	deps/lua/src/lopcodes.h	89;"	d
SETARG_Bx	deps/lua/src/lopcodes.h	97;"	d
SETARG_C	deps/lua/src/lopcodes.h	93;"	d
SETARG_sBx	deps/lua/src/lopcodes.h	101;"	d
SETLOW	src/rand.c	62;"	d	file:
SET_ATTR_EPROTO_COUNT	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	83;"	d	file:
SET_ATTR_MSG	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^static const struct rpmem_msg_set_attr SET_ATTR_MSG = {$/;"	v	typeref:struct:rpmem_msg_set_attr
SET_ATTR_RESP	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	/^static const struct rpmem_msg_set_attr_resp SET_ATTR_RESP = {$/;"	v	typeref:struct:rpmem_msg_set_attr_resp	file:
SET_ERRNO	src/lzf_d.c	40;"	d	file:
SET_ERRNO	src/lzf_d.c	43;"	d	file:
SET_FLAGS	deps/pmdk/src/examples/librpmem/basic.c	54;"	d	file:
SET_LEAF	deps/pmdk/src/examples/libpmemobj/libart/art.h	188;"	d
SET_NEXT	deps/pmdk/src/examples/librpmem/basic.c	52;"	d	file:
SET_OPCODE	deps/lua/src/lopcodes.h	81;"	d
SET_OP_DIFF	src/server.h	421;"	d
SET_OP_DIFF	src/t_set.c	936;"	d	file:
SET_OP_INTER	src/server.h	422;"	d
SET_OP_INTER	src/t_set.c	937;"	d	file:
SET_OP_UNION	src/server.h	420;"	d
SET_OP_UNION	src/t_set.c	935;"	d	file:
SET_POOLSET_UUID	deps/pmdk/src/examples/librpmem/basic.c	50;"	d	file:
SET_PREV	deps/pmdk/src/examples/librpmem/basic.c	53;"	d	file:
SET_UUID	deps/pmdk/src/examples/librpmem/basic.c	51;"	d	file:
SFIXEDBIT	deps/lua/src/lgc.h	61;"	d
SFMT_ALTI_H	deps/jemalloc/test/include/test/SFMT-alti.h	53;"	d
SFMT_C_	deps/jemalloc/test/src/SFMT.c	48;"	d	file:
SFMT_H	deps/jemalloc/test/include/test/SFMT.h	67;"	d
SFMT_PARAMS11213_H	deps/jemalloc/test/include/test/SFMT-params11213.h	37;"	d
SFMT_PARAMS1279_H	deps/jemalloc/test/include/test/SFMT-params1279.h	37;"	d
SFMT_PARAMS132049_H	deps/jemalloc/test/include/test/SFMT-params132049.h	37;"	d
SFMT_PARAMS19937_H	deps/jemalloc/test/include/test/SFMT-params19937.h	37;"	d
SFMT_PARAMS216091_H	deps/jemalloc/test/include/test/SFMT-params216091.h	37;"	d
SFMT_PARAMS2281_H	deps/jemalloc/test/include/test/SFMT-params2281.h	37;"	d
SFMT_PARAMS4253_H	deps/jemalloc/test/include/test/SFMT-params4253.h	37;"	d
SFMT_PARAMS44497_H	deps/jemalloc/test/include/test/SFMT-params44497.h	37;"	d
SFMT_PARAMS607_H	deps/jemalloc/test/include/test/SFMT-params607.h	37;"	d
SFMT_PARAMS86243_H	deps/jemalloc/test/include/test/SFMT-params86243.h	37;"	d
SFMT_PARAMS_H	deps/jemalloc/test/include/test/SFMT-params.h	37;"	d
SFMT_SSE2_H	deps/jemalloc/test/include/test/SFMT-sse2.h	52;"	d
SHA1Final	src/sha1.c	/^void SHA1Final(unsigned char digest[20], SHA1_CTX* context)$/;"	f
SHA1HANDSOFF	src/sha1.c	22;"	d	file:
SHA1Init	src/sha1.c	/^void SHA1Init(SHA1_CTX* context)$/;"	f
SHA1Transform	src/sha1.c	/^void SHA1Transform(uint32_t state[5], const unsigned char buffer[64])$/;"	f
SHA1Update	src/sha1.c	/^void SHA1Update(SHA1_CTX* context, const unsigned char* data, uint32_t len)$/;"	f
SHA1_CTX	src/sha1.h	/^} SHA1_CTX;$/;"	t	typeref:struct:__anon178
SHA1_H	src/sha1.h	2;"	d
SHELL	deps/jemalloc/Makefile	/^SHELL := \/bin\/sh$/;"	m
SHUTDOWN_NOFLAGS	src/server.h	441;"	d
SHUTDOWN_NOSAVE	src/server.h	444;"	d
SHUTDOWN_SAVE	src/server.h	442;"	d
SHUTDOWN_STATE_RESERVED_LEN_V1	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	56;"	d	file:
SHUTDOWN_STATE_SIZE_V1	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	55;"	d	file:
SI	tests/instances.tcl	/^proc SI {n field} {$/;"	p
SIG	deps/pmdk/src/test/util_poolset/util_poolset.c	52;"	d	file:
SIGACTION	deps/pmdk/src/test/unittest/unittest.h	558;"	d
SIGNALMAX	deps/pmdk/src/test/tools/ctrld/signals_freebsd.h	76;"	d
SIGNALMAX	deps/pmdk/src/test/tools/ctrld/signals_linux.h	73;"	d
SIGNAL_2_STR	deps/pmdk/src/test/tools/ctrld/signals_freebsd.h	39;"	d
SIGNAL_2_STR	deps/pmdk/src/test/tools/ctrld/signals_linux.h	39;"	d
SIGNATURE_LEN	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	45;"	d	file:
SIG_ATOMIC_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	200;"	d
SIG_ATOMIC_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	199;"	d
SIZE	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	56;"	d	file:
SIZE	deps/pmdk/src/test/unittest/ut_backtrace.c	124;"	d	file:
SIZEOF_ALIGNED_ULOG	deps/pmdk/src/libpmemobj/ulog.h	96;"	d
SIZEOF_CHUNK_HEADER_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	49;"	d	file:
SIZEOF_CHUNK_RUN_HEADER_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	52;"	d	file:
SIZEOF_CHUNK_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	51;"	d	file:
SIZEOF_COMPACT_ALLOCATION_HEADER_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	58;"	d	file:
SIZEOF_HEAP_HDR_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	56;"	d	file:
SIZEOF_LANE_REDO_EXTERNAL_SIZE	deps/pmdk/src/test/obj_layout/obj_layout.c	72;"	d	file:
SIZEOF_LANE_REDO_EXTERNAL_SIZE	deps/pmdk/src/test/obj_layout/obj_layout.c	76;"	d	file:
SIZEOF_LANE_REDO_INTERNAL_SIZE	deps/pmdk/src/test/obj_layout/obj_layout.c	73;"	d	file:
SIZEOF_LANE_REDO_INTERNAL_SIZE	deps/pmdk/src/test/obj_layout/obj_layout.c	77;"	d	file:
SIZEOF_LANE_SECTION_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	63;"	d	file:
SIZEOF_LANE_UNDO_SIZE	deps/pmdk/src/test/obj_layout/obj_layout.c	71;"	d	file:
SIZEOF_LANE_UNDO_SIZE	deps/pmdk/src/test/obj_layout/obj_layout.c	75;"	d	file:
SIZEOF_LANE_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	64;"	d	file:
SIZEOF_LEGACY_ALLOCATION_HEADER_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	57;"	d	file:
SIZEOF_LIST_ENTRY_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	61;"	d	file:
SIZEOF_LIST_HEAD_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	62;"	d	file:
SIZEOF_LOCK_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	59;"	d	file:
SIZEOF_PMEMOID_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	60;"	d	file:
SIZEOF_PTR	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	301;"	d
SIZEOF_RUN	deps/pmdk/src/libpmemobj/memblock.c	60;"	d	file:
SIZEOF_SECTION	deps/pmdk/src/benchmarks/config_reader_win.cpp	52;"	d	file:
SIZEOF_ULOG	deps/pmdk/src/libpmemobj/ulog.h	85;"	d
SIZEOF_ULOG_BASE_ENTRY_V4	deps/pmdk/src/test/obj_layout/obj_layout.c	66;"	d	file:
SIZEOF_ULOG_BUF_ENTRY_V4	deps/pmdk/src/test/obj_layout/obj_layout.c	68;"	d	file:
SIZEOF_ULOG_V4	deps/pmdk/src/test/obj_layout/obj_layout.c	65;"	d	file:
SIZEOF_ULOG_VAL_ENTRY_V4	deps/pmdk/src/test/obj_layout/obj_layout.c	67;"	d	file:
SIZEOF_ZONE_HEADER_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	53;"	d	file:
SIZEOF_ZONE_METADATA_V3	deps/pmdk/src/test/obj_layout/obj_layout.c	54;"	d	file:
SIZE_A	deps/lua/src/lopcodes.h	40;"	d
SIZE_AUTODETECT_STR	deps/pmdk/src/common/set.c	75;"	d	file:
SIZE_B	deps/lua/src/lopcodes.h	38;"	d
SIZE_Bx	deps/lua/src/lopcodes.h	39;"	d
SIZE_C	deps/lua/src/lopcodes.h	37;"	d
SIZE_CLASSES	deps/jemalloc/include/jemalloc/internal/size_classes.h	185;"	d
SIZE_CLASSES	deps/jemalloc/include/jemalloc/internal/size_classes.h	35;"	d
SIZE_CLASSES_DEFINED	deps/jemalloc/include/jemalloc/internal/size_classes.h	171;"	d
SIZE_CLASSES_DEFINED	deps/jemalloc/include/jemalloc/internal/size_classes.h	481;"	d
SIZE_CLASSES_DEFINED	deps/jemalloc/include/jemalloc/internal/size_classes.h	497;"	d
SIZE_INV	deps/jemalloc/include/jemalloc/internal/arena.h	1193;"	d
SIZE_INV	deps/jemalloc/include/jemalloc/internal/arena.h	1211;"	d
SIZE_INV_SHIFT	deps/jemalloc/include/jemalloc/internal/arena.h	1192;"	d
SIZE_INV_SHIFT	deps/jemalloc/include/jemalloc/internal/arena.h	1212;"	d
SIZE_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	204;"	d
SIZE_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	206;"	d
SIZE_OP	deps/lua/src/lopcodes.h	42;"	d
SIZE_PER_KEY	deps/pmdk/src/benchmarks/map_bench.cpp	77;"	d	file:
SIZE_PER_LANE	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	57;"	d	file:
SIZE_SAFETY_LIMIT	src/quicklist.c	51;"	d	file:
SIZE_TO_CLASS_MAP_INDEX	deps/pmdk/src/libpmemobj/alloc_class.c	120;"	d	file:
SIZE_T_MAX	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h	37;"	d
SIZE_T_MAX	deps/jemalloc/test/include/test/jemalloc_test.h	3;"	d
SKIPLIST_LEVELS_NUM	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	43;"	d	file:
SKIPLIST_MAP_H	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.h	38;"	d
SKIPLIST_MAP_TYPE_OFFSET	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.h	43;"	d
SKIP_OFFSET	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	48;"	d	file:
SL1	deps/jemalloc/test/include/test/SFMT-params11213.h	40;"	d
SL1	deps/jemalloc/test/include/test/SFMT-params1279.h	40;"	d
SL1	deps/jemalloc/test/include/test/SFMT-params132049.h	40;"	d
SL1	deps/jemalloc/test/include/test/SFMT-params19937.h	40;"	d
SL1	deps/jemalloc/test/include/test/SFMT-params216091.h	40;"	d
SL1	deps/jemalloc/test/include/test/SFMT-params2281.h	40;"	d
SL1	deps/jemalloc/test/include/test/SFMT-params4253.h	40;"	d
SL1	deps/jemalloc/test/include/test/SFMT-params44497.h	40;"	d
SL1	deps/jemalloc/test/include/test/SFMT-params607.h	40;"	d
SL1	deps/jemalloc/test/include/test/SFMT-params86243.h	40;"	d
SL2	deps/jemalloc/test/include/test/SFMT-params11213.h	41;"	d
SL2	deps/jemalloc/test/include/test/SFMT-params1279.h	41;"	d
SL2	deps/jemalloc/test/include/test/SFMT-params132049.h	41;"	d
SL2	deps/jemalloc/test/include/test/SFMT-params19937.h	41;"	d
SL2	deps/jemalloc/test/include/test/SFMT-params216091.h	41;"	d
SL2	deps/jemalloc/test/include/test/SFMT-params2281.h	41;"	d
SL2	deps/jemalloc/test/include/test/SFMT-params4253.h	41;"	d
SL2	deps/jemalloc/test/include/test/SFMT-params44497.h	41;"	d
SL2	deps/jemalloc/test/include/test/SFMT-params607.h	41;"	d
SL2	deps/jemalloc/test/include/test/SFMT-params86243.h	41;"	d
SLAB_ALLOCATOR_H	deps/pmdk/src/examples/libpmemobj/slab_allocator/slab_allocator.h	38;"	d
SLAVE_CAPA_EOF	src/server.h	367;"	d
SLAVE_CAPA_NONE	src/server.h	366;"	d
SLAVE_STATE_ONLINE	src/server.h	363;"	d
SLAVE_STATE_SEND_BULK	src/server.h	362;"	d
SLAVE_STATE_WAIT_BGSAVE_END	src/server.h	361;"	d
SLAVE_STATE_WAIT_BGSAVE_START	src/server.h	360;"	d
SLICE	deps/pmdk/src/libpmemobj/critnib.c	107;"	d	file:
SLNODES	deps/pmdk/src/libpmemobj/critnib.c	109;"	d	file:
SLOWLOG_ENTRY_MAX_ARGC	src/slowlog.h	30;"	d
SLOWLOG_ENTRY_MAX_STRING	src/slowlog.h	31;"	d
SMALL_MAXCLASS	deps/jemalloc/include/jemalloc/internal/size_classes.h	179;"	d
SMALL_MAXCLASS	deps/jemalloc/include/jemalloc/internal/size_classes.h	489;"	d
SMOOTHSTEP	deps/jemalloc/include/jemalloc/internal/smoothstep.h	27;"	d
SMOOTHSTEP_BFP	deps/jemalloc/include/jemalloc/internal/smoothstep.h	26;"	d
SMOOTHSTEP_NSTEPS	deps/jemalloc/include/jemalloc/internal/smoothstep.h	25;"	d
SMOOTHSTEP_VARIANT	deps/jemalloc/include/jemalloc/internal/smoothstep.h	24;"	d
SO	deps/jemalloc/Makefile	/^SO := so$/;"	m
SOCK_NLANES	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	60;"	d	file:
SOREV	deps/jemalloc/Makefile	/^SOREV = so.2$/;"	m
SORT_ASC	src/geo.c	454;"	d	file:
SORT_DESC	src/geo.c	455;"	d	file:
SORT_NONE	src/geo.c	453;"	d	file:
SORT_OP_GET	src/server.h	377;"	d
SOURCE	deps/pmdk/src/libpmem/Makefile	/^SOURCE =\\$/;"	m
SOURCE	deps/pmdk/src/libpmem2/Makefile	/^SOURCE =\\$/;"	m
SOURCE	deps/pmdk/src/librpmem/Makefile	/^SOURCE = $(COMMON)\/alloc.c\\$/;"	m
SPARKLINE_FILL	src/sparkline.h	47;"	d
SPARKLINE_LOG_SCALE	src/sparkline.h	48;"	d
SPARKLINE_NO_FLAGS	src/sparkline.h	46;"	d
SPARSE_TARGETS	deps/pmdk/src/Makefile	/^SPARSE_TARGETS = $(POSSIBLE_TARGETS)$/;"	m
SPECIALS	deps/lua/src/lstrlib.c	183;"	d	file:
SPLIT_INDEX	deps/jemalloc/test/unit/qr.c	6;"	d	file:
SPOP_MOVE_STRATEGY_MUL	src/t_set.c	409;"	d	file:
SPT	src/setproctitle.c	/^} SPT;$/;"	v	typeref:struct:__anon183	file:
SPT_MAXTITLE	src/setproctitle.c	213;"	d	file:
SPT_MIN	src/setproctitle.c	67;"	d	file:
SParser	deps/lua/src/ldo.c	/^struct SParser {  \/* data to `f_parser' *\/$/;"	s	file:
SR1	deps/jemalloc/test/include/test/SFMT-params11213.h	42;"	d
SR1	deps/jemalloc/test/include/test/SFMT-params1279.h	42;"	d
SR1	deps/jemalloc/test/include/test/SFMT-params132049.h	42;"	d
SR1	deps/jemalloc/test/include/test/SFMT-params19937.h	42;"	d
SR1	deps/jemalloc/test/include/test/SFMT-params216091.h	42;"	d
SR1	deps/jemalloc/test/include/test/SFMT-params2281.h	42;"	d
SR1	deps/jemalloc/test/include/test/SFMT-params4253.h	42;"	d
SR1	deps/jemalloc/test/include/test/SFMT-params44497.h	42;"	d
SR1	deps/jemalloc/test/include/test/SFMT-params607.h	42;"	d
SR1	deps/jemalloc/test/include/test/SFMT-params86243.h	42;"	d
SR2	deps/jemalloc/test/include/test/SFMT-params11213.h	43;"	d
SR2	deps/jemalloc/test/include/test/SFMT-params1279.h	43;"	d
SR2	deps/jemalloc/test/include/test/SFMT-params132049.h	43;"	d
SR2	deps/jemalloc/test/include/test/SFMT-params19937.h	43;"	d
SR2	deps/jemalloc/test/include/test/SFMT-params216091.h	43;"	d
SR2	deps/jemalloc/test/include/test/SFMT-params2281.h	43;"	d
SR2	deps/jemalloc/test/include/test/SFMT-params4253.h	43;"	d
SR2	deps/jemalloc/test/include/test/SFMT-params44497.h	43;"	d
SR2	deps/jemalloc/test/include/test/SFMT-params607.h	43;"	d
SR2	deps/jemalloc/test/include/test/SFMT-params86243.h	43;"	d
SRANDMEMBER_SUB_STRATEGY_MUL	src/t_set.c	620;"	d	file:
SRC	deps/lua/etc/Makefile	/^SRC= $(TOP)\/src$/;"	m
SRC	deps/pmdk/src/benchmarks/Makefile	/^SRC=pmembench.cpp\\$/;"	m
SRCCOLOR	deps/Makefile	/^SRCCOLOR="\\033[33m"$/;"	m
SRCCOLOR	src/Makefile	/^SRCCOLOR="\\033[33m"$/;"	m
SRCVERSION	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	71;"	d	file:
SRI_FAILOVER_IN_PROGRESS	src/sentinel.c	61;"	d	file:
SRI_FORCE_FAILOVER	src/sentinel.c	67;"	d	file:
SRI_MASTER	src/sentinel.c	54;"	d	file:
SRI_MASTER_DOWN	src/sentinel.c	59;"	d	file:
SRI_O_DOWN	src/sentinel.c	58;"	d	file:
SRI_PROMOTED	src/sentinel.c	63;"	d	file:
SRI_RECONF_DONE	src/sentinel.c	66;"	d	file:
SRI_RECONF_INPROG	src/sentinel.c	65;"	d	file:
SRI_RECONF_SENT	src/sentinel.c	64;"	d	file:
SRI_SCRIPT_KILL_SENT	src/sentinel.c	68;"	d	file:
SRI_SENTINEL	src/sentinel.c	56;"	d	file:
SRI_SLAVE	src/sentinel.c	55;"	d	file:
SRI_S_DOWN	src/sentinel.c	57;"	d	file:
SS	deps/lua/src/print.c	158;"	d	file:
SSE2_AVAILABLE	deps/pmdk/src/libpmem/x86_64/memcpy_memset.h	85;"	d
SSH_EXE	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	947;"	d	file:
STANDALONE	src/lzfP.h	40;"	d
START	deps/pmdk/src/test/unittest/unittest.h	172;"	d
START	deps/pmdk/src/test/unittest/unittest.h	175;"	d
STARTW	deps/pmdk/src/test/unittest/unittest.h	189;"	d
STAT	deps/pmdk/src/test/unittest/unittest.h	503;"	d
STATIC_LIBS	deps/jemalloc/Makefile	/^STATIC_LIBS := $(objroot)lib\/$(LIBJEMALLOC).$(A)$/;"	m
STATS_CTL_HANDLER	deps/pmdk/src/libpmemobj/stats.h	117;"	d
STATS_CTL_LEAF	deps/pmdk/src/libpmemobj/stats.h	112;"	d
STATS_INC	deps/pmdk/src/libpmemobj/stats.h	62;"	d
STATS_INC_persistent	deps/pmdk/src/libpmemobj/stats.h	72;"	d
STATS_INC_transient	deps/pmdk/src/libpmemobj/stats.h	66;"	d
STATS_METRIC_COMMAND	src/server.h	190;"	d
STATS_METRIC_COUNT	src/server.h	193;"	d
STATS_METRIC_NET_INPUT	src/server.h	191;"	d
STATS_METRIC_NET_OUTPUT	src/server.h	192;"	d
STATS_METRIC_SAMPLES	src/server.h	189;"	d
STATS_SET	deps/pmdk/src/libpmemobj/stats.h	94;"	d
STATS_SET_persistent	deps/pmdk/src/libpmemobj/stats.h	105;"	d
STATS_SET_transient	deps/pmdk/src/libpmemobj/stats.h	98;"	d
STATS_SUB	deps/pmdk/src/libpmemobj/stats.h	78;"	d
STATS_SUB_persistent	deps/pmdk/src/libpmemobj/stats.h	88;"	d
STATS_SUB_transient	deps/pmdk/src/libpmemobj/stats.h	82;"	d
STATUS_INFO_LENGTH_MISMATCH	deps/pmdk/src/test/unittest/ut.c	553;"	d	file:
STATW	deps/pmdk/src/test/unittest/unittest.h	506;"	d
STD	deps/geohash-int/Makefile	/^STD=$/;"	m
STD	deps/linenoise/Makefile	/^STD=$/;"	m
STD	src/Makefile	/^STD=-std=c99 -pedantic -DREDIS_STATIC=''$/;"	m
STDERR_FILENO	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h	55;"	d
STEP	deps/jemalloc/src/arena.c	1279;"	d	file:
STEP	deps/jemalloc/src/arena.c	1282;"	d	file:
STEP	deps/jemalloc/test/unit/smoothstep.c	4;"	d	file:
STEP	deps/jemalloc/test/unit/smoothstep.c	7;"	d	file:
STEP	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	60;"	d	file:
STEP	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	77;"	d	file:
STEP	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	198;"	d	file:
STLIBNAME	deps/hiredis/Makefile	/^STLIBNAME=$(LIBNAME).$(STLIBSUFFIX)$/;"	m
STLIBSUFFIX	deps/hiredis/Makefile	/^STLIBSUFFIX=a$/;"	m
STLIB_MAKE_CMD	deps/hiredis/Makefile	/^STLIB_MAKE_CMD=ar rcs $(STLIBNAME)$/;"	m
STORE_SIZE	deps/pmdk/src/test/pmreorder_flushes/pmreorder_flushes.c	50;"	d	file:
STR	deps/pmdk/src/test/tools/pmemspoil/spoil.c	63;"	d	file:
STR	deps/pmdk/src/test/unittest/unittest.h	731;"	d
STR	deps/pmdk/src/tools/pmempool/output.c	53;"	d	file:
STRBUF_DEFAULT_INCREMENT	deps/lua/src/strbuf.h	48;"	d
STRBUF_DEFAULT_SIZE	deps/lua/src/strbuf.h	45;"	d
STRDUP	deps/pmdk/src/test/unittest/unittest.h	359;"	d
STRICT_ALIGN	src/lzfP.h	175;"	d
STRICT_ALIGN	src/lzfP.h	176;"	d
STRICT_ALIGN	src/lzfP.h	82;"	d
STRINGIFY	deps/jemalloc/test/unit/quarantine.c	5;"	d	file:
STRINGIFY_HELPER	deps/jemalloc/test/unit/quarantine.c	4;"	d	file:
STRTOI	deps/pmdk/src/test/unittest/unittest.h	534;"	d
STRTOL	deps/pmdk/src/test/unittest/unittest.h	525;"	d
STRTOLL	deps/pmdk/src/test/unittest/unittest.h	528;"	d
STRTOU	deps/pmdk/src/test/unittest/unittest.h	531;"	d
STRTOUL	deps/pmdk/src/test/unittest/unittest.h	522;"	d
STRTOULL	deps/pmdk/src/test/unittest/unittest.h	519;"	d
STRUCT_INT	deps/lua/src/lua_struct.c	49;"	d	file:
STR_BUFF_SIZE	deps/pmdk/src/benchmarks/clo.cpp	68;"	d	file:
STR_MAX	deps/pmdk/src/libpmempool/check_util.c	58;"	d	file:
STR_MAX	deps/pmdk/src/tools/pmempool/output.c	75;"	d	file:
STR_MODE_CREATE	deps/pmdk/utils/check_license/check-license.c	66;"	d	file:
STR_MODE_LICENSE	deps/pmdk/utils/check_license/check-license.c	68;"	d	file:
STR_MODE_PATTERN	deps/pmdk/utils/check_license/check-license.c	67;"	d	file:
STR_REALTIME_SIGNAL	deps/pmdk/src/common/os_windows.c	618;"	d	file:
STR_SIZE	deps/pmdk/src/examples/librpmem/hello.c	56;"	d	file:
STR_UNKNOWN_SIGNAL	deps/pmdk/src/common/os_windows.c	619;"	d	file:
SUFFIX_LEN	deps/pmdk/src/common/util.c	65;"	d	file:
SUPERVISED_AUTODETECT	src/server.h	389;"	d
SUPERVISED_NONE	src/server.h	388;"	d
SUPERVISED_SYSTEMD	src/server.h	390;"	d
SUPERVISED_UPSTART	src/server.h	391;"	d
SUPP_SYNC_FILES	deps/pmdk/src/test/Makefile	/^SUPP_SYNC_FILES=$(shell echo *.supp | sed s\/supp\/$(SYNC_EXT)\/g)$/;"	m
SWAPINIT	src/pqsort.c	65;"	d	file:
SYNCIO__RESOLUTION	src/syncio.c	43;"	d	file:
SYNC_CMD_FULL	src/replication.c	1180;"	d	file:
SYNC_CMD_READ	src/replication.c	1178;"	d	file:
SYNC_CMD_WRITE	src/replication.c	1179;"	d	file:
SYNC_EXT	deps/pmdk/src/test/Makefile	/^SYNC_EXT=synced$/;"	m
SYSTEM_HANDLE_INFORMATION_EX	deps/pmdk/src/test/unittest/ut.c	/^} SYSTEM_HANDLE_INFORMATION_EX, *PSYSTEM_HANDLE_INFORMATION_EX;$/;"	t	typeref:struct:_SYSTEM_HANDLE_INFORMATION_EX	file:
SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	deps/pmdk/src/test/unittest/ut.c	/^} SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX, *PSYSTEM_HANDLE_TABLE_ENTRY_INFO_EX;$/;"	t	typeref:struct:_SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	file:
SYS_MMAN_H	deps/pmdk/src/windows/include/sys/mman.h	38;"	d
SYS_PARAM_H	deps/pmdk/src/windows/include/sys/param.h	38;"	d
SYS_UIO_H	deps/pmdk/src/windows/include/sys/uio.h	38;"	d
SYS_write	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h	15;"	d
SZ	deps/jemalloc/test/unit/pack.c	15;"	d	file:
SZ	deps/jemalloc/test/unit/pack.c	17;"	d	file:
SZ	deps/jemalloc/test/unit/quarantine.c	24;"	d	file:
SZ	deps/jemalloc/test/unit/quarantine.c	55;"	d	file:
S_DAY	deps/pmdk/src/test/tools/ctrld/ctrld.c	69;"	d	file:
S_HOUR	deps/pmdk/src/test/tools/ctrld/ctrld.c	68;"	d	file:
S_IRGRP	deps/pmdk/src/windows/include/platform.h	107;"	d
S_IRUSR	deps/pmdk/src/windows/include/platform.h	105;"	d
S_ISBLK	deps/pmdk/src/windows/include/unistd.h	104;"	d
S_ISCHR	deps/pmdk/src/common/file.h	138;"	d
S_ISDIR	deps/pmdk/src/common/file.h	139;"	d
S_IWGRP	deps/pmdk/src/windows/include/platform.h	108;"	d
S_IWUSR	deps/pmdk/src/windows/include/platform.h	106;"	d
S_MINUTE	deps/pmdk/src/test/tools/ctrld/ctrld.c	67;"	d	file:
Scratch	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^static char *Scratch;$/;"	v	file:
SecurityRequired	deps/pmdk/src/test/unittest/ut.c	/^	BOOLEAN SecurityRequired;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
Seed	deps/pmdk/src/test/blk_rw_mt/blk_rw_mt.c	/^static unsigned Seed;$/;"	v	file:
SemInfo	deps/lua/src/llex.h	/^} SemInfo;  \/* semantics information *\/$/;"	t	typeref:union:__anon33
Short	deps/pmdk/src/test/unittest/context.py	/^class Short(_TestType):$/;"	c
Sig	deps/pmdk/src/libpmemblk/btt.c	/^static const char Sig[] = BTTINFO_SIG;$/;"	v	file:
Sigactions	deps/pmdk/src/test/unittest/ut_signal.c	/^static struct sigaction Sigactions[NSIG];$/;"	v	typeref:struct:sigaction	file:
Sigactions_lock	deps/pmdk/src/test/unittest/ut.c	/^os_mutex_t Sigactions_lock;$/;"	v
Signature	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^static const char *Signature = "OBJ_VERIFY";$/;"	v	file:
Size	deps/pmdk/src/test/pmem_is_pmem/pmem_is_pmem.c	/^static size_t Size;$/;"	v	file:
Size	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^static size_t Size;$/;"	v	file:
Sizeof	deps/lua/src/print.c	20;"	d	file:
Skip	deps/pmdk/src/test/unittest/futils.py	/^class Skip(Exception):$/;"	c
SlicePartialReorderEngine	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^class SlicePartialReorderEngine:$/;"	c
Smain	deps/lua/src/lua.c	/^struct Smain {$/;"	s	file:
Smain	deps/lua/src/luac.c	/^struct Smain {$/;"	s	file:
Src	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^static char *Src;$/;"	v	file:
StackTrace	deps/pmdk/src/tools/pmreorder/utils.py	/^class StackTrace:$/;"	c
State	deps/pmdk/src/tools/pmreorder/statemachine.py	/^class State:$/;"	c
StateMachine	deps/pmdk/src/tools/pmreorder/statemachine.py	/^class StateMachine:$/;"	c
Static_Debug	deps/pmdk/src/test/unittest/context.py	/^    class Static_Debug(_Build):$/;"	c
Static_Release	deps/pmdk/src/test/unittest/context.py	/^    class Static_Release(_Build):$/;"	c
StkId	deps/lua/src/lobject.h	/^typedef TValue *StkId;  \/* index to stack elements *\/$/;"	t
Store	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^class Store(BaseOperation, Rangeable):$/;"	c
Strdup	deps/pmdk/src/common/alloc.c	/^Strdup_func Strdup = strdup;$/;"	v
Strdup_func	deps/pmdk/src/common/alloc.h	/^typedef char *(*Strdup_func)(const char *s);$/;"	t
Suppressed	deps/pmdk/src/test/unittest/unittest.h	/^static BOOL Suppressed = FALSE;$/;"	v
SystemExtendedHandleInformation	deps/pmdk/src/test/unittest/ut.c	556;"	d	file:
TAB	deps/linenoise/linenoise.c	/^	TAB = 9,            \/* Tab *\/$/;"	e	enum:KEY_ACTION	file:
TARGET	deps/pmdk/src/benchmarks/Makefile	/^TARGET = $(BENCHMARK)$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^all     : TARGET = all$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^check   : TARGET = check$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^clean   : TARGET = clean$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^clobber : TARGET = clobber$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^cstyle  : TARGET = cstyle$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^format  : TARGET = format$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^pcheck  : TARGET = pcheck$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^pcheck-blk: TARGET = pcheck$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^pcheck-libpmempool: TARGET = pcheck$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^pcheck-local-quiet: TARGET = pcheck$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^pcheck-log: TARGET = pcheck$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^pcheck-obj: TARGET = pcheck$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^pcheck-other: TARGET = pcheck$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^pcheck-pmem: TARGET = pcheck$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^pcheck-pmempool: TARGET = pcheck$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^pcheck-remote: TARGET = pcheck$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^pcheck-rpmem: TARGET = pcheck$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^pycheck : TARGET = pycheck$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^sparse  : TARGET = sparse$/;"	m
TARGET	deps/pmdk/src/test/Makefile	/^test    : TARGET = test$/;"	m
TARGET	deps/pmdk/src/test/arch_flags/Makefile	/^TARGET = arch_flags$/;"	m
TARGET	deps/pmdk/src/test/blk_include/Makefile	/^TARGET = blk_include$/;"	m
TARGET	deps/pmdk/src/test/blk_nblock/Makefile	/^TARGET = blk_nblock$/;"	m
TARGET	deps/pmdk/src/test/blk_non_zero/Makefile	/^TARGET = blk_non_zero$/;"	m
TARGET	deps/pmdk/src/test/blk_pool/Makefile	/^TARGET = blk_pool$/;"	m
TARGET	deps/pmdk/src/test/blk_pool_lock/Makefile	/^TARGET = blk_pool_lock$/;"	m
TARGET	deps/pmdk/src/test/blk_recovery/Makefile	/^TARGET = blk_recovery$/;"	m
TARGET	deps/pmdk/src/test/blk_rw/Makefile	/^TARGET = blk_rw$/;"	m
TARGET	deps/pmdk/src/test/blk_rw_mt/Makefile	/^TARGET = blk_rw_mt$/;"	m
TARGET	deps/pmdk/src/test/checksum/Makefile	/^TARGET = checksum$/;"	m
TARGET	deps/pmdk/src/test/compat_incompat_features/Makefile	/^TARGET = pool_open$/;"	m
TARGET	deps/pmdk/src/test/ctl_cow/Makefile	/^TARGET = ctl_cow$/;"	m
TARGET	deps/pmdk/src/test/ctl_prefault/Makefile	/^TARGET = ctl_prefault$/;"	m
TARGET	deps/pmdk/src/test/ex_linkedlist/Makefile	/^TARGET = ex_linkedlist$/;"	m
TARGET	deps/pmdk/src/test/getopt/Makefile	/^TARGET = getopt$/;"	m
TARGET	deps/pmdk/src/test/libpmempool_api/Makefile	/^TARGET = libpmempool_test$/;"	m
TARGET	deps/pmdk/src/test/libpmempool_check_version/Makefile	/^TARGET = libpmempool_check_version$/;"	m
TARGET	deps/pmdk/src/test/libpmempool_feature/Makefile	/^TARGET = libpmempool_feature$/;"	m
TARGET	deps/pmdk/src/test/libpmempool_include/Makefile	/^TARGET = libpmempool_include$/;"	m
TARGET	deps/pmdk/src/test/libpmempool_rm/Makefile	/^TARGET = libpmempool_rm$/;"	m
TARGET	deps/pmdk/src/test/libpmempool_sync/Makefile	/^TARGET = libpmempool_sync$/;"	m
TARGET	deps/pmdk/src/test/libpmempool_transform/Makefile	/^TARGET = libpmempool_transform$/;"	m
TARGET	deps/pmdk/src/test/log_basic/Makefile	/^TARGET = log_basic$/;"	m
TARGET	deps/pmdk/src/test/log_include/Makefile	/^TARGET = log_include$/;"	m
TARGET	deps/pmdk/src/test/log_pool/Makefile	/^TARGET = log_pool$/;"	m
TARGET	deps/pmdk/src/test/log_pool_lock/Makefile	/^TARGET = log_pool_lock$/;"	m
TARGET	deps/pmdk/src/test/log_recovery/Makefile	/^TARGET = log_recovery$/;"	m
TARGET	deps/pmdk/src/test/log_walker/Makefile	/^TARGET = log_walker$/;"	m
TARGET	deps/pmdk/src/test/mmap/Makefile	/^TARGET = mmap$/;"	m
TARGET	deps/pmdk/src/test/mmap_fixed/Makefile	/^TARGET = mmap_fixed$/;"	m
TARGET	deps/pmdk/src/test/obj_action/Makefile	/^TARGET = obj_action$/;"	m
TARGET	deps/pmdk/src/test/obj_alloc/Makefile	/^TARGET = obj_alloc$/;"	m
TARGET	deps/pmdk/src/test/obj_badblock/Makefile	/^TARGET = obj_badblock$/;"	m
TARGET	deps/pmdk/src/test/obj_basic_integration/Makefile	/^TARGET = obj_basic_integration$/;"	m
TARGET	deps/pmdk/src/test/obj_bucket/Makefile	/^TARGET = obj_bucket$/;"	m
TARGET	deps/pmdk/src/test/obj_check/Makefile	/^TARGET = obj_check$/;"	m
TARGET	deps/pmdk/src/test/obj_check_remote/Makefile	/^TARGET = obj_check_remote$/;"	m
TARGET	deps/pmdk/src/test/obj_constructor/Makefile	/^TARGET = obj_constructor$/;"	m
TARGET	deps/pmdk/src/test/obj_critnib/Makefile	/^TARGET = obj_critnib$/;"	m
TARGET	deps/pmdk/src/test/obj_critnib_mt/Makefile	/^TARGET = obj_critnib_mt$/;"	m
TARGET	deps/pmdk/src/test/obj_ctl_alignment/Makefile	/^TARGET = obj_ctl_alignment$/;"	m
TARGET	deps/pmdk/src/test/obj_ctl_alloc_class/Makefile	/^TARGET = obj_ctl_alloc_class$/;"	m
TARGET	deps/pmdk/src/test/obj_ctl_alloc_class_config/Makefile	/^TARGET = obj_ctl_alloc_class_config$/;"	m
TARGET	deps/pmdk/src/test/obj_ctl_arenas/Makefile	/^TARGET = obj_ctl_arenas$/;"	m
TARGET	deps/pmdk/src/test/obj_ctl_config/Makefile	/^TARGET = obj_ctl_config$/;"	m
TARGET	deps/pmdk/src/test/obj_ctl_debug/Makefile	/^TARGET = obj_ctl_debug$/;"	m
TARGET	deps/pmdk/src/test/obj_ctl_heap_size/Makefile	/^TARGET = obj_ctl_heap_size$/;"	m
TARGET	deps/pmdk/src/test/obj_ctl_stats/Makefile	/^TARGET = obj_ctl_stats$/;"	m
TARGET	deps/pmdk/src/test/obj_debug/Makefile	/^TARGET = obj_debug$/;"	m
TARGET	deps/pmdk/src/test/obj_defrag/Makefile	/^TARGET = obj_defrag$/;"	m
TARGET	deps/pmdk/src/test/obj_defrag_advanced/Makefile	/^TARGET = obj_defrag_advanced$/;"	m
TARGET	deps/pmdk/src/test/obj_direct/Makefile	/^TARGET = obj_direct$/;"	m
TARGET	deps/pmdk/src/test/obj_direct_volatile/Makefile	/^TARGET = obj_direct_volatile$/;"	m
TARGET	deps/pmdk/src/test/obj_extend/Makefile	/^TARGET = obj_extend$/;"	m
TARGET	deps/pmdk/src/test/obj_first_next/Makefile	/^TARGET = obj_first_next$/;"	m
TARGET	deps/pmdk/src/test/obj_fragmentation/Makefile	/^TARGET = obj_fragmentation$/;"	m
TARGET	deps/pmdk/src/test/obj_fragmentation2/Makefile	/^TARGET = obj_fragmentation2$/;"	m
TARGET	deps/pmdk/src/test/obj_heap/Makefile	/^TARGET = obj_heap$/;"	m
TARGET	deps/pmdk/src/test/obj_heap_interrupt/Makefile	/^TARGET = obj_heap_interrupt$/;"	m
TARGET	deps/pmdk/src/test/obj_heap_state/Makefile	/^TARGET = obj_heap_state$/;"	m
TARGET	deps/pmdk/src/test/obj_include/Makefile	/^TARGET = obj_include$/;"	m
TARGET	deps/pmdk/src/test/obj_lane/Makefile	/^TARGET = obj_lane$/;"	m
TARGET	deps/pmdk/src/test/obj_layout/Makefile	/^TARGET = obj_layout$/;"	m
TARGET	deps/pmdk/src/test/obj_list/Makefile	/^TARGET = obj_list$/;"	m
TARGET	deps/pmdk/src/test/obj_list_macro/Makefile	/^TARGET = obj_list_macro$/;"	m
TARGET	deps/pmdk/src/test/obj_locks/Makefile	/^TARGET = obj_locks$/;"	m
TARGET	deps/pmdk/src/test/obj_many_size_allocs/Makefile	/^TARGET = obj_many_size_allocs$/;"	m
TARGET	deps/pmdk/src/test/obj_mem/Makefile	/^TARGET = obj_mem$/;"	m
TARGET	deps/pmdk/src/test/obj_memblock/Makefile	/^TARGET = obj_memblock$/;"	m
TARGET	deps/pmdk/src/test/obj_memcheck/Makefile	/^TARGET = obj_memcheck$/;"	m
TARGET	deps/pmdk/src/test/obj_memcheck_register/Makefile	/^TARGET = obj_memcheck_register$/;"	m
TARGET	deps/pmdk/src/test/obj_memops/Makefile	/^TARGET = obj_memops$/;"	m
TARGET	deps/pmdk/src/test/obj_oid_thread/Makefile	/^TARGET = obj_oid_thread$/;"	m
TARGET	deps/pmdk/src/test/obj_out_of_memory/Makefile	/^TARGET = obj_out_of_memory$/;"	m
TARGET	deps/pmdk/src/test/obj_persist_count/Makefile	/^TARGET = obj_persist_count$/;"	m
TARGET	deps/pmdk/src/test/obj_pmalloc_basic/Makefile	/^TARGET = obj_pmalloc_basic$/;"	m
TARGET	deps/pmdk/src/test/obj_pmalloc_mt/Makefile	/^TARGET = obj_pmalloc_mt$/;"	m
TARGET	deps/pmdk/src/test/obj_pmalloc_oom_mt/Makefile	/^TARGET = obj_pmalloc_oom_mt$/;"	m
TARGET	deps/pmdk/src/test/obj_pmalloc_rand_mt/Makefile	/^TARGET = obj_pmalloc_rand_mt$/;"	m
TARGET	deps/pmdk/src/test/obj_pmemcheck/Makefile	/^TARGET = obj_pmemcheck$/;"	m
TARGET	deps/pmdk/src/test/obj_pool/Makefile	/^TARGET = obj_pool$/;"	m
TARGET	deps/pmdk/src/test/obj_pool_lock/Makefile	/^TARGET = obj_pool_lock$/;"	m
TARGET	deps/pmdk/src/test/obj_pool_lookup/Makefile	/^TARGET = obj_pool_lookup$/;"	m
TARGET	deps/pmdk/src/test/obj_ravl/Makefile	/^TARGET = obj_ravl$/;"	m
TARGET	deps/pmdk/src/test/obj_realloc/Makefile	/^TARGET = obj_realloc$/;"	m
TARGET	deps/pmdk/src/test/obj_recovery/Makefile	/^TARGET = obj_recovery$/;"	m
TARGET	deps/pmdk/src/test/obj_recreate/Makefile	/^TARGET = obj_recreate$/;"	m
TARGET	deps/pmdk/src/test/obj_reorder_basic/Makefile	/^TARGET = obj_reorder_basic$/;"	m
TARGET	deps/pmdk/src/test/obj_root/Makefile	/^TARGET = obj_root$/;"	m
TARGET	deps/pmdk/src/test/obj_sds/Makefile	/^TARGET = obj_sds$/;"	m
TARGET	deps/pmdk/src/test/obj_strdup/Makefile	/^TARGET = obj_strdup$/;"	m
TARGET	deps/pmdk/src/test/obj_sync/Makefile	/^TARGET = obj_sync$/;"	m
TARGET	deps/pmdk/src/test/obj_toid/Makefile	/^TARGET = obj_toid$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_add_range/Makefile	/^TARGET = obj_tx_add_range$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_add_range_direct/Makefile	/^TARGET = obj_tx_add_range_direct$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_alloc/Makefile	/^TARGET = obj_tx_alloc$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_callbacks/Makefile	/^TARGET = obj_tx_callbacks$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_flow/Makefile	/^TARGET = obj_tx_flow$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_free/Makefile	/^TARGET = obj_tx_free$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_invalid/Makefile	/^TARGET = obj_tx_invalid$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_lock/Makefile	/^TARGET = obj_tx_lock$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_locks/Makefile	/^TARGET = obj_tx_locks$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_locks_abort/Makefile	/^TARGET = obj_tx_locks_abort$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_mt/Makefile	/^TARGET = obj_tx_mt$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_realloc/Makefile	/^TARGET = obj_tx_realloc$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_strdup/Makefile	/^TARGET = obj_tx_strdup$/;"	m
TARGET	deps/pmdk/src/test/obj_tx_user_data/Makefile	/^TARGET = obj_tx_user_data$/;"	m
TARGET	deps/pmdk/src/test/obj_ulog_size/Makefile	/^TARGET = obj_ulog_size$/;"	m
TARGET	deps/pmdk/src/test/obj_zones/Makefile	/^TARGET = obj_zones$/;"	m
TARGET	deps/pmdk/src/test/out_err/Makefile	/^TARGET = out_err$/;"	m
TARGET	deps/pmdk/src/test/out_err_mt/Makefile	/^TARGET = out_err_mt$/;"	m
TARGET	deps/pmdk/src/test/pmem2_config/Makefile	/^TARGET = pmem2_config$/;"	m
TARGET	deps/pmdk/src/test/pmem2_include/Makefile	/^TARGET = pmem2_include$/;"	m
TARGET	deps/pmdk/src/test/pmem2_map/Makefile	/^TARGET = pmem2_map$/;"	m
TARGET	deps/pmdk/src/test/pmem_deep_persist/Makefile	/^TARGET = pmem_deep_persist$/;"	m
TARGET	deps/pmdk/src/test/pmem_has_auto_flush/Makefile	/^TARGET = pmem_has_auto_flush$/;"	m
TARGET	deps/pmdk/src/test/pmem_include/Makefile	/^TARGET = pmem_include$/;"	m
TARGET	deps/pmdk/src/test/pmem_is_pmem/Makefile	/^TARGET = pmem_is_pmem$/;"	m
TARGET	deps/pmdk/src/test/pmem_is_pmem_posix/Makefile	/^TARGET = pmem_is_pmem_posix$/;"	m
TARGET	deps/pmdk/src/test/pmem_map_file/Makefile	/^TARGET = pmem_map_file$/;"	m
TARGET	deps/pmdk/src/test/pmem_map_file_trunc/Makefile	/^TARGET = pmem_map_file_trunc$/;"	m
TARGET	deps/pmdk/src/test/pmem_memcpy/Makefile	/^TARGET = pmem_memcpy$/;"	m
TARGET	deps/pmdk/src/test/pmem_memmove/Makefile	/^TARGET = pmem_memmove$/;"	m
TARGET	deps/pmdk/src/test/pmem_memset/Makefile	/^TARGET = pmem_memset$/;"	m
TARGET	deps/pmdk/src/test/pmem_movnt/Makefile	/^TARGET = pmem_movnt$/;"	m
TARGET	deps/pmdk/src/test/pmem_movnt_align/Makefile	/^TARGET = pmem_movnt_align$/;"	m
TARGET	deps/pmdk/src/test/pmem_unmap/Makefile	/^TARGET = pmem_unmap$/;"	m
TARGET	deps/pmdk/src/test/pmem_valgr_simple/Makefile	/^TARGET = pmem_valgr_simple$/;"	m
TARGET	deps/pmdk/src/test/pmreorder_flushes/Makefile	/^TARGET = pmreorder_flushes$/;"	m
TARGET	deps/pmdk/src/test/pmreorder_simple/Makefile	/^TARGET = pmreorder_simple$/;"	m
TARGET	deps/pmdk/src/test/pmreorder_stack/Makefile	/^TARGET = pmreorder_stack$/;"	m
TARGET	deps/pmdk/src/test/remote_basic/Makefile	/^TARGET = remote_basic$/;"	m
TARGET	deps/pmdk/src/test/remote_obj_basic/Makefile	/^TARGET = remote_obj_basic$/;"	m
TARGET	deps/pmdk/src/test/rpmem_addr/Makefile	/^TARGET = rpmem_addr$/;"	m
TARGET	deps/pmdk/src/test/rpmem_addr_ext/Makefile	/^TARGET = rpmem_addr_ext$/;"	m
TARGET	deps/pmdk/src/test/rpmem_basic/Makefile	/^TARGET = rpmem_basic$/;"	m
TARGET	deps/pmdk/src/test/rpmem_fip/Makefile	/^TARGET = rpmem_fip$/;"	m
TARGET	deps/pmdk/src/test/rpmem_obc/Makefile	/^TARGET = rpmem_obc$/;"	m
TARGET	deps/pmdk/src/test/rpmem_obc_int/Makefile	/^TARGET = rpmem_obc_int$/;"	m
TARGET	deps/pmdk/src/test/rpmem_proto/Makefile	/^TARGET = rpmem_proto$/;"	m
TARGET	deps/pmdk/src/test/rpmemd_config/Makefile	/^TARGET = rpmemd_config$/;"	m
TARGET	deps/pmdk/src/test/rpmemd_db/Makefile	/^TARGET = rpmemd_db$/;"	m
TARGET	deps/pmdk/src/test/rpmemd_dbg/Makefile	/^TARGET = rpmemd_dbg$/;"	m
TARGET	deps/pmdk/src/test/rpmemd_log/Makefile	/^TARGET = rpmemd_log$/;"	m
TARGET	deps/pmdk/src/test/rpmemd_obc/Makefile	/^TARGET = rpmemd_obc$/;"	m
TARGET	deps/pmdk/src/test/rpmemd_util/Makefile	/^TARGET = rpmemd_util$/;"	m
TARGET	deps/pmdk/src/test/set_funcs/Makefile	/^TARGET = set_funcs$/;"	m
TARGET	deps/pmdk/src/test/tools/Makefile	/^all     : TARGET = all$/;"	m
TARGET	deps/pmdk/src/test/tools/Makefile	/^clean   : TARGET = clean$/;"	m
TARGET	deps/pmdk/src/test/tools/Makefile	/^clobber : TARGET = clobber$/;"	m
TARGET	deps/pmdk/src/test/tools/Makefile	/^cstyle  : TARGET = cstyle$/;"	m
TARGET	deps/pmdk/src/test/tools/Makefile	/^format  : TARGET = format$/;"	m
TARGET	deps/pmdk/src/test/tools/Makefile	/^sparse  : TARGET = sparse$/;"	m
TARGET	deps/pmdk/src/test/tools/Makefile	/^sync-remotes : TARGET = sync-remotes$/;"	m
TARGET	deps/pmdk/src/test/tools/anonymous_mmap/Makefile	/^TARGET = anonymous_mmap$/;"	m
TARGET	deps/pmdk/src/test/tools/bttcreate/Makefile	/^TARGET = bttcreate$/;"	m
TARGET	deps/pmdk/src/test/tools/cmpmap/Makefile	/^TARGET = cmpmap$/;"	m
TARGET	deps/pmdk/src/test/tools/ctrld/Makefile	/^TARGET = ctrld$/;"	m
TARGET	deps/pmdk/src/test/tools/ddmap/Makefile	/^TARGET = ddmap$/;"	m
TARGET	deps/pmdk/src/test/tools/extents/Makefile	/^TARGET = extents$/;"	m
TARGET	deps/pmdk/src/test/tools/fallocate_detect/Makefile	/^TARGET = fallocate_detect$/;"	m
TARGET	deps/pmdk/src/test/tools/fip/Makefile	/^TARGET = fip$/;"	m
TARGET	deps/pmdk/src/test/tools/obj_verify/Makefile	/^TARGET = obj_verify$/;"	m
TARGET	deps/pmdk/src/test/tools/pmemalloc/Makefile	/^TARGET = pmemalloc$/;"	m
TARGET	deps/pmdk/src/test/tools/pmemdetect/Makefile	/^TARGET = pmemdetect$/;"	m
TARGET	deps/pmdk/src/test/tools/pmemobjcli/Makefile	/^TARGET = pmemobjcli$/;"	m
TARGET	deps/pmdk/src/test/tools/pmemspoil/Makefile	/^TARGET = pmemspoil$/;"	m
TARGET	deps/pmdk/src/test/tools/pmemwrite/Makefile	/^TARGET = pmemwrite$/;"	m
TARGET	deps/pmdk/src/test/tools/usc_permission_check/Makefile	/^TARGET = usc_permission_check$/;"	m
TARGET	deps/pmdk/src/test/traces/Makefile	/^TARGET = traces$/;"	m
TARGET	deps/pmdk/src/test/traces_custom_function/Makefile	/^TARGET = traces_custom_function$/;"	m
TARGET	deps/pmdk/src/test/traces_pmem/Makefile	/^TARGET = traces_pmem$/;"	m
TARGET	deps/pmdk/src/test/util_badblock/Makefile	/^TARGET = util_badblock$/;"	m
TARGET	deps/pmdk/src/test/util_cpuid/Makefile	/^TARGET = util_cpuid$/;"	m
TARGET	deps/pmdk/src/test/util_ctl/Makefile	/^TARGET = util_ctl$/;"	m
TARGET	deps/pmdk/src/test/util_extent/Makefile	/^TARGET = util_extent$/;"	m
TARGET	deps/pmdk/src/test/util_file_create/Makefile	/^TARGET = util_file_create$/;"	m
TARGET	deps/pmdk/src/test/util_file_open/Makefile	/^TARGET = util_file_open$/;"	m
TARGET	deps/pmdk/src/test/util_is_absolute/Makefile	/^TARGET = util_is_absolute$/;"	m
TARGET	deps/pmdk/src/test/util_is_poolset/Makefile	/^TARGET = util_is_poolset$/;"	m
TARGET	deps/pmdk/src/test/util_is_zeroed/Makefile	/^TARGET = util_is_zeroed$/;"	m
TARGET	deps/pmdk/src/test/util_map_proc/Makefile	/^TARGET = util_map_proc$/;"	m
TARGET	deps/pmdk/src/test/util_parse_size/Makefile	/^TARGET = util_parse_size$/;"	m
TARGET	deps/pmdk/src/test/util_pool_hdr/Makefile	/^TARGET = util_pool_hdr$/;"	m
TARGET	deps/pmdk/src/test/util_poolset/Makefile	/^TARGET = util_poolset$/;"	m
TARGET	deps/pmdk/src/test/util_poolset_foreach/Makefile	/^TARGET = util_poolset_foreach$/;"	m
TARGET	deps/pmdk/src/test/util_poolset_parse/Makefile	/^TARGET = util_poolset_parse$/;"	m
TARGET	deps/pmdk/src/test/util_poolset_size/Makefile	/^TARGET = util_poolset_size$/;"	m
TARGET	deps/pmdk/src/test/util_sds/Makefile	/^TARGET = util_sds$/;"	m
TARGET	deps/pmdk/src/test/util_uuid_generate/Makefile	/^TARGET = util_uuid_generate$/;"	m
TARGET	deps/pmdk/src/test/util_vec/Makefile	/^TARGET = util_vec$/;"	m
TARGET	deps/pmdk/src/test/util_vecq/Makefile	/^TARGET = util_vecq$/;"	m
TARGET	deps/pmdk/src/tools/Makefile	/^all    : TARGET = all$/;"	m
TARGET	deps/pmdk/src/tools/Makefile	/^check  : TARGET = check$/;"	m
TARGET	deps/pmdk/src/tools/Makefile	/^clean  : TARGET = clean$/;"	m
TARGET	deps/pmdk/src/tools/Makefile	/^clobber: TARGET = clobber$/;"	m
TARGET	deps/pmdk/src/tools/Makefile	/^cstyle : TARGET = cstyle$/;"	m
TARGET	deps/pmdk/src/tools/Makefile	/^format : TARGET = format$/;"	m
TARGET	deps/pmdk/src/tools/Makefile	/^install: TARGET = install$/;"	m
TARGET	deps/pmdk/src/tools/Makefile	/^sparse: TARGET = sparse$/;"	m
TARGET	deps/pmdk/src/tools/Makefile	/^sync-remotes: TARGET = sync-remotes$/;"	m
TARGET	deps/pmdk/src/tools/Makefile	/^test   : TARGET = test$/;"	m
TARGET	deps/pmdk/src/tools/Makefile	/^uninstall: TARGET = uninstall$/;"	m
TARGET	deps/pmdk/src/tools/daxio/Makefile	/^TARGET = daxio$/;"	m
TARGET	deps/pmdk/src/tools/pmempool/Makefile	/^TARGET = pmempool$/;"	m
TARGET	deps/pmdk/src/tools/rpmemd/Makefile	/^TARGET = rpmemd$/;"	m
TARGET	deps/pmdk/utils/check_license/Makefile	/^TARGET=check-license$/;"	m
TARGETS	deps/pmdk/src/Makefile	/^TARGETS = libpmem libpmemblk libpmemlog libpmemobj libpmempool tools$/;"	m
TARGETS	deps/pmdk/src/tools/Makefile	/^TARGETS = pmempool rpmemd daxio pmreorder$/;"	m
TARGET_UT	deps/pmdk/src/test/unittest/Makefile	/^TARGET_UT = libut.a$/;"	m
TARGET_UT_PMEM2	deps/pmdk/src/test/unittest/Makefile	/^TARGET_UT_PMEM2 = ut_pmem2.a$/;"	m
TCACHE_GC_INCR	deps/jemalloc/include/jemalloc/internal/tcache.h	47;"	d
TCACHE_GC_SWEEP	deps/jemalloc/include/jemalloc/internal/tcache.h	44;"	d
TCACHE_NSLOTS_LARGE	deps/jemalloc/include/jemalloc/internal/tcache.h	34;"	d
TCACHE_NSLOTS_SMALL_MAX	deps/jemalloc/include/jemalloc/internal/tcache.h	31;"	d
TCACHE_NSLOTS_SMALL_MIN	deps/jemalloc/include/jemalloc/internal/tcache.h	22;"	d
TCACHE_STATE_DISABLED	deps/jemalloc/include/jemalloc/internal/tcache.h	14;"	d
TCACHE_STATE_MAX	deps/jemalloc/include/jemalloc/internal/tcache.h	17;"	d
TCACHE_STATE_PURGATORY	deps/jemalloc/include/jemalloc/internal/tcache.h	16;"	d
TCACHE_STATE_REINCARNATED	deps/jemalloc/include/jemalloc/internal/tcache.h	15;"	d
TD	src/Makefile	/^	echo STD=$(STD) >> .make-settings$/;"	m
TERABYTE	deps/pmdk/src/test/util_map_proc/util_map_proc.c	47;"	d	file:
TEST	deps/jemalloc/test/unit/util.c	167;"	d	file:
TEST	deps/jemalloc/test/unit/util.c	190;"	d	file:
TEST	deps/jemalloc/test/unit/util.c	199;"	d	file:
TEST	src/quicklist.c	1444;"	d	file:
TEST0	deps/pmdk/src/test/obj_basic_integration/TESTS.py	/^class TEST0(BASIC):$/;"	c
TEST0	deps/pmdk/src/test/obj_defrag/TESTS.py	/^class TEST0(BASE):$/;"	c
TEST0	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^class TEST0(ObjDefragAdvanced):$/;"	c
TEST0	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^class TEST0(BASE):$/;"	c
TEST0	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^class TEST0(t.BaseTest):$/;"	c
TEST0	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^class TEST0(t.BaseTest):$/;"	c
TEST0	deps/pmdk/src/test/obj_tx_user_data/TESTS.py	/^class TEST0(t.BaseTest):$/;"	c
TEST0	deps/pmdk/src/test/obj_ulog_size/TESTS.py	/^class TEST0(BASE):$/;"	c
TEST0	deps/pmdk/src/test/pmem2_config/TESTS.py	/^class TEST0(PMEM2_CONFIG):$/;"	c
TEST0	deps/pmdk/src/test/pmem2_map/TESTS.py	/^class TEST0(PMEM2_MAP):$/;"	c
TEST0	deps/pmdk/src/test/pmem_map_file_trunc/TESTS.py	/^class TEST0(t.BaseTest):$/;"	c
TEST0	deps/pmdk/src/test/win_common/TESTS.py	/^class TEST0(t.BaseTest):$/;"	c
TEST1	deps/pmdk/src/test/obj_basic_integration/TESTS.py	/^class TEST1(BASIC):$/;"	c
TEST1	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^class TEST1(ObjDefragAdvanced):$/;"	c
TEST1	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^class TEST1(BASE):$/;"	c
TEST1	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^class TEST1(t.BaseTest):$/;"	c
TEST1	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^class TEST1(t.BaseTest):$/;"	c
TEST1	deps/pmdk/src/test/obj_ulog_size/TESTS.py	/^class TEST1(BASE):$/;"	c
TEST1	deps/pmdk/src/test/pmem2_config/TESTS.py	/^class TEST1(PMEM2_CONFIG):$/;"	c
TEST10	deps/pmdk/src/test/scope/TESTS.py	/^class TEST10(Common):$/;"	c
TEST11	deps/pmdk/src/test/scope/TESTS.py	/^class TEST11(Common):$/;"	c
TEST12	deps/pmdk/src/test/scope/TESTS.py	/^class TEST12(Common):$/;"	c
TEST13	deps/pmdk/src/test/scope/TESTS.py	/^class TEST13(Common):$/;"	c
TEST2	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^class TEST2(ObjDefragAdvanced):$/;"	c
TEST2	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^class TEST2(BASE):$/;"	c
TEST2	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^class TEST2(t.BaseTest):$/;"	c
TEST2	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^class TEST2(t.BaseTest):$/;"	c
TEST2	deps/pmdk/src/test/obj_ulog_size/TESTS.py	/^class TEST2(BASE):$/;"	c
TEST2	deps/pmdk/src/test/pmem2_config/TESTS.py	/^class TEST2(PMEM2_CONFIG):$/;"	c
TEST2	deps/pmdk/src/test/scope/TESTS.py	/^class TEST2(Common):$/;"	c
TEST3	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^class TEST3(ObjDefragAdvancedMt):$/;"	c
TEST3	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^class TEST3(BASE):$/;"	c
TEST3	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^class TEST3(t.BaseTest):$/;"	c
TEST3	deps/pmdk/src/test/pmem2_config/TESTS.py	/^class TEST3(PMEM2_CONFIG):$/;"	c
TEST3	deps/pmdk/src/test/scope/TESTS.py	/^class TEST3(Common):$/;"	c
TEST4	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^class TEST4(ObjDefragAdvancedMt):$/;"	c
TEST4	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^class TEST4(BASE):$/;"	c
TEST4	deps/pmdk/src/test/pmem2_config/TESTS.py	/^class TEST4(PMEM2_CONFIG):$/;"	c
TEST4	deps/pmdk/src/test/scope/TESTS.py	/^class TEST4(Common):$/;"	c
TEST5	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^class TEST5(ObjDefragAdvancedMt):$/;"	c
TEST5	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^class TEST5(BASE):$/;"	c
TEST5	deps/pmdk/src/test/pmem2_config/TESTS.py	/^class TEST5(PMEM2_CONFIG):$/;"	c
TEST5	deps/pmdk/src/test/scope/TESTS.py	/^class TEST5(Common):$/;"	c
TEST6	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^class TEST6(BASE):$/;"	c
TEST6	deps/pmdk/src/test/pmem2_config/TESTS.py	/^class TEST6(PMEM2_CONFIG):$/;"	c
TEST6	deps/pmdk/src/test/scope/TESTS.py	/^class TEST6(Common):$/;"	c
TEST7	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^class TEST7(BASE):$/;"	c
TEST7	deps/pmdk/src/test/pmem2_config/TESTS.py	/^class TEST7(PMEM2_CONFIG):$/;"	c
TEST8	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^class TEST8(BASE):$/;"	c
TEST8	deps/pmdk/src/test/scope/TESTS.py	/^class TEST8(Common):$/;"	c
TEST9	deps/pmdk/src/test/scope/TESTS.py	/^class TEST9(Common):$/;"	c
TESTCONFIG	deps/pmdk/src/test/Makefile	/^TESTCONFIG=$(TOP)\/src\/test\/testconfig.sh$/;"	m
TESTCONFIG	deps/pmdk/src/test/tools/Makefile	/^TESTCONFIG=$(TOP)\/src\/test\/testconfig.sh$/;"	m
TESTCONFIG	deps/pmdk/src/test/tools/anonymous_mmap/Makefile	/^TESTCONFIG=$(TOP)\/src\/test\/testconfig.sh$/;"	m
TESTCONFIG	deps/pmdk/src/tools/Makefile	/^TESTCONFIG=$(TOP)\/src\/test\/testconfig.sh$/;"	m
TESTS	deps/hiredis/Makefile	/^TESTS=hiredis-test$/;"	m
TESTS	deps/jemalloc/Makefile	/^TESTS := $(TESTS_UNIT) $(TESTS_INTEGRATION) $(TESTS_STRESS)$/;"	m
TESTS	deps/pmdk/src/test/Makefile	/^	TESTS := $(filter-out $(BLACKLIST_TESTS),$(TESTS))$/;"	m
TESTS	deps/pmdk/src/test/Makefile	/^TESTS = \\$/;"	m
TESTS_BUILD	deps/pmdk/src/test/Makefile	/^	TESTS_BUILD := $(filter-out $(BLACKLIST_TESTS),$(TESTS_BUILD))$/;"	m
TESTS_BUILD	deps/pmdk/src/test/Makefile	/^TESTS_BUILD = \\$/;"	m
TESTS_INTEGRATION	deps/jemalloc/Makefile	/^TESTS_INTEGRATION := $(srcroot)test\/integration\/aligned_alloc.c \\$/;"	m
TESTS_INTEGRATION_OBJS	deps/jemalloc/Makefile	/^TESTS_INTEGRATION_OBJS := $(TESTS_INTEGRATION:$(srcroot)%.c=$(objroot)%.$(O))$/;"	m
TESTS_OBJS	deps/jemalloc/Makefile	/^TESTS_OBJS := $(TESTS_UNIT_OBJS) $(TESTS_INTEGRATION_OBJS) $(TESTS_STRESS_OBJS)$/;"	m
TESTS_STRESS	deps/jemalloc/Makefile	/^TESTS_STRESS := $(srcroot)test\/stress\/microbench.c$/;"	m
TESTS_STRESS_OBJS	deps/jemalloc/Makefile	/^TESTS_STRESS_OBJS := $(TESTS_STRESS:$(srcroot)%.c=$(objroot)%.$(O))$/;"	m
TESTS_UNIT	deps/jemalloc/Makefile	/^TESTS_UNIT := \\$/;"	m
TESTS_UNIT_OBJS	deps/jemalloc/Makefile	/^TESTS_UNIT_OBJS := $(TESTS_UNIT:$(srcroot)%.c=$(objroot)%.$(O))$/;"	m
TEST_ALLOC_SIZE	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	44;"	d	file:
TEST_ALLOC_SIZE	deps/pmdk/src/test/obj_pmalloc_oom_mt/obj_pmalloc_oom_mt.c	42;"	d	file:
TEST_ALWAYS_EQ_EXPR	deps/pmdk/src/common/out.h	128;"	d
TEST_ALWAYS_EQ_EXPR	deps/pmdk/src/common/out.h	134;"	d
TEST_ALWAYS_NE_EXPR	deps/pmdk/src/common/out.h	129;"	d
TEST_ALWAYS_NE_EXPR	deps/pmdk/src/common/out.h	137;"	d
TEST_ALWAYS_TRUE_EXPR	deps/pmdk/src/common/out.h	127;"	d
TEST_ALWAYS_TRUE_EXPR	deps/pmdk/src/common/out.h	131;"	d
TEST_ARENAS_BIN_CONSTANT	deps/jemalloc/test/unit/mallctl.c	625;"	d	file:
TEST_ARENAS_BIN_CONSTANT	deps/jemalloc/test/unit/mallctl.c	637;"	d	file:
TEST_ARENAS_CONSTANT	deps/jemalloc/test/unit/mallctl.c	604;"	d	file:
TEST_ARENAS_CONSTANT	deps/jemalloc/test/unit/mallctl.c	618;"	d	file:
TEST_ARENAS_HCHUNK_CONSTANT	deps/jemalloc/test/unit/mallctl.c	661;"	d	file:
TEST_ARENAS_HCHUNK_CONSTANT	deps/jemalloc/test/unit/mallctl.c	671;"	d	file:
TEST_ARENAS_LRUN_CONSTANT	deps/jemalloc/test/unit/mallctl.c	644;"	d	file:
TEST_ARENAS_LRUN_CONSTANT	deps/jemalloc/test/unit/mallctl.c	654;"	d	file:
TEST_BEGIN	deps/jemalloc/test/include/test/test.h	299;"	d
TEST_BEGIN	deps/jemalloc/test/integration/MALLOCX_ARENA.c	/^TEST_BEGIN(test_MALLOCX_ARENA)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/aligned_alloc.c	/^TEST_BEGIN(test_alignment_and_size)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/aligned_alloc.c	/^TEST_BEGIN(test_alignment_errors)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/aligned_alloc.c	/^TEST_BEGIN(test_oom_errors)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/allocated.c	/^TEST_BEGIN(test_main_thread)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/allocated.c	/^TEST_BEGIN(test_subthread)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/chunk.c	/^TEST_BEGIN(test_chunk)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/mallocx.c	/^TEST_BEGIN(test_alignment_and_size)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/mallocx.c	/^TEST_BEGIN(test_basic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/mallocx.c	/^TEST_BEGIN(test_oom)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/mallocx.c	/^TEST_BEGIN(test_overflow)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/overflow.c	/^TEST_BEGIN(test_overflow)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/posix_memalign.c	/^TEST_BEGIN(test_alignment_and_size)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/posix_memalign.c	/^TEST_BEGIN(test_alignment_errors)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/posix_memalign.c	/^TEST_BEGIN(test_oom_errors)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/rallocx.c	/^TEST_BEGIN(test_align)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/rallocx.c	/^TEST_BEGIN(test_grow_and_shrink)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/rallocx.c	/^TEST_BEGIN(test_lg_align_and_zero)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/rallocx.c	/^TEST_BEGIN(test_overflow)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/rallocx.c	/^TEST_BEGIN(test_zero)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/sdallocx.c	/^TEST_BEGIN(test_alignment_and_size)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/sdallocx.c	/^TEST_BEGIN(test_basic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/thread_arena.c	/^TEST_BEGIN(test_thread_arena)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/thread_tcache_enabled.c	/^TEST_BEGIN(test_main_thread)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/thread_tcache_enabled.c	/^TEST_BEGIN(test_subthread)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/xallocx.c	/^TEST_BEGIN(test_extra_huge)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/xallocx.c	/^TEST_BEGIN(test_extra_large)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/xallocx.c	/^TEST_BEGIN(test_extra_no_move)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/xallocx.c	/^TEST_BEGIN(test_extra_small)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/xallocx.c	/^TEST_BEGIN(test_no_move_fail)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/xallocx.c	/^TEST_BEGIN(test_same_size)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/xallocx.c	/^TEST_BEGIN(test_size)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/xallocx.c	/^TEST_BEGIN(test_size_extra_overflow)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/xallocx.c	/^TEST_BEGIN(test_zero_huge)$/;"	f
TEST_BEGIN	deps/jemalloc/test/integration/xallocx.c	/^TEST_BEGIN(test_zero_large)$/;"	f
TEST_BEGIN	deps/jemalloc/test/stress/microbench.c	/^TEST_BEGIN(test_dallocx_vs_sdallocx)$/;"	f
TEST_BEGIN	deps/jemalloc/test/stress/microbench.c	/^TEST_BEGIN(test_free_vs_dallocx)$/;"	f
TEST_BEGIN	deps/jemalloc/test/stress/microbench.c	/^TEST_BEGIN(test_malloc_vs_mallocx)$/;"	f
TEST_BEGIN	deps/jemalloc/test/stress/microbench.c	/^TEST_BEGIN(test_mus_vs_sallocx)$/;"	f
TEST_BEGIN	deps/jemalloc/test/stress/microbench.c	/^TEST_BEGIN(test_sallocx_vs_nallocx)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/SFMT.c	/^TEST_BEGIN(test_by_array_32)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/SFMT.c	/^TEST_BEGIN(test_by_array_64)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/SFMT.c	/^TEST_BEGIN(test_gen_rand_32)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/SFMT.c	/^TEST_BEGIN(test_gen_rand_64)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/a0.c	/^TEST_BEGIN(test_a0)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/arena_reset.c	/^TEST_BEGIN(test_arena_reset)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/atomic.c	/^TEST_BEGIN(test_atomic_p)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/atomic.c	/^TEST_BEGIN(test_atomic_u)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/bitmap.c	/^TEST_BEGIN(test_bitmap_init)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/bitmap.c	/^TEST_BEGIN(test_bitmap_set)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/bitmap.c	/^TEST_BEGIN(test_bitmap_sfu)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/bitmap.c	/^TEST_BEGIN(test_bitmap_size)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/bitmap.c	/^TEST_BEGIN(test_bitmap_unset)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ckh.c	/^TEST_BEGIN(test_count_insert_search_remove)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ckh.c	/^TEST_BEGIN(test_insert_iter_remove)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ckh.c	/^TEST_BEGIN(test_new_delete)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/decay.c	/^TEST_BEGIN(test_decay_nonmonotonic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/decay.c	/^TEST_BEGIN(test_decay_ticker)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/decay.c	/^TEST_BEGIN(test_decay_ticks)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/fork.c	/^TEST_BEGIN(test_fork)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/hash.c	/^TEST_BEGIN(test_hash_x64_128)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/hash.c	/^TEST_BEGIN(test_hash_x86_128)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/hash.c	/^TEST_BEGIN(test_hash_x86_32)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/junk.c	/^TEST_BEGIN(test_junk_huge)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/junk.c	/^TEST_BEGIN(test_junk_large)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/junk.c	/^TEST_BEGIN(test_junk_large_ralloc_shrink)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/junk.c	/^TEST_BEGIN(test_junk_redzone)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/junk.c	/^TEST_BEGIN(test_junk_small)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/lg_chunk.c	/^TEST_BEGIN(test_lg_chunk_clamp)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arena_i_decay)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arena_i_decay_time)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arena_i_dss)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arena_i_lg_dirty_mult)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arena_i_purge)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arenas_bin_constants)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arenas_constants)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arenas_decay_time)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arenas_extend)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arenas_hchunk_constants)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arenas_initialized)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arenas_lg_dirty_mult)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_arenas_lrun_constants)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_mallctl_config)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_mallctl_errors)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_mallctl_opt)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_mallctl_read_write)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_mallctlbymib_errors)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_mallctlnametomib_errors)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_mallctlnametomib_short_mib)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_manpage_example)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_stats_arenas)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_tcache)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_tcache_none)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mallctl.c	/^TEST_BEGIN(test_thread_arena)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/math.c	/^TEST_BEGIN(test_ln_gamma_factorial)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/math.c	/^TEST_BEGIN(test_ln_gamma_misc)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/math.c	/^TEST_BEGIN(test_pt_chi2)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/math.c	/^TEST_BEGIN(test_pt_gamma_scale)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/math.c	/^TEST_BEGIN(test_pt_gamma_shape)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/math.c	/^TEST_BEGIN(test_pt_norm)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mq.c	/^TEST_BEGIN(test_mq_basic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mq.c	/^TEST_BEGIN(test_mq_threaded)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mtx.c	/^TEST_BEGIN(test_mtx_basic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/mtx.c	/^TEST_BEGIN(test_mtx_race)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/nstime.c	/^TEST_BEGIN(test_nstime_add)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/nstime.c	/^TEST_BEGIN(test_nstime_compare)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/nstime.c	/^TEST_BEGIN(test_nstime_copy)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/nstime.c	/^TEST_BEGIN(test_nstime_divide)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/nstime.c	/^TEST_BEGIN(test_nstime_idivide)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/nstime.c	/^TEST_BEGIN(test_nstime_imultiply)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/nstime.c	/^TEST_BEGIN(test_nstime_init)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/nstime.c	/^TEST_BEGIN(test_nstime_init2)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/nstime.c	/^TEST_BEGIN(test_nstime_monotonic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/nstime.c	/^TEST_BEGIN(test_nstime_subtract)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/nstime.c	/^TEST_BEGIN(test_nstime_update)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/pack.c	/^TEST_BEGIN(test_pack)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/pages.c	/^TEST_BEGIN(test_pages_huge)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ph.c	/^TEST_BEGIN(test_ph_empty)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ph.c	/^TEST_BEGIN(test_ph_random)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prng.c	/^TEST_BEGIN(test_prng_lg_range_u32_atomic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prng.c	/^TEST_BEGIN(test_prng_lg_range_u32_nonatomic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prng.c	/^TEST_BEGIN(test_prng_lg_range_u64_nonatomic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prng.c	/^TEST_BEGIN(test_prng_lg_range_zu_atomic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prng.c	/^TEST_BEGIN(test_prng_lg_range_zu_nonatomic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prng.c	/^TEST_BEGIN(test_prng_range_u32_atomic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prng.c	/^TEST_BEGIN(test_prng_range_u32_nonatomic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prng.c	/^TEST_BEGIN(test_prng_range_u64_nonatomic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prng.c	/^TEST_BEGIN(test_prng_range_zu_atomic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prng.c	/^TEST_BEGIN(test_prng_range_zu_nonatomic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prof_accum.c	/^TEST_BEGIN(test_idump)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prof_active.c	/^TEST_BEGIN(test_prof_active)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prof_gdump.c	/^TEST_BEGIN(test_gdump)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prof_idump.c	/^TEST_BEGIN(test_idump)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prof_reset.c	/^TEST_BEGIN(test_prof_reset)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prof_reset.c	/^TEST_BEGIN(test_prof_reset_basic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prof_reset.c	/^TEST_BEGIN(test_prof_reset_cleanup)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prof_reset.c	/^TEST_BEGIN(test_xallocx)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prof_thread_name.c	/^TEST_BEGIN(test_prof_thread_name_threaded)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/prof_thread_name.c	/^TEST_BEGIN(test_prof_thread_name_validation)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ql.c	/^TEST_BEGIN(test_ql_empty)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ql.c	/^TEST_BEGIN(test_ql_head_insert)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ql.c	/^TEST_BEGIN(test_ql_head_remove)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ql.c	/^TEST_BEGIN(test_ql_insert)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ql.c	/^TEST_BEGIN(test_ql_tail_insert)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ql.c	/^TEST_BEGIN(test_ql_tail_remove)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/qr.c	/^TEST_BEGIN(test_qr_after_insert)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/qr.c	/^TEST_BEGIN(test_qr_before_insert)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/qr.c	/^TEST_BEGIN(test_qr_meld_split)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/qr.c	/^TEST_BEGIN(test_qr_one)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/qr.c	/^TEST_BEGIN(test_qr_remove)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/quarantine.c	/^TEST_BEGIN(test_quarantine)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/quarantine.c	/^TEST_BEGIN(test_quarantine_redzone)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/rb.c	/^TEST_BEGIN(test_rb_empty)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/rb.c	/^TEST_BEGIN(test_rb_random)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/rtree.c	/^TEST_BEGIN(test_rtree_bits)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/rtree.c	/^TEST_BEGIN(test_rtree_extrema)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/rtree.c	/^TEST_BEGIN(test_rtree_get_empty)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/rtree.c	/^TEST_BEGIN(test_rtree_random)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/run_quantize.c	/^TEST_BEGIN(test_large_run_size)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/run_quantize.c	/^TEST_BEGIN(test_monotonic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/run_quantize.c	/^TEST_BEGIN(test_small_run_size)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/size_classes.c	/^TEST_BEGIN(test_overflow)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/size_classes.c	/^TEST_BEGIN(test_psize_classes)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/size_classes.c	/^TEST_BEGIN(test_size_classes)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/smoothstep.c	/^TEST_BEGIN(test_smoothstep_integral)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/smoothstep.c	/^TEST_BEGIN(test_smoothstep_monotonic)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/smoothstep.c	/^TEST_BEGIN(test_smoothstep_slope)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/stats.c	/^TEST_BEGIN(test_stats_arenas_bins)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/stats.c	/^TEST_BEGIN(test_stats_arenas_hchunks)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/stats.c	/^TEST_BEGIN(test_stats_arenas_huge)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/stats.c	/^TEST_BEGIN(test_stats_arenas_large)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/stats.c	/^TEST_BEGIN(test_stats_arenas_lruns)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/stats.c	/^TEST_BEGIN(test_stats_arenas_small)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/stats.c	/^TEST_BEGIN(test_stats_arenas_summary)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/stats.c	/^TEST_BEGIN(test_stats_huge)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/stats.c	/^TEST_BEGIN(test_stats_summary)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ticker.c	/^TEST_BEGIN(test_ticker_copy)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ticker.c	/^TEST_BEGIN(test_ticker_tick)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/ticker.c	/^TEST_BEGIN(test_ticker_ticks)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/tsd.c	/^TEST_BEGIN(test_tsd_main_thread)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/tsd.c	/^TEST_BEGIN(test_tsd_sub_thread)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/util.c	/^TEST_BEGIN(test_malloc_snprintf)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/util.c	/^TEST_BEGIN(test_malloc_snprintf_truncated)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/util.c	/^TEST_BEGIN(test_malloc_strtoumax)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/util.c	/^TEST_BEGIN(test_malloc_strtoumax_no_endptr)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/util.c	/^TEST_BEGIN(test_pow2_ceil_u32)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/util.c	/^TEST_BEGIN(test_pow2_ceil_u64)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/util.c	/^TEST_BEGIN(test_pow2_ceil_zu)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/witness.c	/^TEST_BEGIN(test_witness)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/witness.c	/^TEST_BEGIN(test_witness_comp)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/witness.c	/^TEST_BEGIN(test_witness_lockful)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/witness.c	/^TEST_BEGIN(test_witness_recursive)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/witness.c	/^TEST_BEGIN(test_witness_reversal)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/witness.c	/^TEST_BEGIN(test_witness_unlock_not_owned)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/zero.c	/^TEST_BEGIN(test_zero_huge)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/zero.c	/^TEST_BEGIN(test_zero_large)$/;"	f
TEST_BEGIN	deps/jemalloc/test/unit/zero.c	/^TEST_BEGIN(test_zero_small)$/;"	f
TEST_BLOCK_OFF	deps/pmdk/src/test/obj_bucket/obj_bucket.c	45;"	d	file:
TEST_BODY	deps/jemalloc/test/unit/atomic.c	11;"	d	file:
TEST_CASE	deps/pmdk/src/test/unittest/unittest.h	725;"	d
TEST_CASE_DECLARE	deps/pmdk/src/test/unittest/unittest.h	721;"	d
TEST_CASE_PROCESS	deps/pmdk/src/test/unittest/unittest.h	/^TEST_CASE_PROCESS(int argc, char *argv[],$/;"	f
TEST_CHUNK_ID	deps/pmdk/src/test/obj_bucket/obj_bucket.c	42;"	d	file:
TEST_CONFIG_FILE	deps/pmdk/Makefile	/^TEST_CONFIG_FILE ?= "$(CURDIR)"\/src\/test\/testconfig.sh$/;"	m
TEST_CONFIG_VALUE	deps/pmdk/src/test/util_ctl/util_ctl.c	94;"	d	file:
TEST_DATA_SORTEDQ	deps/pmdk/src/test/win_lists/win_lists.c	/^struct TEST_DATA_SORTEDQ {$/;"	s	file:
TEST_DEPS	deps/pmdk/src/test/Makefile	/^TEST_DEPS = \\$/;"	m
TEST_DESC	src/quicklist.c	1445;"	d	file:
TEST_END	deps/jemalloc/test/include/test/test.h	305;"	d
TEST_ENTRIES	deps/pmdk/src/test/obj_memops/obj_memops.c	44;"	d	file:
TEST_EXTEND_COUNT	deps/pmdk/src/test/obj_badblock/obj_badblock.c	44;"	d	file:
TEST_FILE	deps/pmdk/src/test/rpmemd_log/rpmemd_log_test.c	/^	TEST_FILE,$/;"	e	enum:test_log_type	file:
TEST_FORMAT_INCOMPAT_CHECK	deps/pmdk/src/test/util_poolset/util_poolset.c	56;"	d	file:
TEST_FORMAT_INCOMPAT_DEFAULT	deps/pmdk/src/test/util_poolset/util_poolset.c	55;"	d	file:
TEST_HUGE_ALLOC_SIZE	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	47;"	d	file:
TEST_INSERTS	deps/pmdk/src/test/obj_critnib/obj_critnib.c	44;"	d	file:
TEST_LANES	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	199;"	d	file:
TEST_LD_MODE	deps/jemalloc/Makefile	/^TEST_LD_MODE = $/;"	m
TEST_LIBRARY_PATH	deps/jemalloc/Makefile	/^TEST_LIBRARY_PATH := DYLD_FALLBACK_LIBRARY_PATH="$(objroot)lib"$/;"	m
TEST_LIBRARY_PATH	deps/jemalloc/Makefile	/^TEST_LIBRARY_PATH := PATH="$(PATH):$(objroot)lib"$/;"	m
TEST_LIBRARY_PATH	deps/jemalloc/Makefile	/^TEST_LIBRARY_PATH :=$/;"	m
TEST_LIST_NODE	deps/pmdk/src/test/win_lists/win_lists.c	/^typedef struct TEST_LIST_NODE {$/;"	s	file:
TEST_MALLCTL_CONFIG	deps/jemalloc/test/unit/mallctl.c	125;"	d	file:
TEST_MALLCTL_CONFIG	deps/jemalloc/test/unit/mallctl.c	150;"	d	file:
TEST_MALLCTL_OPT	deps/jemalloc/test/unit/mallctl.c	158;"	d	file:
TEST_MALLCTL_OPT	deps/jemalloc/test/unit/mallctl.c	195;"	d	file:
TEST_MEDIUM_ALLOC_SIZE	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	49;"	d	file:
TEST_MEGA_ALLOC_SIZE	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	46;"	d	file:
TEST_MMAP_SCENARIO_BEGIN_HOLE	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^	TEST_MMAP_SCENARIO_BEGIN_HOLE,$/;"	e	enum:test_mmap_scenarios	file:
TEST_MMAP_SCENARIO_END_HOLE	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^	TEST_MMAP_SCENARIO_END_HOLE,$/;"	e	enum:test_mmap_scenarios	file:
TEST_MMAP_SCENARIO_MIDDLE_HOLE	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^	TEST_MMAP_SCENARIO_MIDDLE_HOLE,$/;"	e	enum:test_mmap_scenarios	file:
TEST_MMAP_SCENARIO_NO_HOLE	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^	TEST_MMAP_SCENARIO_NO_HOLE$/;"	e	enum:test_mmap_scenarios	file:
TEST_MMAP_SCENARIO_UNKNOWN	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^	TEST_MMAP_SCENARIO_UNKNOWN,$/;"	e	enum:test_mmap_scenarios	file:
TEST_NAME	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	585;"	d	file:
TEST_NUM	deps/pmdk/src/test/obj_toid/obj_toid.c	40;"	d	file:
TEST_OBJECTS	deps/pmdk/src/test/obj_direct_volatile/obj_direct_volatile.c	44;"	d	file:
TEST_POW2_CEIL	deps/jemalloc/test/unit/util.c	3;"	d	file:
TEST_RUNS	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	51;"	d	file:
TEST_SIZE_IDX	deps/pmdk/src/test/obj_bucket/obj_bucket.c	44;"	d	file:
TEST_SMALL_ALLOC_SIZE	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	48;"	d	file:
TEST_SORTEDQ_NODE	deps/pmdk/src/test/win_lists/win_lists.c	/^typedef struct TEST_SORTEDQ_NODE {$/;"	s	file:
TEST_SORTEDQ_NODE	deps/pmdk/src/test/win_lists/win_lists.c	/^} TEST_SORTEDQ_NODE, *PTEST_SORTEDQ_NODE;$/;"	t	typeref:struct:TEST_SORTEDQ_NODE	file:
TEST_STATS_ARENAS	deps/jemalloc/test/unit/mallctl.c	696;"	d	file:
TEST_STATS_ARENAS	deps/jemalloc/test/unit/mallctl.c	710;"	d	file:
TEST_STDERR	deps/pmdk/src/test/rpmemd_log/rpmemd_log_test.c	/^	TEST_STDERR,$/;"	e	enum:test_log_type	file:
TEST_STR	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	43;"	d	file:
TEST_STRUCT	deps/jemalloc/test/unit/atomic.c	/^TEST_STRUCT(uint32, uint32_t)$/;"	f
TEST_STRUCT	deps/jemalloc/test/unit/atomic.c	/^TEST_STRUCT(uint64, uint64_t)$/;"	f
TEST_STRUCT	deps/jemalloc/test/unit/atomic.c	/^TEST_STRUCT(z, size_t)$/;"	f
TEST_STRUCT	deps/jemalloc/test/unit/atomic.c	3;"	d	file:
TEST_STR_1	deps/pmdk/src/test/obj_strdup/obj_strdup.c	58;"	d	file:
TEST_STR_1	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	74;"	d	file:
TEST_STR_2	deps/pmdk/src/test/obj_strdup/obj_strdup.c	59;"	d	file:
TEST_STR_2	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	75;"	d	file:
TEST_STR_EMPTY	deps/pmdk/src/test/obj_strdup/obj_strdup.c	62;"	d	file:
TEST_STR_LEN	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	44;"	d	file:
TEST_SYSLOG	deps/pmdk/src/test/rpmemd_log/rpmemd_log_test.c	/^	TEST_SYSLOG,$/;"	e	enum:test_log_type	file:
TEST_TINY_ALLOC_SIZE	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	50;"	d	file:
TEST_VAL	deps/pmdk/src/test/obj_critnib/obj_critnib.c	45;"	d	file:
TEST_VALUE	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	45;"	d	file:
TEST_VALUES	deps/pmdk/src/test/obj_memops/obj_memops.c	46;"	d	file:
TEST_VALUE_1	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	81;"	d	file:
TEST_VALUE_1	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	64;"	d	file:
TEST_VALUE_1	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	47;"	d	file:
TEST_VALUE_1	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	44;"	d	file:
TEST_VALUE_2	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	82;"	d	file:
TEST_VALUE_2	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	65;"	d	file:
TEST_VALUE_2	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	48;"	d	file:
TEST_VALUE_A	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	41;"	d	file:
TEST_VALUE_A	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	42;"	d	file:
TEST_VALUE_B	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	42;"	d	file:
TEST_VALUE_B	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	43;"	d	file:
TEST_VALUE_C	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	43;"	d	file:
TEST_VALUE_C	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	44;"	d	file:
TEST_WCS_1	deps/pmdk/src/test/obj_strdup/obj_strdup.c	60;"	d	file:
TEST_WCS_1	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	76;"	d	file:
TEST_WCS_2	deps/pmdk/src/test/obj_strdup/obj_strdup.c	61;"	d	file:
TEST_WCS_2	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	77;"	d	file:
TEST_WCS_EMPTY	deps/pmdk/src/test/obj_strdup/obj_strdup.c	63;"	d	file:
TEST_WORKERS	deps/pmdk/src/test/obj_direct_volatile/obj_direct_volatile.c	45;"	d	file:
TEST_ZONE_ID	deps/pmdk/src/test/obj_bucket/obj_bucket.c	43;"	d	file:
THPGetAnonHugePagesSize	src/latency.c	/^int THPGetAnonHugePagesSize(void) {$/;"	f
THPIsEnabled	src/latency.c	/^int THPIsEnabled(void) {$/;"	f
THREADS	deps/pmdk/src/test/obj_tx_mt/obj_tx_mt.c	42;"	d	file:
THREAD_CREATE	deps/pmdk/src/test/unittest/unittest.h	572;"	d
THREAD_DATA	deps/jemalloc/test/unit/tsd.c	3;"	d	file:
THREAD_JOIN	deps/pmdk/src/test/unittest/unittest.h	577;"	d
THRESHOLD_MUL	deps/pmdk/src/libpmemobj/recycler.c	46;"	d	file:
TIMED_LOCK	deps/pmdk/src/common/os_thread_windows.c	84;"	d	file:
TIMEOUT	deps/pmdk/src/test/obj_sync/obj_sync.c	49;"	d	file:
TIME_STR_FMT	deps/pmdk/src/libpmempool/check_util.c	59;"	d	file:
TIME_STR_FMT	deps/pmdk/src/tools/pmempool/output.c	54;"	d	file:
TINY_MIN	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	226;"	d
TK_AND	deps/lua/src/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_BREAK	deps/lua/src/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_CONCAT	deps/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_DO	deps/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_DOTS	deps/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_ELSE	deps/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_ELSEIF	deps/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_END	deps/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_EOS	deps/lua/src/llex.h	/^  TK_NAME, TK_STRING, TK_EOS$/;"	e	enum:RESERVED
TK_EQ	deps/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_FALSE	deps/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FOR	deps/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FUNCTION	deps/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_GE	deps/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_IF	deps/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IN	deps/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_LE	deps/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_LOCAL	deps/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NAME	deps/lua/src/llex.h	/^  TK_NAME, TK_STRING, TK_EOS$/;"	e	enum:RESERVED
TK_NE	deps/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_NIL	deps/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NOT	deps/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NUMBER	deps/lua/src/llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED
TK_OR	deps/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_REPEAT	deps/lua/src/llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_RETURN	deps/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_STRING	deps/lua/src/llex.h	/^  TK_NAME, TK_STRING, TK_EOS$/;"	e	enum:RESERVED
TK_THEN	deps/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_TRUE	deps/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_UNTIL	deps/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_WHILE	deps/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TKey	deps/lua/src/lobject.h	/^typedef union TKey {$/;"	u
TKey	deps/lua/src/lobject.h	/^} TKey;$/;"	t	typeref:union:TKey
TMP_HEADERS	deps/pmdk/src/Makefile	/^TMP_HEADERS := $(addprefix debug\/, $(addsuffix tmp, $(HEADERS)))$/;"	m
TMP_HEADERS	deps/pmdk/src/benchmarks/Makefile	/^TMP_HEADERS := $(addsuffix tmp, $(HEADERS))$/;"	m
TMP_HEADERS	deps/pmdk/src/rpmem_common/Makefile	/^TMP_HEADERS := $(addsuffix tmp, $(HEADERS))$/;"	m
TMS	deps/lua/src/ltm.h	/^} TMS;$/;"	t	typeref:enum:__anon41
TM_ADD	deps/lua/src/ltm.h	/^  TM_ADD,$/;"	e	enum:__anon41
TM_CALL	deps/lua/src/ltm.h	/^  TM_CALL,$/;"	e	enum:__anon41
TM_CONCAT	deps/lua/src/ltm.h	/^  TM_CONCAT,$/;"	e	enum:__anon41
TM_DIV	deps/lua/src/ltm.h	/^  TM_DIV,$/;"	e	enum:__anon41
TM_EQ	deps/lua/src/ltm.h	/^  TM_EQ,  \/* last tag method with `fast' access *\/$/;"	e	enum:__anon41
TM_GC	deps/lua/src/ltm.h	/^  TM_GC,$/;"	e	enum:__anon41
TM_INDEX	deps/lua/src/ltm.h	/^  TM_INDEX,$/;"	e	enum:__anon41
TM_LE	deps/lua/src/ltm.h	/^  TM_LE,$/;"	e	enum:__anon41
TM_LEN	deps/lua/src/ltm.h	/^  TM_LEN,$/;"	e	enum:__anon41
TM_LT	deps/lua/src/ltm.h	/^  TM_LT,$/;"	e	enum:__anon41
TM_MOD	deps/lua/src/ltm.h	/^  TM_MOD,$/;"	e	enum:__anon41
TM_MODE	deps/lua/src/ltm.h	/^  TM_MODE,$/;"	e	enum:__anon41
TM_MUL	deps/lua/src/ltm.h	/^  TM_MUL,$/;"	e	enum:__anon41
TM_N	deps/lua/src/ltm.h	/^  TM_N		\/* number of elements in the enum *\/$/;"	e	enum:__anon41
TM_NEWINDEX	deps/lua/src/ltm.h	/^  TM_NEWINDEX,$/;"	e	enum:__anon41
TM_POW	deps/lua/src/ltm.h	/^  TM_POW,$/;"	e	enum:__anon41
TM_SUB	deps/lua/src/ltm.h	/^  TM_SUB,$/;"	e	enum:__anon41
TM_UNM	deps/lua/src/ltm.h	/^  TM_UNM,$/;"	e	enum:__anon41
TOID	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^TOID(art_leaf)$/;"	f
TOID	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^TOID(art_node_u)$/;"	f
TOID	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^TOID(var_string)$/;"	f
TOID	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^leaf_matches(TOID(art_leaf) n, const unsigned char *key, int key_len, int depth)$/;"	f	file:
TOID	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^leaf_prefix_matches(TOID(art_leaf) n,$/;"	f	file:
TOID	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^longest_common_prefix(TOID(art_leaf) l1, TOID(art_leaf) l2, int depth)$/;"	f	file:
TOID	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^prefix_mismatch(TOID(art_node_u) n, unsigned char *key, int key_len, int depth)$/;"	f	file:
TOID	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^recursive_iter(TOID(art_node_u)n, art_callback cb, void *data)$/;"	f	file:
TOID	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^static TOID(art_leaf)$/;"	f	file:
TOID	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^static TOID(art_node_u)*$/;"	f	file:
TOID	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^static TOID(var_string)$/;"	f	file:
TOID	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^static TOID(objfs_block_t)$/;"	f	file:
TOID	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) child = D_RO(node)->slots[!c];$/;"	e	enum:c	file:
TOID	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) s = D_RO(map)->sentinel;$/;"	e	enum:c	file:
TOID	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) sb = NODE_PARENT_AT(n, !c); \/* sibling *\/$/;"	e	enum:c	file:
TOID	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) uncle = D_RO(NODE_GRANDP(n))->slots[!c];$/;"	e	enum:c	file:
TOID	deps/pmdk/src/include/libpmemobj/types.h	103;"	d
TOID_ARRAY	deps/pmdk/src/examples/libpmemobj/array/array.c	45;"	d	file:
TOID_ARRAY_TYPE	deps/pmdk/src/examples/libpmemobj/array/array.c	/^	TOID_ARRAY_TYPE,$/;"	e	enum:array_types	file:
TOID_ASSIGN	deps/pmdk/src/include/libpmemobj/types.h	53;"	d
TOID_ASSIGN	deps/pmdk/src/include/libpmemobj/types.h	61;"	d
TOID_DECLARE	deps/pmdk/src/include/libpmemobj/types.h	132;"	d
TOID_DECLARE_ROOT	deps/pmdk/src/include/libpmemobj/types.h	137;"	d
TOID_EQUALS	deps/pmdk/src/include/libpmemobj/types.h	89;"	d
TOID_IS_NULL	deps/pmdk/src/include/libpmemobj/types.h	152;"	d
TOID_NULL	deps/pmdk/src/include/libpmemobj/types.h	45;"	d
TOID_OFFSETOF	deps/pmdk/src/include/libpmemobj/types.h	202;"	d
TOID_TYPEOF	deps/pmdk/src/include/libpmemobj/types.h	200;"	d
TOID_TYPE_NUM	deps/pmdk/src/include/libpmemobj/types.h	142;"	d
TOID_TYPE_NUM_OF	deps/pmdk/src/include/libpmemobj/types.h	147;"	d
TOID_VALID	deps/pmdk/src/include/libpmemobj/types.h	158;"	d
TOKEN_LEN	deps/lua/src/llex.h	17;"	d
TOMBSTONE_MASK	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	47;"	d	file:
TOOLS	deps/pmdk/src/test/unittest/valgrind.py	/^TOOLS = tuple(t for t in _Tool if t != _Tool.NONE)$/;"	v
TOOLS_COMMON	deps/pmdk/src/test/tools/ddmap/Makefile	/^TOOLS_COMMON=y$/;"	m
TOOLS_COMMON	deps/pmdk/src/test/tools/pmemdetect/Makefile	/^TOOLS_COMMON=y$/;"	m
TOOLS_COMMON	deps/pmdk/src/test/tools/pmemobjcli/Makefile	/^TOOLS_COMMON=y$/;"	m
TOOLS_COMMON	deps/pmdk/src/test/tools/pmemspoil/Makefile	/^TOOLS_COMMON=y$/;"	m
TOOLS_COMMON	deps/pmdk/src/test/tools/pmemwrite/Makefile	/^TOOLS_COMMON=y$/;"	m
TOOLS_COMMON	deps/pmdk/src/tools/pmempool/Makefile	/^TOOLS_COMMON=y$/;"	m
TOOLS_COMMON	deps/pmdk/src/tools/rpmemd/Makefile	/^TOOLS_COMMON=y$/;"	m
TOP	deps/lua/etc/Makefile	/^TOP= ..$/;"	m
TOP	deps/pmdk/src/Makefile	/^TOP := $(dir $(lastword $(MAKEFILE_LIST)))..$/;"	m
TOP	deps/pmdk/src/benchmarks/Makefile	/^TOP := $(dir $(lastword $(MAKEFILE_LIST)))..\/..$/;"	m
TOP	deps/pmdk/src/examples/libpmemobj/map/Makefile	/^TOP := $(dir $(lastword $(MAKEFILE_LIST)))..\/..\/..\/..\/$/;"	m
TOP	deps/pmdk/src/examples/libpmemobj/pmemobjfs/Makefile	/^TOP := $(dir $(lastword $(MAKEFILE_LIST)))..\/..\/..\/..\/$/;"	m
TOP	deps/pmdk/src/examples/libpmemobj/pminvaders/Makefile	/^TOP := $(dir $(lastword $(MAKEFILE_LIST)))..\/..\/..\/..\/$/;"	m
TOP	deps/pmdk/src/examples/libpmemobj/slab_allocator/Makefile	/^TOP := $(dir $(lastword $(MAKEFILE_LIST)))..\/..\/..\/..\/$/;"	m
TOP	deps/pmdk/src/examples/librpmem/Makefile	/^TOP := ..\/..\/..$/;"	m
TOP	deps/pmdk/src/rpmem_common/Makefile	/^TOP := $(dir $(lastword $(MAKEFILE_LIST)))..\/..$/;"	m
TOP	deps/pmdk/src/test/obj_critnib_mt/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/obj_sync/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/obj_tx_add_range/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/obj_ulog_size/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/pmem2_config/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/pmem2_map/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/pmem_deep_persist/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/pmem_is_pmem_posix/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/rpmemd_config/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/rpmemd_db/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/rpmemd_dbg/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/rpmemd_log/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/rpmemd_util/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/anonymous_mmap/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/bttcreate/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/cmpmap/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/ctrld/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/ddmap/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/extents/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/fallocate_detect/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/fip/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/obj_verify/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/pmemalloc/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/pmemdetect/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/pmemobjcli/Makefile	/^TOP=..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/pmemspoil/Makefile	/^TOP=..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/pmemwrite/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/tools/usc_permission_check/Makefile	/^TOP = ..\/..\/..\/..$/;"	m
TOP	deps/pmdk/src/test/unittest/Makefile	/^TOP := $(dir $(lastword $(MAKEFILE_LIST)))..\/..\/..$/;"	m
TOP	deps/pmdk/src/tools/Makefile	/^TOP = ..\/..$/;"	m
TOP	deps/pmdk/src/tools/daxio/Makefile	/^TOP = ..\/..\/..$/;"	m
TOP	deps/pmdk/src/tools/rpmemd/Makefile	/^TOP = ..\/..\/..$/;"	m
TOTAL_PER_LANE	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	62;"	d	file:
TO_BIN	deps/lua/Makefile	/^TO_BIN= lua luac$/;"	m
TO_INC	deps/lua/Makefile	/^TO_INC= lua.h luaconf.h lualib.h lauxlib.h ..\/etc\/lua.hpp$/;"	m
TO_LIB	deps/lua/Makefile	/^TO_LIB= liblua.a$/;"	m
TO_MAN	deps/lua/Makefile	/^TO_MAN= lua.1 luac.1$/;"	m
TRACE_HOOK	deps/jemalloc/test/integration/chunk.c	24;"	d	file:
TSDN_NULL	deps/jemalloc/include/jemalloc/internal/tsd.h	18;"	d
TSD_INITIALIZER	deps/jemalloc/include/jemalloc/internal/tsd.h	607;"	d
TST	deps/lua/etc/Makefile	/^TST= $(TOP)\/test$/;"	m
TString	deps/lua/src/lobject.h	/^typedef union TString {$/;"	u
TString	deps/lua/src/lobject.h	/^} TString;$/;"	t	typeref:union:TString
TValue	deps/lua/src/lobject.h	/^} TValue;$/;"	t	typeref:struct:lua_TValue
TValuefields	deps/lua/src/lobject.h	/^    TValuefields;$/;"	m	struct:TKey::__anon28
TValuefields	deps/lua/src/lobject.h	/^  TValuefields;$/;"	m	struct:lua_TValue
TValuefields	deps/lua/src/lobject.h	71;"	d
TXTFILES	deps/pmdk/doc/Makefile	/^TXTFILES = $(MANPAGES:=.txt)$/;"	m
TX_ADD	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TX_ADD(child);$/;"	e	enum:c	file:
TX_ADD	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TX_ADD(node);$/;"	e	enum:c	file:
TX_ADD	deps/pmdk/src/include/libpmemobj/tx.h	122;"	d
TX_ADD_DIRECT	deps/pmdk/src/include/libpmemobj/tx.h	128;"	d
TX_ADD_FIELD	deps/pmdk/src/include/libpmemobj/tx.h	125;"	d
TX_ADD_FIELD_DIRECT	deps/pmdk/src/include/libpmemobj/tx.h	131;"	d
TX_ALIGN_SIZE	deps/pmdk/src/libpmemobj/tx.h	54;"	d
TX_ALLOC	deps/pmdk/src/include/libpmemobj/tx.h	149;"	d
TX_ALLOC_COUNT	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	780;"	d	file:
TX_ALLOC_COUNT	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	816;"	d	file:
TX_BEGIN	deps/pmdk/src/include/libpmemobj/tx.h	91;"	d
TX_BEGIN_CB	deps/pmdk/src/include/libpmemobj/tx.h	88;"	d
TX_BEGIN_LOCK	deps/pmdk/src/include/libpmemobj/tx.h	79;"	d
TX_BEGIN_PARAM	deps/pmdk/src/include/libpmemobj/tx.h	76;"	d
TX_DEFAULT_RANGE_CACHE_SIZE	deps/pmdk/src/libpmemobj/tx.h	48;"	d
TX_DEFAULT_RANGE_CACHE_THRESHOLD	deps/pmdk/src/libpmemobj/tx.h	49;"	d
TX_END	deps/pmdk/src/include/libpmemobj/tx.h	108;"	d
TX_FINALLY	deps/pmdk/src/include/libpmemobj/tx.h	103;"	d
TX_FREE	deps/pmdk/src/include/libpmemobj/tx.h	182;"	d
TX_FREE_COUNT	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	366;"	d	file:
TX_FREE_COUNT	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	379;"	d	file:
TX_INTENT_LOG_BUFFER_ALIGNMENT	deps/pmdk/src/libpmemobj/tx.h	60;"	d
TX_INTENT_LOG_BUFFER_OVERHEAD	deps/pmdk/src/libpmemobj/tx.h	61;"	d
TX_INTENT_LOG_ENTRY_OVERHEAD	deps/pmdk/src/libpmemobj/tx.h	62;"	d
TX_LOCK_MUTEX	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_LOCK_MUTEX  tx_lock_deprecated = TX_PARAM_MUTEX,$/;"	e	enum:pobj_tx_lock
TX_LOCK_NONE	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_LOCK_NONE   tx_lock_deprecated = TX_PARAM_NONE,$/;"	e	enum:pobj_tx_lock
TX_LOCK_RWLOCK	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_LOCK_RWLOCK tx_lock_deprecated = TX_PARAM_RWLOCK,$/;"	e	enum:pobj_tx_lock
TX_LOG_TYPE_INTENT	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_LOG_TYPE_INTENT,$/;"	e	enum:pobj_log_type
TX_LOG_TYPE_SNAPSHOT	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_LOG_TYPE_SNAPSHOT,$/;"	e	enum:pobj_log_type
TX_MEMCPY	deps/pmdk/src/include/libpmemobj/tx.h	/^TX_MEMCPY(void *dest, const void *src, size_t num)$/;"	f
TX_MEMSET	deps/pmdk/src/include/libpmemobj/tx.h	/^TX_MEMSET(void *dest, int c, size_t num)$/;"	f
TX_NEW	deps/pmdk/src/include/libpmemobj/tx.h	146;"	d
TX_ONABORT	deps/pmdk/src/include/libpmemobj/tx.h	93;"	d
TX_ONABORT_CHECK	deps/pmdk/src/include/libpmemobj/tx.h	51;"	d
TX_ONABORT_CHECK	deps/pmdk/src/include/libpmemobj/tx.h	56;"	d
TX_ONCOMMIT	deps/pmdk/src/include/libpmemobj/tx.h	98;"	d
TX_PARAM_CB	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_PARAM_CB,	 \/* pmemobj_tx_callback cb, void *arg *\/$/;"	e	enum:pobj_tx_param
TX_PARAM_MUTEX	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_PARAM_MUTEX,	 \/* PMEMmutex *\/$/;"	e	enum:pobj_tx_param
TX_PARAM_NONE	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_PARAM_NONE,$/;"	e	enum:pobj_tx_param
TX_PARAM_RWLOCK	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_PARAM_RWLOCK, \/* PMEMrwlock *\/$/;"	e	enum:pobj_tx_param
TX_RANGE_MASK	deps/pmdk/src/libpmemobj/tx.h	51;"	d
TX_RANGE_MASK_LEGACY	deps/pmdk/src/libpmemobj/tx.h	52;"	d
TX_REALLOC	deps/pmdk/src/include/libpmemobj/tx.h	163;"	d
TX_SET	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^		TX_SET(D_RW(child)->slots[c], parent, node);$/;"	e	enum:c	file:
TX_SET	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TX_SET(NODE_P(node), slots[NODE_LOCATION(node)], child);$/;"	e	enum:c	file:
TX_SET	deps/pmdk/src/include/libpmemobj/tx.h	188;"	d
TX_SET_DIRECT	deps/pmdk/src/include/libpmemobj/tx.h	192;"	d
TX_SNAPSHOT_LOG_BUFFER_OVERHEAD	deps/pmdk/src/libpmemobj/tx.h	57;"	d
TX_SNAPSHOT_LOG_ENTRY_ALIGNMENT	deps/pmdk/src/libpmemobj/tx.h	56;"	d
TX_SNAPSHOT_LOG_ENTRY_OVERHEAD	deps/pmdk/src/libpmemobj/tx.h	58;"	d
TX_STAGE_FINALLY	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_STAGE_FINALLY,	\/* always called *\/$/;"	e	enum:pobj_tx_stage
TX_STAGE_NONE	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_STAGE_NONE,		\/* no transaction in this thread *\/$/;"	e	enum:pobj_tx_stage
TX_STAGE_ONABORT	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_STAGE_ONABORT,	\/* tx_begin failed or transaction aborted *\/$/;"	e	enum:pobj_tx_stage
TX_STAGE_ONCOMMIT	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_STAGE_ONCOMMIT,	\/* successfully committed *\/$/;"	e	enum:pobj_tx_stage
TX_STAGE_WORK	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_STAGE_WORK,		\/* transaction in progress *\/$/;"	e	enum:pobj_tx_stage
TX_STRDUP	deps/pmdk/src/include/libpmemobj/tx.h	170;"	d
TX_WCSDUP	deps/pmdk/src/include/libpmemobj/tx.h	176;"	d
TX_XADD	deps/pmdk/src/include/libpmemobj/tx.h	134;"	d
TX_XADD_DIRECT	deps/pmdk/src/include/libpmemobj/tx.h	140;"	d
TX_XADD_FIELD	deps/pmdk/src/include/libpmemobj/tx.h	137;"	d
TX_XADD_FIELD_DIRECT	deps/pmdk/src/include/libpmemobj/tx.h	143;"	d
TX_XALLOC	deps/pmdk/src/include/libpmemobj/tx.h	158;"	d
TX_XFREE	deps/pmdk/src/include/libpmemobj/tx.h	185;"	d
TX_XSTRDUP	deps/pmdk/src/include/libpmemobj/tx.h	173;"	d
TX_XWCSDUP	deps/pmdk/src/include/libpmemobj/tx.h	179;"	d
TX_ZALLOC	deps/pmdk/src/include/libpmemobj/tx.h	155;"	d
TX_ZNEW	deps/pmdk/src/include/libpmemobj/tx.h	152;"	d
TX_ZREALLOC	deps/pmdk/src/include/libpmemobj/tx.h	166;"	d
TYPE_ABORT	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_ABORT,$/;"	e	enum:type_number	file:
TYPE_ABORT	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_ABORT,$/;"	e	enum:type_number	file:
TYPE_ABORT	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_ABORT,$/;"	e	enum:type_number	file:
TYPE_ABORT_AFTER_NESTED1	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_ABORT_AFTER_NESTED1,$/;"	e	enum:type_number	file:
TYPE_ABORT_AFTER_NESTED1	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_ABORT_AFTER_NESTED1,$/;"	e	enum:type_number	file:
TYPE_ABORT_AFTER_NESTED2	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_ABORT_AFTER_NESTED2,$/;"	e	enum:type_number	file:
TYPE_ABORT_AFTER_NESTED2	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_ABORT_AFTER_NESTED2,$/;"	e	enum:type_number	file:
TYPE_ABORT_ALLOC	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_ABORT_ALLOC,$/;"	e	enum:type_number	file:
TYPE_ABORT_HUGE	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_ABORT_HUGE,$/;"	e	enum:type_number	file:
TYPE_ABORT_NESTED1	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_ABORT_NESTED1,$/;"	e	enum:type_number	file:
TYPE_ABORT_NESTED1	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_ABORT_NESTED1,$/;"	e	enum:type_number	file:
TYPE_ABORT_NESTED2	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_ABORT_NESTED2,$/;"	e	enum:type_number	file:
TYPE_ABORT_NESTED2	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_ABORT_NESTED2,$/;"	e	enum:type_number	file:
TYPE_ABORT_ZERO	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_ABORT_ZERO,$/;"	e	enum:type_number	file:
TYPE_ABORT_ZERO_HUGE	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_ABORT_ZERO_HUGE,$/;"	e	enum:type_number	file:
TYPE_ABORT_ZERO_HUGE_MACRO	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_ABORT_ZERO_HUGE_MACRO,$/;"	e	enum:type_number	file:
TYPE_ABORT_ZERO_MACRO	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_ABORT_ZERO_MACRO,$/;"	e	enum:type_number	file:
TYPE_COMMIT	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_COMMIT,$/;"	e	enum:type_number	file:
TYPE_COMMIT	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_COMMIT,$/;"	e	enum:type_number	file:
TYPE_COMMIT	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_COMMIT,$/;"	e	enum:type_number	file:
TYPE_COMMIT_ALLOC	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_COMMIT_ALLOC,$/;"	e	enum:type_number	file:
TYPE_COMMIT_NESTED1	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_COMMIT_NESTED1,$/;"	e	enum:type_number	file:
TYPE_COMMIT_NESTED1	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_COMMIT_NESTED1,$/;"	e	enum:type_number	file:
TYPE_COMMIT_NESTED2	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_COMMIT_NESTED2,$/;"	e	enum:type_number	file:
TYPE_COMMIT_NESTED2	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_COMMIT_NESTED2,$/;"	e	enum:type_number	file:
TYPE_COMMIT_ZERO	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_COMMIT_ZERO,$/;"	e	enum:type_number	file:
TYPE_COMMIT_ZERO_MACRO	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_COMMIT_ZERO_MACRO,$/;"	e	enum:type_number	file:
TYPE_DEVDAX	deps/pmdk/src/common/file.h	/^	TYPE_DEVDAX = 2$/;"	e	enum:file_type
TYPE_FREE	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_FREE,$/;"	e	enum:type_number	file:
TYPE_FREE_ABORT	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_ABORT,$/;"	e	enum:type_number	file:
TYPE_FREE_ABORT	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_FREE_ABORT,$/;"	e	enum:type_number	file:
TYPE_FREE_ABORT_AFTER_NESTED1	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_ABORT_AFTER_NESTED1,$/;"	e	enum:type_number	file:
TYPE_FREE_ABORT_AFTER_NESTED2	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_ABORT_AFTER_NESTED2,$/;"	e	enum:type_number	file:
TYPE_FREE_ABORT_NESTED1	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_ABORT_NESTED1,$/;"	e	enum:type_number	file:
TYPE_FREE_ABORT_NESTED2	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_ABORT_NESTED2,$/;"	e	enum:type_number	file:
TYPE_FREE_AFTER_ABORT	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_AFTER_ABORT,$/;"	e	enum:type_number	file:
TYPE_FREE_ALLOC	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_ALLOC,$/;"	e	enum:type_number	file:
TYPE_FREE_COMMIT	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_COMMIT,$/;"	e	enum:type_number	file:
TYPE_FREE_COMMIT	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_FREE_COMMIT,$/;"	e	enum:type_number	file:
TYPE_FREE_COMMIT_NESTED1	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_COMMIT_NESTED1,$/;"	e	enum:type_number	file:
TYPE_FREE_COMMIT_NESTED2	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_COMMIT_NESTED2,$/;"	e	enum:type_number	file:
TYPE_FREE_MANY_TIMES	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_MANY_TIMES,$/;"	e	enum:type_number	file:
TYPE_FREE_NO_TX	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_NO_TX,$/;"	e	enum:type_number	file:
TYPE_FREE_OOM	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_OOM,$/;"	e	enum:type_number	file:
TYPE_FREE_WRONG_UUID	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	TYPE_FREE_WRONG_UUID,$/;"	e	enum:type_number	file:
TYPE_HASH	src/redis-cli.c	1940;"	d	file:
TYPE_LIST	src/redis-cli.c	1938;"	d	file:
TYPE_MODE_ONE	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	TYPE_MODE_ONE, \/* one type number for all of objects *\/$/;"	e	enum:type_mode	file:
TYPE_MODE_ONE	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	TYPE_MODE_ONE,$/;"	e	enum:type_mode	file:
TYPE_MODE_PER_THREAD	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	TYPE_MODE_PER_THREAD,$/;"	e	enum:type_mode	file:
TYPE_MODE_PER_THREAD	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	TYPE_MODE_PER_THREAD,$/;"	e	enum:type_mode	file:
TYPE_MODE_RAND	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	TYPE_MODE_RAND, \/* random type number for each object *\/$/;"	e	enum:type_mode	file:
TYPE_MODE_RAND	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	TYPE_MODE_RAND,$/;"	e	enum:type_mode	file:
TYPE_MODE_UNKNOWN	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	TYPE_MODE_UNKNOWN,$/;"	e	enum:type_mode	file:
TYPE_NOFLUSH	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_NOFLUSH,$/;"	e	enum:type_number	file:
TYPE_NONE	src/redis-cli.c	1942;"	d	file:
TYPE_NORMAL	deps/pmdk/src/common/file.h	/^	TYPE_NORMAL = 1,$/;"	e	enum:file_type
TYPE_NO_TX	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_NO_TX,$/;"	e	enum:type_number	file:
TYPE_NO_TX	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_NO_TX,$/;"	e	enum:type_number	file:
TYPE_NO_TX	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_NO_TX,$/;"	e	enum:type_number	file:
TYPE_NULL	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^	TYPE_NULL,$/;"	e	enum:type_number	file:
TYPE_NULL_ALLOC	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^	TYPE_NULL_ALLOC,$/;"	e	enum:type_number	file:
TYPE_NULL_ALLOC_1	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^	TYPE_NULL_ALLOC_1,$/;"	e	enum:type_number	file:
TYPE_OBJ	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^	TYPE_OBJ,$/;"	e	enum:type_number	file:
TYPE_OBJ	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^	TYPE_OBJ,$/;"	e	enum:type_number	file:
TYPE_OBJ_ABORT	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^	TYPE_OBJ_ABORT,$/;"	e	enum:type_number	file:
TYPE_OBJ_ABORT	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^	TYPE_OBJ_ABORT,$/;"	e	enum:type_number	file:
TYPE_OBJ_WRONG_UUID	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^	TYPE_OBJ_WRONG_UUID,$/;"	e	enum:type_number	file:
TYPE_OOM	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_OOM,$/;"	e	enum:type_number	file:
TYPE_SET	src/redis-cli.c	1939;"	d	file:
TYPE_SIMPLE	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^	TYPE_SIMPLE,$/;"	e	enum:type_number	file:
TYPE_SIMPLE_ALLOC	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^	TYPE_SIMPLE_ALLOC,$/;"	e	enum:type_number	file:
TYPE_SIMPLE_ALLOC_1	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^	TYPE_SIMPLE_ALLOC_1,$/;"	e	enum:type_number	file:
TYPE_SIMPLE_ALLOC_2	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^	TYPE_SIMPLE_ALLOC_2,$/;"	e	enum:type_number	file:
TYPE_STRING	src/redis-cli.c	1937;"	d	file:
TYPE_TYPE	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	TYPE_TYPE,$/;"	e	enum:type_number	file:
TYPE_WCS_ABORT	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_WCS_ABORT,$/;"	e	enum:type_number	file:
TYPE_WCS_ABORT_AFTER_NESTED1	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_WCS_ABORT_AFTER_NESTED1,$/;"	e	enum:type_number	file:
TYPE_WCS_ABORT_AFTER_NESTED2	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_WCS_ABORT_AFTER_NESTED2,$/;"	e	enum:type_number	file:
TYPE_WCS_ABORT_NESTED1	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_WCS_ABORT_NESTED1,$/;"	e	enum:type_number	file:
TYPE_WCS_ABORT_NESTED2	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_WCS_ABORT_NESTED2,$/;"	e	enum:type_number	file:
TYPE_WCS_COMMIT	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_WCS_COMMIT,$/;"	e	enum:type_number	file:
TYPE_WCS_COMMIT_NESTED1	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_WCS_COMMIT_NESTED1,$/;"	e	enum:type_number	file:
TYPE_WCS_COMMIT_NESTED2	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_WCS_COMMIT_NESTED2,$/;"	e	enum:type_number	file:
TYPE_WCS_FREE_ABORT	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_WCS_FREE_ABORT,$/;"	e	enum:type_number	file:
TYPE_WCS_FREE_COMMIT	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_WCS_FREE_COMMIT,$/;"	e	enum:type_number	file:
TYPE_WCS_NOFLUSH	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_WCS_NOFLUSH,$/;"	e	enum:type_number	file:
TYPE_WCS_NO_TX	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^	TYPE_WCS_NO_TX,$/;"	e	enum:type_number	file:
TYPE_XABORT	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_XABORT,$/;"	e	enum:type_number	file:
TYPE_XCOMMIT	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_XCOMMIT,$/;"	e	enum:type_number	file:
TYPE_XNOFLUSHED_COMMIT	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_XNOFLUSHED_COMMIT,$/;"	e	enum:type_number	file:
TYPE_XZEROED_ABORT	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_XZEROED_ABORT,$/;"	e	enum:type_number	file:
TYPE_XZEROED_COMMIT	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_XZEROED_COMMIT,$/;"	e	enum:type_number	file:
TYPE_ZEROED_ABORT	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_ZEROED_ABORT,$/;"	e	enum:type_number	file:
TYPE_ZEROED_COMMIT	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	TYPE_ZEROED_COMMIT,$/;"	e	enum:type_number	file:
TYPE_ZSET	src/redis-cli.c	1941;"	d	file:
T_ARR_BEGIN	deps/lua/src/lua_cjson.c	/^    T_ARR_BEGIN,$/;"	e	enum:__anon42	file:
T_ARR_END	deps/lua/src/lua_cjson.c	/^    T_ARR_END,$/;"	e	enum:__anon42	file:
T_BOOLEAN	deps/lua/src/lua_cjson.c	/^    T_BOOLEAN,$/;"	e	enum:__anon42	file:
T_COLON	deps/lua/src/lua_cjson.c	/^    T_COLON,$/;"	e	enum:__anon42	file:
T_COMMA	deps/lua/src/lua_cjson.c	/^    T_COMMA,$/;"	e	enum:__anon42	file:
T_END	deps/lua/src/lua_cjson.c	/^    T_END,$/;"	e	enum:__anon42	file:
T_ERROR	deps/lua/src/lua_cjson.c	/^    T_ERROR,$/;"	e	enum:__anon42	file:
T_NULL	deps/lua/src/lua_cjson.c	/^    T_NULL,$/;"	e	enum:__anon42	file:
T_NUMBER	deps/lua/src/lua_cjson.c	/^    T_NUMBER,$/;"	e	enum:__anon42	file:
T_OBJ_BEGIN	deps/lua/src/lua_cjson.c	/^    T_OBJ_BEGIN,$/;"	e	enum:__anon42	file:
T_OBJ_END	deps/lua/src/lua_cjson.c	/^    T_OBJ_END,$/;"	e	enum:__anon42	file:
T_STRING	deps/lua/src/lua_cjson.c	/^    T_STRING,$/;"	e	enum:__anon42	file:
T_UNKNOWN	deps/lua/src/lua_cjson.c	/^    T_UNKNOWN$/;"	e	enum:__anon42	file:
T_WHITESPACE	deps/lua/src/lua_cjson.c	/^    T_WHITESPACE,$/;"	e	enum:__anon42	file:
Table	deps/lua/src/lobject.h	/^typedef struct Table {$/;"	s
Table	deps/lua/src/lobject.h	/^} Table;$/;"	t	typeref:struct:Table
Test_obj	deps/pmdk/src/test/obj_sync/obj_sync.c	/^} *Test_obj;$/;"	v	typeref:struct:mock_obj	file:
Testname	deps/pmdk/src/test/unittest/ut.c	/^static char *Testname;		\/* set by UNITTEST_NAME env variable *\/$/;"	v	file:
Threads	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^static unsigned Threads;$/;"	v	file:
TiB	deps/pmdk/src/test/unittest/utils.py	/^TiB = 2 ** 40$/;"	v
Token	deps/lua/src/llex.h	/^typedef struct Token {$/;"	s
Token	deps/lua/src/llex.h	/^} Token;$/;"	t	typeref:struct:Token
TotalHandleTableUsage	deps/pmdk/src/test/unittest/ut.c	/^	ULONG TotalHandleTableUsage;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
TotalNamePoolUsage	deps/pmdk/src/test/unittest/ut.c	/^	ULONG TotalNamePoolUsage;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
TotalNonPagedPoolUsage	deps/pmdk/src/test/unittest/ut.c	/^	ULONG TotalNonPagedPoolUsage;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
TotalNumberOfHandles	deps/pmdk/src/test/unittest/ut.c	/^	ULONG TotalNumberOfHandles;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
TotalNumberOfObjects	deps/pmdk/src/test/unittest/ut.c	/^	ULONG TotalNumberOfObjects;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
TotalPagedPoolUsage	deps/pmdk/src/test/unittest/ut.c	/^	ULONG TotalPagedPoolUsage;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
Tracefp	deps/pmdk/src/test/unittest/ut.c	/^static FILE *Tracefp;$/;"	v	file:
Tx_per_thread	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^static unsigned Tx_per_thread;$/;"	v	file:
U2S_BUFSIZE	deps/jemalloc/src/util.c	34;"	d	file:
UBits	deps/lua/src/lua_bit.c	/^typedef uint32_t UBits;$/;"	t	file:
UINT16_C	deps/jemalloc/include/msvc_compat/C99/stdint.h	236;"	d
UINT16_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	141;"	d
UINT32_C	deps/jemalloc/include/msvc_compat/C99/stdint.h	237;"	d
UINT32_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	142;"	d
UINT64_C	deps/jemalloc/include/msvc_compat/C99/stdint.h	238;"	d
UINT64_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	143;"	d
UINT8_C	deps/jemalloc/include/msvc_compat/C99/stdint.h	235;"	d
UINT8_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	140;"	d
UINTMAX_C	deps/jemalloc/include/msvc_compat/C99/stdint.h	242;"	d
UINTMAX_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	187;"	d
UINTPTR_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	177;"	d
UINTPTR_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	181;"	d
UINT_FAST16_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	169;"	d
UINT_FAST32_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	170;"	d
UINT_FAST64_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	171;"	d
UINT_FAST8_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	168;"	d
UINT_LEAST16_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	155;"	d
UINT_LEAST32_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	156;"	d
UINT_LEAST64_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	157;"	d
UINT_LEAST8_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	154;"	d
ULOG	deps/pmdk/src/libpmemobj/ulog.h	74;"	d
ULOG_ANY_USER_BUFFER	deps/pmdk/src/libpmemobj/ulog.h	118;"	d
ULOG_BASE_SIZE	deps/pmdk/src/libpmemobj/memops.c	54;"	d	file:
ULOG_BIT_OPERATIONS	deps/pmdk/src/libpmemobj/ulog.h	111;"	d
ULOG_FREE_AFTER_FIRST	deps/pmdk/src/libpmemobj/ulog.h	114;"	d
ULOG_INC_FIRST_GEN_NUM	deps/pmdk/src/libpmemobj/ulog.h	116;"	d
ULOG_OFFSET_MASK	deps/pmdk/src/libpmemobj/ulog.c	57;"	d	file:
ULOG_OPERATION	deps/pmdk/src/libpmemobj/ulog.c	53;"	d	file:
ULOG_OPERATION_AND	deps/pmdk/src/libpmemobj/ulog.h	106;"	d
ULOG_OPERATION_BUF_CPY	deps/pmdk/src/libpmemobj/ulog.h	109;"	d
ULOG_OPERATION_BUF_SET	deps/pmdk/src/libpmemobj/ulog.h	108;"	d
ULOG_OPERATION_FROM_OFFSET	deps/pmdk/src/libpmemobj/ulog.c	55;"	d	file:
ULOG_OPERATION_MASK	deps/pmdk/src/libpmemobj/ulog.c	54;"	d	file:
ULOG_OPERATION_OR	deps/pmdk/src/libpmemobj/ulog.h	107;"	d
ULOG_OPERATION_SET	deps/pmdk/src/libpmemobj/ulog.h	105;"	d
ULOG_SIZE	deps/pmdk/src/test/obj_memops/obj_memops.c	497;"	d	file:
ULOG_SIZE	deps/pmdk/src/test/obj_memops/obj_memops.c	562;"	d	file:
ULOG_SIZE	deps/pmdk/src/test/obj_memops/obj_memops.c	571;"	d	file:
ULOG_SIZE	deps/pmdk/src/test/obj_memops/obj_memops.c	594;"	d	file:
ULOG_UNUSED	deps/pmdk/src/libpmemobj/ulog.h	68;"	d
ULOG_USER_OWNED	deps/pmdk/src/libpmemobj/ulog.h	93;"	d
ULONG_ONEZERO	src/memtest.c	52;"	d	file:
ULONG_ONEZERO	src/memtest.c	55;"	d	file:
ULONG_ZEROONE	src/memtest.c	53;"	d	file:
ULONG_ZEROONE	src/memtest.c	56;"	d	file:
ULTRA_FAST	src/lzfP.h	75;"	d
UNARY_PRIORITY	deps/lua/src/lparser.c	821;"	d	file:
UNDEF_PART	deps/pmdk/src/libpmempool/replica.h	48;"	d
UNDEF_PART	deps/pmdk/src/tools/pmempool/info.c	69;"	d	file:
UNDEF_REPLICA	deps/pmdk/src/libpmempool/replica.h	47;"	d
UNDEF_REPLICA	deps/pmdk/src/tools/pmempool/info.c	68;"	d	file:
UNISTD_H	deps/pmdk/src/windows/include/unistd.h	38;"	d
UNIT_MILLISECONDS	src/server.h	438;"	d
UNIT_SECONDS	src/server.h	437;"	d
UNKNOWN_ARRAY_TYPE	deps/pmdk/src/examples/libpmemobj/array/array.c	/^	UNKNOWN_ARRAY_TYPE,$/;"	e	enum:array_types	file:
UNKNOWN_QUEUE_OP	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	UNKNOWN_QUEUE_OP,$/;"	e	enum:queue_op	file:
UNLINK	deps/pmdk/src/test/unittest/unittest.h	470;"	d
UNMAPPED_STR	deps/pmdk/src/common/util_windows.c	52;"	d	file:
UNMAPPED_STR	deps/pmdk/src/test/unittest/ut.c	120;"	d	file:
UNUSED	deps/hiredis/sds.c	1105;"	d	file:
UNUSED	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	36;"	d
UNUSED	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	38;"	d
UNUSED	deps/lua/src/llimits.h	70;"	d
UNUSED	src/crc64.c	187;"	d	file:
UNUSED	src/endianconv.c	107;"	d	file:
UNUSED	src/intset.c	351;"	d	file:
UNUSED	src/quicklist.c	1449;"	d	file:
UNUSED	src/redis-benchmark.c	49;"	d	file:
UNUSED	src/redis-cli.c	57;"	d	file:
UNUSED	src/sds.c	1215;"	d	file:
UNUSED	src/server.h	394;"	d
UNUSED	src/sha1.c	203;"	d	file:
UNUSED	src/util.c	737;"	d	file:
UNUSED	src/zipmap.c	407;"	d	file:
UNW_LOCAL_ONLY	deps/jemalloc/src/prof.c	6;"	d	file:
UNW_LOCAL_ONLY	deps/pmdk/src/test/unittest/ut_backtrace.c	45;"	d	file:
USABLE_SIZE	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	61;"	d	file:
USABLE_SIZE	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	62;"	d	file:
USAGE	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	195;"	d	file:
USAGE	deps/pmdk/src/test/pmem_memmove/pmem_memmove.c	187;"	d	file:
USAGE	deps/pmdk/src/test/rpmemd_log/rpmemd_log_test.c	146;"	d	file:
USAGE	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	108;"	d	file:
USAGE	deps/pmdk/src/test/tools/pmemalloc/pmemalloc.c	47;"	d	file:
USAGE_MESSAGE	deps/pmdk/src/tools/daxio/daxio.c	73;"	d	file:
USER_DATA_V	deps/pmdk/src/test/obj_pool/obj_pool.c	50;"	d	file:
USER_DATA_V1	deps/pmdk/src/test/obj_tx_user_data/obj_tx_user_data.c	40;"	d	file:
USER_DATA_V2	deps/pmdk/src/test/obj_tx_user_data/obj_tx_user_data.c	41;"	d	file:
USE_BIG_ALLOC	deps/pmdk/src/test/obj_constructor/obj_constructor.c	48;"	d	file:
USE_BTTCREATE	deps/pmdk/src/test/bttdevice/Makefile	/^USE_BTTCREATE=y$/;"	m
USE_BTTCREATE	deps/pmdk/src/test/libpmempool_api/Makefile	/^USE_BTTCREATE=y$/;"	m
USE_DDMAP	deps/pmdk/src/test/pmempool_check/Makefile	/^USE_DDMAP=y$/;"	m
USE_DDMAP	deps/pmdk/src/test/pmempool_sync/Makefile	/^USE_DDMAP=y$/;"	m
USE_DDMAP	deps/pmdk/src/test/pmempool_transform/Makefile	/^USE_DDMAP=y$/;"	m
USE_OBJ_VERIFY	deps/pmdk/src/test/pmempool_sync/Makefile	/^USE_OBJ_VERIFY=y$/;"	m
USE_PMEMALLOC	deps/pmdk/src/test/obj_check/Makefile	/^USE_PMEMALLOC=y$/;"	m
USE_PMEMALLOC	deps/pmdk/src/test/pmempool_info/Makefile	/^USE_PMEMALLOC=y$/;"	m
USE_PMEMOBJCLI	deps/pmdk/src/test/libpmempool_sync/Makefile	/^USE_PMEMOBJCLI=y$/;"	m
USE_PMEMOBJCLI	deps/pmdk/src/test/libpmempool_transform/Makefile	/^USE_PMEMOBJCLI=y$/;"	m
USE_PMEMOBJCLI	deps/pmdk/src/test/pmemobjcli/Makefile	/^USE_PMEMOBJCLI=y$/;"	m
USE_PMEMOBJCLI	deps/pmdk/src/test/pmempool_sync/Makefile	/^USE_PMEMOBJCLI=y$/;"	m
USE_PMEMOBJCLI	deps/pmdk/src/test/pmempool_transform/Makefile	/^USE_PMEMOBJCLI=y$/;"	m
USE_PMEMSPOIL	deps/pmdk/src/test/blk_pool/Makefile	/^USE_PMEMSPOIL=y$/;"	m
USE_PMEMSPOIL	deps/pmdk/src/test/bttdevice/Makefile	/^USE_PMEMSPOIL=y$/;"	m
USE_PMEMSPOIL	deps/pmdk/src/test/compat_incompat_features/Makefile	/^USE_PMEMSPOIL=y$/;"	m
USE_PMEMSPOIL	deps/pmdk/src/test/libpmempool_api/Makefile	/^USE_PMEMSPOIL=y$/;"	m
USE_PMEMSPOIL	deps/pmdk/src/test/libpmempool_sync/Makefile	/^USE_PMEMSPOIL=y$/;"	m
USE_PMEMSPOIL	deps/pmdk/src/test/log_pool/Makefile	/^USE_PMEMSPOIL=y$/;"	m
USE_PMEMSPOIL	deps/pmdk/src/test/obj_check/Makefile	/^USE_PMEMSPOIL=y$/;"	m
USE_PMEMSPOIL	deps/pmdk/src/test/pmempool_check/Makefile	/^USE_PMEMSPOIL=y$/;"	m
USE_PMEMSPOIL	deps/pmdk/src/test/pmempool_sync/Makefile	/^USE_PMEMSPOIL=y$/;"	m
USE_PMEMSPOIL	deps/pmdk/src/test/pmemspoil/Makefile	/^USE_PMEMSPOIL=y$/;"	m
USE_PMEMSPOIL	deps/pmdk/src/test/util_poolset/Makefile	/^USE_PMEMSPOIL=y$/;"	m
USE_PMEMWRITE	deps/pmdk/src/test/libpmempool_api/Makefile	/^USE_PMEMWRITE=y$/;"	m
USE_PMEMWRITE	deps/pmdk/src/test/obj_check/Makefile	/^USE_PMEMWRITE=y$/;"	m
USE_PMEMWRITE	deps/pmdk/src/test/pmempool_check/Makefile	/^USE_PMEMWRITE=y$/;"	m
USE_PMEMWRITE	deps/pmdk/src/test/pmempool_dump/Makefile	/^USE_PMEMWRITE=y$/;"	m
USE_PMEMWRITE	deps/pmdk/src/test/pmempool_info/Makefile	/^USE_PMEMWRITE=y$/;"	m
USE_SETPROCTITLE	src/config.h	121;"	d
USE_SETPROCTITLE	src/config.h	125;"	d
USE_TREE	deps/jemalloc/include/jemalloc/internal/bitmap.h	24;"	d
UTF8_BOM	deps/pmdk/src/common/os_windows.c	46;"	d	file:
UTIL_MAX_ERR_MSG	deps/pmdk/src/common/util.h	111;"	d
UTRACE	deps/jemalloc/src/jemalloc.c	251;"	d	file:
UTRACE	deps/jemalloc/src/jemalloc.c	263;"	d	file:
UT_ASSERT	deps/pmdk/src/test/unittest/unittest.h	267;"	d
UT_ASSERT_COMPILE_ERROR_ON	deps/pmdk/src/test/unittest/unittest.h	249;"	d
UT_ASSERT_COMPILE_ERROR_ON	deps/pmdk/src/test/unittest/unittest.h	253;"	d
UT_ASSERT_COMPILE_ERROR_ON	deps/pmdk/src/test/unittest/unittest.h	257;"	d
UT_ASSERT_COMPILE_ERROR_ON	deps/pmdk/src/test/unittest/unittest.h	262;"	d
UT_ASSERT_rt	deps/pmdk/src/test/unittest/unittest.h	226;"	d
UT_ASSERTeq	deps/pmdk/src/test/unittest/unittest.h	289;"	d
UT_ASSERTeq_rt	deps/pmdk/src/test/unittest/unittest.h	236;"	d
UT_ASSERTinfo	deps/pmdk/src/test/unittest/unittest.h	280;"	d
UT_ASSERTinfo_rt	deps/pmdk/src/test/unittest/unittest.h	231;"	d
UT_ASSERTne	deps/pmdk/src/test/unittest/unittest.h	298;"	d
UT_ASSERTne_rt	deps/pmdk/src/test/unittest/unittest.h	242;"	d
UT_ASSERTrange	deps/pmdk/src/test/unittest/unittest.h	307;"	d
UT_COMPILE_ERROR_ON	deps/pmdk/src/test/unittest/unittest.h	248;"	d
UT_COMPILE_ERROR_ON	deps/pmdk/src/test/unittest/unittest.h	251;"	d
UT_COMPILE_ERROR_ON	deps/pmdk/src/test/unittest/unittest.h	255;"	d
UT_DEFINE_ASAN_POISON	deps/pmdk/src/test/unittest/unittest.h	770;"	d
UT_DEFINE_ASAN_POISON	deps/pmdk/src/test/unittest/unittest.h	774;"	d
UT_ERR	deps/pmdk/src/test/unittest/unittest.h	218;"	d
UT_FATAL	deps/pmdk/src/test/unittest/unittest.h	210;"	d
UT_MAX_ERR_MSG	deps/pmdk/src/test/unittest/unittest.h	126;"	d
UT_OUT	deps/pmdk/src/test/unittest/unittest.h	214;"	d
UT_PMEM2_CONFIG_H	deps/pmdk/src/test/unittest/ut_pmem2_config.h	38;"	d
UT_PMEM2_EXPECT_RETURN	deps/pmdk/src/test/unittest/ut_pmem2_utils.h	41;"	d
UT_PMEM2_H	deps/pmdk/src/test/unittest/ut_pmem2.h	38;"	d
UT_PMEM2_UTILS_H	deps/pmdk/src/test/unittest/ut_pmem2_utils.h	38;"	d
UT_POOL_HDR_UUID_GEN_FILE	deps/pmdk/src/test/unittest/unittest.h	128;"	d
UT_POOL_HDR_UUID_STR_LEN	deps/pmdk/src/test/unittest/unittest.h	127;"	d
UUID_FROM_BTT	deps/pmdk/src/libpmempool/pool.h	/^		UUID_FROM_BTT,$/;"	e	enum:pool_data::__anon94
UUID_NOP	deps/pmdk/src/libpmempool/pool.h	/^		UUID_NOP = 0,$/;"	e	enum:pool_data::__anon94
UUID_NOT_FROM_BTT	deps/pmdk/src/libpmempool/pool.h	/^		UUID_NOT_FROM_BTT,$/;"	e	enum:pool_data::__anon94
UUID_STR_MAX	deps/pmdk/src/libpmempool/check_util.c	61;"	d	file:
UUID_STR_MAX	deps/pmdk/src/tools/pmempool/output.c	55;"	d	file:
Udata	deps/lua/src/lobject.h	/^typedef union Udata {$/;"	u
Udata	deps/lua/src/lobject.h	/^} Udata;$/;"	t	typeref:union:Udata
Uinttype	deps/lua/src/lua_struct.c	/^typedef unsigned STRUCT_INT Uinttype;$/;"	t	file:
Ulog_fail	deps/pmdk/src/test/obj_list/obj_list.c	/^enum ulog_fail Ulog_fail = NO_FAIL;$/;"	v	typeref:enum:ulog_fail
UnOpr	deps/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	g
UnOpr	deps/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	t	typeref:enum:UnOpr
UniqueProcessId	deps/pmdk/src/test/unittest/ut.c	/^	HANDLE UniqueProcessId;$/;"	m	struct:_SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	file:
UpVal	deps/lua/src/lobject.h	/^typedef struct UpVal {$/;"	s
UpVal	deps/lua/src/lobject.h	/^} UpVal;$/;"	t	typeref:struct:UpVal
Ut_mmap_align	deps/pmdk/src/test/unittest/ut.c	/^unsigned long long Ut_mmap_align;$/;"	v
Ut_pagesize	deps/pmdk/src/test/unittest/ut.c	/^unsigned long Ut_pagesize;$/;"	v
V	deps/lua/Makefile	/^V= 5.1$/;"	m
VALGRIND_ADD_TO_GLOBAL_TX_IGNORE	deps/pmdk/src/common/valgrind_internal.h	253;"	d
VALGRIND_ADD_TO_GLOBAL_TX_IGNORE	deps/pmdk/src/common/valgrind_internal.h	359;"	d
VALGRIND_ADD_TO_TX	deps/pmdk/src/common/valgrind_internal.h	233;"	d
VALGRIND_ADD_TO_TX	deps/pmdk/src/common/valgrind_internal.h	337;"	d
VALGRIND_ADD_TO_TX_N	deps/pmdk/src/common/valgrind_internal.h	238;"	d
VALGRIND_ADD_TO_TX_N	deps/pmdk/src/common/valgrind_internal.h	342;"	d
VALGRIND_ALIGN_STACK	deps/pmdk/src/common/valgrind/valgrind.h	1159;"	d
VALGRIND_ALIGN_STACK	deps/pmdk/src/common/valgrind/valgrind.h	1664;"	d
VALGRIND_ALIGN_STACK	deps/pmdk/src/common/valgrind/valgrind.h	2170;"	d
VALGRIND_ALIGN_STACK	deps/pmdk/src/common/valgrind/valgrind.h	2649;"	d
VALGRIND_ALIGN_STACK	deps/pmdk/src/common/valgrind/valgrind.h	3205;"	d
VALGRIND_ALIGN_STACK	deps/pmdk/src/common/valgrind/valgrind.h	3764;"	d
VALGRIND_ALIGN_STACK	deps/pmdk/src/common/valgrind/valgrind.h	4219;"	d
VALGRIND_ANNOTATE_HAPPENS_AFTER	deps/pmdk/src/common/valgrind_internal.h	123;"	d
VALGRIND_ANNOTATE_HAPPENS_AFTER	deps/pmdk/src/common/valgrind_internal.h	83;"	d
VALGRIND_ANNOTATE_HAPPENS_BEFORE	deps/pmdk/src/common/valgrind_internal.h	121;"	d
VALGRIND_ANNOTATE_HAPPENS_BEFORE	deps/pmdk/src/common/valgrind_internal.h	78;"	d
VALGRIND_ANNOTATE_IGNORE_READS_BEGIN	deps/pmdk/src/common/valgrind_internal.h	130;"	d
VALGRIND_ANNOTATE_IGNORE_READS_BEGIN	deps/pmdk/src/common/valgrind_internal.h	93;"	d
VALGRIND_ANNOTATE_IGNORE_READS_END	deps/pmdk/src/common/valgrind_internal.h	132;"	d
VALGRIND_ANNOTATE_IGNORE_READS_END	deps/pmdk/src/common/valgrind_internal.h	98;"	d
VALGRIND_ANNOTATE_IGNORE_WRITES_BEGIN	deps/pmdk/src/common/valgrind_internal.h	103;"	d
VALGRIND_ANNOTATE_IGNORE_WRITES_BEGIN	deps/pmdk/src/common/valgrind_internal.h	134;"	d
VALGRIND_ANNOTATE_IGNORE_WRITES_END	deps/pmdk/src/common/valgrind_internal.h	108;"	d
VALGRIND_ANNOTATE_IGNORE_WRITES_END	deps/pmdk/src/common/valgrind_internal.h	136;"	d
VALGRIND_ANNOTATE_NEW_MEMORY	deps/pmdk/src/common/valgrind_internal.h	125;"	d
VALGRIND_ANNOTATE_NEW_MEMORY	deps/pmdk/src/common/valgrind_internal.h	88;"	d
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11	deps/pmdk/src/common/valgrind/valgrind.h	522;"	d
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R11	deps/pmdk/src/common/valgrind/valgrind.h	601;"	d
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R12	deps/pmdk/src/common/valgrind/valgrind.h	678;"	d
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_R4	deps/pmdk/src/common/valgrind/valgrind.h	745;"	d
VALGRIND_BRANCH_AND_LINK_TO_NOREDIR_X8	deps/pmdk/src/common/valgrind/valgrind.h	814;"	d
VALGRIND_CALL_NOREDIR_EAX	deps/pmdk/src/common/valgrind/valgrind.h	304;"	d
VALGRIND_CALL_NOREDIR_EAX	deps/pmdk/src/common/valgrind/valgrind.h	378;"	d
VALGRIND_CALL_NOREDIR_R1	deps/pmdk/src/common/valgrind/valgrind.h	894;"	d
VALGRIND_CALL_NOREDIR_RAX	deps/pmdk/src/common/valgrind/valgrind.h	444;"	d
VALGRIND_CALL_NOREDIR_T9	deps/pmdk/src/common/valgrind/valgrind.h	1034;"	d
VALGRIND_CALL_NOREDIR_T9	deps/pmdk/src/common/valgrind/valgrind.h	964;"	d
VALGRIND_CFI_EPILOGUE	deps/pmdk/src/common/valgrind/valgrind.h	1650;"	d
VALGRIND_CFI_EPILOGUE	deps/pmdk/src/common/valgrind/valgrind.h	1656;"	d
VALGRIND_CFI_EPILOGUE	deps/pmdk/src/common/valgrind/valgrind.h	4671;"	d
VALGRIND_CFI_EPILOGUE	deps/pmdk/src/common/valgrind/valgrind.h	4678;"	d
VALGRIND_CFI_PROLOGUE	deps/pmdk/src/common/valgrind/valgrind.h	1645;"	d
VALGRIND_CFI_PROLOGUE	deps/pmdk/src/common/valgrind/valgrind.h	1655;"	d
VALGRIND_CFI_PROLOGUE	deps/pmdk/src/common/valgrind/valgrind.h	4665;"	d
VALGRIND_CFI_PROLOGUE	deps/pmdk/src/common/valgrind/valgrind.h	4676;"	d
VALGRIND_CHECK_IS_PMEM_MAPPING	deps/pmdk/src/common/valgrind_internal.h	171;"	d
VALGRIND_CHECK_IS_PMEM_MAPPING	deps/pmdk/src/common/valgrind_internal.h	297;"	d
VALGRIND_CHECK_MEM_IS_ADDRESSABLE	deps/pmdk/src/common/valgrind/memcheck.h	166;"	d
VALGRIND_CHECK_MEM_IS_DEFINED	deps/pmdk/src/common/valgrind/memcheck.h	175;"	d
VALGRIND_CHECK_MEM_IS_UNADDRESSABLE	deps/pmdk/src/common/valgrind/memcheck.h	193;"	d
VALGRIND_CHECK_MEM_IS_UNDEFINED	deps/pmdk/src/common/valgrind/memcheck.h	201;"	d
VALGRIND_CHECK_VALUE_IS_DEFINED	deps/pmdk/src/common/valgrind/memcheck.h	185;"	d
VALGRIND_COUNT_ERRORS	deps/pmdk/src/common/valgrind/valgrind.h	6370;"	d
VALGRIND_COUNT_LEAKS	deps/pmdk/src/common/valgrind/memcheck.h	232;"	d
VALGRIND_COUNT_LEAK_BLOCKS	deps/pmdk/src/common/valgrind/memcheck.h	254;"	d
VALGRIND_CREATE_BLOCK	deps/pmdk/src/common/valgrind/memcheck.h	146;"	d
VALGRIND_CREATE_MEMPOOL	deps/pmdk/src/common/valgrind/valgrind.h	6496;"	d
VALGRIND_CREATE_MEMPOOL_EXT	deps/pmdk/src/common/valgrind/valgrind.h	6528;"	d
VALGRIND_DESTROY_MEMPOOL	deps/pmdk/src/common/valgrind/valgrind.h	6533;"	d
VALGRIND_DISABLE_ADDR_ERROR_REPORTING_IN_RANGE	deps/pmdk/src/common/valgrind/memcheck.h	309;"	d
VALGRIND_DISABLE_ERROR_REPORTING	deps/pmdk/src/common/valgrind/valgrind.h	6611;"	d
VALGRIND_DISCARD	deps/pmdk/src/common/valgrind/memcheck.h	154;"	d
VALGRIND_DISCARD_TRANSLATIONS	deps/pmdk/src/common/valgrind/valgrind.h	6223;"	d
VALGRIND_DO_ADDED_LEAK_CHECK	deps/pmdk/src/common/valgrind/memcheck.h	214;"	d
VALGRIND_DO_CHANGED_LEAK_CHECK	deps/pmdk/src/common/valgrind/memcheck.h	221;"	d
VALGRIND_DO_CHECK_MEM_IS_ADDRESSABLE	deps/pmdk/src/common/valgrind_internal.h	428;"	d
VALGRIND_DO_CHECK_MEM_IS_ADDRESSABLE	deps/pmdk/src/common/valgrind_internal.h	465;"	d
VALGRIND_DO_CLIENT_REQUEST	deps/pmdk/src/common/valgrind/valgrind.h	193;"	d
VALGRIND_DO_CLIENT_REQUEST_EXPR	deps/pmdk/src/common/valgrind/valgrind.h	211;"	d
VALGRIND_DO_CLIENT_REQUEST_EXPR	deps/pmdk/src/common/valgrind/valgrind.h	269;"	d
VALGRIND_DO_CLIENT_REQUEST_EXPR	deps/pmdk/src/common/valgrind/valgrind.h	336;"	d
VALGRIND_DO_CLIENT_REQUEST_EXPR	deps/pmdk/src/common/valgrind/valgrind.h	409;"	d
VALGRIND_DO_CLIENT_REQUEST_EXPR	deps/pmdk/src/common/valgrind/valgrind.h	481;"	d
VALGRIND_DO_CLIENT_REQUEST_EXPR	deps/pmdk/src/common/valgrind/valgrind.h	551;"	d
VALGRIND_DO_CLIENT_REQUEST_EXPR	deps/pmdk/src/common/valgrind/valgrind.h	628;"	d
VALGRIND_DO_CLIENT_REQUEST_EXPR	deps/pmdk/src/common/valgrind/valgrind.h	706;"	d
VALGRIND_DO_CLIENT_REQUEST_EXPR	deps/pmdk/src/common/valgrind/valgrind.h	774;"	d
VALGRIND_DO_CLIENT_REQUEST_EXPR	deps/pmdk/src/common/valgrind/valgrind.h	854;"	d
VALGRIND_DO_CLIENT_REQUEST_EXPR	deps/pmdk/src/common/valgrind/valgrind.h	926;"	d
VALGRIND_DO_CLIENT_REQUEST_EXPR	deps/pmdk/src/common/valgrind/valgrind.h	997;"	d
VALGRIND_DO_CLIENT_REQUEST_STMT	deps/pmdk/src/common/valgrind/valgrind.h	200;"	d
VALGRIND_DO_CREATE_MEMPOOL	deps/pmdk/src/common/valgrind_internal.h	388;"	d
VALGRIND_DO_CREATE_MEMPOOL	deps/pmdk/src/common/valgrind_internal.h	439;"	d
VALGRIND_DO_DESTROY_MEMPOOL	deps/pmdk/src/common/valgrind_internal.h	393;"	d
VALGRIND_DO_DESTROY_MEMPOOL	deps/pmdk/src/common/valgrind_internal.h	442;"	d
VALGRIND_DO_DISABLE_ERROR_REPORTING	deps/pmdk/src/common/valgrind_internal.h	378;"	d
VALGRIND_DO_DISABLE_ERROR_REPORTING	deps/pmdk/src/common/valgrind_internal.h	435;"	d
VALGRIND_DO_ENABLE_ERROR_REPORTING	deps/pmdk/src/common/valgrind_internal.h	383;"	d
VALGRIND_DO_ENABLE_ERROR_REPORTING	deps/pmdk/src/common/valgrind_internal.h	437;"	d
VALGRIND_DO_FENCE	deps/pmdk/src/common/valgrind_internal.h	186;"	d
VALGRIND_DO_FENCE	deps/pmdk/src/common/valgrind_internal.h	309;"	d
VALGRIND_DO_FLUSH	deps/pmdk/src/common/valgrind_internal.h	181;"	d
VALGRIND_DO_FLUSH	deps/pmdk/src/common/valgrind_internal.h	304;"	d
VALGRIND_DO_LEAK_CHECK	deps/pmdk/src/common/valgrind/memcheck.h	207;"	d
VALGRIND_DO_MAKE_MEM_DEFINED	deps/pmdk/src/common/valgrind_internal.h	413;"	d
VALGRIND_DO_MAKE_MEM_DEFINED	deps/pmdk/src/common/valgrind_internal.h	456;"	d
VALGRIND_DO_MAKE_MEM_NOACCESS	deps/pmdk/src/common/valgrind_internal.h	423;"	d
VALGRIND_DO_MAKE_MEM_NOACCESS	deps/pmdk/src/common/valgrind_internal.h	462;"	d
VALGRIND_DO_MAKE_MEM_UNDEFINED	deps/pmdk/src/common/valgrind_internal.h	418;"	d
VALGRIND_DO_MAKE_MEM_UNDEFINED	deps/pmdk/src/common/valgrind_internal.h	459;"	d
VALGRIND_DO_MEMPOOL_ALLOC	deps/pmdk/src/common/valgrind_internal.h	398;"	d
VALGRIND_DO_MEMPOOL_ALLOC	deps/pmdk/src/common/valgrind_internal.h	445;"	d
VALGRIND_DO_MEMPOOL_CHANGE	deps/pmdk/src/common/valgrind_internal.h	408;"	d
VALGRIND_DO_MEMPOOL_CHANGE	deps/pmdk/src/common/valgrind_internal.h	451;"	d
VALGRIND_DO_MEMPOOL_FREE	deps/pmdk/src/common/valgrind_internal.h	403;"	d
VALGRIND_DO_MEMPOOL_FREE	deps/pmdk/src/common/valgrind_internal.h	448;"	d
VALGRIND_DO_PERSIST	deps/pmdk/src/common/valgrind_internal.h	191;"	d
VALGRIND_DO_PERSIST	deps/pmdk/src/common/valgrind_internal.h	311;"	d
VALGRIND_DO_QUICK_LEAK_CHECK	deps/pmdk/src/common/valgrind/memcheck.h	226;"	d
VALGRIND_EMIT_LOG	deps/pmdk/src/common/valgrind_internal.h	208;"	d
VALGRIND_EMIT_LOG	deps/pmdk/src/common/valgrind_internal.h	323;"	d
VALGRIND_ENABLED	deps/pmdk/src/common/valgrind_internal.h	42;"	d
VALGRIND_ENABLE_ADDR_ERROR_REPORTING_IN_RANGE	deps/pmdk/src/common/valgrind/memcheck.h	314;"	d
VALGRIND_ENABLE_ERROR_REPORTING	deps/pmdk/src/common/valgrind/valgrind.h	6617;"	d
VALGRIND_END_TX	deps/pmdk/src/common/valgrind_internal.h	223;"	d
VALGRIND_END_TX	deps/pmdk/src/common/valgrind_internal.h	331;"	d
VALGRIND_END_TX_N	deps/pmdk/src/common/valgrind_internal.h	228;"	d
VALGRIND_END_TX_N	deps/pmdk/src/common/valgrind_internal.h	333;"	d
VALGRIND_FREELIKE_BLOCK	deps/pmdk/src/common/valgrind/valgrind.h	6491;"	d
VALGRIND_GET_NR_CONTEXT	deps/pmdk/src/common/valgrind/valgrind.h	1021;"	d
VALGRIND_GET_NR_CONTEXT	deps/pmdk/src/common/valgrind/valgrind.h	291;"	d
VALGRIND_GET_NR_CONTEXT	deps/pmdk/src/common/valgrind/valgrind.h	367;"	d
VALGRIND_GET_NR_CONTEXT	deps/pmdk/src/common/valgrind/valgrind.h	431;"	d
VALGRIND_GET_NR_CONTEXT	deps/pmdk/src/common/valgrind/valgrind.h	508;"	d
VALGRIND_GET_NR_CONTEXT	deps/pmdk/src/common/valgrind/valgrind.h	578;"	d
VALGRIND_GET_NR_CONTEXT	deps/pmdk/src/common/valgrind/valgrind.h	655;"	d
VALGRIND_GET_NR_CONTEXT	deps/pmdk/src/common/valgrind/valgrind.h	731;"	d
VALGRIND_GET_NR_CONTEXT	deps/pmdk/src/common/valgrind/valgrind.h	800;"	d
VALGRIND_GET_NR_CONTEXT	deps/pmdk/src/common/valgrind/valgrind.h	881;"	d
VALGRIND_GET_NR_CONTEXT	deps/pmdk/src/common/valgrind/valgrind.h	950;"	d
VALGRIND_GET_ORIG_FN	deps/pmdk/src/common/valgrind/valgrind.h	1096;"	d
VALGRIND_GET_VBITS	deps/pmdk/src/common/valgrind/memcheck.h	284;"	d
VALGRIND_HG_BARRIER_DESTROY_PRE	deps/pmdk/src/common/valgrind/helgrind.h	338;"	d
VALGRIND_HG_BARRIER_INIT_PRE	deps/pmdk/src/common/valgrind/helgrind.h	313;"	d
VALGRIND_HG_BARRIER_RESIZE_PRE	deps/pmdk/src/common/valgrind/helgrind.h	332;"	d
VALGRIND_HG_BARRIER_WAIT_PRE	deps/pmdk/src/common/valgrind/helgrind.h	320;"	d
VALGRIND_HG_CLEAN_MEMORY	deps/pmdk/src/common/valgrind/helgrind.h	353;"	d
VALGRIND_HG_CLEAN_MEMORY_HEAPBLOCK	deps/pmdk/src/common/valgrind/helgrind.h	366;"	d
VALGRIND_HG_DISABLE_CHECKING	deps/pmdk/src/common/valgrind/helgrind.h	387;"	d
VALGRIND_HG_DRD_DISABLE_CHECKING	deps/pmdk/src/common/valgrind_internal.h	114;"	d
VALGRIND_HG_DRD_DISABLE_CHECKING	deps/pmdk/src/common/valgrind_internal.h	138;"	d
VALGRIND_HG_ENABLE_CHECKING	deps/pmdk/src/common/valgrind/helgrind.h	396;"	d
VALGRIND_HG_GET_ABITS	deps/pmdk/src/common/valgrind/helgrind.h	418;"	d
VALGRIND_HG_GNAT_DEPENDENT_MASTER_JOIN	deps/pmdk/src/common/valgrind/helgrind.h	454;"	d
VALGRIND_HG_MUTEX_DESTROY_PRE	deps/pmdk/src/common/valgrind/helgrind.h	276;"	d
VALGRIND_HG_MUTEX_INIT_POST	deps/pmdk/src/common/valgrind/helgrind.h	250;"	d
VALGRIND_HG_MUTEX_LOCK_POST	deps/pmdk/src/common/valgrind/helgrind.h	261;"	d
VALGRIND_HG_MUTEX_LOCK_PRE	deps/pmdk/src/common/valgrind/helgrind.h	256;"	d
VALGRIND_HG_MUTEX_UNLOCK_POST	deps/pmdk/src/common/valgrind/helgrind.h	271;"	d
VALGRIND_HG_MUTEX_UNLOCK_PRE	deps/pmdk/src/common/valgrind/helgrind.h	266;"	d
VALGRIND_HG_SEM_DESTROY_PRE	deps/pmdk/src/common/valgrind/helgrind.h	302;"	d
VALGRIND_HG_SEM_INIT_POST	deps/pmdk/src/common/valgrind/helgrind.h	285;"	d
VALGRIND_HG_SEM_POST_PRE	deps/pmdk/src/common/valgrind/helgrind.h	297;"	d
VALGRIND_HG_SEM_WAIT_POST	deps/pmdk/src/common/valgrind/helgrind.h	291;"	d
VALGRIND_INNER_THREADS	deps/pmdk/src/common/valgrind/valgrind.h	6227;"	d
VALGRIND_LOAD_PDB_DEBUGINFO	deps/pmdk/src/common/valgrind/valgrind.h	6590;"	d
VALGRIND_MAKE_MEM_DEFINED	deps/pmdk/src/common/valgrind/memcheck.h	129;"	d
VALGRIND_MAKE_MEM_DEFINED_IF_ADDRESSABLE	deps/pmdk/src/common/valgrind/memcheck.h	137;"	d
VALGRIND_MAKE_MEM_NOACCESS	deps/pmdk/src/common/valgrind/memcheck.h	115;"	d
VALGRIND_MAKE_MEM_UNDEFINED	deps/pmdk/src/common/valgrind/memcheck.h	122;"	d
VALGRIND_MALLOCLIKE_BLOCK	deps/pmdk/src/common/valgrind/valgrind.h	6477;"	d
VALGRIND_MAP_IP_TO_SRCLOC	deps/pmdk/src/common/valgrind/valgrind.h	6598;"	d
VALGRIND_MEMPOOL_ALLOC	deps/pmdk/src/common/valgrind/valgrind.h	6538;"	d
VALGRIND_MEMPOOL_AUTO_FREE	deps/pmdk/src/common/valgrind/valgrind.h	6526;"	d
VALGRIND_MEMPOOL_CHANGE	deps/pmdk/src/common/valgrind/valgrind.h	6558;"	d
VALGRIND_MEMPOOL_EXISTS	deps/pmdk/src/common/valgrind/valgrind.h	6563;"	d
VALGRIND_MEMPOOL_FREE	deps/pmdk/src/common/valgrind/valgrind.h	6543;"	d
VALGRIND_MEMPOOL_METAPOOL	deps/pmdk/src/common/valgrind/valgrind.h	6527;"	d
VALGRIND_MEMPOOL_TRIM	deps/pmdk/src/common/valgrind/valgrind.h	6548;"	d
VALGRIND_MONITOR_COMMAND	deps/pmdk/src/common/valgrind/valgrind.h	6626;"	d
VALGRIND_MOVE_MEMPOOL	deps/pmdk/src/common/valgrind/valgrind.h	6553;"	d
VALGRIND_NON_SIMD_CALL0	deps/pmdk/src/common/valgrind/valgrind.h	6341;"	d
VALGRIND_NON_SIMD_CALL1	deps/pmdk/src/common/valgrind/valgrind.h	6347;"	d
VALGRIND_NON_SIMD_CALL2	deps/pmdk/src/common/valgrind/valgrind.h	6353;"	d
VALGRIND_NON_SIMD_CALL3	deps/pmdk/src/common/valgrind/valgrind.h	6359;"	d
VALGRIND_PMC_ADD_THREAD_TX_N	deps/pmdk/src/common/valgrind/pmemcheck.h	199;"	d
VALGRIND_PMC_ADD_TO_GLOBAL_TX_IGNORE	deps/pmdk/src/common/valgrind/pmemcheck.h	211;"	d
VALGRIND_PMC_ADD_TO_TX	deps/pmdk/src/common/valgrind/pmemcheck.h	175;"	d
VALGRIND_PMC_ADD_TO_TX_N	deps/pmdk/src/common/valgrind/pmemcheck.h	181;"	d
VALGRIND_PMC_CHECK_IS_PMEM_MAPPING	deps/pmdk/src/common/valgrind/pmemcheck.h	112;"	d
VALGRIND_PMC_DO_FENCE	deps/pmdk/src/common/valgrind/pmemcheck.h	129;"	d
VALGRIND_PMC_DO_FLUSH	deps/pmdk/src/common/valgrind/pmemcheck.h	123;"	d
VALGRIND_PMC_EMIT_LOG	deps/pmdk/src/common/valgrind/pmemcheck.h	139;"	d
VALGRIND_PMC_END_TX	deps/pmdk/src/common/valgrind/pmemcheck.h	164;"	d
VALGRIND_PMC_END_TX_N	deps/pmdk/src/common/valgrind/pmemcheck.h	169;"	d
VALGRIND_PMC_PRINT_PMEM_MAPPINGS	deps/pmdk/src/common/valgrind/pmemcheck.h	118;"	d
VALGRIND_PMC_REGISTER_PMEM_FILE	deps/pmdk/src/common/valgrind/pmemcheck.h	98;"	d
VALGRIND_PMC_REGISTER_PMEM_MAPPING	deps/pmdk/src/common/valgrind/pmemcheck.h	92;"	d
VALGRIND_PMC_REMOVE_FROM_TX	deps/pmdk/src/common/valgrind/pmemcheck.h	187;"	d
VALGRIND_PMC_REMOVE_FROM_TX_N	deps/pmdk/src/common/valgrind/pmemcheck.h	193;"	d
VALGRIND_PMC_REMOVE_PMEM_MAPPING	deps/pmdk/src/common/valgrind/pmemcheck.h	106;"	d
VALGRIND_PMC_REMOVE_THREAD_FROM_TX_N	deps/pmdk/src/common/valgrind/pmemcheck.h	205;"	d
VALGRIND_PMC_SET_CLEAN	deps/pmdk/src/common/valgrind/pmemcheck.h	145;"	d
VALGRIND_PMC_START_TX	deps/pmdk/src/common/valgrind/pmemcheck.h	153;"	d
VALGRIND_PMC_START_TX_N	deps/pmdk/src/common/valgrind/pmemcheck.h	158;"	d
VALGRIND_PMC_WRITE_STATS	deps/pmdk/src/common/valgrind/pmemcheck.h	134;"	d
VALGRIND_PMEMCHECK_END_TX	deps/pmdk/src/test/obj_recovery/obj_recovery.c	39;"	d	file:
VALGRIND_PMEMCHECK_END_TX	deps/pmdk/src/test/obj_recovery/obj_recovery.c	41;"	d	file:
VALGRIND_PRINTF	deps/pmdk/src/common/valgrind/valgrind.h	/^VALGRIND_PRINTF(const char *format, ...)$/;"	f
VALGRIND_PRINTF_BACKTRACE	deps/pmdk/src/common/valgrind/valgrind.h	/^VALGRIND_PRINTF_BACKTRACE(const char *format, ...)$/;"	f
VALGRIND_PRINT_PMEM_MAPPINGS	deps/pmdk/src/common/valgrind_internal.h	176;"	d
VALGRIND_PRINT_PMEM_MAPPINGS	deps/pmdk/src/common/valgrind_internal.h	302;"	d
VALGRIND_REGISTER_PMEM_FILE	deps/pmdk/src/common/valgrind_internal.h	160;"	d
VALGRIND_REGISTER_PMEM_FILE	deps/pmdk/src/common/valgrind_internal.h	285;"	d
VALGRIND_REGISTER_PMEM_MAPPING	deps/pmdk/src/common/valgrind_internal.h	155;"	d
VALGRIND_REGISTER_PMEM_MAPPING	deps/pmdk/src/common/valgrind_internal.h	280;"	d
VALGRIND_REMOVE_FROM_TX	deps/pmdk/src/common/valgrind_internal.h	243;"	d
VALGRIND_REMOVE_FROM_TX	deps/pmdk/src/common/valgrind_internal.h	348;"	d
VALGRIND_REMOVE_FROM_TX_N	deps/pmdk/src/common/valgrind_internal.h	248;"	d
VALGRIND_REMOVE_FROM_TX_N	deps/pmdk/src/common/valgrind_internal.h	353;"	d
VALGRIND_REMOVE_PMEM_MAPPING	deps/pmdk/src/common/valgrind_internal.h	166;"	d
VALGRIND_REMOVE_PMEM_MAPPING	deps/pmdk/src/common/valgrind_internal.h	292;"	d
VALGRIND_RESIZEINPLACE_BLOCK	deps/pmdk/src/common/valgrind/valgrind.h	6484;"	d
VALGRIND_RESTORE_STACK	deps/pmdk/src/common/valgrind/valgrind.h	1162;"	d
VALGRIND_RESTORE_STACK	deps/pmdk/src/common/valgrind/valgrind.h	1667;"	d
VALGRIND_RESTORE_STACK	deps/pmdk/src/common/valgrind/valgrind.h	2173;"	d
VALGRIND_RESTORE_STACK	deps/pmdk/src/common/valgrind/valgrind.h	2652;"	d
VALGRIND_RESTORE_STACK	deps/pmdk/src/common/valgrind/valgrind.h	3208;"	d
VALGRIND_RESTORE_STACK	deps/pmdk/src/common/valgrind/valgrind.h	3769;"	d
VALGRIND_RESTORE_STACK	deps/pmdk/src/common/valgrind/valgrind.h	4222;"	d
VALGRIND_SET_CLEAN	deps/pmdk/src/common/valgrind_internal.h	198;"	d
VALGRIND_SET_CLEAN	deps/pmdk/src/common/valgrind_internal.h	316;"	d
VALGRIND_SET_VBITS	deps/pmdk/src/common/valgrind/memcheck.h	300;"	d
VALGRIND_STACK_CHANGE	deps/pmdk/src/common/valgrind/valgrind.h	6585;"	d
VALGRIND_STACK_DEREGISTER	deps/pmdk/src/common/valgrind/valgrind.h	6578;"	d
VALGRIND_STACK_REGISTER	deps/pmdk/src/common/valgrind/valgrind.h	6571;"	d
VALGRIND_START_TX	deps/pmdk/src/common/valgrind_internal.h	213;"	d
VALGRIND_START_TX	deps/pmdk/src/common/valgrind_internal.h	327;"	d
VALGRIND_START_TX_N	deps/pmdk/src/common/valgrind_internal.h	218;"	d
VALGRIND_START_TX_N	deps/pmdk/src/common/valgrind_internal.h	329;"	d
VALGRIND_VEX_INJECT_IR	deps/pmdk/src/common/valgrind/valgrind.h	1039;"	d
VALGRIND_VEX_INJECT_IR	deps/pmdk/src/common/valgrind/valgrind.h	309;"	d
VALGRIND_VEX_INJECT_IR	deps/pmdk/src/common/valgrind/valgrind.h	380;"	d
VALGRIND_VEX_INJECT_IR	deps/pmdk/src/common/valgrind/valgrind.h	449;"	d
VALGRIND_VEX_INJECT_IR	deps/pmdk/src/common/valgrind/valgrind.h	527;"	d
VALGRIND_VEX_INJECT_IR	deps/pmdk/src/common/valgrind/valgrind.h	606;"	d
VALGRIND_VEX_INJECT_IR	deps/pmdk/src/common/valgrind/valgrind.h	683;"	d
VALGRIND_VEX_INJECT_IR	deps/pmdk/src/common/valgrind/valgrind.h	750;"	d
VALGRIND_VEX_INJECT_IR	deps/pmdk/src/common/valgrind/valgrind.h	819;"	d
VALGRIND_VEX_INJECT_IR	deps/pmdk/src/common/valgrind/valgrind.h	898;"	d
VALGRIND_VEX_INJECT_IR	deps/pmdk/src/common/valgrind/valgrind.h	969;"	d
VALGRIND_WRITE_STATS	deps/pmdk/src/common/valgrind_internal.h	203;"	d
VALGRIND_WRITE_STATS	deps/pmdk/src/common/valgrind_internal.h	321;"	d
VALID_NODE_TYPE	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	213;"	d
VALID_SDK_VERSION	deps/pmdk/utils/check_sdk_version.py	/^VALID_SDK_VERSION = '10.0.16299.0'$/;"	v
VALUEWEAK	deps/lua/src/lgc.c	48;"	d	file:
VALUEWEAKBIT	deps/lua/src/lgc.h	59;"	d
VALUE_INDENT	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	99;"	d	file:
VALUE_OFF	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	77;"	d	file:
VALUE_OFF	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	60;"	d	file:
VALUE_SIZE	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	78;"	d	file:
VALUE_SIZE	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	61;"	d	file:
VARARG_HASARG	deps/lua/src/lobject.h	257;"	d
VARARG_ISVARARG	deps/lua/src/lobject.h	258;"	d
VARARG_NEEDSARG	deps/lua/src/lobject.h	259;"	d
VARIABLE_ARRAY	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	362;"	d
VARIABLE_ARRAY	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	365;"	d
VAR_STRING	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	VAR_STRING	= 8,$/;"	e	enum:__anon102
VCALL	deps/lua/src/lparser.h	/^  VCALL,	\/* info = instruction pc *\/$/;"	e	enum:__anon30
VEC	deps/pmdk/src/common/vec.h	52;"	d
VECQ	deps/pmdk/src/common/vecq.h	51;"	d
VECQ_BACK	deps/pmdk/src/common/vecq.h	83;"	d
VECQ_BACK_POS	deps/pmdk/src/common/vecq.h	77;"	d
VECQ_CAPACITY	deps/pmdk/src/common/vecq.h	125;"	d
VECQ_CLEAR	deps/pmdk/src/common/vecq.h	140;"	d
VECQ_DELETE	deps/pmdk/src/common/vecq.h	145;"	d
VECQ_DEQUEUE	deps/pmdk/src/common/vecq.h	86;"	d
VECQ_ENQUEUE	deps/pmdk/src/common/vecq.h	120;"	d
VECQ_FOREACH	deps/pmdk/src/common/vecq.h	128;"	d
VECQ_FOREACH_REVERSE	deps/pmdk/src/common/vecq.h	134;"	d
VECQ_FRONT	deps/pmdk/src/common/vecq.h	80;"	d
VECQ_FRONT_POS	deps/pmdk/src/common/vecq.h	74;"	d
VECQ_GROW	deps/pmdk/src/common/vecq.h	106;"	d
VECQ_INIT	deps/pmdk/src/common/vecq.h	59;"	d
VECQ_INIT_SIZE	deps/pmdk/src/common/vecq.h	49;"	d
VECQ_INSERT	deps/pmdk/src/common/vecq.h	117;"	d
VECQ_NCAPACITY	deps/pmdk/src/common/vecq.h	104;"	d
VECQ_REINIT	deps/pmdk/src/common/vecq.h	66;"	d
VECQ_SIZE	deps/pmdk/src/common/vecq.h	89;"	d
VEC_ARR	deps/pmdk/src/common/vec.h	165;"	d
VEC_BACK	deps/pmdk/src/common/vec.h	111;"	d
VEC_CAPACITY	deps/pmdk/src/common/vec.h	162;"	d
VEC_CLEAR	deps/pmdk/src/common/vec.h	171;"	d
VEC_DELETE	deps/pmdk/src/common/vec.h	175;"	d
VEC_ERASE_BY_POS	deps/pmdk/src/common/vec.h	114;"	d
VEC_ERASE_BY_PTR	deps/pmdk/src/common/vec.h	120;"	d
VEC_FOREACH	deps/pmdk/src/common/vec.h	141;"	d
VEC_FOREACH_BY_POS	deps/pmdk/src/common/vec.h	151;"	d
VEC_FOREACH_BY_PTR	deps/pmdk/src/common/vec.h	154;"	d
VEC_FOREACH_REVERSE	deps/pmdk/src/common/vec.h	146;"	d
VEC_FRONT	deps/pmdk/src/common/vec.h	108;"	d
VEC_GET	deps/pmdk/src/common/vec.h	168;"	d
VEC_INC_BACK	deps/pmdk/src/common/vec.h	132;"	d
VEC_INC_SIZE	deps/pmdk/src/common/vec.h	129;"	d
VEC_INIT	deps/pmdk/src/common/vec.h	61;"	d
VEC_INITIALIZER	deps/pmdk/src/common/vec.h	59;"	d
VEC_INIT_SIZE	deps/pmdk/src/common/vec.h	50;"	d
VEC_INSERT	deps/pmdk/src/common/vec.h	126;"	d
VEC_MOVE	deps/pmdk/src/common/vec.h	67;"	d
VEC_POP_BACK	deps/pmdk/src/common/vec.h	104;"	d
VEC_PUSH_BACK	deps/pmdk/src/common/vec.h	138;"	d
VEC_REINIT	deps/pmdk/src/common/vec.h	77;"	d
VEC_RESERVE	deps/pmdk/src/common/vec.h	99;"	d
VEC_SIZE	deps/pmdk/src/common/vec.h	159;"	d
VERBOSE_DEFAULT	deps/pmdk/src/tools/pmempool/dump.c	52;"	d	file:
VERBOSE_DEFAULT	deps/pmdk/src/tools/pmempool/info.h	57;"	d
VERBOSE_MAX	deps/pmdk/src/tools/pmempool/info.h	58;"	d
VERBOSE_SILENT	deps/pmdk/src/tools/pmempool/info.h	56;"	d
VERY_FAST	src/lzfP.h	181;"	d
VERY_FAST	src/lzfP.h	64;"	d
VFALSE	deps/lua/src/lparser.h	/^  VFALSE,$/;"	e	enum:__anon30
VGLOBAL	deps/lua/src/lparser.h	/^  VGLOBAL,	\/* info = index of table; aux = index of global name in `k' *\/$/;"	e	enum:__anon30
VG_CONCAT4	deps/pmdk/src/common/valgrind/valgrind.h	1084;"	d
VG_DRD_ENABLED	deps/pmdk/src/common/valgrind_internal.h	50;"	d
VG_HELGRIND_ENABLED	deps/pmdk/src/common/valgrind_internal.h	48;"	d
VG_IS_TOOL_USERREQ	deps/pmdk/src/common/valgrind/valgrind.h	6118;"	d
VG_MEMCHECK_ENABLED	deps/pmdk/src/common/valgrind_internal.h	49;"	d
VG_PMEMCHECK_ENABLED	deps/pmdk/src/common/valgrind_internal.h	47;"	d
VG_USERREQ_TOOL_BASE	deps/pmdk/src/common/valgrind/valgrind.h	6116;"	d
VG_USERREQ__CHANGE_ERR_DISABLEMENT	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__CHANGE_ERR_DISABLEMENT = 0x1801,$/;"	e	enum:__anon65
VG_USERREQ__CHECK_MEM_IS_ADDRESSABLE	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__CHECK_MEM_IS_ADDRESSABLE,$/;"	e	enum:__anon53
VG_USERREQ__CHECK_MEM_IS_DEFINED	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__CHECK_MEM_IS_DEFINED,$/;"	e	enum:__anon53
VG_USERREQ__CHECK_MEM_IS_UNADDRESSABLE	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__CHECK_MEM_IS_UNADDRESSABLE,$/;"	e	enum:__anon53
VG_USERREQ__CHECK_MEM_IS_UNDEFINED	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__CHECK_MEM_IS_UNDEFINED,$/;"	e	enum:__anon53
VG_USERREQ__CLIENT_CALL0	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__CLIENT_CALL0 = 0x1101,$/;"	e	enum:__anon65
VG_USERREQ__CLIENT_CALL1	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__CLIENT_CALL1 = 0x1102,$/;"	e	enum:__anon65
VG_USERREQ__CLIENT_CALL2	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__CLIENT_CALL2 = 0x1103,$/;"	e	enum:__anon65
VG_USERREQ__CLIENT_CALL3	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__CLIENT_CALL3 = 0x1104,$/;"	e	enum:__anon65
VG_USERREQ__COUNT_ERRORS	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__COUNT_ERRORS = 0x1201,$/;"	e	enum:__anon65
VG_USERREQ__COUNT_LEAKS	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__COUNT_LEAKS,$/;"	e	enum:__anon53
VG_USERREQ__COUNT_LEAK_BLOCKS	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__COUNT_LEAK_BLOCKS,$/;"	e	enum:__anon53
VG_USERREQ__CREATE_BLOCK	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__CREATE_BLOCK,$/;"	e	enum:__anon53
VG_USERREQ__CREATE_MEMPOOL	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__CREATE_MEMPOOL   = 0x1303,$/;"	e	enum:__anon65
VG_USERREQ__DESTROY_MEMPOOL	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__DESTROY_MEMPOOL  = 0x1304,$/;"	e	enum:__anon65
VG_USERREQ__DISABLE_ADDR_ERROR_REPORTING_IN_RANGE	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__DISABLE_ADDR_ERROR_REPORTING_IN_RANGE,$/;"	e	enum:__anon53
VG_USERREQ__DISCARD	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__DISCARD,$/;"	e	enum:__anon53
VG_USERREQ__DISCARD_TRANSLATIONS	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__DISCARD_TRANSLATIONS = 0x1002,$/;"	e	enum:__anon65
VG_USERREQ__DO_LEAK_CHECK	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__DO_LEAK_CHECK,$/;"	e	enum:__anon53
VG_USERREQ__DRD_ANNOTATE_HAPPENS_AFTER	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_ANNOTATE_HAPPENS_AFTER$/;"	e	enum:__anon66
VG_USERREQ__DRD_ANNOTATE_HAPPENS_BEFORE	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_ANNOTATE_HAPPENS_BEFORE$/;"	e	enum:__anon66
VG_USERREQ__DRD_ANNOTATE_RWLOCK_ACQUIRED	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_ANNOTATE_RWLOCK_ACQUIRED$/;"	e	enum:__anon66
VG_USERREQ__DRD_ANNOTATE_RWLOCK_CREATE	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_ANNOTATE_RWLOCK_CREATE$/;"	e	enum:__anon66
VG_USERREQ__DRD_ANNOTATE_RWLOCK_DESTROY	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_ANNOTATE_RWLOCK_DESTROY$/;"	e	enum:__anon66
VG_USERREQ__DRD_ANNOTATE_RWLOCK_RELEASED	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_ANNOTATE_RWLOCK_RELEASED$/;"	e	enum:__anon66
VG_USERREQ__DRD_ANNOTATE_SEM_DESTROY_POST	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_ANNOTATE_SEM_DESTROY_POST,$/;"	e	enum:__anon66
VG_USERREQ__DRD_ANNOTATE_SEM_INIT_PRE	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_ANNOTATE_SEM_INIT_PRE,$/;"	e	enum:__anon66
VG_USERREQ__DRD_ANNOTATE_SEM_POST_PRE	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_ANNOTATE_SEM_POST_PRE,$/;"	e	enum:__anon66
VG_USERREQ__DRD_ANNOTATE_SEM_WAIT_POST	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_ANNOTATE_SEM_WAIT_POST,$/;"	e	enum:__anon66
VG_USERREQ__DRD_ANNOTATE_SEM_WAIT_PRE	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_ANNOTATE_SEM_WAIT_PRE,$/;"	e	enum:__anon66
VG_USERREQ__DRD_ANNOTATION_UNIMP	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_ANNOTATION_UNIMP,$/;"	e	enum:__anon66
VG_USERREQ__DRD_CLEAN_MEMORY	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_CLEAN_MEMORY = VG_USERREQ_TOOL_BASE('H','G'),$/;"	e	enum:__anon66
VG_USERREQ__DRD_FINISH_SUPPRESSION	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_FINISH_SUPPRESSION,$/;"	e	enum:__anon66
VG_USERREQ__DRD_GET_DRD_THREAD_ID	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_GET_DRD_THREAD_ID,$/;"	e	enum:__anon66
VG_USERREQ__DRD_GET_VALGRIND_THREAD_ID	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_GET_VALGRIND_THREAD_ID = VG_USERREQ_TOOL_BASE('D','R'),$/;"	e	enum:__anon66
VG_USERREQ__DRD_IGNORE_MUTEX_ORDERING	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_IGNORE_MUTEX_ORDERING,$/;"	e	enum:__anon66
VG_USERREQ__DRD_RECORD_LOADS	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_RECORD_LOADS,$/;"	e	enum:__anon66
VG_USERREQ__DRD_RECORD_STORES	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_RECORD_STORES,$/;"	e	enum:__anon66
VG_USERREQ__DRD_SET_THREAD_NAME	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_SET_THREAD_NAME,$/;"	e	enum:__anon66
VG_USERREQ__DRD_START_SUPPRESSION	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_START_SUPPRESSION,$/;"	e	enum:__anon66
VG_USERREQ__DRD_START_TRACE_ADDR	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_START_TRACE_ADDR,$/;"	e	enum:__anon66
VG_USERREQ__DRD_STOP_TRACE_ADDR	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__DRD_STOP_TRACE_ADDR,$/;"	e	enum:__anon66
VG_USERREQ__ENABLE_ADDR_ERROR_REPORTING_IN_RANGE	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__ENABLE_ADDR_ERROR_REPORTING_IN_RANGE,$/;"	e	enum:__anon53
VG_USERREQ__FREELIKE_BLOCK	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__FREELIKE_BLOCK   = 0x1302,$/;"	e	enum:__anon65
VG_USERREQ__GDB_MONITOR_COMMAND	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__GDB_MONITOR_COMMAND = 0x1202,$/;"	e	enum:__anon65
VG_USERREQ__GET_VBITS	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__GET_VBITS,$/;"	e	enum:__anon53
VG_USERREQ__HELGRIND_ANNOTATION_UNIMP	deps/pmdk/src/common/valgrind/drd.h	/^   VG_USERREQ__HELGRIND_ANNOTATION_UNIMP$/;"	e	enum:__anon66
VG_USERREQ__HG_CLEAN_MEMORY	deps/pmdk/src/common/valgrind/helgrind.h	/^      VG_USERREQ__HG_CLEAN_MEMORY = VG_USERREQ_TOOL_BASE('H','G'),$/;"	e	enum:__anon68
VG_USERREQ__INNER_THREADS	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__INNER_THREADS    = 0x1902$/;"	e	enum:__anon65
VG_USERREQ__LOAD_PDB_DEBUGINFO	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__LOAD_PDB_DEBUGINFO = 0x1601,$/;"	e	enum:__anon65
VG_USERREQ__MAKE_MEM_DEFINED	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__MAKE_MEM_DEFINED,$/;"	e	enum:__anon53
VG_USERREQ__MAKE_MEM_DEFINED_IF_ADDRESSABLE	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__MAKE_MEM_DEFINED_IF_ADDRESSABLE,$/;"	e	enum:__anon53
VG_USERREQ__MAKE_MEM_NOACCESS	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__MAKE_MEM_NOACCESS = VG_USERREQ_TOOL_BASE('M','C'),$/;"	e	enum:__anon53
VG_USERREQ__MAKE_MEM_UNDEFINED	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__MAKE_MEM_UNDEFINED,$/;"	e	enum:__anon53
VG_USERREQ__MALLOCLIKE_BLOCK	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__MALLOCLIKE_BLOCK = 0x1301,$/;"	e	enum:__anon65
VG_USERREQ__MAP_IP_TO_SRCLOC	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__MAP_IP_TO_SRCLOC = 0x1701,$/;"	e	enum:__anon65
VG_USERREQ__MEMPOOL_ALLOC	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__MEMPOOL_ALLOC    = 0x1305,$/;"	e	enum:__anon65
VG_USERREQ__MEMPOOL_CHANGE	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__MEMPOOL_CHANGE   = 0x1309,$/;"	e	enum:__anon65
VG_USERREQ__MEMPOOL_EXISTS	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__MEMPOOL_EXISTS   = 0x130a,$/;"	e	enum:__anon65
VG_USERREQ__MEMPOOL_FREE	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__MEMPOOL_FREE     = 0x1306,$/;"	e	enum:__anon65
VG_USERREQ__MEMPOOL_TRIM	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__MEMPOOL_TRIM     = 0x1307,$/;"	e	enum:__anon65
VG_USERREQ__MOVE_MEMPOOL	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__MOVE_MEMPOOL     = 0x1308,$/;"	e	enum:__anon65
VG_USERREQ__PMC_ADD_THREAD_TO_TX_N	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_ADD_THREAD_TO_TX_N,$/;"	e	enum:__anon67
VG_USERREQ__PMC_ADD_TO_GLOBAL_TX_IGNORE	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_ADD_TO_GLOBAL_TX_IGNORE,$/;"	e	enum:__anon67
VG_USERREQ__PMC_ADD_TO_TX	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_ADD_TO_TX,$/;"	e	enum:__anon67
VG_USERREQ__PMC_ADD_TO_TX_N	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_ADD_TO_TX_N,$/;"	e	enum:__anon67
VG_USERREQ__PMC_CHECK_IS_PMEM_MAPPING	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_CHECK_IS_PMEM_MAPPING,$/;"	e	enum:__anon67
VG_USERREQ__PMC_DO_FENCE	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_DO_FENCE,$/;"	e	enum:__anon67
VG_USERREQ__PMC_DO_FLUSH	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_DO_FLUSH,$/;"	e	enum:__anon67
VG_USERREQ__PMC_EMIT_LOG	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_EMIT_LOG,$/;"	e	enum:__anon67
VG_USERREQ__PMC_END_TX	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_END_TX,$/;"	e	enum:__anon67
VG_USERREQ__PMC_END_TX_N	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_END_TX_N,$/;"	e	enum:__anon67
VG_USERREQ__PMC_PRINT_PMEM_MAPPINGS	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_PRINT_PMEM_MAPPINGS,$/;"	e	enum:__anon67
VG_USERREQ__PMC_REGISTER_PMEM_FILE	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_REGISTER_PMEM_FILE,$/;"	e	enum:__anon67
VG_USERREQ__PMC_REGISTER_PMEM_MAPPING	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_REGISTER_PMEM_MAPPING = VG_USERREQ_TOOL_BASE('P','C'),$/;"	e	enum:__anon67
VG_USERREQ__PMC_REMOVE_FROM_TX	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_REMOVE_FROM_TX,$/;"	e	enum:__anon67
VG_USERREQ__PMC_REMOVE_FROM_TX_N	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_REMOVE_FROM_TX_N,$/;"	e	enum:__anon67
VG_USERREQ__PMC_REMOVE_PMEM_MAPPING	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_REMOVE_PMEM_MAPPING,$/;"	e	enum:__anon67
VG_USERREQ__PMC_REMOVE_THREAD_FROM_TX_N	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_REMOVE_THREAD_FROM_TX_N,$/;"	e	enum:__anon67
VG_USERREQ__PMC_RESERVED1	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_RESERVED1,  \/* Do not use. *\/$/;"	e	enum:__anon67
VG_USERREQ__PMC_RESERVED10	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_RESERVED10, \/* Do not use. *\/$/;"	e	enum:__anon67
VG_USERREQ__PMC_RESERVED2	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_RESERVED2,  \/* Do not use. *\/$/;"	e	enum:__anon67
VG_USERREQ__PMC_RESERVED3	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_RESERVED3,  \/* Do not use. *\/$/;"	e	enum:__anon67
VG_USERREQ__PMC_RESERVED4	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_RESERVED4,  \/* Do not use. *\/$/;"	e	enum:__anon67
VG_USERREQ__PMC_RESERVED5	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_RESERVED5,  \/* Do not use. *\/$/;"	e	enum:__anon67
VG_USERREQ__PMC_RESERVED6	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_RESERVED6,  \/* Do not use. *\/$/;"	e	enum:__anon67
VG_USERREQ__PMC_RESERVED7	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_RESERVED7,  \/* Do not use. *\/$/;"	e	enum:__anon67
VG_USERREQ__PMC_RESERVED8	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_RESERVED8,  \/* Do not use. *\/$/;"	e	enum:__anon67
VG_USERREQ__PMC_RESERVED9	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_RESERVED9,  \/* Do not use. *\/$/;"	e	enum:__anon67
VG_USERREQ__PMC_SET_CLEAN	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_SET_CLEAN,$/;"	e	enum:__anon67
VG_USERREQ__PMC_START_TX	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_START_TX,$/;"	e	enum:__anon67
VG_USERREQ__PMC_START_TX_N	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_START_TX_N,$/;"	e	enum:__anon67
VG_USERREQ__PMC_WRITE_STATS	deps/pmdk/src/common/valgrind/pmemcheck.h	/^       VG_USERREQ__PMC_WRITE_STATS,$/;"	e	enum:__anon67
VG_USERREQ__PRINTF	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__PRINTF           = 0x1401,$/;"	e	enum:__anon65
VG_USERREQ__PRINTF_BACKTRACE	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__PRINTF_BACKTRACE = 0x1402,$/;"	e	enum:__anon65
VG_USERREQ__PRINTF_BACKTRACE_VALIST_BY_REF	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__PRINTF_BACKTRACE_VALIST_BY_REF = 0x1404,$/;"	e	enum:__anon65
VG_USERREQ__PRINTF_VALIST_BY_REF	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__PRINTF_VALIST_BY_REF = 0x1403,$/;"	e	enum:__anon65
VG_USERREQ__RESIZEINPLACE_BLOCK	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__RESIZEINPLACE_BLOCK = 0x130b,$/;"	e	enum:__anon65
VG_USERREQ__RUNNING_ON_VALGRIND	deps/pmdk/src/common/valgrind/valgrind.h	/^   enum { VG_USERREQ__RUNNING_ON_VALGRIND  = 0x1001,$/;"	e	enum:__anon65
VG_USERREQ__SET_VBITS	deps/pmdk/src/common/valgrind/memcheck.h	/^      VG_USERREQ__SET_VBITS,$/;"	e	enum:__anon53
VG_USERREQ__STACK_CHANGE	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__STACK_CHANGE     = 0x1503,$/;"	e	enum:__anon65
VG_USERREQ__STACK_DEREGISTER	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__STACK_DEREGISTER = 0x1502,$/;"	e	enum:__anon65
VG_USERREQ__STACK_REGISTER	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__STACK_REGISTER   = 0x1501,$/;"	e	enum:__anon65
VG_USERREQ__VEX_INIT_FOR_IRI	deps/pmdk/src/common/valgrind/valgrind.h	/^          VG_USERREQ__VEX_INIT_FOR_IRI = 0x1901,$/;"	e	enum:__anon65
VINDEXED	deps/lua/src/lparser.h	/^  VINDEXED,	\/* info = table register; aux = index register (or `k') *\/$/;"	e	enum:__anon30
VJMP	deps/lua/src/lparser.h	/^  VJMP,		\/* info = instruction pc *\/$/;"	e	enum:__anon30
VK	deps/lua/src/lparser.h	/^  VK,		\/* info = index of constant in `k' *\/$/;"	e	enum:__anon30
VKNUM	deps/lua/src/lparser.h	/^  VKNUM,	\/* nval = numerical value *\/$/;"	e	enum:__anon30
VLOCAL	deps/lua/src/lparser.h	/^  VLOCAL,	\/* info = local register *\/$/;"	e	enum:__anon30
VNIL	deps/lua/src/lparser.h	/^  VNIL,$/;"	e	enum:__anon30
VNONRELOC	deps/lua/src/lparser.h	/^  VNONRELOC,	\/* info = result register *\/$/;"	e	enum:__anon30
VOID	deps/lua/src/print.c	21;"	d	file:
VRELOCABLE	deps/lua/src/lparser.h	/^  VRELOCABLE,	\/* info = instruction pc *\/$/;"	e	enum:__anon30
VSEQ_INVALID	deps/jemalloc/src/prof.c	1634;"	d	file:
VTRUE	deps/lua/src/lparser.h	/^  VTRUE,$/;"	e	enum:__anon30
VUPVAL	deps/lua/src/lparser.h	/^  VUPVAL,       \/* info = index of upvalue in `upvalues' *\/$/;"	e	enum:__anon30
VVARARG	deps/lua/src/lparser.h	/^  VVARARG	\/* info = instruction pc *\/$/;"	e	enum:__anon30
VVOID	deps/lua/src/lparser.h	/^  VVOID,	\/* no value *\/$/;"	e	enum:__anon30
Valgrind	deps/pmdk/src/test/unittest/valgrind.py	/^class Valgrind:$/;"	c
ValidAccess	deps/pmdk/src/test/unittest/ut.c	/^	ULONG ValidAccess;$/;"	m	struct:_OBJECT_TYPE_INFORMATION	file:
Value	deps/lua/src/lobject.h	/^} Value;$/;"	t	typeref:union:__anon23
Vg_ClientRequest	deps/pmdk/src/common/valgrind/valgrind.h	/^   } Vg_ClientRequest;$/;"	t	typeref:enum:__anon65
Vg_MemCheckClientRequest	deps/pmdk/src/common/valgrind/memcheck.h	/^   } Vg_MemCheckClientRequest;$/;"	t	typeref:enum:__anon53
Vg_PMemCheckClientRequest	deps/pmdk/src/common/valgrind/pmemcheck.h	/^   } Vg_PMemCheckClientRequest;$/;"	t	typeref:enum:__anon67
Vg_TCheckClientRequest	deps/pmdk/src/common/valgrind/helgrind.h	/^   } Vg_TCheckClientRequest;$/;"	t	typeref:enum:__anon68
Vsnprintf	deps/pmdk/src/common/out.c	/^static Vsnprintf_func Vsnprintf = vsnprintf;$/;"	v	file:
Vsnprintf_func	deps/pmdk/src/common/out.c	/^typedef int (*Vsnprintf_func)(char *str, size_t size, const char *format,$/;"	t	file:
W128_T	deps/jemalloc/test/src/SFMT.c	/^struct W128_T {$/;"	s	file:
W128_T	deps/jemalloc/test/src/SFMT.c	/^union W128_T {$/;"	u	file:
WAIT	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	WAIT,$/;"	e	enum:wait_type	file:
WARN	deps/geohash-int/Makefile	/^WARN= -Wall$/;"	m
WARN	deps/linenoise/Makefile	/^WARN= -Wall$/;"	m
WARN	src/Makefile	/^WARN=-Wall -W$/;"	m
WARNINGS	deps/hiredis/Makefile	/^WARNINGS=-Wall -W -Wstrict-prototypes -Wwrite-strings$/;"	m
WCHAR_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	215;"	d
WCHAR_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	212;"	d
WHITE0BIT	deps/lua/src/lgc.h	54;"	d
WHITE1BIT	deps/lua/src/lgc.h	55;"	d
WHITEBITS	deps/lua/src/lgc.h	62;"	d
WINT_MAX	deps/jemalloc/include/msvc_compat/C99/stdint.h	219;"	d
WINT_MIN	deps/jemalloc/include/msvc_compat/C99/stdint.h	218;"	d
WIN_DEBUG_BUILDDIR	deps/pmdk/src/test/unittest/futils.py	/^WIN_DEBUG_BUILDDIR = abspath(join(ROOTDIR, '..', 'x64', 'Debug'))$/;"	v
WIN_DEBUG_EXEDIR	deps/pmdk/src/test/unittest/futils.py	/^WIN_DEBUG_EXEDIR = abspath(join(WIN_DEBUG_BUILDDIR, 'tests'))$/;"	v
WIN_MMAP_H	deps/pmdk/src/windows/include/win_mmap.h	39;"	d
WIN_RELEASE_BUILDDIR	deps/pmdk/src/test/unittest/futils.py	/^WIN_RELEASE_BUILDDIR = abspath(join(ROOTDIR, '..', 'x64', 'Release'))$/;"	v
WIN_RELEASE_EXEDIR	deps/pmdk/src/test/unittest/futils.py	/^WIN_RELEASE_EXEDIR = abspath(join(WIN_RELEASE_BUILDDIR, 'tests'))$/;"	v
WITNESS_INITIALIZER	deps/jemalloc/include/jemalloc/internal/witness.h	41;"	d
WITNESS_RANK_ARENA	deps/jemalloc/include/jemalloc/internal/witness.h	25;"	d
WITNESS_RANK_ARENAS	deps/jemalloc/include/jemalloc/internal/witness.h	17;"	d
WITNESS_RANK_ARENA_BIN	deps/jemalloc/include/jemalloc/internal/witness.h	32;"	d
WITNESS_RANK_ARENA_CHUNKS	deps/jemalloc/include/jemalloc/internal/witness.h	26;"	d
WITNESS_RANK_ARENA_HUGE	deps/jemalloc/include/jemalloc/internal/witness.h	33;"	d
WITNESS_RANK_ARENA_NODE_CACHE	deps/jemalloc/include/jemalloc/internal/witness.h	27;"	d
WITNESS_RANK_BASE	deps/jemalloc/include/jemalloc/internal/witness.h	29;"	d
WITNESS_RANK_CTL	deps/jemalloc/include/jemalloc/internal/witness.h	16;"	d
WITNESS_RANK_DSS	deps/jemalloc/include/jemalloc/internal/witness.h	34;"	d
WITNESS_RANK_INIT	deps/jemalloc/include/jemalloc/internal/witness.h	15;"	d
WITNESS_RANK_LEAF	deps/jemalloc/include/jemalloc/internal/witness.h	31;"	d
WITNESS_RANK_OMIT	deps/jemalloc/include/jemalloc/internal/witness.h	13;"	d
WITNESS_RANK_PROF_ACTIVE	deps/jemalloc/include/jemalloc/internal/witness.h	35;"	d
WITNESS_RANK_PROF_BT2GCTX	deps/jemalloc/include/jemalloc/internal/witness.h	20;"	d
WITNESS_RANK_PROF_DUMP	deps/jemalloc/include/jemalloc/internal/witness.h	19;"	d
WITNESS_RANK_PROF_DUMP_SEQ	deps/jemalloc/include/jemalloc/internal/witness.h	36;"	d
WITNESS_RANK_PROF_GCTX	deps/jemalloc/include/jemalloc/internal/witness.h	23;"	d
WITNESS_RANK_PROF_GDUMP	deps/jemalloc/include/jemalloc/internal/witness.h	37;"	d
WITNESS_RANK_PROF_NEXT_THR_UID	deps/jemalloc/include/jemalloc/internal/witness.h	38;"	d
WITNESS_RANK_PROF_TDATA	deps/jemalloc/include/jemalloc/internal/witness.h	22;"	d
WITNESS_RANK_PROF_TDATAS	deps/jemalloc/include/jemalloc/internal/witness.h	21;"	d
WITNESS_RANK_PROF_THREAD_ACTIVE_INIT	deps/jemalloc/include/jemalloc/internal/witness.h	39;"	d
WOPEN	deps/pmdk/src/test/unittest/unittest.h	454;"	d
WORKER_RUNS	deps/pmdk/src/test/obj_sync/obj_sync.c	50;"	d	file:
WORKER_STATE_DONE	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	WORKER_STATE_DONE,$/;"	e	enum:benchmark_worker_state
WORKER_STATE_END	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	WORKER_STATE_END,$/;"	e	enum:benchmark_worker_state
WORKER_STATE_EXIT	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	WORKER_STATE_EXIT,$/;"	e	enum:benchmark_worker_state
WORKER_STATE_IDLE	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	WORKER_STATE_IDLE,$/;"	e	enum:benchmark_worker_state
WORKER_STATE_INIT	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	WORKER_STATE_INIT,$/;"	e	enum:benchmark_worker_state
WORKER_STATE_INITIALIZED	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	WORKER_STATE_INITIALIZED,$/;"	e	enum:benchmark_worker_state
WORKER_STATE_RUN	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	WORKER_STATE_RUN,$/;"	e	enum:benchmark_worker_state
WRAP_REAL_HEAP	deps/pmdk/src/test/obj_list/mocks_windows.h	54;"	d
WRAP_REAL_LANE	deps/pmdk/src/test/obj_list/mocks_windows.h	53;"	d
WRAP_REAL_PMALLOC	deps/pmdk/src/test/obj_list/mocks_windows.h	51;"	d
WRAP_REAL_PMEMOBJ	deps/pmdk/src/test/obj_list/mocks_windows.h	55;"	d
WRAP_REAL_ULOG	deps/pmdk/src/test/obj_list/mocks_windows.h	52;"	d
WRITE	deps/jemalloc/src/ctl.c	1082;"	d	file:
WRITE	deps/pmdk/src/test/unittest/unittest.h	474;"	d
WRITEONLY	deps/jemalloc/src/ctl.c	1054;"	d	file:
W_OK	deps/pmdk/src/windows/include/unistd.h	46;"	d
X0	src/rand.c	54;"	d	file:
X1	src/rand.c	55;"	d	file:
X2	src/rand.c	56;"	d	file:
X2S_BUFSIZE	deps/jemalloc/src/util.c	41;"	d	file:
X86_64_FLUSH_H	deps/pmdk/src/libpmem/x86_64/flush.h	34;"	d
XSLTPROC	deps/jemalloc/Makefile	/^XSLTPROC := \/usr\/bin\/xsltproc$/;"	m
X_OK	deps/pmdk/src/windows/include/unistd.h	47;"	d
Y 	deps/lua/test/factorial.lua	/^Y = function (g)$/;"	f
YEAR_INIT_MAX	deps/pmdk/utils/check_license/check-license.c	59;"	d	file:
YEAR_INIT_MIN	deps/pmdk/utils/check_license/check-license.c	58;"	d	file:
YEAR_LEN	deps/pmdk/utils/check_license/check-license.c	60;"	d	file:
YEAR_MAX	deps/pmdk/utils/check_license/check-license.c	57;"	d	file:
YEAR_MIN	deps/pmdk/utils/check_license/check-license.c	56;"	d	file:
Z	deps/lua/src/lundump.c	/^ ZIO* Z;$/;"	m	struct:__anon39	file:
ZADD_CH	src/t_zset.c	1210;"	d	file:
ZADD_INCR	src/t_zset.c	1207;"	d	file:
ZADD_NONE	src/t_zset.c	1206;"	d	file:
ZADD_NX	src/t_zset.c	1208;"	d	file:
ZADD_XX	src/t_zset.c	1209;"	d	file:
ZALLOC	deps/pmdk/src/test/unittest/unittest.h	345;"	d
ZEROED	deps/pmdk/src/test/unittest/poolset.py	/^    ZEROED = 0$/;"	v	class:CREATE
ZERO_MASK	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	66;"	d	file:
ZERO_SDS_STR	deps/pmdk/src/libpmempool/check_sds.c	62;"	d	file:
ZI	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	42;"	d
ZID_TO_ZONE	deps/pmdk/src/libpmemobj/heap_layout.h	/^ZID_TO_ZONE(struct heap_layout *layout, size_t zone_id)$/;"	f
ZIO	deps/lua/src/lzio.h	/^typedef struct Zio ZIO;$/;"	t	typeref:struct:Zio
ZIPLIST_BYTES	src/ziplist.c	142;"	d	file:
ZIPLIST_END_SIZE	src/ziplist.c	146;"	d	file:
ZIPLIST_ENTRY_END	src/ziplist.c	149;"	d	file:
ZIPLIST_ENTRY_HEAD	src/ziplist.c	147;"	d	file:
ZIPLIST_ENTRY_TAIL	src/ziplist.c	148;"	d	file:
ZIPLIST_ENTRY_ZERO	src/ziplist.c	166;"	d	file:
ZIPLIST_HEAD	src/ziplist.h	34;"	d
ZIPLIST_HEADER_SIZE	src/ziplist.c	145;"	d	file:
ZIPLIST_INCR_LENGTH	src/ziplist.c	153;"	d	file:
ZIPLIST_LENGTH	src/ziplist.c	144;"	d	file:
ZIPLIST_TAIL	src/ziplist.h	35;"	d
ZIPLIST_TAIL_OFFSET	src/ziplist.c	143;"	d	file:
ZIPMAP_BIGLEN	src/zipmap.c	83;"	d	file:
ZIPMAP_END	src/zipmap.c	84;"	d	file:
ZIPMAP_LEN_BYTES	src/zipmap.c	93;"	d	file:
ZIPMAP_VALUE_MAX_FREE	src/zipmap.c	88;"	d	file:
ZIP_BIGLEN	src/ziplist.c	116;"	d	file:
ZIP_DECODE_LENGTH	src/ziplist.c	236;"	d	file:
ZIP_DECODE_PREVLEN	src/ziplist.c	299;"	d	file:
ZIP_DECODE_PREVLENSIZE	src/ziplist.c	289;"	d	file:
ZIP_END	src/ziplist.c	115;"	d	file:
ZIP_ENTRY_ENCODING	src/ziplist.c	175;"	d	file:
ZIP_INT_16B	src/ziplist.c	124;"	d	file:
ZIP_INT_24B	src/ziplist.c	127;"	d	file:
ZIP_INT_32B	src/ziplist.c	125;"	d	file:
ZIP_INT_64B	src/ziplist.c	126;"	d	file:
ZIP_INT_8B	src/ziplist.c	128;"	d	file:
ZIP_INT_IMM_MASK	src/ziplist.c	130;"	d	file:
ZIP_INT_IMM_MAX	src/ziplist.c	132;"	d	file:
ZIP_INT_IMM_MIN	src/ziplist.c	131;"	d	file:
ZIP_INT_IMM_VAL	src/ziplist.c	133;"	d	file:
ZIP_INT_MASK	src/ziplist.c	120;"	d	file:
ZIP_IS_STR	src/ziplist.c	139;"	d	file:
ZIP_STR_06B	src/ziplist.c	121;"	d	file:
ZIP_STR_14B	src/ziplist.c	122;"	d	file:
ZIP_STR_32B	src/ziplist.c	123;"	d	file:
ZIP_STR_MASK	src/ziplist.c	119;"	d	file:
ZMALLOC_H	deps/hiredis/zmalloc.h	5;"	d
ZMALLOC_LIB	src/zmalloc.h	39;"	d
ZMALLOC_LIB	src/zmalloc.h	49;"	d
ZMALLOC_LIB	src/zmalloc.h	65;"	d
ZONE_HEADER_MAGIC	deps/pmdk/src/libpmemobj/heap_layout.h	56;"	d
ZONE_MAX_SIZE	deps/pmdk/src/libpmemobj/heap_layout.h	58;"	d
ZONE_MIN_SIZE	deps/pmdk/src/libpmemobj/heap_layout.h	57;"	d
ZRANGE_LEX	src/t_zset.c	1474;"	d	file:
ZRANGE_RANK	src/t_zset.c	1472;"	d	file:
ZRANGE_SCORE	src/t_zset.c	1473;"	d	file:
ZSKIPLIST_MAXLEVEL	src/server.h	396;"	d
ZSKIPLIST_P	src/server.h	397;"	d
ZU	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	41;"	d
Zalloc	deps/pmdk/src/common/alloc.c	/^Zalloc(size_t sz)$/;"	f
Zflog	deps/pmdk/src/libpmemblk/btt.c	/^static const struct btt_flog Zflog;$/;"	v	typeref:struct:btt_flog	file:
Zio	deps/lua/src/lzio.h	/^struct Zio {$/;"	s
_ALL_SOURCE	deps/hiredis/fmacros.h	9;"	d
_ALL_SOURCE	src/fmacros.h	41;"	d
_ARTTREE_H	deps/pmdk/src/examples/libpmemobj/libart/arttree.h	50;"	d
_ARTTREE_STRUCTURES_H	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	50;"	d
_ART_H	deps/pmdk/src/examples/libpmemobj/libart/art.h	56;"	d
_BENCHMARK_H	deps/pmdk/src/benchmarks/benchmark.hpp	57;"	d
_BSD_SOURCE	deps/hiredis/fmacros.h	5;"	d
_BSD_SOURCE	src/fmacros.h	33;"	d
_Bool	deps/jemalloc/include/msvc_compat/C99/stdbool.h	/^typedef BOOL _Bool;$/;"	t
_Build	deps/pmdk/src/test/unittest/context.py	/^class _Build(metaclass=_CtxType):$/;"	c
_CELLS:draw	deps/lua/test/life.lua	/^function _CELLS:draw()$/;"	f
_CELLS:evolve	deps/lua/test/life.lua	/^function _CELLS:evolve(next)$/;"	f
_CELLS:spawn	deps/lua/test/life.lua	/^function _CELLS:spawn(shape,left,top)$/;"	f
_CRT_RAND_S	deps/pmdk/src/windows/include/platform.h	58;"	d
_CRT_SPINCOUNT	deps/jemalloc/src/mutex.c	9;"	d	file:
_CRT_SPINCOUNT	deps/jemalloc/test/src/mtx.c	4;"	d	file:
_Cached_pool_key_alloc	deps/pmdk/src/libpmemobj/obj.c	/^_Cached_pool_key_alloc(void)$/;"	f	file:
_ConfigFromDict	deps/pmdk/src/test/unittest/configurator.py	/^class _ConfigFromDict:$/;"	c
_CtxType	deps/pmdk/src/test/unittest/context.py	/^class _CtxType(type):$/;"	c
_DEFAULT_SOURCE	src/fmacros.h	37;"	d
_EL_ADD_READ	deps/hiredis/async.c	44;"	d	file:
_EL_ADD_WRITE	deps/hiredis/async.c	50;"	d	file:
_EL_CLEANUP	deps/hiredis/async.c	56;"	d	file:
_EL_DEL_READ	deps/hiredis/async.c	47;"	d	file:
_EL_DEL_WRITE	deps/hiredis/async.c	53;"	d	file:
_FILE_OFFSET_BITS	src/fmacros.h	59;"	d
_FUNC_REAL	deps/pmdk/src/test/unittest/unittest.h	615;"	d
_FUNC_REAL	deps/pmdk/src/test/unittest/unittest.h	618;"	d
_FUNC_REAL_DECL	deps/pmdk/src/test/unittest/unittest.h	607;"	d
_FUNC_REAL_DECL	deps/pmdk/src/test/unittest/unittest.h	610;"	d
_Fs	deps/pmdk/src/test/unittest/context.py	/^class _Fs(metaclass=_CtxType):$/;"	c
_GNU_SOURCE	deps/pmdk/src/common/badblock.c	36;"	d	file:
_GNU_SOURCE	deps/pmdk/src/common/badblock_ndctl.c	37;"	d	file:
_GNU_SOURCE	deps/pmdk/src/common/file_posix.c	38;"	d	file:
_GNU_SOURCE	deps/pmdk/src/common/os_auto_flush_linux.c	37;"	d	file:
_GNU_SOURCE	deps/pmdk/src/common/os_deep_linux.c	37;"	d	file:
_GNU_SOURCE	deps/pmdk/src/common/os_dimm_ndctl.c	36;"	d	file:
_GNU_SOURCE	deps/pmdk/src/common/os_posix.c	37;"	d	file:
_GNU_SOURCE	deps/pmdk/src/common/os_thread_posix.c	37;"	d	file:
_GNU_SOURCE	deps/pmdk/src/common/set.c	39;"	d	file:
_GNU_SOURCE	deps/pmdk/src/libpmemobj/lane.c	38;"	d	file:
_GNU_SOURCE	deps/pmdk/src/test/blk_non_zero/blk_non_zero.c	43;"	d	file:
_GNU_SOURCE	deps/pmdk/src/test/obj_lane/obj_lane.c	37;"	d	file:
_GNU_SOURCE	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	36;"	d	file:
_GNU_SOURCE	deps/pmdk/src/test/pmem_map_file/mocks_posix.c	37;"	d	file:
_GNU_SOURCE	deps/pmdk/src/test/pmem_map_file/pmem_map_file.c	39;"	d	file:
_GNU_SOURCE	deps/pmdk/src/test/pmem_map_file_win/pmem_map_file_win.c	39;"	d	file:
_GNU_SOURCE	deps/pmdk/src/test/tools/fallocate_detect/fallocate_detect.c	37;"	d	file:
_GNU_SOURCE	deps/pmdk/src/test/unittest/ut_backtrace.c	38;"	d	file:
_GNU_SOURCE	deps/pmdk/src/test/util_cpuid/util_cpuid.c	37;"	d	file:
_GNU_SOURCE	deps/pmdk/src/test/util_map_proc/util_map_proc.c	39;"	d	file:
_GNU_SOURCE	src/fmacros.h	36;"	d
_GNU_SOURCE	src/setproctitle.c	29;"	d	file:
_HG_CLIENTREQ_UNIMP	deps/pmdk/src/common/valgrind/helgrind.h	230;"	d
_IGNORED	deps/pmdk/src/test/unittest/valgrind.py	/^_IGNORED = ($/;"	v
_LARGEFILE_SOURCE	src/fmacros.h	58;"	d
_LDBG	deps/pmdk/src/librpmem/rpmem_util.h	/^	_LDBG = 10,$/;"	e	enum:__anon97
_Last_errormsg_key_alloc	deps/pmdk/src/common/out.c	/^_Last_errormsg_key_alloc(void)$/;"	f	file:
_MSC_STDINT_H_	deps/jemalloc/include/msvc_compat/C99/stdint.h	37;"	d
_Malloc	deps/pmdk/src/common/alloc.c	/^void *_Malloc(size_t size) {$/;"	f
_OBJECT_TYPE_INFORMATION	deps/pmdk/src/test/unittest/ut.c	/^typedef struct _OBJECT_TYPE_INFORMATION {$/;"	s	file:
_OPT_REQ	deps/pmdk/src/tools/pmempool/common.h	76;"	d
_OSX	deps/hiredis/fmacros.h	21;"	d
_On_valgrind	deps/pmdk/src/common/util.c	/^unsigned _On_valgrind;$/;"	v
_PMDK_QUEUE_H_	deps/pmdk/src/common/queue.h	36;"	d
_POBJ_CL_SIZE	deps/pmdk/src/include/libpmemobj/thread.h	50;"	d
_POBJ_DEBUG_NOTICE_IN_TX	deps/pmdk/src/libpmemobj/obj.h	286;"	d
_POBJ_DEBUG_NOTICE_IN_TX	deps/pmdk/src/libpmemobj/obj.h	289;"	d
_POBJ_LAYOUT_REF	deps/pmdk/src/include/libpmemobj/types.h	98;"	d
_POBJ_SWAP_PTR	deps/pmdk/src/examples/libpmemobj/linkedlist/pmemobj_list.h	177;"	d
_POBJ_TX_BEGIN	deps/pmdk/src/include/libpmemobj/tx.h	59;"	d
_POOL_TYPE	deps/pmdk/src/test/unittest/ut.c	/^typedef enum _POOL_TYPE {$/;"	g	file:
_POSIX_C_SOURCE	deps/hiredis/fmacros.h	13;"	d
_POSIX_C_SOURCE	src/fmacros.h	55;"	d
_Part	deps/pmdk/src/test/unittest/poolset.py	/^class _Part:$/;"	c
_Pmreorder_emit	deps/pmdk/src/common/util.c	/^int _Pmreorder_emit;$/;"	v
_Poolset	deps/pmdk/src/test/unittest/poolset.py	/^class _Poolset:$/;"	c
_REDIS_FMACRO_H	src/fmacros.h	31;"	d
_RPATH	deps/jemalloc/Makefile	/^_RPATH = -Wl,-rpath,$(1)$/;"	m
_RPD_LOG_DBG	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	/^	_RPD_LOG_DBG,	\/* disallow to use this with LOG macro *\/$/;"	e	enum:rpmemd_log_level
_Realloc	deps/pmdk/src/common/alloc.c	/^void *_Realloc(void *ptr, size_t size) {$/;"	f
_SC_NPROCESSORS_ONLN	deps/pmdk/src/windows/include/unistd.h	43;"	d
_SC_PAGESIZE	deps/pmdk/src/windows/include/unistd.h	42;"	d
_SIGNALS_FBSD_H	deps/pmdk/src/test/tools/ctrld/signals_freebsd.h	37;"	d
_SIGNALS_LINUX_H	deps/pmdk/src/test/tools/ctrld/signals_linux.h	37;"	d
_STR	deps/pmdk/src/tools/pmempool/output.c	52;"	d	file:
_SYSTEM_HANDLE_INFORMATION_EX	deps/pmdk/src/test/unittest/ut.c	/^typedef struct _SYSTEM_HANDLE_INFORMATION_EX {$/;"	s	file:
_SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX	deps/pmdk/src/test/unittest/ut.c	/^typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX {$/;"	s	file:
_TOID_CONSTR	deps/pmdk/src/include/libpmemobj/types.h	107;"	d
_TOID_CONSTR	deps/pmdk/src/include/libpmemobj/types.h	113;"	d
_TOID_DECLARE	deps/pmdk/src/include/libpmemobj/types.h	119;"	d
_TestCase	deps/pmdk/src/test/unittest/basetest.py	/^class _TestCase(type):$/;"	c
_TestType	deps/pmdk/src/test/unittest/context.py	/^class _TestType(metaclass=_CtxType):$/;"	c
_Tool	deps/pmdk/src/test/unittest/valgrind.py	/^class _Tool(Enum):$/;"	c
_UNITTEST_H	deps/pmdk/src/test/unittest/unittest.h	85;"	d
_VG_USERREQ__HG_ARANGE_MAKE_TRACKED	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_ARANGE_MAKE_TRACKED,   \/* Addr a, ulong len *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_ARANGE_MAKE_UNTRACKED	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_ARANGE_MAKE_UNTRACKED, \/* Addr a, ulong len *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_CLEAN_MEMORY_HEAPBLOCK	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_CLEAN_MEMORY_HEAPBLOCK, \/* Addr start_of_block *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_CLIENTREQ_UNIMP	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_CLIENTREQ_UNIMP,            \/* char* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_GET_ABITS	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_GET_ABITS,              \/* Addr a,Addr abits, ulong len *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_GNAT_DEPENDENT_MASTER_JOIN	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_GNAT_DEPENDENT_MASTER_JOIN  \/* void*d, void*m *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_GNAT_MASTER_COMPLETED_HOOK	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_GNAT_MASTER_COMPLETED_HOOK, \/* void*s,Word ml *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_GNAT_MASTER_HOOK	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_GNAT_MASTER_HOOK,       \/* void*d,void*m,Word ml *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_POSIX_SEM_ACQUIRED	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_POSIX_SEM_ACQUIRED,         \/* void* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_POSIX_SEM_DESTROY_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_POSIX_SEM_DESTROY_PRE,      \/* sem_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_POSIX_SEM_INIT_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_POSIX_SEM_INIT_POST,        \/* sem_t*, ulong value *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_POSIX_SEM_POST_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_POSIX_SEM_POST_POST,        \/* sem_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_POSIX_SEM_POST_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_POSIX_SEM_POST_PRE,         \/* sem_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_POSIX_SEM_RELEASED	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_POSIX_SEM_RELEASED,         \/* void* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_POSIX_SEM_WAIT_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_POSIX_SEM_WAIT_POST,        \/* sem_t*, long tookLock *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_POSIX_SEM_WAIT_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_POSIX_SEM_WAIT_PRE,         \/* sem_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_BARRIER_DESTROY_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_BARRIER_DESTROY_PRE, \/* pth_bar_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_BARRIER_INIT_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_BARRIER_INIT_PRE,   \/* pth_bar_t*, ulong, ulong *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_BARRIER_RESIZE_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_BARRIER_RESIZE_PRE, \/* pth_bar_t*, ulong *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_BARRIER_WAIT_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_BARRIER_WAIT_PRE,   \/* pth_bar_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_COND_BROADCAST_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_COND_BROADCAST_POST,\/* pth_cond_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_COND_BROADCAST_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_COND_BROADCAST_PRE, \/* pth_cond_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_COND_DESTROY_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_COND_DESTROY_PRE,   \/* pth_cond_t*, long isInit *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_COND_INIT_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_COND_INIT_POST,  \/* pth_cond_t*, pth_cond_attr_t*\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_COND_SIGNAL_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_COND_SIGNAL_POST,   \/* pth_cond_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_COND_SIGNAL_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_COND_SIGNAL_PRE,    \/* pth_cond_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_COND_WAIT_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_COND_WAIT_POST,    \/* pth_cond_t*, pth_mx_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_COND_WAIT_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_COND_WAIT_PRE,     \/* pth_cond_t*, pth_mx_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_CREATE_BEGIN	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_CREATE_BEGIN,$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_CREATE_END	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_CREATE_END,$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_JOIN_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_JOIN_POST,          \/* pthread_t of quitter *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_MUTEX_ACQUIRE_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_MUTEX_ACQUIRE_POST, \/* void* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_MUTEX_ACQUIRE_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_MUTEX_ACQUIRE_PRE,  \/* void*, long isTryLock *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_MUTEX_DESTROY_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_MUTEX_DESTROY_PRE,  \/* pth_mx_t*, long isInit *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_MUTEX_INIT_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_MUTEX_INIT_POST,    \/* pth_mx_t*, long mbRec *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_MUTEX_LOCK_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_MUTEX_LOCK_POST,    \/* pth_mx_t *,long tookLock *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_MUTEX_LOCK_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_MUTEX_LOCK_PRE,     \/* pth_mx_t*,long isTryLock *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_MUTEX_UNLOCK_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_MUTEX_UNLOCK_POST,  \/* pth_mx_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_MUTEX_UNLOCK_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_MUTEX_UNLOCK_PRE,   \/* pth_mx_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_RWLOCK_ACQUIRED	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_RWLOCK_ACQUIRED,    \/* void*, long isW *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_RWLOCK_DESTROY_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_RWLOCK_DESTROY_PRE, \/* pth_rwlk_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_RWLOCK_INIT_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_RWLOCK_INIT_POST,   \/* pth_rwlk_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_RWLOCK_LOCK_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_RWLOCK_LOCK_POST,  \/* pth_rwlk_t*,long isW,long *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_RWLOCK_LOCK_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_RWLOCK_LOCK_PRE,    \/* pth_rwlk_t*, long isW *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_RWLOCK_RELEASED	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_RWLOCK_RELEASED,    \/* void* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_RWLOCK_UNLOCK_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_RWLOCK_UNLOCK_POST, \/* pth_rwlk_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_RWLOCK_UNLOCK_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_RWLOCK_UNLOCK_PRE,  \/* pth_rwlk_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_SPIN_DESTROY_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_SPIN_DESTROY_PRE,   \/* pth_slk_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_SPIN_INIT_OR_UNLOCK_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_SPIN_INIT_OR_UNLOCK_POST, \/* pth_slk_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_SPIN_INIT_OR_UNLOCK_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_SPIN_INIT_OR_UNLOCK_PRE,  \/* pth_slk_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_SPIN_LOCK_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_SPIN_LOCK_POST,     \/* pth_slk_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTHREAD_SPIN_LOCK_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTHREAD_SPIN_LOCK_PRE,      \/* pth_slk_t* *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_PTH_API_ERROR	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_PTH_API_ERROR,              \/* char*, int *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_RESERVED2	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_RESERVED2,              \/* Do not use *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_RESERVED3	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_RESERVED3,              \/* Do not use *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_RESERVED4	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_RESERVED4,              \/* Do not use *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_RTLD_BIND_CLEAR	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_RTLD_BIND_CLEAR,            \/* int flags *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_RTLD_BIND_GUARD	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_RTLD_BIND_GUARD,            \/* int flags *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_SET_MY_PTHREAD_T	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_SET_MY_PTHREAD_T = VG_USERREQ_TOOL_BASE('H','G') $/;"	e	enum:__anon68
_VG_USERREQ__HG_USERSO_FORGET_ALL	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_USERSO_FORGET_ALL,      \/* arbitrary UWord SO-tag *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_USERSO_RECV_POST	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_USERSO_RECV_POST,       \/* arbitrary UWord SO-tag *\/$/;"	e	enum:__anon68
_VG_USERREQ__HG_USERSO_SEND_PRE	deps/pmdk/src/common/valgrind/helgrind.h	/^      _VG_USERREQ__HG_USERSO_SEND_PRE,        \/* arbitrary UWord SO-tag *\/$/;"	e	enum:__anon68
_VG_USERREQ__MEMCHECK_RECORD_OVERLAP_ERROR	deps/pmdk/src/common/valgrind/memcheck.h	/^      _VG_USERREQ__MEMCHECK_RECORD_OVERLAP_ERROR $/;"	e	enum:__anon53
_W64	deps/jemalloc/include/msvc_compat/C99/stdint.h	60;"	d
_W64	deps/jemalloc/include/msvc_compat/C99/stdint.h	62;"	d
_WITH_GETLINE	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	56;"	d	file:
_WITH_GETLINE	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	52;"	d	file:
_When_	deps/pmdk/src/common/os_thread.h	103;"	d
_XOPEN_SOURCE	deps/hiredis/fmacros.h	15;"	d
_XOPEN_SOURCE	deps/hiredis/fmacros.h	17;"	d
_XOPEN_SOURCE	src/fmacros.h	45;"	d
_XOPEN_SOURCE	src/fmacros.h	51;"	d
_ZIPLIST_H	src/ziplist.h	32;"	d
_ZIPMAP_H	src/zipmap.h	36;"	d
__ADLIST_H__	src/adlist.h	32;"	d
__AE_H__	src/ae.h	34;"	d
__CALLER_SAVED_REGS	deps/pmdk/src/common/valgrind/valgrind.h	1152;"	d
__CALLER_SAVED_REGS	deps/pmdk/src/common/valgrind/valgrind.h	1585;"	d
__CALLER_SAVED_REGS	deps/pmdk/src/common/valgrind/valgrind.h	2159;"	d
__CALLER_SAVED_REGS	deps/pmdk/src/common/valgrind/valgrind.h	2638;"	d
__CALLER_SAVED_REGS	deps/pmdk/src/common/valgrind/valgrind.h	3194;"	d
__CALLER_SAVED_REGS	deps/pmdk/src/common/valgrind/valgrind.h	3749;"	d
__CALLER_SAVED_REGS	deps/pmdk/src/common/valgrind/valgrind.h	4208;"	d
__CALLER_SAVED_REGS	deps/pmdk/src/common/valgrind/valgrind.h	4690;"	d
__CALLER_SAVED_REGS	deps/pmdk/src/common/valgrind/valgrind.h	5147;"	d
__CALLER_SAVED_REGS	deps/pmdk/src/common/valgrind/valgrind.h	5686;"	d
__CALL_NO_REDIR_CODE	deps/pmdk/src/common/valgrind/valgrind.h	851;"	d
__CLIENT_REQUEST_CODE	deps/pmdk/src/common/valgrind/valgrind.h	849;"	d
__CLUSTER_H	src/cluster.h	2;"	d
__CONFIG_H	src/config.h	31;"	d
__DECONST	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	52;"	d
__DICT_H	deps/hiredis/dict.h	37;"	d
__DICT_H	src/dict.h	39;"	d
__ENDIANCONV_H	src/endianconv.h	34;"	d
__FRAME_POINTER	deps/pmdk/src/common/valgrind/valgrind.h	1643;"	d
__FRAME_POINTER	deps/pmdk/src/common/valgrind/valgrind.h	1654;"	d
__FRAME_POINTER	deps/pmdk/src/common/valgrind/valgrind.h	4663;"	d
__FRAME_POINTER	deps/pmdk/src/common/valgrind/valgrind.h	4675;"	d
__GEO_H__	src/geo.h	2;"	d
__GET_NR_CONTEXT_CODE	deps/pmdk/src/common/valgrind/valgrind.h	850;"	d
__HELGRIND_H	deps/pmdk/src/common/valgrind/helgrind.h	59;"	d
__HIREDIS_AE_H__	deps/hiredis/adapters/ae.h	32;"	d
__HIREDIS_ASYNC_H	deps/hiredis/async.h	33;"	d
__HIREDIS_FMACRO_H	deps/hiredis/fmacros.h	2;"	d
__HIREDIS_H	deps/hiredis/hiredis.h	33;"	d
__HIREDIS_LIBEVENT_H__	deps/hiredis/adapters/libevent.h	32;"	d
__HIREDIS_LIBEV_H__	deps/hiredis/adapters/libev.h	32;"	d
__HIREDIS_LIBUV_H__	deps/hiredis/adapters/libuv.h	2;"	d
__INTSET_H	src/intset.h	32;"	d
__LATENCY_H	src/latency.h	35;"	d
__LINENOISE_H	deps/linenoise/linenoise.h	40;"	d
__MAX_MSEC	deps/hiredis/net.c	176;"	d	file:
__MEMCHECK_H	deps/pmdk/src/common/valgrind/memcheck.h	61;"	d
__NET_H	deps/hiredis/net.h	34;"	d
__PMEMCHECK_H	deps/pmdk/src/common/valgrind/pmemcheck.h	34;"	d
__PMEM_H	src/pmem.h	31;"	d
__PPC64__PLATFORM_GENERIC_H__	deps/pmdk/src/libpmem/ppc64/platform_generic.h	33;"	d
__PQSORT_H	src/pqsort.h	34;"	d
__QUICKLIST_H__	src/quicklist.h	32;"	d
__RDB_H	src/rdb.h	31;"	d
__REDIS_ASSERT_H__	src/redisassert.h	39;"	d
__REDIS_H	src/server.h	31;"	d
__REDIS_HELP_H	src/help.h	4;"	d
__REDIS_RIO_H	src/rio.h	33;"	d
__REDIS_UTIL_H	src/util.h	31;"	d
__SDS_H	deps/hiredis/sds.h	34;"	d
__SDS_H	src/sds.h	34;"	d
__SPARKLINE_H	src/sparkline.h	31;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	deps/pmdk/src/common/valgrind/valgrind.h	265;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	deps/pmdk/src/common/valgrind/valgrind.h	332;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	deps/pmdk/src/common/valgrind/valgrind.h	405;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	deps/pmdk/src/common/valgrind/valgrind.h	477;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	deps/pmdk/src/common/valgrind/valgrind.h	547;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	deps/pmdk/src/common/valgrind/valgrind.h	624;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	deps/pmdk/src/common/valgrind/valgrind.h	702;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	deps/pmdk/src/common/valgrind/valgrind.h	770;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	deps/pmdk/src/common/valgrind/valgrind.h	843;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	deps/pmdk/src/common/valgrind/valgrind.h	920;"	d
__SPECIAL_INSTRUCTION_PREAMBLE	deps/pmdk/src/common/valgrind/valgrind.h	993;"	d
__STDC_LIMIT_MACROS	deps/pmdk/src/include/libpmemobj/base.h	41;"	d
__TESTHELP_H	src/testhelp.h	40;"	d
__USE_UNIX98	deps/pmdk/src/test/tools/pmemspoil/spoil.c	38;"	d	file:
__VALGRIND_DRD_H	deps/pmdk/src/common/valgrind/drd.h	60;"	d
__VALGRIND_H	deps/pmdk/src/common/valgrind/valgrind.h	74;"	d
__VALGRIND_MAJOR__	deps/pmdk/src/common/valgrind/valgrind.h	91;"	d
__VALGRIND_MINOR__	deps/pmdk/src/common/valgrind/valgrind.h	92;"	d
__VEX_INJECT_IR_CODE	deps/pmdk/src/common/valgrind/valgrind.h	852;"	d
__ZMALLOC_H	src/zmalloc.h	32;"	d
__attribute__	deps/pmdk/src/windows/include/platform.h	94;"	d
__bool__	deps/pmdk/src/test/unittest/valgrind.py	/^    def __bool__(self):$/;"	m	class:Valgrind	file:
__bool_true_false_are_defined	deps/jemalloc/include/msvc_compat/C99/stdbool.h	18;"	d
__builtin_constant_p	deps/pmdk/src/windows/include/platform.h	95;"	d
__builtin_unreachable	deps/jemalloc/configure	/^  __builtin_unreachable();$/;"	f
__consume_subscribe_messages	tests/unit/pubsub.tcl	/^    proc __consume_subscribe_messages {client type channels} {$/;"	p
__extension__	deps/pmdk/src/common/valgrind/valgrind.h	6205;"	d
__factories	deps/pmdk/src/tools/pmreorder/operationfactory.py	/^    __factories = {}$/;"	v	class:OperationFactory
__failed_tests	src/testhelp.h	/^int __failed_tests = 0;$/;"	v
__free_hook	deps/jemalloc/src/jemalloc.c	/^JEMALLOC_EXPORT void (*__free_hook)(void *ptr) = je_free;$/;"	v
__func__	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h	56;"	d
__func__	deps/pmdk/src/windows/include/platform.h	80;"	d
__getattr__	deps/pmdk/src/test/unittest/configurator.py	/^    def __getattr__(self, name):$/;"	m	class:_ConfigFromDict	file:
__getattribute__	deps/pmdk/src/test/unittest/context.py	/^    def __getattribute__(self, name):$/;"	m	class:Non	file:
__init__	deps/pmdk/src/test/unittest/basetest.py	/^    def __init__(cls, name, bases, dct):$/;"	m	class:_TestCase
__init__	deps/pmdk/src/test/unittest/basetest.py	/^    def __init__(self, config):$/;"	m	class:BaseTest
__init__	deps/pmdk/src/test/unittest/configurator.py	/^    def __init__(self):$/;"	m	class:Configurator
__init__	deps/pmdk/src/test/unittest/configurator.py	/^    def __init__(self, dict_):$/;"	m	class:_ConfigFromDict
__init__	deps/pmdk/src/test/unittest/context.py	/^        def __init__(self, conf):$/;"	m	class:.Static_Debug
__init__	deps/pmdk/src/test/unittest/context.py	/^        def __init__(self, conf):$/;"	m	class:.Static_Release
__init__	deps/pmdk/src/test/unittest/context.py	/^    def __init__(cls, name, bases, dct):$/;"	m	class:_CtxType
__init__	deps/pmdk/src/test/unittest/context.py	/^    def __init__(self, conf):$/;"	m	class:Debug
__init__	deps/pmdk/src/test/unittest/context.py	/^    def __init__(self, conf):$/;"	m	class:Non
__init__	deps/pmdk/src/test/unittest/context.py	/^    def __init__(self, conf):$/;"	m	class:Nonpmem
__init__	deps/pmdk/src/test/unittest/context.py	/^    def __init__(self, conf):$/;"	m	class:Pmem
__init__	deps/pmdk/src/test/unittest/context.py	/^    def __init__(self, conf):$/;"	m	class:Release
__init__	deps/pmdk/src/test/unittest/context.py	/^    def __init__(self, test, conf, **kwargs):$/;"	m	class:Context
__init__	deps/pmdk/src/test/unittest/context.py	/^    def __init__(self, test, conf, **kwargs):$/;"	m	class:ContextBase
__init__	deps/pmdk/src/test/unittest/futils.py	/^    def __init__(self, config):$/;"	m	class:Message
__init__	deps/pmdk/src/test/unittest/futils.py	/^    def __init__(self, message):$/;"	m	class:Fail
__init__	deps/pmdk/src/test/unittest/futils.py	/^    def __init__(self, message):$/;"	m	class:Skip
__init__	deps/pmdk/src/test/unittest/poolset.py	/^    def __init__(self, ctx, path):$/;"	m	class:DDax
__init__	deps/pmdk/src/test/unittest/poolset.py	/^    def __init__(self, path, ctx):$/;"	m	class:_Poolset
__init__	deps/pmdk/src/test/unittest/poolset.py	/^    def __init__(self, path, size):$/;"	m	class:File
__init__	deps/pmdk/src/test/unittest/poolset.py	/^    def __init__(self, path, size):$/;"	m	class:_Part
__init__	deps/pmdk/src/test/unittest/poolset.py	/^    def __init__(self, path, size, mode=None):$/;"	m	class:Dir
__init__	deps/pmdk/src/test/unittest/valgrind.py	/^    def __init__(self, tool, cwd, testnum, memcheck_check_leaks=True):$/;"	m	class:Valgrind
__init__	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def __init__(self, checker):$/;"	m	class:BinaryOutputHandler
__init__	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def __init__(self, file_name, map_base, size, checker):$/;"	m	class:BinaryFile
__init__	deps/pmdk/src/tools/pmreorder/consistencycheckwrap.py	/^    def __init__(self, bin_path, bin_args):$/;"	m	class:ProgChecker
__init__	deps/pmdk/src/tools/pmreorder/consistencycheckwrap.py	/^    def __init__(self, library_name, func_name):$/;"	m	class:LibChecker
__init__	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def __init__(self, name="pmreorder", **kwargs):$/;"	m	class:DefaultFileLogger
__init__	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    def __init__(self, values):$/;"	m	class:Flush
__init__	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    def __init__(self, values):$/;"	m	class:Register_file
__init__	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    def __init__(self, values):$/;"	m	class:Store
__init__	deps/pmdk/src/tools/pmreorder/opscontext.py	/^    def __init__(self, log_file, checker, logger, arg_engine, markers):$/;"	m	class:OpsContext
__init__	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def __init__(self):$/;"	m	class:AccumulativeReorderEngine
__init__	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def __init__(self):$/;"	m	class:AccumulativeReverseReorderEngine
__init__	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def __init__(self):$/;"	m	class:FullReorderEngine
__init__	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def __init__(self):$/;"	m	class:NoCheckerEngine
__init__	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def __init__(self):$/;"	m	class:NoReorderEngine
__init__	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def __init__(self, func, **kwargs):$/;"	m	class:FilterPartialReorderEngine
__init__	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def __init__(self, max_seq=3):$/;"	m	class:RandomPartialReorderEngine
__init__	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def __init__(self, start, stop, step=1):$/;"	m	class:SlicePartialReorderEngine
__init__	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def __init__(self, context):$/;"	m	class:CollectingState
__init__	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def __init__(self, context):$/;"	m	class:InitState
__init__	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def __init__(self, context):$/;"	m	class:State
__init__	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def __init__(self, in_ops_list, context):$/;"	m	class:ReplayingState
__init__	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def __init__(self, init_state):$/;"	m	class:StateMachine
__init__	deps/pmdk/src/tools/pmreorder/utils.py	/^    def __init__(self, trace=None):$/;"	m	class:StackTrace
__iter__	deps/pmdk/src/test/unittest/context.py	/^    def __iter__(cls):$/;"	m	class:_CtxType	file:
__malloc_hook	deps/jemalloc/src/jemalloc.c	/^JEMALLOC_EXPORT void *(*__malloc_hook)(size_t size) = je_malloc;$/;"	v
__memalign_hook	deps/jemalloc/src/jemalloc.c	/^JEMALLOC_EXPORT void *(*__memalign_hook)(size_t alignment, size_t size) =$/;"	v
__quicklistCompress	src/quicklist.c	/^REDIS_STATIC void __quicklistCompress(const quicklist *quicklist,$/;"	f
__quicklistCompressNode	src/quicklist.c	/^REDIS_STATIC int __quicklistCompressNode(quicklistNode *node) {$/;"	f
__quicklistDecompressNode	src/quicklist.c	/^REDIS_STATIC int __quicklistDecompressNode(quicklistNode *node) {$/;"	f
__quicklistDelNode	src/quicklist.c	/^REDIS_STATIC void __quicklistDelNode(quicklist *quicklist,$/;"	f
__quicklistInsertNode	src/quicklist.c	/^REDIS_STATIC void __quicklistInsertNode(quicklist *quicklist,$/;"	f
__realloc_hook	deps/jemalloc/src/jemalloc.c	/^JEMALLOC_EXPORT void *(*__realloc_hook)(void *ptr, size_t size) = je_realloc;$/;"	v
__redisAppendCommand	deps/hiredis/hiredis.c	/^int __redisAppendCommand(redisContext *c, const char *cmd, size_t len) {$/;"	f
__redisAsyncCommand	deps/hiredis/async.c	/^static int __redisAsyncCommand(redisAsyncContext *ac, redisCallbackFn *fn, void *privdata, char *cmd, size_t len) {$/;"	f	file:
__redisAsyncCopyError	deps/hiredis/async.c	/^static void __redisAsyncCopyError(redisAsyncContext *ac) {$/;"	f	file:
__redisAsyncDisconnect	deps/hiredis/async.c	/^static void __redisAsyncDisconnect(redisAsyncContext *ac) {$/;"	f	file:
__redisAsyncFree	deps/hiredis/async.c	/^static void __redisAsyncFree(redisAsyncContext *ac) {$/;"	f	file:
__redisAsyncHandleConnect	deps/hiredis/async.c	/^static int __redisAsyncHandleConnect(redisAsyncContext *ac) {$/;"	f	file:
__redisBlockForReply	deps/hiredis/hiredis.c	/^static void *__redisBlockForReply(redisContext *c) {$/;"	f	file:
__redisGetSubscribeCallback	deps/hiredis/async.c	/^static int __redisGetSubscribeCallback(redisAsyncContext *ac, redisReply *reply, redisCallback *dstcb) {$/;"	f	file:
__redisPushCallback	deps/hiredis/async.c	/^static int __redisPushCallback(redisCallbackList *list, redisCallback *source) {$/;"	f	file:
__redisReaderSetError	deps/hiredis/hiredis.c	/^static void __redisReaderSetError(redisReader *r, int type, const char *str) {$/;"	f	file:
__redisReaderSetErrorOOM	deps/hiredis/hiredis.c	/^static void __redisReaderSetErrorOOM(redisReader *r) {$/;"	f	file:
__redisReaderSetErrorProtocolByte	deps/hiredis/hiredis.c	/^static void __redisReaderSetErrorProtocolByte(redisReader *r, char byte) {$/;"	f	file:
__redisRunCallback	deps/hiredis/async.c	/^static void __redisRunCallback(redisAsyncContext *ac, redisCallback *cb, redisReply *reply) {$/;"	f	file:
__redisSetError	deps/hiredis/hiredis.c	/^void __redisSetError(redisContext *c, int type, const char *str) {$/;"	f
__redisSetErrorFromErrno	deps/hiredis/net.c	/^static void __redisSetErrorFromErrno(redisContext *c, int type, const char *prefix) {$/;"	f	file:
__redisShiftCallback	deps/hiredis/async.c	/^static int __redisShiftCallback(redisCallbackList *list, redisCallback *target) {$/;"	f	file:
__repr__	deps/pmdk/src/test/unittest/basetest.py	/^    def __repr__(self):$/;"	m	class:BaseTest	file:
__repr__	deps/pmdk/src/test/unittest/context.py	/^    def __repr__(cls):$/;"	m	class:_CtxType	file:
__str	src/zmalloc.h	36;"	d
__str__	deps/pmdk/src/test/unittest/context.py	/^    def __str__(cls):$/;"	m	class:_CtxType	file:
__str__	deps/pmdk/src/test/unittest/futils.py	/^    def __str__(self):$/;"	m	class:Fail	file:
__str__	deps/pmdk/src/test/unittest/futils.py	/^    def __str__(self):$/;"	m	class:Skip	file:
__str__	deps/pmdk/src/test/unittest/poolset.py	/^    def __str__(self):$/;"	m	class:_Part	file:
__str__	deps/pmdk/src/test/unittest/valgrind.py	/^    def __str__(self):$/;"	m	class:Valgrind	file:
__str__	deps/pmdk/src/test/unittest/valgrind.py	/^    def __str__(self):$/;"	m	class:_Tool	file:
__str__	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def __str__(self):$/;"	m	class:BinaryFile	file:
__str__	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    def __str__(self):$/;"	m	class:Store	file:
__str__	deps/pmdk/src/tools/pmreorder/utils.py	/^    def __str__(self):$/;"	m	class:StackTrace	file:
__suffix	deps/pmdk/src/tools/pmreorder/operationfactory.py	/^    __suffix = ['.BEGIN', '.END']$/;"	v	class:OperationFactory
__test_num	src/testhelp.h	/^int __test_num = 0;$/;"	v
__thread	deps/pmdk/src/windows/include/platform.h	79;"	d
__typeof__	deps/pmdk/src/include/pmemcompat.h	88;"	d
__typeof__	deps/pmdk/src/test/obj_list/obj_list.c	50;"	d	file:
__wrap_malloc	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^__wrap_malloc(size_t size)$/;"	f	file:
__xstr	src/zmalloc.h	35;"	d
__ziplistCascadeUpdate	src/ziplist.c	/^unsigned char *__ziplistCascadeUpdate(unsigned char *zl, unsigned char *p) {$/;"	f
__ziplistDelete	src/ziplist.c	/^unsigned char *__ziplistDelete(unsigned char *zl, unsigned char *p, unsigned int num) {$/;"	f
__ziplistInsert	src/ziplist.c	/^unsigned char *__ziplistInsert(unsigned char *zl, unsigned char *p, unsigned char *s, unsigned int slen) {$/;"	f
_addReplyObjectToList	src/networking.c	/^void _addReplyObjectToList(client *c, robj *o) {$/;"	f
_addReplySdsToList	src/networking.c	/^void _addReplySdsToList(client *c, sds s) {$/;"	f
_addReplyStringToList	src/networking.c	/^void _addReplyStringToList(client *c, const char *s, size_t len) {$/;"	f
_addReplyToBuffer	src/networking.c	/^int _addReplyToBuffer(client *c, const char *s, size_t len) {$/;"	f
_anetTcpServer	src/anet.c	/^static int _anetTcpServer(char *err, int port, char *bindaddr, int af, int backlog)$/;"	f	file:
_art_leaf	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_leaf {$/;"	s
_art_leaf	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_leaf {$/;"	s
_art_node	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_node {$/;"	s
_art_node	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_node {$/;"	s
_art_node16	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_node16 {$/;"	s
_art_node16	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_node16 {$/;"	s
_art_node256	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_node256 {$/;"	s
_art_node256	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_node256 {$/;"	s
_art_node4	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_node4 {$/;"	s
_art_node4	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_node4 {$/;"	s
_art_node48	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_node48 {$/;"	s
_art_node48	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_node48 {$/;"	s
_art_node_u	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_node_u {$/;"	s
_art_node_u	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_node_u {$/;"	s
_art_tree_root	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_tree_root {$/;"	s
_assert	src/intset.c	/^static void _assert(char *estr, char *file, int line) {$/;"	f	file:
_buf	src/t_zset.c	/^    unsigned char _buf[32]; \/* Private buffer. *\/$/;"	m	struct:__anon158	file:
_cb_data	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^typedef struct _cb_data {$/;"	s
_check_pools_size	deps/pmdk/src/test/unittest/poolset.py	/^    def _check_pools_size(self):$/;"	m	class:_Poolset
_client	src/redis-benchmark.c	/^typedef struct _client {$/;"	s	file:
_convert_to_usable_types	deps/pmdk/src/test/unittest/configurator.py	/^    def _convert_to_usable_types(self, config):$/;"	m	class:Configurator
_ctx_attrs_init	deps/pmdk/src/test/unittest/basetest.py	/^    def _ctx_attrs_init(self):$/;"	m	class:BaseTest
_dictClear	deps/hiredis/dict.c	/^static int _dictClear(dict *ht) {$/;"	f	file:
_dictClear	src/dict.c	/^int _dictClear(dict *d, dictht *ht, void(callback)(void *)) {$/;"	f
_dictExpandIfNeeded	deps/hiredis/dict.c	/^static int _dictExpandIfNeeded(dict *ht) {$/;"	f	file:
_dictExpandIfNeeded	src/dict.c	/^static int _dictExpandIfNeeded(dict *d)$/;"	f	file:
_dictGetStatsHt	src/dict.c	/^size_t _dictGetStatsHt(char *buf, size_t bufsize, dictht *ht, int tableid) {$/;"	f
_dictInit	deps/hiredis/dict.c	/^static int _dictInit(dict *ht, dictType *type, void *privDataPtr) {$/;"	f	file:
_dictInit	src/dict.c	/^int _dictInit(dict *d, dictType *type,$/;"	f
_dictKeyIndex	deps/hiredis/dict.c	/^static int _dictKeyIndex(dict *ht, const void *key) {$/;"	f	file:
_dictKeyIndex	src/dict.c	/^static int _dictKeyIndex(dict *d, const void *key)$/;"	f	file:
_dictNextPower	deps/hiredis/dict.c	/^static unsigned long _dictNextPower(unsigned long size) {$/;"	f	file:
_dictNextPower	src/dict.c	/^static unsigned long _dictNextPower(unsigned long size)$/;"	f	file:
_dictRehashStep	src/dict.c	/^static void _dictRehashStep(dict *d) {$/;"	f	file:
_dictReset	deps/hiredis/dict.c	/^static void _dictReset(dict *ht) {$/;"	f	file:
_dictReset	src/dict.c	/^static void _dictReset(dictht *ht)$/;"	f	file:
_execute	deps/pmdk/src/test/unittest/basetest.py	/^    def _execute(self):$/;"	m	class:BaseTest
_file	deps/pmdk/src/common/file.h	/^	char *_file;$/;"	m	struct:dir_handle
_flt_Malloc	deps/pmdk/src/common/alloc.c	/^_flt_Malloc(size_t size, const char *func)$/;"	f
_flt_Realloc	deps/pmdk/src/common/alloc.c	/^_flt_Realloc(void *ptr, size_t size, const char *func)$/;"	f
_format	deps/pmdk/src/test/unittest/poolset.py	/^    def _format(number):$/;"	m	class:_Part
_get_args_config	deps/pmdk/src/test/unittest/configurator.py	/^    def _get_args_config(self):$/;"	m	class:Configurator
_get_required_size	deps/pmdk/src/test/unittest/poolset.py	/^    def _get_required_size(self):$/;"	m	class:_Poolset
_get_utenv	deps/pmdk/src/test/unittest/basetest.py	/^    def _get_utenv(self):$/;"	m	class:BaseTest
_get_valgrind_exe	deps/pmdk/src/test/unittest/valgrind.py	/^    def _get_valgrind_exe(self):$/;"	m	class:Valgrind
_get_value	deps/pmdk/src/libpmemobj/sync.c	/^_get_value(uint64_t pop_runid, volatile uint64_t *runid, void *value, void *arg,$/;"	f	file:
_get_version	deps/pmdk/src/test/unittest/valgrind.py	/^    def _get_version(self):$/;"	m	class:Valgrind
_import_testfiles	deps/pmdk/src/test/RUNTESTS.py	/^def _import_testfiles():$/;"	f
_init_argparser	deps/pmdk/src/test/unittest/configurator.py	/^    def _init_argparser(self):$/;"	m	class:Configurator
_init_context	deps/pmdk/src/test/unittest/basetest.py	/^    def _init_context(self, **ctx_params):$/;"	m	class:BaseTest
_init_init_lock	deps/jemalloc/src/jemalloc.c	/^_init_init_lock(void)$/;"	f	file:
_intsetGet	src/intset.c	/^static int64_t _intsetGet(intset *is, int pos) {$/;"	f	file:
_intsetGetEncoded	src/intset.c	/^static int64_t _intsetGetEncoded(intset *is, int pos, uint8_t enc) {$/;"	f	file:
_intsetSet	src/intset.c	/^static void _intsetSet(intset *is, int pos, int64_t value) {$/;"	f	file:
_intsetValueEncoding	src/intset.c	/^static uint8_t _intsetValueEncoding(int64_t v) {$/;"	f	file:
_iterset	src/t_zset.c	/^        union _iterset {$/;"	u	union:__anon152::__anon153	file:
_iterzset	src/t_zset.c	/^        union _iterzset {$/;"	u	union:__anon152::__anon153	file:
_itrprintr	src/quicklist.c	/^static int _itrprintr(quicklist *ql, int print, int forward) {$/;"	f	file:
_malloc_thread_cleanup	deps/jemalloc/src/tsd.c	/^_malloc_thread_cleanup(void)$/;"	f
_mm_clflushopt	deps/pmdk/src/test/util_cpuid/util_cpuid.c	49;"	d	file:
_mm_clwb	deps/pmdk/src/test/util_cpuid/util_cpuid.c	52;"	d	file:
_mm_pause	deps/jemalloc/configure	/^_mm_pause(); return 0;$/;"	f
_os_exclude	deps/pmdk/src/test/unittest/utils.py	/^def _os_exclude(tc, os_name):$/;"	f
_os_only	deps/pmdk/src/test/unittest/utils.py	/^def _os_only(tc, os_name):$/;"	f
_out_indent	deps/pmdk/src/tools/pmempool/output.c	/^_out_indent(void)$/;"	f	file:
_out_prefix	deps/pmdk/src/tools/pmempool/output.c	/^_out_prefix(void)$/;"	f	file:
_pobj_cache_invalidate	deps/pmdk/src/libpmemobj/obj.c	/^int _pobj_cache_invalidate;$/;"	v
_pobj_cached_pool	deps/pmdk/src/libpmemobj/obj.c	/^__thread struct _pobj_pcache _pobj_cached_pool;$/;"	v	typeref:struct:_pobj_pcache
_pobj_debug_notice	deps/pmdk/src/libpmemobj/obj.c	/^_pobj_debug_notice(const char *api_name, const char *file, int line)$/;"	f
_pobj_pcache	deps/pmdk/src/include/libpmemobj/base.h	/^extern __thread struct _pobj_pcache {$/;"	s
_pobj_pcache	deps/pmdk/src/libpmemobj/obj.c	/^struct _pobj_pcache {$/;"	s	file:
_pobj_validate_cb_sig	deps/pmdk/src/include/libpmemobj/tx.h	/^_pobj_validate_cb_sig(pmemobj_tx_callback cb)$/;"	f
_pqsort	src/pqsort.c	/^_pqsort(void *a, size_t n, size_t es,$/;"	f	file:
_print_log_files	deps/pmdk/src/test/unittest/basetest.py	/^    def _print_log_files(self, ctx):$/;"	m	class:BaseTest
_process	deps/pmdk/src/test/unittest/poolset.py	/^    def _process(self, ctx):$/;"	m	class:Dir
_process	deps/pmdk/src/test/unittest/poolset.py	/^    def _process(self, ctx):$/;"	m	class:File
_process	deps/pmdk/src/test/unittest/poolset.py	/^    def _process(self, ctx):$/;"	m	class:_Part
_ql_verify	src/quicklist.c	/^static int _ql_verify(quicklist *ql, uint32_t len, uint32_t count,$/;"	f	file:
_quicklistInsert	src/quicklist.c	/^REDIS_STATIC void _quicklistInsert(quicklist *quicklist, quicklistEntry *entry,$/;"	f
_quicklistInsertNodeAfter	src/quicklist.c	/^REDIS_STATIC void _quicklistInsertNodeAfter(quicklist *quicklist,$/;"	f
_quicklistInsertNodeBefore	src/quicklist.c	/^REDIS_STATIC void _quicklistInsertNodeBefore(quicklist *quicklist,$/;"	f
_quicklistMergeNodes	src/quicklist.c	/^REDIS_STATIC void _quicklistMergeNodes(quicklist *quicklist,$/;"	f
_quicklistNodeAllowInsert	src/quicklist.c	/^REDIS_STATIC int _quicklistNodeAllowInsert(const quicklistNode *node,$/;"	f
_quicklistNodeAllowMerge	src/quicklist.c	/^REDIS_STATIC int _quicklistNodeAllowMerge(const quicklistNode *a,$/;"	f
_quicklistNodeSizeMeetsOptimizationRequirement	src/quicklist.c	/^_quicklistNodeSizeMeetsOptimizationRequirement(const size_t sz,$/;"	f
_quicklistSaver	src/quicklist.c	/^REDIS_STATIC void *_quicklistSaver(unsigned char *data, unsigned int sz) {$/;"	f
_quicklistSplitNode	src/quicklist.c	/^REDIS_STATIC quicklistNode *_quicklistSplitNode(quicklistNode *node, int offset,$/;"	f
_quicklistZiplistMerge	src/quicklist.c	/^REDIS_STATIC quicklistNode *_quicklistZiplistMerge(quicklist *quicklist,$/;"	f
_redisAssert	utils/hashtable/rehashing.c	/^void _redisAssert(char *x, char *y, int l) {$/;"	f
_redisContextConnectTcp	deps/hiredis/net.c	/^static int _redisContextConnectTcp(redisContext *c, const char *addr, int port,$/;"	f	file:
_redisSortObject	src/server.h	/^typedef struct _redisSortObject {$/;"	s
_redisSortOperation	src/server.h	/^typedef struct _redisSortOperation {$/;"	s
_rfds	src/ae_select.c	/^    fd_set _rfds, _wfds;$/;"	m	struct:aeApiState	file:
_rio	src/rio.h	/^struct _rio {$/;"	s
_run_cli	tests/integration/redis-cli.tcl	/^    proc _run_cli {opts args} {$/;"	p
_run_match	deps/pmdk/src/test/unittest/basetest.py	/^    def _run_match(self):$/;"	m	class:BaseTest
_run_tests	deps/pmdk/src/test/RUNTESTS.py	/^def _run_tests(config):$/;"	f
_serverAssert	src/debug.c	/^void _serverAssert(char *estr, char *file, int line) {$/;"	f
_serverAssertPrintClientInfo	src/debug.c	/^void _serverAssertPrintClientInfo(client *c) {$/;"	f
_serverAssertPrintObject	src/debug.c	/^void _serverAssertPrintObject(robj *o) {$/;"	f
_serverAssertWithInfo	src/debug.c	/^void _serverAssertWithInfo(client *c, robj *o, char *estr, char *file, int line) {$/;"	f
_serverPanic	src/debug.c	/^void _serverPanic(char *msg, char *file, int line) {$/;"	f
_str	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^_str(const char *str)$/;"	f	file:
_str2ctx	deps/pmdk/src/test/unittest/configurator.py	/^def _str2ctx(config):$/;"	f
_str2list	deps/pmdk/src/test/unittest/configurator.py	/^def _str2list(config):$/;"	f
_str2time	deps/pmdk/src/test/unittest/configurator.py	/^def _str2time(config):$/;"	f
_test_passed	deps/pmdk/src/test/unittest/basetest.py	/^    def _test_passed(self):$/;"	m	class:BaseTest
_tls_callback	deps/jemalloc/src/tsd.c	/^_tls_callback(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)$/;"	f	file:
_toid_art_leaf_toid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^union _toid_art_leaf_toid {$/;"	u
_toid_art_leaf_toid_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^typedef uint8_t _toid_art_leaf_toid_type_num[8];$/;"	t
_toid_art_node16_toid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^union _toid_art_node16_toid {$/;"	u
_toid_art_node16_toid_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^typedef uint8_t _toid_art_node16_toid_type_num[5];$/;"	t
_toid_art_node256_toid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^union _toid_art_node256_toid {$/;"	u
_toid_art_node256_toid_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^typedef uint8_t _toid_art_node256_toid_type_num[7];$/;"	t
_toid_art_node48_toid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^union _toid_art_node48_toid {$/;"	u
_toid_art_node48_toid_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^typedef uint8_t _toid_art_node48_toid_type_num[6];$/;"	t
_toid_art_node4_toid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^union _toid_art_node4_toid {$/;"	u
_toid_art_node4_toid_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^typedef uint8_t _toid_art_node4_toid_type_num[4];$/;"	t
_toid_art_node_toid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^union _toid_art_node_toid {$/;"	u
_toid_art_node_toid_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^typedef uint8_t _toid_art_node_toid_type_num[3];$/;"	t
_toid_art_node_u_toid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^union _toid_art_node_u_toid {$/;"	u
_toid_art_node_u_toid_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^typedef uint8_t _toid_art_node_u_toid_type_num[2];$/;"	t
_toid_enum	deps/pmdk/src/include/libpmemobj/types.h	97;"	d
_toid_struct	deps/pmdk/src/include/libpmemobj/types.h	95;"	d
_toid_union	deps/pmdk/src/include/libpmemobj/types.h	96;"	d
_toid_var_string_toid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^union _toid_var_string_toid {$/;"	u
_toid_var_string_toid_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^typedef uint8_t _toid_var_string_toid_type_num[9];$/;"	t
_type	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_leaf *_type;$/;"	m	union:_toid_art_leaf_toid
_type	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_node *_type;$/;"	m	union:_toid_art_node_toid
_type	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_node16 *_type;$/;"	m	union:_toid_art_node16_toid
_type	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_node256 *_type;$/;"	m	union:_toid_art_node256_toid
_type	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_node4 *_type;$/;"	m	union:_toid_art_node4_toid
_type	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_node48 *_type;$/;"	m	union:_toid_art_node48_toid
_type	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_node_u *_type;$/;"	m	union:_toid_art_node_u_toid
_type	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	struct art_tree_root *_type;$/;"	m	union:art_tree_root_toid	typeref:struct:art_tree_root_toid::art_tree_root
_type	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	var_string *_type;$/;"	m	union:_toid_var_string_toid
_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	_toid_art_leaf_toid_type_num *_type_num;$/;"	m	union:_toid_art_leaf_toid
_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	_toid_art_node16_toid_type_num *_type_num;$/;"	m	union:_toid_art_node16_toid
_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	_toid_art_node256_toid_type_num *_type_num;$/;"	m	union:_toid_art_node256_toid
_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	_toid_art_node48_toid_type_num *_type_num;$/;"	m	union:_toid_art_node48_toid
_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	_toid_art_node4_toid_type_num *_type_num;$/;"	m	union:_toid_art_node4_toid
_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	_toid_art_node_toid_type_num *_type_num;$/;"	m	union:_toid_art_node_toid
_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	_toid_art_node_u_toid_type_num *_type_num;$/;"	m	union:_toid_art_node_u_toid
_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	_toid_var_string_toid_type_num *_type_num;$/;"	m	union:_toid_var_string_toid
_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_tree_root_toid_type_num *_type_num;$/;"	m	union:art_tree_root_toid
_valgrind_init	deps/pmdk/src/test/unittest/basetest.py	/^    def _valgrind_init(self):$/;"	m	class:BaseTest
_var_string	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _var_string {$/;"	s
_var_string	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _var_string {$/;"	s
_wfds	src/ae_select.c	/^    fd_set _rfds, _wfds;$/;"	m	struct:aeApiState	file:
a	deps/lua/etc/Makefile	/^	-.\/a.out -e'a=1'$/;"	m
a	deps/pmdk/src/test/obj_defrag/obj_defrag.c	/^	PMEMoid a;$/;"	m	struct:test_object	file:
a	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^	int a;$/;"	m	struct:foo	file:
a	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^	int a;$/;"	m	struct:test_obj	file:
a	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^	int a;$/;"	m	struct:transaction_data	file:
a	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^	int a;$/;"	m	struct:fields	file:
a	deps/pmdk/src/test/util_ctl/util_ctl.c	/^	int a;$/;"	m	struct:complex_arg	file:
a	src/rand.c	/^static uint32_t x[3] = { X0, X1, X2 }, a[3] = { A0, A1, A2 }, c = C;$/;"	v	file:
a0	deps/jemalloc/src/jemalloc.c	/^static arena_t		*a0; \/* arenas[0]; read-only after initialization. *\/$/;"	v	file:
a0dalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	1;"	d
a0dalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	1;"	d
a0dalloc	deps/jemalloc/src/jemalloc.c	/^a0dalloc(void *ptr)$/;"	f
a0get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	2;"	d
a0get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	2;"	d
a0get	deps/jemalloc/src/jemalloc.c	/^a0get(void)$/;"	f
a0ialloc	deps/jemalloc/src/jemalloc.c	/^a0ialloc(size_t size, bool zero, bool is_metadata)$/;"	f	file:
a0idalloc	deps/jemalloc/src/jemalloc.c	/^a0idalloc(void *ptr, bool is_metadata)$/;"	f	file:
a0malloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	3;"	d
a0malloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	3;"	d
a0malloc	deps/jemalloc/src/jemalloc.c	/^a0malloc(size_t size)$/;"	f
abAppend	deps/linenoise/linenoise.c	/^static void abAppend(struct abuf *ab, const char *s, int len) {$/;"	f	file:
abFree	deps/linenoise/linenoise.c	/^static void abFree(struct abuf *ab) {$/;"	f	file:
abInit	deps/linenoise/linenoise.c	/^static void abInit(struct abuf *ab) {$/;"	f	file:
abort_sentinel_test	tests/instances.tcl	/^proc abort_sentinel_test msg {$/;"	p
about	src/cluster.h	/^        clusterMsgDataFail about;$/;"	m	struct:clusterMsgData::__anon174
abs_index	deps/lua/src/lauxlib.c	32;"	d	file:
abs_objroot	deps/jemalloc/Makefile	/^abs_objroot := \/home\/nvm-admin\/pavise\/redis\/deps\/jemalloc\/$/;"	m
abs_srcroot	deps/jemalloc/Makefile	/^abs_srcroot := \/home\/nvm-admin\/pavise\/redis\/deps\/jemalloc\/$/;"	m
abuf	deps/linenoise/linenoise.c	/^struct abuf {$/;"	s	file:
ac_fn_c_check_func	deps/jemalloc/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	deps/jemalloc/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	deps/jemalloc/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	deps/jemalloc/configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_compute_int	deps/jemalloc/configure	/^ac_fn_c_compute_int ()$/;"	f
ac_fn_c_try_compile	deps/jemalloc/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	deps/jemalloc/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	deps/jemalloc/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	deps/jemalloc/configure	/^ac_fn_c_try_run ()$/;"	f
acceptCommonHandler	src/networking.c	/^static void acceptCommonHandler(int fd, int flags, char *ip) {$/;"	f	file:
acceptTcpHandler	src/networking.c	/^void acceptTcpHandler(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
acceptUnixHandler	src/networking.c	/^void acceptUnixHandler(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
accept_test_clients	tests/test_helper.tcl	/^proc accept_test_clients {fd addr port} {$/;"	p
accumbytes	deps/jemalloc/include/jemalloc/internal/prof.h	/^	uint64_t	accumbytes;$/;"	m	struct:prof_cnt_s
accumobjs	deps/jemalloc/include/jemalloc/internal/prof.h	/^	uint64_t	accumobjs;$/;"	m	struct:prof_cnt_s
achunks	deps/jemalloc/include/jemalloc/internal/arena.h	/^	ql_head(extent_node_t)	achunks;$/;"	m	struct:arena_s
aclass	deps/pmdk/src/libpmemobj/bucket.h	/^	struct alloc_class *aclass;$/;"	m	struct:bucket	typeref:struct:bucket::alloc_class
aclasses	deps/pmdk/src/libpmemobj/alloc_class.c	/^	struct alloc_class *aclasses[MAX_ALLOCATION_CLASSES];$/;"	m	struct:alloc_class_collection	typeref:struct:alloc_class_collection::alloc_class	file:
act_ping_time	src/sentinel.c	/^    mstime_t act_ping_time;   \/* Time at which the last pending ping (no pong$/;"	m	struct:instanceLink	file:
action	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^struct action {$/;"	s	file:
action_cancel_worker	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^action_cancel_worker(void *arg)$/;"	f	file:
action_funcs	deps/pmdk/src/libpmemobj/palloc.c	/^} action_funcs[POBJ_MAX_ACTION_TYPE] = {$/;"	v	typeref:struct:__anon130	file:
action_mix_worker	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^action_mix_worker(void *arg)$/;"	f	file:
action_publish_worker	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^action_publish_worker(void *arg)$/;"	f	file:
actions	deps/pmdk/src/libpmemobj/tx.c	/^	VEC(, struct pobj_action) actions;$/;"	m	struct:tx	file:
actions	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^	struct action actions[MAX_THREADS][MAX_OPS_PER_THREAD];$/;"	m	struct:root	typeref:struct:root::action	file:
actions_clear	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^actions_clear(PMEMobjpool *pop, struct root *r)$/;"	f	file:
active	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	size_t			active;$/;"	m	struct:ctl_stats_s
active	deps/jemalloc/include/jemalloc/internal/prof.h	/^	bool			active;$/;"	m	struct:prof_tdata_s
active	src/scripting.c	/^    int active; \/* Are we debugging EVAL right now? *\/$/;"	m	struct:ldbState	file:
activeExpireCycle	src/server.c	/^void activeExpireCycle(int type) {$/;"	f
activeExpireCycleTryExpire	src/server.c	/^int activeExpireCycleTryExpire(redisDb *db, dictEntry *de, long long now) {$/;"	f
active_expire_enabled	src/server.h	/^    int active_expire_enabled;      \/* Can be disabled for testing purposes. *\/$/;"	m	struct:redisServer
active_memory_block	deps/pmdk/src/libpmemobj/bucket.h	/^	struct memory_block_reserved *active_memory_block;$/;"	m	struct:bucket	typeref:struct:bucket::memory_block_reserved
activerehashing	src/server.h	/^    int activerehashing;        \/* Incremental rehash in serverCron() *\/$/;"	m	struct:redisServer
actv	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^	struct pobj_action *actv;$/;"	m	struct:add_entry	typeref:struct:add_entry::pobj_action	file:
actv_cnt	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^	size_t actv_cnt;$/;"	m	struct:add_entry	file:
actvar	deps/lua/src/lparser.h	/^  unsigned short actvar[LUAI_MAXVARS];  \/* declared-variable stack *\/$/;"	m	struct:FuncState
ad_link	deps/jemalloc/include/jemalloc/internal/extent.h	/^	rb_node(extent_node_t)	ad_link;$/;"	m	struct:extent_node_s
addDeferredMultiBulkLength	src/networking.c	/^void *addDeferredMultiBulkLength(client *c) {$/;"	f
addHashFieldToReply	src/t_hash.c	/^static void addHashFieldToReply(client *c, robj *o, robj *field) {$/;"	f	file:
addHashIteratorCursorToReply	src/t_hash.c	/^static void addHashIteratorCursorToReply(client *c, hashTypeIterator *hi, int what) {$/;"	f	file:
addRead	deps/hiredis/async.h	/^        void (*addRead)(void *privdata);$/;"	m	struct:redisAsyncContext::__anon147
addReply	src/networking.c	/^void addReply(client *c, robj *obj) {$/;"	f
addReplyBulk	src/networking.c	/^void addReplyBulk(client *c, robj *obj) {$/;"	f
addReplyBulkCBuffer	src/networking.c	/^void addReplyBulkCBuffer(client *c, const void *p, size_t len) {$/;"	f
addReplyBulkCString	src/networking.c	/^void addReplyBulkCString(client *c, const char *s) {$/;"	f
addReplyBulkLen	src/networking.c	/^void addReplyBulkLen(client *c, robj *obj) {$/;"	f
addReplyBulkLongLong	src/networking.c	/^void addReplyBulkLongLong(client *c, long long ll) {$/;"	f
addReplyBulkSds	src/networking.c	/^void addReplyBulkSds(client *c, sds s)  {$/;"	f
addReplyCommand	src/server.c	/^void addReplyCommand(client *c, struct redisCommand *cmd) {$/;"	f
addReplyCommandFlag	src/server.c	/^int addReplyCommandFlag(client *c, struct redisCommand *cmd, int f, char *reply) {$/;"	f
addReplyDictOfRedisInstances	src/sentinel.c	/^void addReplyDictOfRedisInstances(client *c, dict *instances) {$/;"	f
addReplyDouble	src/networking.c	/^void addReplyDouble(client *c, double d) {$/;"	f
addReplyDoubleDistance	src/geo.c	/^void addReplyDoubleDistance(client *c, double d) {$/;"	f
addReplyError	src/networking.c	/^void addReplyError(client *c, const char *err) {$/;"	f
addReplyErrorFormat	src/networking.c	/^void addReplyErrorFormat(client *c, const char *fmt, ...) {$/;"	f
addReplyErrorLength	src/networking.c	/^void addReplyErrorLength(client *c, const char *s, size_t len) {$/;"	f
addReplyHumanLongDouble	src/networking.c	/^void addReplyHumanLongDouble(client *c, long double d) {$/;"	f
addReplyLongLong	src/networking.c	/^void addReplyLongLong(client *c, long long ll) {$/;"	f
addReplyLongLongWithPrefix	src/networking.c	/^void addReplyLongLongWithPrefix(client *c, long long ll, char prefix) {$/;"	f
addReplyMultiBulkLen	src/networking.c	/^void addReplyMultiBulkLen(client *c, long length) {$/;"	f
addReplyReplicationBacklog	src/replication.c	/^long long addReplyReplicationBacklog(client *c, long long offset) {$/;"	f
addReplySds	src/networking.c	/^void addReplySds(client *c, sds s) {$/;"	f
addReplySentinelRedisInstance	src/sentinel.c	/^void addReplySentinelRedisInstance(client *c, sentinelRedisInstance *ri) {$/;"	f
addReplyStatus	src/networking.c	/^void addReplyStatus(client *c, const char *status) {$/;"	f
addReplyStatusFormat	src/networking.c	/^void addReplyStatusFormat(client *c, const char *fmt, ...) {$/;"	f
addReplyStatusLength	src/networking.c	/^void addReplyStatusLength(client *c, const char *s, size_t len) {$/;"	f
addReplyString	src/networking.c	/^void addReplyString(client *c, const char *s, size_t len) {$/;"	f
addWrite	deps/hiredis/async.h	/^        void (*addWrite)(void *privdata);$/;"	m	struct:redisAsyncContext::__anon147
add_child	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^add_child(PMEMobjpool *pop, TOID(art_node_u) n, TOID(art_node_u) *ref,$/;"	f	file:
add_child16	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^add_child16(PMEMobjpool *pop, TOID(art_node16) n, TOID(art_node_u)*ref,$/;"	f	file:
add_child256	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^add_child256(PMEMobjpool *pop, TOID(art_node256) n, TOID(art_node_u) *ref,$/;"	f	file:
add_child4	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^add_child4(PMEMobjpool *pop, TOID(art_node4) n, TOID(art_node_u) *ref,$/;"	f	file:
add_child48	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^add_child48(PMEMobjpool *pop, TOID(art_node48) n, TOID(art_node_u) *ref,$/;"	f	file:
add_elements	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^add_elements(struct ds_context *ctx)$/;"	f
add_entry	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^struct add_entry {$/;"	s	file:
add_event	deps/lua/doc/manual.html	/^     function add_event (op1, op2)$/;"	f
add_factory	deps/pmdk/src/tools/pmreorder/operationfactory.py	/^    def add_factory(id_, operation_factory):$/;"	m	class:OperationFactory
add_file	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def add_file(self, file, map_base, size):$/;"	m	class:BinaryOutputHandler
add_hdrs	deps/pmdk/src/libpmempool/transform.c	/^add_hdrs(struct pool_set *set_in, struct pool_set *set_out,$/;"	f	file:
add_hdrs_replica	deps/pmdk/src/libpmempool/transform.c	/^add_hdrs_replica(struct pool_set *set_in, struct pool_set *set_out,$/;"	f	file:
add_node	src/redis-trib.rb	/^    def add_node(node)$/;"	f	class:RedisTrib
add_opt	deps/pmdk/src/test/unittest/valgrind.py	/^    def add_opt(self, opt):$/;"	m	class:Valgrind
add_range_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^enum add_range_mode { ADD_RANGE_MODE_ONE_TX, ADD_RANGE_MODE_NESTED_TX };$/;"	g	file:
add_range_nested_tx	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^add_range_nested_tx(struct obj_tx_bench *obj_bench, struct worker_info *worker,$/;"	f	file:
add_range_op	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static fn_op_t add_range_op[] = {add_range_tx, add_range_nested_tx};$/;"	v	file:
add_range_tx	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^add_range_tx(struct obj_tx_bench *obj_bench, struct worker_info *worker,$/;"	f	file:
add_remote	deps/pmdk/src/test/unittest/poolset.py	/^    def add_remote(self, path, node):$/;"	m	class:_Poolset
add_replica	deps/pmdk/src/test/unittest/poolset.py	/^    def add_replica(self, *parts):$/;"	m	class:_Poolset
add_s	deps/lua/src/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_slots	src/redis-trib.rb	/^    def add_slots(slots)$/;"	f	class:ClusterNode
add_suppression	deps/pmdk/src/test/unittest/valgrind.py	/^    def add_suppression(self, f):$/;"	m	class:Valgrind
add_to_tx_and_lock	deps/pmdk/src/libpmemobj/tx.c	/^add_to_tx_and_lock(struct tx *tx, enum pobj_tx_param type, void *lock)$/;"	f	file:
add_value	deps/lua/src/lstrlib.c	/^static void add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
addfield	deps/lua/src/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, int i) {$/;"	f	file:
addinfo	deps/lua/src/ldebug.c	/^static void addinfo (lua_State *L, const char *msg) {$/;"	f	file:
addintlen	deps/lua/src/lstrlib.c	/^static void addintlen (char *form) {$/;"	f	file:
addk	deps/lua/src/lcode.c	/^static int addk (FuncState *fs, TValue *k, TValue *v) {$/;"	f	file:
addnode_cluster_cmd	src/redis-trib.rb	/^    def addnode_cluster_cmd(argv,opt)$/;"	f	class:RedisTrib.alloc_slots
addquoted	deps/lua/src/lstrlib.c	/^static void addquoted (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:
addr	deps/pmdk/src/benchmarks/blk.cpp	/^	char *addr;		  \/* address of user data (memcpy) *\/$/;"	m	struct:blk_bench	file:
addr	deps/pmdk/src/common/set.h	/^	void *addr;		\/* base address of the mapping *\/$/;"	m	struct:pool_set_part
addr	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	char *addr;		\/* base mapping address for file io mode *\/$/;"	m	struct:ds_context	file:
addr	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^    char *addr;$/;"	m	struct:pmem_context
addr	deps/pmdk/src/libpmem2/map.h	/^	void *addr; \/* base address *\/$/;"	m	struct:pmem2_map
addr	deps/pmdk/src/libpmemblk/blk.h	/^	void *addr;		\/* mapped region *\/$/;"	m	struct:pmemblk
addr	deps/pmdk/src/libpmemlog/log.h	/^	void *addr;		\/* mapped region *\/$/;"	m	struct:pmemlog
addr	deps/pmdk/src/libpmemobj/memops.h	/^	void *addr;$/;"	m	struct:user_buffer_def
addr	deps/pmdk/src/libpmemobj/obj.h	/^	void *addr;		\/* mapped region *\/$/;"	m	struct:pmemobjpool
addr	deps/pmdk/src/libpmempool/pool.h	/^	void *addr;$/;"	m	struct:pool_set_file
addr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint64_t addr;	\/* remote memory address *\/$/;"	m	struct:rpmem_msg_persist
addr	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^static struct mock_pop *addr;$/;"	v	typeref:struct:mock_pop	file:
addr	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^	void *addr;$/;"	m	struct:btt_context	file:
addr	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	void *addr;$/;"	m	struct:pmemspoil	file:
addr	deps/pmdk/src/tools/daxio/daxio.c	/^	char *addr;		\/* mapping base address *\/$/;"	m	struct:daxio_device	file:
addr	deps/pmdk/src/tools/pmempool/common.h	/^	void *addr;$/;"	m	struct:pool_set_file
addr	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	void *addr;			\/* pool's address *\/$/;"	m	struct:rpmemd_fip	file:
addr	deps/pmdk/src/tools/rpmemd/rpmemd_fip.h	/^	void *addr;$/;"	m	struct:rpmemd_fip_attr
addr	src/sentinel.c	/^    sentinelAddr *addr; \/* Master host. *\/$/;"	m	struct:sentinelRedisInstance	file:
addrp	deps/pmdk/src/benchmarks/rpmem.cpp	/^	void *addrp;		  \/* mapped file address *\/$/;"	m	struct:rpmem_bench	file:
adjustOpenFilesLimit	src/server.c	/^void adjustOpenFilesLimit(void) {$/;"	f
adjust_assign	deps/lua/src/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:
adjust_io_len	deps/pmdk/src/tools/daxio/daxio.c	/^adjust_io_len(struct daxio_context *ctx)$/;"	f	file:
adjust_varargs	deps/lua/src/ldo.c	/^static StkId adjust_varargs (lua_State *L, Proto *p, int actual) {$/;"	f	file:
adjustlocalvars	deps/lua/src/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:
adjustresults	deps/lua/src/lapi.c	768;"	d	file:
adjuststack	deps/lua/src/lauxlib.c	/^static void adjuststack (luaL_Buffer *B) {$/;"	f	file:
advanced	deps/pmdk/src/tools/pmempool/check.c	/^	bool advanced;		\/* do advanced repairs *\/$/;"	m	struct:pmempool_check_context	file:
aeAddMillisecondsToNow	src/ae.c	/^static void aeAddMillisecondsToNow(long long milliseconds, long *sec, long *ms) {$/;"	f	file:
aeApiAddEvent	src/ae_epoll.c	/^static int aeApiAddEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiAddEvent	src/ae_evport.c	/^static int aeApiAddEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiAddEvent	src/ae_kqueue.c	/^static int aeApiAddEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiAddEvent	src/ae_select.c	/^static int aeApiAddEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiAssociate	src/ae_evport.c	/^static int aeApiAssociate(const char *where, int portfd, int fd, int mask) {$/;"	f	file:
aeApiCreate	src/ae_epoll.c	/^static int aeApiCreate(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiCreate	src/ae_evport.c	/^static int aeApiCreate(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiCreate	src/ae_kqueue.c	/^static int aeApiCreate(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiCreate	src/ae_select.c	/^static int aeApiCreate(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiDelEvent	src/ae_epoll.c	/^static void aeApiDelEvent(aeEventLoop *eventLoop, int fd, int delmask) {$/;"	f	file:
aeApiDelEvent	src/ae_evport.c	/^static void aeApiDelEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiDelEvent	src/ae_kqueue.c	/^static void aeApiDelEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiDelEvent	src/ae_select.c	/^static void aeApiDelEvent(aeEventLoop *eventLoop, int fd, int mask) {$/;"	f	file:
aeApiFree	src/ae_epoll.c	/^static void aeApiFree(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiFree	src/ae_evport.c	/^static void aeApiFree(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiFree	src/ae_kqueue.c	/^static void aeApiFree(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiFree	src/ae_select.c	/^static void aeApiFree(aeEventLoop *eventLoop) {$/;"	f	file:
aeApiLookupPending	src/ae_evport.c	/^static int aeApiLookupPending(aeApiState *state, int fd) {$/;"	f	file:
aeApiName	src/ae_epoll.c	/^static char *aeApiName(void) {$/;"	f	file:
aeApiName	src/ae_evport.c	/^static char *aeApiName(void) {$/;"	f	file:
aeApiName	src/ae_kqueue.c	/^static char *aeApiName(void) {$/;"	f	file:
aeApiName	src/ae_select.c	/^static char *aeApiName(void) {$/;"	f	file:
aeApiPoll	src/ae_epoll.c	/^static int aeApiPoll(aeEventLoop *eventLoop, struct timeval *tvp) {$/;"	f	file:
aeApiPoll	src/ae_evport.c	/^static int aeApiPoll(aeEventLoop *eventLoop, struct timeval *tvp) {$/;"	f	file:
aeApiPoll	src/ae_kqueue.c	/^static int aeApiPoll(aeEventLoop *eventLoop, struct timeval *tvp) {$/;"	f	file:
aeApiPoll	src/ae_select.c	/^static int aeApiPoll(aeEventLoop *eventLoop, struct timeval *tvp) {$/;"	f	file:
aeApiResize	src/ae_epoll.c	/^static int aeApiResize(aeEventLoop *eventLoop, int setsize) {$/;"	f	file:
aeApiResize	src/ae_evport.c	/^static int aeApiResize(aeEventLoop *eventLoop, int setsize) {$/;"	f	file:
aeApiResize	src/ae_kqueue.c	/^static int aeApiResize(aeEventLoop *eventLoop, int setsize) {$/;"	f	file:
aeApiResize	src/ae_select.c	/^static int aeApiResize(aeEventLoop *eventLoop, int setsize) {$/;"	f	file:
aeApiState	src/ae_epoll.c	/^typedef struct aeApiState {$/;"	s	file:
aeApiState	src/ae_epoll.c	/^} aeApiState;$/;"	t	typeref:struct:aeApiState	file:
aeApiState	src/ae_evport.c	/^typedef struct aeApiState {$/;"	s	file:
aeApiState	src/ae_evport.c	/^} aeApiState;$/;"	t	typeref:struct:aeApiState	file:
aeApiState	src/ae_kqueue.c	/^typedef struct aeApiState {$/;"	s	file:
aeApiState	src/ae_kqueue.c	/^} aeApiState;$/;"	t	typeref:struct:aeApiState	file:
aeApiState	src/ae_select.c	/^typedef struct aeApiState {$/;"	s	file:
aeApiState	src/ae_select.c	/^} aeApiState;$/;"	t	typeref:struct:aeApiState	file:
aeBeforeSleepProc	src/ae.h	/^typedef void aeBeforeSleepProc(struct aeEventLoop *eventLoop);$/;"	t
aeCreateEventLoop	src/ae.c	/^aeEventLoop *aeCreateEventLoop(int setsize) {$/;"	f
aeCreateFileEvent	src/ae.c	/^int aeCreateFileEvent(aeEventLoop *eventLoop, int fd, int mask,$/;"	f
aeCreateTimeEvent	src/ae.c	/^long long aeCreateTimeEvent(aeEventLoop *eventLoop, long long milliseconds,$/;"	f
aeDeleteEventLoop	src/ae.c	/^void aeDeleteEventLoop(aeEventLoop *eventLoop) {$/;"	f
aeDeleteFileEvent	src/ae.c	/^void aeDeleteFileEvent(aeEventLoop *eventLoop, int fd, int mask)$/;"	f
aeDeleteTimeEvent	src/ae.c	/^int aeDeleteTimeEvent(aeEventLoop *eventLoop, long long id)$/;"	f
aeEventFinalizerProc	src/ae.h	/^typedef void aeEventFinalizerProc(struct aeEventLoop *eventLoop, void *clientData);$/;"	t
aeEventLoop	src/ae.h	/^typedef struct aeEventLoop {$/;"	s
aeEventLoop	src/ae.h	/^} aeEventLoop;$/;"	t	typeref:struct:aeEventLoop
aeFileEvent	src/ae.h	/^typedef struct aeFileEvent {$/;"	s
aeFileEvent	src/ae.h	/^} aeFileEvent;$/;"	t	typeref:struct:aeFileEvent
aeFileProc	src/ae.h	/^typedef void aeFileProc(struct aeEventLoop *eventLoop, int fd, void *clientData, int mask);$/;"	t
aeFiredEvent	src/ae.h	/^typedef struct aeFiredEvent {$/;"	s
aeFiredEvent	src/ae.h	/^} aeFiredEvent;$/;"	t	typeref:struct:aeFiredEvent
aeGetApiName	src/ae.c	/^char *aeGetApiName(void) {$/;"	f
aeGetFileEvents	src/ae.c	/^int aeGetFileEvents(aeEventLoop *eventLoop, int fd) {$/;"	f
aeGetSetSize	src/ae.c	/^int aeGetSetSize(aeEventLoop *eventLoop) {$/;"	f
aeGetTime	src/ae.c	/^static void aeGetTime(long *seconds, long *milliseconds)$/;"	f	file:
aeMain	src/ae.c	/^void aeMain(aeEventLoop *eventLoop) {$/;"	f
aeProcessEvents	src/ae.c	/^int aeProcessEvents(aeEventLoop *eventLoop, int flags)$/;"	f
aeResizeSetSize	src/ae.c	/^int aeResizeSetSize(aeEventLoop *eventLoop, int setsize) {$/;"	f
aeSearchNearestTimer	src/ae.c	/^static aeTimeEvent *aeSearchNearestTimer(aeEventLoop *eventLoop)$/;"	f	file:
aeSetBeforeSleepProc	src/ae.c	/^void aeSetBeforeSleepProc(aeEventLoop *eventLoop, aeBeforeSleepProc *beforesleep) {$/;"	f
aeStop	src/ae.c	/^void aeStop(aeEventLoop *eventLoop) {$/;"	f
aeTimeEvent	src/ae.h	/^typedef struct aeTimeEvent {$/;"	s
aeTimeEvent	src/ae.h	/^} aeTimeEvent;$/;"	t	typeref:struct:aeTimeEvent
aeTimeProc	src/ae.h	/^typedef int aeTimeProc(struct aeEventLoop *eventLoop, long long id, void *clientData);$/;"	t
aeWait	src/ae.c	/^int aeWait(int fd, int mask, long long milliseconds) {$/;"	f
affinity	deps/pmdk/src/common/os_thread_windows.c	/^	GROUP_AFFINITY affinity;$/;"	m	struct:__anon83	file:
affinity_list	deps/pmdk/src/benchmarks/benchmark.hpp	/^	char *affinity_list;     \/* set CPU affinity order *\/$/;"	m	struct:benchmark_args
al	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^		TOID(art_leaf)    al;$/;"	m	union:_art_node_u::__anon100
al	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^		union _toid_art_leaf_toid al;$/;"	m	union:_art_node_u::__anon101	typeref:union:_art_node_u::__anon101::_toid_art_leaf_toid
alien	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^struct alien {$/;"	s	file:
alien	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^struct alien {$/;"	s	file:
aliens	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	TOID(struct alien) aliens;$/;"	m	struct:root	file:
align	deps/lua/src/lua_struct.c	/^  int align;$/;"	m	struct:Header	file:
align	deps/pmdk/src/common/os_thread.h	/^	long long align;  \/* linux: long windows: 8 FreeBSD: 12 *\/$/;"	m	union:__anon75
align	deps/pmdk/src/common/os_thread.h	/^	long long align;$/;"	m	union:__anon71
align	deps/pmdk/src/common/os_thread.h	/^	long long align;$/;"	m	union:__anon72
align	deps/pmdk/src/common/os_thread.h	/^	long long align;$/;"	m	union:__anon73
align	deps/pmdk/src/common/os_thread.h	/^	long long align;$/;"	m	union:__anon74
align	deps/pmdk/src/common/os_thread.h	/^	long long align;$/;"	m	union:__anon76
align	deps/pmdk/src/common/os_thread.h	/^	long long align;$/;"	m	union:__anon77
align	deps/pmdk/src/common/os_thread.h	/^	long long align;$/;"	m	union:__anon78
align	deps/pmdk/src/include/libpmemobj/thread.h	/^	long long align;$/;"	m	union:__anon50
align	deps/pmdk/src/include/libpmemobj/thread.h	/^	long long align;$/;"	m	union:__anon51
align	deps/pmdk/src/include/libpmemobj/thread.h	/^	long long align;$/;"	m	union:__anon52
align	deps/pmdk/src/tools/daxio/daxio.c	/^	size_t align;		\/* internal device alignment *\/$/;"	m	struct:daxio_device	file:
align_addr	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^align_addr(void *addr, uintptr_t align)$/;"	f	file:
align_len	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^align_len(size_t len, void *addr, uintptr_t align)$/;"	f	file:
align_pad	deps/pmdk/src/common/pool_hdr.h	/^	unsigned char align_pad[POOL_HDR_ALIGN_PAD];	\/* alignment pad *\/$/;"	m	struct:pool_hdr
aligned_alloc	deps/jemalloc/include/jemalloc/jemalloc.h	328;"	d
aligned_alloc	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	17;"	d
aligned_alloc	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	17;"	d
alignment	deps/pmdk/src/common/set.h	/^	size_t alignment;	\/* internal alignment (Device DAX only) *\/$/;"	m	struct:pool_set_part
alignment	deps/pmdk/src/include/libpmemobj/ctl.h	/^	size_t alignment;$/;"	m	struct:pobj_alloc_class_desc
alignment	deps/pmdk/src/libpmem2/config.h	/^	size_t alignment; \/* required alignment of the mapping *\/$/;"	m	struct:pmem2_config
alignment	deps/pmdk/src/libpmemobj/alloc_class.h	/^		size_t alignment; \/* required alignment of objects *\/$/;"	m	struct:alloc_class::__anon131
alignment	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t alignment; \/* valid only \/w CHUNK_FLAG_ALIGNED *\/$/;"	m	struct:chunk_run_header
alignment	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t alignment;$/;"	m	struct:pmem_obj_class_stats
alignment_desc	deps/pmdk/src/common/pool_hdr.h	/^	uint64_t alignment_desc;	\/* alignment descriptor *\/$/;"	m	struct:arch_flags
alignment_desc	deps/pmdk/src/common/pool_hdr.h	185;"	d
alignment_desc_of	deps/pmdk/src/common/pool_hdr.h	184;"	d
alignment_of	deps/pmdk/src/common/pool_hdr.h	183;"	d
all_time_high	src/latency.h	/^    uint32_t all_time_high; \/* Absolute max observed since latest reset. *\/$/;"	m	struct:latencyStats
alloc	deps/hiredis/sds.h	/^    uint16_t alloc; \/* excluding the header and null terminator *\/$/;"	m	struct:sdshdr16
alloc	deps/hiredis/sds.h	/^    uint32_t alloc; \/* excluding the header and null terminator *\/$/;"	m	struct:sdshdr32
alloc	deps/hiredis/sds.h	/^    uint64_t alloc; \/* excluding the header and null terminator *\/$/;"	m	struct:sdshdr64
alloc	deps/hiredis/sds.h	/^    uint8_t alloc; \/* excluding the header and null terminator *\/$/;"	m	struct:sdshdr8
alloc	deps/jemalloc/include/jemalloc/internal/rtree.h	/^	rtree_node_alloc_t	*alloc;$/;"	m	struct:rtree_s
alloc	deps/jemalloc/include/jemalloc/jemalloc.h	/^	chunk_alloc_t		*alloc;$/;"	m	struct:__anon14
alloc	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^	chunk_alloc_t		*alloc;$/;"	m	struct:__anon1
alloc	deps/pmdk/src/benchmarks/map_bench.cpp	/^	bool alloc;$/;"	m	struct:map_bench_args	file:
alloc	deps/pmdk/src/test/obj_alloc/obj_alloc.c	/^POBJ_LAYOUT_BEGIN(alloc);$/;"	v
alloc	deps/pmdk/src/test/obj_alloc/obj_alloc.c	/^POBJ_LAYOUT_END(alloc);$/;"	v
alloc	src/sds.h	/^    uint16_t alloc; \/* excluding the header and null terminator *\/$/;"	m	struct:sdshdr16
alloc	src/sds.h	/^    uint32_t alloc; \/* excluding the header and null terminator *\/$/;"	m	struct:sdshdr32
alloc	src/sds.h	/^    uint64_t alloc; \/* excluding the header and null terminator *\/$/;"	m	struct:sdshdr64
alloc	src/sds.h	/^    uint8_t alloc; \/* excluding the header and null terminator *\/$/;"	m	struct:sdshdr8
alloc_argv	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^alloc_argv(unsigned argc, char *argv[], unsigned off)$/;"	f	file:
alloc_array	deps/pmdk/src/examples/libpmemobj/array/array.c	/^static fn_alloc alloc_array[] = {NULL, alloc_int, alloc_pmemoid, alloc_toid};$/;"	v	file:
alloc_class	deps/pmdk/src/libpmemobj/alloc_class.h	/^struct alloc_class {$/;"	s
alloc_class	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^static struct pobj_alloc_class_desc alloc_class[] = {$/;"	v	typeref:struct:pobj_alloc_class_desc	file:
alloc_class_assign_by_size	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_assign_by_size(struct alloc_class_collection *ac,$/;"	f	file:
alloc_class_by_alloc_size	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_by_alloc_size(struct alloc_class_collection *ac, size_t size)$/;"	f
alloc_class_by_id	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_by_id(struct alloc_class_collection *ac, uint8_t id)$/;"	f
alloc_class_by_run	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_by_run(struct alloc_class_collection *ac,$/;"	f
alloc_class_calc_size_idx	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_calc_size_idx(struct alloc_class *c, size_t size)$/;"	f
alloc_class_collection	deps/pmdk/src/libpmemobj/alloc_class.c	/^struct alloc_class_collection {$/;"	s	file:
alloc_class_collection_delete	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_collection_delete(struct alloc_class_collection *ac)$/;"	f
alloc_class_collection_new	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_collection_new()$/;"	f
alloc_class_delete	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_delete(struct alloc_class_collection *ac,$/;"	f
alloc_class_find_first_free_slot	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_find_first_free_slot(struct alloc_class_collection *ac,$/;"	f
alloc_class_find_min_frag	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_find_min_frag(struct alloc_class_collection *ac, size_t n)$/;"	f	file:
alloc_class_find_or_create	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_find_or_create(struct alloc_class_collection *ac, size_t n)$/;"	f	file:
alloc_class_new	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_new(int id, struct alloc_class_collection *ac,$/;"	f
alloc_class_reservation_clear	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_reservation_clear(struct alloc_class_collection *ac, int id)$/;"	f	file:
alloc_class_reserve	deps/pmdk/src/libpmemobj/alloc_class.c	/^alloc_class_reserve(struct alloc_class_collection *ac, uint8_t id)$/;"	f
alloc_class_type	deps/pmdk/src/libpmemobj/alloc_class.h	/^enum alloc_class_type {$/;"	g
alloc_classes	deps/pmdk/src/libpmemobj/heap.c	/^	struct alloc_class_collection *alloc_classes;$/;"	m	struct:heap_rt	typeref:struct:heap_rt::alloc_class_collection	file:
alloc_classes	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^static struct alloc_class_collection *alloc_classes;$/;"	v	typeref:struct:alloc_class_collection	file:
alloc_classes	deps/pmdk/src/tools/pmempool/info.h	/^		struct alloc_class_collection *alloc_classes;$/;"	m	struct:pmem_info::__anon111	typeref:struct:pmem_info::__anon111::alloc_class_collection
alloc_dram	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^alloc_dram(struct obj_tx_bench *obj_bench, struct worker_info *worker,$/;"	f	file:
alloc_free_worker	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^alloc_free_worker(void *arg)$/;"	f	file:
alloc_from_permuted_backtrace	deps/jemalloc/test/unit/prof_accum.c	/^alloc_from_permuted_backtrace(unsigned thd_ind, unsigned iteration)$/;"	f	file:
alloc_int	deps/pmdk/src/examples/libpmemobj/array/array.c	/^alloc_int(size_t size)$/;"	f	file:
alloc_leaf	deps/pmdk/src/libpmemobj/critnib.c	/^alloc_leaf(struct critnib *__restrict c)$/;"	f	file:
alloc_memory	deps/pmdk/src/examples/librpmem/basic.c	/^alloc_memory()$/;"	f	file:
alloc_memory	deps/pmdk/src/examples/librpmem/hello.c	/^alloc_memory()$/;"	f	file:
alloc_memory	deps/pmdk/src/examples/librpmem/manpage.c	/^alloc_memory()$/;"	f	file:
alloc_node	deps/pmdk/src/libpmemobj/critnib.c	/^alloc_node(struct critnib *__restrict c)$/;"	f	file:
alloc_objs	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^alloc_objs(PMEMobjpool *pop, TOID(struct root_s) root, unsigned cnt,$/;"	f	file:
alloc_op	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static fn_op_t alloc_op[] = {alloc_dram, alloc_tx, alloc_pmem};$/;"	v	file:
alloc_pattern	deps/pmdk/src/libpmemobj/ctl_debug.c	/^CTL_READ_HANDLER(alloc_pattern)(void *ctx,$/;"	f	file:
alloc_pattern	deps/pmdk/src/libpmemobj/ctl_debug.c	/^CTL_WRITE_HANDLER(alloc_pattern)(void *ctx,$/;"	f	file:
alloc_pattern	deps/pmdk/src/libpmemobj/ctl_debug.c	/^static const struct ctl_argument CTL_ARG(alloc_pattern) = CTL_ARG_LONG_LONG;$/;"	v	typeref:struct:CTL_ARG	file:
alloc_pattern	deps/pmdk/src/libpmemobj/palloc.h	/^	int alloc_pattern;$/;"	m	struct:palloc_heap
alloc_pmem	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^alloc_pmem(struct obj_tx_bench *obj_bench, struct worker_info *worker,$/;"	f	file:
alloc_pmemoid	deps/pmdk/src/examples/libpmemobj/array/array.c	/^alloc_pmemoid(size_t size)$/;"	f	file:
alloc_prep_block	deps/pmdk/src/libpmemobj/palloc.c	/^alloc_prep_block(struct palloc_heap *heap, const struct memory_block *m,$/;"	f	file:
alloc_sizes	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	size_t *alloc_sizes; \/* array to store random sizes of each object *\/$/;"	m	struct:obj_bench	file:
alloc_slots	src/redis-trib.rb	/^    def alloc_slots$/;"	f	class:RedisTrib
alloc_toid	deps/pmdk/src/examples/libpmemobj/array/array.c	/^alloc_toid(size_t size)$/;"	f	file:
alloc_tx	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^alloc_tx(struct obj_tx_bench *obj_bench, struct worker_info *worker, size_t idx)$/;"	f	file:
alloc_worker	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^alloc_worker(void *arg)$/;"	f	file:
alloca	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	354;"	d
allocate_max_size_available_file	deps/pmdk/src/tools/pmempool/create.c	/^allocate_max_size_available_file(const char *name_of_file, mode_t mode,$/;"	f	file:
allocate_objects	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^allocate_objects(PMEMobjpool *pop, size_t size_min, size_t size_max)$/;"	f	file:
allocate_pmem	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^allocate_pmem(struct free_info *f, TOID(struct pmem_root) root, int val)$/;"	f	file:
allocated	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	size_t			allocated;$/;"	m	struct:ctl_stats_s
allocated	deps/pmdk/src/test/obj_pmalloc_oom_mt/obj_pmalloc_oom_mt.c	/^static int allocated;$/;"	v	file:
allocated_current	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static size_t allocated_current;$/;"	v	file:
allocated_huge	deps/jemalloc/include/jemalloc/internal/stats.h	/^	size_t		allocated_huge;$/;"	m	struct:arena_stats_s
allocated_large	deps/jemalloc/include/jemalloc/internal/stats.h	/^	size_t		allocated_large;$/;"	m	struct:arena_stats_s
allocated_small	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	size_t			allocated_small;$/;"	m	struct:ctl_arena_stats_s
allocation_header_compact	deps/pmdk/src/libpmemobj/heap_layout.h	/^struct allocation_header_compact {$/;"	s
allocation_header_legacy	deps/pmdk/src/libpmemobj/heap_layout.h	/^struct allocation_header_legacy {$/;"	s
allocs	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	PMDK_TAILQ_HEAD(allochead, clo_vec_alloc) allocs;$/;"	m	struct:clo_vec
allow_poolset	deps/pmdk/src/benchmarks/benchmark.hpp	/^	bool allow_poolset;$/;"	m	struct:benchmark_info
allowhook	deps/lua/src/lstate.h	/^  lu_byte allowhook;$/;"	m	struct:lua_State
already_expired	src/redis-check-rdb.c	/^    unsigned long already_expired;  \/* Number of keys already expired. *\/$/;"	m	struct:__anon151	file:
alsoPropagate	src/server.c	/^void alsoPropagate(struct redisCommand *cmd, int dbid, robj **argv, int argc,$/;"	f
also_propagate	src/server.h	/^    redisOpArray also_propagate;    \/* Additional command to propagate. *\/$/;"	m	struct:redisServer
an16	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^		TOID(art_node16)  an16;  \/*  starts with art_node *\/$/;"	m	union:_art_node_u::__anon100
an16	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^		union _toid_art_node16_toid an16;$/;"	m	union:_art_node_u::__anon101	typeref:union:_art_node_u::__anon101::_toid_art_node16_toid
an256	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^		TOID(art_node256) an256; \/*  starts with art_node *\/$/;"	m	union:_art_node_u::__anon100
an256	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^		union _toid_art_node256_toid an256;$/;"	m	union:_art_node_u::__anon101	typeref:union:_art_node_u::__anon101::_toid_art_node256_toid
an4	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^		TOID(art_node4)   an4;   \/*  starts with art_node *\/$/;"	m	union:_art_node_u::__anon100
an4	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^		union _toid_art_node4_toid an4;$/;"	m	union:_art_node_u::__anon101	typeref:union:_art_node_u::__anon101::_toid_art_node4_toid
an48	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^		TOID(art_node48)  an48;  \/*  starts with art_node *\/$/;"	m	union:_art_node_u::__anon100
an48	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^		union _toid_art_node48_toid an48;$/;"	m	union:_art_node_u::__anon101	typeref:union:_art_node_u::__anon101::_toid_art_node48_toid
analyzeLatencyForEvent	src/latency.c	/^void analyzeLatencyForEvent(char *event, struct latencyStats *ls) {$/;"	f
analyze_license	deps/pmdk/utils/check_license/check-license.c	/^analyze_license(const char *name_to_print,$/;"	f	file:
anchor_token	deps/lua/src/lparser.c	/^static void anchor_token (LexState *ls) {$/;"	f	file:
anetBlock	src/anet.c	/^int anetBlock(char *err, int fd) {$/;"	f
anetCreateSocket	src/anet.c	/^static int anetCreateSocket(char *err, int domain) {$/;"	f	file:
anetDisableTcpNoDelay	src/anet.c	/^int anetDisableTcpNoDelay(char *err, int fd)$/;"	f
anetEnableTcpNoDelay	src/anet.c	/^int anetEnableTcpNoDelay(char *err, int fd)$/;"	f
anetFormatAddr	src/anet.c	/^int anetFormatAddr(char *buf, size_t buf_len, char *ip, int port) {$/;"	f
anetFormatPeer	src/anet.c	/^int anetFormatPeer(int fd, char *buf, size_t buf_len) {$/;"	f
anetFormatSock	src/anet.c	/^int anetFormatSock(int fd, char *fmt, size_t fmt_len) {$/;"	f
anetGenericAccept	src/anet.c	/^static int anetGenericAccept(char *err, int s, struct sockaddr *sa, socklen_t *len) {$/;"	f	file:
anetGenericResolve	src/anet.c	/^int anetGenericResolve(char *err, char *host, char *ipbuf, size_t ipbuf_len,$/;"	f
anetKeepAlive	src/anet.c	/^int anetKeepAlive(char *err, int fd, int interval)$/;"	f
anetListen	src/anet.c	/^static int anetListen(char *err, int s, struct sockaddr *sa, socklen_t len, int backlog) {$/;"	f	file:
anetNonBlock	src/anet.c	/^int anetNonBlock(char *err, int fd) {$/;"	f
anetPeerToString	src/anet.c	/^int anetPeerToString(int fd, char *ip, size_t ip_len, int *port) {$/;"	f
anetRead	src/anet.c	/^int anetRead(int fd, char *buf, int count)$/;"	f
anetResolve	src/anet.c	/^int anetResolve(char *err, char *host, char *ipbuf, size_t ipbuf_len) {$/;"	f
anetResolveIP	src/anet.c	/^int anetResolveIP(char *err, char *host, char *ipbuf, size_t ipbuf_len) {$/;"	f
anetSendTimeout	src/anet.c	/^int anetSendTimeout(char *err, int fd, long long ms) {$/;"	f
anetSetBlock	src/anet.c	/^int anetSetBlock(char *err, int fd, int non_block) {$/;"	f
anetSetError	src/anet.c	/^static void anetSetError(char *err, const char *fmt, ...)$/;"	f	file:
anetSetReuseAddr	src/anet.c	/^static int anetSetReuseAddr(char *err, int fd) {$/;"	f	file:
anetSetSendBuffer	src/anet.c	/^int anetSetSendBuffer(char *err, int fd, int buffsize)$/;"	f
anetSetTcpNoDelay	src/anet.c	/^static int anetSetTcpNoDelay(char *err, int fd, int val)$/;"	f	file:
anetSockName	src/anet.c	/^int anetSockName(int fd, char *ip, size_t ip_len, int *port) {$/;"	f
anetTcp6Server	src/anet.c	/^int anetTcp6Server(char *err, int port, char *bindaddr, int backlog)$/;"	f
anetTcpAccept	src/anet.c	/^int anetTcpAccept(char *err, int s, char *ip, size_t ip_len, int *port) {$/;"	f
anetTcpConnect	src/anet.c	/^int anetTcpConnect(char *err, char *addr, int port)$/;"	f
anetTcpGenericConnect	src/anet.c	/^static int anetTcpGenericConnect(char *err, char *addr, int port,$/;"	f	file:
anetTcpKeepAlive	src/anet.c	/^int anetTcpKeepAlive(char *err, int fd)$/;"	f
anetTcpNonBlockBestEffortBindConnect	src/anet.c	/^int anetTcpNonBlockBestEffortBindConnect(char *err, char *addr, int port,$/;"	f
anetTcpNonBlockBindConnect	src/anet.c	/^int anetTcpNonBlockBindConnect(char *err, char *addr, int port,$/;"	f
anetTcpNonBlockConnect	src/anet.c	/^int anetTcpNonBlockConnect(char *err, char *addr, int port)$/;"	f
anetTcpServer	src/anet.c	/^int anetTcpServer(char *err, int port, char *bindaddr, int backlog)$/;"	f
anetUnixAccept	src/anet.c	/^int anetUnixAccept(char *err, int s) {$/;"	f
anetUnixConnect	src/anet.c	/^int anetUnixConnect(char *err, char *path)$/;"	f
anetUnixGenericConnect	src/anet.c	/^int anetUnixGenericConnect(char *err, char *path, int flags)$/;"	f
anetUnixNonBlockConnect	src/anet.c	/^int anetUnixNonBlockConnect(char *err, char *path)$/;"	f
anetUnixServer	src/anet.c	/^int anetUnixServer(char *err, char *path, mode_t perm, int backlog)$/;"	f
anetV6Only	src/anet.c	/^static int anetV6Only(char *err, int s) {$/;"	f	file:
anetWrite	src/anet.c	/^int anetWrite(int fd, char *buf, int count)$/;"	f
announce_ip	src/sentinel.c	/^    char *announce_ip;  \/* IP addr that is gossiped to other sentinels if$/;"	m	struct:sentinelState	file:
announce_port	src/sentinel.c	/^    int announce_port;  \/* Port that is gossiped to other sentinels if$/;"	m	struct:sentinelState	file:
ans	deps/pmdk/src/tools/pmempool/check.c	/^	char ans;		\/* default answer on all questions or '?' *\/$/;"	m	struct:pmempool_check_context	file:
answer	deps/pmdk/src/include/libpmempool.h	/^		const char *answer;$/;"	m	struct:pmempool_check_statusU::__anon47
answer	deps/pmdk/src/include/libpmempool.h	/^		const wchar_t *answer;$/;"	m	struct:pmempool_check_statusW::__anon48
answer	deps/pmdk/src/libpmempool/check_util.c	/^	enum check_answer answer;$/;"	m	struct:check_status	typeref:enum:check_status::check_answer	file:
answers	deps/pmdk/src/libpmempool/check_util.c	/^	struct check_status_head answers;$/;"	m	struct:check_data	typeref:struct:check_data::check_status_head	file:
aofChildPipeReadable	src/aof.c	/^void aofChildPipeReadable(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
aofChildWriteDiffData	src/aof.c	/^void aofChildWriteDiffData(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
aofClosePipes	src/aof.c	/^void aofClosePipes(void) {$/;"	f
aofCreatePipes	src/aof.c	/^int aofCreatePipes(void) {$/;"	f
aofReadDiffFromParent	src/aof.c	/^ssize_t aofReadDiffFromParent(void) {$/;"	f
aofRemoveTempFile	src/aof.c	/^void aofRemoveTempFile(pid_t childpid) {$/;"	f
aofRewriteBufferAppend	src/aof.c	/^void aofRewriteBufferAppend(unsigned char *s, unsigned long len) {$/;"	f
aofRewriteBufferReset	src/aof.c	/^void aofRewriteBufferReset(void) {$/;"	f
aofRewriteBufferSize	src/aof.c	/^unsigned long aofRewriteBufferSize(void) {$/;"	f
aofRewriteBufferWrite	src/aof.c	/^ssize_t aofRewriteBufferWrite(int fd) {$/;"	f
aofUpdateCurrentSize	src/aof.c	/^void aofUpdateCurrentSize(void) {$/;"	f
aof_background_fsync	src/aof.c	/^void aof_background_fsync(int fd) {$/;"	f
aof_buf	src/server.h	/^    sds aof_buf;      \/* AOF buffer, written before entering the event loop *\/$/;"	m	struct:redisServer
aof_child_diff	src/server.h	/^    sds aof_child_diff;             \/* AOF diff accumulator child side. *\/$/;"	m	struct:redisServer
aof_child_pid	src/server.h	/^    pid_t aof_child_pid;            \/* PID if rewriting process *\/$/;"	m	struct:redisServer
aof_current_size	src/server.h	/^    off_t aof_current_size;         \/* AOF current size. *\/$/;"	m	struct:redisServer
aof_delayed_fsync	src/server.h	/^    unsigned long aof_delayed_fsync;  \/* delayed AOF fsync() counter *\/$/;"	m	struct:redisServer
aof_fd	src/server.h	/^    int aof_fd;       \/* File descriptor of currently selected AOF file *\/$/;"	m	struct:redisServer
aof_filename	src/server.h	/^    char *aof_filename;             \/* Name of the AOF file *\/$/;"	m	struct:redisServer
aof_flush_postponed_start	src/server.h	/^    time_t aof_flush_postponed_start; \/* UNIX time of postponed AOF flush *\/$/;"	m	struct:redisServer
aof_fsync	src/config.h	92;"	d
aof_fsync	src/config.h	94;"	d
aof_fsync	src/server.h	/^    int aof_fsync;                  \/* Kind of fsync() policy *\/$/;"	m	struct:redisServer
aof_fsync_enum	src/config.c	/^configEnum aof_fsync_enum[] = {$/;"	v
aof_last_fsync	src/server.h	/^    time_t aof_last_fsync;            \/* UNIX time of last fsync() *\/$/;"	m	struct:redisServer
aof_last_write_errno	src/server.h	/^    int aof_last_write_errno;       \/* Valid if aof_last_write_status is ERR *\/$/;"	m	struct:redisServer
aof_last_write_status	src/server.h	/^    int aof_last_write_status;      \/* C_OK or C_ERR *\/$/;"	m	struct:redisServer
aof_lastbgrewrite_status	src/server.h	/^    int aof_lastbgrewrite_status;   \/* C_OK or C_ERR *\/$/;"	m	struct:redisServer
aof_load_truncated	src/server.h	/^    int aof_load_truncated;         \/* Don't stop on unexpected AOF EOF. *\/$/;"	m	struct:redisServer
aof_no_fsync_on_rewrite	src/server.h	/^    int aof_no_fsync_on_rewrite;    \/* Don't fsync if a rewrite is in prog. *\/$/;"	m	struct:redisServer
aof_pipe_read_ack_from_child	src/server.h	/^    int aof_pipe_read_ack_from_child;$/;"	m	struct:redisServer
aof_pipe_read_ack_from_parent	src/server.h	/^    int aof_pipe_read_ack_from_parent;$/;"	m	struct:redisServer
aof_pipe_read_data_from_parent	src/server.h	/^    int aof_pipe_read_data_from_parent;$/;"	m	struct:redisServer
aof_pipe_write_ack_to_child	src/server.h	/^    int aof_pipe_write_ack_to_child;$/;"	m	struct:redisServer
aof_pipe_write_ack_to_parent	src/server.h	/^    int aof_pipe_write_ack_to_parent;$/;"	m	struct:redisServer
aof_pipe_write_data_to_child	src/server.h	/^    int aof_pipe_write_data_to_child;$/;"	m	struct:redisServer
aof_rewrite_base_size	src/server.h	/^    off_t aof_rewrite_base_size;    \/* AOF size on latest startup or rewrite. *\/$/;"	m	struct:redisServer
aof_rewrite_buf_blocks	src/server.h	/^    list *aof_rewrite_buf_blocks;   \/* Hold changes during an AOF rewrite. *\/$/;"	m	struct:redisServer
aof_rewrite_incremental_fsync	src/server.h	/^    int aof_rewrite_incremental_fsync;\/* fsync incrementally while rewriting? *\/$/;"	m	struct:redisServer
aof_rewrite_min_size	src/server.h	/^    off_t aof_rewrite_min_size;     \/* the AOF file is at least N bytes. *\/$/;"	m	struct:redisServer
aof_rewrite_perc	src/server.h	/^    int aof_rewrite_perc;           \/* Rewrite AOF if % growth is > M and... *\/$/;"	m	struct:redisServer
aof_rewrite_scheduled	src/server.h	/^    int aof_rewrite_scheduled;      \/* Rewrite once BGSAVE terminates. *\/$/;"	m	struct:redisServer
aof_rewrite_time_last	src/server.h	/^    time_t aof_rewrite_time_last;   \/* Time used by last AOF rewrite run. *\/$/;"	m	struct:redisServer
aof_rewrite_time_start	src/server.h	/^    time_t aof_rewrite_time_start;  \/* Current AOF rewrite start time. *\/$/;"	m	struct:redisServer
aof_selected_db	src/server.h	/^    int aof_selected_db; \/* Currently selected DB in AOF *\/$/;"	m	struct:redisServer
aof_state	src/server.h	/^    int aof_state;                  \/* AOF_(ON|OFF|WAIT_REWRITE) *\/$/;"	m	struct:redisServer
aof_stop_sending_diff	src/server.h	/^    int aof_stop_sending_diff;     \/* If true stop sending accumulated diffs$/;"	m	struct:redisServer
aofrwblock	src/aof.c	/^typedef struct aofrwblock {$/;"	s	file:
aofrwblock	src/aof.c	/^} aofrwblock;$/;"	t	typeref:struct:aofrwblock	file:
api_check	deps/lua/src/llimits.h	58;"	d
api_check	deps/lua/src/llimits.h	64;"	d
api_checknelems	deps/lua/src/lapi.c	41;"	d	file:
api_checkvalidindex	deps/lua/src/lapi.c	43;"	d	file:
api_incr_top	deps/lua/src/lapi.c	45;"	d	file:
apidata	src/ae.h	/^    void *apidata; \/* This is used for polling API specific data *\/$/;"	m	struct:aeEventLoop
appendCommand	src/t_string.c	/^void appendCommand(client *c) {$/;"	f
appendServerSaveParams	src/config.c	/^void appendServerSaveParams(time_t seconds, int changes) {$/;"	f
append_daxio_control	deps/pmdk/utils/build-dpkg.sh	/^function append_daxio_control() {$/;"	f
append_libpmem2_control	deps/pmdk/utils/build-dpkg.sh	/^function append_libpmem2_control() {$/;"	f
append_rpmem_control	deps/pmdk/utils/build-dpkg.sh	/^function append_rpmem_control() {$/;"	f
append_to_aof	tests/integration/aof.tcl	/^proc append_to_aof {str} {$/;"	p
arch_bits	src/server.h	/^    int arch_bits;              \/* 32 or 64 depending on sizeof(long) *\/$/;"	m	struct:redisServer
arch_data	deps/pmdk/src/common/pool_hdr.c	/^arch_data(void)$/;"	f	file:
arch_flags	deps/pmdk/src/common/pool_hdr.h	/^	struct arch_flags arch_flags;	\/* architecture identification flags *\/$/;"	m	struct:pool_hdr	typeref:struct:pool_hdr::arch_flags
arch_flags	deps/pmdk/src/common/pool_hdr.h	/^struct arch_flags {$/;"	s
arch_flags	deps/pmdk/src/common/set.h	/^	unsigned char arch_flags[POOL_HDR_ARCH_LEN];		\/* arch flags *\/$/;"	m	struct:pool_attr
are_flags_valid	deps/pmdk/src/libpmempool/feature.c	/^are_flags_valid(unsigned flags)$/;"	f	file:
area	deps/geohash-int/geohash_helper.h	/^    GeoHashArea area;$/;"	m	struct:__anon141
arena	deps/pmdk/src/libpmemblk/btt.c	/^	struct arena {$/;"	s	struct:btt	file:
arena	deps/pmdk/src/libpmemobj/heap.c	/^struct arena {$/;"	s	file:
arena	deps/pmdk/src/libpmempool/pool.h	/^struct arena {$/;"	s
arena	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^	unsigned arena;$/;"	m	struct:arena_alloc	file:
arena_aalloc	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_aalloc(const void *ptr)$/;"	f
arena_aalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	4;"	d
arena_aalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	4;"	d
arena_achunk_prof_reset	deps/jemalloc/src/arena.c	/^arena_achunk_prof_reset(tsd_t *tsd, arena_t *arena, arena_chunk_t *chunk)$/;"	f	file:
arena_ad_comp	deps/jemalloc/src/arena.c	/^arena_ad_comp(const arena_chunk_map_misc_t *a,$/;"	f
arena_alloc	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^struct arena_alloc {$/;"	s	file:
arena_alloc_junk_small	deps/jemalloc/include/jemalloc/internal/private_namespace.h	5;"	d
arena_alloc_junk_small	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	5;"	d
arena_alloc_junk_small	deps/jemalloc/src/arena.c	/^arena_alloc_junk_small(void *ptr, arena_bin_info_t *bin_info, bool zero)$/;"	f
arena_avail_insert	deps/jemalloc/src/arena.c	/^arena_avail_insert(arena_t *arena, arena_chunk_t *chunk, size_t pageind,$/;"	f	file:
arena_avail_links_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef struct arena_avail_links_s arena_avail_links_t;$/;"	t	typeref:struct:arena_avail_links_s
arena_avail_remove	deps/jemalloc/src/arena.c	/^arena_avail_remove(arena_t *arena, arena_chunk_t *chunk, size_t pageind,$/;"	f	file:
arena_basic_stats_merge	deps/jemalloc/include/jemalloc/internal/private_namespace.h	6;"	d
arena_basic_stats_merge	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	6;"	d
arena_basic_stats_merge	deps/jemalloc/src/arena.c	/^arena_basic_stats_merge(tsdn_t *tsdn, arena_t *arena, unsigned *nthreads,$/;"	f
arena_basic_stats_merge_locked	deps/jemalloc/src/arena.c	/^arena_basic_stats_merge_locked(arena_t *arena, unsigned *nthreads,$/;"	f	file:
arena_bin_index	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_bin_index(arena_t *arena, arena_bin_t *bin)$/;"	f
arena_bin_index	deps/jemalloc/include/jemalloc/internal/private_namespace.h	7;"	d
arena_bin_index	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	7;"	d
arena_bin_info	deps/jemalloc/include/jemalloc/internal/private_namespace.h	8;"	d
arena_bin_info	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	8;"	d
arena_bin_info	deps/jemalloc/src/arena.c	/^arena_bin_info_t	arena_bin_info[NBINS];$/;"	v
arena_bin_info_s	deps/jemalloc/include/jemalloc/internal/arena.h	/^struct arena_bin_info_s {$/;"	s
arena_bin_info_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef struct arena_bin_info_s arena_bin_info_t;$/;"	t	typeref:struct:arena_bin_info_s
arena_bin_lower_run	deps/jemalloc/src/arena.c	/^arena_bin_lower_run(arena_t *arena, arena_run_t *run, arena_bin_t *bin)$/;"	f	file:
arena_bin_malloc_hard	deps/jemalloc/src/arena.c	/^arena_bin_malloc_hard(tsdn_t *tsdn, arena_t *arena, arena_bin_t *bin)$/;"	f	file:
arena_bin_nonfull_run_get	deps/jemalloc/src/arena.c	/^arena_bin_nonfull_run_get(tsdn_t *tsdn, arena_t *arena, arena_bin_t *bin)$/;"	f	file:
arena_bin_nonfull_run_tryget	deps/jemalloc/src/arena.c	/^arena_bin_nonfull_run_tryget(arena_bin_t *bin)$/;"	f	file:
arena_bin_runs_insert	deps/jemalloc/src/arena.c	/^arena_bin_runs_insert(arena_bin_t *bin, arena_run_t *run)$/;"	f	file:
arena_bin_s	deps/jemalloc/include/jemalloc/internal/arena.h	/^struct arena_bin_s {$/;"	s
arena_bin_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef struct arena_bin_s arena_bin_t;$/;"	t	typeref:struct:arena_bin_s
arena_bind	deps/jemalloc/src/jemalloc.c	/^arena_bind(tsd_t *tsd, unsigned ind, bool internal)$/;"	f	file:
arena_bitselm_get_const	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_bitselm_get_const(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_bitselm_get_const	deps/jemalloc/include/jemalloc/internal/private_namespace.h	9;"	d
arena_bitselm_get_const	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	9;"	d
arena_bitselm_get_mutable	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_bitselm_get_mutable(arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_bitselm_get_mutable	deps/jemalloc/include/jemalloc/internal/private_namespace.h	10;"	d
arena_bitselm_get_mutable	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	10;"	d
arena_boot	deps/jemalloc/include/jemalloc/internal/private_namespace.h	11;"	d
arena_boot	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	11;"	d
arena_boot	deps/jemalloc/src/arena.c	/^arena_boot(void)$/;"	f
arena_choose	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^arena_choose(tsd_t *tsd, arena_t *arena)$/;"	f
arena_choose	deps/jemalloc/include/jemalloc/internal/private_namespace.h	12;"	d
arena_choose	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	12;"	d
arena_choose_hard	deps/jemalloc/include/jemalloc/internal/private_namespace.h	13;"	d
arena_choose_hard	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	13;"	d
arena_choose_hard	deps/jemalloc/src/jemalloc.c	/^arena_choose_hard(tsd_t *tsd, bool internal)$/;"	f
arena_choose_impl	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^arena_choose_impl(tsd_t *tsd, arena_t *arena, bool internal)$/;"	f
arena_choose_impl	deps/jemalloc/include/jemalloc/internal/private_namespace.h	14;"	d
arena_choose_impl	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	14;"	d
arena_chunk_alloc	deps/jemalloc/src/arena.c	/^arena_chunk_alloc(tsdn_t *tsdn, arena_t *arena)$/;"	f	file:
arena_chunk_alloc_huge	deps/jemalloc/include/jemalloc/internal/private_namespace.h	15;"	d
arena_chunk_alloc_huge	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	15;"	d
arena_chunk_alloc_huge	deps/jemalloc/src/arena.c	/^arena_chunk_alloc_huge(tsdn_t *tsdn, arena_t *arena, size_t usize,$/;"	f
arena_chunk_alloc_huge_hard	deps/jemalloc/src/arena.c	/^arena_chunk_alloc_huge_hard(tsdn_t *tsdn, arena_t *arena,$/;"	f	file:
arena_chunk_alloc_internal	deps/jemalloc/src/arena.c	/^arena_chunk_alloc_internal(tsdn_t *tsdn, arena_t *arena, bool *zero,$/;"	f	file:
arena_chunk_alloc_internal_hard	deps/jemalloc/src/arena.c	/^arena_chunk_alloc_internal_hard(tsdn_t *tsdn, arena_t *arena,$/;"	f	file:
arena_chunk_cache_maybe_insert	deps/jemalloc/include/jemalloc/internal/private_namespace.h	16;"	d
arena_chunk_cache_maybe_insert	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	16;"	d
arena_chunk_cache_maybe_insert	deps/jemalloc/src/arena.c	/^arena_chunk_cache_maybe_insert(arena_t *arena, extent_node_t *node, bool cache)$/;"	f
arena_chunk_cache_maybe_remove	deps/jemalloc/include/jemalloc/internal/private_namespace.h	17;"	d
arena_chunk_cache_maybe_remove	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	17;"	d
arena_chunk_cache_maybe_remove	deps/jemalloc/src/arena.c	/^arena_chunk_cache_maybe_remove(arena_t *arena, extent_node_t *node, bool dirty)$/;"	f
arena_chunk_dalloc	deps/jemalloc/src/arena.c	/^arena_chunk_dalloc(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *chunk)$/;"	f	file:
arena_chunk_dalloc_huge	deps/jemalloc/include/jemalloc/internal/private_namespace.h	18;"	d
arena_chunk_dalloc_huge	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	18;"	d
arena_chunk_dalloc_huge	deps/jemalloc/src/arena.c	/^arena_chunk_dalloc_huge(tsdn_t *tsdn, arena_t *arena, void *chunk, size_t usize,$/;"	f
arena_chunk_dirty_npages	deps/jemalloc/src/arena.c	/^arena_chunk_dirty_npages(const extent_node_t *node)$/;"	f	file:
arena_chunk_discard	deps/jemalloc/src/arena.c	/^arena_chunk_discard(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *chunk)$/;"	f	file:
arena_chunk_init_hard	deps/jemalloc/src/arena.c	/^arena_chunk_init_hard(tsdn_t *tsdn, arena_t *arena)$/;"	f	file:
arena_chunk_init_spare	deps/jemalloc/src/arena.c	/^arena_chunk_init_spare(arena_t *arena)$/;"	f	file:
arena_chunk_map_bits_s	deps/jemalloc/include/jemalloc/internal/arena.h	/^struct arena_chunk_map_bits_s {$/;"	s
arena_chunk_map_bits_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef struct arena_chunk_map_bits_s arena_chunk_map_bits_t;$/;"	t	typeref:struct:arena_chunk_map_bits_s
arena_chunk_map_misc_s	deps/jemalloc/include/jemalloc/internal/arena.h	/^struct arena_chunk_map_misc_s {$/;"	s
arena_chunk_map_misc_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef struct arena_chunk_map_misc_s arena_chunk_map_misc_t;$/;"	t	typeref:struct:arena_chunk_map_misc_s
arena_chunk_ralloc_huge_expand	deps/jemalloc/include/jemalloc/internal/private_namespace.h	19;"	d
arena_chunk_ralloc_huge_expand	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	19;"	d
arena_chunk_ralloc_huge_expand	deps/jemalloc/src/arena.c	/^arena_chunk_ralloc_huge_expand(tsdn_t *tsdn, arena_t *arena, void *chunk,$/;"	f
arena_chunk_ralloc_huge_expand_hard	deps/jemalloc/src/arena.c	/^arena_chunk_ralloc_huge_expand_hard(tsdn_t *tsdn, arena_t *arena,$/;"	f	file:
arena_chunk_ralloc_huge_shrink	deps/jemalloc/include/jemalloc/internal/private_namespace.h	20;"	d
arena_chunk_ralloc_huge_shrink	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	20;"	d
arena_chunk_ralloc_huge_shrink	deps/jemalloc/src/arena.c	/^arena_chunk_ralloc_huge_shrink(tsdn_t *tsdn, arena_t *arena, void *chunk,$/;"	f
arena_chunk_ralloc_huge_similar	deps/jemalloc/include/jemalloc/internal/private_namespace.h	21;"	d
arena_chunk_ralloc_huge_similar	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	21;"	d
arena_chunk_ralloc_huge_similar	deps/jemalloc/src/arena.c	/^arena_chunk_ralloc_huge_similar(tsdn_t *tsdn, arena_t *arena, void *chunk,$/;"	f
arena_chunk_register	deps/jemalloc/src/arena.c	/^arena_chunk_register(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *chunk,$/;"	f	file:
arena_chunk_s	deps/jemalloc/include/jemalloc/internal/arena.h	/^struct arena_chunk_s {$/;"	s
arena_chunk_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef struct arena_chunk_s arena_chunk_t;$/;"	t	typeref:struct:arena_chunk_s
arena_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	22;"	d
arena_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	22;"	d
arena_cleanup	deps/jemalloc/src/jemalloc.c	/^arena_cleanup(tsd_t *tsd)$/;"	f
arena_dalloc	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_dalloc(tsdn_t *tsdn, void *ptr, tcache_t *tcache, bool slow_path)$/;"	f
arena_dalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	23;"	d
arena_dalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	23;"	d
arena_dalloc_bin	deps/jemalloc/include/jemalloc/internal/private_namespace.h	24;"	d
arena_dalloc_bin	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	24;"	d
arena_dalloc_bin	deps/jemalloc/src/arena.c	/^arena_dalloc_bin(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *chunk, void *ptr,$/;"	f
arena_dalloc_bin_junked_locked	deps/jemalloc/include/jemalloc/internal/private_namespace.h	25;"	d
arena_dalloc_bin_junked_locked	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	25;"	d
arena_dalloc_bin_junked_locked	deps/jemalloc/src/arena.c	/^arena_dalloc_bin_junked_locked(tsdn_t *tsdn, arena_t *arena,$/;"	f
arena_dalloc_bin_locked_impl	deps/jemalloc/src/arena.c	/^arena_dalloc_bin_locked_impl(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *chunk,$/;"	f	file:
arena_dalloc_bin_run	deps/jemalloc/src/arena.c	/^arena_dalloc_bin_run(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *chunk,$/;"	f	file:
arena_dalloc_junk_large	deps/jemalloc/include/jemalloc/internal/private_namespace.h	26;"	d
arena_dalloc_junk_large	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	26;"	d
arena_dalloc_junk_large	deps/jemalloc/src/arena.c	/^arena_dalloc_junk_large(void *ptr, size_t usize)$/;"	f
arena_dalloc_junk_large	deps/jemalloc/src/arena.c	/^arena_dalloc_junk_large_t *arena_dalloc_junk_large =$/;"	v
arena_dalloc_junk_large	deps/jemalloc/src/arena.c	2990;"	d	file:
arena_dalloc_junk_large	deps/jemalloc/src/arena.c	2991;"	d	file:
arena_dalloc_junk_large	deps/jemalloc/src/arena.c	3001;"	d	file:
arena_dalloc_junk_large	deps/jemalloc/src/arena.c	3002;"	d	file:
arena_dalloc_junk_large_intercept	deps/jemalloc/test/unit/junk.c	/^arena_dalloc_junk_large_intercept(void *ptr, size_t usize)$/;"	f	file:
arena_dalloc_junk_large_orig	deps/jemalloc/test/unit/junk.c	/^static arena_dalloc_junk_large_t *arena_dalloc_junk_large_orig;$/;"	v	file:
arena_dalloc_junk_large_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef void (arena_dalloc_junk_large_t)(void *, size_t);$/;"	t
arena_dalloc_junk_small	deps/jemalloc/include/jemalloc/internal/private_namespace.h	27;"	d
arena_dalloc_junk_small	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	27;"	d
arena_dalloc_junk_small	deps/jemalloc/src/arena.c	/^arena_dalloc_junk_small(void *ptr, arena_bin_info_t *bin_info)$/;"	f
arena_dalloc_junk_small	deps/jemalloc/src/arena.c	/^arena_dalloc_junk_small_t *arena_dalloc_junk_small =$/;"	v
arena_dalloc_junk_small	deps/jemalloc/src/arena.c	2530;"	d	file:
arena_dalloc_junk_small	deps/jemalloc/src/arena.c	2531;"	d	file:
arena_dalloc_junk_small	deps/jemalloc/src/arena.c	2543;"	d	file:
arena_dalloc_junk_small	deps/jemalloc/src/arena.c	2544;"	d	file:
arena_dalloc_junk_small_intercept	deps/jemalloc/test/unit/junk.c	/^arena_dalloc_junk_small_intercept(void *ptr, arena_bin_info_t *bin_info)$/;"	f	file:
arena_dalloc_junk_small_orig	deps/jemalloc/test/unit/junk.c	/^static arena_dalloc_junk_small_t *arena_dalloc_junk_small_orig;$/;"	v	file:
arena_dalloc_junk_small_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef void (arena_dalloc_junk_small_t)(void *, arena_bin_info_t *);$/;"	t
arena_dalloc_large	deps/jemalloc/include/jemalloc/internal/private_namespace.h	28;"	d
arena_dalloc_large	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	28;"	d
arena_dalloc_large	deps/jemalloc/src/arena.c	/^arena_dalloc_large(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *chunk,$/;"	f
arena_dalloc_large_junked_locked	deps/jemalloc/include/jemalloc/internal/private_namespace.h	29;"	d
arena_dalloc_large_junked_locked	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	29;"	d
arena_dalloc_large_junked_locked	deps/jemalloc/src/arena.c	/^arena_dalloc_large_junked_locked(tsdn_t *tsdn, arena_t *arena,$/;"	f
arena_dalloc_large_locked_impl	deps/jemalloc/src/arena.c	/^arena_dalloc_large_locked_impl(tsdn_t *tsdn, arena_t *arena,$/;"	f	file:
arena_dalloc_small	deps/jemalloc/include/jemalloc/internal/private_namespace.h	30;"	d
arena_dalloc_small	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	30;"	d
arena_dalloc_small	deps/jemalloc/src/arena.c	/^arena_dalloc_small(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *chunk,$/;"	f
arena_decay_backlog_npages_limit	deps/jemalloc/src/arena.c	/^arena_decay_backlog_npages_limit(const arena_t *arena)$/;"	f	file:
arena_decay_backlog_update	deps/jemalloc/src/arena.c	/^arena_decay_backlog_update(arena_t *arena, uint64_t nadvance_u64)$/;"	f	file:
arena_decay_backlog_update_last	deps/jemalloc/src/arena.c	/^arena_decay_backlog_update_last(arena_t *arena)$/;"	f	file:
arena_decay_deadline_init	deps/jemalloc/src/arena.c	/^arena_decay_deadline_init(arena_t *arena)$/;"	f	file:
arena_decay_deadline_reached	deps/jemalloc/src/arena.c	/^arena_decay_deadline_reached(const arena_t *arena, const nstime_t *time)$/;"	f	file:
arena_decay_epoch_advance	deps/jemalloc/src/arena.c	/^arena_decay_epoch_advance(tsdn_t *tsdn, arena_t *arena, const nstime_t *time)$/;"	f	file:
arena_decay_epoch_advance_helper	deps/jemalloc/src/arena.c	/^arena_decay_epoch_advance_helper(arena_t *arena, const nstime_t *time)$/;"	f	file:
arena_decay_epoch_advance_purge	deps/jemalloc/src/arena.c	/^arena_decay_epoch_advance_purge(tsdn_t *tsdn, arena_t *arena)$/;"	f	file:
arena_decay_init	deps/jemalloc/src/arena.c	/^arena_decay_init(arena_t *arena, ssize_t decay_time)$/;"	f	file:
arena_decay_s	deps/jemalloc/include/jemalloc/internal/arena.h	/^struct arena_decay_s {$/;"	s
arena_decay_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef struct arena_decay_s arena_decay_t;$/;"	t	typeref:struct:arena_decay_s
arena_decay_tick	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_decay_tick(tsdn_t *tsdn, arena_t *arena)$/;"	f
arena_decay_tick	deps/jemalloc/include/jemalloc/internal/private_namespace.h	31;"	d
arena_decay_tick	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	31;"	d
arena_decay_ticks	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_decay_ticks(tsdn_t *tsdn, arena_t *arena, unsigned nticks)$/;"	f
arena_decay_ticks	deps/jemalloc/include/jemalloc/internal/private_namespace.h	32;"	d
arena_decay_ticks	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	32;"	d
arena_decay_time_default_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	33;"	d
arena_decay_time_default_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	33;"	d
arena_decay_time_default_get	deps/jemalloc/src/arena.c	/^arena_decay_time_default_get(void)$/;"	f
arena_decay_time_default_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	34;"	d
arena_decay_time_default_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	34;"	d
arena_decay_time_default_set	deps/jemalloc/src/arena.c	/^arena_decay_time_default_set(ssize_t decay_time)$/;"	f
arena_decay_time_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	35;"	d
arena_decay_time_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	35;"	d
arena_decay_time_get	deps/jemalloc/src/arena.c	/^arena_decay_time_get(tsdn_t *tsdn, arena_t *arena)$/;"	f
arena_decay_time_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	36;"	d
arena_decay_time_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	36;"	d
arena_decay_time_set	deps/jemalloc/src/arena.c	/^arena_decay_time_set(tsdn_t *tsdn, arena_t *arena, ssize_t decay_time)$/;"	f
arena_decay_time_valid	deps/jemalloc/src/arena.c	/^arena_decay_time_valid(ssize_t decay_time)$/;"	f	file:
arena_dirty_count	deps/jemalloc/src/arena.c	/^arena_dirty_count(arena_t *arena)$/;"	f	file:
arena_dissociate_bin_run	deps/jemalloc/src/arena.c	/^arena_dissociate_bin_run(arena_chunk_t *chunk, arena_run_t *run,$/;"	f	file:
arena_dss_prec_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	37;"	d
arena_dss_prec_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	37;"	d
arena_dss_prec_get	deps/jemalloc/src/arena.c	/^arena_dss_prec_get(tsdn_t *tsdn, arena_t *arena)$/;"	f
arena_dss_prec_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	38;"	d
arena_dss_prec_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	38;"	d
arena_dss_prec_set	deps/jemalloc/src/arena.c	/^arena_dss_prec_set(tsdn_t *tsdn, arena_t *arena, dss_prec_t dss_prec)$/;"	f
arena_extent_sn_next	deps/jemalloc/include/jemalloc/internal/private_namespace.h	39;"	d
arena_extent_sn_next	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	39;"	d
arena_extent_sn_next	deps/jemalloc/src/arena.c	/^arena_extent_sn_next(arena_t *arena)$/;"	f
arena_get	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^arena_get(tsdn_t *tsdn, unsigned ind, bool init_if_missing)$/;"	f
arena_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	40;"	d
arena_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	40;"	d
arena_huge_dalloc_stats_update	deps/jemalloc/src/arena.c	/^arena_huge_dalloc_stats_update(arena_t *arena, size_t usize)$/;"	f	file:
arena_huge_dalloc_stats_update_undo	deps/jemalloc/src/arena.c	/^arena_huge_dalloc_stats_update_undo(arena_t *arena, size_t usize)$/;"	f	file:
arena_huge_malloc_stats_update	deps/jemalloc/src/arena.c	/^arena_huge_malloc_stats_update(arena_t *arena, size_t usize)$/;"	f	file:
arena_huge_malloc_stats_update_undo	deps/jemalloc/src/arena.c	/^arena_huge_malloc_stats_update_undo(arena_t *arena, size_t usize)$/;"	f	file:
arena_huge_ralloc_stats_update	deps/jemalloc/src/arena.c	/^arena_huge_ralloc_stats_update(arena_t *arena, size_t oldsize, size_t usize)$/;"	f	file:
arena_huge_ralloc_stats_update_undo	deps/jemalloc/src/arena.c	/^arena_huge_ralloc_stats_update_undo(arena_t *arena, size_t oldsize,$/;"	f	file:
arena_huge_reset_stats_cancel	deps/jemalloc/src/arena.c	/^arena_huge_reset_stats_cancel(arena_t *arena, size_t usize)$/;"	f	file:
arena_i_chunk_hooks_ctl	deps/jemalloc/src/ctl.c	/^arena_i_chunk_hooks_ctl(tsd_t *tsd, const size_t *mib, size_t miblen,$/;"	f	file:
arena_i_decay_ctl	deps/jemalloc/src/ctl.c	/^arena_i_decay_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
arena_i_decay_time_ctl	deps/jemalloc/src/ctl.c	/^arena_i_decay_time_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
arena_i_dss_ctl	deps/jemalloc/src/ctl.c	/^arena_i_dss_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
arena_i_index	deps/jemalloc/src/ctl.c	/^arena_i_index(tsdn_t *tsdn, const size_t *mib, size_t miblen, size_t i)$/;"	f	file:
arena_i_lg_dirty_mult_ctl	deps/jemalloc/src/ctl.c	/^arena_i_lg_dirty_mult_ctl(tsd_t *tsd, const size_t *mib, size_t miblen,$/;"	f	file:
arena_i_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t arena_i_node[] = {$/;"	v	file:
arena_i_purge	deps/jemalloc/src/ctl.c	/^arena_i_purge(tsdn_t *tsdn, unsigned arena_ind, bool all)$/;"	f	file:
arena_i_purge_ctl	deps/jemalloc/src/ctl.c	/^arena_i_purge_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
arena_i_reset_ctl	deps/jemalloc/src/ctl.c	/^arena_i_reset_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
arena_ichoose	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^arena_ichoose(tsd_t *tsd, arena_t *arena)$/;"	f
arena_ichoose	deps/jemalloc/include/jemalloc/internal/private_namespace.h	41;"	d
arena_ichoose	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	41;"	d
arena_id	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_READ_HANDLER(arena_id)(void *ctx,$/;"	f	file:
arena_id	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_WRITE_HANDLER(arena_id)(void *ctx,$/;"	f	file:
arena_id	deps/pmdk/src/libpmemobj/pmalloc.c	/^static const struct ctl_argument CTL_ARG(arena_id) = CTL_ARG_LONG_LONG;$/;"	v	typeref:struct:CTL_ARG	file:
arena_ind	deps/jemalloc/test/integration/xallocx.c	/^arena_ind(void)$/;"	f	file:
arena_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	42;"	d
arena_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	42;"	d
arena_init	deps/jemalloc/src/jemalloc.c	/^arena_init(tsdn_t *tsdn, unsigned ind)$/;"	f
arena_init_locked	deps/jemalloc/src/jemalloc.c	/^arena_init_locked(tsdn_t *tsdn, unsigned ind)$/;"	f	file:
arena_lg_dirty_mult_default_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	43;"	d
arena_lg_dirty_mult_default_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	43;"	d
arena_lg_dirty_mult_default_get	deps/jemalloc/src/arena.c	/^arena_lg_dirty_mult_default_get(void)$/;"	f
arena_lg_dirty_mult_default_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	44;"	d
arena_lg_dirty_mult_default_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	44;"	d
arena_lg_dirty_mult_default_set	deps/jemalloc/src/arena.c	/^arena_lg_dirty_mult_default_set(ssize_t lg_dirty_mult)$/;"	f
arena_lg_dirty_mult_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	45;"	d
arena_lg_dirty_mult_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	45;"	d
arena_lg_dirty_mult_get	deps/jemalloc/src/arena.c	/^arena_lg_dirty_mult_get(tsdn_t *tsdn, arena_t *arena)$/;"	f
arena_lg_dirty_mult_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	46;"	d
arena_lg_dirty_mult_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	46;"	d
arena_lg_dirty_mult_set	deps/jemalloc/src/arena.c	/^arena_lg_dirty_mult_set(tsdn_t *tsdn, arena_t *arena, ssize_t lg_dirty_mult)$/;"	f
arena_lg_dirty_mult_valid	deps/jemalloc/src/arena.c	/^arena_lg_dirty_mult_valid(ssize_t lg_dirty_mult)$/;"	f	file:
arena_malloc	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_malloc(tsdn_t *tsdn, arena_t *arena, size_t size, szind_t ind, bool zero,$/;"	f
arena_malloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	47;"	d
arena_malloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	47;"	d
arena_malloc_hard	deps/jemalloc/include/jemalloc/internal/private_namespace.h	48;"	d
arena_malloc_hard	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	48;"	d
arena_malloc_hard	deps/jemalloc/src/arena.c	/^arena_malloc_hard(tsdn_t *tsdn, arena_t *arena, size_t size, szind_t ind,$/;"	f
arena_malloc_large	deps/jemalloc/include/jemalloc/internal/private_namespace.h	49;"	d
arena_malloc_large	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	49;"	d
arena_malloc_large	deps/jemalloc/src/arena.c	/^arena_malloc_large(tsdn_t *tsdn, arena_t *arena, szind_t binind, bool zero)$/;"	f
arena_malloc_small	deps/jemalloc/src/arena.c	/^arena_malloc_small(tsdn_t *tsdn, arena_t *arena, szind_t binind, bool zero)$/;"	f	file:
arena_map_flog_check	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^arena_map_flog_check(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
arena_map_flog_fix	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^arena_map_flog_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question,$/;"	f	file:
arena_mapbits_allocated_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_allocated_get(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_mapbits_allocated_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	50;"	d
arena_mapbits_allocated_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	50;"	d
arena_mapbits_binind_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_binind_get(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_mapbits_binind_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	51;"	d
arena_mapbits_binind_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	51;"	d
arena_mapbits_decommitted_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_decommitted_get(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_mapbits_decommitted_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	52;"	d
arena_mapbits_decommitted_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	52;"	d
arena_mapbits_dirty_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_dirty_get(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_mapbits_dirty_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	53;"	d
arena_mapbits_dirty_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	53;"	d
arena_mapbits_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_get(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_mapbits_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	54;"	d
arena_mapbits_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	54;"	d
arena_mapbits_internal_set	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_internal_set(arena_chunk_t *chunk, size_t pageind, size_t flags)$/;"	f
arena_mapbits_internal_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	55;"	d
arena_mapbits_internal_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	55;"	d
arena_mapbits_large_binind_set	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_large_binind_set(arena_chunk_t *chunk, size_t pageind,$/;"	f
arena_mapbits_large_binind_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	56;"	d
arena_mapbits_large_binind_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	56;"	d
arena_mapbits_large_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_large_get(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_mapbits_large_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	57;"	d
arena_mapbits_large_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	57;"	d
arena_mapbits_large_set	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_large_set(arena_chunk_t *chunk, size_t pageind, size_t size,$/;"	f
arena_mapbits_large_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	58;"	d
arena_mapbits_large_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	58;"	d
arena_mapbits_large_size_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_large_size_get(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_mapbits_large_size_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	59;"	d
arena_mapbits_large_size_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	59;"	d
arena_mapbits_size_decode	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_size_decode(size_t mapbits)$/;"	f
arena_mapbits_size_decode	deps/jemalloc/include/jemalloc/internal/private_namespace.h	60;"	d
arena_mapbits_size_decode	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	60;"	d
arena_mapbits_size_encode	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_size_encode(size_t size)$/;"	f
arena_mapbits_size_encode	deps/jemalloc/include/jemalloc/internal/private_namespace.h	61;"	d
arena_mapbits_size_encode	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	61;"	d
arena_mapbits_small_runind_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_small_runind_get(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_mapbits_small_runind_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	62;"	d
arena_mapbits_small_runind_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	62;"	d
arena_mapbits_small_set	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_small_set(arena_chunk_t *chunk, size_t pageind, size_t runind,$/;"	f
arena_mapbits_small_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	63;"	d
arena_mapbits_small_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	63;"	d
arena_mapbits_unallocated_set	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_unallocated_set(arena_chunk_t *chunk, size_t pageind, size_t size,$/;"	f
arena_mapbits_unallocated_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	64;"	d
arena_mapbits_unallocated_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	64;"	d
arena_mapbits_unallocated_size_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_unallocated_size_get(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_mapbits_unallocated_size_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	65;"	d
arena_mapbits_unallocated_size_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	65;"	d
arena_mapbits_unallocated_size_set	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_unallocated_size_set(arena_chunk_t *chunk, size_t pageind,$/;"	f
arena_mapbits_unallocated_size_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	66;"	d
arena_mapbits_unallocated_size_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	66;"	d
arena_mapbits_unzeroed_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbits_unzeroed_get(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_mapbits_unzeroed_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	67;"	d
arena_mapbits_unzeroed_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	67;"	d
arena_mapbitsp_get_const	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbitsp_get_const(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_mapbitsp_get_const	deps/jemalloc/include/jemalloc/internal/private_namespace.h	68;"	d
arena_mapbitsp_get_const	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	68;"	d
arena_mapbitsp_get_mutable	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbitsp_get_mutable(arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_mapbitsp_get_mutable	deps/jemalloc/include/jemalloc/internal/private_namespace.h	69;"	d
arena_mapbitsp_get_mutable	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	69;"	d
arena_mapbitsp_read	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbitsp_read(const size_t *mapbitsp)$/;"	f
arena_mapbitsp_read	deps/jemalloc/include/jemalloc/internal/private_namespace.h	70;"	d
arena_mapbitsp_read	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	70;"	d
arena_mapbitsp_write	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_mapbitsp_write(size_t *mapbitsp, size_t mapbits)$/;"	f
arena_mapbitsp_write	deps/jemalloc/include/jemalloc/internal/private_namespace.h	71;"	d
arena_mapbitsp_write	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	71;"	d
arena_maxrun	deps/jemalloc/include/jemalloc/internal/private_namespace.h	72;"	d
arena_maxrun	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	72;"	d
arena_maxrun	deps/jemalloc/src/arena.c	/^size_t		arena_maxrun; \/* Max run size for arenas. *\/$/;"	v
arena_maybe_purge	deps/jemalloc/include/jemalloc/internal/private_namespace.h	73;"	d
arena_maybe_purge	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	73;"	d
arena_maybe_purge	deps/jemalloc/src/arena.c	/^arena_maybe_purge(tsdn_t *tsdn, arena_t *arena)$/;"	f
arena_maybe_purge_decay	deps/jemalloc/src/arena.c	/^arena_maybe_purge_decay(tsdn_t *tsdn, arena_t *arena)$/;"	f	file:
arena_maybe_purge_ratio	deps/jemalloc/src/arena.c	/^arena_maybe_purge_ratio(tsdn_t *tsdn, arena_t *arena)$/;"	f	file:
arena_metadata_allocated_add	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_metadata_allocated_add(arena_t *arena, size_t size)$/;"	f
arena_metadata_allocated_add	deps/jemalloc/include/jemalloc/internal/private_namespace.h	74;"	d
arena_metadata_allocated_add	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	74;"	d
arena_metadata_allocated_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_metadata_allocated_get(arena_t *arena)$/;"	f
arena_metadata_allocated_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	75;"	d
arena_metadata_allocated_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	75;"	d
arena_metadata_allocated_sub	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_metadata_allocated_sub(arena_t *arena, size_t size)$/;"	f
arena_metadata_allocated_sub	deps/jemalloc/include/jemalloc/internal/private_namespace.h	76;"	d
arena_metadata_allocated_sub	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	76;"	d
arena_migrate	deps/jemalloc/include/jemalloc/internal/private_namespace.h	77;"	d
arena_migrate	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	77;"	d
arena_migrate	deps/jemalloc/src/jemalloc.c	/^arena_migrate(tsd_t *tsd, unsigned oldind, unsigned newind)$/;"	f
arena_miscelm_extent_get	deps/jemalloc/src/arena.c	/^arena_miscelm_extent_get(const arena_chunk_map_misc_t *miscelm)$/;"	f
arena_miscelm_get_const	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_miscelm_get_const(const arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_miscelm_get_const	deps/jemalloc/include/jemalloc/internal/private_namespace.h	78;"	d
arena_miscelm_get_const	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	78;"	d
arena_miscelm_get_mutable	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_miscelm_get_mutable(arena_chunk_t *chunk, size_t pageind)$/;"	f
arena_miscelm_get_mutable	deps/jemalloc/include/jemalloc/internal/private_namespace.h	79;"	d
arena_miscelm_get_mutable	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	79;"	d
arena_miscelm_size_get	deps/jemalloc/src/arena.c	/^arena_miscelm_size_get(const arena_chunk_map_misc_t *miscelm)$/;"	f
arena_miscelm_to_pageind	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_miscelm_to_pageind(const arena_chunk_map_misc_t *miscelm)$/;"	f
arena_miscelm_to_pageind	deps/jemalloc/include/jemalloc/internal/private_namespace.h	80;"	d
arena_miscelm_to_pageind	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	80;"	d
arena_miscelm_to_rpages	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_miscelm_to_rpages(const arena_chunk_map_misc_t *miscelm)$/;"	f
arena_miscelm_to_rpages	deps/jemalloc/include/jemalloc/internal/private_namespace.h	81;"	d
arena_miscelm_to_rpages	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	81;"	d
arena_nactive_add	deps/jemalloc/src/arena.c	/^arena_nactive_add(arena_t *arena, size_t add_pages)$/;"	f	file:
arena_nactive_sub	deps/jemalloc/src/arena.c	/^arena_nactive_sub(arena_t *arena, size_t sub_pages)$/;"	f	file:
arena_new	deps/jemalloc/include/jemalloc/internal/private_namespace.h	82;"	d
arena_new	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	82;"	d
arena_new	deps/jemalloc/src/arena.c	/^arena_new(tsdn_t *tsdn, unsigned ind)$/;"	f
arena_node	deps/jemalloc/src/ctl.c	/^static const ctl_indexed_node_t arena_node[] = {$/;"	v	file:
arena_node_alloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	83;"	d
arena_node_alloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	83;"	d
arena_node_alloc	deps/jemalloc/src/arena.c	/^arena_node_alloc(tsdn_t *tsdn, arena_t *arena)$/;"	f
arena_node_dalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	84;"	d
arena_node_dalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	84;"	d
arena_node_dalloc	deps/jemalloc/src/arena.c	/^arena_node_dalloc(tsdn_t *tsdn, arena_t *arena, extent_node_t *node)$/;"	f
arena_nthreads_dec	deps/jemalloc/include/jemalloc/internal/private_namespace.h	85;"	d
arena_nthreads_dec	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	85;"	d
arena_nthreads_dec	deps/jemalloc/src/arena.c	/^arena_nthreads_dec(arena_t *arena, bool internal)$/;"	f
arena_nthreads_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	86;"	d
arena_nthreads_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	86;"	d
arena_nthreads_get	deps/jemalloc/src/arena.c	/^arena_nthreads_get(arena_t *arena, bool internal)$/;"	f
arena_nthreads_inc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	87;"	d
arena_nthreads_inc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	87;"	d
arena_nthreads_inc	deps/jemalloc/src/arena.c	/^arena_nthreads_inc(arena_t *arena, bool internal)$/;"	f
arena_offset	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	uint64_t arena_offset;$/;"	m	struct:pmemspoil	file:
arena_palloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	88;"	d
arena_palloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	88;"	d
arena_palloc	deps/jemalloc/src/arena.c	/^arena_palloc(tsdn_t *tsdn, arena_t *arena, size_t usize, size_t alignment,$/;"	f
arena_palloc_large	deps/jemalloc/src/arena.c	/^arena_palloc_large(tsdn_t *tsdn, arena_t *arena, size_t usize, size_t alignment,$/;"	f	file:
arena_postfork_child	deps/jemalloc/include/jemalloc/internal/private_namespace.h	89;"	d
arena_postfork_child	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	89;"	d
arena_postfork_child	deps/jemalloc/src/arena.c	/^arena_postfork_child(tsdn_t *tsdn, arena_t *arena)$/;"	f
arena_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_namespace.h	90;"	d
arena_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	90;"	d
arena_postfork_parent	deps/jemalloc/src/arena.c	/^arena_postfork_parent(tsdn_t *tsdn, arena_t *arena)$/;"	f
arena_prefork0	deps/jemalloc/include/jemalloc/internal/private_namespace.h	91;"	d
arena_prefork0	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	91;"	d
arena_prefork0	deps/jemalloc/src/arena.c	/^arena_prefork0(tsdn_t *tsdn, arena_t *arena)$/;"	f
arena_prefork1	deps/jemalloc/include/jemalloc/internal/private_namespace.h	92;"	d
arena_prefork1	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	92;"	d
arena_prefork1	deps/jemalloc/src/arena.c	/^arena_prefork1(tsdn_t *tsdn, arena_t *arena)$/;"	f
arena_prefork2	deps/jemalloc/include/jemalloc/internal/private_namespace.h	93;"	d
arena_prefork2	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	93;"	d
arena_prefork2	deps/jemalloc/src/arena.c	/^arena_prefork2(tsdn_t *tsdn, arena_t *arena)$/;"	f
arena_prefork3	deps/jemalloc/include/jemalloc/internal/private_namespace.h	94;"	d
arena_prefork3	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	94;"	d
arena_prefork3	deps/jemalloc/src/arena.c	/^arena_prefork3(tsdn_t *tsdn, arena_t *arena)$/;"	f
arena_prof_accum	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_prof_accum(tsdn_t *tsdn, arena_t *arena, uint64_t accumbytes)$/;"	f
arena_prof_accum	deps/jemalloc/include/jemalloc/internal/private_namespace.h	95;"	d
arena_prof_accum	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	95;"	d
arena_prof_accum_impl	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_prof_accum_impl(arena_t *arena, uint64_t accumbytes)$/;"	f
arena_prof_accum_impl	deps/jemalloc/include/jemalloc/internal/private_namespace.h	96;"	d
arena_prof_accum_impl	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	96;"	d
arena_prof_accum_locked	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_prof_accum_locked(arena_t *arena, uint64_t accumbytes)$/;"	f
arena_prof_accum_locked	deps/jemalloc/include/jemalloc/internal/private_namespace.h	97;"	d
arena_prof_accum_locked	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	97;"	d
arena_prof_promoted	deps/jemalloc/include/jemalloc/internal/private_namespace.h	98;"	d
arena_prof_promoted	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	98;"	d
arena_prof_promoted	deps/jemalloc/src/arena.c	/^arena_prof_promoted(tsdn_t *tsdn, const void *ptr, size_t size)$/;"	f
arena_prof_tctx_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_prof_tctx_get(tsdn_t *tsdn, const void *ptr)$/;"	f
arena_prof_tctx_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	99;"	d
arena_prof_tctx_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	99;"	d
arena_prof_tctx_reset	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_prof_tctx_reset(tsdn_t *tsdn, const void *ptr, size_t usize,$/;"	f
arena_prof_tctx_reset	deps/jemalloc/include/jemalloc/internal/private_namespace.h	100;"	d
arena_prof_tctx_reset	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	100;"	d
arena_prof_tctx_set	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_prof_tctx_set(tsdn_t *tsdn, const void *ptr, size_t usize,$/;"	f
arena_prof_tctx_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	101;"	d
arena_prof_tctx_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	101;"	d
arena_ptr_small_binind_get	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_ptr_small_binind_get(const void *ptr, size_t mapbits)$/;"	f
arena_ptr_small_binind_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	102;"	d
arena_ptr_small_binind_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	102;"	d
arena_purge	deps/jemalloc/include/jemalloc/internal/private_namespace.h	103;"	d
arena_purge	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	103;"	d
arena_purge	deps/jemalloc/src/arena.c	/^arena_purge(tsdn_t *tsdn, arena_t *arena, bool all)$/;"	f
arena_purge_stashed	deps/jemalloc/src/arena.c	/^arena_purge_stashed(tsdn_t *tsdn, arena_t *arena, chunk_hooks_t *chunk_hooks,$/;"	f	file:
arena_purge_to_limit	deps/jemalloc/src/arena.c	/^arena_purge_to_limit(tsdn_t *tsdn, arena_t *arena, size_t ndirty_limit)$/;"	f	file:
arena_quarantine_junk_small	deps/jemalloc/include/jemalloc/internal/private_namespace.h	104;"	d
arena_quarantine_junk_small	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	104;"	d
arena_quarantine_junk_small	deps/jemalloc/src/arena.c	/^arena_quarantine_junk_small(void *ptr, size_t usize)$/;"	f
arena_ralloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	105;"	d
arena_ralloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	105;"	d
arena_ralloc	deps/jemalloc/src/arena.c	/^arena_ralloc(tsd_t *tsd, arena_t *arena, void *ptr, size_t oldsize, size_t size,$/;"	f
arena_ralloc_junk_large	deps/jemalloc/include/jemalloc/internal/private_namespace.h	106;"	d
arena_ralloc_junk_large	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	106;"	d
arena_ralloc_junk_large	deps/jemalloc/src/arena.c	/^arena_ralloc_junk_large(void *ptr, size_t old_usize, size_t usize)$/;"	f	file:
arena_ralloc_junk_large	deps/jemalloc/src/arena.c	/^arena_ralloc_junk_large_t *arena_ralloc_junk_large =$/;"	v
arena_ralloc_junk_large	deps/jemalloc/src/arena.c	3192;"	d	file:
arena_ralloc_junk_large	deps/jemalloc/src/arena.c	3193;"	d	file:
arena_ralloc_junk_large	deps/jemalloc/src/arena.c	3205;"	d	file:
arena_ralloc_junk_large	deps/jemalloc/src/arena.c	3206;"	d	file:
arena_ralloc_junk_large_intercept	deps/jemalloc/test/unit/junk.c	/^arena_ralloc_junk_large_intercept(void *ptr, size_t old_usize, size_t usize)$/;"	f	file:
arena_ralloc_junk_large_orig	deps/jemalloc/test/unit/junk.c	/^arena_ralloc_junk_large_t *arena_ralloc_junk_large_orig;$/;"	v
arena_ralloc_junk_large_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef void (arena_ralloc_junk_large_t)(void *, size_t, size_t);$/;"	t
arena_ralloc_large	deps/jemalloc/src/arena.c	/^arena_ralloc_large(tsdn_t *tsdn, void *ptr, size_t oldsize, size_t usize_min,$/;"	f	file:
arena_ralloc_large_grow	deps/jemalloc/src/arena.c	/^arena_ralloc_large_grow(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *chunk,$/;"	f	file:
arena_ralloc_large_shrink	deps/jemalloc/src/arena.c	/^arena_ralloc_large_shrink(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *chunk,$/;"	f	file:
arena_ralloc_move_helper	deps/jemalloc/src/arena.c	/^arena_ralloc_move_helper(tsdn_t *tsdn, arena_t *arena, size_t usize,$/;"	f	file:
arena_ralloc_no_move	deps/jemalloc/include/jemalloc/internal/private_namespace.h	107;"	d
arena_ralloc_no_move	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	107;"	d
arena_ralloc_no_move	deps/jemalloc/src/arena.c	/^arena_ralloc_no_move(tsdn_t *tsdn, void *ptr, size_t oldsize, size_t size,$/;"	f
arena_rd_to_miscelm	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_rd_to_miscelm(arena_runs_dirty_link_t *rd)$/;"	f
arena_rd_to_miscelm	deps/jemalloc/include/jemalloc/internal/private_namespace.h	108;"	d
arena_rd_to_miscelm	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	108;"	d
arena_redzone_corruption	deps/jemalloc/include/jemalloc/internal/private_namespace.h	109;"	d
arena_redzone_corruption	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	109;"	d
arena_redzone_corruption	deps/jemalloc/src/arena.c	/^arena_redzone_corruption(void *ptr, size_t usize, bool after,$/;"	f	file:
arena_redzone_corruption	deps/jemalloc/src/arena.c	/^arena_redzone_corruption_t *arena_redzone_corruption =$/;"	v
arena_redzone_corruption	deps/jemalloc/src/arena.c	2474;"	d	file:
arena_redzone_corruption	deps/jemalloc/src/arena.c	2475;"	d	file:
arena_redzone_corruption	deps/jemalloc/src/arena.c	2487;"	d	file:
arena_redzone_corruption	deps/jemalloc/src/arena.c	2488;"	d	file:
arena_redzone_corruption_replacement	deps/jemalloc/test/unit/junk.c	/^arena_redzone_corruption_replacement(void *ptr, size_t usize, bool after,$/;"	f	file:
arena_redzone_corruption_replacement	deps/jemalloc/test/unit/quarantine.c	/^arena_redzone_corruption_replacement(void *ptr, size_t usize, bool after,$/;"	f	file:
arena_redzone_corruption_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef void (arena_redzone_corruption_t)(void *, size_t, bool, size_t,$/;"	t
arena_redzones_validate	deps/jemalloc/src/arena.c	/^arena_redzones_validate(void *ptr, arena_bin_info_t *bin_info, bool reset)$/;"	f	file:
arena_reset	deps/jemalloc/include/jemalloc/internal/private_namespace.h	110;"	d
arena_reset	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	110;"	d
arena_reset	deps/jemalloc/src/arena.c	/^arena_reset(tsd_t *tsd, arena_t *arena)$/;"	f
arena_reset_mallctl	deps/jemalloc/test/unit/pack.c	/^arena_reset_mallctl(unsigned arena_ind)$/;"	f	file:
arena_run_alloc_large	deps/jemalloc/src/arena.c	/^arena_run_alloc_large(tsdn_t *tsdn, arena_t *arena, size_t size, bool zero)$/;"	f	file:
arena_run_alloc_large_helper	deps/jemalloc/src/arena.c	/^arena_run_alloc_large_helper(arena_t *arena, size_t size, bool zero)$/;"	f	file:
arena_run_alloc_small	deps/jemalloc/src/arena.c	/^arena_run_alloc_small(tsdn_t *tsdn, arena_t *arena, size_t size, szind_t binind)$/;"	f	file:
arena_run_alloc_small_helper	deps/jemalloc/src/arena.c	/^arena_run_alloc_small_helper(arena_t *arena, size_t size, szind_t binind)$/;"	f	file:
arena_run_coalesce	deps/jemalloc/src/arena.c	/^arena_run_coalesce(arena_t *arena, arena_chunk_t *chunk, size_t *p_size,$/;"	f	file:
arena_run_dalloc	deps/jemalloc/src/arena.c	/^arena_run_dalloc(tsdn_t *tsdn, arena_t *arena, arena_run_t *run, bool dirty,$/;"	f	file:
arena_run_dirty_insert	deps/jemalloc/src/arena.c	/^arena_run_dirty_insert(arena_t *arena, arena_chunk_t *chunk, size_t pageind,$/;"	f	file:
arena_run_dirty_remove	deps/jemalloc/src/arena.c	/^arena_run_dirty_remove(arena_t *arena, arena_chunk_t *chunk, size_t pageind,$/;"	f	file:
arena_run_first_best_fit	deps/jemalloc/src/arena.c	/^arena_run_first_best_fit(arena_t *arena, size_t size)$/;"	f	file:
arena_run_heap_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef ph(arena_chunk_map_misc_t) arena_run_heap_t;$/;"	t
arena_run_init_large	deps/jemalloc/src/arena.c	/^arena_run_init_large(arena_t *arena, arena_run_t *run, size_t size, bool zero)$/;"	f	file:
arena_run_page_mark_zeroed	deps/jemalloc/src/arena.c	/^arena_run_page_mark_zeroed(arena_chunk_t *chunk, size_t run_ind)$/;"	f
arena_run_page_validate_zeroed	deps/jemalloc/src/arena.c	/^arena_run_page_validate_zeroed(arena_chunk_t *chunk, size_t run_ind)$/;"	f
arena_run_reg_alloc	deps/jemalloc/src/arena.c	/^arena_run_reg_alloc(arena_run_t *run, arena_bin_info_t *bin_info)$/;"	f
arena_run_reg_dalloc	deps/jemalloc/src/arena.c	/^arena_run_reg_dalloc(arena_run_t *run, void *ptr)$/;"	f
arena_run_regind	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_run_regind(arena_run_t *run, arena_bin_info_t *bin_info, const void *ptr)$/;"	f
arena_run_regind	deps/jemalloc/include/jemalloc/internal/private_namespace.h	111;"	d
arena_run_regind	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	111;"	d
arena_run_s	deps/jemalloc/include/jemalloc/internal/arena.h	/^struct arena_run_s {$/;"	s
arena_run_size_get	deps/jemalloc/src/arena.c	/^arena_run_size_get(arena_t *arena, arena_chunk_t *chunk, arena_run_t *run,$/;"	f	file:
arena_run_split_large	deps/jemalloc/src/arena.c	/^arena_run_split_large(arena_t *arena, arena_run_t *run, size_t size, bool zero)$/;"	f	file:
arena_run_split_large_helper	deps/jemalloc/src/arena.c	/^arena_run_split_large_helper(arena_t *arena, arena_run_t *run, size_t size,$/;"	f	file:
arena_run_split_remove	deps/jemalloc/src/arena.c	/^arena_run_split_remove(arena_t *arena, arena_chunk_t *chunk, size_t run_ind,$/;"	f	file:
arena_run_split_small	deps/jemalloc/src/arena.c	/^arena_run_split_small(arena_t *arena, arena_run_t *run, size_t size,$/;"	f	file:
arena_run_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef struct arena_run_s arena_run_t;$/;"	t	typeref:struct:arena_run_s
arena_run_to_miscelm	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_run_to_miscelm(arena_run_t *run)$/;"	f
arena_run_to_miscelm	deps/jemalloc/include/jemalloc/internal/private_namespace.h	112;"	d
arena_run_to_miscelm	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	112;"	d
arena_run_trim_head	deps/jemalloc/src/arena.c	/^arena_run_trim_head(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *chunk,$/;"	f	file:
arena_run_trim_tail	deps/jemalloc/src/arena.c	/^arena_run_trim_tail(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *chunk,$/;"	f	file:
arena_run_zero	deps/jemalloc/src/arena.c	/^arena_run_zero(arena_chunk_t *chunk, size_t run_ind, size_t npages)$/;"	f
arena_runs_dirty_link_s	deps/jemalloc/include/jemalloc/internal/arena.h	/^struct arena_runs_dirty_link_s {$/;"	s
arena_runs_dirty_link_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef struct arena_runs_dirty_link_s arena_runs_dirty_link_t;$/;"	t	typeref:struct:arena_runs_dirty_link_s
arena_s	deps/jemalloc/include/jemalloc/internal/arena.h	/^struct arena_s {$/;"	s
arena_salloc	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_salloc(tsdn_t *tsdn, const void *ptr, bool demote)$/;"	f
arena_salloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	113;"	d
arena_salloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	113;"	d
arena_sdalloc	deps/jemalloc/include/jemalloc/internal/arena.h	/^arena_sdalloc(tsdn_t *tsdn, void *ptr, size_t size, tcache_t *tcache,$/;"	f
arena_sdalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	114;"	d
arena_sdalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	114;"	d
arena_set	deps/jemalloc/src/jemalloc.c	/^arena_set(unsigned ind, arena_t *arena)$/;"	f	file:
arena_setf	deps/pmdk/src/libpmemblk/btt.c	/^arena_setf(struct btt *bttp, struct arena *arenap, unsigned lane, uint32_t setf)$/;"	f	file:
arena_sn_comp	deps/jemalloc/src/arena.c	/^arena_sn_comp(const arena_chunk_map_misc_t *a, const arena_chunk_map_misc_t *b)$/;"	f
arena_snad_comp	deps/jemalloc/src/arena.c	/^arena_snad_comp(const arena_chunk_map_misc_t *a,$/;"	f
arena_spare_discard	deps/jemalloc/src/arena.c	/^arena_spare_discard(tsdn_t *tsdn, arena_t *arena, arena_chunk_t *spare)$/;"	f	file:
arena_stash_dirty	deps/jemalloc/src/arena.c	/^arena_stash_dirty(tsdn_t *tsdn, arena_t *arena, chunk_hooks_t *chunk_hooks,$/;"	f	file:
arena_stats_merge	deps/jemalloc/include/jemalloc/internal/private_namespace.h	115;"	d
arena_stats_merge	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	115;"	d
arena_stats_merge	deps/jemalloc/src/arena.c	/^arena_stats_merge(tsdn_t *tsdn, arena_t *arena, unsigned *nthreads,$/;"	f
arena_stats_s	deps/jemalloc/include/jemalloc/internal/stats.h	/^struct arena_stats_s {$/;"	s
arena_stats_t	deps/jemalloc/include/jemalloc/internal/stats.h	/^typedef struct arena_stats_s arena_stats_t;$/;"	t	typeref:struct:arena_stats_s
arena_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef struct arena_s arena_t;$/;"	t	typeref:struct:arena_s
arena_tcache_fill_small	deps/jemalloc/include/jemalloc/internal/private_namespace.h	116;"	d
arena_tcache_fill_small	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	116;"	d
arena_tcache_fill_small	deps/jemalloc/src/arena.c	/^arena_tcache_fill_small(tsdn_t *tsdn, arena_t *arena, tcache_bin_t *tbin,$/;"	f
arena_tdata_get	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^arena_tdata_get(tsd_t *tsd, unsigned ind, bool refresh_if_missing)$/;"	f
arena_tdata_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	117;"	d
arena_tdata_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	117;"	d
arena_tdata_get_hard	deps/jemalloc/include/jemalloc/internal/private_namespace.h	118;"	d
arena_tdata_get_hard	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	118;"	d
arena_tdata_get_hard	deps/jemalloc/src/jemalloc.c	/^arena_tdata_get_hard(tsd_t *tsd, unsigned ind)$/;"	f
arena_tdata_s	deps/jemalloc/include/jemalloc/internal/arena.h	/^struct arena_tdata_s {$/;"	s
arena_tdata_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef struct arena_tdata_s arena_tdata_t;$/;"	t	typeref:struct:arena_tdata_s
arena_unbind	deps/jemalloc/src/jemalloc.c	/^arena_unbind(tsd_t *tsd, unsigned ind, bool internal)$/;"	f	file:
arena_unstash_purged	deps/jemalloc/src/arena.c	/^arena_unstash_purged(tsdn_t *tsdn, arena_t *arena, chunk_hooks_t *chunk_hooks,$/;"	f	file:
arenap	deps/pmdk/src/libpmempool/check_util.h	/^	struct arena *arenap;$/;"	m	struct:__anon87	typeref:struct:__anon87::arena
arenas	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	ctl_arena_stats_t	*arenas;	\/* (narenas + 1) elements. *\/$/;"	m	struct:ctl_stats_s
arenas	deps/jemalloc/include/jemalloc/internal/private_namespace.h	119;"	d
arenas	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	119;"	d
arenas	deps/jemalloc/src/jemalloc.c	/^arena_t			**arenas;$/;"	v
arenas	deps/pmdk/src/libpmemblk/btt.c	/^	} *arenas;$/;"	m	struct:btt	typeref:struct:btt::arena	file:
arenas	deps/pmdk/src/libpmemobj/heap.c	/^	struct arenas *arenas;$/;"	m	struct:arena	typeref:struct:arena::arenas	file:
arenas	deps/pmdk/src/libpmemobj/heap.c	/^	struct arenas arenas;$/;"	m	struct:heap_rt	typeref:struct:heap_rt::arenas	file:
arenas	deps/pmdk/src/libpmemobj/heap.c	/^struct arenas {$/;"	s	file:
arenas	deps/pmdk/src/libpmempool/pool.h	/^	PMDK_TAILQ_HEAD(arenashead, arena) arenas;$/;"	m	struct:pool_data
arenas_bin_i_index	deps/jemalloc/src/ctl.c	/^arenas_bin_i_index(tsdn_t *tsdn, const size_t *mib, size_t miblen, size_t i)$/;"	f	file:
arenas_bin_i_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t arenas_bin_i_node[] = {$/;"	v	file:
arenas_bin_node	deps/jemalloc/src/ctl.c	/^static const ctl_indexed_node_t arenas_bin_node[] = {$/;"	v	file:
arenas_decay_time_ctl	deps/jemalloc/src/ctl.c	/^arenas_decay_time_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
arenas_extend_ctl	deps/jemalloc/src/ctl.c	/^arenas_extend_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
arenas_extend_mallctl	deps/jemalloc/test/unit/pack.c	/^arenas_extend_mallctl(void)$/;"	f	file:
arenas_hchunk_i_index	deps/jemalloc/src/ctl.c	/^arenas_hchunk_i_index(tsdn_t *tsdn, const size_t *mib, size_t miblen, size_t i)$/;"	f	file:
arenas_hchunk_i_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t arenas_hchunk_i_node[] = {$/;"	v	file:
arenas_hchunk_node	deps/jemalloc/src/ctl.c	/^static const ctl_indexed_node_t arenas_hchunk_node[] = {$/;"	v	file:
arenas_initialized_ctl	deps/jemalloc/src/ctl.c	/^arenas_initialized_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
arenas_lg_dirty_mult_ctl	deps/jemalloc/src/ctl.c	/^arenas_lg_dirty_mult_ctl(tsd_t *tsd, const size_t *mib, size_t miblen,$/;"	f	file:
arenas_lock	deps/jemalloc/src/jemalloc.c	/^static malloc_mutex_t	arenas_lock;$/;"	v	file:
arenas_lrun_i_index	deps/jemalloc/src/ctl.c	/^arenas_lrun_i_index(tsdn_t *tsdn, const size_t *mib, size_t miblen, size_t i)$/;"	f	file:
arenas_lrun_i_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t arenas_lrun_i_node[] = {$/;"	v	file:
arenas_lrun_node	deps/jemalloc/src/ctl.c	/^static const ctl_indexed_node_t arenas_lrun_node[] = {$/;"	v	file:
arenas_narenas_ctl	deps/jemalloc/src/ctl.c	/^arenas_narenas_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
arenas_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t arenas_node[] = {$/;"	v	file:
arenas_tdata_bypass_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	120;"	d
arenas_tdata_bypass_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	120;"	d
arenas_tdata_bypass_cleanup	deps/jemalloc/src/jemalloc.c	/^arenas_tdata_bypass_cleanup(tsd_t *tsd)$/;"	f
arenas_tdata_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	121;"	d
arenas_tdata_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	121;"	d
arenas_tdata_cleanup	deps/jemalloc/src/jemalloc.c	/^arenas_tdata_cleanup(tsd_t *tsd)$/;"	f
arg	deps/pmdk/src/common/ctl.h	/^	const struct ctl_argument *arg;$/;"	m	struct:ctl_node	typeref:struct:ctl_node::ctl_argument
arg	deps/pmdk/src/common/os_thread_windows.c	/^	void *arg;$/;"	m	struct:__anon84	file:
arg	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^	void *arg;$/;"	m	struct:cb_arg2	file:
arg	deps/pmdk/src/libpmemobj/obj.c	/^	void *arg;$/;"	m	struct:carg_realloc	file:
arg	deps/pmdk/src/libpmemobj/obj.c	/^	void *arg;$/;"	m	struct:carg_root	file:
arg	deps/pmdk/src/libpmemobj/obj.c	/^	void *arg;$/;"	m	struct:constr_args	file:
arg0	src/setproctitle.c	/^	const char *arg0;$/;"	m	struct:__anon183	file:
arg1	src/bio.c	/^    void *arg1, *arg2, *arg3;$/;"	m	struct:bio_job	file:
arg2	src/bio.c	/^    void *arg1, *arg2, *arg3;$/;"	m	struct:bio_job	file:
arg3	src/bio.c	/^    void *arg1, *arg2, *arg3;$/;"	m	struct:bio_job	file:
argc	deps/lua/src/lua.c	/^  int argc;$/;"	m	struct:Smain	file:
argc	deps/lua/src/luac.c	/^ int argc;$/;"	m	struct:Smain	file:
argc	deps/pmdk/src/benchmarks/pmembench.cpp	/^	int argc;$/;"	m	struct:pmembench	file:
argc	deps/pmdk/src/librpmem/rpmem_cmd.h	/^		int argc;$/;"	m	struct:rpmem_cmd::__anon96
argc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	int argc;$/;"	m	struct:pocli_args	file:
argc	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	unsigned argc;$/;"	m	struct:pmemspoil	file:
argc	src/redis-cli.c	/^    int argc;$/;"	m	struct:__anon168	file:
argc	src/server.h	/^    int argc, dbid, target;$/;"	m	struct:redisOp
argc	src/server.h	/^    int argc;               \/* Num of arguments of current command. *\/$/;"	m	struct:client
argc	src/server.h	/^    int argc;$/;"	m	struct:multiCmd
argc	src/slowlog.h	/^    int argc;$/;"	m	struct:slowlogEntry
args	deps/pmdk/src/benchmarks/benchmark.hpp	/^	struct benchmark_args *args; \/* benchmark arguments *\/$/;"	m	struct:operation_info	typeref:struct:operation_info::benchmark_args
args	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	struct benchmark_args *args;$/;"	m	struct:benchmark_worker	typeref:struct:benchmark_worker::benchmark_args
args	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	PMDK_TAILQ_HEAD(argshead, clo_vec_args) args;$/;"	m	struct:clo_vec
args	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	void *args;$/;"	m	struct:clo_vec_args
args	deps/pmdk/src/benchmarks/log.cpp	/^	struct prog_args *args; \/* benchmark specific arguments *\/$/;"	m	struct:log_bench	typeref:struct:log_bench::prog_args	file:
args	deps/pmdk/src/benchmarks/map_bench.cpp	/^	struct benchmark_args *args;$/;"	m	struct:map_bench	typeref:struct:map_bench::benchmark_args	file:
args	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	struct obj_list_args *args;$/;"	m	struct:obj_bench	typeref:struct:obj_bench::obj_list_args	file:
args	deps/pmdk/src/libpmempool/pmempool.h	/^	struct pmempool_check_args args;$/;"	m	struct:pmempool_check_ctx	typeref:struct:pmempool_check_ctx::pmempool_check_args
args	deps/pmdk/src/librpmem/rpmem_cmd.h	/^	} args;		\/* command arguments *\/$/;"	m	struct:rpmem_cmd	typeref:struct:rpmem_cmd::__anon96
args	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	struct pmemspoil_list *args;$/;"	m	struct:pmemspoil	typeref:struct:pmemspoil::pmemspoil_list	file:
args	deps/pmdk/src/test/tools/pmemwrite/write.c	/^	char **args;	\/* list of arguments *\/$/;"	m	struct:pmemwrite	file:
args	deps/pmdk/src/tools/pmempool/info.h	/^	struct pmempool_info_args args;	\/* arguments parsed from command line *\/$/;"	m	struct:pmem_info	typeref:struct:pmem_info::pmempool_info_args
args_priv	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	struct pobj_args *args_priv;$/;"	m	struct:pobj_bench	typeref:struct:pobj_bench::pobj_args	file:
args_size	deps/pmdk/src/benchmarks/pmembench.cpp	/^	size_t args_size;$/;"	m	struct:benchmark	file:
argument	utils/generate-command-help.rb	/^def argument arg$/;"	f
arguments	utils/generate-command-help.rb	/^def arguments command$/;"	f
argv	deps/lua/src/lua.c	/^  char **argv;$/;"	m	struct:Smain	file:
argv	deps/lua/src/luac.c	/^ char** argv;$/;"	m	struct:Smain	file:
argv	deps/pmdk/src/benchmarks/pmembench.cpp	/^	char **argv;$/;"	m	struct:pmembench	file:
argv	deps/pmdk/src/librpmem/rpmem_cmd.h	/^		char **argv;$/;"	m	struct:rpmem_cmd::__anon96
argv	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	char *argv[];$/;"	m	struct:pocli_args	file:
argv	src/redis-cli.c	/^    sds *argv;$/;"	m	struct:__anon168	file:
argv	src/sentinel.c	/^    char **argv;            \/* Arguments to call the script. *\/$/;"	m	struct:sentinelScriptJob	file:
argv	src/server.h	/^    robj **argv;            \/* Arguments of current command. *\/$/;"	m	struct:client
argv	src/server.h	/^    robj **argv;$/;"	m	struct:multiCmd
argv	src/server.h	/^    robj **argv;$/;"	m	struct:redisOp
argv	src/slowlog.h	/^    robj **argv;$/;"	m	struct:slowlogEntry
arith_op	deps/lua/src/lvm.c	364;"	d	file:
arity	src/server.h	/^    int arity;$/;"	m	struct:redisCommand
arm_clean_va_to_poc	deps/pmdk/src/libpmem/aarch64/arm_cacheops.h	/^arm_clean_va_to_poc(void const *p __attribute__((unused)))$/;"	f
arm_store_memory_barrier	deps/pmdk/src/libpmem/aarch64/arm_cacheops.h	/^arm_store_memory_barrier(void)$/;"	f
array	deps/lua/src/lobject.h	/^  TValue *array;  \/* array part *\/$/;"	m	struct:Table
array	deps/pmdk/src/examples/libpmemobj/array/array.c	/^	PMEMoid array;$/;"	m	struct:array_info	file:
array	deps/pmdk/src/examples/libpmemobj/array/array.c	/^POBJ_LAYOUT_BEGIN(array);$/;"	v
array	deps/pmdk/src/examples/libpmemobj/array/array.c	/^POBJ_LAYOUT_END(array);$/;"	v
array	src/geo.h	/^    struct geoPoint *array;$/;"	m	struct:geoArray	typeref:struct:geoArray::geoPoint
array_elm	deps/pmdk/src/examples/libpmemobj/array/array.c	/^struct array_elm {$/;"	s	file:
array_info	deps/pmdk/src/examples/libpmemobj/array/array.c	/^struct array_info {$/;"	s	file:
array_types	deps/pmdk/src/examples/libpmemobj/array/array.c	/^enum array_types {$/;"	g	file:
arrayindex	deps/lua/src/ltable.c	/^static int arrayindex (const TValue *key) {$/;"	f	file:
art_callback	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^typedef int(*art_callback)(void *data,$/;"	t
art_insert	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^TOID(var_string) art_insert(PMEMobjpool *pop, const unsigned char *key,$/;"	v
art_iter	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^art_iter(PMEMobjpool *pop, art_callback cb, void *data)$/;"	f
art_iter	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^int art_iter(PMEMobjpool *pop, art_callback cb, void *data);$/;"	v
art_iter_prefix	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^art_iter_prefix(art_tree *t,$/;"	f
art_leaf	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_leaf;	typedef struct _art_leaf art_leaf;$/;"	t	typeref:struct:_art_leaf
art_leaf	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_leaf;	typedef struct _art_leaf	art_leaf;$/;"	t	typeref:struct:_art_leaf
art_leaf_t	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	art_leaf_t	= 4,$/;"	e	enum:__anon99
art_node	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_node;	typedef struct _art_node art_node;$/;"	t	typeref:struct:_art_node
art_node	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_node;	typedef struct _art_node	art_node;$/;"	t	typeref:struct:_art_node
art_node16	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_node16;	typedef struct _art_node16 art_node16;$/;"	t	typeref:struct:_art_node16
art_node16	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_node16;	typedef struct _art_node16	art_node16;$/;"	t	typeref:struct:_art_node16
art_node256	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_node256;	typedef struct _art_node256 art_node256;$/;"	t	typeref:struct:_art_node256
art_node256	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_node256;	typedef struct _art_node256	art_node256;$/;"	t	typeref:struct:_art_node256
art_node4	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_node4;	typedef struct _art_node4 art_node4;$/;"	t	typeref:struct:_art_node4
art_node4	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_node4;	typedef struct _art_node4	art_node4;$/;"	t	typeref:struct:_art_node4
art_node48	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_node48;	typedef struct _art_node48 art_node48;$/;"	t	typeref:struct:_art_node48
art_node48	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_node48;	typedef struct _art_node48	art_node48;$/;"	t	typeref:struct:_art_node48
art_node_names	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^char *art_node_names[] = {$/;"	v
art_node_names	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^char *art_node_names[art_node_types] = {$/;"	v
art_node_sizes	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^size_t art_node_sizes[art_node_types] = {$/;"	v
art_node_tag	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	uint8_t art_node_tag;$/;"	m	struct:_art_node_u
art_node_tag	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	uint8_t art_node_tag;$/;"	m	struct:_art_node_u
art_node_type	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	uint8_t art_node_type;$/;"	m	struct:_art_node_u
art_node_type	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^} art_node_type;$/;"	t	typeref:enum:__anon99
art_node_type	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	uint8_t art_node_type;$/;"	m	struct:_art_node_u
art_node_type	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^} art_node_type;$/;"	t	typeref:enum:__anon102
art_node_types	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	art_node_types	= 5   \/* number of different art_nodes *\/$/;"	e	enum:__anon99
art_node_types	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_node_types	= 9   \/* number of different art_nodes *\/$/;"	e	enum:__anon102
art_node_u	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _art_node_u;	typedef struct _art_node_u art_node_u;$/;"	t	typeref:struct:_art_node_u
art_node_u	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_node_u;	typedef struct _art_node_u	art_node_u;$/;"	t	typeref:struct:_art_node_u
art_size	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^art_size(PMEMobjpool *pop)$/;"	f
art_tree_init	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^art_tree_init(PMEMobjpool *pop, int *newpool)$/;"	f
art_tree_map_init	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^art_tree_map_init(struct datastore *ds, struct ds_context *ctx)$/;"	f
art_tree_root	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct art_tree_root {$/;"	s
art_tree_root	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _art_tree_root;	typedef struct _art_tree_root	art_tree_root;$/;"	t	typeref:struct:_art_tree_root
art_tree_root_offset	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^    uint64_t art_tree_root_offset;$/;"	m	struct:pmem_context
art_tree_root_toid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^union art_tree_root_toid {$/;"	u
art_tree_root_toid_type_num	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^typedef uint8_t art_tree_root_toid_type_num[65535];$/;"	t
arttree_examine_func	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^arttree_examine_func(char *appname, struct pmem_context *ctx,$/;"	f
arttree_examine_help	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^arttree_examine_help(char *appname)$/;"	f
arttree_examine_help_str	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^static const char *arttree_examine_help_str =$/;"	v	file:
arttree_info_func	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^arttree_info_func(char *appname, struct pmem_context *ctx, int ac, char *av[])$/;"	f	file:
arttree_info_help	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^arttree_info_help(char *appname)$/;"	f	file:
arttree_info_help_str	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^static const char *arttree_info_help_str =$/;"	v	file:
arttree_search_func	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^arttree_search_func(char *appname, struct pmem_context *ctx, int ac, char *av[])$/;"	f
arttree_search_help	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^arttree_search_help(char *appname)$/;"	f
arttree_search_help_str	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^static const char *arttree_search_help_str =$/;"	v	file:
arttree_structures_func	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^arttree_structures_func(char *appname, struct pmem_context *ctx,$/;"	f	file:
arttree_structures_help	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^arttree_structures_help(char *appname)$/;"	f	file:
arttree_structures_help_str	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^static const char *arttree_structures_help_str =$/;"	v	file:
arttree_tx	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^POBJ_LAYOUT_BEGIN(arttree_tx);$/;"	v
arttree_tx	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^POBJ_LAYOUT_END(arttree_tx);$/;"	v
as_fn_append	deps/jemalloc/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	deps/jemalloc/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	deps/jemalloc/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	deps/jemalloc/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	deps/jemalloc/config.status	/^as_fn_error ()$/;"	f
as_fn_error	deps/jemalloc/configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	deps/jemalloc/config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	deps/jemalloc/configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	deps/jemalloc/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	deps/jemalloc/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	deps/jemalloc/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	deps/jemalloc/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	deps/jemalloc/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	deps/jemalloc/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	deps/jemalloc/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	deps/jemalloc/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	deps/jemalloc/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	deps/jemalloc/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	deps/jemalloc/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	deps/jemalloc/configure	/^as_fn_unset ()$/;"	f
ascii_logo	src/asciilogo.h	/^char *ascii_logo =$/;"	v
ask	deps/pmdk/src/tools/pmempool/common.c	/^ask(char op, char *answers, char def_ans, const char *fmt, va_list ap)$/;"	f
ask_Yn	deps/pmdk/src/tools/pmempool/common.c	/^ask_Yn(char op, const char *fmt, ...)$/;"	f
ask_mode	deps/pmdk/src/tools/pmempool/rm.c	/^static enum ask_type ask_mode;$/;"	v	typeref:enum:ask_type	file:
ask_type	deps/pmdk/src/tools/pmempool/rm.c	/^enum ask_type {$/;"	g	file:
ask_yN	deps/pmdk/src/tools/pmempool/common.c	/^ask_yN(char op, const char *fmt, ...)$/;"	f
askingCommand	src/cluster.c	/^void askingCommand(client *c) {$/;"	f
assert	deps/jemalloc/include/jemalloc/internal/assert.h	6;"	d
assert	deps/jemalloc/src/util.c	5;"	d	file:
assert	deps/jemalloc/src/util.c	663;"	d	file:
assert	deps/jemalloc/test/include/test/jemalloc_test.h	133;"	d
assert	deps/jemalloc/test/include/test/jemalloc_test.h	138;"	d
assert	src/intset.c	312;"	d	file:
assert	src/quicklist.c	1418;"	d	file:
assert	src/redisassert.h	43;"	d
assert	tests/support/test.tcl	/^proc assert {condition} {$/;"	p
assert_b_eq	deps/jemalloc/test/include/test/test.h	213;"	d
assert_b_ne	deps/jemalloc/test/include/test/test.h	229;"	d
assert_c_eq	deps/jemalloc/test/include/test/test.h	29;"	d
assert_c_ge	deps/jemalloc/test/include/test/test.h	33;"	d
assert_c_gt	deps/jemalloc/test/include/test/test.h	34;"	d
assert_c_le	deps/jemalloc/test/include/test/test.h	32;"	d
assert_c_lt	deps/jemalloc/test/include/test/test.h	31;"	d
assert_c_ne	deps/jemalloc/test/include/test/test.h	30;"	d
assert_cluster	src/redis-trib.rb	/^    def assert_cluster$/;"	f	class:ClusterNode
assert_cluster_state	tests/cluster/cluster.tcl	/^proc assert_cluster_state {state} {$/;"	p
assert_cmp	deps/jemalloc/test/include/test/test.h	3;"	d
assert_d32_eq	deps/jemalloc/test/include/test/test.h	161;"	d
assert_d32_ge	deps/jemalloc/test/include/test/test.h	169;"	d
assert_d32_gt	deps/jemalloc/test/include/test/test.h	171;"	d
assert_d32_le	deps/jemalloc/test/include/test/test.h	167;"	d
assert_d32_lt	deps/jemalloc/test/include/test/test.h	165;"	d
assert_d32_ne	deps/jemalloc/test/include/test/test.h	163;"	d
assert_d64_eq	deps/jemalloc/test/include/test/test.h	187;"	d
assert_d64_ge	deps/jemalloc/test/include/test/test.h	195;"	d
assert_d64_gt	deps/jemalloc/test/include/test/test.h	197;"	d
assert_d64_le	deps/jemalloc/test/include/test/test.h	193;"	d
assert_d64_lt	deps/jemalloc/test/include/test/test.h	191;"	d
assert_d64_ne	deps/jemalloc/test/include/test/test.h	189;"	d
assert_d_eq	deps/jemalloc/test/include/test/test.h	43;"	d
assert_d_ge	deps/jemalloc/test/include/test/test.h	47;"	d
assert_d_gt	deps/jemalloc/test/include/test/test.h	48;"	d
assert_d_le	deps/jemalloc/test/include/test/test.h	46;"	d
assert_d_lt	deps/jemalloc/test/include/test/test.h	45;"	d
assert_d_ne	deps/jemalloc/test/include/test/test.h	44;"	d
assert_empty	src/redis-trib.rb	/^    def assert_empty$/;"	f	class:ClusterNode
assert_encoding	tests/support/test.tcl	/^proc assert_encoding {enc key} {$/;"	p
assert_equal	tests/support/test.tcl	/^proc assert_equal {expected value {detail ""}} {$/;"	p
assert_error	tests/support/test.tcl	/^proc assert_error {pattern code} {$/;"	p
assert_failed	src/server.h	/^    char *assert_failed;$/;"	m	struct:redisServer
assert_false	deps/jemalloc/test/include/test/test.h	246;"	d
assert_file	src/server.h	/^    char *assert_file;$/;"	m	struct:redisServer
assert_jd_eq	deps/jemalloc/test/include/test/test.h	109;"	d
assert_jd_ge	deps/jemalloc/test/include/test/test.h	117;"	d
assert_jd_gt	deps/jemalloc/test/include/test/test.h	119;"	d
assert_jd_le	deps/jemalloc/test/include/test/test.h	115;"	d
assert_jd_lt	deps/jemalloc/test/include/test/test.h	113;"	d
assert_jd_ne	deps/jemalloc/test/include/test/test.h	111;"	d
assert_ju_eq	deps/jemalloc/test/include/test/test.h	122;"	d
assert_ju_ge	deps/jemalloc/test/include/test/test.h	130;"	d
assert_ju_gt	deps/jemalloc/test/include/test/test.h	132;"	d
assert_ju_le	deps/jemalloc/test/include/test/test.h	128;"	d
assert_ju_lt	deps/jemalloc/test/include/test/test.h	126;"	d
assert_ju_ne	deps/jemalloc/test/include/test/test.h	124;"	d
assert_ld_eq	deps/jemalloc/test/include/test/test.h	57;"	d
assert_ld_ge	deps/jemalloc/test/include/test/test.h	65;"	d
assert_ld_gt	deps/jemalloc/test/include/test/test.h	67;"	d
assert_ld_le	deps/jemalloc/test/include/test/test.h	63;"	d
assert_ld_lt	deps/jemalloc/test/include/test/test.h	61;"	d
assert_ld_ne	deps/jemalloc/test/include/test/test.h	59;"	d
assert_line	src/server.h	/^    int assert_line;$/;"	m	struct:redisServer
assert_lu_eq	deps/jemalloc/test/include/test/test.h	70;"	d
assert_lu_ge	deps/jemalloc/test/include/test/test.h	78;"	d
assert_lu_gt	deps/jemalloc/test/include/test/test.h	80;"	d
assert_lu_le	deps/jemalloc/test/include/test/test.h	76;"	d
assert_lu_lt	deps/jemalloc/test/include/test/test.h	74;"	d
assert_lu_ne	deps/jemalloc/test/include/test/test.h	72;"	d
assert_match	tests/support/test.tcl	/^proc assert_match {pattern value} {$/;"	p
assert_not_implemented	deps/jemalloc/include/jemalloc/internal/assert.h	39;"	d
assert_not_implemented	deps/jemalloc/test/include/test/jemalloc_test.h	136;"	d
assert_not_implemented	deps/jemalloc/test/include/test/jemalloc_test.h	160;"	d
assert_not_reached	deps/jemalloc/test/include/test/test.h	275;"	d
assert_ptr_eq	deps/jemalloc/test/include/test/test.h	20;"	d
assert_ptr_ne	deps/jemalloc/test/include/test/test.h	22;"	d
assert_ptr_not_null	deps/jemalloc/test/include/test/test.h	26;"	d
assert_ptr_null	deps/jemalloc/test/include/test/test.h	24;"	d
assert_qd_eq	deps/jemalloc/test/include/test/test.h	83;"	d
assert_qd_ge	deps/jemalloc/test/include/test/test.h	91;"	d
assert_qd_gt	deps/jemalloc/test/include/test/test.h	93;"	d
assert_qd_le	deps/jemalloc/test/include/test/test.h	89;"	d
assert_qd_lt	deps/jemalloc/test/include/test/test.h	87;"	d
assert_qd_ne	deps/jemalloc/test/include/test/test.h	85;"	d
assert_qu_eq	deps/jemalloc/test/include/test/test.h	96;"	d
assert_qu_ge	deps/jemalloc/test/include/test/test.h	104;"	d
assert_qu_gt	deps/jemalloc/test/include/test/test.h	106;"	d
assert_qu_le	deps/jemalloc/test/include/test/test.h	102;"	d
assert_qu_lt	deps/jemalloc/test/include/test/test.h	100;"	d
assert_qu_ne	deps/jemalloc/test/include/test/test.h	98;"	d
assert_replication_stream	tests/test_helper.tcl	/^proc assert_replication_stream {s patterns} {$/;"	p
assert_str_eq	deps/jemalloc/test/include/test/test.h	248;"	d
assert_str_ne	deps/jemalloc/test/include/test/test.h	261;"	d
assert_true	deps/jemalloc/test/include/test/test.h	245;"	d
assert_type	tests/support/test.tcl	/^proc assert_type {type key} {$/;"	p
assert_u32_eq	deps/jemalloc/test/include/test/test.h	174;"	d
assert_u32_ge	deps/jemalloc/test/include/test/test.h	182;"	d
assert_u32_gt	deps/jemalloc/test/include/test/test.h	184;"	d
assert_u32_le	deps/jemalloc/test/include/test/test.h	180;"	d
assert_u32_lt	deps/jemalloc/test/include/test/test.h	178;"	d
assert_u32_ne	deps/jemalloc/test/include/test/test.h	176;"	d
assert_u64_eq	deps/jemalloc/test/include/test/test.h	200;"	d
assert_u64_ge	deps/jemalloc/test/include/test/test.h	208;"	d
assert_u64_gt	deps/jemalloc/test/include/test/test.h	210;"	d
assert_u64_le	deps/jemalloc/test/include/test/test.h	206;"	d
assert_u64_lt	deps/jemalloc/test/include/test/test.h	204;"	d
assert_u64_ne	deps/jemalloc/test/include/test/test.h	202;"	d
assert_u_eq	deps/jemalloc/test/include/test/test.h	50;"	d
assert_u_ge	deps/jemalloc/test/include/test/test.h	54;"	d
assert_u_gt	deps/jemalloc/test/include/test/test.h	55;"	d
assert_u_le	deps/jemalloc/test/include/test/test.h	53;"	d
assert_u_lt	deps/jemalloc/test/include/test/test.h	52;"	d
assert_u_ne	deps/jemalloc/test/include/test/test.h	51;"	d
assert_x_eq	deps/jemalloc/test/include/test/test.h	36;"	d
assert_x_ge	deps/jemalloc/test/include/test/test.h	40;"	d
assert_x_gt	deps/jemalloc/test/include/test/test.h	41;"	d
assert_x_le	deps/jemalloc/test/include/test/test.h	39;"	d
assert_x_lt	deps/jemalloc/test/include/test/test.h	38;"	d
assert_x_ne	deps/jemalloc/test/include/test/test.h	37;"	d
assert_zd_eq	deps/jemalloc/test/include/test/test.h	135;"	d
assert_zd_ge	deps/jemalloc/test/include/test/test.h	143;"	d
assert_zd_gt	deps/jemalloc/test/include/test/test.h	145;"	d
assert_zd_le	deps/jemalloc/test/include/test/test.h	141;"	d
assert_zd_lt	deps/jemalloc/test/include/test/test.h	139;"	d
assert_zd_ne	deps/jemalloc/test/include/test/test.h	137;"	d
assert_zu_eq	deps/jemalloc/test/include/test/test.h	148;"	d
assert_zu_ge	deps/jemalloc/test/include/test/test.h	156;"	d
assert_zu_gt	deps/jemalloc/test/include/test/test.h	158;"	d
assert_zu_le	deps/jemalloc/test/include/test/test.h	154;"	d
assert_zu_lt	deps/jemalloc/test/include/test/test.h	152;"	d
assert_zu_ne	deps/jemalloc/test/include/test/test.h	150;"	d
asset	deps/pmdk/src/examples/libpmemblk/assetdb/asset.h	/^struct asset {$/;"	s
assign_config_epoch	src/redis-trib.rb	/^    def assign_config_epoch$/;"	f	class:RedisTrib.alloc_slots
assign_mode_func	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^assign_mode_func(char *option)$/;"	f	file:
assign_size	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^assign_size(struct pmem_bench *pmb, struct benchmark_args *args,$/;"	f	file:
assignment	deps/lua/src/lparser.c	/^static void assignment (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:
astats	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	arena_stats_t		astats;$/;"	m	struct:ctl_arena_stats_s
asyncCloseClientOnOutputBufferLimitReached	src/networking.c	/^void asyncCloseClientOnOutputBufferLimitReached(client *c) {$/;"	f
at_create	deps/pmdk/src/common/ctl_fallocate.c	/^CTL_READ_HANDLER(at_create)(void *ctx, enum ctl_query_source source,$/;"	f	file:
at_create	deps/pmdk/src/common/ctl_fallocate.c	/^CTL_WRITE_HANDLER(at_create)(void *ctx, enum ctl_query_source source,$/;"	f	file:
at_create	deps/pmdk/src/common/ctl_fallocate.c	/^static struct ctl_argument CTL_ARG(at_create) = CTL_ARG_BOOLEAN;$/;"	v	typeref:struct:CTL_ARG	file:
at_create	deps/pmdk/src/common/ctl_prefault.c	/^CTL_READ_HANDLER(at_create)(void *ctx, enum ctl_query_source source,$/;"	f	file:
at_create	deps/pmdk/src/common/ctl_prefault.c	/^CTL_WRITE_HANDLER(at_create)(void *ctx, enum ctl_query_source source,$/;"	f	file:
at_create	deps/pmdk/src/common/ctl_prefault.c	/^static const struct ctl_argument CTL_ARG(at_create) = CTL_ARG_BOOLEAN;$/;"	v	typeref:struct:CTL_ARG	file:
at_create	deps/pmdk/src/common/ctl_sds.c	/^CTL_READ_HANDLER(at_create)(void *ctx, enum ctl_query_source source,$/;"	f	file:
at_create	deps/pmdk/src/common/ctl_sds.c	/^CTL_WRITE_HANDLER(at_create)(void *ctx, enum ctl_query_source source,$/;"	f	file:
at_create	deps/pmdk/src/common/ctl_sds.c	/^static const struct ctl_argument CTL_ARG(at_create) = CTL_ARG_BOOLEAN;$/;"	v	typeref:struct:CTL_ARG	file:
at_open	deps/pmdk/src/common/ctl_cow.c	/^CTL_READ_HANDLER(at_open)(void *ctx,$/;"	f	file:
at_open	deps/pmdk/src/common/ctl_cow.c	/^CTL_WRITE_HANDLER(at_open)(void *ctx,$/;"	f	file:
at_open	deps/pmdk/src/common/ctl_cow.c	/^static struct ctl_argument CTL_ARG(at_open) = CTL_ARG_BOOLEAN;$/;"	v	typeref:struct:CTL_ARG	file:
at_open	deps/pmdk/src/common/ctl_prefault.c	/^CTL_READ_HANDLER(at_open)(void *ctx, enum ctl_query_source source,$/;"	f	file:
at_open	deps/pmdk/src/common/ctl_prefault.c	/^CTL_WRITE_HANDLER(at_open)(void *ctx, enum ctl_query_source source,$/;"	f	file:
at_open	deps/pmdk/src/common/ctl_prefault.c	/^static const struct ctl_argument CTL_ARG(at_open) = CTL_ARG_BOOLEAN;$/;"	v	typeref:struct:CTL_ARG	file:
atexit_registered	deps/linenoise/linenoise.c	/^static int atexit_registered = 0; \/* Register atexit just 1 time. *\/$/;"	v	file:
atime	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint32_t atime; \/* time of last access *\/$/;"	m	struct:objfs_inode	file:
atomic	deps/lua/src/lgc.c	/^static void atomic (lua_State *L) {$/;"	f	file:
atomic_add_p	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_add_p(void **p, void *x)$/;"	f
atomic_add_p	deps/jemalloc/include/jemalloc/internal/private_namespace.h	122;"	d
atomic_add_p	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	122;"	d
atomic_add_u	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_add_u(unsigned *p, unsigned x)$/;"	f
atomic_add_u	deps/jemalloc/include/jemalloc/internal/private_namespace.h	123;"	d
atomic_add_u	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	123;"	d
atomic_add_uint32	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_add_uint32(uint32_t *p, uint32_t x)$/;"	f
atomic_add_uint32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	124;"	d
atomic_add_uint32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	124;"	d
atomic_add_uint64	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_add_uint64(uint64_t *p, uint64_t x)$/;"	f
atomic_add_uint64	deps/jemalloc/include/jemalloc/internal/private_namespace.h	125;"	d
atomic_add_uint64	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	125;"	d
atomic_add_z	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_add_z(size_t *p, size_t x)$/;"	f
atomic_add_z	deps/jemalloc/include/jemalloc/internal/private_namespace.h	126;"	d
atomic_add_z	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	126;"	d
atomic_cas_p	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_cas_p(void **p, void *c, void *s)$/;"	f
atomic_cas_p	deps/jemalloc/include/jemalloc/internal/private_namespace.h	127;"	d
atomic_cas_p	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	127;"	d
atomic_cas_u	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_cas_u(unsigned *p, unsigned c, unsigned s)$/;"	f
atomic_cas_u	deps/jemalloc/include/jemalloc/internal/private_namespace.h	128;"	d
atomic_cas_u	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	128;"	d
atomic_cas_uint32	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_cas_uint32(uint32_t *p, uint32_t c, uint32_t s)$/;"	f
atomic_cas_uint32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	129;"	d
atomic_cas_uint32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	129;"	d
atomic_cas_uint64	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_cas_uint64(uint64_t *p, uint64_t c, uint64_t s)$/;"	f
atomic_cas_uint64	deps/jemalloc/include/jemalloc/internal/private_namespace.h	130;"	d
atomic_cas_uint64	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	130;"	d
atomic_cas_z	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_cas_z(size_t *p, size_t c, size_t s)$/;"	f
atomic_cas_z	deps/jemalloc/include/jemalloc/internal/private_namespace.h	131;"	d
atomic_cas_z	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	131;"	d
atomic_read_p	deps/jemalloc/include/jemalloc/internal/atomic.h	14;"	d
atomic_read_u	deps/jemalloc/include/jemalloc/internal/atomic.h	16;"	d
atomic_read_uint32	deps/jemalloc/include/jemalloc/internal/atomic.h	13;"	d
atomic_read_uint64	deps/jemalloc/include/jemalloc/internal/atomic.h	12;"	d
atomic_read_z	deps/jemalloc/include/jemalloc/internal/atomic.h	15;"	d
atomic_sub_p	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_sub_p(void **p, void *x)$/;"	f
atomic_sub_p	deps/jemalloc/include/jemalloc/internal/private_namespace.h	132;"	d
atomic_sub_p	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	132;"	d
atomic_sub_u	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_sub_u(unsigned *p, unsigned x)$/;"	f
atomic_sub_u	deps/jemalloc/include/jemalloc/internal/private_namespace.h	133;"	d
atomic_sub_u	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	133;"	d
atomic_sub_uint32	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_sub_uint32(uint32_t *p, uint32_t x)$/;"	f
atomic_sub_uint32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	134;"	d
atomic_sub_uint32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	134;"	d
atomic_sub_uint64	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_sub_uint64(uint64_t *p, uint64_t x)$/;"	f
atomic_sub_uint64	deps/jemalloc/include/jemalloc/internal/private_namespace.h	135;"	d
atomic_sub_uint64	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	135;"	d
atomic_sub_z	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_sub_z(size_t *p, size_t x)$/;"	f
atomic_sub_z	deps/jemalloc/include/jemalloc/internal/private_namespace.h	136;"	d
atomic_sub_z	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	136;"	d
atomic_write_p	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_write_p(void **p, const void *x)$/;"	f
atomic_write_p	deps/jemalloc/include/jemalloc/internal/private_namespace.h	137;"	d
atomic_write_p	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	137;"	d
atomic_write_u	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_write_u(unsigned *p, unsigned x)$/;"	f
atomic_write_u	deps/jemalloc/include/jemalloc/internal/private_namespace.h	138;"	d
atomic_write_u	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	138;"	d
atomic_write_uint32	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_write_uint32(uint32_t *p, uint32_t x)$/;"	f
atomic_write_uint32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	139;"	d
atomic_write_uint32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	139;"	d
atomic_write_uint64	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_write_uint64(uint64_t *p, uint64_t x)$/;"	f
atomic_write_uint64	deps/jemalloc/include/jemalloc/internal/private_namespace.h	140;"	d
atomic_write_uint64	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	140;"	d
atomic_write_z	deps/jemalloc/include/jemalloc/internal/atomic.h	/^atomic_write_z(size_t *p, size_t x)$/;"	f
atomic_write_z	deps/jemalloc/include/jemalloc/internal/private_namespace.h	141;"	d
atomic_write_z	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	141;"	d
attach_to_replication_stream	tests/test_helper.tcl	/^proc attach_to_replication_stream {} {$/;"	p
attached	deps/jemalloc/include/jemalloc/internal/prof.h	/^	bool			attached;$/;"	m	struct:prof_tdata_s
attempted_compress	src/quicklist.h	/^    unsigned int attempted_compress : 1; \/* node can't compress; too small *\/$/;"	m	struct:quicklistNode
attr	deps/pmdk/src/common/os_thread_windows.c	/^	unsigned attr;$/;"	m	struct:__anon79	file:
attr	deps/pmdk/src/common/os_thread_windows.c	/^	unsigned attr;$/;"	m	struct:__anon80	file:
attr	deps/pmdk/src/common/os_thread_windows.c	/^	unsigned attr;$/;"	m	struct:__anon81	file:
auth	src/redis-benchmark.c	/^    char *auth;$/;"	m	struct:config	file:
auth	src/redis-cli.c	/^    char *auth;$/;"	m	struct:config	file:
authCommand	src/server.c	/^void authCommand(client *c) {$/;"	f
auth_pass	src/sentinel.c	/^    char *auth_pass;    \/* Password to use for AUTH against master & slaves. *\/$/;"	m	struct:sentinelRedisInstance	file:
authenticated	src/server.h	/^    int authenticated;      \/* When requirepass is non-NULL. *\/$/;"	m	struct:client
autogenerate_on_missing_class	deps/pmdk/src/libpmemobj/alloc_class.c	/^	int autogenerate_on_missing_class;$/;"	m	struct:alloc_class_collection	file:
automatic	deps/pmdk/src/libpmemobj/heap.c	/^	int automatic;$/;"	m	struct:arena	file:
automatic	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_READ_HANDLER(automatic)(void *ctx,$/;"	f	file:
automatic	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_WRITE_HANDLER(automatic)(void *ctx, enum ctl_query_source source,$/;"	f	file:
automatic	deps/pmdk/src/libpmemobj/pmalloc.c	/^static struct ctl_argument CTL_ARG(automatic) = CTL_ARG_BOOLEAN;$/;"	v	typeref:struct:CTL_ARG	file:
autosync	src/rio.h	/^            off_t autosync; \/* fsync after 'autosync' bytes written. *\/$/;"	m	struct:_rio::__anon179::__anon181
aux	deps/lua/src/lparser.h	/^    struct { int info, aux; } s;$/;"	m	struct:expdesc::__anon31::__anon32
aux_close	deps/lua/src/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:
aux_getn	deps/lua/src/ltablib.c	19;"	d	file:
aux_lines	deps/lua/src/liolib.c	/^static void aux_lines (lua_State *L, int idx, int toclose) {$/;"	f	file:
aux_upvalue	deps/lua/src/lapi.c	/^static const char *aux_upvalue (StkId fi, int n, TValue **val) {$/;"	f	file:
auxgetinfo	deps/lua/src/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:
auxopen	deps/lua/src/lbaselib.c	/^static void auxopen (lua_State *L, const char *name,$/;"	f	file:
auxresume	deps/lua/src/lbaselib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxsort	deps/lua/src/ltablib.c	/^static void auxsort (lua_State *L, int l, int u) {$/;"	f	file:
auxupvalue	deps/lua/src/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:
avail	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	void		**avail;	\/* Stack of available objects. *\/$/;"	m	struct:tcache_bin_s
avg	deps/pmdk/src/benchmarks/benchmark.hpp	/^	double avg;$/;"	m	struct:results
avg	deps/pmdk/src/benchmarks/benchmark.hpp	/^	uint64_t avg;$/;"	m	struct:latency
avg	src/latency.h	/^    uint32_t avg;           \/* Average of current samples. *\/$/;"	m	struct:latencyStats
avg	utils/cluster_fail_time.tcl	/^proc avg vector {$/;"	p
avg_ttl	src/server.h	/^    long long avg_ttl;          \/* Average TTL, just for stats *\/$/;"	m	struct:redisDb
avx_zeroupper	deps/pmdk/src/libpmem/x86_64/avx.h	/^avx_zeroupper(void)$/;"	f
b	deps/linenoise/linenoise.c	/^    char *b;$/;"	m	struct:abuf	file:
b	deps/lua/src/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:
b	deps/lua/src/lobject.h	/^  int b;$/;"	m	union:__anon23
b	deps/lua/src/lua_bit.c	/^  UBits b;$/;"	m	union:__anon40	file:
b	deps/lua/src/lua_bit.c	/^  uint64_t b;$/;"	m	union:__anon40	file:
b	deps/lua/src/lua_cmsgpack.c	/^    unsigned char *b;$/;"	m	struct:mp_buf	file:
b	deps/lua/src/lundump.c	/^ Mbuffer* b;$/;"	m	struct:__anon39	file:
b	deps/pmdk/src/test/obj_defrag/obj_defrag.c	/^	PMEMoid b;$/;"	m	struct:test_object	file:
b	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^	int b;$/;"	m	struct:foo	file:
b	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^	int b;$/;"	m	struct:test_obj	file:
b	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^	int b;$/;"	m	struct:transaction_data	file:
b	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^	int b;$/;"	m	struct:fields	file:
b	deps/pmdk/src/test/util_ctl/util_ctl.c	/^	char b[5];$/;"	m	struct:complex_arg	file:
b_pack	deps/lua/src/lua_struct.c	/^static int b_pack (lua_State *L) {$/;"	f	file:
b_size	deps/lua/src/lua_struct.c	/^static int b_size (lua_State *L) {$/;"	f	file:
b_unpack	deps/lua/src/lua_struct.c	/^static int b_unpack (lua_State *L) {$/;"	f	file:
back	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	size_t back; \/* position of the last entry *\/$/;"	m	struct:queue	file:
backgroundRewriteDoneHandler	src/aof.c	/^void backgroundRewriteDoneHandler(int exitcode, int bysignal) {$/;"	f
backgroundSaveDoneHandler	src/rdb.c	/^void backgroundSaveDoneHandler(int exitcode, int bysignal) {$/;"	f
backgroundSaveDoneHandlerDisk	src/rdb.c	/^void backgroundSaveDoneHandlerDisk(int exitcode, int bysignal) {$/;"	f
backgroundSaveDoneHandlerSocket	src/rdb.c	/^void backgroundSaveDoneHandlerSocket(int exitcode, int bysignal) {$/;"	f
backlog	deps/jemalloc/include/jemalloc/internal/arena.h	/^	size_t			backlog[SMOOTHSTEP_NSTEPS];$/;"	m	struct:arena_decay_s
backup	deps/pmdk/src/tools/pmempool/check.c	/^	bool backup;		\/* do backup *\/$/;"	m	struct:pmempool_check_context	file:
backup_and_compare	deps/pmdk/src/test/libpmempool_backup/common.sh	/^function backup_and_compare () {$/;"	f
backup_cleanup	deps/pmdk/src/test/libpmempool_backup/common.sh	/^function backup_cleanup() {$/;"	f
backup_fname	deps/pmdk/src/tools/pmempool/check.c	/^	char *backup_fname;	\/* backup file name *\/$/;"	m	struct:pmempool_check_context	file:
backup_nonpoolset_create	deps/pmdk/src/libpmempool/check_backup.c	/^backup_nonpoolset_create(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
backup_nonpoolset_overwrite	deps/pmdk/src/libpmempool/check_backup.c	/^backup_nonpoolset_overwrite(PMEMpoolcheck *ppc, location *loc,$/;"	f	file:
backup_nonpoolset_requirements	deps/pmdk/src/libpmempool/check_backup.c	/^backup_nonpoolset_requirements(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
backup_path	deps/pmdk/src/include/libpmempool.h	/^	const char *backup_path;$/;"	m	struct:pmempool_check_argsU
backup_path	deps/pmdk/src/include/libpmempool.h	/^	const wchar_t *backup_path;$/;"	m	struct:pmempool_check_argsW
backup_path	deps/pmdk/src/libpmempool/pmempool.h	/^	char *backup_path;$/;"	m	struct:pmempool_check_ctx
backup_path	deps/pmdk/src/test/libpmempool_api/libpmempool_test.c	/^	const char *backup_path;$/;"	m	struct:pmempool_check_args_1_0	file:
backup_path	deps/pmdk/src/test/libpmempool_api_win/libpmempool_test_win.c	/^	const wchar_t *backup_path;$/;"	m	struct:pmempool_check_args_1_0	file:
backup_poolset	deps/pmdk/src/libpmempool/check_backup.c	/^backup_poolset(PMEMpoolcheck *ppc, location *loc, int overwrite)$/;"	f	file:
backup_poolset_create	deps/pmdk/src/libpmempool/check_backup.c	/^backup_poolset_create(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
backup_poolset_overwrite	deps/pmdk/src/libpmempool/check_backup.c	/^backup_poolset_overwrite(PMEMpoolcheck *ppc, location *loc,$/;"	f	file:
backup_poolset_requirements	deps/pmdk/src/libpmempool/check_backup.c	/^backup_poolset_requirements(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
backward	src/server.h	/^    struct zskiplistNode *backward;$/;"	m	struct:zskiplistNode	typeref:struct:zskiplistNode::zskiplistNode
bad_block	deps/pmdk/src/common/os_badblock.h	/^struct bad_block {$/;"	s
badblock_test_fini	deps/pmdk/src/test/common_badblock.sh	/^function badblock_test_fini() {$/;"	f
badblock_test_fini_node	deps/pmdk/src/test/common_badblock.sh	/^function badblock_test_fini_node() {$/;"	f
badblock_test_get_block_device	deps/pmdk/src/test/common_badblock.sh	/^function badblock_test_get_block_device() {$/;"	f
badblock_test_get_block_device_node	deps/pmdk/src/test/common_badblock.sh	/^function badblock_test_get_block_device_node() {$/;"	f
badblock_test_get_dax_device	deps/pmdk/src/test/common_badblock.sh	/^function badblock_test_get_dax_device() {$/;"	f
badblock_test_get_dax_device_node	deps/pmdk/src/test/common_badblock.sh	/^function badblock_test_get_dax_device_node() {$/;"	f
badblock_test_init	deps/pmdk/src/test/common_badblock.sh	/^function badblock_test_init() {$/;"	f
badblock_test_init_node	deps/pmdk/src/test/common_badblock.sh	/^function badblock_test_init_node() {$/;"	f
badblocks	deps/pmdk/src/common/os_badblock.h	/^struct badblocks {$/;"	s
badblocks	deps/pmdk/src/tools/pmempool/info.h	/^	enum print_bb_e badblocks; \/* print bad blocks *\/$/;"	m	struct:pmempool_info_args	typeref:enum:pmempool_info_args::print_bb_e
badblocks_check_file_cb	deps/pmdk/src/common/badblock.c	/^badblocks_check_file_cb(struct part_file *pf, void *arg)$/;"	f	file:
badblocks_check_poolset	deps/pmdk/src/common/badblock.c	/^badblocks_check_poolset(struct pool_set *set, int create)$/;"	f
badblocks_clear_poolset	deps/pmdk/src/common/badblock.c	/^badblocks_clear_poolset(struct pool_set *set, int create)$/;"	f
badblocks_clear_poolset_cb	deps/pmdk/src/common/badblock.c	/^badblocks_clear_poolset_cb(struct part_file *pf, void *arg)$/;"	f	file:
badblocks_delete	deps/pmdk/src/common/badblock.c	/^badblocks_delete(struct badblocks *bbs)$/;"	f
badblocks_new	deps/pmdk/src/common/badblock.c	/^badblocks_new(void)$/;"	f
badblocks_recovery_file_alloc	deps/pmdk/src/common/badblock.c	/^badblocks_recovery_file_alloc(const char *file, unsigned rep, unsigned part)$/;"	f
badblocks_recovery_file_exists	deps/pmdk/src/common/badblock.c	/^badblocks_recovery_file_exists(struct pool_set *set)$/;"	f
badblocks_recovery_files_status	deps/pmdk/src/libpmempool/replica.c	/^enum badblocks_recovery_files_status {$/;"	g	file:
bar	deps/pmdk/src/examples/libpmemobj/slab_allocator/main.c	/^struct bar {$/;"	s	file:
bar	deps/pmdk/src/test/obj_action/obj_action.c	/^	int bar;$/;"	m	struct:foo	file:
bar	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^	int bar;$/;"	m	struct:foo	file:
bar	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	PMEMoid bar;$/;"	m	struct:foo	file:
bar	deps/pmdk/src/test/obj_pmemcheck/obj_pmemcheck.c	/^	PMEMmutex bar;$/;"	m	struct:foo	file:
bar	deps/pmdk/src/test/obj_recovery/obj_recovery.c	/^	int bar;$/;"	m	struct:foo	file:
bar	deps/pmdk/src/test/obj_recreate/obj_recreate.c	/^	int bar;$/;"	m	struct:foo	file:
bar	deps/pmdk/src/test/util_vec/util_vec.c	/^	int bar;$/;"	m	struct:test	file:
bar	deps/pmdk/src/test/util_vecq/util_vecq.c	/^	int bar;$/;"	m	struct:test	file:
bar2	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	PMEMoid bar2;$/;"	m	struct:foo	file:
bar_el	deps/pmdk/src/examples/libpmemobj/lists.c	/^struct bar_el {$/;"	s	file:
bar_list	deps/pmdk/src/examples/libpmemobj/lists.c	/^	POBJ_LIST_HEAD(bar, struct bar_el) bar_list;$/;"	m	struct:listbase	file:
barg	deps/lua/src/lua_bit.c	/^static UBits barg(lua_State *L, int idx)$/;"	f	file:
barp	deps/pmdk/src/examples/libpmemobj/slab_allocator/main.c	/^	TOID(struct bar) barp;$/;"	m	struct:root	file:
barrier_after_ntstores	deps/pmdk/src/libpmem/x86_64/memcpy_memset.h	/^barrier_after_ntstores(void)$/;"	f
base	deps/lua/src/lstate.h	/^  StkId base;  \/* base for this function *\/$/;"	m	struct:CallInfo
base	deps/lua/src/lstate.h	/^  StkId base;  \/* base of current function *\/$/;"	m	struct:lua_State
base	deps/pmdk/src/benchmarks/benchmark.hpp	/^		int base;$/;"	m	struct:benchmark_clo::__anon113
base	deps/pmdk/src/benchmarks/benchmark.hpp	/^		int base;$/;"	m	struct:benchmark_clo::__anon114
base	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^struct base {$/;"	s	file:
base	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^struct base {$/;"	s	file:
base	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^struct base {$/;"	s	file:
base	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^struct base {$/;"	s	file:
base	deps/pmdk/src/libpmemobj/palloc.h	/^	void *base;$/;"	m	struct:palloc_heap
base	deps/pmdk/src/libpmemobj/pmemops.h	/^		uintptr_t base;$/;"	m	struct:pmem_ops::remote_ops
base	deps/pmdk/src/libpmemobj/pmemops.h	/^	void *base;$/;"	m	struct:pmem_ops
base	deps/pmdk/src/libpmemobj/ulog.h	/^	struct ulog_entry_base base; \/* offset with operation type flag *\/$/;"	m	struct:ulog_entry_buf	typeref:struct:ulog_entry_buf::ulog_entry_base
base	deps/pmdk/src/libpmemobj/ulog.h	/^	struct ulog_entry_base base;$/;"	m	struct:ulog_entry_val	typeref:struct:ulog_entry_val::ulog_entry_base
base	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct rpmem_fip_lane base;	\/* base lane structure *\/$/;"	m	struct:rpmem_fip_plane	typeref:struct:rpmem_fip_plane::rpmem_fip_lane	file:
base	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct rpmem_fip_lane base;	\/* base lane structure *\/$/;"	m	struct:rpmem_fip_rlane	typeref:struct:rpmem_fip_rlane::rpmem_fip_lane	file:
base	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^struct base {$/;"	s	file:
base	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct rpmem_fip_lane base;	\/* lane base structure *\/$/;"	m	struct:rpmemd_fip_lane	typeref:struct:rpmemd_fip_lane::rpmem_fip_lane	file:
base	src/setproctitle.c	/^	char *base, *end;$/;"	m	struct:__anon183	file:
baseCcalls	deps/lua/src/lstate.h	/^  unsigned short baseCcalls;  \/* nested C calls when resuming coroutine *\/$/;"	m	struct:lua_State
base_addr	deps/pmdk/src/common/mmap.h	/^	uintptr_t base_addr;$/;"	m	struct:map_tracker
base_alloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	142;"	d
base_alloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	142;"	d
base_alloc	deps/jemalloc/src/base.c	/^base_alloc(tsdn_t *tsdn, size_t size)$/;"	f
base_allocated	deps/jemalloc/src/base.c	/^static size_t		base_allocated;$/;"	v	file:
base_avail_szsnad	deps/jemalloc/src/base.c	/^static extent_tree_t	base_avail_szsnad;$/;"	v	file:
base_boot	deps/jemalloc/include/jemalloc/internal/private_namespace.h	143;"	d
base_boot	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	143;"	d
base_boot	deps/jemalloc/src/base.c	/^base_boot(void)$/;"	f
base_chunk_alloc	deps/jemalloc/src/base.c	/^base_chunk_alloc(tsdn_t *tsdn, size_t minsize)$/;"	f	file:
base_ci	deps/lua/src/lstate.h	/^  CallInfo *base_ci;  \/* array of CallInfo's *\/$/;"	m	struct:lua_State
base_extent_node_init	deps/jemalloc/src/base.c	/^base_extent_node_init(extent_node_t *node, void *addr, size_t size)$/;"	f	file:
base_extent_sn_next	deps/jemalloc/src/base.c	/^static size_t		base_extent_sn_next;$/;"	v	file:
base_funcs	deps/lua/src/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
base_mapped	deps/jemalloc/src/base.c	/^static size_t		base_mapped;$/;"	v	file:
base_mtx	deps/jemalloc/src/base.c	/^static malloc_mutex_t	base_mtx;$/;"	v	file:
base_node_dalloc	deps/jemalloc/src/base.c	/^base_node_dalloc(tsdn_t *tsdn, extent_node_t *node)$/;"	f	file:
base_node_try_alloc	deps/jemalloc/src/base.c	/^base_node_try_alloc(tsdn_t *tsdn)$/;"	f	file:
base_nodes	deps/jemalloc/src/base.c	/^static extent_node_t	*base_nodes;$/;"	v	file:
base_open	deps/lua/src/lbaselib.c	/^static void base_open (lua_State *L) {$/;"	f	file:
base_postfork_child	deps/jemalloc/include/jemalloc/internal/private_namespace.h	144;"	d
base_postfork_child	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	144;"	d
base_postfork_child	deps/jemalloc/src/base.c	/^base_postfork_child(tsdn_t *tsdn)$/;"	f
base_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_namespace.h	145;"	d
base_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	145;"	d
base_postfork_parent	deps/jemalloc/src/base.c	/^base_postfork_parent(tsdn_t *tsdn)$/;"	f
base_prefork	deps/jemalloc/include/jemalloc/internal/private_namespace.h	146;"	d
base_prefork	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	146;"	d
base_prefork	deps/jemalloc/src/base.c	/^base_prefork(tsdn_t *tsdn)$/;"	f
base_ptr	deps/pmdk/src/test/obj_lane/obj_lane.c	/^static void *base_ptr;$/;"	v	file:
base_resident	deps/jemalloc/src/base.c	/^static size_t		base_resident;$/;"	v	file:
base_stats_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	147;"	d
base_stats_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	147;"	d
base_stats_get	deps/jemalloc/src/base.c	/^base_stats_get(tsdn_t *tsdn, size_t *allocated, size_t *resident,$/;"	f
basehookcount	deps/lua/src/lstate.h	/^  int basehookcount;$/;"	m	struct:lua_State
basename	deps/pmdk/src/windows/include/unistd.h	/^basename(char *path)$/;"	f
basic	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^POBJ_LAYOUT_BEGIN(basic);$/;"	v
basic	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^POBJ_LAYOUT_END(basic);$/;"	v
basic	deps/pmdk/src/test/obj_ctl_alloc_class/obj_ctl_alloc_class.c	/^basic(const char *path)$/;"	f	file:
basics	tests/unit/type/zset.tcl	/^    proc basics {encoding} {$/;"	p
bb_cnt	deps/pmdk/src/common/os_badblock.h	/^	unsigned bb_cnt;		\/* number of bad blocks *\/$/;"	m	struct:badblocks
bbs	deps/pmdk/src/libpmempool/replica.h	/^	struct badblocks bbs;		\/* structure with bad blocks *\/$/;"	m	struct:part_health_status	typeref:struct:part_health_status::badblocks
bbtcreate_options	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^struct bbtcreate_options {$/;"	s	file:
bbv	deps/pmdk/src/common/os_badblock.h	/^	struct bad_block *bbv;		\/* array of bad blocks *\/$/;"	m	struct:badblocks	typeref:struct:badblocks::bad_block
be16toh	deps/pmdk/src/windows/include/endian.h	57;"	d
be32toh	deps/pmdk/src/windows/include/endian.h	58;"	d
be64toh	deps/pmdk/src/windows/include/endian.h	59;"	d
before	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	bool before;$/;"	m	struct:element	file:
before	deps/pmdk/src/libpmemobj/list.c	/^	int before;$/;"	m	struct:list_args_insert	file:
beforeSleep	src/server.c	/^void beforeSleep(struct aeEventLoop *eventLoop) {$/;"	f
beforesleep	src/ae.h	/^    aeBeforeSleepProc *beforesleep;$/;"	m	struct:aeEventLoop
beg	deps/pmdk/src/benchmarks/benchmark.hpp	/^	benchmark_time_t beg;	  \/* start time *\/$/;"	m	struct:worker_info
beg	deps/pmdk/src/benchmarks/benchmark.hpp	/^	benchmark_time_t beg;$/;"	m	struct:thread_results
begin	deps/pmdk/src/libpmemobj/tx.c	/^	void *begin;$/;"	m	struct:tx_range_data	file:
bench	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	struct benchmark *bench;$/;"	m	struct:benchmark_worker	typeref:struct:benchmark_worker::benchmark
bench_exit	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	int (*bench_exit)(struct mutex_bench *);$/;"	m	struct:bench_ops	file:
bench_init	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	int (*bench_init)(struct mutex_bench *);$/;"	m	struct:bench_ops	file:
bench_list	deps/pmdk/src/benchmarks/pmembench.cpp	/^struct bench_list {$/;"	s	file:
bench_op	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	int (*bench_op)(struct mutex_bench *);$/;"	m	struct:bench_ops	file:
bench_operation_1by1	deps/pmdk/src/benchmarks/obj_locks.cpp	/^bench_operation_1by1(lock_fun_wrapper flock, lock_fun_wrapper funlock,$/;"	f	file:
bench_operation_all_lock	deps/pmdk/src/benchmarks/obj_locks.cpp	/^bench_operation_all_lock(lock_fun_wrapper flock, lock_fun_wrapper funlock,$/;"	f	file:
bench_ops	deps/pmdk/src/benchmarks/obj_locks.cpp	/^struct bench_ops {$/;"	s	file:
bench_results	deps/pmdk/src/benchmarks/benchmark.hpp	/^struct bench_results {$/;"	s
benchmark	deps/pmdk/src/benchmarks/pmembench.cpp	/^struct benchmark {$/;"	s	file:
benchmark	deps/pmdk/src/benchmarks/scenario.hpp	/^	char *benchmark;$/;"	m	struct:scenario
benchmark	src/redis-benchmark.c	/^static void benchmark(char *title, char *cmd, int len) {$/;"	f	file:
benchmark_args	deps/pmdk/src/benchmarks/benchmark.hpp	/^struct benchmark_args {$/;"	s
benchmark_clo	deps/pmdk/src/benchmarks/benchmark.hpp	/^struct benchmark_clo {$/;"	s
benchmark_clo_parse	deps/pmdk/src/benchmarks/clo.cpp	/^benchmark_clo_parse(int argc, char *argv[], struct benchmark_clo *clos,$/;"	f
benchmark_clo_parse_scenario	deps/pmdk/src/benchmarks/clo.cpp	/^benchmark_clo_parse_scenario(struct scenario *scenario,$/;"	f
benchmark_clo_str	deps/pmdk/src/benchmarks/clo.cpp	/^benchmark_clo_str(struct benchmark_clo *clo, void *args, size_t size)$/;"	f
benchmark_get_avg_get_time	deps/pmdk/src/benchmarks/benchmark_time.cpp	/^benchmark_get_avg_get_time(void)$/;"	f
benchmark_info	deps/pmdk/src/benchmarks/benchmark.hpp	/^struct benchmark_info {$/;"	s
benchmark_mode	deps/pmdk/src/benchmarks/obj_locks.cpp	/^enum benchmark_mode {$/;"	g	file:
benchmark_ops	deps/pmdk/src/benchmarks/obj_locks.cpp	/^struct bench_ops benchmark_ops[BENCH_MODE_MAX] = {$/;"	v	typeref:struct:bench_ops
benchmark_opts	deps/pmdk/src/benchmarks/pmembench.cpp	/^struct benchmark_opts {$/;"	s	file:
benchmark_override_clos_in_scenario	deps/pmdk/src/benchmarks/clo.cpp	/^benchmark_override_clos_in_scenario(struct scenario *scenario, int argc,$/;"	f
benchmark_results	deps/pmdk/src/benchmarks/benchmark.hpp	/^struct benchmark_results {$/;"	s
benchmark_time_compare	deps/pmdk/src/benchmarks/benchmark_time.cpp	/^benchmark_time_compare(const benchmark_time_t *t1, const benchmark_time_t *t2)$/;"	f
benchmark_time_diff	deps/pmdk/src/benchmarks/benchmark_time.cpp	/^benchmark_time_diff(benchmark_time_t *d, benchmark_time_t *t1,$/;"	f
benchmark_time_get	deps/pmdk/src/benchmarks/benchmark_time.cpp	/^benchmark_time_get(benchmark_time_t *time)$/;"	f
benchmark_time_get_nsecs	deps/pmdk/src/benchmarks/benchmark_time.cpp	/^benchmark_time_get_nsecs(benchmark_time_t *t)$/;"	f
benchmark_time_get_secs	deps/pmdk/src/benchmarks/benchmark_time.cpp	/^benchmark_time_get_secs(benchmark_time_t *t)$/;"	f
benchmark_time_set	deps/pmdk/src/benchmarks/benchmark_time.cpp	/^benchmark_time_set(benchmark_time_t *time, unsigned long long nsecs)$/;"	f
benchmark_time_t	deps/pmdk/src/benchmarks/benchmark_time.hpp	/^typedef struct timespec benchmark_time_t;$/;"	t	typeref:struct:timespec
benchmark_worker	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^struct benchmark_worker {$/;"	s
benchmark_worker_alloc	deps/pmdk/src/benchmarks/benchmark_worker.cpp	/^benchmark_worker_alloc(void)$/;"	f
benchmark_worker_exit	deps/pmdk/src/benchmarks/benchmark_worker.cpp	/^benchmark_worker_exit(struct benchmark_worker *worker)$/;"	f
benchmark_worker_free	deps/pmdk/src/benchmarks/benchmark_worker.cpp	/^benchmark_worker_free(struct benchmark_worker *w)$/;"	f
benchmark_worker_init	deps/pmdk/src/benchmarks/benchmark_worker.cpp	/^benchmark_worker_init(struct benchmark_worker *worker)$/;"	f
benchmark_worker_join	deps/pmdk/src/benchmarks/benchmark_worker.cpp	/^benchmark_worker_join(struct benchmark_worker *worker)$/;"	f
benchmark_worker_run	deps/pmdk/src/benchmarks/benchmark_worker.cpp	/^benchmark_worker_run(struct benchmark_worker *worker)$/;"	f
benchmark_worker_state	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^enum benchmark_worker_state {$/;"	g
benchmarks	deps/pmdk/src/benchmarks/pmembench.cpp	/^static struct bench_list benchmarks;$/;"	v	typeref:struct:bench_list	file:
bg_complex_data	tests/helpers/bg_complex_data.tcl	/^proc bg_complex_data {host port db ops} {$/;"	p
bgrewriteaofCommand	src/aof.c	/^void bgrewriteaofCommand(client *c) {$/;"	f
bgsaveCommand	src/rdb.c	/^void bgsaveCommand(client *c) {$/;"	f
bgsaveerr	src/server.h	/^    *outofrangeerr, *noscripterr, *loadingerr, *slowscripterr, *bgsaveerr,$/;"	m	struct:sharedObjectsStruct
bigkeys	src/redis-cli.c	/^    int bigkeys;$/;"	m	struct:config	file:
bin_info_init	deps/jemalloc/src/arena.c	/^bin_info_init(void)$/;"	f	file:
bin_info_run_size_calc	deps/jemalloc/src/arena.c	/^bin_info_run_size_calc(arena_bin_info_t *bin_info)$/;"	f	file:
bindaddr	src/server.h	/^    char *bindaddr[CONFIG_BINDADDR_MAX]; \/* Addresses we should bind to *\/$/;"	m	struct:redisServer
bindaddr_count	src/server.h	/^    int bindaddr_count;         \/* Number of addresses in server.bindaddr[] *\/$/;"	m	struct:redisServer
binind	deps/jemalloc/include/jemalloc/internal/arena.h	/^	szind_t		binind;$/;"	m	struct:arena_run_s
binind_compute	deps/jemalloc/test/unit/pack.c	/^binind_compute(void)$/;"	f	file:
bins	deps/jemalloc/include/jemalloc/internal/arena.h	/^	arena_bin_t		bins[NBINS];$/;"	m	struct:arena_s
bioCreateBackgroundJob	src/bio.c	/^void bioCreateBackgroundJob(int type, void *arg1, void *arg2, void *arg3) {$/;"	f
bioInit	src/bio.c	/^void bioInit(void) {$/;"	f
bioKillThreads	src/bio.c	/^void bioKillThreads(void) {$/;"	f
bioPendingJobsOfType	src/bio.c	/^unsigned long long bioPendingJobsOfType(int type) {$/;"	f
bioProcessBackgroundJobs	src/bio.c	/^void *bioProcessBackgroundJobs(void *arg) {$/;"	f
bio_condvar	src/bio.c	/^static pthread_cond_t bio_condvar[BIO_NUM_OPS];$/;"	v	file:
bio_job	src/bio.c	/^struct bio_job {$/;"	s	file:
bio_jobs	src/bio.c	/^static list *bio_jobs[BIO_NUM_OPS];$/;"	v	file:
bio_mutex	src/bio.c	/^static pthread_mutex_t bio_mutex[BIO_NUM_OPS];$/;"	v	file:
bio_pending	src/bio.c	/^static unsigned long long bio_pending[BIO_NUM_OPS];$/;"	v	file:
bio_threads	src/bio.c	/^static pthread_t bio_threads[BIO_NUM_OPS];$/;"	v	file:
bisect	deps/lua/test/bisect.lua	/^function bisect(f,a,b,fa,fb)$/;"	f
bit2mask	deps/lua/src/lgc.h	31;"	d
bit_AVX	deps/pmdk/src/libpmem/x86_64/cpu.c	100;"	d	file:
bit_AVX512F	deps/pmdk/src/libpmem/x86_64/cpu.c	104;"	d	file:
bit_CLFLUSH	deps/pmdk/src/libpmem/x86_64/cpu.c	88;"	d	file:
bit_CLFLUSHOPT	deps/pmdk/src/libpmem/x86_64/cpu.c	92;"	d	file:
bit_CLWB	deps/pmdk/src/libpmem/x86_64/cpu.c	96;"	d	file:
bit_bnot	deps/lua/src/lua_bit.c	/^static int bit_bnot(lua_State *L) { BRET(~barg(L, 1)) }$/;"	f	file:
bit_bswap	deps/lua/src/lua_bit.c	/^static int bit_bswap(lua_State *L)$/;"	f	file:
bit_funcs	deps/lua/src/lua_bit.c	/^static const struct luaL_Reg bit_funcs[] = {$/;"	v	typeref:struct:luaL_Reg	file:
bit_tobit	deps/lua/src/lua_bit.c	/^static int bit_tobit(lua_State *L) { BRET(barg(L, 1)) }$/;"	f	file:
bit_tohex	deps/lua/src/lua_bit.c	/^static int bit_tohex(lua_State *L)$/;"	f	file:
bitcountCommand	src/bitops.c	/^void bitcountCommand(client *c) {$/;"	f
bitfieldCommand	src/bitops.c	/^void bitfieldCommand(client *c) {$/;"	f
bitfieldOp	src/bitops.c	/^struct bitfieldOp {$/;"	s	file:
bitmap	deps/jemalloc/include/jemalloc/internal/arena.h	/^	bitmap_t	bitmap[BITMAP_GROUPS_MAX];$/;"	m	struct:arena_run_s
bitmap	deps/pmdk/src/libpmempool/check_util.h	/^	uint8_t *bitmap;$/;"	m	struct:__anon87
bitmap	deps/pmdk/src/tools/pmempool/common.h	/^	char *bitmap;$/;"	m	struct:options
bitmapClearBit	src/cluster.c	/^void bitmapClearBit(unsigned char *bitmap, int pos) {$/;"	f
bitmapSetBit	src/cluster.c	/^void bitmapSetBit(unsigned char *bitmap, int pos) {$/;"	f
bitmapTestBit	src/cluster.c	/^int bitmapTestBit(unsigned char *bitmap, int pos) {$/;"	f
bitmap_full	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^bitmap_full(bitmap_t *bitmap, const bitmap_info_t *binfo)$/;"	f
bitmap_full	deps/jemalloc/include/jemalloc/internal/private_namespace.h	148;"	d
bitmap_full	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	148;"	d
bitmap_get	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^bitmap_get(bitmap_t *bitmap, const bitmap_info_t *binfo, size_t bit)$/;"	f
bitmap_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	149;"	d
bitmap_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	149;"	d
bitmap_info	deps/jemalloc/include/jemalloc/internal/arena.h	/^	bitmap_info_t		bitmap_info;$/;"	m	struct:arena_bin_info_s
bitmap_info_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	150;"	d
bitmap_info_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	150;"	d
bitmap_info_init	deps/jemalloc/src/bitmap.c	/^bitmap_info_init(bitmap_info_t *binfo, size_t nbits)$/;"	f
bitmap_info_ngroups	deps/jemalloc/src/bitmap.c	/^bitmap_info_ngroups(const bitmap_info_t *binfo)$/;"	f	file:
bitmap_info_s	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^struct bitmap_info_s {$/;"	s
bitmap_info_t	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^typedef struct bitmap_info_s bitmap_info_t;$/;"	t	typeref:struct:bitmap_info_s
bitmap_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	151;"	d
bitmap_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	151;"	d
bitmap_init	deps/jemalloc/src/bitmap.c	/^bitmap_init(bitmap_t *bitmap, const bitmap_info_t *binfo)$/;"	f
bitmap_level_s	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^struct bitmap_level_s {$/;"	s
bitmap_level_t	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^typedef struct bitmap_level_s bitmap_level_t;$/;"	t	typeref:struct:bitmap_level_s
bitmap_set	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^bitmap_set(bitmap_t *bitmap, const bitmap_info_t *binfo, size_t bit)$/;"	f
bitmap_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	152;"	d
bitmap_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	152;"	d
bitmap_sfu	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^bitmap_sfu(bitmap_t *bitmap, const bitmap_info_t *binfo)$/;"	f
bitmap_sfu	deps/jemalloc/include/jemalloc/internal/private_namespace.h	153;"	d
bitmap_sfu	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	153;"	d
bitmap_size	deps/jemalloc/include/jemalloc/internal/private_namespace.h	154;"	d
bitmap_size	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	154;"	d
bitmap_size	deps/jemalloc/src/bitmap.c	/^bitmap_size(const bitmap_info_t *binfo)$/;"	f
bitmap_t	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^typedef unsigned long bitmap_t;$/;"	t
bitmap_unset	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^bitmap_unset(bitmap_t *bitmap, const bitmap_info_t *binfo, size_t bit)$/;"	f
bitmap_unset	deps/jemalloc/include/jemalloc/internal/private_namespace.h	155;"	d
bitmap_unset	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	155;"	d
bitmask	deps/lua/src/lgc.h	30;"	d
bitopCommand	src/bitops.c	/^void bitopCommand(client *c) {$/;"	f
bitposCommand	src/bitops.c	/^void bitposCommand(client *c) {$/;"	f
bits	deps/geohash-int/geohash.h	/^    uint64_t bits;$/;"	m	struct:__anon143
bits	deps/jemalloc/include/jemalloc/internal/arena.h	/^	size_t				bits;$/;"	m	struct:arena_chunk_map_bits_s
bits	deps/jemalloc/include/jemalloc/internal/rtree.h	/^	unsigned		bits;$/;"	m	struct:rtree_level_s
bits	src/bitops.c	/^    int bits;           \/* Integer bitfield bits width. *\/$/;"	m	struct:bitfieldOp	file:
bl	deps/lua/src/lparser.h	/^  struct BlockCnt *bl;  \/* chain of current blocks *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::BlockCnt
black2gray	deps/lua/src/lgc.c	38;"	d	file:
blk	deps/pmdk/src/libpmempool/pool.h	/^		struct pmemblk blk;$/;"	m	union:pool_data::__anon93	typeref:struct:pool_data::__anon93::pmemblk
blk	deps/pmdk/src/libpmempool/pool.h	/^		} blk;$/;"	m	union:pool_params::__anon90	typeref:struct:pool_params::__anon90::__anon91
blk	deps/pmdk/src/tools/pmempool/common.h	/^		} blk;$/;"	m	union:pmem_pool_params::__anon104	typeref:struct:pmem_pool_params::__anon104::__anon105
blk	deps/pmdk/src/tools/pmempool/info.h	/^	} blk;$/;"	m	struct:pmem_info	typeref:struct:pmem_info::__anon110
blk	deps/pmdk/src/tools/pmempool/info.h	/^	} blk;$/;"	m	struct:pmempool_info_args	typeref:struct:pmempool_info_args::__anon108
blk	src/sha1.c	43;"	d	file:
blk0	src/sha1.c	36;"	d	file:
blk0	src/sha1.c	39;"	d	file:
blk_args	deps/pmdk/src/benchmarks/blk.cpp	/^struct blk_args {$/;"	s	file:
blk_bench	deps/pmdk/src/benchmarks/blk.cpp	/^struct blk_bench {$/;"	s	file:
blk_bsize_valid	deps/pmdk/src/libpmempool/check_blk.c	/^blk_bsize_valid(uint32_t bsize, uint64_t fsize)$/;"	f	file:
blk_clo	deps/pmdk/src/benchmarks/blk.cpp	/^static struct benchmark_clo blk_clo[5];$/;"	v	typeref:struct:benchmark_clo	file:
blk_constructor	deps/pmdk/src/benchmarks/blk.cpp	/^blk_constructor(void)$/;"	f
blk_ctl_init_and_load	deps/pmdk/src/libpmemblk/libpmemblk.c	/^blk_ctl_init_and_load(PMEMblkpool *pbp)$/;"	f	file:
blk_descr_check	deps/pmdk/src/libpmemblk/blk.c	/^blk_descr_check(PMEMblkpool *pbp, size_t *bsize)$/;"	f	file:
blk_descr_create	deps/pmdk/src/libpmemblk/blk.c	/^blk_descr_create(PMEMblkpool *pbp, uint32_t bsize, int zeroed)$/;"	f	file:
blk_do_warmup	deps/pmdk/src/benchmarks/blk.cpp	/^blk_do_warmup(struct blk_bench *bb, struct benchmark_args *args)$/;"	f	file:
blk_exit	deps/pmdk/src/benchmarks/blk.cpp	/^blk_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
blk_format_feat_default	deps/pmdk/src/libpmemblk/blk.h	/^static const features_t blk_format_feat_default = BLK_FORMAT_FEAT_DEFAULT;$/;"	v
blk_free	deps/pmdk/src/test/set_funcs/set_funcs.c	/^blk_free(void *ptr)$/;"	f	file:
blk_free_worker	deps/pmdk/src/benchmarks/blk.cpp	/^blk_free_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
blk_get_max_bsize	deps/pmdk/src/libpmempool/check_blk.c	/^blk_get_max_bsize(uint64_t fsize)$/;"	f	file:
blk_hdr_check	deps/pmdk/src/libpmempool/check_blk.c	/^blk_hdr_check(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
blk_hdr_fix	deps/pmdk/src/libpmempool/check_blk.c	/^blk_hdr_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question, void *ctx)$/;"	f	file:
blk_init	deps/pmdk/src/benchmarks/blk.cpp	/^blk_init(struct blk_bench *bb, struct benchmark_args *args)$/;"	f	file:
blk_init_worker	deps/pmdk/src/benchmarks/blk.cpp	/^blk_init_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
blk_malloc	deps/pmdk/src/test/set_funcs/set_funcs.c	/^blk_malloc(size_t size)$/;"	f	file:
blk_no_layout	deps/pmdk/src/libpmempool/pool.h	/^	int blk_no_layout;$/;"	m	struct:pool_data
blk_open_common	deps/pmdk/src/libpmemblk/blk.c	/^blk_open_common(const char *path, size_t bsize, unsigned flags)$/;"	f	file:
blk_operation	deps/pmdk/src/benchmarks/blk.cpp	/^blk_operation(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
blk_pool_desc_size	deps/pmdk/src/test/unittest/unittest.sh	/^function blk_pool_desc_size() {$/;"	f
blk_read	deps/pmdk/src/benchmarks/blk.cpp	/^blk_read(struct blk_bench *bb, struct benchmark_args *ba,$/;"	f	file:
blk_read	deps/pmdk/src/libpmempool/check_blk.c	/^blk_read(PMEMpoolcheck *ppc)$/;"	f	file:
blk_read_info	deps/pmdk/src/benchmarks/blk.cpp	/^static struct benchmark_info blk_read_info;$/;"	v	typeref:struct:benchmark_info	file:
blk_read_init	deps/pmdk/src/benchmarks/blk.cpp	/^blk_read_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
blk_realloc	deps/pmdk/src/test/set_funcs/set_funcs.c	/^blk_realloc(void *ptr, size_t size)$/;"	f	file:
blk_runtime_init	deps/pmdk/src/libpmemblk/blk.c	/^blk_runtime_init(PMEMblkpool *pbp, size_t bsize, int rdonly)$/;"	f	file:
blk_strdup	deps/pmdk/src/test/set_funcs/set_funcs.c	/^blk_strdup(const char *s)$/;"	f	file:
blk_worker	deps/pmdk/src/benchmarks/blk.cpp	/^struct blk_worker {$/;"	s	file:
blk_write	deps/pmdk/src/benchmarks/blk.cpp	/^blk_write(struct blk_bench *bb, struct benchmark_args *ba,$/;"	f	file:
blk_write	deps/pmdk/src/libpmempool/check_write.c	/^blk_write(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
blk_write_flog	deps/pmdk/src/libpmempool/check_write.c	/^blk_write_flog(PMEMpoolcheck *ppc, struct arena *arenap)$/;"	f	file:
blk_write_info	deps/pmdk/src/benchmarks/blk.cpp	/^static struct benchmark_info blk_write_info;$/;"	v	typeref:struct:benchmark_info	file:
blk_write_init	deps/pmdk/src/benchmarks/blk.cpp	/^blk_write_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
blk_write_map	deps/pmdk/src/libpmempool/check_write.c	/^blk_write_map(PMEMpoolcheck *ppc, struct arena *arenap)$/;"	f	file:
blksize	deps/pmdk/src/common/extent.h	/^	uint64_t blksize;$/;"	m	struct:extents
block	deps/lua/src/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:
blockClient	src/blocked.c	/^void blockClient(client *c, int btype) {$/;"	f
blockForKeys	src/t_list.c	/^void blockForKeys(client *c, robj **keys, int numkeys, mstime_t timeout, robj *target) {$/;"	f
block_container	deps/pmdk/src/libpmemobj/container.h	/^struct block_container {$/;"	s
block_container_ops	deps/pmdk/src/libpmemobj/container.h	/^struct block_container_ops {$/;"	s
block_container_ravl	deps/pmdk/src/libpmemobj/container_ravl.c	/^struct block_container_ravl {$/;"	s	file:
block_container_seglists	deps/pmdk/src/libpmemobj/container_seglists.c	/^struct block_container_seglists {$/;"	s	file:
block_follow	deps/lua/src/lparser.c	/^static int block_follow (int token) {$/;"	f	file:
block_get_extra	deps/pmdk/src/libpmemobj/memblock.c	/^block_get_extra(const struct memory_block *m)$/;"	f	file:
block_get_flags	deps/pmdk/src/libpmemobj/memblock.c	/^block_get_flags(const struct memory_block *m)$/;"	f	file:
block_get_real_size	deps/pmdk/src/libpmemobj/memblock.c	/^block_get_real_size(const struct memory_block *m)$/;"	f	file:
block_get_user_data	deps/pmdk/src/libpmemobj/memblock.c	/^block_get_user_data(const struct memory_block *m)$/;"	f	file:
block_get_user_size	deps/pmdk/src/libpmemobj/memblock.c	/^block_get_user_size(const struct memory_block *m)$/;"	f	file:
block_invalidate	deps/pmdk/src/libpmemobj/memblock.c	/^block_invalidate(const struct memory_block *m)$/;"	f	file:
block_off	deps/pmdk/src/libpmemobj/memblock.h	/^	uint32_t block_off;$/;"	m	struct:memory_block
block_reinit_header	deps/pmdk/src/libpmemobj/memblock.c	/^block_reinit_header(const struct memory_block *m)$/;"	f	file:
block_size	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint64_t block_size;			\/* size of data block *\/$/;"	m	struct:objfs_super	file:
block_size	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint64_t block_size;$/;"	m	struct:pmemobjfs	file:
block_size	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t block_size;$/;"	m	struct:chunk_run_header
block_size	deps/pmdk/src/libpmemobj/memblock.h	/^	size_t (*block_size)(const struct memory_block *m);$/;"	m	struct:memory_block_ops
block_write_header	deps/pmdk/src/libpmemobj/memblock.c	/^block_write_header(const struct memory_block *m,$/;"	f	file:
blockingPopGenericCommand	src/t_list.c	/^void blockingPopGenericCommand(client *c, int where) {$/;"	f
blockingState	src/server.h	/^typedef struct blockingState {$/;"	s
blockingState	src/server.h	/^} blockingState;$/;"	t	typeref:struct:blockingState
blocking_keys	src/server.h	/^    dict *blocking_keys;        \/* Keys with clients waiting for data (BLPOP) *\/$/;"	m	struct:redisDb
blocks	deps/jemalloc/include/jemalloc/internal/tsd.h	/^	ql_head(tsd_init_block_t)	blocks;$/;"	m	struct:tsd_init_head_s
blocks	deps/pmdk/src/benchmarks/blk.cpp	/^	os_off_t *blocks; \/* array with block numbers *\/$/;"	m	struct:blk_worker	file:
blocks	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	TOID(struct map) blocks;	\/* blocks map *\/$/;"	m	struct:objfs_file	file:
blocks_per_thread	deps/pmdk/src/benchmarks/blk.cpp	/^	size_t blocks_per_thread; \/* number of blocks per thread *\/$/;"	m	struct:blk_bench	file:
blocksize	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^	uint32_t blocksize;$/;"	m	struct:bbtcreate_options	file:
blpopCommand	src/t_list.c	/^void blpopCommand(client *c) {$/;"	f
body	deps/lua/src/lparser.c	/^static void body (LexState *ls, expdesc *e, int needself, int line) {$/;"	f	file:
body	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint8_t body[0];$/;"	m	struct:rpmem_msg_hdr
bool	deps/jemalloc/include/msvc_compat/C99/stdbool.h	14;"	d
bool2str	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^bool2str(int v)$/;"	f	file:
boolK	deps/lua/src/lcode.c	/^static int boolK (FuncState *fs, int b) {$/;"	f	file:
bool_compare_and_swap32_VC	deps/pmdk/src/common/util.h	/^bool_compare_and_swap32_VC(volatile LONG *ptr,$/;"	f
bool_compare_and_swap64_VC	deps/pmdk/src/common/util.h	/^bool_compare_and_swap64_VC(volatile LONG64 *ptr,$/;"	f
bool_to_str	deps/pmdk/src/test/rpmemd_config/rpmemd_config_test.c	/^bool_to_str(bool v)$/;"	f	file:
boolean	deps/lua/src/lua_cjson.c	/^        int boolean;$/;"	m	union:__anon45::__anon46	file:
boot	deps/pmdk/src/libpmemobj/lane.h	/^	section_global_op boot;$/;"	m	struct:section_operations
bootstrap_calloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	156;"	d
bootstrap_calloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	156;"	d
bootstrap_calloc	deps/jemalloc/src/jemalloc.c	/^bootstrap_calloc(size_t num, size_t size)$/;"	f
bootstrap_free	deps/jemalloc/include/jemalloc/internal/private_namespace.h	157;"	d
bootstrap_free	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	157;"	d
bootstrap_free	deps/jemalloc/src/jemalloc.c	/^bootstrap_free(void *ptr)$/;"	f
bootstrap_malloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	158;"	d
bootstrap_malloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	158;"	d
bootstrap_malloc	deps/jemalloc/src/jemalloc.c	/^bootstrap_malloc(size_t size)$/;"	f
bp	src/scripting.c	/^    int bp[LDB_BREAKPOINTS_MAX]; \/* An array of breakpoints line numbers. *\/$/;"	m	struct:ldbState	file:
bpcount	src/scripting.c	/^    int bpcount; \/* Number of valid entries inside bp. *\/$/;"	m	struct:ldbState	file:
bpop	src/server.h	/^    blockingState bpop;     \/* blocking state *\/$/;"	m	struct:client
bpop_blocked_clients	src/server.h	/^    unsigned int bpop_blocked_clients; \/* Number of clients blocked by lists *\/$/;"	m	struct:redisServer
breaklist	deps/lua/src/lparser.c	/^  int breaklist;  \/* list of jumps out of this loop *\/$/;"	m	struct:BlockCnt	file:
breakstat	deps/lua/src/lparser.c	/^static void breakstat (LexState *ls) {$/;"	f	file:
brief	deps/pmdk/src/benchmarks/benchmark.hpp	/^	const char *brief;$/;"	m	struct:benchmark_info
brief	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^	const char *brief;$/;"	m	struct:examine	file:
brief	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^	const char *brief;$/;"	m	struct:search	file:
brief	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^	const char *brief;$/;"	m	struct:command	file:
brief	deps/pmdk/src/tools/pmempool/pmempool.c	/^	const char *brief;$/;"	m	struct:command	file:
brol	deps/lua/src/lua_bit.c	109;"	d	file:
bror	deps/lua/src/lua_bit.c	110;"	d	file:
brpopCommand	src/t_list.c	/^void brpopCommand(client *c) {$/;"	f
brpoplpushCommand	src/t_list.c	/^void brpoplpushCommand(client *c) {$/;"	f
bsar	deps/lua/src/lua_bit.c	108;"	d	file:
bsd_cond_p	deps/pmdk/src/libpmemobj/sync.h	/^				void *bsd_cond_p;$/;"	m	struct:padded_pmemcond::__anon124::__anon125::__anon126
bsd_mutex_p	deps/pmdk/src/libpmemobj/sync.h	/^				void *bsd_mutex_p;$/;"	m	struct:padded_pmemmutex::__anon118::__anon119::__anon120
bsd_rwlock_p	deps/pmdk/src/libpmemobj/sync.h	/^				void *bsd_rwlock_p;$/;"	m	struct:padded_pmemrwlock::__anon121::__anon122::__anon123
bsd_u	deps/pmdk/src/libpmemobj/sync.h	/^			} bsd_u;$/;"	m	union:padded_pmemcond::__anon124::__anon125	typeref:struct:padded_pmemcond::__anon124::__anon125::__anon126
bsd_u	deps/pmdk/src/libpmemobj/sync.h	/^			} bsd_u;$/;"	m	union:padded_pmemmutex::__anon118::__anon119	typeref:struct:padded_pmemmutex::__anon118::__anon119::__anon120
bsd_u	deps/pmdk/src/libpmemobj/sync.h	/^			} bsd_u;$/;"	m	union:padded_pmemrwlock::__anon121::__anon122	typeref:struct:padded_pmemrwlock::__anon121::__anon122::__anon123
bshl	deps/lua/src/lua_bit.c	106;"	d	file:
bshr	deps/lua/src/lua_bit.c	107;"	d	file:
bsize	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	size_t bsize;$/;"	m	struct:pmem_bench	file:
bsize	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^	size_t bsize;			\/* block size *\/$/;"	m	struct:base	file:
bsize	deps/pmdk/src/libpmemblk/blk.h	/^	uint32_t bsize;		\/* block size *\/$/;"	m	struct:pmemblk
bsize	deps/pmdk/src/libpmempool/pool.h	/^			uint64_t bsize;$/;"	m	struct:pool_params::__anon90::__anon91
bsize	deps/pmdk/src/tools/pmempool/common.h	/^			uint64_t bsize;$/;"	m	struct:pmem_pool_params::__anon104::__anon105
bsize	deps/pmdk/src/tools/pmempool/dump.c	/^	uint64_t bsize;$/;"	m	struct:pmempool_dump	file:
bstats	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	malloc_bin_stats_t	bstats[NBINS];$/;"	m	struct:ctl_arena_stats_s
bt	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_bt_t		bt;$/;"	m	struct:prof_gctx_s
bt	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_bt_t	*bt;$/;"	m	struct:__anon11
bt2gctx	deps/jemalloc/src/prof.c	/^static ckh_t		bt2gctx;$/;"	v	file:
bt2gctx_mtx	deps/jemalloc/src/prof.c	/^static malloc_mutex_t	bt2gctx_mtx;$/;"	v	file:
bt2tctx	deps/jemalloc/include/jemalloc/internal/prof.h	/^	ckh_t			bt2tctx;$/;"	m	struct:prof_tdata_s
bt_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	159;"	d
bt_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	159;"	d
bt_init	deps/jemalloc/src/prof.c	/^bt_init(prof_bt_t *bt, void **vec)$/;"	f
btalloc	deps/jemalloc/test/src/btalloc.c	/^btalloc(size_t size, unsigned bits)$/;"	f
btalloc_n_gen	deps/jemalloc/test/include/test/btalloc.h	9;"	d
btalloc_n_proto	deps/jemalloc/test/include/test/btalloc.h	4;"	d
btree	deps/pmdk/src/examples/libpmemobj/btree.c	/^POBJ_LAYOUT_BEGIN(btree);$/;"	v
btree	deps/pmdk/src/examples/libpmemobj/btree.c	/^POBJ_LAYOUT_END(btree);$/;"	v
btree	deps/pmdk/src/examples/libpmemobj/btree.c	/^struct btree {$/;"	s	file:
btree_find	deps/pmdk/src/examples/libpmemobj/btree.c	/^btree_find(PMEMobjpool *pop, int64_t key)$/;"	f	file:
btree_foreach	deps/pmdk/src/examples/libpmemobj/btree.c	/^btree_foreach(PMEMobjpool *pop, const TOID(struct btree_node) node,$/;"	f	file:
btree_insert	deps/pmdk/src/examples/libpmemobj/btree.c	/^btree_insert(PMEMobjpool *pop, int64_t key, const char *value)$/;"	f	file:
btree_map	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^struct btree_map {$/;"	s	file:
btree_map_check	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_check(PMEMobjpool *pop, TOID(struct btree_map) map)$/;"	f
btree_map_clear	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_clear(PMEMobjpool *pop, TOID(struct btree_map) map)$/;"	f
btree_map_create	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_create(PMEMobjpool *pop, TOID(struct btree_map) *map, void *arg)$/;"	f
btree_map_destroy	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_destroy(PMEMobjpool *pop, TOID(struct btree_map) *map)$/;"	f
btree_map_foreach	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_foreach(PMEMobjpool *pop, TOID(struct btree_map) map,$/;"	f
btree_map_get	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_get(PMEMobjpool *pop, TOID(struct btree_map) map, uint64_t key)$/;"	f
btree_map_insert	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_insert(PMEMobjpool *pop, TOID(struct btree_map) map,$/;"	f
btree_map_insert_new	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_insert_new(PMEMobjpool *pop, TOID(struct btree_map) map,$/;"	f
btree_map_is_empty	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_is_empty(PMEMobjpool *pop, TOID(struct btree_map) map)$/;"	f
btree_map_lookup	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_lookup(PMEMobjpool *pop, TOID(struct btree_map) map, uint64_t key)$/;"	f
btree_map_ops	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^struct map_ops btree_map_ops = {$/;"	v	typeref:struct:map_ops
btree_map_remove	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_remove(PMEMobjpool *pop, TOID(struct btree_map) map, uint64_t key)$/;"	f
btree_map_remove_free	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_remove_free(PMEMobjpool *pop, TOID(struct btree_map) map,$/;"	f
btree_node	deps/pmdk/src/examples/libpmemobj/btree.c	/^struct btree_node {$/;"	s	file:
btree_node_arg	deps/pmdk/src/examples/libpmemobj/btree.c	/^struct btree_node_arg {$/;"	s	file:
btree_node_construct	deps/pmdk/src/examples/libpmemobj/btree.c	/^btree_node_construct(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
btree_print	deps/pmdk/src/examples/libpmemobj/btree.c	/^btree_print(PMEMobjpool *pop)$/;"	f	file:
btt	deps/pmdk/src/libpmemblk/btt.c	/^struct btt {$/;"	s	file:
btt_arena_datasize	deps/pmdk/src/libpmemblk/btt.c	/^btt_arena_datasize(uint64_t arena_size, uint32_t nfree)$/;"	f
btt_check	deps/pmdk/src/libpmemblk/btt.c	/^btt_check(struct btt *bttp)$/;"	f
btt_context	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^struct btt_context {$/;"	s	file:
btt_data_write	deps/pmdk/src/libpmempool/check_write.c	/^btt_data_write(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
btt_fini	deps/pmdk/src/libpmemblk/btt.c	/^btt_fini(struct btt *bttp)$/;"	f
btt_flog	deps/pmdk/src/libpmemblk/btt_layout.h	/^struct btt_flog {$/;"	s
btt_flog_convert2h	deps/pmdk/src/libpmemblk/btt.c	/^btt_flog_convert2h(struct btt_flog *flogp)$/;"	f
btt_flog_convert2le	deps/pmdk/src/libpmemblk/btt.c	/^btt_flog_convert2le(struct btt_flog *flogp)$/;"	f
btt_flog_get_valid	deps/pmdk/src/libpmemblk/btt.c	/^btt_flog_get_valid(struct btt_flog *flog_pair, int *next)$/;"	f
btt_flog_size	deps/pmdk/src/libpmemblk/btt.c	/^btt_flog_size(uint32_t nfree)$/;"	f
btt_info	deps/pmdk/src/libpmemblk/btt_layout.h	/^struct btt_info {$/;"	s
btt_info	deps/pmdk/src/libpmempool/pool.h	/^	struct btt_info btt_info;$/;"	m	struct:arena	typeref:struct:arena::btt_info
btt_info_backup	deps/pmdk/src/libpmempool/check_btt_info.c	/^btt_info_backup(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
btt_info_backup_checksum	deps/pmdk/src/libpmempool/check_btt_info.c	/^btt_info_backup_checksum(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
btt_info_backup_fix	deps/pmdk/src/libpmempool/check_btt_info.c	/^btt_info_backup_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question,$/;"	f	file:
btt_info_checksum	deps/pmdk/src/libpmempool/check_btt_info.c	/^btt_info_checksum(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
btt_info_checksum_fix	deps/pmdk/src/libpmempool/check_btt_info.c	/^btt_info_checksum_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question,$/;"	f	file:
btt_info_checksum_retry	deps/pmdk/src/libpmempool/check_btt_info.c	/^btt_info_checksum_retry(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
btt_info_convert2h	deps/pmdk/src/libpmemblk/btt.c	/^btt_info_convert2h(struct btt_info *infop)$/;"	f
btt_info_convert2le	deps/pmdk/src/libpmemblk/btt.c	/^btt_info_convert2le(struct btt_info *infop)$/;"	f
btt_info_from_backup_fix	deps/pmdk/src/libpmempool/check_btt_info.c	/^btt_info_from_backup_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question,$/;"	f	file:
btt_info_gen	deps/pmdk/src/libpmempool/check_btt_info.c	/^btt_info_gen(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
btt_info_gen_fix	deps/pmdk/src/libpmempool/check_btt_info.c	/^btt_info_gen_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question,$/;"	f	file:
btt_info_set	deps/pmdk/src/libpmemblk/btt.c	/^btt_info_set(struct btt_info *info, uint32_t external_lbasize,$/;"	f
btt_info_set_offs	deps/pmdk/src/libpmemblk/btt.c	/^btt_info_set_offs(struct btt_info *info, uint64_t arena_size,$/;"	f	file:
btt_info_set_params	deps/pmdk/src/libpmemblk/btt.c	/^btt_info_set_params(struct btt_info *info, uint32_t external_lbasize,$/;"	f	file:
btt_init	deps/pmdk/src/libpmemblk/btt.c	/^btt_init(uint64_t rawsize, uint32_t lbasize, uint8_t parent_uuid[],$/;"	f
btt_map_size	deps/pmdk/src/libpmemblk/btt.c	/^btt_map_size(uint32_t external_nlba)$/;"	f
btt_nlane	deps/pmdk/src/libpmemblk/btt.c	/^btt_nlane(struct btt *bttp)$/;"	f
btt_nlba	deps/pmdk/src/libpmemblk/btt.c	/^btt_nlba(struct btt *bttp)$/;"	f
btt_read	deps/pmdk/src/libpmemblk/btt.c	/^btt_read(struct btt *bttp, unsigned lane, uint64_t lba, void *buf)$/;"	f
btt_set_error	deps/pmdk/src/libpmemblk/btt.c	/^btt_set_error(struct btt *bttp, unsigned lane, uint64_t lba)$/;"	f
btt_set_zero	deps/pmdk/src/libpmemblk/btt.c	/^btt_set_zero(struct btt *bttp, unsigned lane, uint64_t lba)$/;"	f
btt_write	deps/pmdk/src/libpmemblk/btt.c	/^btt_write(struct btt *bttp, unsigned lane, uint64_t lba, const void *buf)$/;"	f
bttc	deps/pmdk/src/libpmempool/pool.h	/^	struct arena bttc;$/;"	m	struct:pool_data	typeref:struct:pool_data::arena
btti	deps/pmdk/src/libpmempool/check_util.h	/^		struct btt_info btti;$/;"	m	struct:__anon87::__anon89	typeref:struct:__anon87::__anon89::btt_info
btti_backup	deps/pmdk/src/libpmempool/check_util.h	/^		int btti_backup;$/;"	m	struct:__anon87::__anon88
btti_header	deps/pmdk/src/libpmempool/check_util.h	/^		int btti_header;$/;"	m	struct:__anon87::__anon88
btti_offset	deps/pmdk/src/libpmempool/check_util.h	/^		uint64_t btti_offset;$/;"	m	struct:__anon87::__anon89
bttp	deps/pmdk/src/libpmemblk/blk.h	/^	struct btt *bttp;	\/* btt handle *\/$/;"	m	struct:pmemblk	typeref:struct:pmemblk::btt
btype	src/server.h	/^    int btype;              \/* Type of blocking op if CLIENT_BLOCKED. *\/$/;"	m	struct:client
bucket	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	struct entries_head bucket[];$/;"	m	struct:buckets	typeref:struct:buckets::entries_head	file:
bucket	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^	TOID(struct entry) bucket[];$/;"	m	struct:buckets	file:
bucket	deps/pmdk/src/libpmemobj/bucket.h	/^struct bucket {$/;"	s
bucket	deps/pmdk/src/libpmemobj/memblock.h	/^	struct bucket *bucket;$/;"	m	struct:memory_block_reserved	typeref:struct:memory_block_reserved::bucket
bucket_current_resvp	deps/pmdk/src/libpmemobj/bucket.c	/^bucket_current_resvp(struct bucket *b)$/;"	f
bucket_delete	deps/pmdk/src/libpmemobj/bucket.c	/^bucket_delete(struct bucket *b)$/;"	f
bucket_insert_block	deps/pmdk/src/libpmemobj/bucket.c	/^bucket_insert_block(struct bucket *b, const struct memory_block *m)$/;"	f
bucket_new	deps/pmdk/src/libpmemobj/bucket.c	/^bucket_new(struct block_container *c, struct alloc_class *aclass)$/;"	f
buckets	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	TOID(struct buckets) buckets;$/;"	m	struct:hashmap_atomic	file:
buckets	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^struct buckets {$/;"	s	file:
buckets	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^	TOID(struct buckets) buckets;$/;"	m	struct:hashmap_tx	file:
buckets	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^struct buckets {$/;"	s	file:
buckets	deps/pmdk/src/libpmemobj/heap.c	/^	struct bucket *buckets[MAX_ALLOCATION_CLASSES];$/;"	m	struct:arena	typeref:struct:arena::bucket	file:
buckets	src/geo.h	/^    size_t buckets;$/;"	m	struct:geoArray
buckets_tmp	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	TOID(struct buckets) buckets_tmp;$/;"	m	struct:hashmap_atomic	file:
buf	deps/hiredis/hiredis.h	/^    char *buf; \/* Read buffer *\/$/;"	m	struct:redisReader
buf	deps/hiredis/sds.h	/^    char buf[];$/;"	m	struct:sdshdr16
buf	deps/hiredis/sds.h	/^    char buf[];$/;"	m	struct:sdshdr32
buf	deps/hiredis/sds.h	/^    char buf[];$/;"	m	struct:sdshdr5
buf	deps/hiredis/sds.h	/^    char buf[];$/;"	m	struct:sdshdr64
buf	deps/hiredis/sds.h	/^    char buf[];$/;"	m	struct:sdshdr8
buf	deps/linenoise/linenoise.c	/^    char *buf;          \/* Edited line buffer. *\/$/;"	m	struct:linenoiseState	file:
buf	deps/lua/src/strbuf.h	/^    char *buf;$/;"	m	struct:__anon29
buf	deps/pmdk/src/benchmarks/log.cpp	/^	char *buf;	 \/* buffer for write\/read operations *\/$/;"	m	struct:log_worker_info	file:
buf	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	unsigned char *buf;$/;"	m	struct:pmem_bench	file:
buf	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^	char *buf; \/* current message, always NULL terminated *\/$/;"	m	struct:client_data	file:
buf	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^	char buf[];$/;"	m	struct:map_value	file:
buf	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^	uv_buf_t buf;$/;"	m	struct:write_req	file:
buf	deps/pmdk/src/examples/libpmemobj/string_store/layout.h	/^	char buf[MAX_BUF_LEN];$/;"	m	struct:my_root
buf	deps/pmdk/src/examples/libpmemobj/string_store_tx/layout.h	/^	char buf[MAX_BUF_LEN];$/;"	m	struct:my_root
buf	deps/pmdk/src/examples/libpmemobj/string_store_tx_type/layout.h	/^	char buf[MAX_BUF_LEN];$/;"	m	struct:my_root
buf	deps/pmdk/src/test/obj_heap_state/obj_heap_state.c	/^static char buf[ALLOC_SIZE];$/;"	v	file:
buf	deps/pmdk/src/test/obj_reorder_basic/obj_reorder_basic.c	/^	char buf[MAX_BUF_LEN];$/;"	m	struct:my_root	file:
buf	src/aof.c	/^    char buf[AOF_RW_BUF_BLOCK_SIZE];$/;"	m	struct:aofrwblock	file:
buf	src/rio.h	/^            sds buf;$/;"	m	struct:_rio::__anon179::__anon182
buf	src/sds.h	/^    char buf[];$/;"	m	struct:sdshdr16
buf	src/sds.h	/^    char buf[];$/;"	m	struct:sdshdr32
buf	src/sds.h	/^    char buf[];$/;"	m	struct:sdshdr5
buf	src/sds.h	/^    char buf[];$/;"	m	struct:sdshdr64
buf	src/sds.h	/^    char buf[];$/;"	m	struct:sdshdr8
buf	src/server.h	/^    char buf[PROTO_REPLY_CHUNK_BYTES];$/;"	m	struct:client
buf_len	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^	size_t buf_len; \/* sizeof(buf) *\/$/;"	m	struct:client_data	file:
buf_ptr	deps/pmdk/src/benchmarks/log.cpp	/^	size_t buf_ptr;    \/* pointer for read operations *\/$/;"	m	struct:log_worker_info	file:
buf_size	deps/pmdk/src/benchmarks/log.cpp	/^	size_t buf_size;   \/* buffer size *\/$/;"	m	struct:log_worker_info	file:
buferror	deps/jemalloc/include/jemalloc/internal/private_namespace.h	160;"	d
buferror	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	160;"	d
buferror	deps/jemalloc/src/util.c	/^buferror(int err, char *buf, size_t buflen)$/;"	f
buff	deps/lua/src/lauxlib.c	/^  char buff[LUAL_BUFFERSIZE];$/;"	m	struct:LoadF	file:
buff	deps/lua/src/ldo.c	/^  Mbuffer buff;  \/* buffer to be used by the scanner *\/$/;"	m	struct:SParser	file:
buff	deps/lua/src/llex.h	/^  Mbuffer *buff;  \/* buffer for tokens *\/$/;"	m	struct:LexState
buff	deps/lua/src/lstate.h	/^  Mbuffer buff;  \/* temporary buffer for string concatentation *\/$/;"	m	struct:global_State
buff	deps/pmdk/src/benchmarks/blk.cpp	/^	char *buff;       \/* buffer for read\/write *\/$/;"	m	struct:blk_worker	file:
buff	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^		char *buff, size_t size)$/;"	v
buff_concat	deps/pmdk/src/libpmempool/feature.c	/^buff_concat(char *buff, size_t *pos, const char *fmt, ...)$/;"	f	file:
buff_concat_features	deps/pmdk/src/libpmempool/feature.c	/^buff_concat_features(char *buff, size_t *pos, features_t f)$/;"	f	file:
buff_limit	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^buff_limit(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
buff_offset	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	size_t buff_offset; \/* working buffer offset *\/$/;"	m	struct:pool_entry	file:
buff_reset	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^buff_reset(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
buff_size	deps/pmdk/src/librpmem/rpmem_fip.c	/^	size_t buff_size;$/;"	m	struct:rpmem_fip	file:
buff_size	deps/pmdk/src/librpmem/rpmem_fip.h	/^	size_t buff_size;$/;"	m	struct:rpmem_fip_attr
buff_size	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	size_t buff_size;$/;"	m	struct:rpmem_req_attr
buff_size	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint64_t buff_size;		\/* buffer size for inline persist *\/$/;"	m	struct:rpmem_msg_common
buff_size	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	size_t buff_size; \/* working buffer size *\/$/;"	m	struct:pool_entry	file:
buff_size	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	size_t buff_size;	\/* size of buffer for inlined data *\/$/;"	m	struct:rpmemd_fip	file:
buff_size	deps/pmdk/src/tools/rpmemd/rpmemd_fip.h	/^	size_t buff_size;$/;"	m	struct:rpmemd_fip_attr
buffer	deps/lua/src/lauxlib.h	/^  char buffer[LUAL_BUFFERSIZE];$/;"	m	struct:luaL_Buffer
buffer	deps/lua/src/lzio.h	/^  char *buffer;$/;"	m	struct:Mbuffer
buffer	src/rio.h	/^        } buffer;$/;"	m	union:_rio::__anon179	typeref:struct:_rio::__anon179::__anon180
buffer	src/sha1.h	/^    unsigned char buffer[64];$/;"	m	struct:__anon178
buffered	src/rio.h	/^            off_t buffered; \/* Bytes written since last fsync. *\/$/;"	m	struct:_rio::__anon179::__anon181
bufffree	deps/lua/src/lauxlib.c	393;"	d	file:
bufflen	deps/lua/src/lauxlib.c	392;"	d	file:
buffreplace	deps/lua/src/llex.c	/^static void buffreplace (LexState *ls, char from, char to) {$/;"	f	file:
buffsize	deps/lua/src/lzio.h	/^  size_t buffsize;$/;"	m	struct:Mbuffer
buflen	deps/linenoise/linenoise.c	/^    size_t buflen;      \/* Edited line buffer size. *\/$/;"	m	struct:linenoiseState	file:
bufpos	src/server.h	/^    int bufpos;$/;"	m	struct:client
bugReportStart	src/debug.c	/^void bugReportStart(void) {$/;"	f
bug_report_start	src/server.h	/^    int bug_report_start; \/* True if bug report header was already logged. *\/$/;"	m	struct:redisServer
build	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    build = t.Release$/;"	v	class:BASE
build	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    build = t.Debug$/;"	v	class:TEST3
build	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^    build = t.Debug$/;"	v	class:TEST2
build	deps/pmdk/src/test/obj_ulog_size/TESTS.py	/^    build = [t.Debug, t.Release]$/;"	v	class:BASE
build	deps/pmdk/src/test/pmem_map_file_trunc/TESTS.py	/^    build = [t.Debug, t.Release]$/;"	v	class:TEST0
build_map_locks	deps/pmdk/src/libpmemblk/btt.c	/^build_map_locks(struct btt *bttp, struct arena *arenap)$/;"	f	file:
build_rtt	deps/pmdk/src/libpmemblk/btt.c	/^build_rtt(struct btt *bttp, struct arena *arenap)$/;"	f	file:
bulk_cl_changed	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^bulk_cl_changed(const void *addr, size_t len, unsigned flags)$/;"	f	file:
bulk_data	src/cluster.h	/^    unsigned char bulk_data[8];$/;"	m	struct:__anon171
bulkhdr	src/server.h	/^    *bulkhdr[OBJ_SHARED_BULKHDR_LEN];  \/* "$<value>\\r\\n" *\/$/;"	m	struct:sharedObjectsStruct
bulklen	deps/hiredis/hiredis.c	/^static size_t bulklen(size_t len) {$/;"	f	file:
bulklen	src/server.h	/^    long bulklen;           \/* Length of bulk argument in multi bulk request. *\/$/;"	m	struct:client
bullet	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^struct bullet {$/;"	s	file:
bullet	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^struct bullet {$/;"	s	file:
bullets	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	TOID(struct bullet) bullets;$/;"	m	struct:root	file:
busykeyerr	src/server.h	/^    *busykeyerr, *oomerr, *plus, *messagebulk, *pmessagebulk, *subscribebulk,$/;"	m	struct:sharedObjectsStruct
bvalue	deps/lua/src/lobject.h	100;"	d
bytes	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^	size_t bytes;	\/* size of blocks to write at the time *\/$/;"	m	struct:ddmap_context	file:
bytesToHuman	src/redis-cli.c	/^void bytesToHuman(char *s, long long n) {$/;"	f
bytesToHuman	src/server.c	/^void bytesToHuman(char *s, unsigned long long n) {$/;"	f
bytes_until_sample	deps/jemalloc/include/jemalloc/internal/prof.h	/^	uint64_t		bytes_until_sample;$/;"	m	struct:prof_tdata_s
bytes_written	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^	size_t bytes_written;	\/* number of bytes stored in the pool *\/$/;"	m	struct:base	file:
bytes_written	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^	size_t bytes_written;		\/* number of bytes stored in the pool *\/$/;"	m	struct:base	file:
c	deps/hiredis/async.h	/^    redisContext c;$/;"	m	struct:redisAsyncContext
c	deps/lua/src/lobject.h	/^  CClosure c;$/;"	m	union:Closure
c	deps/lua/src/lua_struct.c	/^  char c;$/;"	m	struct:cD	file:
c	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	int c;$/;"	m	struct:star	file:
c	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	int c = (BTREE_ORDER \/ 2);$/;"	m	struct:m	file:
c	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) n, enum rb_children c)$/;"	g	file:
c	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) node, enum rb_children c)$/;"	g	file:
c	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_common c;$/;"	m	struct:rpmem_msg_create	typeref:struct:rpmem_msg_create::rpmem_msg_common
c	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_common c;$/;"	m	struct:rpmem_msg_open	typeref:struct:rpmem_msg_open::rpmem_msg_common
c	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^static struct critnib *c;$/;"	v	typeref:struct:critnib	file:
c	deps/pmdk/src/test/obj_defrag/obj_defrag.c	/^	PMEMoid c;$/;"	m	struct:test_object	file:
c	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^	int c;$/;"	m	struct:foo	file:
c	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^	int c;$/;"	m	struct:test_obj	file:
c	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^	int c;$/;"	m	struct:transaction_data	file:
c	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^	int c;$/;"	m	struct:fields	file:
c	deps/pmdk/src/test/util_ctl/util_ctl.c	/^	long long c;$/;"	m	struct:complex_arg	file:
c	src/rand.c	/^static uint32_t x[3] = { X0, X1, X2 }, a[3] = { A0, A1, A2 }, c = C;$/;"	v	file:
cD	deps/lua/src/lua_struct.c	/^struct cD {$/;"	s	file:
c_ops	deps/pmdk/src/libpmemobj/bucket.h	/^	const struct block_container_ops *c_ops;$/;"	m	struct:bucket	typeref:struct:bucket::block_container_ops
c_ops	deps/pmdk/src/libpmemobj/container.h	/^	const struct block_container_ops *c_ops;$/;"	m	struct:block_container	typeref:struct:block_container::block_container_ops
cache	deps/lua/test/fib.lua	/^function cache(f)$/;"	f
cache_size	deps/pmdk/src/libpmemobj/tx.h	/^	size_t cache_size;$/;"	m	struct:tx_parameters
cache_to_utf8	deps/pmdk/src/libpmempool/check_util.c	/^cache_to_utf8(struct check_data *data, char *buf, size_t size)$/;"	f
cached_master	src/server.h	/^    client *cached_master; \/* Cached master to be reused for PSYNC. *\/$/;"	m	struct:redisServer
calc_free	deps/pmdk/src/libpmemobj/memblock.h	/^	void (*calc_free)(const struct memory_block *m,$/;"	m	struct:memory_block_ops
calc_pi	deps/pmdk/src/examples/libpmemobj/pi.c	/^calc_pi(void *arg)$/;"	f	file:
calc_pi_mt	deps/pmdk/src/examples/libpmemobj/pi.c	/^calc_pi_mt(void)$/;"	f	file:
calculate_new_size	deps/lua/src/strbuf.c	/^static int calculate_new_size(strbuf_t *s, int len)$/;"	f	file:
call	src/server.c	/^void call(client *c, int flags) {$/;"	f
callTM	deps/lua/src/lvm.c	/^static void callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f	file:
callTMres	deps/lua/src/lvm.c	/^static void callTMres (lua_State *L, StkId res, const TValue *f,$/;"	f	file:
call_binTM	deps/lua/src/lvm.c	/^static int call_binTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
call_cluster_cmd	src/redis-trib.rb	/^    def call_cluster_cmd(argv,opt)$/;"	f	class:RedisTrib.alloc_slots
call_orderTM	deps/lua/src/lvm.c	/^static int call_orderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
callallgcTM	deps/lua/src/lstate.c	/^static void callallgcTM (lua_State *L, void *ud) {$/;"	f	file:
callbackDict	deps/hiredis/async.c	/^static dictType callbackDict = {$/;"	v	file:
callbackHash	deps/hiredis/async.c	/^static unsigned int callbackHash(const void *key) {$/;"	f	file:
callbackKeyCompare	deps/hiredis/async.c	/^static int callbackKeyCompare(void *privdata, const void *key1, const void *key2) {$/;"	f	file:
callbackKeyDestructor	deps/hiredis/async.c	/^static void callbackKeyDestructor(void *privdata, void *key) {$/;"	f	file:
callbackValDestructor	deps/hiredis/async.c	/^static void callbackValDestructor(void *privdata, void *val) {$/;"	f	file:
callbackValDup	deps/hiredis/async.c	/^static void *callbackValDup(void *privdata, const void *src) {$/;"	f	file:
calloc	deps/jemalloc/include/jemalloc/jemalloc.h	326;"	d
calloc	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	15;"	d
calloc	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	15;"	d
calloc	src/zmalloc.c	60;"	d	file:
calloc	src/zmalloc.c	65;"	d	file:
callrethooks	deps/lua/src/ldo.c	/^static StkId callrethooks (lua_State *L, StkId firstResult) {$/;"	f	file:
calls	src/server.h	/^    long long microseconds, calls;$/;"	m	struct:redisCommand
cancelReplicationHandshake	src/replication.c	/^int cancelReplicationHandshake(void) {$/;"	f
cannot	deps/lua/src/luac.c	/^static void cannot(const char* what)$/;"	f	file:
cant_failover_reason	src/cluster.h	/^    int cant_failover_reason;   \/* Why a slave is currently not able to$/;"	m	struct:clusterState
capabilities	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint32_t capabilities;$/;"	m	struct:platform_capabilities
capacity	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^	uint64_t capacity;$/;"	m	struct:hashmap_rp	file:
capacity	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	size_t capacity; \/* size of the entries array *\/$/;"	m	struct:queue	file:
capacity	deps/pmdk/src/libpmemobj/memops.c	/^	size_t capacity; \/* capacity of the ulog log *\/$/;"	m	struct:operation_log	file:
capture	deps/lua/src/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon38	file:
capture_to_close	deps/lua/src/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:
card	src/hyperloglog.c	/^    uint8_t card[8];    \/* Cached cardinality, little endian. *\/$/;"	m	struct:hllhdr	file:
carg_realloc	deps/pmdk/src/libpmemobj/obj.c	/^struct carg_realloc {$/;"	s	file:
carg_root	deps/pmdk/src/libpmemobj/obj.c	/^struct carg_root {$/;"	s	file:
carg_strdup	deps/pmdk/src/libpmemobj/obj.c	/^struct carg_strdup {$/;"	s	file:
carg_wcsdup	deps/pmdk/src/libpmemobj/obj.c	/^struct carg_wcsdup {$/;"	s	file:
cargs	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	/^struct cargs {$/;"	s	file:
cargs	deps/pmdk/src/test/obj_out_of_memory/obj_out_of_memory.c	/^struct cargs {$/;"	s	file:
cassert	deps/jemalloc/include/jemalloc/internal/util.h	85;"	d
cast	deps/lua/src/llimits.h	75;"	d
cast_byte	deps/lua/src/llimits.h	78;"	d
cast_int	deps/lua/src/llimits.h	80;"	d
cast_num	deps/lua/src/llimits.h	79;"	d
catAppendOnlyExpireAtCommand	src/aof.c	/^sds catAppendOnlyExpireAtCommand(sds buf, struct redisCommand *cmd, robj *key, robj *seconds) {$/;"	f
catAppendOnlyGenericCommand	src/aof.c	/^sds catAppendOnlyGenericCommand(sds dst, int argc, robj **argv) {$/;"	f
catClientInfoString	src/networking.c	/^sds catClientInfoString(sds s, client *client) {$/;"	f
categories	deps/pmdk/src/libpmemobj/alloc_class.c	/^} categories[MAX_ALLOC_CATEGORIES] = {$/;"	v	typeref:struct:__anon134	file:
categorize	deps/pmdk/utils/check-area.sh	/^function categorize() {$/;"	f
cb	deps/pmdk/src/common/ctl.h	/^	node_callback cb[MAX_CTL_QUERY_TYPE];$/;"	m	struct:ctl_node
cb	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^	int (*cb)(uint64_t key, PMEMoid value, void *arg);$/;"	m	struct:cb_arg2	file:
cb	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	int (*cb)(uint64_t key, PMEMoid, void *arg), void *arg)$/;"	v
cb	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	int (*cb)(uint64_t key, PMEMoid value, void *arg), void *arg)$/;"	v
cb	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^	int (*cb)(const unsigned char *key, uint64_t key_size,$/;"	v
cb	deps/pmdk/src/test/util_poolset_foreach/util_poolset_foreach.c	/^cb(struct part_file *pf, void *arg)$/;"	f	file:
cb_arg2	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^struct cb_arg2 {$/;"	s	file:
cb_args	deps/pmdk/src/libpmempool/rm.c	/^struct cb_args {$/;"	s	file:
cb_data	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^} cb_data;$/;"	t	typeref:struct:_cb_data
cbuf	src/scripting.c	/^    sds cbuf;   \/* Debugger client command buffer. *\/$/;"	m	struct:ldbState	file:
cc	src/sentinel.c	/^    redisAsyncContext *cc; \/* Hiredis context for commands. *\/$/;"	m	struct:instanceLink	file:
cc_conn_time	src/sentinel.c	/^    mstime_t cc_conn_time; \/* cc connection time. *\/$/;"	m	struct:instanceLink	file:
cc_link	deps/jemalloc/include/jemalloc/internal/extent.h	/^	qr(extent_node_t)	cc_link;$/;"	m	struct:extent_node_s
ceillog2	deps/lua/src/lobject.h	367;"	d
cfd	src/server.h	/^    int cfd[CONFIG_BINDADDR_MAX];\/* Cluster bus listening socket *\/$/;"	m	struct:redisServer
cfd_count	src/server.h	/^    int cfd_count;              \/* Used slots in cfd[] *\/$/;"	m	struct:redisServer
cfg	deps/lua/src/lua_cjson.c	/^    json_config_t *cfg;$/;"	m	struct:__anon44	file:
cfghdrs_in	deps/jemalloc/Makefile	/^cfghdrs_in := $(addprefix $(srcroot),include\/jemalloc\/jemalloc_defs.h.in include\/jemalloc\/internal\/jemalloc_internal_defs.h.in include\/jemalloc\/internal\/private_namespace.sh include\/jemalloc\/internal\/private_unnamespace.sh include\/jemalloc\/internal\/private_symbols.txt include\/jemalloc\/internal\/public_namespace.sh include\/jemalloc\/internal\/public_unnamespace.sh include\/jemalloc\/internal\/size_classes.sh include\/jemalloc\/jemalloc_rename.sh include\/jemalloc\/jemalloc_mangle.sh include\/jemalloc\/jemalloc.sh test\/include\/test\/jemalloc_test_defs.h.in)$/;"	m
cfghdrs_out	deps/jemalloc/Makefile	/^cfghdrs_out := include\/jemalloc\/jemalloc_defs.h include\/jemalloc\/jemalloc.h include\/jemalloc\/internal\/private_namespace.h include\/jemalloc\/internal\/private_unnamespace.h include\/jemalloc\/internal\/public_symbols.txt include\/jemalloc\/internal\/public_namespace.h include\/jemalloc\/internal\/public_unnamespace.h include\/jemalloc\/internal\/size_classes.h include\/jemalloc\/jemalloc_protos_jet.h include\/jemalloc\/jemalloc_rename.h include\/jemalloc\/jemalloc_mangle.h include\/jemalloc\/jemalloc_mangle_jet.h include\/jemalloc\/internal\/jemalloc_internal_defs.h test\/include\/test\/jemalloc_test_defs.h$/;"	m
cfgoutputs_in	deps/jemalloc/Makefile	/^cfgoutputs_in := $(addprefix $(srcroot),Makefile.in jemalloc.pc.in doc\/html.xsl.in doc\/manpages.xsl.in doc\/jemalloc.xml.in include\/jemalloc\/jemalloc_macros.h.in include\/jemalloc\/jemalloc_protos.h.in include\/jemalloc\/jemalloc_typedefs.h.in include\/jemalloc\/internal\/jemalloc_internal.h.in test\/test.sh.in test\/include\/test\/jemalloc_test.h.in)$/;"	m
cfgoutputs_out	deps/jemalloc/Makefile	/^cfgoutputs_out := Makefile jemalloc.pc doc\/html.xsl doc\/manpages.xsl doc\/jemalloc.xml include\/jemalloc\/jemalloc_macros.h include\/jemalloc\/jemalloc_protos.h include\/jemalloc\/jemalloc_typedefs.h include\/jemalloc\/internal\/jemalloc_internal.h test\/test.sh test\/include\/test\/jemalloc_test.h$/;"	m
ch2token	deps/lua/src/lua_cjson.c	/^    json_token_type_t ch2token[256];$/;"	m	struct:__anon43	file:
change_type	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	bool change_type;   \/* change type number in reallocation *\/$/;"	m	struct:obj_tx_args	file:
changes	src/server.h	/^    int changes;$/;"	m	struct:saveparam
changewhite	deps/lua/src/lgc.h	72;"	d
channel_len	src/cluster.h	/^    uint32_t channel_len;$/;"	m	struct:__anon171
channels	deps/hiredis/async.h	/^        struct dict *channels;$/;"	m	struct:redisAsyncContext::__anon148	typeref:struct:redisAsyncContext::__anon148::dict
char2escape	deps/lua/src/lua_cjson.c	/^static const char *char2escape[256] = {$/;"	v	file:
char2int	deps/lua/src/lzio.h	20;"	d
character	src/redis-cli.c	/^    int character;   \/* Associated character in visualization. *\/$/;"	m	struct:distsamples	file:
charset	src/sparkline.c	/^static char charset[] = "_-`";$/;"	v	file:
charset_fill	src/sparkline.c	/^static char charset_fill[] = "_o#";$/;"	v	file:
charset_len	src/sparkline.c	/^static int charset_len = sizeof(charset)-1;$/;"	v	file:
check	deps/lua/src/ldebug.c	268;"	d	file:
check	deps/lua/src/ldebug.c	477;"	d	file:
check	deps/lua/src/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:
check	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	int(*check)(PMEMobjpool *pop, TOID(struct map) map);$/;"	m	struct:map_ops
check	deps/pmdk/src/libpmemobj/lane.h	/^	section_layout_op check;$/;"	m	struct:section_operations
check	deps/pmdk/src/libpmempool/check_backup.c	/^	int (*check)(PMEMpoolcheck *, location *);$/;"	m	struct:step	file:
check	deps/pmdk/src/libpmempool/check_blk.c	/^	int (*check)(PMEMpoolcheck *, location *);$/;"	m	struct:step	file:
check	deps/pmdk/src/libpmempool/check_btt_info.c	/^	int (*check)(PMEMpoolcheck *, location *);$/;"	m	struct:step	file:
check	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^	int (*check)(PMEMpoolcheck *, location *);$/;"	m	struct:step	file:
check	deps/pmdk/src/libpmempool/check_log.c	/^	int (*check)(PMEMpoolcheck *, location *);$/;"	m	struct:step	file:
check	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	int (*check)(PMEMpoolcheck *, location *);$/;"	m	struct:step	file:
check	deps/pmdk/src/libpmempool/check_sds.c	/^	int (*check)(PMEMpoolcheck *, location *);$/;"	m	struct:step	file:
check	deps/pmdk/src/test/blk_rw_mt/blk_rw_mt.c	/^check(unsigned char *buf)$/;"	f	file:
check	deps/pmdk/src/test/unittest/basetest.py	/^    def check(self):$/;"	m	class:BaseTest
check	deps/pmdk/src/test/unittest/unittest.sh	/^function check() {$/;"	f
check	deps/pmdk/utils/check_whitespace	/^sub check {$/;"	s
checkArgMode	deps/lua/src/ldebug.c	/^static int checkArgMode (const Proto *pt, int r, enum OpArgMask mode) {$/;"	f	file:
checkClientOutputBufferLimits	src/networking.c	/^int checkClientOutputBufferLimits(client *c) {$/;"	f
checkConsistency	src/intset.c	/^static void checkConsistency(intset *is) {$/;"	f	file:
checkForSentinelMode	src/server.c	/^int checkForSentinelMode(int argc, char **argv) {$/;"	f
checkSignedBitfieldOverflow	src/bitops.c	/^int checkSignedBitfieldOverflow(int64_t value, int64_t incr, uint64_t bits, int owtype, int64_t *limit) {$/;"	f
checkSizes	deps/lua/src/lgc.c	/^static void checkSizes (lua_State *L) {$/;"	f	file:
checkStringLength	src/t_string.c	/^static int checkStringLength(client *c, long long size) {$/;"	f	file:
checkTcpBacklogSettings	src/server.c	/^void checkTcpBacklogSettings(void) {$/;"	f
checkType	src/object.c	/^int checkType(client *c, robj *o, int type) {$/;"	f
checkUnsignedBitfieldOverflow	src/bitops.c	/^int checkUnsignedBitfieldOverflow(uint64_t value, int64_t incr, uint64_t bits, int owtype, uint64_t *limit) {$/;"	f
check_absolute_path	deps/pmdk/src/test/unittest/unittest.sh	/^function check_absolute_path() {$/;"	f
check_access	deps/pmdk/src/test/mmap/mmap.c	/^check_access(char *addr, size_t len, int prot)$/;"	f	file:
check_and_open_poolset_part_files	deps/pmdk/src/libpmempool/replica.c	/^check_and_open_poolset_part_files(struct pool_set *set,$/;"	f	file:
check_answer	deps/pmdk/src/libpmempool/check_util.c	/^enum check_answer {$/;"	g	file:
check_answer_loop	deps/pmdk/src/libpmempool/check_util.c	/^check_answer_loop(PMEMpoolcheck *ppc, location *data, void *ctx, int fail_on_no,$/;"	f
check_arena	deps/pmdk/src/libpmemblk/btt.c	/^check_arena(struct btt *bttp, struct arena *arenap)$/;"	f	file:
check_arena	deps/pmdk/src/test/unittest/unittest.sh	/^check_arena()$/;"	f
check_arena_size	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^check_arena_size(unsigned arena_id, unsigned class_id)$/;"	f	file:
check_arity	src/redis-trib.rb	/^    def check_arity(req_args, num_args)$/;"	f	class:RedisTrib
check_ask	deps/pmdk/src/tools/pmempool/check.c	/^check_ask(const char *msg)$/;"	f	file:
check_backup	deps/pmdk/src/libpmempool/check_backup.c	/^check_backup(PMEMpoolcheck *ppc)$/;"	f
check_bad_blocks	deps/pmdk/src/libpmempool/check_bad_blocks.c	/^check_bad_blocks(PMEMpoolcheck *ppc)$/;"	f
check_badblocks_in_header	deps/pmdk/src/libpmempool/replica.c	/^check_badblocks_in_header(struct badblocks *bbs)$/;"	f	file:
check_blk	deps/pmdk/src/libpmempool/check_blk.c	/^check_blk(PMEMpoolcheck *ppc)$/;"	f
check_btt_info	deps/pmdk/src/libpmempool/check_btt_info.c	/^check_btt_info(PMEMpoolcheck *ppc)$/;"	f
check_btt_map_flog	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^check_btt_map_flog(PMEMpoolcheck *ppc)$/;"	f
check_capture	deps/lua/src/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:
check_checksums_and_signatures	deps/pmdk/src/libpmempool/replica.c	/^check_checksums_and_signatures(struct pool_set *set,$/;"	f	file:
check_clang_version	deps/pmdk/utils/style_check.sh	/^function check_clang_version() {$/;"	f
check_clear_status_cache	deps/pmdk/src/libpmempool/check_util.c	/^check_clear_status_cache(struct check_data *data)$/;"	f
check_close_msg	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_close.c	/^check_close_msg(struct rpmem_msg_close *msg)$/;"	f	file:
check_cluster	src/redis-trib.rb	/^    def check_cluster(opt={})$/;"	f	class:RedisTrib
check_cluster_cmd	src/redis-trib.rb	/^    def check_cluster_cmd(argv,opt)$/;"	f	class:RedisTrib.alloc_slots
check_compare_poolsets_options	deps/pmdk/src/libpmempool/transform.c	/^check_compare_poolsets_options(struct pool_set *set_in,$/;"	f	file:
check_compare_poolsets_status	deps/pmdk/src/libpmempool/transform.c	/^check_compare_poolsets_status(struct pool_set *set_in,$/;"	f	file:
check_condition	deps/lua/src/lparser.c	100;"	d	file:
check_config	deps/pmdk/src/test/rpmemd_config/TEST2	/^function check_config {$/;"	f
check_config_consistency	src/redis-trib.rb	/^    def check_config_consistency$/;"	f	class:RedisTrib
check_conflict	deps/lua/src/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:
check_consistency	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	/^check_consistency(struct list_root *root)$/;"	f	file:
check_consistency	deps/pmdk/src/test/obj_reorder_basic/obj_reorder_basic.c	/^check_consistency(struct pmemobjpool *pop)$/;"	f	file:
check_consistency	deps/pmdk/src/test/pmreorder_flushes/pmreorder_flushes.c	/^check_consistency(struct stores_fields *sf)$/;"	f	file:
check_consistency	deps/pmdk/src/test/pmreorder_simple/pmreorder_simple.c	/^check_consistency(struct three_field *structp)$/;"	f	file:
check_consistency	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^check_consistency(struct fields *fieldsp)$/;"	f	file:
check_consistency	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def check_consistency(self):$/;"	m	class:BinaryFile
check_consistency	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def check_consistency(self):$/;"	m	class:BinaryOutputHandler
check_consistency	deps/pmdk/src/tools/pmreorder/consistencycheckwrap.py	/^    def check_consistency(self, filename):$/;"	m	class:ConsistencyCheckerBase
check_consistency	deps/pmdk/src/tools/pmreorder/consistencycheckwrap.py	/^    def check_consistency(self, filename):$/;"	m	class:LibChecker
check_consistency	deps/pmdk/src/tools/pmreorder/consistencycheckwrap.py	/^    def check_consistency(self, filename):$/;"	m	class:ProgChecker
check_cpu_cache	deps/pmdk/src/common/os_auto_flush_linux.c	/^check_cpu_cache(const char *domain_path)$/;"	f	file:
check_cpu_features	deps/pmdk/src/test/util_cpuid/util_cpuid.c	/^check_cpu_features(void)$/;"	f	file:
check_create_msg	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_create.c	/^check_create_msg(struct rpmem_msg_create *msg)$/;"	f	file:
check_create_parameters	src/redis-trib.rb	/^    def check_create_parameters$/;"	f	class:RedisTrib.alloc_slots
check_data	deps/pmdk/src/libpmempool/check_util.c	/^struct check_data {$/;"	s	file:
check_data	deps/pmdk/src/test/obj_sync/obj_sync.c	/^	int check_data;$/;"	m	struct:mock_obj	file:
check_data_alloc	deps/pmdk/src/libpmempool/check_util.c	/^check_data_alloc(void)$/;"	f
check_data_free	deps/pmdk/src/libpmempool/check_util.c	/^check_data_free(struct check_data *data)$/;"	f
check_dir	deps/pmdk/utils/pkg-common.sh	/^function check_dir() {$/;"	f
check_domain_in_region	deps/pmdk/src/common/os_auto_flush_linux.c	/^check_domain_in_region(const char *region_path)$/;"	f	file:
check_end	deps/pmdk/src/libpmempool/check_util.c	/^check_end(struct check_data *data)$/;"	f
check_errors	deps/pmdk/src/test/out_err_mt/out_err_mt.c	/^check_errors(unsigned ver)$/;"	f	file:
check_errors	deps/pmdk/src/test/out_err_mt_win/out_err_mt_win.c	/^check_errors(int ver)$/;"	f	file:
check_exp	deps/lua/src/llimits.h	57;"	d
check_exp	deps/lua/src/llimits.h	63;"	d
check_fallocate	deps/pmdk/src/test/tools/fallocate_detect/fallocate_detect.c	/^check_fallocate(const char *file)$/;"	f	file:
check_file	deps/pmdk/src/test/unicode_api/TEST0	/^function check_file {$/;"	f
check_file	deps/pmdk/src/test/unittest/unittest.sh	/^check_file()$/;"	f
check_file	deps/pmdk/utils/pkg-common.sh	/^function check_file() {$/;"	f
check_file_cb	deps/pmdk/src/common/badblock.c	/^struct check_file_cb {$/;"	s	file:
check_files	deps/pmdk/src/test/unittest/unittest.sh	/^check_files()$/;"	f
check_files_on_node	deps/pmdk/src/test/unittest/unittest.sh	/^function check_files_on_node() {$/;"	f
check_fini	deps/pmdk/src/libpmempool/check.c	/^check_fini(PMEMpoolcheck *ppc)$/;"	f
check_flags_sync	deps/pmdk/src/libpmempool/replica.c	/^check_flags_sync(unsigned flags)$/;"	f	file:
check_flags_transform	deps/pmdk/src/libpmempool/replica.c	/^check_flags_transform(unsigned flags)$/;"	f	file:
check_get_step_data	deps/pmdk/src/libpmempool/check_util.c	/^check_get_step_data(struct check_data *data)$/;"	f
check_get_time_str	deps/pmdk/src/libpmempool/check_util.c	/^check_get_time_str(time_t time)$/;"	f
check_get_uuid_str	deps/pmdk/src/libpmempool/check_util.c	/^check_get_uuid_str(uuid_t uuid)$/;"	f
check_has_answer	deps/pmdk/src/libpmempool/check_util.c	/^check_has_answer(struct check_data *data)$/;"	f
check_has_error	deps/pmdk/src/libpmempool/check_util.c	/^check_has_error(struct check_data *data)$/;"	f
check_if_node_is_reachable	deps/pmdk/src/test/unittest/unittest.sh	/^function check_if_node_is_reachable() {$/;"	f
check_if_part_used_once	deps/pmdk/src/libpmempool/transform.c	/^check_if_part_used_once(struct pool_set *set, unsigned repn, unsigned partn)$/;"	f	file:
check_if_remote_replica_used_once	deps/pmdk/src/libpmempool/transform.c	/^check_if_remote_replica_used_once(struct pool_set *set, unsigned repn)$/;"	f	file:
check_init	deps/pmdk/src/libpmempool/check.c	/^check_init(PMEMpoolcheck *ppc)$/;"	f
check_insert_arena	deps/pmdk/src/libpmempool/check_util.c	/^check_insert_arena(PMEMpoolcheck *ppc, struct arena *arenap)$/;"	f
check_int	deps/pmdk/src/test/obj_alloc/obj_alloc.c	/^check_int(const char *size_str)$/;"	f	file:
check_integrity	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^static int check_integrity = 1;$/;"	v	file:
check_is_end	deps/pmdk/src/libpmempool/check.c	/^check_is_end(struct check_data *data)$/;"	f
check_is_end_util	deps/pmdk/src/libpmempool/check_util.c	/^check_is_end_util(struct check_data *data)$/;"	f
check_layout	deps/pmdk/src/test/unittest/unittest.sh	/^check_layout()$/;"	f
check_leaks	tests/instances.tcl	/^proc check_leaks instance_types {$/;"	p
check_local	deps/pmdk/src/test/unittest/unittest.sh	/^function check_local() {$/;"	f
check_log	deps/pmdk/src/libpmempool/check_log.c	/^check_log(PMEMpoolcheck *ppc)$/;"	f
check_log_empty	deps/pmdk/src/test/unittest/unittest.sh	/^function check_log_empty() {$/;"	f
check_mapping	deps/pmdk/src/test/mmap/mmap.c	/^check_mapping(int fd, char *addr, size_t len, int prot,$/;"	f	file:
check_marker_format	deps/pmdk/src/tools/pmreorder/operationfactory.py	/^        def check_marker_format(marker):$/;"	f	function:OperationFactory.create_operation
check_match	deps/lua/src/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:
check_memcpy	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^check_memcpy(size_t doff, size_t soff, size_t len, pmem_memcpy_fn fn,$/;"	f	file:
check_memcpy_variants	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^check_memcpy_variants(size_t doff, size_t soff, size_t len)$/;"	f	file:
check_memmove	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^check_memmove(size_t doff, size_t soff, size_t len, pmem_memmove_fn fn,$/;"	f	file:
check_memmove_variants	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^check_memmove_variants(size_t doff, size_t soff, size_t len)$/;"	f	file:
check_memset	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^check_memset(size_t off, size_t len, pmem_memset_fn fn, unsigned flags)$/;"	f	file:
check_memset_variants	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^check_memset_variants(size_t off, size_t len)$/;"	f	file:
check_mode	deps/pmdk/src/test/unittest/unittest.sh	/^check_mode()$/;"	f
check_next	deps/lua/src/llex.c	/^static int check_next (LexState *ls, const char *set) {$/;"	f	file:
check_no_file	deps/pmdk/src/test/unittest/unittest.sh	/^check_no_file()$/;"	f
check_no_files	deps/pmdk/src/test/unittest/unittest.sh	/^check_no_files()$/;"	f
check_no_files_on_node	deps/pmdk/src/test/unittest/unittest.sh	/^function check_no_files_on_node() {$/;"	f
check_numbered_list_consistency	tests/unit/type/list.tcl	/^        proc check_numbered_list_consistency {key} {$/;"	p
check_open_files	deps/pmdk/src/test/unittest/ut.c	/^check_open_files()$/;"	f	file:
check_open_files	deps/pmdk/src/test/unittest/ut.c	/^check_open_files(void)$/;"	f	file:
check_open_msg	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_open.c	/^check_open_msg(struct rpmem_msg_open *msg)$/;"	f	file:
check_open_slots	src/redis-trib.rb	/^    def check_open_slots$/;"	f	class:RedisTrib
check_options	deps/pmdk/src/libpmempool/replica.c	/^check_options(struct pool_set *set, struct poolset_health_status *set_hs)$/;"	f	file:
check_package	deps/pmdk/utils/docker/test_package/Makefile	/^check_package = $(shell pkg-config $(1) && echo y || echo n)$/;"	m
check_pair_consistency	deps/pmdk/src/tools/pmreorder/operationfactory.py	/^        def check_pair_consistency(stack, marker):$/;"	f	function:OperationFactory.create_operation
check_paths	deps/pmdk/src/libpmempool/transform.c	/^check_paths(struct pool_set *set)$/;"	f	file:
check_pool	deps/pmdk/src/test/libpmempool_api/libpmempool_test.c	/^check_pool(struct pmempool_check_args *args, size_t args_size)$/;"	f	file:
check_pool	deps/pmdk/src/test/libpmempool_api_win/libpmempool_test_win.c	/^check_pool(struct pmempool_check_argsW *args, size_t args_size)$/;"	f	file:
check_pool	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^check_pool(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
check_pool	deps/pmdk/src/test/unittest/unittest.sh	/^function check_pool() {$/;"	f
check_pool_hdr	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^check_pool_hdr(PMEMpoolcheck *ppc)$/;"	f
check_pool_hdr_uuids	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^check_pool_hdr_uuids(PMEMpoolcheck *ppc)$/;"	f
check_pools	deps/pmdk/src/test/unittest/unittest.sh	/^function check_pools() {$/;"	f
check_poolset_uuids	deps/pmdk/src/libpmempool/replica.c	/^check_poolset_uuids(struct pool_set *set,$/;"	f	file:
check_pop_error	deps/pmdk/src/libpmempool/check_util.c	/^check_pop_error(struct check_data *data)$/;"	f
check_pop_info	deps/pmdk/src/libpmempool/check_util.c	/^check_pop_info(struct check_data *data)$/;"	f
check_pop_question	deps/pmdk/src/libpmempool/check_util.c	/^check_pop_question(struct check_data *data)$/;"	f
check_prefix	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^check_prefix(const art_node *n,$/;"	f	file:
check_prefix	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^check_prefix(art_node *n, unsigned char *key, int key_len, int depth)$/;"	f	file:
check_push_answer	deps/pmdk/src/libpmempool/check_util.c	/^check_push_answer(PMEMpoolcheck *ppc)$/;"	f
check_questions_sequence_validate	deps/pmdk/src/libpmempool/check_util.c	/^check_questions_sequence_validate(PMEMpoolcheck *ppc)$/;"	f
check_random_access_consistency	tests/unit/type/list.tcl	/^        proc check_random_access_consistency {key} {$/;"	p
check_range	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^check_range(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
check_range_imp	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^check_range_imp(char *pool_set, size_t offset, size_t size)$/;"	f	file:
check_replica_cycles	deps/pmdk/src/libpmempool/replica.c	/^check_replica_cycles(struct pool_set *set,$/;"	f	file:
check_replica_options	deps/pmdk/src/libpmempool/replica.c	/^check_replica_options(struct pool_set *set, unsigned repn,$/;"	f	file:
check_replica_poolset_uuids	deps/pmdk/src/libpmempool/replica.c	/^check_replica_poolset_uuids(struct pool_set *set, unsigned repn,$/;"	f	file:
check_replica_sizes	deps/pmdk/src/libpmempool/replica.c	/^check_replica_sizes(struct pool_set *set, struct poolset_health_status *set_hs)$/;"	f	file:
check_replicas_consistency	deps/pmdk/src/libpmempool/replica.c	/^check_replicas_consistency(struct pool_set *set,$/;"	f	file:
check_result	deps/pmdk/src/libpmempool/pmempool.h	/^enum check_result {$/;"	g
check_result_t	deps/pmdk/src/tools/pmempool/check.c	/^} check_result_t;$/;"	t	typeref:enum:__anon112	file:
check_return_and_errno	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	273;"	d	file:
check_sds	deps/pmdk/src/libpmempool/check_sds.c	/^check_sds(PMEMpoolcheck *ppc)$/;"	f
check_set_attr_msg	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	/^check_set_attr_msg(struct rpmem_msg_set_attr *msg)$/;"	f	file:
check_shutdown_state	deps/pmdk/src/libpmempool/replica.c	/^check_shutdown_state(struct pool_set *set,$/;"	f	file:
check_signature	deps/pmdk/src/test/unittest/unittest.sh	/^check_signature()$/;"	f
check_signatures	deps/pmdk/src/test/unittest/unittest.sh	/^check_signatures()$/;"	f
check_size	deps/pmdk/src/test/unittest/unittest.sh	/^check_size()$/;"	f
check_slots_coverage	src/redis-trib.rb	/^    def check_slots_coverage$/;"	f	class:RedisTrib
check_status	deps/pmdk/src/libpmempool/check_util.c	/^struct check_status {$/;"	s	file:
check_status_cache	deps/pmdk/src/libpmempool/check_util.c	/^	struct check_status *check_status_cache;$/;"	m	struct:check_data	typeref:struct:check_data::check_status	file:
check_status_create	deps/pmdk/src/libpmempool/check_util.c	/^check_status_create(PMEMpoolcheck *ppc, enum pmempool_check_msg_type type,$/;"	f
check_status_get	deps/pmdk/src/libpmempool/check.c	/^check_status_get(struct check_status *status)$/;"	f
check_status_get_util	deps/pmdk/src/libpmempool/check_util.c	/^check_status_get_util(struct check_status *status)$/;"	f
check_status_release	deps/pmdk/src/libpmempool/check_util.c	/^check_status_release(PMEMpoolcheck *ppc, struct check_status *status)$/;"	f
check_step	deps/pmdk/src/libpmempool/check.c	/^check_step(PMEMpoolcheck *ppc)$/;"	f
check_step_get	deps/pmdk/src/libpmempool/check_util.c	/^check_step_get(struct check_data *data)$/;"	f
check_step_inc	deps/pmdk/src/libpmempool/check_util.c	/^check_step_inc(struct check_data *data)$/;"	f
check_store_all_sizes	deps/pmdk/src/libpmempool/replica.c	/^check_store_all_sizes(struct pool_set *set,$/;"	f	file:
check_tool	deps/pmdk/utils/pkg-common.sh	/^function check_tool() {$/;"	f
check_user_home_dir	deps/pmdk/src/test/rpmemd_config/TEST4	/^function check_user_home_dir {$/;"	f
check_uuids_between_parts	deps/pmdk/src/libpmempool/replica.c	/^check_uuids_between_parts(struct pool_set *set, unsigned repn,$/;"	f	file:
check_uuids_between_replicas	deps/pmdk/src/libpmempool/replica.c	/^check_uuids_between_replicas(struct pool_set *set,$/;"	f	file:
check_valgrind_errors	tests/support/server.tcl	/^proc check_valgrind_errors stderr {$/;"	p
check_whitespace	deps/pmdk/utils/check_whitespace	/^sub check_whitespace {$/;"	s
check_whitespace_with_exc	deps/pmdk/utils/check_whitespace	/^sub check_whitespace_with_exc {$/;"	s
check_write	deps/pmdk/src/libpmempool/check_write.c	/^check_write(PMEMpoolcheck *ppc)$/;"	f
checkconsistency	deps/lua/src/lobject.h	108;"	d
checked_lib	deps/pmdk/src/test/scope/TESTS.py	/^    checked_lib = ''$/;"	v	class:Common
checked_lib	deps/pmdk/src/test/scope/TESTS.py	/^    checked_lib = 'libpmem'$/;"	v	class:TEST2
checked_lib	deps/pmdk/src/test/scope/TESTS.py	/^    checked_lib = 'libpmem'$/;"	v	class:TEST8
checked_lib	deps/pmdk/src/test/scope/TESTS.py	/^    checked_lib = 'libpmem2'$/;"	v	class:TEST13
checked_lib	deps/pmdk/src/test/scope/TESTS.py	/^    checked_lib = 'libpmemblk'$/;"	v	class:TEST10
checked_lib	deps/pmdk/src/test/scope/TESTS.py	/^    checked_lib = 'libpmemblk'$/;"	v	class:TEST4
checked_lib	deps/pmdk/src/test/scope/TESTS.py	/^    checked_lib = 'libpmemlog'$/;"	v	class:TEST3
checked_lib	deps/pmdk/src/test/scope/TESTS.py	/^    checked_lib = 'libpmemlog'$/;"	v	class:TEST9
checked_lib	deps/pmdk/src/test/scope/TESTS.py	/^    checked_lib = 'libpmemobj'$/;"	v	class:TEST11
checked_lib	deps/pmdk/src/test/scope/TESTS.py	/^    checked_lib = 'libpmemobj'$/;"	v	class:TEST5
checked_lib	deps/pmdk/src/test/scope/TESTS.py	/^    checked_lib = 'libpmempool'$/;"	v	class:TEST12
checked_lib	deps/pmdk/src/test/scope/TESTS.py	/^    checked_lib = 'libpmempool'$/;"	v	class:TEST6
checkers	deps/pmdk/src/tools/pmreorder/consistencycheckwrap.py	/^checkers = ["prog", "lib"]$/;"	v
checkint	deps/lua/src/lauxlib.c	/^static int checkint (lua_State *L, int topop) {$/;"	f	file:
checkjump	deps/lua/src/ldebug.c	270;"	d	file:
checkjump	deps/lua/src/ldebug.c	478;"	d	file:
checkliveness	deps/lua/src/lobject.h	111;"	d
checkname	deps/lua/src/lparser.c	/^static void checkname(LexState *ls, expdesc *e) {$/;"	f	file:
checknext	deps/lua/src/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:
checkopenop	deps/lua/src/ldebug.c	288;"	d	file:
checkreg	deps/lua/src/ldebug.c	272;"	d	file:
checkreg	deps/lua/src/ldebug.c	479;"	d	file:
checkresults	deps/lua/src/lapi.c	772;"	d	file:
checkstacksizes	deps/lua/src/lgc.c	/^static void checkstacksizes (lua_State *L, StkId max) {$/;"	f	file:
checksum	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint8_t checksum;$/;"	m	struct:nfit_header
checksum	deps/pmdk/src/common/pool_hdr.h	/^	uint64_t checksum;		\/* checksum of above fields *\/$/;"	m	struct:pool_hdr
checksum	deps/pmdk/src/common/shutdown_state.h	/^	uint64_t checksum;$/;"	m	struct:shutdown_state
checksum	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^	int checksum;$/;"	m	struct:fibo_t	file:
checksum	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint64_t checksum;		\/* Fletcher64 of all fields *\/$/;"	m	struct:btt_info
checksum	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t checksum;$/;"	m	struct:heap_header
checksum	deps/pmdk/src/libpmemobj/obj.h	/^	uint64_t checksum;	\/* checksum of above fields *\/$/;"	m	struct:pmemobjpool
checksum	deps/pmdk/src/libpmemobj/ulog.h	/^	uint64_t checksum; \/* checksum of the entire log entry *\/$/;"	m	struct:ulog_entry_buf
checksum	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^	int checksum;	\/* compute checksum *\/$/;"	m	struct:ddmap_context	file:
checksum	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^	uint64_t checksum;$/;"	m	struct:data_s	file:
checksum	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	void *checksum;$/;"	m	struct:checksum_args	file:
checksum_args	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^struct checksum_args {$/;"	s	file:
child	deps/jemalloc/include/jemalloc/internal/rtree.h	/^		rtree_node_elm_t	*child;$/;"	m	union:rtree_node_elm_s::__anon8
child	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) child = D_RO(node)->slots[!c];$/;"	e	enum:c	file:
child	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TX_SET(NODE_P(node), slots[NODE_LOCATION(node)], child);$/;"	e	enum:c	file:
child	deps/pmdk/src/libpmemobj/critnib.c	/^	struct critnib_node *child[SLNODES];$/;"	m	struct:critnib_node	typeref:struct:critnib_node::critnib_node	file:
child_idx	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	int child_idx;$/;"	m	struct:_cb_data
children	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	const			ctl_node_t *children;$/;"	m	struct:ctl_named_node_s
children	deps/pmdk/src/common/ctl.h	/^	const struct ctl_node *children;$/;"	m	struct:ctl_node	typeref:struct:ctl_node::ctl_node
children	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	TOID(art_node_u) children[16];$/;"	m	struct:_art_node16
children	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	TOID(art_node_u) children[256];$/;"	m	struct:_art_node256
children	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	TOID(art_node_u) children[48];$/;"	m	struct:_art_node48
children	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	TOID(art_node_u) children[4];$/;"	m	struct:_art_node4
children	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	union _toid_art_node_u_toid children[16];$/;"	m	struct:_art_node16	typeref:union:_art_node16::_toid_art_node_u_toid
children	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	union _toid_art_node_u_toid children[256];$/;"	m	struct:_art_node256	typeref:union:_art_node256::_toid_art_node_u_toid
children	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	union _toid_art_node_u_toid children[48];$/;"	m	struct:_art_node48	typeref:union:_art_node48::_toid_art_node_u_toid
children	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	union _toid_art_node_u_toid children[4];$/;"	m	struct:_art_node4	typeref:union:_art_node4::_toid_art_node_u_toid
children	src/scripting.c	/^    list *children; \/* All forked debugging sessions pids. *\/$/;"	m	struct:ldbState	file:
chrtos	deps/hiredis/hiredis.c	/^static size_t chrtos(char *buf, size_t size, char byte) {$/;"	f	file:
chunk	deps/lua/src/lparser.c	/^static void chunk (LexState *ls) {$/;"	f	file:
chunk	deps/pmdk/src/libpmemobj/heap_layout.h	/^struct chunk {$/;"	s
chunk	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	struct chunk *chunk;$/;"	m	struct:chunk_pair	typeref:struct:chunk_pair::chunk	file:
chunk_alloc	deps/jemalloc/test/integration/chunk.c	/^chunk_alloc(void *new_addr, size_t size, size_t alignment, bool *zero,$/;"	f
chunk_alloc_base	deps/jemalloc/include/jemalloc/internal/private_namespace.h	161;"	d
chunk_alloc_base	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	161;"	d
chunk_alloc_base	deps/jemalloc/src/chunk.c	/^chunk_alloc_base(size_t size)$/;"	f
chunk_alloc_cache	deps/jemalloc/include/jemalloc/internal/private_namespace.h	162;"	d
chunk_alloc_cache	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	162;"	d
chunk_alloc_cache	deps/jemalloc/src/chunk.c	/^chunk_alloc_cache(tsdn_t *tsdn, arena_t *arena, chunk_hooks_t *chunk_hooks,$/;"	f
chunk_alloc_core	deps/jemalloc/src/chunk.c	/^chunk_alloc_core(tsdn_t *tsdn, arena_t *arena, void *new_addr, size_t size,$/;"	f	file:
chunk_alloc_default	deps/jemalloc/src/chunk.c	/^chunk_alloc_default(void *new_addr, size_t size, size_t alignment, bool *zero,$/;"	f	file:
chunk_alloc_default_impl	deps/jemalloc/src/chunk.c	/^chunk_alloc_default_impl(tsdn_t *tsdn, arena_t *arena, void *new_addr,$/;"	f	file:
chunk_alloc_dss	deps/jemalloc/include/jemalloc/internal/private_namespace.h	163;"	d
chunk_alloc_dss	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	163;"	d
chunk_alloc_dss	deps/jemalloc/src/chunk_dss.c	/^chunk_alloc_dss(tsdn_t *tsdn, arena_t *arena, void *new_addr, size_t size,$/;"	f
chunk_alloc_mmap	deps/jemalloc/include/jemalloc/internal/private_namespace.h	164;"	d
chunk_alloc_mmap	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	164;"	d
chunk_alloc_mmap	deps/jemalloc/src/chunk_mmap.c	/^chunk_alloc_mmap(void *new_addr, size_t size, size_t alignment, bool *zero,$/;"	f
chunk_alloc_mmap_slow	deps/jemalloc/src/chunk_mmap.c	/^chunk_alloc_mmap_slow(size_t size, size_t alignment, bool *zero, bool *commit)$/;"	f	file:
chunk_alloc_retained	deps/jemalloc/src/chunk.c	/^chunk_alloc_retained(tsdn_t *tsdn, arena_t *arena, chunk_hooks_t *chunk_hooks,$/;"	f	file:
chunk_alloc_t	deps/jemalloc/include/jemalloc/jemalloc.h	/^typedef void *(chunk_alloc_t)(void *, size_t, size_t, bool *, bool *, unsigned);$/;"	t
chunk_alloc_t	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^typedef void *(chunk_alloc_t)(void *, size_t, size_t, bool *, bool *, unsigned);$/;"	t
chunk_alloc_wrapper	deps/jemalloc/include/jemalloc/internal/private_namespace.h	165;"	d
chunk_alloc_wrapper	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	165;"	d
chunk_alloc_wrapper	deps/jemalloc/src/chunk.c	/^chunk_alloc_wrapper(tsdn_t *tsdn, arena_t *arena, chunk_hooks_t *chunk_hooks,$/;"	f
chunk_arena_get	deps/jemalloc/src/chunk.c	/^chunk_arena_get(tsdn_t *tsdn, unsigned arena_ind)$/;"	f	file:
chunk_boot	deps/jemalloc/include/jemalloc/internal/private_namespace.h	166;"	d
chunk_boot	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	166;"	d
chunk_boot	deps/jemalloc/src/chunk.c	/^chunk_boot(void)$/;"	f
chunk_commit	deps/jemalloc/test/integration/chunk.c	/^chunk_commit(void *chunk, size_t size, size_t offset, size_t length,$/;"	f
chunk_commit_default	deps/jemalloc/src/chunk.c	/^chunk_commit_default(void *chunk, size_t size, size_t offset, size_t length,$/;"	f	file:
chunk_commit_t	deps/jemalloc/include/jemalloc/jemalloc.h	/^typedef bool (chunk_commit_t)(void *, size_t, size_t, size_t, unsigned);$/;"	t
chunk_commit_t	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^typedef bool (chunk_commit_t)(void *, size_t, size_t, size_t, unsigned);$/;"	t
chunk_dalloc	deps/jemalloc/test/integration/chunk.c	/^chunk_dalloc(void *chunk, size_t size, bool committed, unsigned arena_ind)$/;"	f
chunk_dalloc_cache	deps/jemalloc/include/jemalloc/internal/private_namespace.h	167;"	d
chunk_dalloc_cache	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	167;"	d
chunk_dalloc_cache	deps/jemalloc/src/chunk.c	/^chunk_dalloc_cache(tsdn_t *tsdn, arena_t *arena, chunk_hooks_t *chunk_hooks,$/;"	f
chunk_dalloc_default	deps/jemalloc/src/chunk.c	/^chunk_dalloc_default(void *chunk, size_t size, bool committed,$/;"	f	file:
chunk_dalloc_default_impl	deps/jemalloc/src/chunk.c	/^chunk_dalloc_default_impl(void *chunk, size_t size)$/;"	f	file:
chunk_dalloc_mmap	deps/jemalloc/include/jemalloc/internal/private_namespace.h	168;"	d
chunk_dalloc_mmap	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	168;"	d
chunk_dalloc_mmap	deps/jemalloc/src/chunk_mmap.c	/^chunk_dalloc_mmap(void *chunk, size_t size)$/;"	f
chunk_dalloc_t	deps/jemalloc/include/jemalloc/jemalloc.h	/^typedef bool (chunk_dalloc_t)(void *, size_t, bool, unsigned);$/;"	t
chunk_dalloc_t	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^typedef bool (chunk_dalloc_t)(void *, size_t, bool, unsigned);$/;"	t
chunk_dalloc_wrapper	deps/jemalloc/include/jemalloc/internal/private_namespace.h	169;"	d
chunk_dalloc_wrapper	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	169;"	d
chunk_dalloc_wrapper	deps/jemalloc/src/chunk.c	/^chunk_dalloc_wrapper(tsdn_t *tsdn, arena_t *arena, chunk_hooks_t *chunk_hooks,$/;"	f
chunk_decommit	deps/jemalloc/test/integration/chunk.c	/^chunk_decommit(void *chunk, size_t size, size_t offset, size_t length,$/;"	f
chunk_decommit_default	deps/jemalloc/src/chunk.c	/^chunk_decommit_default(void *chunk, size_t size, size_t offset, size_t length,$/;"	f	file:
chunk_decommit_t	deps/jemalloc/include/jemalloc/jemalloc.h	/^typedef bool (chunk_decommit_t)(void *, size_t, size_t, size_t, unsigned);$/;"	t
chunk_decommit_t	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^typedef bool (chunk_decommit_t)(void *, size_t, size_t, size_t, unsigned);$/;"	t
chunk_deregister	deps/jemalloc/include/jemalloc/internal/private_namespace.h	170;"	d
chunk_deregister	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	170;"	d
chunk_deregister	deps/jemalloc/src/chunk.c	/^chunk_deregister(const void *chunk, const extent_node_t *node)$/;"	f
chunk_dss_boot	deps/jemalloc/include/jemalloc/internal/private_namespace.h	171;"	d
chunk_dss_boot	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	171;"	d
chunk_dss_boot	deps/jemalloc/src/chunk_dss.c	/^chunk_dss_boot(void)$/;"	f
chunk_dss_max_update	deps/jemalloc/src/chunk_dss.c	/^chunk_dss_max_update(void *new_addr)$/;"	f	file:
chunk_dss_mergeable	deps/jemalloc/include/jemalloc/internal/private_namespace.h	172;"	d
chunk_dss_mergeable	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	172;"	d
chunk_dss_mergeable	deps/jemalloc/src/chunk_dss.c	/^chunk_dss_mergeable(void *chunk_a, void *chunk_b)$/;"	f
chunk_dss_prec_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	173;"	d
chunk_dss_prec_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	173;"	d
chunk_dss_prec_get	deps/jemalloc/src/chunk_dss.c	/^chunk_dss_prec_get(void)$/;"	f
chunk_dss_prec_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	174;"	d
chunk_dss_prec_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	174;"	d
chunk_dss_prec_set	deps/jemalloc/src/chunk_dss.c	/^chunk_dss_prec_set(dss_prec_t dss_prec)$/;"	f
chunk_dss_sbrk	deps/jemalloc/src/chunk_dss.c	/^chunk_dss_sbrk(intptr_t increment)$/;"	f	file:
chunk_first_best_fit	deps/jemalloc/src/chunk.c	/^chunk_first_best_fit(arena_t *arena, extent_tree_t *chunks_szsnad, size_t size)$/;"	f	file:
chunk_flags	deps/pmdk/src/libpmemobj/heap_layout.h	/^enum chunk_flags {$/;"	g
chunk_get_chunk_hdr_value	deps/pmdk/src/libpmemobj/memblock.c	/^chunk_get_chunk_hdr_value(uint16_t type, uint16_t flags, uint32_t size_idx)$/;"	f	file:
chunk_header	deps/pmdk/src/libpmemobj/heap_layout.h	/^struct chunk_header {$/;"	s
chunk_headers	deps/pmdk/src/libpmemobj/heap_layout.h	/^	struct chunk_header chunk_headers[MAX_CHUNK];$/;"	m	struct:zone	typeref:struct:zone::chunk_header
chunk_hooks	deps/jemalloc/include/jemalloc/internal/arena.h	/^	chunk_hooks_t		chunk_hooks;$/;"	m	struct:arena_s
chunk_hooks_assure_initialized	deps/jemalloc/src/chunk.c	/^chunk_hooks_assure_initialized(tsdn_t *tsdn, arena_t *arena,$/;"	f	file:
chunk_hooks_assure_initialized_impl	deps/jemalloc/src/chunk.c	/^chunk_hooks_assure_initialized_impl(tsdn_t *tsdn, arena_t *arena,$/;"	f	file:
chunk_hooks_assure_initialized_locked	deps/jemalloc/src/chunk.c	/^chunk_hooks_assure_initialized_locked(tsdn_t *tsdn, arena_t *arena,$/;"	f	file:
chunk_hooks_default	deps/jemalloc/include/jemalloc/internal/private_namespace.h	175;"	d
chunk_hooks_default	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	175;"	d
chunk_hooks_default	deps/jemalloc/src/chunk.c	/^const chunk_hooks_t	chunk_hooks_default = {$/;"	v
chunk_hooks_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	176;"	d
chunk_hooks_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	176;"	d
chunk_hooks_get	deps/jemalloc/src/chunk.c	/^chunk_hooks_get(tsdn_t *tsdn, arena_t *arena)$/;"	f
chunk_hooks_get_locked	deps/jemalloc/src/chunk.c	/^chunk_hooks_get_locked(arena_t *arena)$/;"	f	file:
chunk_hooks_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	177;"	d
chunk_hooks_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	177;"	d
chunk_hooks_set	deps/jemalloc/src/chunk.c	/^chunk_hooks_set(tsdn_t *tsdn, arena_t *arena, const chunk_hooks_t *chunk_hooks)$/;"	f
chunk_hooks_t	deps/jemalloc/include/jemalloc/jemalloc.h	/^} chunk_hooks_t;$/;"	t	typeref:struct:__anon14
chunk_hooks_t	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^} chunk_hooks_t;$/;"	t	typeref:struct:__anon1
chunk_id	deps/pmdk/src/libpmemobj/memblock.h	/^	uint32_t chunk_id; \/* index of the memory block in its zone *\/$/;"	m	struct:memory_block
chunk_id	deps/pmdk/src/libpmemobj/recycler.h	/^	uint32_t chunk_id;$/;"	m	struct:recycler_element
chunk_in_dss	deps/jemalloc/include/jemalloc/internal/private_namespace.h	178;"	d
chunk_in_dss	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	178;"	d
chunk_in_dss	deps/jemalloc/src/chunk_dss.c	/^chunk_in_dss(void *chunk)$/;"	f
chunk_in_dss_helper	deps/jemalloc/src/chunk_dss.c	/^chunk_in_dss_helper(void *chunk, void *max)$/;"	f	file:
chunk_lookup	deps/jemalloc/include/jemalloc/internal/chunk.h	/^chunk_lookup(const void *ptr, bool dependent)$/;"	f
chunk_lookup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	179;"	d
chunk_lookup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	179;"	d
chunk_merge	deps/jemalloc/test/integration/chunk.c	/^chunk_merge(void *chunk_a, size_t size_a, void *chunk_b, size_t size_b,$/;"	f
chunk_merge_default	deps/jemalloc/src/chunk.c	/^chunk_merge_default(void *chunk_a, size_t size_a, void *chunk_b, size_t size_b,$/;"	f	file:
chunk_merge_default_impl	deps/jemalloc/src/chunk.c	/^chunk_merge_default_impl(void *chunk_a, void *chunk_b)$/;"	f	file:
chunk_merge_t	deps/jemalloc/include/jemalloc/jemalloc.h	/^typedef bool (chunk_merge_t)(void *, size_t, void *, size_t, bool, unsigned);$/;"	t
chunk_merge_t	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^typedef bool (chunk_merge_t)(void *, size_t, void *, size_t, bool, unsigned);$/;"	t
chunk_npages	deps/jemalloc/include/jemalloc/internal/private_namespace.h	180;"	d
chunk_npages	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	180;"	d
chunk_npages	deps/jemalloc/src/chunk.c	/^size_t		chunk_npages;$/;"	v
chunk_pair	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^struct chunk_pair {$/;"	s	file:
chunk_purge	deps/jemalloc/test/integration/chunk.c	/^chunk_purge(void *chunk, size_t size, size_t offset, size_t length,$/;"	f
chunk_purge_default	deps/jemalloc/src/chunk.c	/^chunk_purge_default(void *chunk, size_t size, size_t offset, size_t length,$/;"	f	file:
chunk_purge_t	deps/jemalloc/include/jemalloc/jemalloc.h	/^typedef bool (chunk_purge_t)(void *, size_t, size_t, size_t, unsigned);$/;"	t
chunk_purge_t	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^typedef bool (chunk_purge_t)(void *, size_t, size_t, size_t, unsigned);$/;"	t
chunk_purge_wrapper	deps/jemalloc/include/jemalloc/internal/private_namespace.h	181;"	d
chunk_purge_wrapper	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	181;"	d
chunk_purge_wrapper	deps/jemalloc/src/chunk.c	/^chunk_purge_wrapper(tsdn_t *tsdn, arena_t *arena, chunk_hooks_t *chunk_hooks,$/;"	f
chunk_ranges	deps/pmdk/src/tools/pmempool/info.h	/^		struct ranges chunk_ranges;$/;"	m	struct:pmempool_info_args::__anon109	typeref:struct:pmempool_info_args::__anon109::ranges
chunk_record	deps/jemalloc/src/chunk.c	/^chunk_record(tsdn_t *tsdn, arena_t *arena, chunk_hooks_t *chunk_hooks,$/;"	f	file:
chunk_recycle	deps/jemalloc/src/chunk.c	/^chunk_recycle(tsdn_t *tsdn, arena_t *arena, chunk_hooks_t *chunk_hooks,$/;"	f	file:
chunk_register	deps/jemalloc/include/jemalloc/internal/private_namespace.h	182;"	d
chunk_register	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	182;"	d
chunk_register	deps/jemalloc/src/chunk.c	/^chunk_register(tsdn_t *tsdn, const void *chunk, const extent_node_t *node)$/;"	f
chunk_run	deps/pmdk/src/libpmemobj/heap_layout.h	/^struct chunk_run {$/;"	s
chunk_run_header	deps/pmdk/src/libpmemobj/heap_layout.h	/^struct chunk_run_header {$/;"	s
chunk_size	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	size_t chunk_size;$/;"	m	struct:pmem_args	file:
chunk_size	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	size_t chunk_size; \/* elementary chunk size *\/$/;"	m	struct:memset_args	file:
chunk_size	deps/pmdk/src/benchmarks/rpmem.cpp	/^	size_t chunk_size; \/* elementary chunk size *\/$/;"	m	struct:rpmem_args	file:
chunk_split	deps/jemalloc/test/integration/chunk.c	/^chunk_split(void *chunk, size_t size, size_t size_a, size_t size_b,$/;"	f
chunk_split_default	deps/jemalloc/src/chunk.c	/^chunk_split_default(void *chunk, size_t size, size_t size_a, size_t size_b,$/;"	f	file:
chunk_split_t	deps/jemalloc/include/jemalloc/jemalloc.h	/^typedef bool (chunk_split_t)(void *, size_t, size_t, size_t, bool, unsigned);$/;"	t
chunk_split_t	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^typedef bool (chunk_split_t)(void *, size_t, size_t, size_t, bool, unsigned);$/;"	t
chunk_stats_t	deps/jemalloc/include/jemalloc/internal/stats.h	/^typedef struct chunk_stats_s chunk_stats_t;$/;"	t	typeref:struct:chunk_stats_s
chunk_type	deps/pmdk/src/libpmemobj/heap_layout.h	/^enum chunk_type {$/;"	g
chunk_type_t	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^typedef enum chunk_type chunk_type_t;$/;"	t	typeref:enum:chunk_type	file:
chunk_types	deps/pmdk/src/tools/pmempool/info.h	/^		uint64_t chunk_types;$/;"	m	struct:pmempool_info_args::__anon109
chunkcnt	deps/pmdk/src/tools/pmempool/dump.c	/^	uint64_t chunkcnt;$/;"	m	struct:pmempool_dump	file:
chunks	deps/pmdk/src/libpmemobj/heap_layout.h	/^	struct chunk chunks[];$/;"	m	struct:zone	typeref:struct:zone::chunk
chunks_ad_cached	deps/jemalloc/include/jemalloc/internal/arena.h	/^	extent_tree_t		chunks_ad_cached;$/;"	m	struct:arena_s
chunks_ad_retained	deps/jemalloc/include/jemalloc/internal/arena.h	/^	extent_tree_t		chunks_ad_retained;$/;"	m	struct:arena_s
chunks_cache	deps/jemalloc/include/jemalloc/internal/arena.h	/^	extent_node_t		chunks_cache;$/;"	m	struct:arena_s
chunks_mtx	deps/jemalloc/include/jemalloc/internal/arena.h	/^	malloc_mutex_t		chunks_mtx;$/;"	m	struct:arena_s
chunks_per_zone	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t chunks_per_zone;$/;"	m	struct:heap_header
chunks_rtree	deps/jemalloc/include/jemalloc/internal/private_namespace.h	183;"	d
chunks_rtree	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	183;"	d
chunks_rtree	deps/jemalloc/src/chunk.c	/^rtree_t		chunks_rtree;$/;"	v
chunks_rtree_node_alloc	deps/jemalloc/src/chunk.c	/^chunks_rtree_node_alloc(size_t nelms)$/;"	f	file:
chunks_szsnad_cached	deps/jemalloc/include/jemalloc/internal/arena.h	/^	extent_tree_t		chunks_szsnad_cached;$/;"	m	struct:arena_s
chunks_szsnad_retained	deps/jemalloc/include/jemalloc/internal/arena.h	/^	extent_tree_t		chunks_szsnad_retained;$/;"	m	struct:arena_s
chunksize	deps/jemalloc/include/jemalloc/internal/private_namespace.h	184;"	d
chunksize	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	184;"	d
chunksize	deps/jemalloc/src/chunk.c	/^size_t		chunksize;$/;"	v
chunksize	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t chunksize;$/;"	m	struct:heap_header
chunksize	deps/pmdk/src/tools/pmempool/dump.c	/^	size_t chunksize;$/;"	m	struct:pmempool_dump	file:
chunksize_mask	deps/jemalloc/include/jemalloc/internal/private_namespace.h	185;"	d
chunksize_mask	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	185;"	d
chunksize_mask	deps/jemalloc/src/chunk.c	/^size_t		chunksize_mask; \/* (chunksize - 1). *\/$/;"	v
ci	deps/lua/src/lstate.h	/^  CallInfo *ci;  \/* call info for current function *\/$/;"	m	struct:lua_State
ci_func	deps/lua/src/lstate.h	60;"	d
ckh_bucket_search	deps/jemalloc/src/ckh.c	/^ckh_bucket_search(ckh_t *ckh, size_t bucket, const void *key)$/;"	f
ckh_count	deps/jemalloc/include/jemalloc/internal/private_namespace.h	186;"	d
ckh_count	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	186;"	d
ckh_count	deps/jemalloc/src/ckh.c	/^ckh_count(ckh_t *ckh)$/;"	f
ckh_delete	deps/jemalloc/include/jemalloc/internal/private_namespace.h	187;"	d
ckh_delete	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	187;"	d
ckh_delete	deps/jemalloc/src/ckh.c	/^ckh_delete(tsd_t *tsd, ckh_t *ckh)$/;"	f
ckh_evict_reloc_insert	deps/jemalloc/src/ckh.c	/^ckh_evict_reloc_insert(ckh_t *ckh, size_t argbucket, void const **argkey,$/;"	f
ckh_grow	deps/jemalloc/src/ckh.c	/^ckh_grow(tsd_t *tsd, ckh_t *ckh)$/;"	f	file:
ckh_hash_t	deps/jemalloc/include/jemalloc/internal/ckh.h	/^typedef void ckh_hash_t (const void *, size_t[2]);$/;"	t
ckh_insert	deps/jemalloc/include/jemalloc/internal/private_namespace.h	188;"	d
ckh_insert	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	188;"	d
ckh_insert	deps/jemalloc/src/ckh.c	/^ckh_insert(tsd_t *tsd, ckh_t *ckh, const void *key, const void *data)$/;"	f
ckh_isearch	deps/jemalloc/src/ckh.c	/^ckh_isearch(ckh_t *ckh, const void *key)$/;"	f
ckh_iter	deps/jemalloc/include/jemalloc/internal/private_namespace.h	189;"	d
ckh_iter	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	189;"	d
ckh_iter	deps/jemalloc/src/ckh.c	/^ckh_iter(ckh_t *ckh, size_t *tabind, void **key, void **data)$/;"	f
ckh_keycomp_t	deps/jemalloc/include/jemalloc/internal/ckh.h	/^typedef bool ckh_keycomp_t (const void *, const void *);$/;"	t
ckh_new	deps/jemalloc/include/jemalloc/internal/private_namespace.h	190;"	d
ckh_new	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	190;"	d
ckh_new	deps/jemalloc/src/ckh.c	/^ckh_new(tsd_t *tsd, ckh_t *ckh, size_t minitems, ckh_hash_t *hash,$/;"	f
ckh_pointer_hash	deps/jemalloc/include/jemalloc/internal/private_namespace.h	191;"	d
ckh_pointer_hash	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	191;"	d
ckh_pointer_hash	deps/jemalloc/src/ckh.c	/^ckh_pointer_hash(const void *key, size_t r_hash[2])$/;"	f
ckh_pointer_keycomp	deps/jemalloc/include/jemalloc/internal/private_namespace.h	192;"	d
ckh_pointer_keycomp	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	192;"	d
ckh_pointer_keycomp	deps/jemalloc/src/ckh.c	/^ckh_pointer_keycomp(const void *k1, const void *k2)$/;"	f
ckh_rebuild	deps/jemalloc/src/ckh.c	/^ckh_rebuild(ckh_t *ckh, ckhc_t *aTab)$/;"	f
ckh_remove	deps/jemalloc/include/jemalloc/internal/private_namespace.h	193;"	d
ckh_remove	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	193;"	d
ckh_remove	deps/jemalloc/src/ckh.c	/^ckh_remove(tsd_t *tsd, ckh_t *ckh, const void *searchkey, void **key,$/;"	f
ckh_s	deps/jemalloc/include/jemalloc/internal/ckh.h	/^struct ckh_s {$/;"	s
ckh_search	deps/jemalloc/include/jemalloc/internal/private_namespace.h	194;"	d
ckh_search	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	194;"	d
ckh_search	deps/jemalloc/src/ckh.c	/^ckh_search(ckh_t *ckh, const void *searchkey, void **key, void **data)$/;"	f
ckh_shrink	deps/jemalloc/src/ckh.c	/^ckh_shrink(tsd_t *tsd, ckh_t *ckh)$/;"	f	file:
ckh_string_hash	deps/jemalloc/include/jemalloc/internal/private_namespace.h	195;"	d
ckh_string_hash	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	195;"	d
ckh_string_hash	deps/jemalloc/src/ckh.c	/^ckh_string_hash(const void *key, size_t r_hash[2])$/;"	f
ckh_string_keycomp	deps/jemalloc/include/jemalloc/internal/private_namespace.h	196;"	d
ckh_string_keycomp	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	196;"	d
ckh_string_keycomp	deps/jemalloc/src/ckh.c	/^ckh_string_keycomp(const void *k1, const void *k2)$/;"	f
ckh_t	deps/jemalloc/include/jemalloc/internal/ckh.h	/^typedef struct ckh_s ckh_t;$/;"	t	typeref:struct:ckh_s
ckh_try_bucket_insert	deps/jemalloc/src/ckh.c	/^ckh_try_bucket_insert(ckh_t *ckh, size_t bucket, const void *key,$/;"	f
ckh_try_insert	deps/jemalloc/src/ckh.c	/^ckh_try_insert(ckh_t *ckh, void const**argkey, void const**argdata)$/;"	f
ckhc_s	deps/jemalloc/include/jemalloc/internal/ckh.h	/^struct ckhc_s {$/;"	s
ckhc_t	deps/jemalloc/include/jemalloc/internal/ckh.h	/^typedef struct ckhc_s ckhc_t;$/;"	t	typeref:struct:ckhc_s
cksum	src/rio.h	/^    uint64_t cksum;$/;"	m	struct:_rio
cl	deps/lua/src/lstate.h	/^  union Closure cl;$/;"	m	union:GCObject	typeref:union:GCObject::Closure
cl_flushed	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^cl_flushed(const void *addr, size_t len, uintptr_t alignment)$/;"	f	file:
class	deps/pmdk/src/examples/libpmemobj/slab_allocator/slab_allocator.c	/^	struct pobj_alloc_class_desc class;$/;"	m	struct:slab_allocator	typeref:struct:slab_allocator::pobj_alloc_class_desc	file:
class_from_string	deps/pmdk/src/test/unittest/configurator.py	/^    def class_from_string(name, base):$/;"	f	function:_str2ctx
class_id	deps/pmdk/src/include/libpmemobj/ctl.h	/^	unsigned class_id;$/;"	m	struct:pobj_alloc_class_desc
class_map_by_alloc_size	deps/pmdk/src/libpmemobj/alloc_class.c	/^	uint8_t *class_map_by_alloc_size;$/;"	m	struct:alloc_class_collection	file:
class_map_by_unit_size	deps/pmdk/src/libpmemobj/alloc_class.c	/^	struct critnib *class_map_by_unit_size;$/;"	m	struct:alloc_class_collection	typeref:struct:alloc_class_collection::critnib	file:
class_stats	deps/pmdk/src/tools/pmempool/info.h	/^	VEC(, struct pmem_obj_class_stats) class_stats;$/;"	m	struct:pmem_obj_zone_stats
classend	deps/lua/src/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:
clean	deps/pmdk/src/test/scope/TESTS.py	/^    def clean(self, ctx):$/;"	m	class:Common
clean	deps/pmdk/src/test/unittest/basetest.py	/^    def clean(self, ctx):$/;"	m	class:BaseTest
clean_all_remote_nodes	deps/pmdk/src/test/unittest/unittest.sh	/^function clean_all_remote_nodes() {$/;"	f
clean_remote_node	deps/pmdk/src/test/unittest/unittest.sh	/^function clean_remote_node() {$/;"	f
cleanup	deps/hiredis/async.h	/^        void (*cleanup)(void *privdata);$/;"	m	struct:redisAsyncContext::__anon147
cleanup	deps/pmdk/src/libpmemobj/lane.h	/^	section_global_op cleanup;$/;"	m	struct:section_operations
cleanup	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^cleanup(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
cleanup	deps/pmdk/src/test/obj_sync/obj_sync.c	/^cleanup(char test_type)$/;"	f	file:
cleanup	tests/instances.tcl	/^proc cleanup {} {$/;"	p
cleanup	tests/test_helper.tcl	/^proc cleanup {} {$/;"	p
cleanup_device	deps/pmdk/src/tools/daxio/daxio.c	/^cleanup_device(struct daxio_device *dev)$/;"	f	file:
cleanup_devices	deps/pmdk/src/tools/daxio/daxio.c	/^cleanup_devices(struct daxio_context *ctx)$/;"	f	file:
cleanups	deps/jemalloc/src/tsd.c	/^static malloc_tsd_cleanup_t cleanups[MALLOC_TSD_CLEANUPS_MAX];$/;"	v	file:
clear	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	int(*clear)(PMEMobjpool *pop, TOID(struct map) map);$/;"	m	struct:map_ops
clearNodeFailureIfNeeded	src/cluster.c	/^void clearNodeFailureIfNeeded(clusterNode *node) {$/;"	f
clear_bad_blocks	deps/pmdk/src/tools/daxio/daxio.c	/^	int clear_bad_blocks;$/;"	m	struct:daxio_context	file:
clear_inodes	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^clear_inodes(struct inodes *inodes)$/;"	f	file:
clear_test_values	deps/pmdk/src/test/obj_memops/obj_memops.c	/^clear_test_values(struct test_object *object)$/;"	f	file:
clearbadblocks	deps/pmdk/src/tools/pmempool/create.c	/^	int clearbadblocks;$/;"	m	struct:pmempool_create	file:
cleartable	deps/lua/src/lgc.c	/^static void cleartable (GCObject *l) {$/;"	f	file:
cliAuth	src/redis-cli.c	/^static int cliAuth(void) {$/;"	f	file:
cliConnect	src/redis-cli.c	/^static int cliConnect(int force) {$/;"	f	file:
cliFormatReplyCSV	src/redis-cli.c	/^static sds cliFormatReplyCSV(redisReply *r) {$/;"	f	file:
cliFormatReplyRaw	src/redis-cli.c	/^static sds cliFormatReplyRaw(redisReply *r) {$/;"	f	file:
cliFormatReplyTTY	src/redis-cli.c	/^static sds cliFormatReplyTTY(redisReply *r, char *prefix) {$/;"	f	file:
cliInitHelp	src/redis-cli.c	/^static void cliInitHelp(void) {$/;"	f	file:
cliIntegrateHelp	src/redis-cli.c	/^static void cliIntegrateHelp(void) {$/;"	f	file:
cliLoadPreferences	src/redis-cli.c	/^void cliLoadPreferences(void) {$/;"	f
cliOutputCommandHelp	src/redis-cli.c	/^static void cliOutputCommandHelp(struct commandHelp *help, int group) {$/;"	f	file:
cliOutputGenericHelp	src/redis-cli.c	/^static void cliOutputGenericHelp(void) {$/;"	f	file:
cliOutputHelp	src/redis-cli.c	/^static void cliOutputHelp(int argc, char **argv) {$/;"	f	file:
cliPrintContextError	src/redis-cli.c	/^static void cliPrintContextError(void) {$/;"	f	file:
cliReadReply	src/redis-cli.c	/^static int cliReadReply(int output_raw_strings) {$/;"	f	file:
cliRefreshPrompt	src/redis-cli.c	/^static void cliRefreshPrompt(void) {$/;"	f	file:
cliSelect	src/redis-cli.c	/^static int cliSelect(void) {$/;"	f	file:
cliSendCommand	src/redis-cli.c	/^static int cliSendCommand(int argc, char **argv, int repeat) {$/;"	f	file:
cliSetPreferences	src/redis-cli.c	/^void cliSetPreferences(char **argv, int argc, int interactive) {$/;"	f
cliSplitArgs	src/redis-cli.c	/^static sds *cliSplitArgs(char *line, int *argc) {$/;"	f	file:
cliVersion	src/redis-cli.c	/^static sds cliVersion(void) {$/;"	f	file:
client	src/redis-benchmark.c	/^} *client;$/;"	t	typeref:struct:_client	file:
client	src/server.h	/^    client *client;$/;"	m	struct:pubsubPattern
client	src/server.h	/^typedef struct client {$/;"	s
client	src/server.h	/^} client;$/;"	t	typeref:struct:client
clientBufferLimitsConfig	src/server.h	/^typedef struct clientBufferLimitsConfig {$/;"	s
clientBufferLimitsConfig	src/server.h	/^} clientBufferLimitsConfig;$/;"	t	typeref:struct:clientBufferLimitsConfig
clientBufferLimitsDefaults	src/config.c	/^clientBufferLimitsConfig clientBufferLimitsDefaults[CLIENT_TYPE_OBUF_COUNT] = {$/;"	v
clientCommand	src/networking.c	/^void clientCommand(client *c) {$/;"	f
clientData	src/ae.h	/^    void *clientData;$/;"	m	struct:aeFileEvent
clientData	src/ae.h	/^    void *clientData;$/;"	m	struct:aeTimeEvent
clientDone	src/redis-benchmark.c	/^static void clientDone(client c) {$/;"	f	file:
clientHasPendingReplies	src/networking.c	/^int clientHasPendingReplies(client *c) {$/;"	f
clientSubscriptionsCount	src/pubsub.c	/^int clientSubscriptionsCount(client *c) {$/;"	f
client_accept_seq	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(client_accept_seq);$/;"	v
client_accept_sim	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(client_accept_sim);$/;"	v
client_bad_msg_create	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_create.c	/^client_bad_msg_create(const char *ctarget)$/;"	f	file:
client_bad_msg_hdr	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(client_bad_msg_hdr);$/;"	v
client_bad_msg_hdr	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_msg_hdr.c	/^client_bad_msg_hdr(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_bad_msg_open	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_open.c	/^client_bad_msg_open(const char *ctarget)$/;"	f	file:
client_close	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_close.c	/^client_close(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_close	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(client_close);$/;"	v
client_close	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_close.c	/^client_close(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_close	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(client_close);$/;"	v
client_close_begin	deps/pmdk/src/test/rpmem_fip/rpmem_fip_oob.c	/^client_close_begin(client_t *c)$/;"	f
client_close_cb	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^client_close_cb(uv_handle_t *handle)$/;"	f	file:
client_close_end	deps/pmdk/src/test/rpmem_fip/rpmem_fip_oob.c	/^client_close_end(client_t *c)$/;"	f
client_close_errno	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_close.c	/^client_close_errno(char *target, int ex_errno)$/;"	f	file:
client_close_error	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_close.c	/^client_close_error(char *target)$/;"	f	file:
client_connect	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^TEST_CASE_DECLARE(client_connect);$/;"	v
client_connect	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^client_connect(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_connect	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(client_connect);$/;"	v
client_connect	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_misc.c	/^client_connect(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_connect_wait	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.c	/^client_connect_wait(struct rpmem_obc *rpc, char *target)$/;"	f
client_create	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(client_create);$/;"	v
client_create	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_create.c	/^client_create(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_create	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^TEST_CASE_DECLARE(client_create);$/;"	v
client_create	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^client_create(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_create	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(client_create);$/;"	v
client_create	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_create.c	/^client_create(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_create_errno	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_create.c	/^client_create_errno(char *target, int ex_errno)$/;"	f	file:
client_create_error	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_create.c	/^client_create_error(char *target)$/;"	f	file:
client_data	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^struct client_data {$/;"	s	file:
client_econnreset	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(client_econnreset);$/;"	v
client_econnreset	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_misc.c	/^client_econnreset(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_enotconn	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(client_enotconn);$/;"	v
client_enotconn	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_misc.c	/^client_enotconn(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_exchange	deps/pmdk/src/test/rpmem_fip/rpmem_fip_oob.c	/^client_exchange(struct rpmem_target_info *info,$/;"	f
client_flush	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^TEST_CASE_DECLARE(client_flush);$/;"	v
client_flush	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^client_flush(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_flush_mt	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^TEST_CASE_DECLARE(client_flush_mt);$/;"	v
client_flush_mt	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^client_flush_mt(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_flush_thread	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^client_flush_thread(void *arg)$/;"	f	file:
client_init	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^TEST_CASE_DECLARE(client_init);$/;"	v
client_init	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^client_init(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_max_querybuf_len	src/server.h	/^    size_t client_max_querybuf_len; \/* Limit for client query buffer length *\/$/;"	m	struct:redisServer
client_monitor	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(client_monitor);$/;"	v
client_monitor	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_misc.c	/^client_monitor(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_msg_close_noresp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_close.c	/^client_msg_close_noresp(const char *ctarget)$/;"	f	file:
client_msg_close_resp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_close.c	/^client_msg_close_resp(const char *ctarget, int status)$/;"	f	file:
client_msg_create_noresp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_create.c	/^client_msg_create_noresp(const char *ctarget)$/;"	f	file:
client_msg_create_resp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_create.c	/^client_msg_create_resp(const char *ctarget, int status)$/;"	f	file:
client_msg_open_noresp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_open.c	/^client_msg_open_noresp(const char *ctarget)$/;"	f	file:
client_msg_open_resp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_open.c	/^client_msg_open_resp(const char *ctarget, int status)$/;"	f	file:
client_msg_set_attr_noresp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_set_attr.c	/^client_msg_set_attr_noresp(const char *ctarget)$/;"	f	file:
client_msg_set_attr_resp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_set_attr.c	/^client_msg_set_attr_resp(const char *ctarget, int status)$/;"	f	file:
client_obuf_limits	src/server.h	/^    clientBufferLimitsConfig client_obuf_limits[CLIENT_TYPE_OBUF_COUNT];$/;"	m	struct:redisServer
client_open	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(client_open);$/;"	v
client_open	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_open.c	/^client_open(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_open	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^TEST_CASE_DECLARE(client_open);$/;"	v
client_open	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^client_open(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_open	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(client_open);$/;"	v
client_open	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_open.c	/^client_open(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_open_errno	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_open.c	/^client_open_errno(char *target, int ex_errno)$/;"	f	file:
client_open_error	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_open.c	/^client_open_error(char *target)$/;"	f	file:
client_persist	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^TEST_CASE_DECLARE(client_persist);$/;"	v
client_persist	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^client_persist(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_persist_mt	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^TEST_CASE_DECLARE(client_persist_mt);$/;"	v
client_persist_mt	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^client_persist_mt(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_persist_thread	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^client_persist_thread(void *arg)$/;"	f	file:
client_read	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^TEST_CASE_DECLARE(client_read);$/;"	v
client_read	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^client_read(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_reconfig_script	src/sentinel.c	/^    char *client_reconfig_script;$/;"	m	struct:sentinelRedisInstance	file:
client_send_disconnect	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_misc.c	/^client_send_disconnect(char *target, void *msg, size_t size)$/;"	f	file:
client_set_attr	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(client_set_attr);$/;"	v
client_set_attr	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	/^client_set_attr(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_set_attr	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^TEST_CASE_DECLARE(client_set_attr);$/;"	v
client_set_attr	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^client_set_attr(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_set_attr	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(client_set_attr);$/;"	v
client_set_attr	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_set_attr.c	/^client_set_attr(const struct test_case *tc, int argc, char *argv[])$/;"	f
client_set_attr_errno	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	/^client_set_attr_errno(char *target, int ex_errno)$/;"	f	file:
client_set_attr_error	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	/^client_set_attr_error(char *target)$/;"	f	file:
client_set_attr_fini	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	/^client_set_attr_fini(struct rpmem_obc *rpc)$/;"	f	file:
client_set_attr_init	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	/^client_set_attr_init(char *target)$/;"	f	file:
client_t	deps/pmdk/src/test/rpmem_fip/rpmem_fip_oob.h	/^typedef struct rpmem_ssh client_t;$/;"	t	typeref:struct:rpmem_ssh
client_wq_size	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^TEST_CASE_DECLARE(client_wq_size);$/;"	v
client_wq_size	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^client_wq_size(const struct test_case *tc, int argc, char *argv[])$/;"	f
clients	src/redis-benchmark.c	/^    list *clients;$/;"	m	struct:config	file:
clients	src/server.h	/^    list *clients;              \/* List of active clients *\/$/;"	m	struct:redisServer
clientsArePaused	src/networking.c	/^int clientsArePaused(void) {$/;"	f
clientsCron	src/server.c	/^void clientsCron(void) {$/;"	f
clientsCronHandleTimeout	src/server.c	/^int clientsCronHandleTimeout(client *c, mstime_t now_ms) {$/;"	f
clientsCronResizeQueryBuffer	src/server.c	/^int clientsCronResizeQueryBuffer(client *c) {$/;"	f
clients_pause_end_time	src/server.h	/^    mstime_t clients_pause_end_time; \/* Time when we undo clients_paused *\/$/;"	m	struct:redisServer
clients_paused	src/server.h	/^    int clients_paused;         \/* True if clients are currently paused *\/$/;"	m	struct:redisServer
clients_pending_write	src/server.h	/^    list *clients_pending_write; \/* There is to write or install handler. *\/$/;"	m	struct:redisServer
clients_to_close	src/server.h	/^    list *clients_to_close;     \/* Clients to close asynchronously *\/$/;"	m	struct:redisServer
clients_waiting_acks	src/server.h	/^    list *clients_waiting_acks;         \/* Clients waiting in WAIT command. *\/$/;"	m	struct:redisServer
clnt_close	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^clnt_close(struct rpmem_ssh *ssh)$/;"	f
clnt_connect	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^clnt_connect(char *target)$/;"	f
clnt_recv	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^clnt_recv(struct rpmem_ssh *ssh, void *buff, size_t len)$/;"	f
clnt_send	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^clnt_send(struct rpmem_ssh *ssh, const void *buff, size_t len)$/;"	f
clnt_wait_disconnect	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^clnt_wait_disconnect(struct rpmem_ssh *ssh)$/;"	f
clo_check_range_params	deps/pmdk/src/benchmarks/clo.cpp	/^clo_check_range_params(uint64_t step, char step_type)$/;"	f	file:
clo_eval_range_fn	deps/pmdk/src/benchmarks/clo.cpp	/^typedef int (*clo_eval_range_fn)(struct benchmark_clo *clo, void *first,$/;"	t	file:
clo_eval_range_int	deps/pmdk/src/benchmarks/clo.cpp	/^clo_eval_range_int(struct benchmark_clo *clo, void *first, void *step,$/;"	f	file:
clo_eval_range_uint	deps/pmdk/src/benchmarks/clo.cpp	/^clo_eval_range_uint(struct benchmark_clo *clo, void *first, void *step,$/;"	f	file:
clo_field_offset	deps/pmdk/src/benchmarks/benchmark.hpp	244;"	d
clo_field_size	deps/pmdk/src/benchmarks/benchmark.hpp	245;"	d
clo_get_by_long	deps/pmdk/src/benchmarks/clo.cpp	/^clo_get_by_long(struct benchmark_clo *clos, size_t nclo, const char *opt_long)$/;"	f	file:
clo_get_by_short	deps/pmdk/src/benchmarks/clo.cpp	/^clo_get_by_short(struct benchmark_clo *clos, size_t nclo, char opt_short)$/;"	f	file:
clo_get_long_options	deps/pmdk/src/benchmarks/clo.cpp	/^clo_get_long_options(struct benchmark_clo *clos, size_t nclo)$/;"	f	file:
clo_get_optstr	deps/pmdk/src/benchmarks/clo.cpp	/^clo_get_optstr(struct benchmark_clo *clos, size_t nclo)$/;"	f	file:
clo_get_scenarios	deps/pmdk/src/benchmarks/clo.cpp	/^clo_get_scenarios(int argc, char *argv[], struct scenarios *available_scenarios,$/;"	f
clo_parse	deps/pmdk/src/benchmarks/clo.cpp	/^static clo_parse_fn clo_parse[CLO_TYPE_MAX] = {$/;"	v	file:
clo_parse_flag	deps/pmdk/src/benchmarks/clo.cpp	/^clo_parse_flag(struct benchmark_clo *clo, const char *arg,$/;"	f	file:
clo_parse_fn	deps/pmdk/src/benchmarks/clo.cpp	/^typedef int (*clo_parse_fn)(struct benchmark_clo *clo, const char *arg,$/;"	t	file:
clo_parse_int	deps/pmdk/src/benchmarks/clo.cpp	/^clo_parse_int(struct benchmark_clo *clo, const char *arg,$/;"	f	file:
clo_parse_range	deps/pmdk/src/benchmarks/clo.cpp	/^clo_parse_range(struct benchmark_clo *clo, const char *arg,$/;"	f	file:
clo_parse_ranges	deps/pmdk/src/benchmarks/clo.cpp	/^clo_parse_ranges(struct benchmark_clo *clo, const char *arg,$/;"	f	file:
clo_parse_single_fn	deps/pmdk/src/benchmarks/clo.cpp	/^typedef int (*clo_parse_single_fn)(struct benchmark_clo *clo, const char *arg,$/;"	t	file:
clo_parse_single_int	deps/pmdk/src/benchmarks/clo.cpp	/^clo_parse_single_int(struct benchmark_clo *clo, const char *arg, void *ptr)$/;"	f	file:
clo_parse_single_uint	deps/pmdk/src/benchmarks/clo.cpp	/^clo_parse_single_uint(struct benchmark_clo *clo, const char *arg, void *ptr)$/;"	f	file:
clo_parse_str	deps/pmdk/src/benchmarks/clo.cpp	/^clo_parse_str(struct benchmark_clo *clo, const char *arg,$/;"	f	file:
clo_parse_uint	deps/pmdk/src/benchmarks/clo.cpp	/^clo_parse_uint(struct benchmark_clo *clo, const char *arg,$/;"	f	file:
clo_set_defaults	deps/pmdk/src/benchmarks/clo.cpp	/^clo_set_defaults(struct benchmark_clo *clos, size_t nclo,$/;"	f	file:
clo_str	deps/pmdk/src/benchmarks/clo.cpp	/^static clo_str_fn clo_str[CLO_TYPE_MAX] = {$/;"	v	file:
clo_str_flag	deps/pmdk/src/benchmarks/clo.cpp	/^clo_str_flag(struct benchmark_clo *clo, void *addr, size_t size)$/;"	f	file:
clo_str_fn	deps/pmdk/src/benchmarks/clo.cpp	/^typedef const char *(*clo_str_fn)(struct benchmark_clo *clo, void *addr,$/;"	t	file:
clo_str_int	deps/pmdk/src/benchmarks/clo.cpp	/^clo_str_int(struct benchmark_clo *clo, void *addr, size_t size)$/;"	f	file:
clo_str_str	deps/pmdk/src/benchmarks/clo.cpp	/^clo_str_str(struct benchmark_clo *clo, void *addr, size_t size)$/;"	f	file:
clo_str_uint	deps/pmdk/src/benchmarks/clo.cpp	/^clo_str_uint(struct benchmark_clo *clo, void *addr, size_t size)$/;"	f	file:
clo_type	deps/pmdk/src/benchmarks/benchmark.hpp	/^enum clo_type {$/;"	g
clo_vec	deps/pmdk/src/benchmarks/clo_vec.hpp	/^struct clo_vec {$/;"	s
clo_vec_add_alloc	deps/pmdk/src/benchmarks/clo_vec.cpp	/^clo_vec_add_alloc(struct clo_vec *clovec, void *ptr)$/;"	f
clo_vec_alloc	deps/pmdk/src/benchmarks/clo_vec.cpp	/^clo_vec_alloc(size_t size)$/;"	f
clo_vec_alloc	deps/pmdk/src/benchmarks/clo_vec.hpp	/^struct clo_vec_alloc {$/;"	s
clo_vec_args	deps/pmdk/src/benchmarks/clo_vec.hpp	/^struct clo_vec_args {$/;"	s
clo_vec_free	deps/pmdk/src/benchmarks/clo_vec.cpp	/^clo_vec_free(struct clo_vec *clovec)$/;"	f
clo_vec_get_args	deps/pmdk/src/benchmarks/clo_vec.cpp	/^clo_vec_get_args(struct clo_vec *clovec, size_t i)$/;"	f
clo_vec_grow	deps/pmdk/src/benchmarks/clo_vec.cpp	/^clo_vec_grow(struct clo_vec *clovec, size_t new_len)$/;"	f	file:
clo_vec_memcpy	deps/pmdk/src/benchmarks/clo_vec.cpp	/^clo_vec_memcpy(struct clo_vec *clovec, size_t off, size_t size, void *ptr)$/;"	f
clo_vec_memcpy_list	deps/pmdk/src/benchmarks/clo_vec.cpp	/^clo_vec_memcpy_list(struct clo_vec *clovec, size_t off, size_t size,$/;"	f
clo_vec_value	deps/pmdk/src/benchmarks/clo_vec.hpp	/^struct clo_vec_value {$/;"	s
clo_vec_vlist	deps/pmdk/src/benchmarks/clo_vec.hpp	/^struct clo_vec_vlist {$/;"	s
clo_vec_vlist_add	deps/pmdk/src/benchmarks/clo_vec.cpp	/^clo_vec_vlist_add(struct clo_vec_vlist *list, void *ptr, size_t size)$/;"	f
clo_vec_vlist_alloc	deps/pmdk/src/benchmarks/clo_vec.cpp	/^clo_vec_vlist_alloc(void)$/;"	f
clo_vec_vlist_free	deps/pmdk/src/benchmarks/clo_vec.cpp	/^clo_vec_vlist_free(struct clo_vec_vlist *list)$/;"	f
clock_seq_hi	deps/pmdk/src/common/uuid.h	/^	uint8_t clock_seq_hi;$/;"	m	struct:uuid
clock_seq_low	deps/pmdk/src/common/uuid.h	/^	uint8_t	clock_seq_low;$/;"	m	struct:uuid
clone_scenario	deps/pmdk/src/benchmarks/scenario.cpp	/^clone_scenario(struct scenario *src_scenario)$/;"	f
clos	deps/pmdk/src/benchmarks/benchmark.hpp	/^	struct benchmark_clo *clos;$/;"	m	struct:benchmark_info	typeref:struct:benchmark_info::benchmark_clo
clos	deps/pmdk/src/benchmarks/pmembench.cpp	/^	struct benchmark_clo *clos;$/;"	m	struct:benchmark	typeref:struct:benchmark::benchmark_clo	file:
close	deps/pmdk/src/tools/rpmemd/rpmemd_obc.h	/^	int (*close)(struct rpmemd_obc *obc, void *arg, int flags);$/;"	m	struct:rpmemd_obc_requests
closeDirectLogFiledes	src/debug.c	/^void closeDirectLogFiledes(int fd) {$/;"	f
closeListeningSockets	src/server.c	/^void closeListeningSockets(int unlink_unix_socket) {$/;"	f
close_cli	tests/integration/redis-cli.tcl	/^    proc close_cli {fd} {$/;"	p
close_func	deps/lua/src/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:
close_output_files	deps/pmdk/src/test/unittest/ut.c	/^close_output_files(void)$/;"	f	file:
close_replication_stream	tests/test_helper.tcl	/^proc close_replication_stream {s} {$/;"	p
close_state	deps/lua/src/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:
closelistfield	deps/lua/src/lparser.c	/^static void closelistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
closing	deps/pmdk/src/librpmem/rpmem.c	/^	int closing;$/;"	m	struct:rpmem_pool	file:
closing	deps/pmdk/src/librpmem/rpmem_fip.c	/^	int closing; \/* closing connections in progress *\/$/;"	m	struct:rpmem_fip	file:
closing	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^	int closing;$/;"	m	struct:req_arg	file:
closing	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^	int closing;		\/* set when closing connection *\/$/;"	m	struct:rpmemd	file:
closing	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	volatile int closing;	\/* flag for closing background threads *\/$/;"	m	struct:rpmemd_fip	file:
clovec	deps/pmdk/src/benchmarks/pmembench.cpp	/^	struct clo_vec *clovec;$/;"	m	struct:pmembench	typeref:struct:pmembench::clo_vec	file:
cluster	src/server.h	/^    struct clusterState *cluster;  \/* State of the cluster *\/$/;"	m	struct:redisServer	typeref:struct:redisServer::clusterState
clusterAcceptHandler	src/cluster.c	/^void clusterAcceptHandler(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
clusterAddNode	src/cluster.c	/^int clusterAddNode(clusterNode *node) {$/;"	f
clusterAddSlot	src/cluster.c	/^int clusterAddSlot(clusterNode *n, int slot) {$/;"	f
clusterBeforeSleep	src/cluster.c	/^void clusterBeforeSleep(void) {$/;"	f
clusterBlacklistAddNode	src/cluster.c	/^void clusterBlacklistAddNode(clusterNode *node) {$/;"	f
clusterBlacklistCleanup	src/cluster.c	/^void clusterBlacklistCleanup(void) {$/;"	f
clusterBlacklistExists	src/cluster.c	/^int clusterBlacklistExists(char *nodeid) {$/;"	f
clusterBroadcastMessage	src/cluster.c	/^void clusterBroadcastMessage(void *buf, size_t len) {$/;"	f
clusterBroadcastPong	src/cluster.c	/^void clusterBroadcastPong(int target) {$/;"	f
clusterBuildMessageHdr	src/cluster.c	/^void clusterBuildMessageHdr(clusterMsg *hdr, int type) {$/;"	f
clusterBumpConfigEpochWithoutConsensus	src/cluster.c	/^int clusterBumpConfigEpochWithoutConsensus(void) {$/;"	f
clusterCloseAllSlots	src/cluster.c	/^void clusterCloseAllSlots(void) {$/;"	f
clusterCommand	src/cluster.c	/^void clusterCommand(client *c) {$/;"	f
clusterCountNonFailingSlaves	src/cluster.c	/^int clusterCountNonFailingSlaves(clusterNode *n) {$/;"	f
clusterCron	src/cluster.c	/^void clusterCron(void) {$/;"	f
clusterDelNode	src/cluster.c	/^void clusterDelNode(clusterNode *delnode) {$/;"	f
clusterDelNodeSlots	src/cluster.c	/^int clusterDelNodeSlots(clusterNode *node) {$/;"	f
clusterDelSlot	src/cluster.c	/^int clusterDelSlot(int slot) {$/;"	f
clusterDoBeforeSleep	src/cluster.c	/^void clusterDoBeforeSleep(int flags) {$/;"	f
clusterFailoverReplaceYourMaster	src/cluster.c	/^void clusterFailoverReplaceYourMaster(void) {$/;"	f
clusterGenNodeDescription	src/cluster.c	/^sds clusterGenNodeDescription(clusterNode *node) {$/;"	f
clusterGenNodesDescription	src/cluster.c	/^sds clusterGenNodesDescription(int filter) {$/;"	f
clusterGetMaxEpoch	src/cluster.c	/^uint64_t clusterGetMaxEpoch(void) {$/;"	f
clusterGetSlaveRank	src/cluster.c	/^int clusterGetSlaveRank(void) {$/;"	f
clusterHandleConfigEpochCollision	src/cluster.c	/^void clusterHandleConfigEpochCollision(clusterNode *sender) {$/;"	f
clusterHandleManualFailover	src/cluster.c	/^void clusterHandleManualFailover(void) {$/;"	f
clusterHandleSlaveFailover	src/cluster.c	/^void clusterHandleSlaveFailover(void) {$/;"	f
clusterHandleSlaveMigration	src/cluster.c	/^void clusterHandleSlaveMigration(int max_slaves) {$/;"	f
clusterHandshakeInProgress	src/cluster.c	/^int clusterHandshakeInProgress(char *ip, int port) {$/;"	f
clusterInit	src/cluster.c	/^void clusterInit(void) {$/;"	f
clusterLink	src/cluster.h	/^typedef struct clusterLink {$/;"	s
clusterLink	src/cluster.h	/^} clusterLink;$/;"	t	typeref:struct:clusterLink
clusterLoadConfig	src/cluster.c	/^int clusterLoadConfig(char *filename) {$/;"	f
clusterLockConfig	src/cluster.c	/^int clusterLockConfig(char *filename) {$/;"	f
clusterLogCantFailover	src/cluster.c	/^void clusterLogCantFailover(int reason) {$/;"	f
clusterLookupNode	src/cluster.c	/^clusterNode *clusterLookupNode(char *name) {$/;"	f
clusterMastersHaveSlaves	src/cluster.c	/^int clusterMastersHaveSlaves(void) {$/;"	f
clusterMsg	src/cluster.h	/^} clusterMsg;$/;"	t	typeref:struct:__anon177
clusterMsgData	src/cluster.h	/^union clusterMsgData {$/;"	u
clusterMsgDataFail	src/cluster.h	/^} clusterMsgDataFail;$/;"	t	typeref:struct:__anon170
clusterMsgDataGossip	src/cluster.h	/^} clusterMsgDataGossip;$/;"	t	typeref:struct:__anon169
clusterMsgDataPublish	src/cluster.h	/^} clusterMsgDataPublish;$/;"	t	typeref:struct:__anon171
clusterMsgDataUpdate	src/cluster.h	/^} clusterMsgDataUpdate;$/;"	t	typeref:struct:__anon172
clusterNode	src/cluster.h	/^typedef struct clusterNode {$/;"	s
clusterNode	src/cluster.h	/^} clusterNode;$/;"	t	typeref:struct:clusterNode
clusterNodeAddFailureReport	src/cluster.c	/^int clusterNodeAddFailureReport(clusterNode *failing, clusterNode *sender) {$/;"	f
clusterNodeAddSlave	src/cluster.c	/^int clusterNodeAddSlave(clusterNode *master, clusterNode *slave) {$/;"	f
clusterNodeCleanupFailureReports	src/cluster.c	/^void clusterNodeCleanupFailureReports(clusterNode *node) {$/;"	f
clusterNodeClearSlotBit	src/cluster.c	/^int clusterNodeClearSlotBit(clusterNode *n, int slot) {$/;"	f
clusterNodeDelFailureReport	src/cluster.c	/^int clusterNodeDelFailureReport(clusterNode *node, clusterNode *sender) {$/;"	f
clusterNodeFailReport	src/cluster.h	/^typedef struct clusterNodeFailReport {$/;"	s
clusterNodeFailReport	src/cluster.h	/^} clusterNodeFailReport;$/;"	t	typeref:struct:clusterNodeFailReport
clusterNodeFailureReportsCount	src/cluster.c	/^int clusterNodeFailureReportsCount(clusterNode *node) {$/;"	f
clusterNodeGetSlotBit	src/cluster.c	/^int clusterNodeGetSlotBit(clusterNode *n, int slot) {$/;"	f
clusterNodeRemoveSlave	src/cluster.c	/^int clusterNodeRemoveSlave(clusterNode *master, clusterNode *slave) {$/;"	f
clusterNodeSetSlotBit	src/cluster.c	/^int clusterNodeSetSlotBit(clusterNode *n, int slot) {$/;"	f
clusterNodesBlackListDictType	src/server.c	/^dictType clusterNodesBlackListDictType = {$/;"	v
clusterNodesDictType	src/server.c	/^dictType clusterNodesDictType = {$/;"	v
clusterProcessGossipSection	src/cluster.c	/^void clusterProcessGossipSection(clusterMsg *hdr, clusterLink *link) {$/;"	f
clusterProcessPacket	src/cluster.c	/^int clusterProcessPacket(clusterLink *link) {$/;"	f
clusterPropagatePublish	src/cluster.c	/^void clusterPropagatePublish(robj *channel, robj *message) {$/;"	f
clusterReadHandler	src/cluster.c	/^void clusterReadHandler(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
clusterRedirectBlockedClientIfNeeded	src/cluster.c	/^int clusterRedirectBlockedClientIfNeeded(client *c) {$/;"	f
clusterRedirectClient	src/cluster.c	/^void clusterRedirectClient(client *c, clusterNode *n, int hashslot, int error_code) {$/;"	f
clusterRenameNode	src/cluster.c	/^void clusterRenameNode(clusterNode *node, char *newname) {$/;"	f
clusterReplyMultiBulkSlots	src/cluster.c	/^void clusterReplyMultiBulkSlots(client *c) {$/;"	f
clusterRequestFailoverAuth	src/cluster.c	/^void clusterRequestFailoverAuth(void) {$/;"	f
clusterReset	src/cluster.c	/^void clusterReset(int hard) {$/;"	f
clusterSaveConfig	src/cluster.c	/^int clusterSaveConfig(int do_fsync) {$/;"	f
clusterSaveConfigOrDie	src/cluster.c	/^void clusterSaveConfigOrDie(int do_fsync) {$/;"	f
clusterSendFail	src/cluster.c	/^void clusterSendFail(char *nodename) {$/;"	f
clusterSendFailoverAuth	src/cluster.c	/^void clusterSendFailoverAuth(clusterNode *node) {$/;"	f
clusterSendFailoverAuthIfNeeded	src/cluster.c	/^void clusterSendFailoverAuthIfNeeded(clusterNode *node, clusterMsg *request) {$/;"	f
clusterSendMFStart	src/cluster.c	/^void clusterSendMFStart(clusterNode *node) {$/;"	f
clusterSendMessage	src/cluster.c	/^void clusterSendMessage(clusterLink *link, unsigned char *msg, size_t msglen) {$/;"	f
clusterSendPing	src/cluster.c	/^void clusterSendPing(clusterLink *link, int type) {$/;"	f
clusterSendPublish	src/cluster.c	/^void clusterSendPublish(clusterLink *link, robj *channel, robj *message) {$/;"	f
clusterSendUpdate	src/cluster.c	/^void clusterSendUpdate(clusterLink *link, clusterNode *node) {$/;"	f
clusterSetMaster	src/cluster.c	/^void clusterSetMaster(clusterNode *n) {$/;"	f
clusterSetNodeAsMaster	src/cluster.c	/^void clusterSetNodeAsMaster(clusterNode *n) {$/;"	f
clusterStartHandshake	src/cluster.c	/^int clusterStartHandshake(char *ip, int port) {$/;"	f
clusterState	src/cluster.h	/^typedef struct clusterState {$/;"	s
clusterState	src/cluster.h	/^} clusterState;$/;"	t	typeref:struct:clusterState
clusterUpdateSlotsConfigWith	src/cluster.c	/^void clusterUpdateSlotsConfigWith(clusterNode *sender, uint64_t senderConfigEpoch, unsigned char *slots) {$/;"	f
clusterUpdateState	src/cluster.c	/^void clusterUpdateState(void) {$/;"	f
clusterWriteHandler	src/cluster.c	/^void clusterWriteHandler(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
cluster_allocate_slaves	tests/cluster/cluster.tcl	/^proc cluster_allocate_slaves {masters slaves} {$/;"	p
cluster_allocate_slots	tests/cluster/cluster.tcl	/^proc cluster_allocate_slots {n} {$/;"	p
cluster_configfile	src/server.h	/^    char *cluster_configfile; \/* Cluster auto-generated config file name. *\/$/;"	m	struct:redisServer
cluster_enabled	src/server.h	/^    int cluster_enabled;      \/* Is cluster enabled? *\/$/;"	m	struct:redisServer
cluster_error	src/redis-trib.rb	/^    def cluster_error(msg)$/;"	f	class:RedisTrib
cluster_find_available_slave	tests/cluster/cluster.tcl	/^proc cluster_find_available_slave {first} {$/;"	p
cluster_migration_barrier	src/server.h	/^    int cluster_migration_barrier; \/* Cluster replicas migration barrier. *\/$/;"	m	struct:redisServer
cluster_mode	src/redis-cli.c	/^    int cluster_mode;$/;"	m	struct:config	file:
cluster_node_timeout	src/server.h	/^    mstime_t cluster_node_timeout; \/* Cluster node timeout. *\/$/;"	m	struct:redisServer
cluster_reissue_command	src/redis-cli.c	/^    int cluster_reissue_command;$/;"	m	struct:config	file:
cluster_require_full_coverage	src/server.h	/^    int cluster_require_full_coverage; \/* If true, put the cluster down if$/;"	m	struct:redisServer
cluster_slave_validity_factor	src/server.h	/^    int cluster_slave_validity_factor; \/* Slave max data age for failover. *\/$/;"	m	struct:redisServer
cluster_write_test	tests/cluster/cluster.tcl	/^proc cluster_write_test {id} {$/;"	p
clvalue	deps/lua/src/lobject.h	98;"	d
cmd	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	int(*cmd)(PMEMobjpool *pop, TOID(struct map) map,$/;"	m	struct:map_ops
cmd	deps/pmdk/src/librpmem/rpmem_ssh.c	/^	struct rpmem_cmd *cmd;$/;"	m	struct:rpmem_ssh	typeref:struct:rpmem_ssh::rpmem_cmd	file:
cmd	deps/pmdk/src/test/unittest/valgrind.py	/^    def cmd(self):$/;"	m	class:Valgrind
cmd	src/server.h	/^    struct redisCommand *cmd, *lastcmd;  \/* Last command executed. *\/$/;"	m	struct:client	typeref:struct:client::redisCommand
cmd	src/server.h	/^    struct redisCommand *cmd;$/;"	m	struct:multiCmd	typeref:struct:multiCmd::redisCommand
cmd	src/server.h	/^    struct redisCommand *cmd;$/;"	m	struct:redisOp	typeref:struct:redisOp::redisCommand
cmds	deps/lua/src/lua_cmsgpack.c	/^const struct luaL_Reg cmds[] = {$/;"	v	typeref:struct:luaL_Reg
cmds	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	const struct pocli_cmd *cmds;	\/* available commands *\/$/;"	m	struct:pocli	typeref:struct:pocli::pocli_cmd	file:
cmp_pool_attr	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^cmp_pool_attr(const struct rpmem_pool_attr *attr1,$/;"	f	file:
cmpfoo	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^cmpfoo(const void *lhs, const void *rhs)$/;"	f	file:
cmpkey	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^cmpkey(const void *lhs, const void *rhs)$/;"	f	file:
cmpobj	src/server.h	/^        robj *cmpobj;$/;"	m	union:_redisSortObject::__anon160
cmsg_bye_handler	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^cmsg_bye_handler(uv_stream_t *client, const char *msg, size_t len)$/;"	f	file:
cmsg_get_handler	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^cmsg_get_handler(uv_stream_t *client, const char *msg, size_t len)$/;"	f	file:
cmsg_handle	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^cmsg_handle(uv_stream_t *client, struct client_data *data)$/;"	f	file:
cmsg_handle_stream	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^cmsg_handle_stream(uv_stream_t *client, struct client_data *data,$/;"	f	file:
cmsg_insert_handler	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^cmsg_insert_handler(uv_stream_t *client, const char *msg, size_t len)$/;"	f	file:
cmsg_kill_handler	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^cmsg_kill_handler(uv_stream_t *client, const char *msg, size_t len)$/;"	f	file:
cmsg_remove_handler	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^cmsg_remove_handler(uv_stream_t *client, const char *msg, size_t len)$/;"	f	file:
cnegone	src/server.h	/^    robj *crlf, *ok, *err, *emptybulk, *czero, *cone, *cnegone, *pong, *space,$/;"	m	struct:sharedObjectsStruct
cnt	deps/pmdk/src/test/set_funcs/set_funcs.c	/^} cnt[5];$/;"	v	typeref:struct:counters	file:
cnt_all	deps/jemalloc/src/prof.c	/^	prof_cnt_t	cnt_all;$/;"	m	struct:prof_tdata_merge_iter_arg_s	file:
cnt_all_copy	deps/jemalloc/test/unit/prof_reset.c	/^prof_cnt_t cnt_all_copy = {0, 0, 0, 0};$/;"	v
cnt_summed	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_cnt_t		cnt_summed;$/;"	m	struct:prof_gctx_s
cnt_summed	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_cnt_t		cnt_summed;$/;"	m	struct:prof_tdata_s
cnts	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_cnt_t		cnts;$/;"	m	struct:prof_tctx_s
co_funcs	deps/lua/src/lbaselib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
code	deps/lua/src/lobject.h	/^  Instruction *code;$/;"	m	struct:Proto
code_label	deps/lua/src/lcode.c	/^static int code_label (FuncState *fs, int A, int b, int jump) {$/;"	f	file:
codearith	deps/lua/src/lcode.c	/^static void codearith (FuncState *fs, OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
codecomp	deps/lua/src/lcode.c	/^static void codecomp (FuncState *fs, OpCode op, int cond, expdesc *e1,$/;"	f	file:
codenot	deps/lua/src/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:
codepoint_to_utf8	deps/lua/src/lua_cjson.c	/^static int codepoint_to_utf8(char *utf8, int codepoint)$/;"	f	file:
codestring	deps/lua/src/lparser.c	/^static void codestring (LexState *ls, expdesc *e, TString *s) {$/;"	f	file:
col_width	deps/pmdk/src/tools/pmempool/info.h	/^	unsigned col_width;	\/* column width for printing fields *\/$/;"	m	struct:pmempool_info_args
collateStringObjects	src/object.c	/^int collateStringObjects(robj *a, robj *b) {$/;"	f
collectargs	deps/lua/src/lua.c	/^static int collectargs (char **argv, int *pi, int *pv, int *pe) {$/;"	f	file:
collectvalidlines	deps/lua/src/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:
colon	src/server.h	/^    *colon, *nullbulk, *nullmultibulk, *queued,$/;"	m	struct:sharedObjectsStruct
color	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	enum rb_color color;$/;"	m	struct:tree_map_node	typeref:enum:tree_map_node::rb_color	file:
color_term	tests/support/util.tcl	/^proc color_term {} {$/;"	p
colors	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^enum colors {$/;"	g	file:
colors	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^enum colors {$/;"	g	file:
colorstr	tests/support/util.tcl	/^proc colorstr {color str} {$/;"	p
cols	deps/linenoise/linenoise.c	/^    size_t cols;        \/* Number of columns in terminal. *\/$/;"	m	struct:linenoiseState	file:
combine	deps/lua/src/luac.c	/^static const Proto* combine(lua_State* L, int n)$/;"	f	file:
combine-results	utils/speed-regression.tcl	/^proc combine-results {results} {$/;"	p
command	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^struct command {$/;"	s	file:
command	deps/pmdk/src/tools/pmempool/pmempool.c	/^struct command {$/;"	s	file:
commandCommand	src/server.c	/^void commandCommand(client *c) {$/;"	f
commandGroups	src/help.h	/^static char *commandGroups[] = {$/;"	v
commandHelp	src/help.h	/^struct commandHelp {$/;"	s
commandHelp	src/help.h	/^} commandHelp[] = {$/;"	v	typeref:struct:commandHelp
commandTableDictType	src/server.c	/^dictType commandTableDictType = {$/;"	v
commands	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^static struct command commands[] = {$/;"	v	typeref:struct:command	file:
commands	deps/pmdk/src/tools/pmempool/pmempool.c	/^static const struct command commands[] = {$/;"	v	typeref:struct:command	file:
commands	src/server.h	/^    dict *commands;             \/* Command table *\/$/;"	m	struct:redisServer
commands	src/server.h	/^    multiCmd *commands;     \/* Array of MULTI commands *\/$/;"	m	struct:multiState
commands	utils/generate-command-help.rb	/^def commands$/;"	f
comment_char	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^	uint64_t comment_char;$/;"	m	struct:rpmemd_special_chars_pos	file:
commit	deps/jemalloc/include/jemalloc/jemalloc.h	/^	chunk_commit_t		*commit;$/;"	m	struct:__anon14
commit	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^	chunk_commit_t		*commit;$/;"	m	struct:__anon1
common_fault_injection_enabled	deps/pmdk/src/common/alloc.c	/^common_fault_injection_enabled(void)$/;"	f
common_fault_injection_enabled	deps/pmdk/src/common/fault_injection.h	/^common_fault_injection_enabled(void)$/;"	f
common_fini	deps/pmdk/src/common/pmemcommon.h	/^common_fini(void)$/;"	f
common_init	deps/pmdk/src/common/pmemcommon.h	/^common_init(const char *log_prefix, const char *log_level_var,$/;"	f
common_inject_fault_at	deps/pmdk/src/common/alloc.c	/^common_inject_fault_at(enum pmem_allocation_type type, int nth, const char *at)$/;"	f
common_inject_fault_at	deps/pmdk/src/common/fault_injection.h	/^common_inject_fault_at(enum pmem_allocation_type type, int nth, const char *at)$/;"	f
comp	deps/jemalloc/include/jemalloc/internal/witness.h	/^	witness_comp_t		*comp;$/;"	m	struct:witness_s
compare	deps/pmdk/src/libpmemobj/ravl.c	/^	ravl_compare *compare;$/;"	m	struct:ravl	file:
compareLatency	src/redis-benchmark.c	/^static int compareLatency(const void *a, const void *b) {$/;"	f	file:
compareSlavesForPromotion	src/sentinel.c	/^int compareSlavesForPromotion(const void *a, const void *b) {$/;"	f
compareStringObjects	src/object.c	/^int compareStringObjects(robj *a, robj *b) {$/;"	f
compareStringObjectsForLexRange	src/t_zset.c	/^int compareStringObjectsForLexRange(robj *a, robj *b) {$/;"	f
compareStringObjectsWithFlags	src/object.c	/^int compareStringObjectsWithFlags(robj *a, robj *b, int flags) {$/;"	f
compare_attr	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^compare_attr(struct rpmem_pool_attr *a1, struct rpmem_pool_attr *a2)$/;"	f	file:
compare_doubles	deps/pmdk/src/benchmarks/pmembench.cpp	/^compare_doubles(const void *a1, const void *b1)$/;"	f	file:
compare_funcs	deps/jemalloc/test/stress/microbench.c	/^compare_funcs(uint64_t nwarmup, uint64_t niter, const char *name_a,$/;"	f
compare_lists	tests/unit/geo.tcl	/^proc compare_lists {List1 List2} {$/;"	p
compare_parts	deps/pmdk/src/libpmempool/transform.c	/^compare_parts(struct pool_set_part *p1, struct pool_set_part *p2)$/;"	f	file:
compare_poolsets	deps/pmdk/src/libpmempool/transform.c	/^compare_poolsets(struct pool_set *set_in, struct pool_set *set_out,$/;"	f	file:
compare_replicas	deps/pmdk/src/libpmempool/transform.c	/^compare_replicas(struct pool_replica *r1, struct pool_replica *r2)$/;"	f	file:
compare_replicas	deps/pmdk/src/test/unittest/unittest.sh	/^function compare_replicas() {$/;"	f
compare_time	deps/pmdk/src/benchmarks/pmembench.cpp	/^compare_time(const void *p1, const void *p2)$/;"	f	file:
compare_uint64t	deps/pmdk/src/benchmarks/pmembench.cpp	/^compare_uint64t(const void *a1, const void *b1)$/;"	f	file:
compat	deps/pmdk/src/common/pool_hdr.h	/^	uint32_t compat;	\/* mask: compatible "may" features *\/$/;"	m	struct:__anon70
compat_features	deps/pmdk/src/include/librpmem.h	/^	uint32_t compat_features; \/* mask: compatible "may" features *\/$/;"	m	struct:rpmem_pool_attr
compat_features	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t compat_features; \/* mask: compatible "may" features *\/$/;"	m	struct:rpmem_pool_attr_packed
completeLine	deps/linenoise/linenoise.c	/^static int completeLine(struct linenoiseState *ls) {$/;"	f	file:
completion	deps/linenoise/example.c	/^void completion(const char *buf, linenoiseCompletions *lc) {$/;"	f
completionCallback	deps/linenoise/linenoise.c	/^static linenoiseCompletionCallback *completionCallback = NULL;$/;"	v	file:
completionCallback	src/redis-cli.c	/^static void completionCallback(const char *buf, linenoiseCompletions *lc) {$/;"	f	file:
complex_arg	deps/pmdk/src/test/util_ctl/util_ctl.c	/^struct complex_arg {$/;"	s	file:
compress	src/quicklist.h	/^    unsigned int compress : 16; \/* depth of end nodes not to compress;0=off *\/$/;"	m	struct:quicklist
compressed	src/quicklist.h	/^    char compressed[];$/;"	m	struct:quicklistLZF
computeDatasetDigest	src/debug.c	/^void computeDatasetDigest(unsigned char *final) {$/;"	f
compute_reshard_table	src/redis-trib.rb	/^    def compute_reshard_table(sources,numslots)$/;"	f	class:RedisTrib.alloc_slots
compute_something_fast	src/redis-cli.c	/^unsigned long compute_something_fast(void) {$/;"	f
computesizes	deps/lua/src/ltable.c	/^static int computesizes (int nums[], int *narray) {$/;"	f	file:
concat_dir_and_file_name	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^concat_dir_and_file_name(char *path, size_t size, const char *dir,$/;"	f	file:
concat_event	deps/lua/doc/manual.html	/^     function concat_event (op1, op2)$/;"	f
concat_log	deps/pmdk/src/test/obj_list_recovery/TEST0	/^function concat_log()$/;"	f
concat_log	deps/pmdk/src/test/obj_list_recovery/TEST1	/^function concat_log()$/;"	f
concat_log	deps/pmdk/src/test/obj_list_recovery/TEST2	/^function concat_log()$/;"	f
cond	deps/lua/src/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:
cond	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	os_cond_t cond;$/;"	m	struct:benchmark_worker
cond	deps/pmdk/src/common/os_thread_windows.c	/^	CONDITION_VARIABLE cond;$/;"	m	struct:__anon81	file:
cond	deps/pmdk/src/libpmemobj/sync.h	/^			os_cond_t cond;$/;"	m	union:padded_pmemcond::__anon124::__anon125
cond	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^static os_cond_t cond;$/;"	v	file:
cond	deps/pmdk/src/test/obj_locks/obj_locks.c	/^	PMEMcond cond;$/;"	m	struct:locks	file:
cond	deps/pmdk/src/test/obj_oid_thread/obj_oid_thread.c	/^static os_cond_t cond;$/;"	v	file:
cond	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^	os_cond_t cond;$/;"	m	struct:action	file:
cond	deps/pmdk/src/test/obj_sync/obj_sync.c	/^	PMEMcond cond;$/;"	m	struct:mock_obj	file:
cond1	deps/pmdk/src/test/obj_direct/obj_direct.c	/^static int cond1;$/;"	v	file:
cond2	deps/pmdk/src/test/obj_direct/obj_direct.c	/^static int cond2;$/;"	v	file:
cond_check_worker	deps/pmdk/src/test/obj_sync/obj_sync.c	/^cond_check_worker(void *arg)$/;"	f	file:
cond_head	deps/pmdk/src/libpmemobj/obj.h	/^	PMEMcond_internal *cond_head;$/;"	m	struct:pmemobjpool
cond_u	deps/pmdk/src/libpmemobj/sync.h	/^		} cond_u;$/;"	m	struct:padded_pmemcond::__anon124	typeref:union:padded_pmemcond::__anon124::__anon125
cond_write_worker	deps/pmdk/src/test/obj_sync/obj_sync.c	/^cond_write_worker(void *arg)$/;"	f	file:
condhardstacktests	deps/lua/src/llimits.h	123;"	d
condhardstacktests	deps/lua/src/llimits.h	125;"	d
condjump	deps/lua/src/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C) {$/;"	f	file:
cone	src/server.h	/^    robj *crlf, *ok, *err, *emptybulk, *czero, *cone, *cnegone, *pong, *space,$/;"	m	struct:sharedObjectsStruct
config	deps/hiredis/test.c	/^struct config {$/;"	s	file:
config	deps/pmdk/src/test/unittest/context.py	/^config = testconfig.config$/;"	v
config	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^	struct rpmemd_config config; \/* configuration *\/$/;"	m	struct:rpmemd	typeref:struct:rpmemd::rpmemd_config	file:
config	src/redis-benchmark.c	/^static struct config {$/;"	s	file:
config	src/redis-benchmark.c	/^} config;$/;"	v	typeref:struct:config	file:
config	src/redis-cli.c	/^static struct config {$/;"	s	file:
config	src/redis-cli.c	/^} config;$/;"	v	typeref:struct:config	file:
configEnum	src/config.c	/^typedef struct configEnum {$/;"	s	file:
configEnum	src/config.c	/^} configEnum;$/;"	t	typeref:struct:configEnum	file:
configEnumGetName	src/config.c	/^const char *configEnumGetName(configEnum *ce, int val) {$/;"	f
configEnumGetNameOrUnknown	src/config.c	/^const char *configEnumGetNameOrUnknown(configEnum *ce, int val) {$/;"	f
configEnumGetValue	src/config.c	/^int configEnumGetValue(configEnum *ce, char *name) {$/;"	f
configEpoch	src/cluster.h	/^    uint64_t configEpoch;   \/* The config epoch if it's a master, or the last$/;"	m	struct:__anon177
configEpoch	src/cluster.h	/^    uint64_t configEpoch; \/* Config epoch of the specified instance. *\/$/;"	m	struct:__anon172
configEpoch	src/cluster.h	/^    uint64_t configEpoch; \/* Last configEpoch observed for this node *\/$/;"	m	struct:clusterNode
configSetCommand	src/config.c	/^void configSetCommand(client *c) {$/;"	f
config_cache_oblivious	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_cache_oblivious =$/;"	v
config_debug	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_debug =$/;"	v
config_debug	deps/jemalloc/test/include/test/jemalloc_test.h	/^static const bool config_debug =$/;"	v
config_epoch	src/sentinel.c	/^    uint64_t config_epoch;  \/* Configuration epoch. *\/$/;"	m	struct:sentinelRedisInstance	file:
config_file_create	deps/pmdk/src/test/util_ctl/util_ctl.c	/^config_file_create(const char *buf)$/;"	f	file:
config_fill	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_fill =$/;"	v
config_get_bool_field	src/config.c	1042;"	d	file:
config_get_enum_field	src/config.c	1059;"	d	file:
config_get_numerical_field	src/config.c	1050;"	d	file:
config_get_string_field	src/config.c	1034;"	d	file:
config_init	deps/pmdk/src/libpmem2/config.c	/^config_init(struct pmem2_config *cfg)$/;"	f
config_ivsalloc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_ivsalloc =$/;"	v
config_lazy_lock	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_lazy_lock =$/;"	v
config_malloc_conf	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const char * const config_malloc_conf = JEMALLOC_CONFIG_MALLOC_CONF;$/;"	v
config_munmap	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_munmap =$/;"	v
config_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t	config_node[] = {$/;"	v	file:
config_print	deps/pmdk/src/test/rpmemd_config/rpmemd_config_test.c	/^config_print(struct rpmemd_config *config)$/;"	f	file:
config_print_fmt	deps/pmdk/src/test/rpmemd_config/rpmemd_config_test.c	/^static const char *config_print_fmt =$/;"	v	file:
config_prof	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_prof =$/;"	v
config_prof_libgcc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_prof_libgcc =$/;"	v
config_prof_libunwind	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_prof_libunwind =$/;"	v
config_reader	deps/pmdk/src/benchmarks/config_reader.cpp	/^struct config_reader {$/;"	s	file:
config_reader	deps/pmdk/src/benchmarks/config_reader_win.cpp	/^struct config_reader {$/;"	s	file:
config_reader_alloc	deps/pmdk/src/benchmarks/config_reader.cpp	/^config_reader_alloc(void)$/;"	f
config_reader_alloc	deps/pmdk/src/benchmarks/config_reader_win.cpp	/^config_reader_alloc(void)$/;"	f
config_reader_free	deps/pmdk/src/benchmarks/config_reader.cpp	/^config_reader_free(struct config_reader *cr)$/;"	f
config_reader_free	deps/pmdk/src/benchmarks/config_reader_win.cpp	/^config_reader_free(struct config_reader *cr)$/;"	f
config_reader_get_scenarios	deps/pmdk/src/benchmarks/config_reader.cpp	/^config_reader_get_scenarios(struct config_reader *cr,$/;"	f
config_reader_get_scenarios	deps/pmdk/src/benchmarks/config_reader_win.cpp	/^config_reader_get_scenarios(struct config_reader *cr,$/;"	f
config_reader_read	deps/pmdk/src/benchmarks/config_reader.cpp	/^config_reader_read(struct config_reader *cr, const char *fname)$/;"	f
config_reader_read	deps/pmdk/src/benchmarks/config_reader_win.cpp	/^config_reader_read(struct config_reader *cr, const char *fname)$/;"	f
config_set_bool_field	src/config.c	702;"	d	file:
config_set_default	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^config_set_default(struct rpmemd_config *config, const char *poolset_dir)$/;"	f	file:
config_set_else	src/config.c	730;"	d	file:
config_set_enum_field	src/config.c	721;"	d	file:
config_set_memory_field	src/config.c	715;"	d	file:
config_set_numerical_field	src/config.c	708;"	d	file:
config_set_special_field	src/config.c	727;"	d	file:
config_stats	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_stats =$/;"	v
config_stats	deps/jemalloc/test/integration/allocated.c	/^static const bool config_stats =$/;"	v	file:
config_tcache	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_tcache =$/;"	v
config_tcache	deps/jemalloc/test/integration/thread_tcache_enabled.c	/^static const bool config_tcache =$/;"	v	file:
config_tls	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_tls =$/;"	v
config_utrace	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_utrace =$/;"	v
config_valgrind	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_valgrind =$/;"	v
config_xmalloc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool config_xmalloc =$/;"	v
configfile	src/server.h	/^    char *configfile;           \/* Absolute config file path, or NULL *\/$/;"	m	struct:redisServer
configure_poolsets	deps/pmdk/src/test/pmempool_sync_remote/common.sh	/^function configure_poolsets() {$/;"	f
configure_valgrind	deps/pmdk/src/test/unittest/unittest.sh	/^function configure_valgrind() {$/;"	f
conn_wait_close	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^enum conn_wait_close {$/;"	g
connect	deps/hiredis/test.c	/^static redisContext *connect(struct config config) {$/;"	f	file:
connect	src/redis-trib.rb	/^    def connect(o={})$/;"	f	class:ClusterNode
connectCallback	deps/hiredis/examples/example-ae.c	/^void connectCallback(const redisAsyncContext *c, int status) {$/;"	f
connectCallback	deps/hiredis/examples/example-libev.c	/^void connectCallback(const redisAsyncContext *c, int status) {$/;"	f
connectCallback	deps/hiredis/examples/example-libevent.c	/^void connectCallback(const redisAsyncContext *c, int status) {$/;"	f
connectCallback	deps/hiredis/examples/example-libuv.c	/^void connectCallback(const redisAsyncContext *c, int status) {$/;"	f
connectWithMaster	src/replication.c	/^int connectWithMaster(void) {$/;"	f
connection_cb	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^connection_cb(uv_stream_t *server, int status)$/;"	f	file:
connection_type	deps/hiredis/test.c	/^enum connection_type {$/;"	g	file:
const_b	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	int const_b;		   \/* memset() value *\/$/;"	m	struct:memset_bench	file:
const_b	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^	int const_b;	  \/* memset() value *\/$/;"	m	struct:obj_bench	file:
const_b	deps/pmdk/src/benchmarks/rpmem.cpp	/^	int const_b;		  \/* memset() value *\/$/;"	m	struct:rpmem_bench	file:
constfolding	deps/lua/src/lcode.c	/^static int constfolding (OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
constr	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^POBJ_LAYOUT_BEGIN(constr);$/;"	v
constr	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^POBJ_LAYOUT_END(constr);$/;"	v
constr_args	deps/pmdk/src/libpmemobj/obj.c	/^struct constr_args {$/;"	s	file:
construct	deps/pmdk/src/test/blk_non_zero/blk_non_zero.c	/^construct(unsigned char *buf)$/;"	f	file:
construct	deps/pmdk/src/test/blk_recovery/blk_recovery.c	/^construct(unsigned char *buf)$/;"	f	file:
construct	deps/pmdk/src/test/blk_rw/blk_rw.c	/^construct(unsigned char *buf)$/;"	f	file:
construct	deps/pmdk/src/test/blk_rw_mt/blk_rw_mt.c	/^construct(int *ordp, unsigned char *buf)$/;"	f	file:
construct_rt	deps/pmdk/src/libpmemobj/lane.h	/^	section_constr construct_rt;$/;"	m	struct:section_operations
constructor	deps/lua/src/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:
constructor	deps/pmdk/src/libpmemobj/obj.c	/^	pmemobj_constr constructor;$/;"	m	struct:carg_realloc	file:
constructor	deps/pmdk/src/libpmemobj/obj.c	/^	pmemobj_constr constructor;$/;"	m	struct:carg_root	file:
constructor	deps/pmdk/src/libpmemobj/obj.c	/^	pmemobj_constr constructor;$/;"	m	struct:constr_args	file:
constructor_alloc	deps/pmdk/src/libpmemobj/obj.c	/^constructor_alloc(void *ctx, void *ptr, size_t usable_size, void *arg)$/;"	f	file:
constructor_realloc	deps/pmdk/src/libpmemobj/obj.c	/^constructor_realloc(void *ctx, void *ptr, size_t usable_size, void *arg)$/;"	f	file:
constructor_strdup	deps/pmdk/src/libpmemobj/obj.c	/^constructor_strdup(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
constructor_tx_alloc	deps/pmdk/src/libpmemobj/tx.c	/^constructor_tx_alloc(void *ctx, void *ptr, size_t usable_size, void *arg)$/;"	f	file:
constructor_wcsdup	deps/pmdk/src/libpmemobj/obj.c	/^constructor_wcsdup(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
constructor_zrealloc_root	deps/pmdk/src/libpmemobj/obj.c	/^constructor_zrealloc_root(void *ctx, void *ptr, size_t usable_size, void *arg)$/;"	f	file:
consumeNewline	src/redis-check-aof.c	/^int consumeNewline(char *buf) {$/;"	f
container	deps/pmdk/src/libpmemobj/bucket.h	/^	struct block_container *container;$/;"	m	struct:bucket	typeref:struct:bucket::block_container
container	src/quicklist.h	/^    unsigned int container : 2;  \/* NONE==1 or ZIPLIST==2 *\/$/;"	m	struct:quicklistNode
container_compare_memblocks	deps/pmdk/src/libpmemobj/container_ravl.c	/^container_compare_memblocks(const void *lhs, const void *rhs)$/;"	f	file:
container_new_ravl	deps/pmdk/src/libpmemobj/container_ravl.c	/^container_new_ravl(struct palloc_heap *heap)$/;"	f
container_new_seglists	deps/pmdk/src/libpmemobj/container_seglists.c	/^container_new_seglists(struct palloc_heap *heap)$/;"	f
container_new_test	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^container_new_test(void)$/;"	f	file:
container_ravl_destroy	deps/pmdk/src/libpmemobj/container_ravl.c	/^container_ravl_destroy(struct block_container *bc)$/;"	f	file:
container_ravl_get_rm_block_bestfit	deps/pmdk/src/libpmemobj/container_ravl.c	/^container_ravl_get_rm_block_bestfit(struct block_container *bc,$/;"	f	file:
container_ravl_get_rm_block_exact	deps/pmdk/src/libpmemobj/container_ravl.c	/^container_ravl_get_rm_block_exact(struct block_container *bc,$/;"	f	file:
container_ravl_insert_block	deps/pmdk/src/libpmemobj/container_ravl.c	/^container_ravl_insert_block(struct block_container *bc,$/;"	f	file:
container_ravl_is_empty	deps/pmdk/src/libpmemobj/container_ravl.c	/^container_ravl_is_empty(struct block_container *bc)$/;"	f	file:
container_ravl_ops	deps/pmdk/src/libpmemobj/container_ravl.c	/^static const struct block_container_ops container_ravl_ops = {$/;"	v	typeref:struct:block_container_ops	file:
container_ravl_rm_all	deps/pmdk/src/libpmemobj/container_ravl.c	/^container_ravl_rm_all(struct block_container *bc)$/;"	f	file:
container_seglists_destroy	deps/pmdk/src/libpmemobj/container_seglists.c	/^container_seglists_destroy(struct block_container *bc)$/;"	f	file:
container_seglists_get_rm_block_bestfit	deps/pmdk/src/libpmemobj/container_seglists.c	/^container_seglists_get_rm_block_bestfit(struct block_container *bc,$/;"	f	file:
container_seglists_insert_block	deps/pmdk/src/libpmemobj/container_seglists.c	/^container_seglists_insert_block(struct block_container *bc,$/;"	f	file:
container_seglists_is_empty	deps/pmdk/src/libpmemobj/container_seglists.c	/^container_seglists_is_empty(struct block_container *bc)$/;"	f	file:
container_seglists_ops	deps/pmdk/src/libpmemobj/container_seglists.c	/^static const struct block_container_ops container_seglists_ops = {$/;"	v	typeref:struct:block_container_ops	file:
container_seglists_rm_all	deps/pmdk/src/libpmemobj/container_seglists.c	/^container_seglists_rm_all(struct block_container *bc)$/;"	f	file:
container_test	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^struct container_test {$/;"	s	file:
container_test_destroy	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^container_test_destroy(struct block_container *c)$/;"	f	file:
container_test_get_rm_bestfit	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^container_test_get_rm_bestfit(struct block_container *c,$/;"	f	file:
container_test_get_rm_exact	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^container_test_get_rm_exact(struct block_container *c,$/;"	f	file:
container_test_insert	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^container_test_insert(struct block_container *c,$/;"	f	file:
container_test_ops	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^static struct block_container_ops container_test_ops = {$/;"	v	typeref:struct:block_container_ops	file:
contains_inode	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^contains_inode(struct inodes *inodes, unsigned long inode)$/;"	f	file:
contains_scenarios	deps/pmdk/src/benchmarks/scenario.cpp	/^contains_scenarios(int argc, char **argv, struct scenarios *ss)$/;"	f
content	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint8_t content[RUN_CONTENT_SIZE]; \/* bitmap + data *\/$/;"	m	struct:chunk_run
contents	deps/lua/doc/contents.html	/^<H2><A NAME="contents">Contents<\/A><\/H2>$/;"	a
contents	src/intset.h	/^    int8_t contents[];$/;"	m	struct:intset
context	deps/hiredis/adapters/ae.h	/^    redisAsyncContext *context;$/;"	m	struct:redisAeEvents
context	deps/hiredis/adapters/libev.h	/^    redisAsyncContext *context;$/;"	m	struct:redisLibevEvents
context	deps/hiredis/adapters/libevent.h	/^    redisAsyncContext *context;$/;"	m	struct:redisLibeventEvents
context	deps/hiredis/adapters/libuv.h	/^  redisAsyncContext* context;$/;"	m	struct:redisLibuvEvents
context	src/redis-benchmark.c	/^    redisContext *context;$/;"	m	struct:_client	file:
context	src/redis-cli.c	/^static redisContext *context;$/;"	v	file:
context	src/sentinel.c	/^    redisAsyncContext *context;$/;"	m	struct:redisAeEvents	file:
controloptions	deps/lua/src/lua_struct.c	/^static void controloptions (lua_State *L, int opt, const char **fmt,$/;"	f	file:
conversion_flags	deps/pmdk/src/libpmemobj/obj.h	/^	uint64_t conversion_flags;$/;"	m	struct:pmemobjpool
convertToSds	src/redis-cli.c	/^static char **convertToSds(int count, char** args) {$/;"	f	file:
convert_bin	deps/pmdk/src/tools/pmempool/convert.c	/^static const char *convert_bin = "\/pmdk-convert";$/;"	v	file:
convert_bin	deps/pmdk/src/tools/pmempool/convert.c	/^static const char *convert_bin = "\\\\pmdk-convert.exe";$/;"	v	file:
convert_changelog	deps/pmdk/utils/build-dpkg.sh	/^function convert_changelog() {$/;"	f
convert_internal	deps/pmdk/src/test/unittest/configurator.py	/^    def convert_internal(key, base):$/;"	f	function:_str2ctx
convert_signal_name	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^convert_signal_name(const char *signal_name)$/;"	f	file:
convert_status_cache	deps/pmdk/src/libpmempool/check.c	/^convert_status_cache(PMEMpoolcheck *ppc, char *buf, size_t size)$/;"	f
convert_timeout	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^convert_timeout(char *str)$/;"	f	file:
convert_to_bytes	deps/pmdk/src/test/unittest/unittest.sh	/^function convert_to_bytes() {$/;"	f
copyClientOutputBuffer	src/networking.c	/^void copyClientOutputBuffer(client *dst, client *src) {$/;"	f
copy_common_to_remote_nodes	deps/pmdk/src/test/unittest/unittest.sh	/^function copy_common_to_remote_nodes() {$/;"	f
copy_data_to_broken_parts	deps/pmdk/src/libpmempool/sync.c	/^copy_data_to_broken_parts(struct pool_set *set, unsigned healthy_replica,$/;"	f	file:
copy_files_from_node	deps/pmdk/src/test/unittest/unittest.sh	/^function copy_files_from_node() {$/;"	f
copy_files_to_node	deps/pmdk/src/test/unittest/unittest.sh	/^function copy_files_to_node() {$/;"	f
copy_header	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^copy_header(art_node *dest, art_node *src)$/;"	f	file:
copy_log_files	deps/pmdk/src/test/unittest/unittest.sh	/^function copy_log_files() {$/;"	f
copy_part_fds	deps/pmdk/src/libpmempool/transform.c	/^copy_part_fds(struct pool_set *set_dst, struct pool_set *set_src)$/;"	f	file:
copy_ptr	deps/pmdk/src/libpmemobj/tx.c	/^	const void *copy_ptr;$/;"	m	struct:tx_alloc_args	file:
copy_replica_data_bw	deps/pmdk/src/libpmempool/transform.c	/^copy_replica_data_bw(struct pool_set *set_dst, struct pool_set *set_src,$/;"	f	file:
copy_replica_data_fw	deps/pmdk/src/libpmempool/transform.c	/^copy_replica_data_fw(struct pool_set *set_dst, struct pool_set *set_src,$/;"	f	file:
copy_size	deps/pmdk/src/libpmemobj/tx.c	/^	size_t copy_size;$/;"	m	struct:tx_alloc_args	file:
copy_test_to_remote_nodes	deps/pmdk/src/test/unittest/unittest.sh	/^function copy_test_to_remote_nodes() {$/;"	f
correctbytes	deps/lua/src/lua_struct.c	/^static void correctbytes (char *b, int size, int endian) {$/;"	f	file:
correctstack	deps/lua/src/ldo.c	/^static void correctstack (lua_State *L, TValue *oldstack) {$/;"	f	file:
corrupt_local	deps/pmdk/src/test/ex_librpmem_fibonacci/TEST1	/^corrupt_local()$/;"	f
corrupt_remote	deps/pmdk/src/test/ex_librpmem_fibonacci/TEST1	/^corrupt_remote()$/;"	f
costatus	deps/lua/src/lbaselib.c	/^static int costatus (lua_State *L, lua_State *co) {$/;"	f	file:
count	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	size_t		count;$/;"	m	struct:ckh_s
count	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	uint64_t count;$/;"	m	struct:hashmap_atomic	file:
count	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^	uint64_t count;$/;"	m	struct:hashmap_rp	file:
count	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^	uint64_t count;$/;"	m	struct:hashmap_tx	file:
count	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	size_t(*count)(PMEMobjpool *pop, TOID(struct map) map);$/;"	m	struct:map_ops
count	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^	uint32_t count;$/;"	m	struct:list	file:
count	deps/pmdk/src/test/obj_direct_volatile/obj_direct_volatile.c	/^	PMEMvlt(int) count;$/;"	m	struct:test	file:
count	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^	size_t count;	\/* number of blocks to read\/write *\/$/;"	m	struct:ddmap_context	file:
count	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^	uint64_t count;$/;"	m	struct:root_s	file:
count	deps/pmdk/src/test/win_lists/win_lists.c	/^	int count;$/;"	m	struct:TEST_DATA_SORTEDQ	file:
count	src/cluster.h	/^    uint16_t count;     \/* Only used for some kind of messages. *\/$/;"	m	struct:__anon177
count	src/quicklist.h	/^    unsigned int count : 16;     \/* count of items in ziplist *\/$/;"	m	struct:quicklistNode
count	src/quicklist.h	/^    unsigned long count;        \/* total count of all entries in all ziplists *\/$/;"	m	struct:quicklist
count	src/redis-cli.c	/^    long long count; \/* Number of samples in this interval. *\/$/;"	m	struct:distsamples	file:
count	src/server.h	/^    int count;              \/* Total number of MULTI commands *\/$/;"	m	struct:multiState
count	src/sha1.h	/^    uint32_t count[2];$/;"	m	struct:__anon178
countKeysInSlot	src/db.c	/^unsigned int countKeysInSlot(unsigned int hashslot) {$/;"	f
count_bits	tests/unit/bitops.tcl	/^proc count_bits s {$/;"	p
count_dirty	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	uint32_t count_dirty;$/;"	m	struct:hashmap_atomic	file:
count_iovec	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^count_iovec(char *arg)$/;"	f	file:
count_iovec	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^count_iovec(char *arg)$/;"	f	file:
count_iovec	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^count_iovec(char *arg)$/;"	f	file:
count_iovec	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^count_iovec(char *arg)$/;"	f	file:
count_lines	deps/pmdk/src/test/unittest/unittest.sh	/^function count_lines() {$/;"	f
count_resident_pages	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	/^count_resident_pages(void *pool, size_t length)$/;"	f	file:
counter	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^static unsigned counter;$/;"	v	file:
counters	deps/pmdk/src/test/set_funcs/set_funcs.c	/^static struct counters {$/;"	s	file:
countint	deps/lua/src/ltable.c	/^static int countint (const TValue *key, int *nums) {$/;"	f	file:
covered_slots	src/redis-trib.rb	/^    def covered_slots$/;"	f	class:RedisTrib
cparams	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	struct create_params_t cparams;$/;"	m	struct:create_n_defrag_params_t	typeref:struct:create_n_defrag_params_t::create_params_t	file:
cpu_set_t	deps/pmdk/src/common/os_thread.h	93;"	d
cpuid	deps/pmdk/src/libpmem/x86_64/cpu.c	/^cpuid(unsigned func, unsigned subfunc, unsigned cpuinfo[4])$/;"	f	file:
cpuid	deps/pmdk/src/libpmem/x86_64/cpu.c	82;"	d	file:
cpy128	deps/pmdk/src/libpmem/memops_generic.c	/^cpy128(uint64_t *dst, const uint64_t *src)$/;"	f	file:
cpy64	deps/pmdk/src/libpmem/memops_generic.c	/^cpy64(uint64_t *dst, const uint64_t *src)$/;"	f	file:
cpy8	deps/pmdk/src/libpmem/memops_generic.c	/^cpy8(uint64_t *dst, const uint64_t *src)$/;"	f	file:
cq	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct fid_cq *cq;	\/* completion queue *\/$/;"	m	struct:rpmem_fip_lane	typeref:struct:rpmem_fip_lane::fid_cq	file:
cq	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct fid_cq *cq;		\/* per-thread completion queue *\/$/;"	m	struct:rpmemd_fip_thread	typeref:struct:rpmemd_fip_thread::fid_cq	file:
cq	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct fid_cq *cq;$/;"	m	struct:rpmem_fip_lane	typeref:struct:rpmem_fip_lane::fid_cq	file:
cq_read	deps/pmdk/src/librpmem/rpmem_fip.c	/^	cq_read_fn cq_read;		\/* CQ read function *\/$/;"	m	struct:rpmem_fip	file:
cq_read_fn	deps/pmdk/src/librpmem/rpmem_fip.c	/^typedef ssize_t (*cq_read_fn)(struct fid_cq *cq, void *buf, size_t count);$/;"	t	file:
cq_read_infinite	deps/pmdk/src/librpmem/rpmem_fip.c	/^cq_read_infinite(struct fid_cq *cq, void *buf, size_t count)$/;"	f	file:
cq_size	deps/pmdk/src/librpmem/rpmem_fip.c	/^	size_t cq_size;	\/* completion queue size *\/$/;"	m	struct:rpmem_fip	file:
cq_size	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	size_t cq_size;	\/* size of completion queue *\/$/;"	m	struct:rpmemd_fip	file:
crc16	src/crc16.c	/^uint16_t crc16(const char *buf, int len) {$/;"	f
crc16	src/redis-trib.rb	/^    def RedisClusterCRC16.crc16(bytes)$/;"	F	class:RedisTrib.RedisClusterCRC16
crc16tab	src/crc16.c	/^static const uint16_t crc16tab[256]= {$/;"	v	file:
crc64	src/crc64.c	/^uint64_t crc64(uint64_t crc, const unsigned char *s, uint64_t l) {$/;"	f
crc64Test	src/crc64.c	/^int crc64Test(int argc, char *argv[]) {$/;"	f
crc64_tab	src/crc64.c	/^static const uint64_t crc64_tab[256] = {$/;"	v	file:
create	deps/pmdk/src/common/badblock.c	/^	int create;		\/* poolset is just being created *\/$/;"	m	struct:check_file_cb	file:
create	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	int(*create)(PMEMobjpool *pop, TOID(struct map) *map, void *arg);$/;"	m	struct:map_ops
create	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_RUNNABLE_HANDLER(create)(void *ctx,$/;"	f	file:
create	deps/pmdk/src/test/obj_heap_interrupt/obj_heap_interrupt.c	/^	scenario_func create;$/;"	m	struct:__anon140	file:
create	deps/pmdk/src/test/unittest/poolset.py	/^    def create(self):$/;"	m	class:_Poolset
create	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^        def create(self, values):$/;"	m	class:Fence.Factory
create	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^        def create(self, values):$/;"	m	class:Flush.Factory
create	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^        def create(self, values):$/;"	m	class:NoReorderDoCheck.Factory
create	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^        def create(self, values):$/;"	m	class:NoReorderNoCheck.Factory
create	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^        def create(self, values):$/;"	m	class:Register_file.Factory
create	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^        def create(self, values):$/;"	m	class:ReorderAccumulative.Factory
create	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^        def create(self, values):$/;"	m	class:ReorderDefault.Factory
create	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^        def create(self, values):$/;"	m	class:ReorderFull.Factory
create	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^        def create(self, values):$/;"	m	class:ReorderPartial.Factory
create	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^        def create(self, values):$/;"	m	class:ReorderReverseAccumulative.Factory
create	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^        def create(self, values):$/;"	m	class:Store.Factory
create	deps/pmdk/src/tools/rpmemd/rpmemd_obc.h	/^	int (*create)(struct rpmemd_obc *obc, void *arg,$/;"	m	struct:rpmemd_obc_requests
createArray	deps/hiredis/hiredis.h	/^    void *(*createArray)(const redisReadTask*, int);$/;"	m	struct:redisReplyObjectFunctions
createArrayObject	deps/hiredis/hiredis.c	/^static void *createArrayObject(const redisReadTask *task, int elements) {$/;"	f	file:
createClient	src/networking.c	/^client *createClient(int fd) {$/;"	f
createClient	src/redis-benchmark.c	/^static client createClient(char *cmd, size_t len, client from) {$/;"	f	file:
createClusterLink	src/cluster.c	/^clusterLink *createClusterLink(clusterNode *node) {$/;"	f
createClusterNode	src/cluster.c	/^clusterNode *createClusterNode(char *nodename, int flags) {$/;"	f
createComplexDataset	tests/support/util.tcl	/^proc createComplexDataset {r ops {opt {}}} {$/;"	p
createDumpPayload	src/cluster.c	/^void createDumpPayload(rio *payload, robj *o) {$/;"	f
createEmbeddedStringObject	src/object.c	/^robj *createEmbeddedStringObject(const char *ptr, size_t len) {$/;"	f
createEmbeddedStringObjectPM	src/object.c	/^robj *createEmbeddedStringObjectPM(const char *ptr, size_t len) {$/;"	f
createFakeClient	src/aof.c	/^struct client *createFakeClient(void) {$/;"	f
createHLLObject	src/hyperloglog.c	/^robj *createHLLObject(void) {$/;"	f
createHashObject	src/object.c	/^robj *createHashObject(void) {$/;"	f
createInstanceLink	src/sentinel.c	/^instanceLink *createInstanceLink(void) {$/;"	f
createIntList	src/ziplist.c	/^static unsigned char *createIntList() {$/;"	f	file:
createInteger	deps/hiredis/hiredis.h	/^    void *(*createInteger)(const redisReadTask*, long long);$/;"	m	struct:redisReplyObjectFunctions
createIntegerObject	deps/hiredis/hiredis.c	/^static void *createIntegerObject(const redisReadTask *task, long long value) {$/;"	f	file:
createIntsetObject	src/object.c	/^robj *createIntsetObject(void) {$/;"	f
createLatencyReport	src/latency.c	/^sds createLatencyReport(void) {$/;"	f
createList	src/ziplist.c	/^static unsigned char *createList() {$/;"	f	file:
createMissingClients	src/redis-benchmark.c	/^static void createMissingClients(client c) {$/;"	f	file:
createNil	deps/hiredis/hiredis.h	/^    void *(*createNil)(const redisReadTask*);$/;"	m	struct:redisReplyObjectFunctions
createNilObject	deps/hiredis/hiredis.c	/^static void *createNilObject(const redisReadTask *task) {$/;"	f	file:
createObject	src/object.c	/^robj *createObject(int type, void *ptr) {$/;"	f
createObjectPM	src/object.c	/^robj *createObjectPM(int type, void *ptr) {$/;"	f
createPidFile	src/server.c	/^void createPidFile(void) {$/;"	f
createQuicklistObject	src/object.c	/^robj *createQuicklistObject(void) {$/;"	f
createRawStringObject	src/object.c	/^robj *createRawStringObject(const char *ptr, size_t len) {$/;"	f
createRawStringObjectPM	src/object.c	/^robj *createRawStringObjectPM(const char *ptr, size_t len) {$/;"	f
createReplicationBacklog	src/replication.c	/^void createReplicationBacklog(void) {$/;"	f
createReplyObject	deps/hiredis/hiredis.c	/^static redisReply *createReplyObject(int type) {$/;"	f	file:
createSentinelAddr	src/sentinel.c	/^sentinelAddr *createSentinelAddr(char *hostname, int port) {$/;"	f
createSentinelRedisInstance	src/sentinel.c	/^sentinelRedisInstance *createSentinelRedisInstance(char *name, int flags, char *hostname, int port, int quorum, sentinelRedisInstance *master) {$/;"	f
createSet	src/intset.c	/^static intset *createSet(int bits, int size) {$/;"	f	file:
createSetObject	src/object.c	/^robj *createSetObject(void) {$/;"	f
createSharedObjects	src/server.c	/^void createSharedObjects(void) {$/;"	f
createSortOperation	src/sort.c	/^redisSortOperation *createSortOperation(int type, robj *pattern) {$/;"	f
createSparklineSequence	src/sparkline.c	/^struct sequence *createSparklineSequence(void) {$/;"	f
createString	deps/hiredis/hiredis.h	/^    void *(*createString)(const redisReadTask*, char*, size_t);$/;"	m	struct:redisReplyObjectFunctions
createStringObject	deps/hiredis/hiredis.c	/^static void *createStringObject(const redisReadTask *task, char *str, size_t len) {$/;"	f	file:
createStringObject	src/object.c	/^robj *createStringObject(const char *ptr, size_t len) {$/;"	f
createStringObjectFromLongDouble	src/object.c	/^robj *createStringObjectFromLongDouble(long double value, int humanfriendly) {$/;"	f
createStringObjectFromLongLong	src/object.c	/^robj *createStringObjectFromLongLong(long long value) {$/;"	f
createZiplistObject	src/object.c	/^robj *createZiplistObject(void) {$/;"	f
createZsetObject	src/object.c	/^robj *createZsetObject(void) {$/;"	f
createZsetZiplistObject	src/object.c	/^robj *createZsetZiplistObject(void) {$/;"	f
create_alien	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^create_alien(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
create_alien	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^create_alien(unsigned x, unsigned y, TOID(struct alien) next)$/;"	f
create_alloc_class	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^create_alloc_class(void)$/;"	f	file:
create_and_test_file_config	deps/pmdk/src/test/util_ctl/util_ctl.c	/^create_and_test_file_config(struct pool *pop, const char *buf, int ret,$/;"	f	file:
create_aof	tests/integration/aof.tcl	/^proc create_aof {code} {$/;"	p
create_args	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^struct create_args {$/;"	s	file:
create_buckets	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^create_buckets(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
create_bullet	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^create_bullet(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
create_bullet	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^create_bullet(unsigned x, TOID(struct bullet) next)$/;"	f
create_cluster	tests/cluster/cluster.tcl	/^proc create_cluster {masters slaves} {$/;"	p
create_cluster_cmd	src/redis-trib.rb	/^    def create_cluster_cmd(argv,opt)$/;"	f	class:RedisTrib.alloc_slots
create_default_lex_zset	tests/unit/type/zset.tcl	/^        proc create_default_lex_zset {} {$/;"	p
create_default_zset	tests/unit/type/zset.tcl	/^        proc create_default_zset {} {$/;"	p
create_entry	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^create_entry(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
create_file	deps/pmdk/src/test/unittest/unittest.sh	/^function create_file() {$/;"	f
create_hashmap	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^create_hashmap(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap,$/;"	f	file:
create_hashmap	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^create_hashmap(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap, uint32_t seed)$/;"	f	file:
create_headers_for_broken_parts	deps/pmdk/src/libpmempool/sync.c	/^create_headers_for_broken_parts(struct pool_set *set, unsigned src_replica,$/;"	f	file:
create_holey_file	deps/pmdk/src/test/unittest/context.py	/^    def create_holey_file(self, size, path, mode=None):$/;"	m	class:Context
create_holey_file	deps/pmdk/src/test/unittest/unittest.sh	/^function create_holey_file() {$/;"	f
create_holey_file_on_node	deps/pmdk/src/test/unittest/unittest.sh	/^function create_holey_file_on_node() {$/;"	f
create_list	tests/unit/type/list.tcl	/^    proc create_list {key entries} {$/;"	p
create_log_entry	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^create_log_entry(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
create_missing_headers	deps/pmdk/src/libpmempool/transform.c	/^create_missing_headers(struct pool_set *set, unsigned repn)$/;"	f	file:
create_n_defrag_params_t	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^struct create_n_defrag_params_t {$/;"	s	file:
create_n_defrag_thread	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^create_n_defrag_thread(void *arg)$/;"	f	file:
create_non_zero_file	deps/pmdk/src/test/unittest/context.py	/^    def create_non_zero_file(self, size, path, mode=None):$/;"	m	class:Context
create_nonzeroed_file	deps/pmdk/src/test/unittest/unittest.sh	/^function create_nonzeroed_file() {$/;"	f
create_operation	deps/pmdk/src/tools/pmreorder/operationfactory.py	/^    def create_operation(string_operation, markers, stack):$/;"	m	class:OperationFactory
create_params_init	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^create_params_init(struct create_params_t *params)$/;"	f	file:
create_params_t	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^struct create_params_t {$/;"	s	file:
create_pattern	deps/pmdk/utils/check_license/check-license.c	/^create_pattern(const char *path_license, char *pattern)$/;"	f	file:
create_player	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^create_player(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
create_player	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^create_player(void)$/;"	f
create_poolset	deps/pmdk/src/test/unittest/unittest.sh	/^function create_poolset() {$/;"	f
create_poolset_compare_status	deps/pmdk/src/libpmempool/transform.c	/^create_poolset_compare_status(struct pool_set *set,$/;"	f	file:
create_poolset_variation	deps/pmdk/src/test/libpmempool_backup/common.sh	/^function create_poolset_variation() {$/;"	f
create_random_dataset	tests/unit/sort.tcl	/^    proc create_random_dataset {num cmd} {$/;"	p
create_recovery_file	deps/pmdk/src/test/unittest/unittest.sh	/^function create_recovery_file() {$/;"	f
create_redis_master_slave_cluster	tests/instances.tcl	/^proc create_redis_master_slave_cluster n {$/;"	p
create_remote_replicas	deps/pmdk/src/libpmempool/sync.c	/^create_remote_replicas(struct pool_set *set,$/;"	f	file:
create_replica_health_status	deps/pmdk/src/libpmempool/replica.c	/^create_replica_health_status(struct pool_set *set, unsigned repn)$/;"	f	file:
create_set	tests/unit/type/set.tcl	/^    proc create_set {key entries} {$/;"	p
create_sparse_file	deps/pmdk/src/test/tools/sparsefile/sparsefile.c	/^create_sparse_file(const wchar_t *filename, size_t len)$/;"	f	file:
create_star	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^create_star(unsigned x, unsigned y, TOID(struct star) next)$/;"	f
create_state	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^create_state(void)$/;"	f
create_zeroed_hdr_file	deps/pmdk/src/test/unittest/context.py	/^    def create_zeroed_hdr_file(self, size, path, mode=None):$/;"	m	class:Context
create_zset	tests/unit/type/zset.tcl	/^    proc create_zset {key items} {$/;"	p
created	deps/pmdk/src/common/set.h	/^	int created;		\/* indicates newly created (zeroed) file *\/$/;"	m	struct:pool_set_part
created	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^	int created;		\/* pool created *\/$/;"	m	struct:rpmemd	file:
createmeta	deps/lua/src/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:
createmetatable	deps/lua/src/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:
createstdfile	deps/lua/src/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, int k, const char *fname) {$/;"	f	file:
creator_id	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint8_t creator_id[4];$/;"	m	struct:nfit_header
creator_revision	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint32_t creator_revision;$/;"	m	struct:nfit_header
critical	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def critical(self, text):$/;"	m	class:DefaultFileLogger
critical	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def critical(self, text):$/;"	m	class:DefaultPrintLogger
critical	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def critical(self, text):$/;"	m	class:LoggingBase
critnib	deps/pmdk/src/libpmemobj/critnib.c	/^struct critnib {$/;"	s	file:
critnib_delete	deps/pmdk/src/libpmemobj/critnib.c	/^critnib_delete(struct critnib *c)$/;"	f
critnib_find_le	deps/pmdk/src/libpmemobj/critnib.c	/^critnib_find_le(struct critnib *c, uint64_t key)$/;"	f
critnib_get	deps/pmdk/src/libpmemobj/critnib.c	/^critnib_get(struct critnib *c, uint64_t key)$/;"	f
critnib_insert	deps/pmdk/src/libpmemobj/critnib.c	/^critnib_insert(struct critnib *c, uint64_t key, void *value)$/;"	f
critnib_leaf	deps/pmdk/src/libpmemobj/critnib.c	/^struct critnib_leaf {$/;"	s	file:
critnib_new	deps/pmdk/src/libpmemobj/critnib.c	/^critnib_new(void)$/;"	f
critnib_node	deps/pmdk/src/libpmemobj/critnib.c	/^struct critnib_node {$/;"	s	file:
critnib_remove	deps/pmdk/src/libpmemobj/critnib.c	/^critnib_remove(struct critnib *c, uint64_t key)$/;"	f
crlf	src/server.h	/^    robj *crlf, *ok, *err, *emptybulk, *czero, *cone, *cnegone, *pong, *space,$/;"	m	struct:sharedObjectsStruct
cronloops	src/server.h	/^    int cronloops;              \/* Number of times the cron function run *\/$/;"	m	struct:redisServer
crtime	deps/pmdk/src/common/pool_hdr.h	/^	uint64_t crtime;		\/* when created (seconds since epoch) *\/$/;"	m	struct:pool_hdr
csize	deps/pmdk/src/tools/pmempool/create.c	/^	uint64_t csize;$/;"	m	struct:pmempool_create	file:
csize_align	deps/pmdk/src/benchmarks/rpmem.cpp	/^	size_t csize_align;       \/* aligned elementary chunk size *\/$/;"	m	struct:rpmem_bench	file:
cstyle	deps/pmdk/utils/cstyle	/^sub cstyle($$) {$/;"	s
csv	src/redis-benchmark.c	/^    int csv;$/;"	m	struct:config	file:
csvdump	tests/support/util.tcl	/^proc csvdump r {$/;"	p
csvstring	tests/support/util.tcl	/^proc csvstring s {$/;"	p
ctime	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint32_t ctime;	\/* time of last status change *\/$/;"	m	struct:objfs_inode	file:
ctime	src/cluster.h	/^    mstime_t ctime;             \/* Link creation time *\/$/;"	m	struct:clusterLink
ctime	src/cluster.h	/^    mstime_t ctime; \/* Node object creation time. *\/$/;"	m	struct:clusterNode
ctime	src/server.h	/^    time_t ctime;           \/* Client creation time. *\/$/;"	m	struct:client
ctl	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	int			(*ctl)(tsd_t *, const size_t *, size_t, void *,$/;"	m	struct:ctl_named_node_s
ctl	deps/pmdk/src/common/ctl.c	/^struct ctl {$/;"	s	file:
ctl	deps/pmdk/src/libpmemblk/blk.h	/^	struct ctl *ctl;	\/* top level node of the ctl tree structure *\/$/;"	m	struct:pmemblk	typeref:struct:pmemblk::ctl
ctl	deps/pmdk/src/libpmemlog/log.h	/^	struct ctl *ctl;	\/* top level node of the ctl tree structure *\/$/;"	m	struct:pmemlog	typeref:struct:pmemlog::ctl
ctl	deps/pmdk/src/libpmemobj/obj.h	/^	struct ctl *ctl;	\/* top level node of the ctl tree structure *\/$/;"	m	struct:pmemobjpool	typeref:struct:pmemobjpool::ctl
ctl	deps/pmdk/src/test/util_ctl/util_ctl.c	/^	struct ctl *ctl;$/;"	m	struct:pool	typeref:struct:pool::ctl	file:
ctl_arena_clear	deps/jemalloc/src/ctl.c	/^ctl_arena_clear(ctl_arena_stats_t *astats)$/;"	f	file:
ctl_arena_init	deps/jemalloc/src/ctl.c	/^ctl_arena_init(ctl_arena_stats_t *astats)$/;"	f	file:
ctl_arena_refresh	deps/jemalloc/src/ctl.c	/^ctl_arena_refresh(tsdn_t *tsdn, arena_t *arena, unsigned i)$/;"	f	file:
ctl_arena_stats_amerge	deps/jemalloc/src/ctl.c	/^ctl_arena_stats_amerge(tsdn_t *tsdn, ctl_arena_stats_t *cstats, arena_t *arena)$/;"	f	file:
ctl_arena_stats_s	deps/jemalloc/include/jemalloc/internal/ctl.h	/^struct ctl_arena_stats_s {$/;"	s
ctl_arena_stats_smerge	deps/jemalloc/src/ctl.c	/^ctl_arena_stats_smerge(ctl_arena_stats_t *sstats, ctl_arena_stats_t *astats)$/;"	f	file:
ctl_arena_stats_t	deps/jemalloc/include/jemalloc/internal/ctl.h	/^typedef struct ctl_arena_stats_s ctl_arena_stats_t;$/;"	t	typeref:struct:ctl_arena_stats_s
ctl_arg_boolean	deps/pmdk/src/common/ctl.c	/^ctl_arg_boolean(const void *arg, void *dest, size_t dest_size)$/;"	f
ctl_arg_integer	deps/pmdk/src/common/ctl.c	/^ctl_arg_integer(const void *arg, void *dest, size_t dest_size)$/;"	f
ctl_arg_parser	deps/pmdk/src/common/ctl.h	/^typedef int (*ctl_arg_parser)(const void *arg, void *dest, size_t dest_size);$/;"	t
ctl_arg_string	deps/pmdk/src/common/ctl.c	/^ctl_arg_string(const void *arg, void *dest, size_t dest_size)$/;"	f
ctl_argument	deps/pmdk/src/common/ctl.h	/^struct ctl_argument {$/;"	s
ctl_argument_parser	deps/pmdk/src/common/ctl.h	/^struct ctl_argument_parser {$/;"	s
ctl_boot	deps/jemalloc/include/jemalloc/internal/private_namespace.h	197;"	d
ctl_boot	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	197;"	d
ctl_boot	deps/jemalloc/src/ctl.c	/^ctl_boot(void)$/;"	f
ctl_bymib	deps/jemalloc/include/jemalloc/internal/private_namespace.h	198;"	d
ctl_bymib	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	198;"	d
ctl_bymib	deps/jemalloc/src/ctl.c	/^ctl_bymib(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f
ctl_byname	deps/jemalloc/include/jemalloc/internal/private_namespace.h	199;"	d
ctl_byname	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	199;"	d
ctl_byname	deps/jemalloc/src/ctl.c	/^ctl_byname(tsd_t *tsd, const char *name, void *oldp, size_t *oldlenp,$/;"	f
ctl_cow_register	deps/pmdk/src/common/ctl_cow.c	/^ctl_cow_register(void)$/;"	f
ctl_delete	deps/pmdk/src/common/ctl.c	/^ctl_delete(struct ctl *c)$/;"	f
ctl_delete_indexes	deps/pmdk/src/common/ctl.c	/^ctl_delete_indexes(struct ctl_indexes *indexes)$/;"	f	file:
ctl_epoch	deps/jemalloc/src/ctl.c	/^static uint64_t		ctl_epoch;$/;"	v	file:
ctl_exec_query	deps/pmdk/src/common/ctl.c	/^static int (*ctl_exec_query[MAX_CTL_QUERY_TYPE])(void *ctx,$/;"	v	file:
ctl_exec_query_read	deps/pmdk/src/common/ctl.c	/^ctl_exec_query_read(void *ctx, const struct ctl_node *n,$/;"	f	file:
ctl_exec_query_runnable	deps/pmdk/src/common/ctl.c	/^ctl_exec_query_runnable(void *ctx, const struct ctl_node *n,$/;"	f	file:
ctl_exec_query_write	deps/pmdk/src/common/ctl.c	/^ctl_exec_query_write(void *ctx, const struct ctl_node *n,$/;"	f	file:
ctl_fallocate_register	deps/pmdk/src/common/ctl_fallocate.c	/^ctl_fallocate_register(void)$/;"	f
ctl_find_node	deps/pmdk/src/common/ctl.c	/^ctl_find_node(const struct ctl_node *nodes, const char *name,$/;"	f	file:
ctl_global_first_free	deps/pmdk/src/common/ctl.c	/^static int ctl_global_first_free = 0;$/;"	v	file:
ctl_global_register	deps/pmdk/src/common/ctl_global.h	/^ctl_global_register(void)$/;"	f
ctl_grow	deps/jemalloc/src/ctl.c	/^ctl_grow(tsdn_t *tsdn)$/;"	f	file:
ctl_index	deps/pmdk/src/common/ctl.h	/^struct ctl_index {$/;"	s
ctl_indexed_node	deps/jemalloc/src/ctl.c	/^ctl_indexed_node(const ctl_node_t *node)$/;"	f
ctl_indexed_node_s	deps/jemalloc/include/jemalloc/internal/ctl.h	/^struct ctl_indexed_node_s {$/;"	s
ctl_indexed_node_t	deps/jemalloc/include/jemalloc/internal/ctl.h	/^typedef struct ctl_indexed_node_s ctl_indexed_node_t;$/;"	t	typeref:struct:ctl_indexed_node_s
ctl_init	deps/jemalloc/src/ctl.c	/^ctl_init(tsdn_t *tsdn)$/;"	f	file:
ctl_initialized	deps/jemalloc/src/ctl.c	/^static bool		ctl_initialized;$/;"	v	file:
ctl_load_config	deps/pmdk/src/common/ctl.c	/^ctl_load_config(struct ctl *ctl, void *ctx, char *buf)$/;"	f	file:
ctl_load_config_from_file	deps/pmdk/src/common/ctl.c	/^ctl_load_config_from_file(struct ctl *ctl, void *ctx, const char *cfg_file)$/;"	f
ctl_load_config_from_string	deps/pmdk/src/common/ctl.c	/^ctl_load_config_from_string(struct ctl *ctl, void *ctx, const char *cfg_string)$/;"	f
ctl_lookup	deps/jemalloc/src/ctl.c	/^ctl_lookup(tsdn_t *tsdn, const char *name, ctl_node_t const **nodesp,$/;"	f	file:
ctl_mtx	deps/jemalloc/src/ctl.c	/^static malloc_mutex_t	ctl_mtx;$/;"	v	file:
ctl_named_children	deps/jemalloc/src/ctl.c	/^ctl_named_children(const ctl_named_node_t *node, size_t index)$/;"	f
ctl_named_node	deps/jemalloc/src/ctl.c	/^ctl_named_node(const ctl_node_t *node)$/;"	f
ctl_named_node_s	deps/jemalloc/include/jemalloc/internal/ctl.h	/^struct ctl_named_node_s {$/;"	s
ctl_named_node_t	deps/jemalloc/include/jemalloc/internal/ctl.h	/^typedef struct ctl_named_node_s ctl_named_node_t;$/;"	t	typeref:struct:ctl_named_node_s
ctl_nametomib	deps/jemalloc/include/jemalloc/internal/private_namespace.h	200;"	d
ctl_nametomib	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	200;"	d
ctl_nametomib	deps/jemalloc/src/ctl.c	/^ctl_nametomib(tsdn_t *tsdn, const char *name, size_t *mibp, size_t *miblenp)$/;"	f
ctl_new	deps/pmdk/src/common/ctl.c	/^ctl_new(void)$/;"	f
ctl_node	deps/pmdk/src/common/ctl.h	/^struct ctl_node {$/;"	s
ctl_node_s	deps/jemalloc/include/jemalloc/internal/ctl.h	/^struct ctl_node_s {$/;"	s
ctl_node_t	deps/jemalloc/include/jemalloc/internal/ctl.h	/^typedef struct ctl_node_s ctl_node_t;$/;"	t	typeref:struct:ctl_node_s
ctl_node_type	deps/pmdk/src/common/ctl.h	/^enum ctl_node_type {$/;"	g
ctl_parse_args	deps/pmdk/src/common/ctl.c	/^ctl_parse_args(const struct ctl_argument *arg_proto, char *arg)$/;"	f	file:
ctl_parse_ll	deps/pmdk/src/common/ctl.c	/^ctl_parse_ll(const char *str)$/;"	f	file:
ctl_parse_query	deps/pmdk/src/common/ctl.c	/^ctl_parse_query(char *qbuf, char **name, char **value)$/;"	f	file:
ctl_postfork_child	deps/jemalloc/include/jemalloc/internal/private_namespace.h	201;"	d
ctl_postfork_child	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	201;"	d
ctl_postfork_child	deps/jemalloc/src/ctl.c	/^ctl_postfork_child(tsdn_t *tsdn)$/;"	f
ctl_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_namespace.h	202;"	d
ctl_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	202;"	d
ctl_postfork_parent	deps/jemalloc/src/ctl.c	/^ctl_postfork_parent(tsdn_t *tsdn)$/;"	f
ctl_prefault_register	deps/pmdk/src/common/ctl_prefault.c	/^ctl_prefault_register(void)$/;"	f
ctl_prefork	deps/jemalloc/include/jemalloc/internal/private_namespace.h	203;"	d
ctl_prefork	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	203;"	d
ctl_prefork	deps/jemalloc/src/ctl.c	/^ctl_prefork(tsdn_t *tsdn)$/;"	f
ctl_query	deps/pmdk/src/common/ctl.c	/^ctl_query(struct ctl *ctl, void *ctx, enum ctl_query_source source,$/;"	f
ctl_query_cleanup_real_args	deps/pmdk/src/common/ctl.c	/^ctl_query_cleanup_real_args(const struct ctl_node *n, void *real_arg,$/;"	f	file:
ctl_query_get_real_args	deps/pmdk/src/common/ctl.c	/^ctl_query_get_real_args(const struct ctl_node *n, void *write_arg,$/;"	f	file:
ctl_query_source	deps/pmdk/src/common/ctl.h	/^enum ctl_query_source {$/;"	g
ctl_query_type	deps/pmdk/src/common/ctl.h	/^enum ctl_query_type {$/;"	g
ctl_refresh	deps/jemalloc/src/ctl.c	/^ctl_refresh(tsdn_t *tsdn)$/;"	f	file:
ctl_register_module_node	deps/pmdk/src/common/ctl.c	/^ctl_register_module_node(struct ctl *c, const char *name, struct ctl_node *n)$/;"	f
ctl_sds_register	deps/pmdk/src/common/ctl_sds.c	/^ctl_sds_register(void)$/;"	f
ctl_stats	deps/jemalloc/src/ctl.c	/^static ctl_stats_t	ctl_stats;$/;"	v	file:
ctl_stats_s	deps/jemalloc/include/jemalloc/internal/ctl.h	/^struct ctl_stats_s {$/;"	s
ctl_stats_t	deps/jemalloc/include/jemalloc/internal/ctl.h	/^typedef struct ctl_stats_s ctl_stats_t;$/;"	t	typeref:struct:ctl_stats_s
ctree_map	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^struct ctree_map {$/;"	s	file:
ctree_map_check	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_check(PMEMobjpool *pop, TOID(struct ctree_map) map)$/;"	f
ctree_map_clear	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_clear(PMEMobjpool *pop, TOID(struct ctree_map) map)$/;"	f
ctree_map_clear_node	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_clear_node(PMEMoid p)$/;"	f	file:
ctree_map_create	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_create(PMEMobjpool *pop, TOID(struct ctree_map) *map, void *arg)$/;"	f
ctree_map_destroy	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_destroy(PMEMobjpool *pop, TOID(struct ctree_map) *map)$/;"	f
ctree_map_foreach	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_foreach(PMEMobjpool *pop, TOID(struct ctree_map) map,$/;"	f
ctree_map_foreach_node	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_foreach_node(struct tree_map_entry e,$/;"	f	file:
ctree_map_get	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_get(PMEMobjpool *pop, TOID(struct ctree_map) map, uint64_t key)$/;"	f
ctree_map_insert	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_insert(PMEMobjpool *pop, TOID(struct ctree_map) map,$/;"	f
ctree_map_insert_leaf	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_insert_leaf(struct tree_map_entry *p,$/;"	f	file:
ctree_map_insert_new	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_insert_new(PMEMobjpool *pop, TOID(struct ctree_map) map,$/;"	f
ctree_map_is_empty	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_is_empty(PMEMobjpool *pop, TOID(struct ctree_map) map)$/;"	f
ctree_map_lookup	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_lookup(PMEMobjpool *pop, TOID(struct ctree_map) map,$/;"	f
ctree_map_ops	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^struct map_ops ctree_map_ops = {$/;"	v	typeref:struct:map_ops
ctree_map_remove	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_remove(PMEMobjpool *pop, TOID(struct ctree_map) map, uint64_t key)$/;"	f
ctree_map_remove_free	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_remove_free(PMEMobjpool *pop, TOID(struct ctree_map) map,$/;"	f
ctx	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^static struct pmem_context ctx;$/;"	v	typeref:struct:pmem_context	file:
ctx	deps/pmdk/src/libpmemobj/pmalloc.c	/^	struct operation_context *ctx[MAX_OPERATION_TYPE];$/;"	m	struct:lane_alloc_runtime	typeref:struct:lane_alloc_runtime::operation_context	file:
ctx	deps/pmdk/src/libpmemobj/pmemops.h	/^		void *ctx;$/;"	m	struct:pmem_ops::remote_ops
ctx	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	struct pocli_ctx ctx;		\/* context for commands *\/$/;"	m	struct:pocli	typeref:struct:pocli::pocli_ctx	file:
ctx	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	void *ctx;$/;"	m	struct:rpmemd_fip	file:
ctx	deps/pmdk/src/tools/rpmemd/rpmemd_fip.h	/^	void *ctx;$/;"	m	struct:rpmemd_fip_attr
ctx_choices	deps/pmdk/src/test/unittest/configurator.py	/^        def ctx_choices(cls):$/;"	f	function:Configurator._init_argparser
ctx_fini	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^ctx_fini(struct pmem_context *ctx)$/;"	f	file:
ctx_init	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^ctx_init(struct pmem_context *ctx, char *filename)$/;"	f	file:
cum_gctxs	deps/jemalloc/src/prof.c	/^static unsigned		cum_gctxs; \/* Atomic counter. *\/$/;"	v	file:
cumbits	deps/jemalloc/include/jemalloc/internal/rtree.h	/^	unsigned		cumbits;$/;"	m	struct:rtree_level_s
cur	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	struct field *cur;$/;"	m	struct:pmemspoil_list	typeref:struct:pmemspoil_list::field	file:
curbytes	deps/jemalloc/include/jemalloc/internal/prof.h	/^	uint64_t	curbytes;$/;"	m	struct:prof_cnt_s
curbytes	deps/jemalloc/include/jemalloc/internal/quarantine.h	/^	size_t			curbytes;$/;"	m	struct:quarantine_s
curchunks	deps/jemalloc/src/chunk.c	/^static size_t	curchunks;$/;"	v	file:
curhchunks	deps/jemalloc/include/jemalloc/internal/stats.h	/^	size_t		curhchunks;$/;"	m	struct:malloc_huge_stats_s
curobjs	deps/jemalloc/include/jemalloc/internal/prof.h	/^	uint64_t	curobjs;$/;"	m	struct:prof_cnt_s
curobjs	deps/jemalloc/include/jemalloc/internal/quarantine.h	/^	size_t			curobjs;$/;"	m	struct:quarantine_s
currIsNewline	deps/lua/src/llex.c	33;"	d	file:
curr_func	deps/lua/src/lstate.h	59;"	d
curregs	deps/jemalloc/include/jemalloc/internal/stats.h	/^	size_t		curregs;$/;"	m	struct:malloc_bin_stats_s
current	deps/lua/src/llex.h	/^  int current;  \/* current character (charint) *\/$/;"	m	struct:LexState
current	src/quicklist.h	/^    quicklistNode *current;$/;"	m	struct:quicklistIter
currentEpoch	src/cluster.h	/^    uint64_t currentEpoch;  \/* The epoch accordingly to the sending node. *\/$/;"	m	struct:__anon177
currentEpoch	src/cluster.h	/^    uint64_t currentEpoch;$/;"	m	struct:clusterState
current_client	src/server.h	/^    client *current_client; \/* Current client, only used on crash report *\/$/;"	m	struct:redisServer
current_depth	deps/lua/src/lua_cjson.c	/^    int current_depth;$/;"	m	struct:__anon44	file:
current_epoch	src/sentinel.c	/^    uint64_t current_epoch;         \/* Current epoch. *\/$/;"	m	struct:sentinelState	file:
currentline	deps/lua/src/ldebug.c	/^static int currentline (lua_State *L, CallInfo *ci) {$/;"	f	file:
currentline	deps/lua/src/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug
currentline	src/scripting.c	/^    int currentline;    \/* Current line number. *\/$/;"	m	struct:ldbState	file:
currentpc	deps/lua/src/ldebug.c	/^static int currentpc (lua_State *L, CallInfo *ci) {$/;"	f	file:
currentwhite	deps/lua/src/lstate.h	/^  lu_byte currentwhite;$/;"	m	struct:global_State
curruns	deps/jemalloc/include/jemalloc/internal/stats.h	/^	size_t		curruns;$/;"	m	struct:malloc_bin_stats_s
curruns	deps/jemalloc/include/jemalloc/internal/stats.h	/^	size_t		curruns;$/;"	m	struct:malloc_large_stats_s
custom_assert	deps/pmdk/src/common/queue.h	/^static void custom_assert(void)$/;"	f
custom_build	deps/pmdk/src/Makefile	/^custom_build = $(DEBUG)$(OBJDIR)$/;"	m
cvec	deps/linenoise/linenoise.h	/^  char **cvec;$/;"	m	struct:linenoiseCompletions
czero	src/server.h	/^    robj *crlf, *ok, *err, *emptybulk, *czero, *cone, *cnegone, *pong, *space,$/;"	m	struct:sharedObjectsStruct
d	deps/lua/src/lua_struct.c	/^  double d;$/;"	m	struct:cD	file:
d	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^	int d;$/;"	m	struct:fields	file:
d	deps/pmdk/src/test/util_ctl/util_ctl.c	/^	int d;$/;"	m	struct:complex_arg	file:
d	src/dict.h	/^        double d;$/;"	m	union:dictEntry::__anon167
d	src/dict.h	/^    dict *d;$/;"	m	struct:dictIterator
d2s	deps/jemalloc/src/util.c	/^d2s(intmax_t x, char sign, char *s, size_t *slen_p)$/;"	f	file:
d2string	src/util.c	/^int d2string(char *buf, size_t len, double value) {$/;"	f
daemonize	src/server.c	/^void daemonize(void) {$/;"	f
daemonize	src/server.h	/^    int daemonize;                  \/* True if running as a daemon *\/$/;"	m	struct:redisServer
dalloc	deps/jemalloc/include/jemalloc/internal/rtree.h	/^	rtree_node_dalloc_t	*dalloc;$/;"	m	struct:rtree_s
dalloc	deps/jemalloc/include/jemalloc/jemalloc.h	/^	chunk_dalloc_t		*dalloc;$/;"	m	struct:__anon14
dalloc	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^	chunk_dalloc_t		*dalloc;$/;"	m	struct:__anon1
dallocx	deps/jemalloc/include/jemalloc/jemalloc.h	335;"	d
dallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	24;"	d
dallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	24;"	d
data	deps/hiredis/async.h	/^        void *data;$/;"	m	struct:redisAsyncContext::__anon147
data	deps/hiredis/async.h	/^    void *data;$/;"	m	struct:redisAsyncContext
data	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	const void	*data;$/;"	m	struct:ckhc_s
data	deps/jemalloc/include/jemalloc/internal/tsd.h	/^	void				*data;$/;"	m	struct:tsd_init_block_s
data	deps/lua/src/ldump.c	/^ void* data;$/;"	m	struct:__anon34	file:
data	deps/lua/src/lua_cjson.c	/^    const char *data;$/;"	m	struct:__anon44	file:
data	deps/lua/src/lzio.h	/^  void* data;			\/* additional data *\/$/;"	m	struct:Zio
data	deps/pmdk/src/common/pool_hdr.h	/^	uint8_t data;			\/* data encoding -- LE or BE *\/$/;"	m	struct:arch_flags
data	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^	struct entry data;$/;"	m	struct:add_entry	typeref:struct:add_entry::entry	file:
data	deps/pmdk/src/examples/libpmemobj/linkedlist/fifo.c	/^	char data;$/;"	m	struct:tqnode	file:
data	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^	char data[];		\/* log entry data *\/$/;"	m	struct:log	file:
data	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^	char data[];			\/* log entry data *\/$/;"	m	struct:log	file:
data	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^	char data[];$/;"	m	struct:log	file:
data	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^	char data[];$/;"	m	struct:log	file:
data	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	char data[];$/;"	m	struct:entry	file:
data	deps/pmdk/src/examples/libpmemobj/slab_allocator/main.c	/^	char data[100];$/;"	m	struct:foo	file:
data	deps/pmdk/src/examples/libpmemobj/slab_allocator/main.c	/^	char data[500];$/;"	m	struct:bar	file:
data	deps/pmdk/src/include/libpmemobj/action_base.h	/^	uint32_t data[3];$/;"	m	struct:pobj_action
data	deps/pmdk/src/libpmemblk/blk.h	/^	void *data;		\/* post-header data area *\/$/;"	m	struct:pmemblk
data	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint8_t data[CHUNKSIZE];$/;"	m	struct:chunk
data	deps/pmdk/src/libpmemobj/ravl.c	/^	char data[];$/;"	m	struct:ravl_node	file:
data	deps/pmdk/src/libpmemobj/ulog.h	/^	uint8_t data[]; \/* content to fill in *\/$/;"	m	struct:ulog_entry_buf
data	deps/pmdk/src/libpmempool/pmempool.h	/^	struct check_data *data;$/;"	m	struct:pmempool_check_ctx	typeref:struct:pmempool_check_ctx::check_data
data	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint8_t data[];$/;"	m	struct:rpmem_msg_persist
data	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^	int data;$/;"	m	struct:snode	file:
data	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^	int data;$/;"	m	struct:tqnode	file:
data	deps/pmdk/src/test/obj_alloc/obj_alloc.c	/^	char data[CHUNKSIZE - sizeof(TOID(struct object))];$/;"	m	struct:root	file:
data	deps/pmdk/src/test/obj_alloc/obj_alloc.c	/^	char data[];$/;"	m	struct:object	file:
data	deps/pmdk/src/test/obj_list/obj_list.h	/^	char data[48];$/;"	m	struct:oob_header
data	deps/pmdk/src/test/obj_locks/obj_locks.c	/^	int data;$/;"	m	struct:locks	file:
data	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^	char data[CHUNKSIZE - sizeof(TOID(struct object))];$/;"	m	struct:root	file:
data	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^	char data[];$/;"	m	struct:object	file:
data	deps/pmdk/src/test/obj_sync/obj_sync.c	/^	uint8_t data[DATA_SIZE];$/;"	m	struct:mock_obj	file:
data	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^	char data[OBJ_SIZE - sizeof(size_t)];$/;"	m	struct:object	file:
data	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^	uint8_t data[OVERLAP_SIZE];$/;"	m	struct:overlap_object	file:
data	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^	unsigned char data[OBJ_SIZE - sizeof(size_t)];$/;"	m	struct:object	file:
data	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	char data[OBJ_SIZE - sizeof(size_t)];$/;"	m	struct:object	file:
data	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	char data[OBJ_SIZE - sizeof(size_t)];$/;"	m	struct:object	file:
data	deps/pmdk/src/test/obj_tx_locks_abort/obj_tx_locks_abort.c	/^	int data;$/;"	m	struct:obj	file:
data	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	char data[OBJ_SIZE - sizeof(size_t)];$/;"	m	struct:object	file:
data	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	char data[OBJ_SIZE - sizeof(size_t)];$/;"	m	struct:object_macro	file:
data	deps/pmdk/src/test/win_lists/win_lists.c	/^	int data[10];$/;"	m	struct:TEST_DATA_SORTEDQ	file:
data	src/cluster.h	/^    union clusterMsgData data;$/;"	m	struct:__anon177	typeref:union:__anon177::clusterMsgData
data2	deps/pmdk/src/include/libpmemobj/action_base.h	/^		uint64_t data2[14];$/;"	m	union:pobj_action::__anon49
data2	deps/pmdk/src/libpmemobj/palloc.c	/^		uint64_t data2[14];$/;"	m	union:pobj_action_internal::__anon127	file:
data_cleanup_executed	deps/jemalloc/test/unit/tsd.c	/^static bool data_cleanup_executed;$/;"	v	file:
data_s	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^struct data_s {$/;"	s	file:
data_size	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^	size_t data_size;	\/* size available for data *\/$/;"	m	struct:log_hdr	file:
data_size	deps/pmdk/src/libpmemobj/ravl.c	/^	size_t data_size;$/;"	m	struct:ravl	file:
data_store	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^POBJ_LAYOUT_BEGIN(data_store);$/;"	v
data_store	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^POBJ_LAYOUT_END(data_store);$/;"	v
data_t	deps/jemalloc/test/unit/tsd.c	/^typedef unsigned int data_t;$/;"	t	file:
databasesCron	src/server.c	/^void databasesCron(void) {$/;"	f
dataoff	deps/pmdk/src/libpmemblk/btt.c	/^		uint64_t dataoff;	\/* offset to arena data area *\/$/;"	m	struct:btt::arena	file:
dataoff	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint64_t dataoff;		\/* offset to arena data area *\/$/;"	m	struct:btt_info
datasize	deps/pmdk/src/libpmemblk/blk.h	/^	size_t datasize;	\/* size of data area *\/$/;"	m	struct:pmemblk
datasize	src/redis-benchmark.c	/^    int datasize;$/;"	m	struct:config	file:
datastore	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^struct datastore$/;"	s	file:
dax_device_zero	deps/pmdk/src/test/unittest/unittest.sh	/^dax_device_zero() {$/;"	f
daxio_context	deps/pmdk/src/tools/daxio/daxio.c	/^struct daxio_context {$/;"	s	file:
daxio_device	deps/pmdk/src/tools/daxio/daxio.c	/^struct daxio_device {$/;"	s	file:
daxio_install_triggers_overrides	deps/pmdk/utils/build-dpkg.sh	/^function daxio_install_triggers_overrides() {$/;"	f
db	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^	struct rpmemd_db *db;	\/* pool set database handle *\/$/;"	m	struct:rpmemd	typeref:struct:rpmemd::rpmemd_db	file:
db	src/multi.c	/^    redisDb *db;$/;"	m	struct:watchedKey	file:
db	src/server.h	/^    redisDb *db;            \/* Pointer to currently SELECTed DB. *\/$/;"	m	struct:client
db	src/server.h	/^    redisDb *db;$/;"	m	struct:readyList
db	src/server.h	/^    redisDb *db;$/;"	m	struct:redisServer
dbAdd	src/db.c	/^void dbAdd(redisDb *db, robj *key, robj *val) {$/;"	f
dbAddPM	src/db.c	/^void dbAddPM(redisDb *db, robj *key, robj *val) {$/;"	f
dbDelete	src/db.c	/^int dbDelete(redisDb *db, robj *key) {$/;"	f
dbDictType	src/server.c	/^dictType dbDictType = {$/;"	v
dbDictTypePM	src/server.c	/^dictType dbDictTypePM = {$/;"	v
dbExists	src/db.c	/^int dbExists(redisDb *db, robj *key) {$/;"	f
dbOverwrite	src/db.c	/^void dbOverwrite(redisDb *db, robj *key, robj *val) {$/;"	f
dbOverwritePM	src/db.c	/^void dbOverwritePM(redisDb *db, robj *key, robj *val) {$/;"	f
dbRandomKey	src/db.c	/^robj *dbRandomKey(redisDb *db) {$/;"	f
dbUnshareStringValue	src/db.c	/^robj *dbUnshareStringValue(redisDb *db, robj *key, robj *o) {$/;"	f
db_debug	deps/lua/src/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:
db_errorfb	deps/lua/src/ldblib.c	/^static int db_errorfb (lua_State *L) {$/;"	f	file:
db_getfenv	deps/lua/src/ldblib.c	/^static int db_getfenv (lua_State *L) {$/;"	f	file:
db_gethook	deps/lua/src/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:
db_getinfo	deps/lua/src/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:
db_getlocal	deps/lua/src/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:
db_getmetatable	deps/lua/src/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:
db_getregistry	deps/lua/src/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:
db_getupvalue	deps/lua/src/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:
db_setfenv	deps/lua/src/ldblib.c	/^static int db_setfenv (lua_State *L) {$/;"	f	file:
db_sethook	deps/lua/src/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_setlocal	deps/lua/src/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:
db_setmetatable	deps/lua/src/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:
db_setupvalue	deps/lua/src/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:
dbid	src/server.h	/^    int argc, dbid, target;$/;"	m	struct:redisOp
dblib	deps/lua/src/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
dbnum	src/redis-benchmark.c	/^    int dbnum;$/;"	m	struct:config	file:
dbnum	src/redis-cli.c	/^    int dbnum;$/;"	m	struct:config	file:
dbnum	src/server.h	/^    int dbnum;                      \/* Total number of configured DBs *\/$/;"	m	struct:redisServer
dbnumstr	src/redis-benchmark.c	/^    sds dbnumstr;$/;"	m	struct:config	file:
dbsizeCommand	src/db.c	/^void dbsizeCommand(client *c) {$/;"	f
ddmap_checksum	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^ddmap_checksum(const char *path, size_t bytes, size_t count, size_t offset_in)$/;"	f	file:
ddmap_context	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^struct ddmap_context {$/;"	s	file:
ddmap_default	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^static struct ddmap_context ddmap_default;$/;"	v	typeref:struct:ddmap_context	file:
ddmap_print_bytes	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^ddmap_print_bytes(const char *data, size_t len)$/;"	f	file:
ddmap_print_char	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^ddmap_print_char(char c)$/;"	f	file:
ddmap_print_runlen	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^ddmap_print_runlen(char *addr, size_t len)$/;"	f	file:
ddmap_read	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^ddmap_read(const char *path, size_t offset_in, size_t bytes, size_t count,$/;"	f	file:
ddmap_write	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^ddmap_write(const char *path, const char *str, size_t offset_in, size_t bytes,$/;"	f	file:
ddmap_write_data	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^ddmap_write_data(const char *path, const char *data,$/;"	f	file:
ddmap_write_from_file	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^ddmap_write_from_file(const char *path_in, const char *path_out,$/;"	f	file:
ddmap_zero	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^ddmap_zero(const char *path, size_t offset, size_t len)$/;"	f	file:
de	src/server.h	/^    dictEntry *de;$/;"	m	struct:__anon164
de	src/t_zset.c	/^                dictEntry *de;$/;"	m	struct:__anon152::__anon153::_iterset::__anon155	file:
deadline	deps/jemalloc/include/jemalloc/internal/arena.h	/^	nstime_t		deadline;$/;"	m	struct:arena_decay_s
debug	deps/lua/src/strbuf.h	/^    int debug;$/;"	m	struct:__anon29
debug	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def debug(self, text):$/;"	m	class:DefaultFileLogger
debug	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def debug(self, text):$/;"	m	class:DefaultPrintLogger
debug	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def debug(self, text):$/;"	m	class:LoggingBase
debug	src/ziplist.c	1091;"	d	file:
debugCommand	src/debug.c	/^void debugCommand(client *c) {$/;"	f
debug_ctl_register	deps/pmdk/src/libpmemobj/ctl_debug.c	/^debug_ctl_register(PMEMobjpool *pop)$/;"	f
debug_stats	deps/lua/src/strbuf.c	/^static inline void debug_stats(strbuf_t *s)$/;"	f	file:
dec_keys	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^dec_keys(uint64_t key, PMEMoid value, void *arg)$/;"	f	file:
decay	deps/jemalloc/include/jemalloc/internal/arena.h	/^	arena_decay_t		decay;$/;"	m	struct:arena_s
decay_ticker	deps/jemalloc/include/jemalloc/internal/arena.h	/^	ticker_t		decay_ticker;$/;"	m	struct:arena_tdata_s
decay_ticker_get	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^decay_ticker_get(tsd_t *tsd, unsigned ind)$/;"	f
decay_ticker_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	204;"	d
decay_ticker_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	204;"	d
decay_time	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	ssize_t			decay_time;$/;"	m	struct:ctl_arena_stats_s
decay_time_default	deps/jemalloc/src/arena.c	/^static ssize_t	decay_time_default;$/;"	v	file:
decodeGeohash	src/geo.c	/^int decodeGeohash(double bits, double *xy) {$/;"	f
decode_file_as_string	deps/pmdk/utils/check_whitespace	/^sub decode_file_as_string {$/;"	s
decode_hex4	deps/lua/src/lua_cjson.c	/^static int decode_hex4(const char *hex)$/;"	f	file:
decode_invalid_numbers	deps/lua/src/lua_cjson.c	/^    int decode_invalid_numbers;$/;"	m	struct:__anon43	file:
decode_max_depth	deps/lua/src/lua_cjson.c	/^    int decode_max_depth;$/;"	m	struct:__anon43	file:
decommit	deps/jemalloc/include/jemalloc/jemalloc.h	/^	chunk_decommit_t	*decommit;$/;"	m	struct:__anon14
decommit	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^	chunk_decommit_t	*decommit;$/;"	m	struct:__anon1
decpoint	deps/lua/src/llex.h	/^  char decpoint;  \/* locale decimal point *\/$/;"	m	struct:LexState
decrCommand	src/t_string.c	/^void decrCommand(client *c) {$/;"	f
decrRefCount	src/object.c	/^void decrRefCount(robj *o) {$/;"	f
decrRefCountPM	src/object.c	/^void decrRefCountPM(robj *o) {$/;"	f
decrRefCountVoid	src/object.c	/^void decrRefCountVoid(void *o) {$/;"	f
decrbyCommand	src/t_string.c	/^void decrbyCommand(client *c) {$/;"	f
deep_flush	deps/pmdk/src/libpmem/pmem.h	/^	flush_func deep_flush;$/;"	m	struct:pmem_funcs
deep_persist	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	int (*deep_persist)(const void *addr, size_t len, void *ctx);$/;"	m	struct:rpmemd_fip	file:
deep_persist	deps/pmdk/src/tools/rpmemd/rpmemd_fip.h	/^	int (*deep_persist)(const void *addr, size_t len, void *ctx);$/;"	m	struct:rpmemd_fip_attr
def	deps/pmdk/src/benchmarks/benchmark.hpp	/^	const char *def;$/;"	m	struct:benchmark_clo
defaultFunctions	deps/hiredis/hiredis.c	/^static redisReplyObjectFunctions defaultFunctions = {$/;"	v	file:
default_attr	deps/pmdk/src/examples/librpmem/basic.c	/^default_attr(struct rpmem_pool_attr *attr)$/;"	f	file:
default_bucket	deps/pmdk/src/libpmemobj/heap.c	/^	struct bucket *default_bucket;$/;"	m	struct:heap_rt	typeref:struct:heap_rt::bucket	file:
default_zone	deps/jemalloc/src/zone.c	/^static malloc_zone_t *default_zone, *purgeable_zone;$/;"	v	file:
defaultoptions	deps/lua/src/lua_struct.c	107;"	d	file:
define_path	deps/pmdk/src/test/obj_pool_lookup/obj_pool_lookup.c	/^define_path(char *str, size_t size, const char *dir, unsigned i)$/;"	f	file:
defrag	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    defrag = '1'$/;"	v	class:BASE
defrag_basic	deps/pmdk/src/test/obj_defrag/obj_defrag.c	/^defrag_basic(PMEMobjpool *pop)$/;"	f	file:
defrag_nested_pointers	deps/pmdk/src/test/obj_defrag/obj_defrag.c	/^defrag_nested_pointers(PMEMobjpool *pop)$/;"	f	file:
deg_rad	deps/geohash-int/geohash_helper.c	/^static inline double deg_rad(double ang) { return ang * D_R; }$/;"	f	file:
deinterleave64	deps/geohash-int/geohash.c	/^static inline uint64_t deinterleave64(uint64_t interleaved) {$/;"	f	file:
del	src/server.h	/^    *unsubscribebulk, *psubscribebulk, *punsubscribebulk, *del, *rpop, *lpop,$/;"	m	struct:sharedObjectsStruct
delCommand	src/db.c	/^void delCommand(client *c) {$/;"	f
delCommand	src/server.h	/^    struct redisCommand *delCommand, *multiCommand, *lpushCommand, *lpopCommand,$/;"	m	struct:redisServer	typeref:struct:redisServer::redisCommand
delKeysInSlot	src/db.c	/^unsigned int delKeysInSlot(unsigned int hashslot) {$/;"	f
delRead	deps/hiredis/async.h	/^        void (*delRead)(void *privdata);$/;"	m	struct:redisAsyncContext::__anon147
delWrite	deps/hiredis/async.h	/^        void (*delWrite)(void *privdata);$/;"	m	struct:redisAsyncContext::__anon147
del_parts_mode	deps/pmdk/src/common/set.h	/^enum del_parts_mode {$/;"	g
delabel	deps/pmdk/utils/cstyle	/^delabel($)$/;"	s
delay	deps/lua/test/life.lua	/^function delay() -- NOTE: SYSTEM-DEPENDENT, adjust as necessary$/;"	f
delete_element	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^delete_element(struct ds_context *ctx)$/;"	f
delete_node	deps/pmdk/src/libpmemobj/critnib.c	/^delete_node(struct critnib_node *__restrict n)$/;"	f	file:
delete_objects	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^delete_objects(PMEMobjpool *pop, float pct)$/;"	f	file:
delete_replicas	deps/pmdk/src/libpmempool/transform.c	/^delete_replicas(struct pool_set *set, struct poolset_compare_status *set_s)$/;"	f	file:
deleted_leaf	deps/pmdk/src/libpmemobj/critnib.c	/^	struct critnib_leaf *deleted_leaf;$/;"	m	struct:critnib	typeref:struct:critnib::critnib_leaf	file:
deleted_node	deps/pmdk/src/libpmemobj/critnib.c	/^	struct critnib_node *deleted_node;$/;"	m	struct:critnib	typeref:struct:critnib::critnib_node	file:
delimiter	deps/pmdk/src/tools/pmempool/convert.c	/^static const char *delimiter = ":";$/;"	v	file:
delimiter	deps/pmdk/src/tools/pmempool/convert.c	/^static const char *delimiter = ";";$/;"	v	file:
delnode_cluster_cmd	src/redis-trib.rb	/^    def delnode_cluster_cmd(argv,opt)$/;"	f	class:RedisTrib.alloc_slots
desc	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_READ_HANDLER(desc)(void *ctx,$/;"	f	file:
desc	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_WRITE_HANDLER(desc)(void *ctx,$/;"	f	file:
desc	deps/pmdk/src/libpmemobj/pmalloc.c	/^static const struct ctl_argument CTL_ARG(desc) = {$/;"	v	typeref:struct:CTL_ARG	file:
desc	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^	void *desc;		\/* local memory descriptor *\/$/;"	m	struct:rpmem_fip_msg
desc	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^	void *desc;		\/* local memory descriptor *\/$/;"	m	struct:rpmem_fip_rma
desc	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint8_t desc[0];	\/* pool descriptor, null-terminated string *\/$/;"	m	struct:rpmem_msg_pool_desc
desc	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^static const char *desc[] = {$/;"	v	file:
descr	deps/pmdk/src/benchmarks/benchmark.hpp	/^	const char *descr;$/;"	m	struct:benchmark_clo
dest	deps/pmdk/src/libpmemobj/list.c	/^	PMEMoid dest;$/;"	m	struct:list_args_insert	file:
dest	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	uint64_t dest;$/;"	m	struct:foo	file:
dest_addr	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	unsigned char *dest_addr;$/;"	m	struct:pmem_bench	file:
dest_entry_ptr	deps/pmdk/src/libpmemobj/list.c	/^	struct list_entry *dest_entry_ptr;$/;"	m	struct:list_args_insert	typeref:struct:list_args_insert::list_entry	file:
dest_mode	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	char *dest_mode;$/;"	m	struct:pmem_args	file:
dest_off	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	size_t dest_off;$/;"	m	struct:pmem_args	file:
dest_off	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	size_t dest_off;   \/* destination address offset *\/$/;"	m	struct:memset_args	file:
dest_off	deps/pmdk/src/benchmarks/rpmem.cpp	/^	size_t dest_off;   \/* destination address offset *\/$/;"	m	struct:rpmem_args	file:
dest_offset	deps/pmdk/src/common/ctl.h	/^	size_t dest_offset; \/* offset of the field inside of the argument *\/$/;"	m	struct:ctl_argument_parser
dest_size	deps/pmdk/src/common/ctl.h	/^	size_t dest_size; \/* size of the field inside of the argument *\/$/;"	m	struct:ctl_argument_parser
dest_size	deps/pmdk/src/common/ctl.h	/^	size_t dest_size; \/* sizeof the entire argument *\/$/;"	m	struct:ctl_argument
destroy	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	int(*destroy)(PMEMobjpool *pop, TOID(struct map) *map);$/;"	m	struct:map_ops
destroy	deps/pmdk/src/libpmemobj/container.h	/^	void (*destroy)(struct block_container *c);$/;"	m	struct:block_container_ops
destroy_cb	deps/jemalloc/test/unit/rb.c	/^destroy_cb(node_t *node, void *data)$/;"	f	file:
destroy_rt	deps/pmdk/src/libpmemobj/lane.h	/^	section_destr destroy_rt;$/;"	m	struct:section_operations
detail	deps/pmdk/src/include/pmemcompat.h	/^namespace detail {$/;"	n	namespace:pmem
detected_redzone_corruption	deps/jemalloc/test/unit/junk.c	/^static bool detected_redzone_corruption;$/;"	v	file:
detected_redzone_corruption	deps/jemalloc/test/unit/quarantine.c	/^static bool detected_redzone_corruption;$/;"	v	file:
dev	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint64_t dev;	\/* device info *\/$/;"	m	struct:objfs_inode	file:
device_dax	deps/pmdk/src/test/pmem_map_file_win/pmem_map_file_win.c	/^static int device_dax = 0;$/;"	v	file:
device_dax_alignment	deps/pmdk/src/common/file_posix.c	/^device_dax_alignment(const char *path)$/;"	f	file:
device_dax_file_size	deps/pmdk/src/common/file.c	/^device_dax_file_size(const char *path)$/;"	f	file:
device_dax_stat_size	deps/pmdk/src/common/file.c	/^device_dax_stat_size(os_stat_t *st)$/;"	f	file:
di	src/server.h	/^    dictIterator *di;$/;"	m	struct:__anon163
di	src/server.h	/^    dictIterator *di;$/;"	m	struct:__anon164
di	src/t_zset.c	/^                dictIterator *di;$/;"	m	struct:__anon152::__anon153::_iterset::__anon155	file:
dict	deps/hiredis/dict.h	/^typedef struct dict {$/;"	s
dict	deps/hiredis/dict.h	/^} dict;$/;"	t	typeref:struct:dict
dict	src/dict.h	/^typedef struct dict {$/;"	s
dict	src/dict.h	/^} dict;$/;"	t	typeref:struct:dict
dict	src/server.h	/^    dict *dict;                 \/* The keyspace for this DB *\/$/;"	m	struct:redisDb
dict	src/server.h	/^    dict *dict;$/;"	m	struct:zset
dict	src/t_zset.c	/^                dict *dict;$/;"	m	struct:__anon152::__anon153::_iterset::__anon155	file:
dictAdd	deps/hiredis/dict.c	/^static int dictAdd(dict *ht, void *key, void *val) {$/;"	f	file:
dictAdd	src/dict.c	/^int dictAdd(dict *d, void *key, void *val)$/;"	f
dictAddPM	src/dict.c	/^int dictAddPM(dict *d, void *key, void *val)$/;"	f
dictAddRaw	src/dict.c	/^dictEntry *dictAddRaw(dict *d, void *key)$/;"	f
dictAddRawPM	src/dict.c	/^dictEntry *dictAddRawPM(dict *d, void *key)$/;"	f
dictAddReconstructedPM	src/dict.c	/^dictEntry *dictAddReconstructedPM(dict *d, void *key, void *val)$/;"	f
dictCompareHashKeys	deps/hiredis/dict.h	101;"	d
dictCompareKeys	src/dict.h	134;"	d
dictCreate	deps/hiredis/dict.c	/^static dict *dictCreate(dictType *type, void *privDataPtr) {$/;"	f	file:
dictCreate	src/dict.c	/^dict *dictCreate(dictType *type,$/;"	f
dictDelete	deps/hiredis/dict.c	/^static int dictDelete(dict *ht, const void *key) {$/;"	f	file:
dictDelete	src/dict.c	/^int dictDelete(dict *ht, const void *key) {$/;"	f
dictDeleteNoFree	src/dict.c	/^int dictDeleteNoFree(dict *ht, const void *key) {$/;"	f
dictDisableResize	src/dict.c	/^void dictDisableResize(void) {$/;"	f
dictEmpty	src/dict.c	/^void dictEmpty(dict *d, void(callback)(void*)) {$/;"	f
dictEnableResize	src/dict.c	/^void dictEnableResize(void) {$/;"	f
dictEncObjHash	src/server.c	/^unsigned int dictEncObjHash(const void *key) {$/;"	f
dictEncObjKeyCompare	src/server.c	/^int dictEncObjKeyCompare(void *privdata, const void *key1,$/;"	f
dictEntry	deps/hiredis/dict.h	/^typedef struct dictEntry {$/;"	s
dictEntry	deps/hiredis/dict.h	/^} dictEntry;$/;"	t	typeref:struct:dictEntry
dictEntry	src/dict.h	/^typedef struct dictEntry {$/;"	s
dictEntry	src/dict.h	/^} dictEntry;$/;"	t	typeref:struct:dictEntry
dictExpand	deps/hiredis/dict.c	/^static int dictExpand(dict *ht, unsigned long size) {$/;"	f	file:
dictExpand	src/dict.c	/^int dictExpand(dict *d, unsigned long size)$/;"	f
dictFetchValue	src/dict.c	/^void *dictFetchValue(dict *d, const void *key) {$/;"	f
dictFind	deps/hiredis/dict.c	/^static dictEntry *dictFind(dict *ht, const void *key) {$/;"	f	file:
dictFind	src/dict.c	/^dictEntry *dictFind(dict *d, const void *key)$/;"	f
dictFingerprint	src/dict.c	/^long long dictFingerprint(dict *d) {$/;"	f
dictFreeEntryKey	deps/hiredis/dict.h	90;"	d
dictFreeEntryVal	deps/hiredis/dict.h	79;"	d
dictFreeKey	src/dict.h	123;"	d
dictFreeVal	src/dict.h	103;"	d
dictGenCaseHashFunction	src/dict.c	/^unsigned int dictGenCaseHashFunction(const unsigned char *buf, int len) {$/;"	f
dictGenHashFunction	deps/hiredis/dict.c	/^static unsigned int dictGenHashFunction(const unsigned char *buf, int len) {$/;"	f	file:
dictGenHashFunction	src/dict.c	/^unsigned int dictGenHashFunction(const void *key, int len) {$/;"	f
dictGenericDelete	src/dict.c	/^static int dictGenericDelete(dict *d, const void *key, int nofree)$/;"	f	file:
dictGetDoubleVal	src/dict.h	144;"	d
dictGetEntryKey	deps/hiredis/dict.h	108;"	d
dictGetEntryVal	deps/hiredis/dict.h	109;"	d
dictGetHashFunctionSeed	src/dict.c	/^uint32_t dictGetHashFunctionSeed(void) {$/;"	f
dictGetIterator	deps/hiredis/dict.c	/^static dictIterator *dictGetIterator(dict *ht) {$/;"	f	file:
dictGetIterator	src/dict.c	/^dictIterator *dictGetIterator(dict *d)$/;"	f
dictGetKey	src/dict.h	140;"	d
dictGetRandomKey	src/dict.c	/^dictEntry *dictGetRandomKey(dict *d)$/;"	f
dictGetSafeIterator	src/dict.c	/^dictIterator *dictGetSafeIterator(dict *d) {$/;"	f
dictGetSignedIntegerVal	src/dict.h	142;"	d
dictGetSomeKeys	src/dict.c	/^unsigned int dictGetSomeKeys(dict *d, dictEntry **des, unsigned int count) {$/;"	f
dictGetStats	src/dict.c	/^void dictGetStats(char *buf, size_t bufsize, dict *d) {$/;"	f
dictGetUnsignedIntegerVal	src/dict.h	143;"	d
dictGetVal	src/dict.h	141;"	d
dictHashKey	deps/hiredis/dict.h	106;"	d
dictHashKey	src/dict.h	139;"	d
dictInstancesValDestructor	src/sentinel.c	/^void dictInstancesValDestructor (void *privdata, void *obj) {$/;"	f
dictIntHashFunction	src/dict.c	/^unsigned int dictIntHashFunction(unsigned int key)$/;"	f
dictIsRehashing	src/dict.h	147;"	d
dictIterator	deps/hiredis/dict.h	/^typedef struct dictIterator {$/;"	s
dictIterator	deps/hiredis/dict.h	/^} dictIterator;$/;"	t	typeref:struct:dictIterator
dictIterator	src/dict.h	/^typedef struct dictIterator {$/;"	s
dictIterator	src/dict.h	/^} dictIterator;$/;"	t	typeref:struct:dictIterator
dictKeyCompare	utils/hashtable/rehashing.c	/^int dictKeyCompare(void *privdata, const void *key1, const void *key2) {$/;"	f
dictKeyHash	utils/hashtable/rehashing.c	/^unsigned int dictKeyHash(const void *keyp) {$/;"	f
dictListDestructor	src/server.c	/^void dictListDestructor(void *privdata, void *val)$/;"	f
dictNext	deps/hiredis/dict.c	/^static dictEntry *dictNext(dictIterator *iter) {$/;"	f	file:
dictNext	src/dict.c	/^dictEntry *dictNext(dictIterator *iter)$/;"	f
dictObjHash	src/server.c	/^unsigned int dictObjHash(const void *key) {$/;"	f
dictObjKeyCompare	src/server.c	/^int dictObjKeyCompare(void *privdata, const void *key1,$/;"	f
dictObjectDestructor	src/server.c	/^void dictObjectDestructor(void *privdata, void *val)$/;"	f
dictObjectDestructorPM	src/server.c	/^void dictObjectDestructorPM(void *privdata, void *val)$/;"	f
dictRehash	src/dict.c	/^int dictRehash(dict *d, int n) {$/;"	f
dictRehashMilliseconds	src/dict.c	/^int dictRehashMilliseconds(dict *d, int ms) {$/;"	f
dictRelease	deps/hiredis/dict.c	/^static void dictRelease(dict *ht) {$/;"	f	file:
dictRelease	src/dict.c	/^void dictRelease(dict *d)$/;"	f
dictReleaseIterator	deps/hiredis/dict.c	/^static void dictReleaseIterator(dictIterator *iter) {$/;"	f	file:
dictReleaseIterator	src/dict.c	/^void dictReleaseIterator(dictIterator *iter)$/;"	f
dictReplace	deps/hiredis/dict.c	/^static int dictReplace(dict *ht, void *key, void *val) {$/;"	f	file:
dictReplace	src/dict.c	/^int dictReplace(dict *d, void *key, void *val)$/;"	f
dictReplacePM	src/dict.c	/^int dictReplacePM(dict *d, void *key, void *val)$/;"	f
dictReplaceRaw	src/dict.c	/^dictEntry *dictReplaceRaw(dict *d, void *key) {$/;"	f
dictResize	src/dict.c	/^int dictResize(dict *d)$/;"	f
dictScan	src/dict.c	/^unsigned long dictScan(dict *d,$/;"	f
dictScanFunction	src/dict.h	/^typedef void (dictScanFunction)(void *privdata, const dictEntry *de);$/;"	t
dictSdsCaseHash	src/server.c	/^unsigned int dictSdsCaseHash(const void *key) {$/;"	f
dictSdsDestructor	src/server.c	/^void dictSdsDestructor(void *privdata, void *val)$/;"	f
dictSdsDestructorPM	src/server.c	/^void dictSdsDestructorPM(void *privdata, void *val)$/;"	f
dictSdsHash	src/server.c	/^unsigned int dictSdsHash(const void *key) {$/;"	f
dictSdsKeyCaseCompare	src/server.c	/^int dictSdsKeyCaseCompare(void *privdata, const void *key1,$/;"	f
dictSdsKeyCompare	src/server.c	/^int dictSdsKeyCompare(void *privdata, const void *key1,$/;"	f
dictSetDoubleVal	src/dict.h	120;"	d
dictSetHashFunctionSeed	src/dict.c	/^void dictSetHashFunctionSeed(uint32_t seed) {$/;"	f
dictSetHashKey	deps/hiredis/dict.h	94;"	d
dictSetHashVal	deps/hiredis/dict.h	83;"	d
dictSetKey	src/dict.h	127;"	d
dictSetSignedIntegerVal	src/dict.h	114;"	d
dictSetUnsignedIntegerVal	src/dict.h	117;"	d
dictSetVal	src/dict.h	107;"	d
dictSize	deps/hiredis/dict.h	111;"	d
dictSize	src/dict.h	146;"	d
dictSlots	deps/hiredis/dict.h	110;"	d
dictSlots	src/dict.h	145;"	d
dictStringHash	src/latency.c	/^unsigned int dictStringHash(const void *key) {$/;"	f
dictStringKeyCompare	src/latency.c	/^int dictStringKeyCompare(void *privdata, const void *key1, const void *key2) {$/;"	f
dictType	deps/hiredis/dict.h	/^typedef struct dictType {$/;"	s
dictType	deps/hiredis/dict.h	/^} dictType;$/;"	t	typeref:struct:dictType
dictType	src/dict.h	/^typedef struct dictType {$/;"	s
dictType	src/dict.h	/^} dictType;$/;"	t	typeref:struct:dictType
dictTypeTest	utils/hashtable/rehashing.c	/^dictType dictTypeTest = {$/;"	v
dictVanillaFree	src/server.c	/^void dictVanillaFree(void *privdata, void *val)$/;"	f
dict_can_resize	src/dict.c	/^static int dict_can_resize = 1;$/;"	v	file:
dict_force_resize_ratio	src/dict.c	/^static unsigned int dict_force_resize_ratio = 5;$/;"	v	file:
dict_hash_function_seed	src/dict.c	/^static uint32_t dict_hash_function_seed = 5381;$/;"	v	file:
dictht	src/dict.h	/^typedef struct dictht {$/;"	s
dictht	src/dict.h	/^} dictht;$/;"	t	typeref:struct:dictht
dictid	src/server.h	/^    int dictid;             \/* ID of the currently SELECTed DB. *\/$/;"	m	struct:client
did_alloc	deps/jemalloc/test/integration/chunk.c	/^static bool did_alloc;$/;"	v	file:
did_commit	deps/jemalloc/test/integration/chunk.c	/^static bool did_commit;$/;"	v	file:
did_dalloc	deps/jemalloc/test/integration/chunk.c	/^static bool did_dalloc;$/;"	v	file:
did_decommit	deps/jemalloc/test/integration/chunk.c	/^static bool did_decommit;$/;"	v	file:
did_merge	deps/jemalloc/test/integration/chunk.c	/^static bool did_merge;$/;"	v	file:
did_prof_dump_open	deps/jemalloc/test/unit/prof_gdump.c	/^static bool did_prof_dump_open;$/;"	v	file:
did_prof_dump_open	deps/jemalloc/test/unit/prof_idump.c	/^static bool did_prof_dump_open;$/;"	v	file:
did_purge	deps/jemalloc/test/integration/chunk.c	/^static bool did_purge;$/;"	v	file:
did_split	deps/jemalloc/test/integration/chunk.c	/^static bool did_split;$/;"	v	file:
die	deps/lua/src/strbuf.c	/^static void die(const char *fmt, ...)$/;"	f	file:
die	utils/install_server.sh	/^die () {$/;"	f
diff	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^	int diff; \/* most significant differing bit *\/$/;"	m	struct:tree_map_node	file:
diff_log	deps/pmdk/src/test/pmempool_sync_remote/common.sh	/^function diff_log() {$/;"	f
diff_log	deps/pmdk/src/test/pmempool_transform_remote/common.sh	/^function diff_log() {$/;"	f
diff_num	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^diff_num(size_t idx)$/;"	f	file:
diff_num	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^diff_num(size_t idx)$/;"	f	file:
digits10	src/util.c	/^uint32_t digits10(uint64_t v) {$/;"	f
dir	deps/pmdk/src/common/fs_windows.c	/^	const char *dir;$/;"	m	struct:fs	file:
dir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	struct objfs_dir dir;	\/* directory specific data *\/$/;"	m	struct:objfs_inode	typeref:struct:objfs_inode::objfs_dir	file:
dir_handle	deps/pmdk/src/common/file.h	/^struct dir_handle {$/;"	s
direction	src/adlist.h	/^    int direction;$/;"	m	struct:listIter
direction	src/quicklist.h	/^    int direction;$/;"	m	struct:quicklistIter
direction	src/server.h	/^    unsigned char direction; \/* Iteration direction *\/$/;"	m	struct:__anon161
directory	deps/pmdk/src/common/set.h	/^	VEC(, struct pool_set_directory) directory;$/;"	m	struct:pool_replica
directory_based	deps/pmdk/src/common/set.h	/^	int directory_based;$/;"	m	struct:pool_set
dirlen	deps/pmdk/src/common/fs_windows.c	/^	size_t dirlen;$/;"	m	struct:fs	file:
dirname	deps/pmdk/src/windows/include/unistd.h	/^dirname(char *path)$/;"	f
dirp	deps/pmdk/src/common/file.h	/^	DIR *dirp;$/;"	m	struct:dir_handle
dirty	deps/pmdk/src/common/shutdown_state.h	/^	uint8_t dirty;$/;"	m	struct:shutdown_state
dirty	src/server.h	/^    long long dirty;                \/* Changes to DB from the last save *\/$/;"	m	struct:redisServer
dirty_before_bgsave	src/server.h	/^    long long dirty_before_bgsave;  \/* Used to restore dirty on failed BGSAVE *\/$/;"	m	struct:redisServer
disable	deps/pmdk/src/libpmempool/feature.c	/^	int (*disable)(const char *);$/;"	m	struct:feature_funcs	file:
disable	deps/pmdk/src/tools/pmempool/feature.c	/^	disable,$/;"	e	enum:feature_op	file:
disableRawMode	deps/linenoise/linenoise.c	/^static void disableRawMode(int fd) {$/;"	f	file:
disableWatchdog	src/debug.c	/^void disableWatchdog(void) {$/;"	f
disable_badblocks_checking	deps/pmdk/src/libpmempool/feature.c	/^disable_badblocks_checking(const char *path)$/;"	f	file:
disable_checksum_2k	deps/pmdk/src/libpmempool/feature.c	/^disable_checksum_2k(const char *path)$/;"	f	file:
disable_eatmydata	deps/pmdk/src/test/unittest/unittest.sh	/^disable_eatmydata() {$/;"	f
disable_exit_on_error	deps/pmdk/src/test/unittest/unittest.sh	/^function disable_exit_on_error() {$/;"	f
disable_shutdown_state	deps/pmdk/src/libpmempool/feature.c	/^disable_shutdown_state(const char *path)$/;"	f	file:
disable_singlehdr	deps/pmdk/src/libpmempool/feature.c	/^disable_singlehdr(const char *path)$/;"	f	file:
disabled_tools	deps/pmdk/src/test/unittest/valgrind.py	/^def disabled_tools(test):$/;"	f
discardCommand	src/multi.c	/^void discardCommand(client *c) {$/;"	f
discardTransaction	src/multi.c	/^void discardTransaction(client *c) {$/;"	f
discharge2anyreg	deps/lua/src/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:
discharge2reg	deps/lua/src/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
dischargejpc	deps/lua/src/lcode.c	/^static void dischargejpc (FuncState *fs) {$/;"	f	file:
disconnect	deps/hiredis/test.c	/^static int disconnect(redisContext *c, int keep_fd) {$/;"	f	file:
disconnectAllBlockedClients	src/blocked.c	/^void disconnectAllBlockedClients(void) {$/;"	f
disconnectCallback	deps/hiredis/examples/example-ae.c	/^void disconnectCallback(const redisAsyncContext *c, int status) {$/;"	f
disconnectCallback	deps/hiredis/examples/example-libev.c	/^void disconnectCallback(const redisAsyncContext *c, int status) {$/;"	f
disconnectCallback	deps/hiredis/examples/example-libevent.c	/^void disconnectCallback(const redisAsyncContext *c, int status) {$/;"	f
disconnectCallback	deps/hiredis/examples/example-libuv.c	/^void disconnectCallback(const redisAsyncContext *c, int status) {$/;"	f
disconnectSlaves	src/networking.c	/^void disconnectSlaves(void) {$/;"	f
disconnected	src/sentinel.c	/^    int disconnected;      \/* Non-zero if we need to reconnect cc or pc. *\/$/;"	m	struct:instanceLink	file:
dist	src/geo.h	/^    double dist;$/;"	m	struct:geoPoint
distsamples	src/redis-cli.c	/^struct distsamples {$/;"	s	file:
djb2_hash	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^djb2_hash(const char *str)$/;"	f	file:
do_aborted_nested_tx	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^do_aborted_nested_tx(void *arg)$/;"	f	file:
do_aborted_nested_tx	deps/pmdk/src/test/obj_tx_locks_abort/obj_tx_locks_abort.c	/^do_aborted_nested_tx(PMEMobjpool *pop, TOID(struct obj) oid, int value)$/;"	f	file:
do_aborted_tx	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^do_aborted_tx(void *arg)$/;"	f	file:
do_added_parts_exist	deps/pmdk/src/libpmempool/transform.c	/^do_added_parts_exist(struct pool_set *set,$/;"	f	file:
do_alloc	deps/pmdk/src/examples/libpmemobj/array/array.c	/^do_alloc(int argc, char *argv[])$/;"	f	file:
do_alloc	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^static fn_op do_alloc[] = {do_alloc_type, do_alloc_type_sec};$/;"	v	file:
do_alloc	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^do_alloc(PMEMobjpool *pop, const char *s, unsigned type_num)$/;"	f
do_alloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^do_alloc(PMEMobjpool *pop, PMEMoid *oidp, size_t size, uint64_t type_num)$/;"	f	file:
do_alloc_type	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^do_alloc_type(int id)$/;"	f	file:
do_alloc_type_sec	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^do_alloc_type_sec(int id)$/;"	f	file:
do_append	deps/pmdk/src/test/log_basic/log_basic.c	/^do_append(PMEMlogpool *plp)$/;"	f	file:
do_append	deps/pmdk/src/test/log_recovery/log_recovery.c	/^do_append(PMEMlogpool *plp)$/;"	f	file:
do_append	deps/pmdk/src/test/log_walker/log_walker.c	/^do_append(PMEMlogpool *plp)$/;"	f	file:
do_appendv	deps/pmdk/src/test/log_basic/log_basic.c	/^do_appendv(PMEMlogpool *plp)$/;"	f	file:
do_appendv	deps/pmdk/src/test/log_recovery/log_recovery.c	/^do_appendv(PMEMlogpool *plp)$/;"	f	file:
do_check	deps/pmdk/src/test/log_basic/log_basic.c	/^do_check(const char *path)$/;"	f	file:
do_check	deps/pmdk/src/test/pmem_map_file/pmem_map_file.c	/^do_check(int fd, void *addr, size_t mlen)$/;"	f	file:
do_check	deps/pmdk/src/test/pmem_map_file_win/pmem_map_file_win.c	/^do_check(int fd, void *addr, size_t mlen)$/;"	f	file:
do_cleanup	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^do_cleanup(void)$/;"	f	file:
do_cleanup	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^do_cleanup(PMEMobjpool *pop, TOID(struct list) list)$/;"	f	file:
do_clear	deps/pmdk/src/test/util_badblock/util_badblock.c	/^do_clear(const char *path)$/;"	f	file:
do_close	deps/pmdk/src/test/log_basic/log_basic.c	/^do_close(PMEMlogpool *plp)$/;"	f	file:
do_cmpmap	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	/^do_cmpmap(void)$/;"	f	file:
do_cond_broadcast	deps/pmdk/src/test/obj_locks/obj_locks.c	/^do_cond_broadcast(void *arg)$/;"	f	file:
do_cond_signal	deps/pmdk/src/test/obj_locks/obj_locks.c	/^do_cond_signal(void *arg)$/;"	f	file:
do_copy_to_non_pmem	deps/pmdk/src/examples/libpmem/full_copy.c	/^do_copy_to_non_pmem(char *addr, int srcfd, off_t len)$/;"	f	file:
do_copy_to_pmem	deps/pmdk/src/examples/libpmem/full_copy.c	/^do_copy_to_pmem(char *pmemaddr, int srcfd, off_t len)$/;"	f	file:
do_create	deps/pmdk/src/examples/librpmem/basic.c	/^do_create(const char *target, const char *poolset, void *pool)$/;"	f	file:
do_create	deps/pmdk/src/test/log_basic/log_basic.c	/^do_create(const char *path)$/;"	f	file:
do_create	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^do_create(const char *path, const char *layout)$/;"	f	file:
do_create	deps/pmdk/src/test/util_badblock/util_badblock.c	/^do_create(const char *path)$/;"	f	file:
do_create_and_extend	deps/pmdk/src/test/obj_badblock/obj_badblock.c	/^do_create_and_extend(const char *path)$/;"	f	file:
do_dalloc	deps/jemalloc/test/integration/chunk.c	/^static bool do_dalloc = true;$/;"	v	file:
do_ddmap	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^do_ddmap(struct ddmap_context *ctx)$/;"	f	file:
do_decommit	deps/jemalloc/test/integration/chunk.c	/^static bool do_decommit;$/;"	v	file:
do_direct_simple	deps/pmdk/src/test/obj_toid/obj_toid.c	/^do_direct_simple(PMEMobjpool *pop)$/;"	f	file:
do_fail	deps/pmdk/src/test/obj_list/obj_list.c	/^do_fail(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_fault_injection	deps/pmdk/src/test/blk_pool/blk_pool.c	/^do_fault_injection(const char *path, size_t bsize,$/;"	f	file:
do_fault_injection	deps/pmdk/src/test/log_basic/log_basic.c	/^do_fault_injection(PMEMlogpool *plp, const char *path)$/;"	f	file:
do_fault_injection	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^do_fault_injection(PMEMobjpool *pop)$/;"	f	file:
do_fault_injection	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	/^do_fault_injection(struct transaction_data *data)$/;"	f	file:
do_fault_injection	deps/pmdk/src/test/util_badblock/util_badblock.c	/^do_fault_injection(const char *path)$/;"	f	file:
do_fault_injection_class_collection_new	deps/pmdk/src/test/obj_heap/obj_heap.c	/^do_fault_injection_class_collection_new()$/;"	f	file:
do_fault_injection_class_new	deps/pmdk/src/test/obj_heap/obj_heap.c	/^do_fault_injection_class_new(int i)$/;"	f	file:
do_fault_injection_heap_boot	deps/pmdk/src/test/obj_heap/obj_heap.c	/^do_fault_injection_heap_boot()$/;"	f	file:
do_fault_injection_new_ravl	deps/pmdk/src/test/obj_heap/obj_heap.c	/^do_fault_injection_new_ravl()$/;"	f	file:
do_fault_injection_new_seglists	deps/pmdk/src/test/obj_heap/obj_heap.c	/^do_fault_injection_new_seglists()$/;"	f	file:
do_fault_injection_recycler	deps/pmdk/src/test/obj_heap/obj_heap.c	/^do_fault_injection_recycler()$/;"	f	file:
do_fault_injection_register	deps/pmdk/src/test/pmem_is_pmem_posix/pmem_is_pmem_posix.c	/^do_fault_injection_register(void *addr, size_t len, enum pmem_map_type type)$/;"	f	file:
do_fault_injection_split	deps/pmdk/src/test/pmem_is_pmem_posix/pmem_is_pmem_posix.c	/^do_fault_injection_split(void *addr, size_t len)$/;"	f	file:
do_fault_injection_stats	deps/pmdk/src/test/obj_heap/obj_heap.c	/^do_fault_injection_stats()$/;"	f	file:
do_first	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^static fn_void do_first[] = {do_first_type, do_first_type_sec};$/;"	v	file:
do_first_type	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^do_first_type(void)$/;"	f	file:
do_first_type_sec	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^do_first_type_sec(void)$/;"	f	file:
do_free	deps/pmdk/src/examples/libpmemobj/array/array.c	/^do_free(int argc, char *argv[])$/;"	f	file:
do_free	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^static fn_op do_free[] = {do_free_type, do_free_type_sec};$/;"	v	file:
do_free_type	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^do_free_type(int n)$/;"	f	file:
do_free_type_sec	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^do_free_type_sec(int n)$/;"	f	file:
do_insert	deps/pmdk/src/test/obj_list/obj_list.c	/^do_insert(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_insert	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^do_insert(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_insert_new	deps/pmdk/src/test/obj_list/obj_list.c	/^do_insert_new(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_insert_new	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^do_insert_new(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_io	deps/pmdk/src/tools/daxio/daxio.c	/^do_io(struct ndctl_ctx *ndctl_ctx, struct daxio_context *ctx)$/;"	f	file:
do_kill	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^do_kill(char *pid_file, int signo)$/;"	f	file:
do_list	deps/pmdk/src/test/util_badblock/util_badblock.c	/^do_list(const char *path)$/;"	f	file:
do_lock	deps/pmdk/src/test/obj_locks/obj_locks.c	/^static fn_lock do_lock[MAX_FUNC] = {do_mutex_lock, do_rwlock_wrlock,$/;"	v	file:
do_lock_init	deps/pmdk/src/test/obj_locks/obj_locks.c	/^do_lock_init(struct locks *lock)$/;"	f	file:
do_log_intents_max_size	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_log_intents_max_size(PMEMobjpool *pop)$/;"	f	file:
do_log_intents_max_size_limits	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_log_intents_max_size_limits(void)$/;"	f	file:
do_log_snapshots_max_size	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_log_snapshots_max_size(PMEMobjpool *pop)$/;"	f	file:
do_log_snapshots_max_size_limits	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_log_snapshots_max_size_limits(void)$/;"	f	file:
do_memcpy	deps/pmdk/src/test/pmem_memcpy/pmem_memcpy.c	/^do_memcpy(int fd, char *dest, int dest_off, char *src, int src_off,$/;"	f	file:
do_memcpy_variants	deps/pmdk/src/test/pmem_memcpy/pmem_memcpy.c	/^do_memcpy_variants(int fd, char *dest, int dest_off, char *src, int src_off,$/;"	f	file:
do_memmove	deps/pmdk/src/test/pmem_memmove/pmem_memmove.c	/^do_memmove(int ddax, char *dst, char *src, const char *file_name,$/;"	f	file:
do_memmove_variants	deps/pmdk/src/test/pmem_memmove/pmem_memmove.c	/^do_memmove_variants(int ddax, char *dst, char *src, const char *file_name,$/;"	f	file:
do_memset	deps/pmdk/src/test/pmem_memset/pmem_memset.c	/^do_memset(int fd, char *dest, const char *file_name, size_t dest_off,$/;"	f	file:
do_memset_variants	deps/pmdk/src/test/pmem_memset/pmem_memset.c	/^do_memset_variants(int fd, char *dest, const char *file_name, size_t dest_off,$/;"	f	file:
do_move	deps/pmdk/src/test/obj_list/obj_list.c	/^do_move(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_move	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^do_move(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_move_one_list	deps/pmdk/src/test/obj_list/obj_list.c	/^do_move_one_list(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_mutex_lock	deps/pmdk/src/test/obj_locks/obj_locks.c	/^do_mutex_lock(void *arg)$/;"	f	file:
do_nbyte	deps/pmdk/src/test/log_basic/log_basic.c	/^do_nbyte(PMEMlogpool *plp)$/;"	f	file:
do_nested_tx	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^do_nested_tx(void *arg)$/;"	f	file:
do_nested_tx	deps/pmdk/src/test/obj_tx_locks_abort/obj_tx_locks_abort.c	/^do_nested_tx(PMEMobjpool *pop, TOID(struct obj) o, int value)$/;"	f	file:
do_next	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^static fn_op do_next[] = {do_next_type, do_next_type_sec};$/;"	v	file:
do_next_type	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^do_next_type(int n)$/;"	f	file:
do_next_type_sec	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^do_next_type_sec(int n)$/;"	f	file:
do_open	deps/pmdk/src/examples/librpmem/basic.c	/^do_open(const char *target, const char *poolset, void *pool)$/;"	f	file:
do_open	deps/pmdk/src/test/obj_badblock/obj_badblock.c	/^do_open(const char *path)$/;"	f	file:
do_open	deps/pmdk/src/test/util_badblock/util_badblock.c	/^do_open(const char *path)$/;"	f	file:
do_print	deps/pmdk/src/examples/libpmemobj/array/array.c	/^do_print(int argc, char *argv[])$/;"	f	file:
do_print	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^static fn_void do_print[] = {do_print_type, do_print_type_sec};$/;"	v	file:
do_print	deps/pmdk/src/test/obj_list/obj_list.c	/^do_print(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_print	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^do_print(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_print_reverse	deps/pmdk/src/test/obj_list/obj_list.c	/^do_print_reverse(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_print_reverse	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^do_print_reverse(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_print_type	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^do_print_type(void)$/;"	f	file:
do_print_type_sec	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^do_print_type_sec(void)$/;"	f	file:
do_prof_reset	deps/jemalloc/test/unit/prof_reset.c	/^do_prof_reset(size_t lg_prof_sample)$/;"	f	file:
do_realloc	deps/pmdk/src/examples/libpmemobj/array/array.c	/^do_realloc(int argc, char *argv[])$/;"	f	file:
do_recursion	deps/jemalloc/test/src/SFMT.c	/^JEMALLOC_INLINE_C void do_recursion(w128_t *r, w128_t *a, w128_t *b, w128_t *c,$/;"	f
do_remove	deps/pmdk/src/examples/librpmem/basic.c	/^do_remove(const char *target, const char *poolset)$/;"	f	file:
do_remove	deps/pmdk/src/test/obj_list/obj_list.c	/^do_remove(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_remove	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^do_remove(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_remove_free	deps/pmdk/src/test/obj_list/obj_list.c	/^do_remove_free(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_remove_free	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^do_remove_free(PMEMobjpool *pop, const char *arg)$/;"	f	file:
do_revert	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def do_revert(self, store_op):$/;"	m	class:BinaryFile
do_revert	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def do_revert(self, store_op):$/;"	m	class:BinaryOutputHandler
do_rewind	deps/pmdk/src/test/log_basic/log_basic.c	/^do_rewind(PMEMlogpool *plp)$/;"	f	file:
do_run_or_exe	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^do_run_or_exe(const char *pid_file, char *cmd, char *argv[], unsigned timeout)$/;"	f	file:
do_rwlock_rdlock	deps/pmdk/src/test/obj_locks/obj_locks.c	/^do_rwlock_rdlock(void *arg)$/;"	f	file:
do_rwlock_wrlock	deps/pmdk/src/test/obj_locks/obj_locks.c	/^do_rwlock_wrlock(void *arg)$/;"	f	file:
do_store	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def do_store(self, store_op):$/;"	m	class:BinaryFile
do_store	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def do_store(self, store_op):$/;"	m	class:BinaryOutputHandler
do_strdup	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^do_strdup(PMEMobjpool *pop)$/;"	f	file:
do_strdup_alloc	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^do_strdup_alloc(PMEMobjpool *pop)$/;"	f	file:
do_strdup_alloc_empty_string	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^do_strdup_alloc_empty_string(PMEMobjpool *pop)$/;"	f	file:
do_strdup_null	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^do_strdup_null(PMEMobjpool *pop)$/;"	f	file:
do_strdup_null_alloc	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^do_strdup_null_alloc(PMEMobjpool *pop)$/;"	f	file:
do_strdup_uint64_range	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^do_strdup_uint64_range(PMEMobjpool *pop)$/;"	f	file:
do_tell	deps/pmdk/src/test/log_basic/log_basic.c	/^do_tell(PMEMlogpool *plp)$/;"	f	file:
do_tell	deps/pmdk/src/test/log_recovery/log_recovery.c	/^do_tell(PMEMlogpool *plp)$/;"	f	file:
do_test	deps/pmdk/src/test/out_err_mt/out_err_mt.c	/^do_test(void *arg)$/;"	f	file:
do_test	deps/pmdk/src/test/out_err_mt_win/out_err_mt_win.c	/^do_test(void *arg)$/;"	f	file:
do_toid_no_valid	deps/pmdk/src/test/obj_toid/obj_toid.c	/^do_toid_no_valid(PMEMobjpool *pop)$/;"	f	file:
do_toid_valid	deps/pmdk/src/test/obj_toid/obj_toid.c	/^do_toid_valid(PMEMobjpool *pop)$/;"	f	file:
do_tx	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^do_tx(void *arg)$/;"	f	file:
do_tx_abort	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^do_tx_abort(PMEMobjpool *pop, TOID(struct test_obj) *obj)$/;"	f	file:
do_tx_abort_nested	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^do_tx_abort_nested(PMEMobjpool *pop, TOID(struct test_obj) *obj)$/;"	f	file:
do_tx_add_cache_overflowing_range	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_cache_overflowing_range(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_huge_range_abort	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_huge_range_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_locks	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	/^do_tx_add_locks(struct transaction_data *data)$/;"	f	file:
do_tx_add_locks_nested	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	/^do_tx_add_locks_nested(struct transaction_data *data)$/;"	f	file:
do_tx_add_locks_nested_all	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	/^do_tx_add_locks_nested_all(struct transaction_data *data)$/;"	f	file:
do_tx_add_range_abort	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_abort	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_range_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_abort_after_commit	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_abort_after_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_abort_after_nested	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_abort_after_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_abort_after_nested	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_range_abort_after_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_abort_nested	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_abort_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_abort_nested	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_range_abort_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_alloc_abort	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_alloc_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_alloc_abort	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_range_alloc_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_alloc_commit	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_alloc_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_alloc_commit	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_range_alloc_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_commit	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_commit	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_range_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_commit_nested	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_commit_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_commit_nested	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_range_commit_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_flag_merge_left	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_flag_merge_left(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_flag_merge_middle	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_flag_merge_middle(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_flag_merge_right	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_flag_merge_right(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_lots_of_small_snapshots	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_range_lots_of_small_snapshots(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_no_uninit_check_commit_no_flag	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_no_uninit_check_commit_no_flag(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_no_uninit_check_commit_no_flag	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_range_no_uninit_check_commit_no_flag(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_overlapping	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_overlapping(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_reopen	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_reopen(char *path)$/;"	f	file:
do_tx_add_range_too_large	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_too_large(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_too_large	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_range_too_large(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_twice_abort	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_twice_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_twice_abort	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_range_twice_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_twice_commit	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_twice_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_twice_commit	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_add_range_twice_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_wrong_uuid	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_wrong_uuid(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_range_zero	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_add_range_zero(PMEMobjpool *pop)$/;"	f	file:
do_tx_add_taken_lock	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	/^do_tx_add_taken_lock(struct transaction_data *data)$/;"	f	file:
do_tx_alloc	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_alloc(PMEMobjpool *pop, uint64_t type_num, uint64_t init_num)$/;"	f	file:
do_tx_alloc	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_alloc(PMEMobjpool *pop, uint64_t type_num, uint64_t init_num)$/;"	f	file:
do_tx_alloc	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^do_tx_alloc(PMEMobjpool *pop, unsigned type_num)$/;"	f	file:
do_tx_alloc	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_alloc(PMEMobjpool *pop, unsigned type_num, size_t value)$/;"	f	file:
do_tx_alloc_abort	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_alloc_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_alloc_abort_after_nested	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_alloc_abort_after_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_alloc_abort_nested	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_alloc_abort_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_alloc_commit	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_alloc_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_alloc_commit_nested	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_alloc_commit_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_alloc_huge	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_alloc_huge(PMEMobjpool *pop)$/;"	f	file:
do_tx_alloc_many	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_alloc_many(PMEMobjpool *pop)$/;"	f	file:
do_tx_alloc_oom	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_alloc_oom(PMEMobjpool *pop)$/;"	f	file:
do_tx_alloc_zerolen	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_alloc_zerolen(PMEMobjpool *pop)$/;"	f	file:
do_tx_auto_alloc_disabled	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_tx_auto_alloc_disabled(PMEMobjpool *pop)$/;"	f	file:
do_tx_buffer_currently_used	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_tx_buffer_currently_used(PMEMobjpool *pop)$/;"	f	file:
do_tx_buffer_overlapping	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_tx_buffer_overlapping(PMEMobjpool *pop)$/;"	f	file:
do_tx_commit	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^do_tx_commit(PMEMobjpool *pop, TOID(struct test_obj) *obj)$/;"	f	file:
do_tx_commit_and_abort	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_commit_and_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_commit_nested	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^do_tx_commit_nested(PMEMobjpool *pop, TOID(struct test_obj) *obj)$/;"	f	file:
do_tx_free_abort	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^do_tx_free_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_free_abort_after_nested	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^do_tx_free_abort_after_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_free_abort_free	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^do_tx_free_abort_free(PMEMobjpool *pop)$/;"	f	file:
do_tx_free_abort_nested	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^do_tx_free_abort_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_free_alloc_abort	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^do_tx_free_alloc_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_free_alloc_commit	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^do_tx_free_alloc_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_free_commit	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^do_tx_free_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_free_commit_nested	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^do_tx_free_commit_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_free_many_times	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^do_tx_free_many_times(PMEMobjpool *pop)$/;"	f	file:
do_tx_free_null_oid	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^do_tx_free_null_oid(PMEMobjpool *pop)$/;"	f	file:
do_tx_free_wrong_uuid	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^do_tx_free_wrong_uuid(PMEMobjpool *pop)$/;"	f	file:
do_tx_lock_fail	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	/^do_tx_lock_fail(struct transaction_data *data)$/;"	f	file:
do_tx_macro_abort	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^do_tx_macro_abort(PMEMobjpool *pop, TOID(struct test_obj) *obj)$/;"	f	file:
do_tx_macro_abort_nested	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^do_tx_macro_abort_nested(PMEMobjpool *pop, TOID(struct test_obj) *obj)$/;"	f	file:
do_tx_macro_commit	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^do_tx_macro_commit(PMEMobjpool *pop, TOID(struct test_obj) *obj)$/;"	f	file:
do_tx_macro_commit_nested	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^do_tx_macro_commit_nested(PMEMobjpool *pop, TOID(struct test_obj) *obj)$/;"	f	file:
do_tx_max_alloc_no_user_alloc_snap	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_tx_max_alloc_no_user_alloc_snap(PMEMobjpool *pop)$/;"	f	file:
do_tx_max_alloc_tx_publish	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_tx_max_alloc_tx_publish(PMEMobjpool *pop)$/;"	f	file:
do_tx_max_alloc_tx_publish_abort	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_tx_max_alloc_tx_publish_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_max_alloc_user_alloc_nested	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_tx_max_alloc_user_alloc_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_max_alloc_user_alloc_snap	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_tx_max_alloc_user_alloc_snap(PMEMobjpool *pop)$/;"	f	file:
do_tx_max_alloc_user_alloc_snap_multi	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_tx_max_alloc_user_alloc_snap_multi(PMEMobjpool *pop)$/;"	f	file:
do_tx_max_alloc_wrong_pop_addr	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_tx_max_alloc_wrong_pop_addr(PMEMobjpool *pop, PMEMobjpool *pop2)$/;"	f	file:
do_tx_old	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^do_tx_old(void *arg)$/;"	f	file:
do_tx_process	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^do_tx_process(PMEMobjpool *pop)$/;"	f	file:
do_tx_process_nested	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^do_tx_process_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_realloc_abort	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_realloc_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_realloc_alloc_abort	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_realloc_alloc_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_realloc_alloc_commit	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_realloc_alloc_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_realloc_commit	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_realloc_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_realloc_free	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_realloc_free(PMEMobjpool *pop)$/;"	f	file:
do_tx_realloc_huge	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_realloc_huge(PMEMobjpool *pop)$/;"	f	file:
do_tx_root	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_root(PMEMobjpool *pop)$/;"	f	file:
do_tx_root_realloc	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_root_realloc(PMEMobjpool *pop)$/;"	f	file:
do_tx_set_get_user_data_abort	deps/pmdk/src/test/obj_tx_user_data/obj_tx_user_data.c	/^do_tx_set_get_user_data_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_set_get_user_data_nested	deps/pmdk/src/test/obj_tx_user_data/obj_tx_user_data.c	/^do_tx_set_get_user_data_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_strdup	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^static fn_tx_strdup do_tx_strdup[MAX_FUNC] = {tx_strdup, tx_strdup_macro};$/;"	v	file:
do_tx_strdup_abort	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^do_tx_strdup_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_strdup_abort_after_nested	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^do_tx_strdup_abort_after_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_strdup_abort_nested	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^do_tx_strdup_abort_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_strdup_commit	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^do_tx_strdup_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_strdup_commit_nested	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^do_tx_strdup_commit_nested(PMEMobjpool *pop)$/;"	f	file:
do_tx_strdup_free_abort	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^do_tx_strdup_free_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_strdup_free_commit	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^do_tx_strdup_free_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_strdup_noflush	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^do_tx_strdup_noflush(PMEMobjpool *pop)$/;"	f	file:
do_tx_strdup_null	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^do_tx_strdup_null(PMEMobjpool *pop)$/;"	f	file:
do_tx_user_buffer_atomic_alloc	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^do_tx_user_buffer_atomic_alloc(PMEMobjpool *pop)$/;"	f	file:
do_tx_wcsdup	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^static fn_tx_wcsdup do_tx_wcsdup[MAX_FUNC] = {tx_wcsdup, tx_wcsdup_macro};$/;"	v	file:
do_tx_xadd_range_no_flush_commit	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_xadd_range_no_flush_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_flush_commit	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_xadd_range_no_flush_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_snapshot_abort	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_xadd_range_no_snapshot_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_snapshot_abort	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_xadd_range_no_snapshot_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_snapshot_commit	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_xadd_range_no_snapshot_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_snapshot_commit	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_xadd_range_no_snapshot_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_snapshot_fields	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_xadd_range_no_snapshot_fields(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_uninit_check_abort	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_xadd_range_no_uninit_check_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_uninit_check_abort	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_xadd_range_no_uninit_check_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_uninit_check_commit	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_xadd_range_no_uninit_check_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_uninit_check_commit	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_xadd_range_no_uninit_check_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_uninit_check_commit_part_uninit	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_xadd_range_no_uninit_check_commit_part_uninit(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_uninit_check_commit_part_uninit	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_xadd_range_no_uninit_check_commit_part_uninit(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_uninit_check_commit_uninit	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_xadd_range_no_uninit_check_commit_uninit(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_no_uninit_check_commit_uninit	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_xadd_range_no_uninit_check_commit_uninit(PMEMobjpool *pop)$/;"	f	file:
do_tx_xadd_range_twice_no_snapshot_abort	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_xadd_range_twice_no_snapshot_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_xalloc_abort	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_xalloc_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_xalloc_commit	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_xalloc_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_xalloc_huge	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_xalloc_huge(PMEMobjpool *pop)$/;"	f	file:
do_tx_xalloc_noflush	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_xalloc_noflush(PMEMobjpool *pop)$/;"	f	file:
do_tx_xalloc_zerolen	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_xalloc_zerolen(PMEMobjpool *pop)$/;"	f	file:
do_tx_zalloc	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^do_tx_zalloc(PMEMobjpool *pop, uint64_t type_num)$/;"	f	file:
do_tx_zalloc	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^do_tx_zalloc(PMEMobjpool *pop, unsigned type_num)$/;"	f	file:
do_tx_zalloc_abort	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_zalloc_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_zalloc_commit	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_zalloc_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_zalloc_huge	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_zalloc_huge(PMEMobjpool *pop)$/;"	f	file:
do_tx_zalloc_zerolen	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^do_tx_zalloc_zerolen(PMEMobjpool *pop)$/;"	f	file:
do_tx_zrealloc_abort	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_zrealloc_abort(PMEMobjpool *pop)$/;"	f	file:
do_tx_zrealloc_abort_macro	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_zrealloc_abort_macro(PMEMobjpool *pop)$/;"	f	file:
do_tx_zrealloc_commit	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_zrealloc_commit(PMEMobjpool *pop)$/;"	f	file:
do_tx_zrealloc_commit_macro	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_zrealloc_commit_macro(PMEMobjpool *pop)$/;"	f	file:
do_tx_zrealloc_huge	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_zrealloc_huge(PMEMobjpool *pop)$/;"	f	file:
do_tx_zrealloc_huge_macro	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^do_tx_zrealloc_huge_macro(PMEMobjpool *pop)$/;"	f	file:
do_verify	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^do_verify(const char *path, const char *layout)$/;"	f	file:
do_wait	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^do_wait(char *pid_file, int timeout)$/;"	f	file:
do_wait_port	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^do_wait_port(char *pid_file, unsigned short port)$/;"	f	file:
do_walk	deps/pmdk/src/test/log_basic/log_basic.c	/^do_walk(PMEMlogpool *plp)$/;"	f	file:
do_walk	deps/pmdk/src/test/log_recovery/log_recovery.c	/^do_walk(PMEMlogpool *plp)$/;"	f	file:
do_walk	deps/pmdk/src/test/log_walker/log_walker.c	/^do_walk(PMEMlogpool *plp)$/;"	f	file:
do_warmup	deps/pmdk/src/benchmarks/log.cpp	/^do_warmup(struct log_bench *lb, size_t nops)$/;"	f	file:
do_warmup	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^do_warmup(struct obj_bench *ob)$/;"	f	file:
do_warmup	deps/pmdk/src/benchmarks/rpmem.cpp	/^do_warmup(struct rpmem_bench *mb)$/;"	f	file:
do_wcs_alloc	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^do_wcs_alloc(PMEMobjpool *pop, const wchar_t *s, unsigned type_num)$/;"	f
doargs	deps/lua/src/luac.c	/^static int doargs(int argc, char* argv[])$/;"	f	file:
docall	deps/lua/src/lua.c	/^static int docall (lua_State *L, int narg, int clear) {$/;"	f	file:
dofile	deps/lua/src/lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	file:
doing	src/redis-check-rdb.c	/^    int doing;                      \/* The state while reading the RDB. *\/$/;"	m	struct:__anon151	file:
dojump	deps/lua/src/lvm.c	358;"	d	file:
dolibrary	deps/lua/src/lua.c	/^static int dolibrary (lua_State *L, const char *name) {$/;"	f	file:
domain	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct fid_domain *domain; \/* fabric protection domain *\/$/;"	m	struct:rpmem_fip	typeref:struct:rpmem_fip::fid_domain	file:
domain	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct fid_domain *domain;	\/* fabric protection domain *\/$/;"	m	struct:rpmemd_fip	typeref:struct:rpmemd_fip::fid_domain	file:
done	deps/pmdk/src/examples/libpmemobj/pi.c	/^	POBJ_LIST_ENTRY(struct pi_task) done;$/;"	m	struct:pi_task	file:
done	deps/pmdk/src/examples/libpmemobj/pi.c	/^	POBJ_LIST_HEAD(done, struct pi_task) done;$/;"	m	struct:pi	file:
dooptions	deps/lua/src/loadlib.c	/^static void dooptions (lua_State *L, int n) {$/;"	f	file:
dostring	deps/lua/src/lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	file:
dotty	deps/lua/src/lua.c	/^static void dotty (lua_State *L) {$/;"	f	file:
double_eq_rel	deps/jemalloc/test/unit/math.c	/^double_eq_rel(double a, double b, double max_rel_err, double max_abs_err)$/;"	f	file:
down_after_period	src/sentinel.c	/^    mstime_t down_after_period; \/* Consider it down after that period. *\/$/;"	m	struct:sentinelRedisInstance	file:
drain	deps/pmdk/src/libpmemobj/pmemops.h	/^	drain_fn drain;		\/* drain function *\/$/;"	m	struct:pmem_ops
drain	deps/pmdk/src/librpmem/rpmem_fip.c	/^	rpmem_fip_drain_fn drain;$/;"	m	struct:rpmem_fip_ops	file:
drain_empty	deps/pmdk/src/test/obj_memops/obj_memops.c	/^drain_empty(void *ctx)$/;"	f	file:
drain_empty	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^drain_empty(void)$/;"	f	file:
drain_fn	deps/pmdk/src/libpmemobj/pmemops.h	/^typedef void (*drain_fn)(void *base);$/;"	t
drain_local	deps/pmdk/src/libpmemobj/obj.h	/^	drain_local_fn drain_local;	\/* drain function *\/$/;"	m	struct:pmemobjpool
drain_local_fn	deps/pmdk/src/libpmemobj/obj.h	/^typedef void (*drain_local_fn)(void);$/;"	t
drain_thread_arg	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^struct drain_thread_arg {$/;"	s	file:
drain_thread_func	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^drain_thread_func(void *arg)$/;"	f	file:
draw_alien	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^draw_alien(const struct alien *a)$/;"	f	file:
draw_border	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^draw_border(void)$/;"	f	file:
draw_border	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^draw_border(void)$/;"	f	file:
draw_bullet	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^draw_bullet(const struct bullet *b)$/;"	f	file:
draw_player	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^draw_player(const struct player *p)$/;"	f	file:
draw_score	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^draw_score(void)$/;"	f	file:
draw_score	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^draw_score(const struct state *s)$/;"	f	file:
draw_star	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^draw_star(const struct star *s)$/;"	f	file:
draw_title	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^draw_title(void)$/;"	f	file:
drd	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    drd = t.DISABLE$/;"	v	class:ObjDefragAdvanced
drd	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    drd = vg.AUTO$/;"	v	class:TEST2
drd	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    drd = t.DISABLE$/;"	v	class:BASE
ds_context	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^struct ds_context$/;"	s	file:
dsize	deps/pmdk/src/benchmarks/benchmark.hpp	/^	size_t dsize;		 \/* data size *\/$/;"	m	struct:benchmark_args
dss	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	const char		*dss;$/;"	m	struct:ctl_arena_stats_s
dss_base	deps/jemalloc/src/chunk_dss.c	/^static void		*dss_base;$/;"	v	file:
dss_exhausted	deps/jemalloc/src/chunk_dss.c	/^static unsigned		dss_exhausted;$/;"	v	file:
dss_max	deps/jemalloc/src/chunk_dss.c	/^static void		*dss_max;$/;"	v	file:
dss_prec	deps/jemalloc/include/jemalloc/internal/arena.h	/^	dss_prec_t		dss_prec;$/;"	m	struct:arena_s
dss_prec_default	deps/jemalloc/src/chunk_dss.c	/^static unsigned		dss_prec_default = (unsigned)DSS_PREC_DEFAULT;$/;"	v	file:
dss_prec_disabled	deps/jemalloc/include/jemalloc/internal/chunk_dss.h	/^	dss_prec_disabled  = 0,$/;"	e	enum:__anon7
dss_prec_limit	deps/jemalloc/include/jemalloc/internal/chunk_dss.h	/^	dss_prec_limit     = 3$/;"	e	enum:__anon7
dss_prec_names	deps/jemalloc/include/jemalloc/internal/private_namespace.h	205;"	d
dss_prec_names	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	205;"	d
dss_prec_names	deps/jemalloc/src/chunk_dss.c	/^const char	*dss_prec_names[] = {$/;"	v
dss_prec_primary	deps/jemalloc/include/jemalloc/internal/chunk_dss.h	/^	dss_prec_primary   = 1,$/;"	e	enum:__anon7
dss_prec_secondary	deps/jemalloc/include/jemalloc/internal/chunk_dss.h	/^	dss_prec_secondary = 2,$/;"	e	enum:__anon7
dss_prec_t	deps/jemalloc/include/jemalloc/internal/chunk_dss.h	/^} dss_prec_t;$/;"	t	typeref:enum:__anon7
dst	deps/pmdk/src/tools/daxio/daxio.c	/^	struct daxio_device dst;$/;"	m	struct:daxio_context	typeref:struct:daxio_context::daxio_device	file:
dummies	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	POBJ_LIST_HEAD(dummy_list, struct dummy_node) dummies;$/;"	m	struct:dummy_root	file:
dummy	deps/lua/src/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for `local' udata *\/$/;"	m	union:Udata
dummy	deps/lua/src/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for strings *\/$/;"	m	union:TString
dummy	deps/lua/src/lua_struct.c	/^  int dummy;$/;"	m	union:__anon35	file:
dummy	deps/pmdk/src/test/win_lists/win_lists.c	/^	int dummy;$/;"	m	struct:TEST_LIST_NODE	file:
dummy	deps/pmdk/src/test/win_lists/win_lists.c	/^	int dummy;$/;"	m	struct:TEST_SORTEDQ_NODE	file:
dummy_node	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^struct dummy_node {$/;"	s	file:
dummy_node	deps/pmdk/src/test/obj_tx_invalid/obj_tx_invalid.c	/^struct dummy_node {$/;"	s	file:
dummy_node_c	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^struct dummy_node_c {$/;"	s	file:
dummy_node_constructor	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^dummy_node_constructor(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
dummy_root	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^struct dummy_root {$/;"	s	file:
dummy_root	deps/pmdk/src/test/obj_tx_invalid/obj_tx_invalid.c	/^struct dummy_root {$/;"	s	file:
dummynode	deps/lua/src/ltable.c	73;"	d	file:
dummynode_	deps/lua/src/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dumpCommand	src/cluster.c	/^void dumpCommand(client *c) {$/;"	f
dumpX86Calls	src/debug.c	/^void dumpX86Calls(void *addr, size_t len) {$/;"	f
dump_PMEMoid	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^dump_PMEMoid(char *prefix, PMEMoid *oid)$/;"	f	file:
dump_PMEMoid	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^dump_PMEMoid(char *prefix, PMEMoid *oid)$/;"	f	file:
dump_art_leaf_callback	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^dump_art_leaf_callback(void *data,$/;"	f	file:
dump_art_node_callback	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^dump_art_node_callback(void *data,$/;"	f	file:
dump_art_tree_root	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^dump_art_tree_root(char *prefix, uint64_t off, void *p)$/;"	f	file:
dump_cnts	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_cnt_t		dump_cnts;$/;"	m	struct:prof_tctx_s
dump_compare	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^dump_compare(const char *path1, const char *path2)$/;"	f	file:
dump_info_log	deps/pmdk/src/test/pmempool_sync_remote/common.sh	/^function dump_info_log() {$/;"	f
dump_info_log	deps/pmdk/src/test/pmempool_transform_remote/common.sh	/^function dump_info_log() {$/;"	f
dump_info_log_remote	deps/pmdk/src/test/pmempool_sync_remote/common.sh	/^function dump_info_log_remote() {$/;"	f
dump_info_log_remote	deps/pmdk/src/test/pmempool_transform_remote/common.sh	/^function dump_info_log_remote() {$/;"	f
dump_last_n_lines	deps/pmdk/src/test/unittest/unittest.sh	/^function dump_last_n_lines() {$/;"	f
dump_link	deps/jemalloc/include/jemalloc/internal/prof.h	/^	rb_node(prof_gctx_t)	dump_link;$/;"	m	struct:prof_gctx_s
dump_list	deps/pmdk/src/test/win_lists/win_lists.c	/^dump_list(struct TestList *head)$/;"	f	file:
dump_n_lines	deps/pmdk/src/test/unittest/context.py	/^    def dump_n_lines(self, file, n=None):$/;"	m	class:ContextBase
dump_pool_info	deps/pmdk/src/test/unittest/unittest.sh	/^function dump_pool_info() {$/;"	f
dump_sl	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^dump_sl(struct slisthead *head, const char *str)$/;"	f	file:
dump_tq	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^dump_tq(struct tqueuehead *head, const char *str)$/;"	f	file:
dumping	deps/jemalloc/include/jemalloc/internal/prof.h	/^	bool			dumping;$/;"	m	struct:prof_tdata_s
dumping	deps/lua/src/luac.c	/^static int dumping=1;			\/* dump bytecodes? *\/$/;"	v	file:
dup	src/adlist.h	/^    void *(*dup)(void *ptr);$/;"	m	struct:list
dupClientReplyValue	src/networking.c	/^void *dupClientReplyValue(void *o) {$/;"	f
dupLastObjectIfNeeded	src/networking.c	/^robj *dupLastObjectIfNeeded(list *reply) {$/;"	f
dupSentinelAddr	src/sentinel.c	/^sentinelAddr *dupSentinelAddr(sentinelAddr *src) {$/;"	f
dupStringObject	src/object.c	/^robj *dupStringObject(robj *o) {$/;"	f
dupStringObjectPM	src/object.c	/^robj *dupStringObjectPM(robj *o) {$/;"	f
dup_bitmap	deps/pmdk/src/libpmempool/check_util.h	/^	uint8_t *dup_bitmap;$/;"	m	struct:__anon87
duration	src/slowlog.h	/^    long long duration; \/* Time spent by the query, in nanoseconds. *\/$/;"	m	struct:slowlogEntry
dx	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	int dx;$/;"	m	struct:state	file:
dy	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	int dy;$/;"	m	struct:state	file:
dyn	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^	int dyn[];$/;"	m	struct:struct1	file:
dynamic	deps/lua/src/strbuf.h	/^    int dynamic;$/;"	m	struct:__anon29
dynamic_poolset_clear	deps/pmdk/src/benchmarks/poolset_util.cpp	/^dynamic_poolset_clear(const char *dir)$/;"	f	file:
dynamic_poolset_create	deps/pmdk/src/benchmarks/poolset_util.cpp	/^dynamic_poolset_create(const char *path, size_t size)$/;"	f
e	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^	int e;$/;"	m	struct:fields	file:
east	deps/geohash-int/geohash.h	/^    GeoHashBits east;$/;"	m	struct:__anon146
echoCommand	src/server.c	/^void echoCommand(client *c) {$/;"	f
echo_mode	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	bool echo_mode;			\/* print every command from input *\/$/;"	m	struct:pocli_opts	file:
edges	deps/pmdk/src/test/obj_defrag_advanced/pgraph.h	/^	PMEMoid edges[];$/;"	m	struct:pnode_t
edges	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	unsigned *edges; \/* ids of nodes the edges are pointing to *\/$/;"	m	struct:vnode_t
edges_num	deps/pmdk/src/test/obj_defrag_advanced/pgraph.h	/^	unsigned edges_num;$/;"	m	struct:pnode_t
edges_num	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	unsigned edges_num; \/* # of edges starting from this node *\/$/;"	m	struct:vnode_t
el	src/redis-benchmark.c	/^    aeEventLoop *el;$/;"	m	struct:config	file:
el	src/server.h	/^    aeEventLoop *el;$/;"	m	struct:redisServer
el_size	deps/pmdk/src/benchmarks/log.cpp	/^	size_t el_size;  \/* size of single append *\/$/;"	m	struct:prog_args	file:
ele	src/t_zset.c	/^    robj *ele;$/;"	m	struct:__anon158	file:
element	deps/hiredis/hiredis.h	/^    struct redisReply **element; \/* elements vector for REDIS_REPLY_ARRAY *\/$/;"	m	struct:redisReply	typeref:struct:redisReply::redisReply
element	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^struct element {$/;"	s	file:
elements	deps/hiredis/hiredis.h	/^    int elements; \/* number of elements in multibulk container *\/$/;"	m	struct:redisReadTask
elements	deps/hiredis/hiredis.h	/^    size_t elements; \/* number of elements, for REDIS_REPLY_ARRAY *\/$/;"	m	struct:redisReply
elen	src/t_zset.c	/^    unsigned int elen;$/;"	m	struct:__anon158	file:
ell	src/t_zset.c	/^    long long ell;$/;"	m	struct:__anon158	file:
elm	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	struct element elm;	  \/* pointer to current element *\/$/;"	m	struct:obj_worker	typeref:struct:obj_worker::element	file:
elm_constructor	deps/pmdk/src/examples/libpmemobj/array/array.c	/^elm_constructor(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
emptyDb	src/db.c	/^long long emptyDb(void(callback)(void*)) {$/;"	f
emptybuffer	deps/lua/src/lauxlib.c	/^static int emptybuffer (luaL_Buffer *B) {$/;"	f	file:
emptybulk	src/server.h	/^    robj *crlf, *ok, *err, *emptybulk, *czero, *cone, *cnegone, *pong, *space,$/;"	m	struct:sharedObjectsStruct
emptymultibulk	src/server.h	/^    *emptymultibulk, *wrongtypeerr, *nokeyerr, *syntaxerr, *sameobjecterr,$/;"	m	struct:sharedObjectsStruct
emptyscan	src/server.h	/^    *lpush, *emptyscan, *minstring, *maxstring,$/;"	m	struct:sharedObjectsStruct
en	deps/pmdk/src/examples/librpmem/hello.c	/^enum lang_t {en, es};$/;"	e	enum:lang_t	file:
en_achunk	deps/jemalloc/include/jemalloc/internal/extent.h	/^	bool			en_achunk;$/;"	m	struct:extent_node_s
en_addr	deps/jemalloc/include/jemalloc/internal/extent.h	/^	void			*en_addr;$/;"	m	struct:extent_node_s
en_arena	deps/jemalloc/include/jemalloc/internal/extent.h	/^	arena_t			*en_arena;$/;"	m	struct:extent_node_s
en_committed	deps/jemalloc/include/jemalloc/internal/extent.h	/^	bool			en_committed;$/;"	m	struct:extent_node_s
en_prof_tctx	deps/jemalloc/include/jemalloc/internal/extent.h	/^	prof_tctx_t		*en_prof_tctx;$/;"	m	struct:extent_node_s
en_size	deps/jemalloc/include/jemalloc/internal/extent.h	/^	size_t			en_size;$/;"	m	struct:extent_node_s
en_sn	deps/jemalloc/include/jemalloc/internal/extent.h	/^	size_t			en_sn;$/;"	m	struct:extent_node_s
en_zeroed	deps/jemalloc/include/jemalloc/internal/extent.h	/^	bool			en_zeroed;$/;"	m	struct:extent_node_s
enable	deps/pmdk/src/libpmempool/feature.c	/^	int (*enable)(const char *);$/;"	m	struct:feature_funcs	file:
enable	deps/pmdk/src/tools/pmempool/feature.c	/^	enable,$/;"	e	enum:feature_op	file:
enableRawMode	deps/linenoise/linenoise.c	/^static int enableRawMode(int fd) {$/;"	f	file:
enableWatchdog	src/debug.c	/^void enableWatchdog(int period) {$/;"	f
enable_autogen	deps/jemalloc/Makefile	/^enable_autogen := 0$/;"	m
enable_badblocks_checking	deps/pmdk/src/libpmempool/feature.c	/^enable_badblocks_checking(const char *path)$/;"	f	file:
enable_checksum_2k	deps/pmdk/src/libpmempool/feature.c	/^enable_checksum_2k(const char *path)$/;"	f	file:
enable_code_coverage	deps/jemalloc/Makefile	/^enable_code_coverage := 0$/;"	m
enable_comments	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	bool enable_comments;		\/* enable comments on input *\/$/;"	m	struct:pocli_opts	file:
enable_empty_cmds	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	bool enable_empty_cmds;		\/* enable empty lines *\/$/;"	m	struct:pocli_opts	file:
enable_help	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	bool enable_help;		\/* enable printing help *\/$/;"	m	struct:pocli_opts	file:
enable_ldb_on_eval	src/redis-cli.c	/^    int enable_ldb_on_eval; \/* Handle manual SCRIPT DEBUG + EVAL commands. *\/$/;"	m	struct:config	file:
enable_log_append	deps/pmdk/src/test/unittest/unittest.sh	/^function enable_log_append() {$/;"	f
enable_long_names	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	bool enable_long_names;		\/* enable long names *\/$/;"	m	struct:pocli_opts	file:
enable_prof	deps/jemalloc/Makefile	/^enable_prof := 0$/;"	m
enable_shutdown_state	deps/pmdk/src/libpmempool/feature.c	/^enable_shutdown_state(const char *path)$/;"	f	file:
enable_singlehdr	deps/pmdk/src/libpmempool/feature.c	/^enable_singlehdr(const char *path)$/;"	f	file:
enable_valgrind	deps/jemalloc/Makefile	/^enable_valgrind := 1$/;"	m
enable_zone_allocator	deps/jemalloc/Makefile	/^enable_zone_allocator := $/;"	m
enabled	deps/pmdk/src/libpmemobj/stats.c	/^CTL_READ_HANDLER(enabled)(void *ctx,$/;"	f	file:
enabled	deps/pmdk/src/libpmemobj/stats.c	/^CTL_WRITE_HANDLER(enabled)(void *ctx,$/;"	f	file:
enabled	deps/pmdk/src/libpmemobj/stats.c	/^static const struct ctl_argument CTL_ARG(enabled) = {$/;"	v	typeref:struct:CTL_ARG	file:
enabled	deps/pmdk/src/libpmemobj/stats.h	/^	enum pobj_stats_enabled enabled;$/;"	m	struct:stats	typeref:enum:stats::pobj_stats_enabled
enabled	deps/pmdk/src/test/unittest/basetest.py	/^    enabled = True$/;"	v	class:BaseTest
enabled_tool	deps/pmdk/src/test/unittest/valgrind.py	/^def enabled_tool(test):$/;"	f
encode_buf	deps/lua/src/lua_cjson.c	/^    strbuf_t encode_buf;$/;"	m	struct:__anon43	file:
encode_invalid_numbers	deps/lua/src/lua_cjson.c	/^    int encode_invalid_numbers;     \/* 2 => Encode as "null" *\/$/;"	m	struct:__anon43	file:
encode_keep_buffer	deps/lua/src/lua_cjson.c	/^    int encode_keep_buffer;$/;"	m	struct:__anon43	file:
encode_max_depth	deps/lua/src/lua_cjson.c	/^    int encode_max_depth;$/;"	m	struct:__anon43	file:
encode_number_precision	deps/lua/src/lua_cjson.c	/^    int encode_number_precision;$/;"	m	struct:__anon43	file:
encode_sparse_convert	deps/lua/src/lua_cjson.c	/^    int encode_sparse_convert;$/;"	m	struct:__anon43	file:
encode_sparse_ratio	deps/lua/src/lua_cjson.c	/^    int encode_sparse_ratio;$/;"	m	struct:__anon43	file:
encode_sparse_safe	deps/lua/src/lua_cjson.c	/^    int encode_sparse_safe;$/;"	m	struct:__anon43	file:
encoding	src/hyperloglog.c	/^    uint8_t encoding;   \/* HLL_DENSE or HLL_SPARSE. *\/$/;"	m	struct:hllhdr	file:
encoding	src/intset.h	/^    uint32_t encoding;$/;"	m	struct:intset
encoding	src/quicklist.h	/^    unsigned int encoding : 2;   \/* RAW==1 or LZF==2 *\/$/;"	m	struct:quicklistNode
encoding	src/server.h	/^    int encoding;$/;"	m	struct:__anon163
encoding	src/server.h	/^    int encoding;$/;"	m	struct:__anon164
encoding	src/server.h	/^    unsigned char encoding;$/;"	m	struct:__anon161
encoding	src/server.h	/^    unsigned encoding:4;$/;"	m	struct:redisObject
encoding	src/t_zset.c	/^    int encoding;$/;"	m	struct:__anon152	file:
encoding	src/ziplist.c	/^    unsigned char encoding;$/;"	m	struct:zlentry	file:
end	deps/pmdk/src/benchmarks/benchmark.hpp	/^	benchmark_time_t end;	  \/* end time *\/$/;"	m	struct:worker_info
end	deps/pmdk/src/benchmarks/benchmark.hpp	/^	benchmark_time_t end;	\/* operation's end time *\/$/;"	m	struct:operation_info
end	deps/pmdk/src/benchmarks/benchmark.hpp	/^	benchmark_time_t end;$/;"	m	struct:thread_results
end	deps/pmdk/src/libpmemobj/tx.c	/^	void *end;$/;"	m	struct:tx_range_data	file:
end	src/setproctitle.c	/^	char *base, *end;$/;"	m	struct:__anon183	file:
end_addr	deps/pmdk/src/common/mmap.h	/^	uintptr_t end_addr;$/;"	m	struct:map_tracker
end_capture	deps/lua/src/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:
end_ci	deps/lua/src/lstate.h	/^  CallInfo *end_ci;  \/* points after end of ci array*\/$/;"	m	struct:lua_State
end_offset	deps/pmdk/src/libpmemlog/log.h	/^	uint64_t end_offset;	\/* maximum offset of the usable log space *\/$/;"	m	struct:pmemlog
end_op	deps/pmdk/src/benchmarks/benchmark.hpp	/^	benchmark_time_t end_op[];$/;"	m	struct:thread_results
end_tests	tests/instances.tcl	/^proc end_tests {} {$/;"	p
endian	deps/lua/src/lua_struct.c	/^  char endian;$/;"	m	union:__anon35	file:
endian	deps/lua/src/lua_struct.c	/^  int endian;$/;"	m	struct:Header	file:
endianconvTest	src/endianconv.c	/^int endianconvTest(int argc, char *argv[]) {$/;"	f
endpc	deps/lua/src/lobject.h	/^  int endpc;    \/* first point where variable is dead *\/$/;"	m	struct:LocVar
engines	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^engines = collections.OrderedDict([$/;"	v
enq	deps/jemalloc/include/jemalloc/internal/prof.h	/^	bool			enq;$/;"	m	struct:prof_tdata_s
enq_gdump	deps/jemalloc/include/jemalloc/internal/prof.h	/^	bool			enq_gdump;$/;"	m	struct:prof_tdata_s
enq_idump	deps/jemalloc/include/jemalloc/internal/prof.h	/^	bool			enq_idump;$/;"	m	struct:prof_tdata_s
ensure_header_type	deps/pmdk/src/libpmemobj/memblock.h	/^	void (*ensure_header_type)(const struct memory_block *m,$/;"	m	struct:memory_block_ops
ensure_master_down	tests/sentinel/tests/07-down-conditions.tcl	/^proc ensure_master_down {} {$/;"	p
ensure_master_up	tests/sentinel/tests/07-down-conditions.tcl	/^proc ensure_master_up {} {$/;"	p
enterblock	deps/lua/src/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isbreakable) {$/;"	f	file:
enterlevel	deps/lua/src/lparser.c	/^static void enterlevel (LexState *ls) {$/;"	f	file:
entries	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^	TOID(struct entry) entries;$/;"	m	struct:hashmap_rp	file:
entries	deps/pmdk/src/examples/libpmemobj/lists.c	/^	POBJ_LIST_ENTRY(struct bar_el) entries;$/;"	m	struct:bar_el	file:
entries	deps/pmdk/src/examples/libpmemobj/lists.c	/^	POBJ_LIST_ENTRY(struct foo_el) entries;$/;"	m	struct:foo_el	file:
entries	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	PDLL_HEAD(struct objfs_dir_entry) entries; \/* directory entries *\/$/;"	m	struct:objfs_dir	file:
entries	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	TOID(struct entry) entries[];$/;"	m	struct:queue	file:
entries	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^	struct tree_map_entry entries[2];$/;"	m	struct:tree_map_node	typeref:struct:tree_map_node::tree_map_entry	file:
entries	deps/pmdk/src/libpmemblk/btt.c	/^			uint64_t entries[2];	\/* offsets for flog pair *\/$/;"	m	struct:btt::arena::flog_runtime	file:
entries_cache	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^entries_cache(PMEMobjpool *pop, struct hashmap_rp *dest,$/;"	f	file:
entry	deps/hiredis/dict.h	/^    dictEntry *entry, *nextEntry;$/;"	m	struct:dictIterator
entry	deps/pmdk/src/common/ctl.h	/^	PMDK_SLIST_ENTRY(ctl_index) entry;$/;"	m	struct:ctl_index
entry	deps/pmdk/src/common/fs_posix.c	/^	struct fs_entry entry;$/;"	m	struct:fs	typeref:struct:fs::fs_entry	file:
entry	deps/pmdk/src/common/fs_windows.c	/^	struct fs_entry entry;$/;"	m	struct:fs	typeref:struct:fs::fs_entry	file:
entry	deps/pmdk/src/common/mmap.h	/^	PMDK_SORTEDQ_ENTRY(map_tracker) entry;$/;"	m	struct:map_tracker
entry	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^struct entry {$/;"	s	file:
entry	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^struct entry {$/;"	s	file:
entry	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^struct entry {$/;"	s	file:
entry	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^	struct skiplist_map_entry entry;$/;"	m	struct:skiplist_map_node	typeref:struct:skiplist_map_node::skiplist_map_entry	file:
entry	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^struct entry { \/* queue entry that contains arbitrary data *\/$/;"	s	file:
entry	deps/pmdk/src/test/pmem_has_auto_flush/mocks_posix.c	/^	struct fs_entry entry;$/;"	m	struct:fs	typeref:struct:fs::fs_entry	file:
entry	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	struct list_entry *entry;$/;"	m	struct:list_pair	typeref:struct:list_pair::list_entry	file:
entry	src/dict.h	/^    dictEntry *entry, *nextEntry;$/;"	m	struct:dictIterator
entry	src/server.h	/^    quicklistEntry entry; \/* Entry in quicklist *\/$/;"	m	struct:__anon162
entry_add	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^entry_add(PMEMobjpool *pop, struct hashmap_rp *hashmap, struct add_entry *args,$/;"	f	file:
entry_args	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^struct entry_args {$/;"	s	file:
entry_is_deleted	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^entry_is_deleted(uint64_t hash)$/;"	f	file:
entry_is_empty	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^entry_is_empty(uint64_t hash)$/;"	f	file:
entry_ptr	deps/pmdk/src/libpmemobj/list.c	/^	struct list_entry *entry_ptr;$/;"	m	struct:list_args_common	typeref:struct:list_args_common::list_entry	file:
entry_ptr	deps/pmdk/src/libpmemobj/list.c	/^	struct list_entry *entry_ptr;$/;"	m	struct:list_args_reinsert	typeref:struct:list_args_reinsert::list_entry	file:
entry_ptr	deps/pmdk/src/libpmemobj/list.c	/^	struct list_entry *entry_ptr;$/;"	m	struct:list_args_remove	typeref:struct:list_args_remove::list_entry	file:
entry_update	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^entry_update(PMEMobjpool *pop, struct hashmap_rp *hashmap,$/;"	f	file:
enum_handles	deps/pmdk/src/test/unittest/ut.c	/^enum_handles(int op)$/;"	f	file:
enum_to_str_fn	deps/pmdk/src/tools/pmempool/common.c	/^typedef const char *(*enum_to_str_fn)(int);$/;"	t	file:
env	deps/lua/src/lobject.h	/^    struct Table *env;$/;"	m	struct:Udata::__anon25	typeref:struct:Udata::__anon25::Table
env	deps/lua/src/lstate.h	/^  TValue env;  \/* temporary place for environments *\/$/;"	m	struct:lua_State
env	deps/pmdk/src/libpmemobj/tx.c	/^	jmp_buf env;$/;"	m	struct:tx_data	file:
env_get_bool	deps/pmdk/src/librpmem/rpmem.c	/^env_get_bool(const char *name, int *valp)$/;"	f	file:
envconfig	deps/pmdk/src/test/unittest/context.py	/^    envconfig = envconfig.config$/;"	v
envconfig	deps/pmdk/src/test/unittest/context.py	/^    envconfig = {'GLOBAL_LIB_PATH': ''}$/;"	v
envconfig	deps/pmdk/src/test/unittest/tools.py	/^    envconfig = envconfig.config$/;"	v
envconfig	deps/pmdk/src/test/unittest/tools.py	/^    envconfig = {'GLOBAL_LIB_PATH': ''}$/;"	v
ep	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct fid_ep *ep;	\/* endpoint *\/$/;"	m	struct:rpmem_fip_lane	typeref:struct:rpmem_fip_lane::fid_ep	file:
ep	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct fid_ep *ep;$/;"	m	struct:rpmem_fip_lane	typeref:struct:rpmem_fip_lane::fid_ep	file:
epfd	src/ae_epoll.c	/^    int epfd;$/;"	m	struct:aeApiState	file:
epoch	deps/jemalloc/include/jemalloc/internal/arena.h	/^	nstime_t		epoch;$/;"	m	struct:arena_decay_s
epoch_ctl	deps/jemalloc/src/ctl.c	/^epoch_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
epos	src/redis-check-aof.c	/^static off_t epos;$/;"	v	file:
eptr	src/t_zset.c	/^                unsigned char *eptr, *sptr;$/;"	m	struct:__anon152::__anon153::_iterzset::__anon156	file:
eq	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct fid_eq *eq; \/* event queue *\/$/;"	m	struct:rpmem_fip	typeref:struct:rpmem_fip::fid_eq	file:
eq	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct fid_eq *eq;		\/* event queue *\/$/;"	m	struct:rpmemd_fip	typeref:struct:rpmemd_fip::fid_eq	file:
eq_event	deps/lua/doc/manual.html	/^     function eq_event (op1, op2)$/;"	f
equalStringObjects	src/object.c	/^int equalStringObjects(robj *a, robj *b) {$/;"	f
equal_char	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^	uint64_t equal_char;$/;"	m	struct:rpmemd_special_chars_pos	file:
equalobj	deps/lua/src/lvm.h	21;"	d
err	deps/hiredis/async.h	/^    int err;$/;"	m	struct:redisAsyncContext
err	deps/hiredis/hiredis.h	/^    int err; \/* Error flags, 0 when there is no error *\/$/;"	m	struct:redisContext
err	deps/hiredis/hiredis.h	/^    int err; \/* Error flags, 0 when there is no error *\/$/;"	m	struct:redisReader
err	deps/lua/src/lua_cmsgpack.c	/^    int err;$/;"	m	struct:mp_cur	file:
err	deps/pmdk/src/librpmem/rpmem_util.c	/^	int err;$/;"	m	struct:rpmem_err_str_errno	file:
err	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	64;"	d	file:
err	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	FILE *err;$/;"	m	struct:pocli_ctx	file:
err	deps/pmdk/src/windows/include/err.h	/^err(int eval, const char *fmt, ...)$/;"	f
err	deps/pmdk/utils/check_whitespace	/^sub err {$/;"	s
err	deps/pmdk/utils/cstyle	/^sub err($) {$/;"	s
err	src/server.h	/^    robj *crlf, *ok, *err, *emptybulk, *czero, *cone, *cnegone, *pong, *space,$/;"	m	struct:sharedObjectsStruct
err_prefix	deps/pmdk/utils/cstyle	/^sub err_prefix($$) {$/;"	s
err_prev	deps/pmdk/utils/cstyle	/^sub err_prev($) {$/;"	s
errfile	deps/lua/src/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:
errfunc	deps/lua/src/lstate.h	/^  ptrdiff_t errfunc;  \/* current error handling function (stack index) *\/$/;"	m	struct:lua_State
error	deps/lua/src/lundump.c	/^static void error(LoadState* S, const char* why)$/;"	f	file:
error	deps/lua/src/lundump.c	32;"	d	file:
error	deps/pmdk/src/libpmempool/check_util.c	/^	struct check_status *error;$/;"	m	struct:check_data	typeref:struct:check_data::check_status	file:
error	deps/pmdk/src/libpmempool/rm.c	/^	int error;$/;"	m	struct:cb_args	file:
error	deps/pmdk/src/librpmem/rpmem.c	/^	volatile int error;$/;"	m	struct:rpmem_pool	file:
error	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def error(self, text):$/;"	m	class:DefaultFileLogger
error	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def error(self, text):$/;"	m	class:DefaultPrintLogger
error	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def error(self, text):$/;"	m	class:LoggingBase
error	deps/pmdk/utils/pkg-common.sh	/^function error() {$/;"	f
error	src/redis-check-aof.c	/^static char error[1024];$/;"	v	file:
error	src/redis-check-rdb.c	/^    char error[1024];$/;"	m	struct:__anon151	file:
error	src/setproctitle.c	/^	int error;$/;"	m	struct:__anon183	file:
errorJmp	deps/lua/src/lstate.h	/^  struct lua_longjmp *errorJmp;  \/* current error recover point *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_longjmp
error_expected	deps/lua/src/lparser.c	/^static void error_expected (LexState *ls, int token) {$/;"	f	file:
error_must_occur	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	int error_must_occur;$/;"	m	struct:drain_thread_arg	file:
error_must_occur	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	int error_must_occur;$/;"	m	struct:flush_thread_arg	file:
error_must_occur	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	int error_must_occur;$/;"	m	struct:pool_entry	file:
error_set	src/redis-check-rdb.c	/^    int error_set;                  \/* True if error is populated. *\/$/;"	m	struct:__anon151	file:
error_str	deps/pmdk/src/librpmem/rpmem_ssh.c	/^static char error_str[ERR_BUFF_LEN + 1];$/;"	v	file:
errorfromcode	deps/lua/src/loadlib.c	/^static const char *errorfromcode (NSObjectFileImageReturnCode ret) {$/;"	f	file:
errorlimit	deps/lua/src/lparser.c	/^static void errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:
errormsg	deps/pmdk/src/common/out.c	/^struct errormsg$/;"	s	file:
errors	deps/pmdk/src/tools/pmempool/info.h	/^	uint32_t errors;	\/* number of blocks marked by error flag *\/$/;"	m	struct:pmem_blk_stats
errstr	deps/hiredis/async.h	/^    char *errstr;$/;"	m	struct:redisAsyncContext
errstr	deps/hiredis/hiredis.h	/^    char errstr[128]; \/* String representation of error when applicable *\/$/;"	m	struct:redisContext
errstr	deps/hiredis/hiredis.h	/^    char errstr[128]; \/* String representation of error when applicable *\/$/;"	m	struct:redisReader
es	deps/pmdk/src/examples/librpmem/hello.c	/^enum lang_t {en, es};$/;"	e	enum:lang_t	file:
escape2char	deps/lua/src/lua_cjson.c	/^    char escape2char[256];  \/* Decoding *\/$/;"	m	struct:__anon43	file:
estimate	deps/lua/src/lstate.h	/^  lu_mem estimate;  \/* an estimate of number of bytes actually in use *\/$/;"	m	struct:global_State
estimateObjectIdleTime	src/object.c	/^unsigned long long estimateObjectIdleTime(robj *o) {$/;"	f
estr	src/t_zset.c	/^    unsigned char *estr;$/;"	m	struct:__anon158	file:
ev	deps/hiredis/async.h	/^    } ev;$/;"	m	struct:redisAsyncContext	typeref:struct:redisAsyncContext::__anon147
eval	src/redis-cli.c	/^    char *eval;$/;"	m	struct:config	file:
evalCommand	src/scripting.c	/^void evalCommand(client *c) {$/;"	f
evalGenericCommand	src/scripting.c	/^void evalGenericCommand(client *c, int evalsha) {$/;"	f
evalGenericCommandWithDebugging	src/scripting.c	/^void evalGenericCommandWithDebugging(client *c, int evalsha) {$/;"	f
evalGetKeys	src/db.c	/^int *evalGetKeys(struct redisCommand *cmd, robj **argv, int argc, int *numkeys) {$/;"	f
evalMode	src/redis-cli.c	/^static int evalMode(int argc, char **argv) {$/;"	f	file:
evalShaCommand	src/scripting.c	/^void evalShaCommand(client *c) {$/;"	f
eval_ldb	src/redis-cli.c	/^    int eval_ldb;$/;"	m	struct:config	file:
eval_ldb_end	src/redis-cli.c	/^    int eval_ldb_end;   \/* Lua debugging session ended. *\/$/;"	m	struct:config	file:
eval_ldb_sync	src/redis-cli.c	/^    int eval_ldb_sync;  \/* Ask for synchronous mode of the Lua debugger. *\/$/;"	m	struct:config	file:
event	deps/lua/src/lua.h	/^  int event;$/;"	m	struct:lua_Debug
event	deps/pmdk/src/librpmem/rpmem_fip.c	/^	uint64_t event;$/;"	m	struct:rpmem_fip_lane	file:
events	deps/hiredis/adapters/libuv.h	/^  int                events;$/;"	m	struct:redisLibuvEvents
events	src/ae.h	/^    aeFileEvent *events; \/* Registered events *\/$/;"	m	struct:aeEventLoop
events	src/ae_epoll.c	/^    struct epoll_event *events;$/;"	m	struct:aeApiState	typeref:struct:aeApiState::epoll_event	file:
events	src/ae_kqueue.c	/^    struct kevent *events;$/;"	m	struct:aeApiState	typeref:struct:aeApiState::kevent	file:
evictPolicyToString	src/config.c	/^const char *evictPolicyToString(void) {$/;"	f
evictionPoolAlloc	src/server.c	/^struct evictionPoolEntry *evictionPoolAlloc(void) {$/;"	f
evictionPoolEntry	src/server.h	/^struct evictionPoolEntry {$/;"	s
evictionPoolPopulate	src/server.c	/^void evictionPoolPopulate(dict *sampledict, dict *keydict, struct evictionPoolEntry *pool) {$/;"	f
eviction_pool	src/server.h	/^    struct evictionPoolEntry *eviction_pool;    \/* Eviction pool of keys *\/$/;"	m	struct:redisDb	typeref:struct:redisDb::evictionPoolEntry
evport_debug	src/ae_evport.c	/^static int evport_debug = 0;$/;"	v	file:
ex_ctx	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^static struct examine_ctx *ex_ctx = NULL;$/;"	v	typeref:struct:examine_ctx	file:
ex_funcs	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^static struct examine ex_funcs[] = {$/;"	v	typeref:struct:examine	file:
examine	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^struct examine {$/;"	s	file:
examine_PMEMoid	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^examine_PMEMoid(char *appname, struct examine_ctx *ctx, off_t off)$/;"	f	file:
examine_art_leaf	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^examine_art_leaf(char *appname, struct examine_ctx *ctx, off_t off)$/;"	f	file:
examine_art_node	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^examine_art_node(art_node *an)$/;"	f	file:
examine_art_node16	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^examine_art_node16(char *appname, struct examine_ctx *ctx, off_t off)$/;"	f	file:
examine_art_node256	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^examine_art_node256(char *appname, struct examine_ctx *ctx, off_t off)$/;"	f	file:
examine_art_node4	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^examine_art_node4(char *appname, struct examine_ctx *ctx, off_t off)$/;"	f	file:
examine_art_node48	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^examine_art_node48(char *appname, struct examine_ctx *ctx, off_t off)$/;"	f	file:
examine_art_node_u	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^examine_art_node_u(char *appname, struct examine_ctx *ctx, off_t off)$/;"	f	file:
examine_art_tree_root	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^examine_art_tree_root(char *appname, struct examine_ctx *ctx, off_t off)$/;"	f	file:
examine_ctx	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^struct examine_ctx {$/;"	s	file:
examine_parse_args	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^examine_parse_args(char *appname, int ac, char *av[],$/;"	f	file:
examine_var_string	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^examine_var_string(char *appname, struct examine_ctx *ctx, off_t off)$/;"	f	file:
exception_handler	deps/pmdk/src/test/unittest/ut_signal.c	/^exception_handler(_In_ PEXCEPTION_POINTERS ExceptionInfo)$/;"	f	file:
exception_handler	deps/pmdk/src/tools/pmempool/info_obj.c	/^exception_handler(_In_ PEXCEPTION_POINTERS ExceptionInfo)$/;"	f	file:
exclude_arch	deps/pmdk/src/test/unittest/unittest.sh	/^function exclude_arch() {$/;"	f
exclude_ppc64	deps/pmdk/src/test/unittest/unittest.sh	/^function exclude_ppc64() {$/;"	f
exec	deps/pmdk/src/libpmemobj/palloc.c	/^	void (*exec)(struct palloc_heap *heap,$/;"	m	struct:__anon130	file:
exec	deps/pmdk/src/test/unittest/context.py	/^    def exec(self, cmd, *args, expected_exit=0):$/;"	m	class:Context
exec	deps/pmdk/src/tools/pmempool/check.c	/^	bool exec;		\/* do execute *\/$/;"	m	struct:pmempool_check_context	file:
execCommand	src/multi.c	/^void execCommand(client *c) {$/;"	f
execCommand	src/server.h	/^                        *rpopCommand, *sremCommand, *execCommand;$/;"	m	struct:redisServer	typeref:struct:redisServer::
execCommandPropagateMulti	src/multi.c	/^void execCommandPropagateMulti(client *c) {$/;"	f
exec_argv	src/server.h	/^    char **exec_argv;           \/* Executable argv vector (copy). *\/$/;"	m	struct:redisServer
exec_instance	tests/instances.tcl	/^proc exec_instance {type cfgfile} {$/;"	p
exec_pmemobjcli_script	deps/pmdk/src/test/pmempool_sync_remote/common.sh	/^exec_pmemobjcli_script() {$/;"	f
exec_pmemobjcli_script	deps/pmdk/src/test/pmempool_transform_remote/common.sh	/^exec_pmemobjcli_script() {$/;"	f
execaborterr	src/server.h	/^    *masterdownerr, *roslaveerr, *execaborterr, *noautherr, *noreplicaserr,$/;"	m	struct:sharedObjectsStruct
executable	src/server.h	/^    char *executable;           \/* Absolute executable file path. *\/$/;"	m	struct:redisServer
execute_tests	tests/test_helper.tcl	/^proc execute_tests name {$/;"	p
exesuffix	deps/pmdk/src/test/unittest/context.py	/^    exesuffix = ''$/;"	v	class:_Build
existsCommand	src/db.c	/^void existsCommand(client *c) {$/;"	f
exists_cb	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^exists_cb(struct part_file *pf, void *arg)$/;"	f	file:
exit	deps/pmdk/src/benchmarks/benchmark.hpp	/^	int (*exit)(struct benchmark *bench, struct benchmark_args *args);$/;"	m	struct:benchmark_info
exit	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	void (*exit)(struct benchmark *bench, struct benchmark_args *args,$/;"	m	struct:benchmark_worker
exitFromChild	src/server.c	/^void exitFromChild(int retcode) {$/;"	f
exit_bench_mutex	deps/pmdk/src/benchmarks/obj_locks.cpp	/^exit_bench_mutex(struct mutex_bench *mb)$/;"	f	file:
exit_bench_rwlock	deps/pmdk/src/benchmarks/obj_locks.cpp	/^exit_bench_rwlock(struct mutex_bench *mb)$/;"	f	file:
exit_bench_vmutex	deps/pmdk/src/benchmarks/obj_locks.cpp	/^exit_bench_vmutex(struct mutex_bench *mb)$/;"	f	file:
exit_handler	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^exit_handler(struct ds_context *ctx)$/;"	f
exit_if_not_exist	deps/pmdk/utils/check_license/check-headers.sh	/^function exit_if_not_exist()$/;"	f
exit_on_error	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	bool exit_on_error;		\/* exit when error occurred *\/$/;"	m	struct:pocli_opts	file:
exit_on_finish	deps/pmdk/src/test/obj_heap_interrupt/obj_heap_interrupt.c	/^static int exit_on_finish = 0;$/;"	v	file:
exp1	deps/lua/src/lparser.c	/^static int exp1 (LexState *ls) {$/;"	f	file:
exp2reg	deps/lua/src/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
exp_errno	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	int exp_errno;$/;"	m	struct:drain_thread_arg	file:
exp_errno	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	int exp_errno;$/;"	m	struct:flush_thread_arg	file:
exp_errno	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	int exp_errno;$/;"	m	struct:pool_entry	file:
exp_results	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^static const struct result exp_results[3][2] = {$/;"	v	typeref:struct:result	file:
expand	deps/pmdk/src/test/unittest/context.py	/^def expand(*classes):$/;"	f
expand_bits	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^expand_bits(int y)$/;"	f	file:
expdesc	deps/lua/src/lparser.h	/^typedef struct expdesc {$/;"	s
expdesc	deps/lua/src/lparser.h	/^} expdesc;$/;"	t	typeref:struct:expdesc
expect	src/lzf_c.c	79;"	d	file:
expect	src/lzf_c.c	82;"	d	file:
expect_abnormal_exit	deps/pmdk/src/test/unittest/unittest.sh	/^function expect_abnormal_exit() {$/;"	f
expect_bad_blocks	deps/pmdk/src/test/common_badblock.sh	/^function expect_bad_blocks {$/;"	f
expect_bad_blocks_node	deps/pmdk/src/test/common_badblock.sh	/^function expect_bad_blocks_node {$/;"	f
expect_false	src/lzf_c.c	86;"	d	file:
expect_normal_exit	deps/pmdk/src/test/unittest/unittest.sh	/^function expect_normal_exit() {$/;"	f
expect_true	src/lzf_c.c	87;"	d	file:
expectedResSL	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^static const int expectedResSL[] = { 111, 8, 222, 6, 5, 4, 3, 2, 1, 0, 333 };$/;"	v	file:
expectedResTQ	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^static const int expectedResTQ[] = { 111, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0,$/;"	v	file:
expireCommand	src/db.c	/^void expireCommand(client *c) {$/;"	f
expireGenericCommand	src/db.c	/^void expireGenericCommand(client *c, long long basetime, int unit) {$/;"	f
expireIfNeeded	src/db.c	/^int expireIfNeeded(redisDb *db, robj *key) {$/;"	f
expireatCommand	src/db.c	/^void expireatCommand(client *c) {$/;"	f
expired	deps/jemalloc/include/jemalloc/internal/prof.h	/^	bool			expired;$/;"	m	struct:prof_tdata_s
expires	src/redis-check-rdb.c	/^    unsigned long expires;          \/* Number of keys with an expire. *\/$/;"	m	struct:__anon151	file:
expires	src/server.h	/^    dict *expires;              \/* Timeout of keys with a timeout set *\/$/;"	m	struct:redisDb
expkind	deps/lua/src/lparser.h	/^} expkind;$/;"	t	typeref:enum:__anon30
explicit	deps/pmdk/src/test/unittest/context.py	/^    explicit = True$/;"	v	class:Non
explist1	deps/lua/src/lparser.c	/^static int explist1 (LexState *ls, expdesc *v) {$/;"	f	file:
export_vars_node	deps/pmdk/src/test/unittest/unittest.sh	/^function export_vars_node() {$/;"	f
expr	deps/lua/src/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:
exprstat	deps/lua/src/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:
ext_tx	deps/pmdk/src/benchmarks/map_bench.cpp	/^	bool ext_tx;$/;"	m	struct:map_bench_args	file:
extend	deps/pmdk/src/libpmemobj/memops.c	/^	ulog_extend_fn extend; \/* function to allocate next ulog *\/$/;"	m	struct:operation_context	file:
extend	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_RUNNABLE_HANDLER(extend)(void *ctx,$/;"	f	file:
extent	deps/pmdk/src/common/extent.h	/^struct extent {$/;"	s
extent_ad_comp	deps/jemalloc/src/extent.c	/^extent_ad_comp(const extent_node_t *a, const extent_node_t *b)$/;"	f
extent_node_achunk_get	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_achunk_get(const extent_node_t *node)$/;"	f
extent_node_achunk_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	206;"	d
extent_node_achunk_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	206;"	d
extent_node_achunk_set	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_achunk_set(extent_node_t *node, bool achunk)$/;"	f
extent_node_achunk_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	207;"	d
extent_node_achunk_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	207;"	d
extent_node_addr_get	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_addr_get(const extent_node_t *node)$/;"	f
extent_node_addr_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	208;"	d
extent_node_addr_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	208;"	d
extent_node_addr_set	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_addr_set(extent_node_t *node, void *addr)$/;"	f
extent_node_addr_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	209;"	d
extent_node_addr_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	209;"	d
extent_node_arena_get	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_arena_get(const extent_node_t *node)$/;"	f
extent_node_arena_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	210;"	d
extent_node_arena_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	210;"	d
extent_node_arena_set	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_arena_set(extent_node_t *node, arena_t *arena)$/;"	f
extent_node_arena_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	211;"	d
extent_node_arena_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	211;"	d
extent_node_committed_get	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_committed_get(const extent_node_t *node)$/;"	f
extent_node_committed_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	212;"	d
extent_node_committed_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	212;"	d
extent_node_committed_set	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_committed_set(extent_node_t *node, bool committed)$/;"	f
extent_node_committed_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	213;"	d
extent_node_committed_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	213;"	d
extent_node_dirty_insert	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_dirty_insert(extent_node_t *node,$/;"	f
extent_node_dirty_insert	deps/jemalloc/include/jemalloc/internal/private_namespace.h	214;"	d
extent_node_dirty_insert	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	214;"	d
extent_node_dirty_linkage_init	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_dirty_linkage_init(extent_node_t *node)$/;"	f
extent_node_dirty_linkage_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	215;"	d
extent_node_dirty_linkage_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	215;"	d
extent_node_dirty_remove	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_dirty_remove(extent_node_t *node)$/;"	f
extent_node_dirty_remove	deps/jemalloc/include/jemalloc/internal/private_namespace.h	216;"	d
extent_node_dirty_remove	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	216;"	d
extent_node_init	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_init(extent_node_t *node, arena_t *arena, void *addr, size_t size,$/;"	f
extent_node_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	217;"	d
extent_node_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	217;"	d
extent_node_prof_tctx_get	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_prof_tctx_get(const extent_node_t *node)$/;"	f
extent_node_prof_tctx_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	218;"	d
extent_node_prof_tctx_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	218;"	d
extent_node_prof_tctx_set	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_prof_tctx_set(extent_node_t *node, prof_tctx_t *tctx)$/;"	f
extent_node_prof_tctx_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	219;"	d
extent_node_prof_tctx_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	219;"	d
extent_node_s	deps/jemalloc/include/jemalloc/internal/extent.h	/^struct extent_node_s {$/;"	s
extent_node_size_get	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_size_get(const extent_node_t *node)$/;"	f
extent_node_size_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	220;"	d
extent_node_size_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	220;"	d
extent_node_size_set	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_size_set(extent_node_t *node, size_t size)$/;"	f
extent_node_size_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	221;"	d
extent_node_size_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	221;"	d
extent_node_sn_get	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_sn_get(const extent_node_t *node)$/;"	f
extent_node_sn_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	222;"	d
extent_node_sn_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	222;"	d
extent_node_sn_set	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_sn_set(extent_node_t *node, size_t sn)$/;"	f
extent_node_sn_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	223;"	d
extent_node_sn_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	223;"	d
extent_node_t	deps/jemalloc/include/jemalloc/internal/extent.h	/^typedef struct extent_node_s extent_node_t;$/;"	t	typeref:struct:extent_node_s
extent_node_zeroed_get	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_zeroed_get(const extent_node_t *node)$/;"	f
extent_node_zeroed_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	224;"	d
extent_node_zeroed_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	224;"	d
extent_node_zeroed_set	deps/jemalloc/include/jemalloc/internal/extent.h	/^extent_node_zeroed_set(extent_node_t *node, bool zeroed)$/;"	f
extent_node_zeroed_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	225;"	d
extent_node_zeroed_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	225;"	d
extent_quantize	deps/jemalloc/src/extent.c	/^extent_quantize(size_t size)$/;"	f
extent_sn_comp	deps/jemalloc/src/extent.c	/^extent_sn_comp(const extent_node_t *a, const extent_node_t *b)$/;"	f
extent_sn_next	deps/jemalloc/include/jemalloc/internal/arena.h	/^	size_t			extent_sn_next;$/;"	m	struct:arena_s
extent_sz_comp	deps/jemalloc/src/extent.c	/^extent_sz_comp(const extent_node_t *a, const extent_node_t *b)$/;"	f
extent_szsnad_comp	deps/jemalloc/src/extent.c	/^extent_szsnad_comp(const extent_node_t *a, const extent_node_t *b)$/;"	f
extent_tree_ad_destroy	deps/jemalloc/include/jemalloc/internal/private_namespace.h	226;"	d
extent_tree_ad_destroy	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	226;"	d
extent_tree_ad_destroy_recurse	deps/jemalloc/include/jemalloc/internal/private_namespace.h	227;"	d
extent_tree_ad_destroy_recurse	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	227;"	d
extent_tree_ad_empty	deps/jemalloc/include/jemalloc/internal/private_namespace.h	228;"	d
extent_tree_ad_empty	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	228;"	d
extent_tree_ad_first	deps/jemalloc/include/jemalloc/internal/private_namespace.h	229;"	d
extent_tree_ad_first	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	229;"	d
extent_tree_ad_insert	deps/jemalloc/include/jemalloc/internal/private_namespace.h	230;"	d
extent_tree_ad_insert	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	230;"	d
extent_tree_ad_iter	deps/jemalloc/include/jemalloc/internal/private_namespace.h	231;"	d
extent_tree_ad_iter	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	231;"	d
extent_tree_ad_iter_recurse	deps/jemalloc/include/jemalloc/internal/private_namespace.h	232;"	d
extent_tree_ad_iter_recurse	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	232;"	d
extent_tree_ad_iter_start	deps/jemalloc/include/jemalloc/internal/private_namespace.h	233;"	d
extent_tree_ad_iter_start	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	233;"	d
extent_tree_ad_last	deps/jemalloc/include/jemalloc/internal/private_namespace.h	234;"	d
extent_tree_ad_last	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	234;"	d
extent_tree_ad_new	deps/jemalloc/include/jemalloc/internal/private_namespace.h	235;"	d
extent_tree_ad_new	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	235;"	d
extent_tree_ad_next	deps/jemalloc/include/jemalloc/internal/private_namespace.h	236;"	d
extent_tree_ad_next	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	236;"	d
extent_tree_ad_nsearch	deps/jemalloc/include/jemalloc/internal/private_namespace.h	237;"	d
extent_tree_ad_nsearch	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	237;"	d
extent_tree_ad_prev	deps/jemalloc/include/jemalloc/internal/private_namespace.h	238;"	d
extent_tree_ad_prev	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	238;"	d
extent_tree_ad_psearch	deps/jemalloc/include/jemalloc/internal/private_namespace.h	239;"	d
extent_tree_ad_psearch	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	239;"	d
extent_tree_ad_remove	deps/jemalloc/include/jemalloc/internal/private_namespace.h	240;"	d
extent_tree_ad_remove	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	240;"	d
extent_tree_ad_reverse_iter	deps/jemalloc/include/jemalloc/internal/private_namespace.h	241;"	d
extent_tree_ad_reverse_iter	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	241;"	d
extent_tree_ad_reverse_iter_recurse	deps/jemalloc/include/jemalloc/internal/private_namespace.h	242;"	d
extent_tree_ad_reverse_iter_recurse	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	242;"	d
extent_tree_ad_reverse_iter_start	deps/jemalloc/include/jemalloc/internal/private_namespace.h	243;"	d
extent_tree_ad_reverse_iter_start	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	243;"	d
extent_tree_ad_search	deps/jemalloc/include/jemalloc/internal/private_namespace.h	244;"	d
extent_tree_ad_search	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	244;"	d
extent_tree_szsnad_destroy	deps/jemalloc/include/jemalloc/internal/private_namespace.h	245;"	d
extent_tree_szsnad_destroy	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	245;"	d
extent_tree_szsnad_destroy_recurse	deps/jemalloc/include/jemalloc/internal/private_namespace.h	246;"	d
extent_tree_szsnad_destroy_recurse	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	246;"	d
extent_tree_szsnad_empty	deps/jemalloc/include/jemalloc/internal/private_namespace.h	247;"	d
extent_tree_szsnad_empty	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	247;"	d
extent_tree_szsnad_first	deps/jemalloc/include/jemalloc/internal/private_namespace.h	248;"	d
extent_tree_szsnad_first	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	248;"	d
extent_tree_szsnad_insert	deps/jemalloc/include/jemalloc/internal/private_namespace.h	249;"	d
extent_tree_szsnad_insert	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	249;"	d
extent_tree_szsnad_iter	deps/jemalloc/include/jemalloc/internal/private_namespace.h	250;"	d
extent_tree_szsnad_iter	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	250;"	d
extent_tree_szsnad_iter_recurse	deps/jemalloc/include/jemalloc/internal/private_namespace.h	251;"	d
extent_tree_szsnad_iter_recurse	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	251;"	d
extent_tree_szsnad_iter_start	deps/jemalloc/include/jemalloc/internal/private_namespace.h	252;"	d
extent_tree_szsnad_iter_start	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	252;"	d
extent_tree_szsnad_last	deps/jemalloc/include/jemalloc/internal/private_namespace.h	253;"	d
extent_tree_szsnad_last	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	253;"	d
extent_tree_szsnad_new	deps/jemalloc/include/jemalloc/internal/private_namespace.h	254;"	d
extent_tree_szsnad_new	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	254;"	d
extent_tree_szsnad_next	deps/jemalloc/include/jemalloc/internal/private_namespace.h	255;"	d
extent_tree_szsnad_next	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	255;"	d
extent_tree_szsnad_nsearch	deps/jemalloc/include/jemalloc/internal/private_namespace.h	256;"	d
extent_tree_szsnad_nsearch	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	256;"	d
extent_tree_szsnad_prev	deps/jemalloc/include/jemalloc/internal/private_namespace.h	257;"	d
extent_tree_szsnad_prev	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	257;"	d
extent_tree_szsnad_psearch	deps/jemalloc/include/jemalloc/internal/private_namespace.h	258;"	d
extent_tree_szsnad_psearch	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	258;"	d
extent_tree_szsnad_remove	deps/jemalloc/include/jemalloc/internal/private_namespace.h	259;"	d
extent_tree_szsnad_remove	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	259;"	d
extent_tree_szsnad_reverse_iter	deps/jemalloc/include/jemalloc/internal/private_namespace.h	260;"	d
extent_tree_szsnad_reverse_iter	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	260;"	d
extent_tree_szsnad_reverse_iter_recurse	deps/jemalloc/include/jemalloc/internal/private_namespace.h	261;"	d
extent_tree_szsnad_reverse_iter_recurse	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	261;"	d
extent_tree_szsnad_reverse_iter_start	deps/jemalloc/include/jemalloc/internal/private_namespace.h	262;"	d
extent_tree_szsnad_reverse_iter_start	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	262;"	d
extent_tree_szsnad_search	deps/jemalloc/include/jemalloc/internal/private_namespace.h	263;"	d
extent_tree_szsnad_search	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	263;"	d
extent_tree_t	deps/jemalloc/include/jemalloc/internal/extent.h	/^typedef rb_tree(extent_node_t) extent_tree_t;$/;"	t
extents	deps/pmdk/src/common/extent.h	/^	struct extent *extents;$/;"	m	struct:extents	typeref:struct:extents::extent
extents	deps/pmdk/src/common/extent.h	/^struct extents {$/;"	s
extents_count	deps/pmdk/src/common/extent.h	/^	uint32_t extents_count;$/;"	m	struct:extents
external	deps/pmdk/src/libpmemobj/lane.h	/^	struct ULOG(LANE_REDO_EXTERNAL_SIZE) external;$/;"	m	struct:lane_layout
external	deps/pmdk/src/libpmemobj/lane.h	/^	struct operation_context *external; \/* context for external ulog *\/$/;"	m	struct:lane	typeref:struct:lane::operation_context
external_lbasize	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint32_t external_lbasize;	\/* advertised LBA size (bytes) *\/$/;"	m	struct:btt_info
external_nlba	deps/pmdk/src/libpmemblk/btt.c	/^		uint32_t external_nlba;	\/* LBAs that live in this arena *\/$/;"	m	struct:btt::arena	file:
external_nlba	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint32_t external_nlba;		\/* advertised LBAs in this arena *\/$/;"	m	struct:btt_info
extra	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t extra;$/;"	m	struct:allocation_header_compact
extra	src/quicklist.h	/^    unsigned int extra : 10; \/* more bits to steal for future usage *\/$/;"	m	struct:quicklistNode
extractDistanceOrReply	src/geo.c	/^double extractDistanceOrReply(client *c, robj **argv,$/;"	f
extractLongLatOrReply	src/geo.c	/^int extractLongLatOrReply(client *c, robj **argv, double *xy) {$/;"	f
extractUnitOrReply	src/geo.c	/^double extractUnitOrReply(client *c, robj *unit) {$/;"	f
extract_operations	deps/pmdk/src/tools/pmreorder/opscontext.py	/^    def extract_operations(self):$/;"	m	class:OpsContext
extraline	deps/lua/src/lauxlib.c	/^  int extraline;$/;"	m	struct:LoadF	file:
f	deps/lua/doc/manual.html	/^     function f () <em>body<\/em> end$/;"	f
f	deps/lua/doc/manual.html	/^     function f(a, b) end$/;"	f
f	deps/lua/src/lauxlib.c	/^  FILE *f;$/;"	m	struct:LoadF	file:
f	deps/lua/src/lobject.h	/^  lua_CFunction f;$/;"	m	struct:CClosure
f	deps/lua/src/lparser.h	/^  Proto *f;  \/* current function header *\/$/;"	m	struct:FuncState
f	deps/lua/src/lparser.h	/^  int f;  \/* patch list of `exit when false' *\/$/;"	m	struct:expdesc
f	deps/lua/test/bisect.lua	/^function f(x)$/;"	f
f	deps/pmdk/src/test/obj_layout/obj_layout.c	/^	POBJ_LIST_ENTRY(struct foo) f;$/;"	m	struct:foo	file:
f	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^	int f;$/;"	m	struct:fields	file:
f_Ccall	deps/lua/src/lapi.c	/^static void f_Ccall (lua_State *L, void *ud) {$/;"	f	file:
f_call	deps/lua/src/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:
f_chkbb	deps/pmdk/src/libpmempool/feature.c	/^static const features_t f_chkbb = FEAT_COMPAT(CHECK_BAD_BLOCKS);$/;"	v	file:
f_cksum_2k	deps/pmdk/src/libpmempool/feature.c	/^static const features_t f_cksum_2k = FEAT_INCOMPAT(CKSUM_2K);$/;"	v	file:
f_flush	deps/lua/src/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:
f_invalid	deps/pmdk/src/libpmempool/feature.c	/^static const features_t f_invalid = FEAT_INVALID;$/;"	v	file:
f_isLua	deps/lua/src/lstate.h	61;"	d
f_lines	deps/lua/src/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:
f_luaopen	deps/lua/src/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:
f_parser	deps/lua/src/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:
f_read	deps/lua/src/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:
f_sds	deps/pmdk/src/libpmempool/feature.c	/^static const features_t f_sds = FEAT_INCOMPAT(SDS);$/;"	v	file:
f_seek	deps/lua/src/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:
f_setvbuf	deps/lua/src/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:
f_singlehdr	deps/pmdk/src/libpmempool/feature.c	/^static const features_t f_singlehdr = FEAT_INCOMPAT(SINGLEHDR);$/;"	v	file:
f_write	deps/lua/src/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:
fabric	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct fid_fabric *fabric; \/* fabric domain *\/$/;"	m	struct:rpmem_fip	typeref:struct:rpmem_fip::fid_fabric	file:
fabric	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct fid_fabric *fabric;	\/* fabric domain *\/$/;"	m	struct:rpmemd_fip	typeref:struct:rpmemd_fip::fid_fabric	file:
factorial	deps/jemalloc/test/unit/math.c	/^factorial(unsigned x)$/;"	f	file:
factory	deps/pmdk/src/test/unittest/context.py	/^    def factory(cls, conf, *classes):$/;"	m	class:_CtxType
fail	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^fail(const char *msg)$/;"	f	file:
fail	deps/pmdk/src/test/unittest/futils.py	/^def fail(msg, exit_code=None):$/;"	f
fail	src/cluster.h	/^    } fail;$/;"	m	union:clusterMsgData	typeref:struct:clusterMsgData::__anon174
fail	tests/support/test.tcl	/^proc fail {msg} {$/;"	p
fail_malloc_from	deps/pmdk/src/common/alloc.c	/^static __thread const char *fail_malloc_from;$/;"	v	file:
fail_malloc_num	deps/pmdk/src/common/alloc.c	/^static __thread int fail_malloc_num;$/;"	v	file:
fail_on_missing_class	deps/pmdk/src/libpmemobj/alloc_class.c	/^	int fail_on_missing_class;$/;"	m	struct:alloc_class_collection	file:
fail_realloc_from	deps/pmdk/src/common/alloc.c	/^static __thread const char *fail_realloc_from;$/;"	v	file:
fail_realloc_num	deps/pmdk/src/common/alloc.c	/^static __thread int fail_realloc_num;$/;"	v	file:
fail_reports	src/cluster.h	/^    list *fail_reports;         \/* List of nodes signaling this as failing *\/$/;"	m	struct:clusterNode
fail_time	src/cluster.h	/^    mstime_t fail_time;      \/* Unix time when FAIL flag was set *\/$/;"	m	struct:clusterNode
fail_types	deps/pmdk/src/test/obj_memops/obj_memops.c	/^enum fail_types {$/;"	g	file:
failover_auth_count	src/cluster.h	/^    int failover_auth_count;    \/* Number of votes received so far. *\/$/;"	m	struct:clusterState
failover_auth_epoch	src/cluster.h	/^    uint64_t failover_auth_epoch; \/* Epoch of the current election. *\/$/;"	m	struct:clusterState
failover_auth_rank	src/cluster.h	/^    int failover_auth_rank;     \/* This slave rank for current auth request. *\/$/;"	m	struct:clusterState
failover_auth_sent	src/cluster.h	/^    int failover_auth_sent;     \/* True if we already asked for votes. *\/$/;"	m	struct:clusterState
failover_auth_time	src/cluster.h	/^    mstime_t failover_auth_time; \/* Time of previous or next election. *\/$/;"	m	struct:clusterState
failover_delay_logged	src/sentinel.c	/^    mstime_t failover_delay_logged; \/* For what failover_start_time value we$/;"	m	struct:sentinelRedisInstance	file:
failover_epoch	src/sentinel.c	/^    uint64_t failover_epoch; \/* Epoch of the currently started failover. *\/$/;"	m	struct:sentinelRedisInstance	file:
failover_start_time	src/sentinel.c	/^    mstime_t failover_start_time;   \/* Last failover attempt start time. *\/$/;"	m	struct:sentinelRedisInstance	file:
failover_state	src/sentinel.c	/^    int failover_state; \/* See SENTINEL_FAILOVER_STATE_* defines. *\/$/;"	m	struct:sentinelRedisInstance	file:
failover_state_change_time	src/sentinel.c	/^    mstime_t failover_state_change_time;$/;"	m	struct:sentinelRedisInstance	file:
failover_timeout	src/sentinel.c	/^    mstime_t failover_timeout;      \/* Max time to refresh failover state. *\/$/;"	m	struct:sentinelRedisInstance	file:
fails	deps/hiredis/test.c	/^static int tests = 0, fails = 0;$/;"	v	file:
fake_persist	deps/pmdk/src/test/obj_memblock/obj_memblock.c	/^fake_persist(void *base, const void *addr, size_t size, unsigned flags)$/;"	f	file:
false	deps/jemalloc/include/msvc_compat/C99/stdbool.h	16;"	d
fasttm	deps/lua/src/ltm.h	44;"	d
fatal	deps/lua/src/luac.c	/^static void fatal(const char* message)$/;"	f	file:
fatal	deps/pmdk/src/test/unittest/unittest.sh	/^function fatal() {$/;"	f
fbitmap	deps/pmdk/src/libpmempool/check_util.h	/^	uint8_t *fbitmap;$/;"	m	struct:__anon87
fchmod	deps/pmdk/src/windows/include/platform.h	114;"	d
fd	deps/hiredis/adapters/ae.h	/^    int fd;$/;"	m	struct:redisAeEvents
fd	deps/hiredis/hiredis.h	/^    int fd;$/;"	m	struct:redisContext
fd	deps/pmdk/src/benchmarks/blk.cpp	/^	int fd;			  \/* file descr. for file io *\/$/;"	m	struct:blk_bench	file:
fd	deps/pmdk/src/benchmarks/log.cpp	/^	int fd;			\/* file descriptor for file io mode *\/$/;"	m	struct:log_bench	file:
fd	deps/pmdk/src/common/set.h	/^	int fd;$/;"	m	struct:pool_set_part
fd	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	int fd;			\/* file descriptor for file io mode *\/$/;"	m	struct:ds_context	file:
fd	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^    int fd;$/;"	m	struct:pmem_context
fd	deps/pmdk/src/libpmempool/pool.h	/^	int fd;$/;"	m	struct:pool_set_file
fd	deps/pmdk/src/tools/daxio/daxio.c	/^	int fd;$/;"	m	struct:daxio_device	file:
fd	deps/pmdk/src/tools/pmempool/common.h	/^	int fd;$/;"	m	struct:pool_set_file
fd	src/ae.h	/^    int fd;$/;"	m	struct:aeFiredEvent
fd	src/cluster.c	/^    int fd;$/;"	m	struct:migrateCachedSocket	file:
fd	src/cluster.h	/^    int fd;                     \/* TCP socket file descriptor *\/$/;"	m	struct:clusterLink
fd	src/scripting.c	/^    int fd;     \/* Socket of the debugging client. *\/$/;"	m	struct:ldbState	file:
fd	src/sentinel.c	/^    int fd;$/;"	m	struct:redisAeEvents	file:
fd	src/server.h	/^    int fd;                 \/* Client socket. *\/$/;"	m	struct:client
fd_err	deps/pmdk/src/librpmem/rpmem_cmd.h	/^	int fd_err;	\/* stderr *\/$/;"	m	struct:rpmem_cmd
fd_in	deps/pmdk/src/librpmem/rpmem_cmd.h	/^	int fd_in;	\/* stdin *\/$/;"	m	struct:rpmem_cmd
fd_in	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^	int fd_in;$/;"	m	struct:server
fd_in	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^	int fd_in;$/;"	m	struct:rpmemd_obc	file:
fd_lut	deps/pmdk/src/test/unittest/ut.c	/^static struct fd_lut {$/;"	s	file:
fd_out	deps/pmdk/src/librpmem/rpmem_cmd.h	/^	int fd_out;	\/* stdout *\/$/;"	m	struct:rpmem_cmd
fd_out	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^	int fd_out;$/;"	m	struct:server
fd_out	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^	int fd_out;$/;"	m	struct:rpmemd_obc	file:
fdfile	deps/pmdk/src/test/unittest/ut.c	/^	char *fdfile;$/;"	m	struct:fd_lut	file:
fdnum	deps/pmdk/src/test/unittest/ut.c	/^	int fdnum;$/;"	m	struct:fd_lut	file:
fds	src/rio.h	/^            int *fds;       \/* File descriptors. *\/$/;"	m	struct:_rio::__anon179::__anon182
fdset	src/rio.h	/^        } fdset;$/;"	m	union:_rio::__anon179	typeref:struct:_rio::__anon179::__anon182
feature	deps/pmdk/src/tools/pmempool/feature.c	/^	enum pmempool_feature feature;$/;"	m	struct:feature_ctx	typeref:enum:feature_ctx::pmempool_feature	file:
feature_2_pmempool_feature_map	deps/pmdk/src/common/pool_hdr.c	/^static const features_t feature_2_pmempool_feature_map[] = {$/;"	v	file:
feature_ctx	deps/pmdk/src/tools/pmempool/feature.c	/^struct feature_ctx {$/;"	s	file:
feature_funcs	deps/pmdk/src/libpmempool/feature.c	/^struct feature_funcs {$/;"	s	file:
feature_op	deps/pmdk/src/tools/pmempool/feature.c	/^enum feature_op {$/;"	g	file:
feature_perform	deps/pmdk/src/tools/pmempool/feature.c	/^feature_perform(struct feature_ctx *pfp)$/;"	f	file:
feature_set	deps/pmdk/src/libpmempool/feature.c	/^feature_set(struct pool_set *set, features_t feature, int value)$/;"	f	file:
features	deps/pmdk/src/common/pool_hdr.h	/^	features_t features;		\/* features flags *\/$/;"	m	struct:pool_hdr
features	deps/pmdk/src/common/set.h	/^	features_t features; \/* features flags *\/$/;"	m	struct:pool_attr
features	deps/pmdk/src/libpmempool/feature.c	/^static struct feature_funcs features[] = {$/;"	v	typeref:struct:feature_funcs	file:
features	deps/pmdk/src/libpmempool/pool.h	/^	features_t features;$/;"	m	struct:pool_params
features_check	deps/pmdk/src/libpmempool/feature.c	/^features_check(features_t *features, struct pool_hdr *hdrp)$/;"	f	file:
features_t	deps/pmdk/src/common/pool_hdr.h	/^} features_t;$/;"	t	typeref:struct:__anon70
features_zero	deps/pmdk/src/common/pool_hdr.h	/^static const features_t features_zero =$/;"	v
feedAppendOnlyFile	src/aof.c	/^void feedAppendOnlyFile(struct redisCommand *cmd, int dictid, robj **argv, int argc) {$/;"	f
feedReplicationBacklog	src/replication.c	/^void feedReplicationBacklog(void *ptr, size_t len) {$/;"	f
feedReplicationBacklogWithObject	src/replication.c	/^void feedReplicationBacklogWithObject(robj *o) {$/;"	f
fexists	deps/pmdk/src/tools/pmempool/create.c	/^	int fexists;$/;"	m	struct:pmempool_create	file:
ffd	deps/pmdk/src/common/fs_windows.c	/^	WIN32_FIND_DATAW ffd;$/;"	m	struct:fs	file:
ffs	deps/jemalloc/include/msvc_compat/strings.h	/^static __forceinline int ffs(int x)$/;"	f
ffs	deps/jemalloc/include/msvc_compat/strings.h	56;"	d
ffs_llu	deps/jemalloc/include/jemalloc/internal/private_namespace.h	264;"	d
ffs_llu	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	264;"	d
ffs_llu	deps/jemalloc/include/jemalloc/internal/util.h	/^ffs_llu(unsigned long long bitmap)$/;"	f
ffs_lu	deps/jemalloc/include/jemalloc/internal/private_namespace.h	265;"	d
ffs_lu	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	265;"	d
ffs_lu	deps/jemalloc/include/jemalloc/internal/util.h	/^ffs_lu(unsigned long bitmap)$/;"	f
ffs_u	deps/jemalloc/include/jemalloc/internal/private_namespace.h	266;"	d
ffs_u	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	266;"	d
ffs_u	deps/jemalloc/include/jemalloc/internal/util.h	/^ffs_u(unsigned bitmap)$/;"	f
ffs_u32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	267;"	d
ffs_u32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	267;"	d
ffs_u32	deps/jemalloc/include/jemalloc/internal/util.h	/^ffs_u32(uint32_t bitmap)$/;"	f
ffs_u64	deps/jemalloc/include/jemalloc/internal/private_namespace.h	268;"	d
ffs_u64	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	268;"	d
ffs_u64	deps/jemalloc/include/jemalloc/internal/util.h	/^ffs_u64(uint64_t bitmap)$/;"	f
ffs_zu	deps/jemalloc/include/jemalloc/internal/private_namespace.h	269;"	d
ffs_zu	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	269;"	d
ffs_zu	deps/jemalloc/include/jemalloc/internal/util.h	/^ffs_zu(size_t bitmap)$/;"	f
ffsl	deps/jemalloc/include/msvc_compat/strings.h	/^static __forceinline int ffsl(long x)$/;"	f
ffsl	deps/jemalloc/include/msvc_compat/strings.h	55;"	d
ffsll	deps/jemalloc/include/msvc_compat/strings.h	/^static __forceinline int ffsll(unsigned __int64 x)$/;"	f
ffsll	deps/jemalloc/include/msvc_compat/strings.h	54;"	d
fi	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct fi_info *fi; \/* fabric interface information *\/$/;"	m	struct:rpmem_fip	typeref:struct:rpmem_fip::fi_info	file:
fi	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct fi_info *fi;		\/* fabric interface information *\/$/;"	m	struct:rpmemd_fip	typeref:struct:rpmemd_fip::fi_info	file:
fib	deps/lua/test/fib.lua	/^function fib(n)$/;"	f
fibo	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^	struct fibo_t fibo;$/;"	m	struct:pool_t	typeref:struct:pool_t::fibo_t	file:
fibo_checksum	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^fibo_checksum(struct fibo_t *fibo)$/;"	f	file:
fibo_generate	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^fibo_generate(struct fibo_t *fibo)$/;"	f	file:
fibo_init	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^fibo_init(struct fibo_t *fibo)$/;"	f	file:
fibo_is_valid	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^fibo_is_valid(struct fibo_t *fibo)$/;"	f	file:
fibo_is_zeroed	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^fibo_is_zeroed(struct fibo_t *fibo)$/;"	f	file:
fibo_print	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^fibo_print(struct fibo_t *fibo)$/;"	f	file:
fibo_recovery	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^fibo_recovery(RPMEMpool *rpp, struct pool_t *pool, struct fibo_t *fibo_r,$/;"	f	file:
fibo_t	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^struct fibo_t {$/;"	s	file:
fibo_validate	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^fibo_validate(struct fibo_t *fibo, struct fibo_t *fibo_r, unsigned *state)$/;"	f	file:
fibonacci_next	deps/pmdk/src/test/ex_librpmem_fibonacci/TEST1	/^fibonacci_next()$/;"	f
field	deps/lua/src/lparser.c	/^static void field (LexState *ls, expdesc *v) {$/;"	f	file:
field	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	POBJ_LIST_ENTRY(struct item) field;$/;"	m	struct:item	file:
field	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	POBJ_LIST_ENTRY(struct item) field;$/;"	m	struct:item	file:
field	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^struct field {$/;"	s	file:
fieldq	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	PMDK_CIRCLEQ_ENTRY(item) fieldq;$/;"	m	struct:item	file:
fields	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^struct fields {$/;"	s	file:
fifo_root	deps/pmdk/src/examples/libpmemobj/linkedlist/fifo.c	/^struct fifo_root {$/;"	s	file:
file	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	struct objfs_file file; \/* file specific data *\/$/;"	m	struct:objfs_inode	typeref:struct:objfs_inode::objfs_file	file:
file	deps/pmdk/src/tools/pmempool/info.h	/^	char *file;		\/* input file *\/$/;"	m	struct:pmempool_info_args
file	src/rio.h	/^        } file;$/;"	m	union:_rio::__anon179	typeref:struct:_rio::__anon179::__anon181
file_error	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^file_error(const int fd, const char *fpath)$/;"	f	file:
file_exists	deps/pmdk/src/examples/ex_common.h	/^file_exists(char const *file)$/;"	f
file_in	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^	char *file_in;	\/* input file name *\/$/;"	m	struct:ddmap_context	file:
file_info	deps/pmdk/src/common/file.h	/^struct file_info {$/;"	s
file_name	deps/pmdk/src/benchmarks/pmembench.cpp	/^	const char *file_name;$/;"	m	struct:benchmark_opts	file:
file_name	deps/pmdk/src/tools/pmempool/info.h	/^	const char *file_name;	\/* current file name *\/$/;"	m	struct:pmem_info
file_out	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^	char *file_out;	\/* output file name *\/$/;"	m	struct:ddmap_context	file:
file_type	deps/pmdk/src/common/file.h	/^enum file_type {$/;"	g
fileerror	deps/lua/src/liolib.c	/^static void fileerror (lua_State *L, int arg, const char *filename) {$/;"	f	file:
fileio	deps/pmdk/src/benchmarks/log.cpp	/^	bool fileio;     \/* use file io instead of pmemlog *\/$/;"	m	struct:prog_args	file:
fileio	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	bool fileio;$/;"	m	struct:ds_context	file:
fileio	deps/pmdk/src/tools/pmempool/common.h	/^	bool fileio;$/;"	m	struct:pool_set_file
fileio_append	deps/pmdk/src/benchmarks/log.cpp	/^fileio_append(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
fileio_appendv	deps/pmdk/src/benchmarks/log.cpp	/^fileio_appendv(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
fileio_read	deps/pmdk/src/benchmarks/blk.cpp	/^fileio_read(struct blk_bench *bb, struct benchmark_args *ba,$/;"	f	file:
fileio_read	deps/pmdk/src/benchmarks/log.cpp	/^fileio_read(int fd, ssize_t len, struct log_worker_info *worker_info)$/;"	f	file:
fileio_write	deps/pmdk/src/benchmarks/blk.cpp	/^fileio_write(struct blk_bench *bb, struct benchmark_args *ba,$/;"	f	file:
filename	deps/pmdk/src/common/file.h	/^	char filename[NAME_MAX + 1];$/;"	m	struct:file_info
filename	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	char *filename;		\/* name of pool file *\/$/;"	m	struct:ds_context	file:
filename	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^    char *filename;$/;"	m	struct:pmem_context
filesize	deps/pmdk/src/common/set.h	/^	size_t filesize;	\/* aligned to page size *\/$/;"	m	struct:pool_set_part
fill	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^	uint32_t fill[FILL_SIZE];$/;"	m	struct:data_s	file:
fill	src/quicklist.h	/^    int fill : 16;              \/* fill factor for individual nodes *\/$/;"	m	struct:quicklist
fill_array32	deps/jemalloc/test/src/SFMT.c	/^void fill_array32(sfmt_t *ctx, uint32_t *array, int size) {$/;"	f
fill_array64	deps/jemalloc/test/src/SFMT.c	/^void fill_array64(sfmt_t *ctx, uint64_t *array, int size) {$/;"	f
fill_buffer	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^fill_buffer(unsigned char *buf, size_t size)$/;"	f	file:
fill_data_s	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^fill_data_s(struct data_s *rec, uint64_t number)$/;"	f	file:
fill_iovec	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^fill_iovec(struct iovec *iov, char *arg)$/;"	f	file:
fill_iovec	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^fill_iovec(struct iovec *iov, char *arg)$/;"	f	file:
fill_iovec	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^fill_iovec(struct iovec *iov, char *arg)$/;"	f	file:
fill_iovec	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^fill_iovec(struct iovec *iov, char *arg)$/;"	f	file:
fill_leaf	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^fill_leaf(PMEMobjpool *pop, TOID(art_leaf) al,$/;"	f
fill_leaf	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^int fill_leaf(PMEMobjpool *pop, TOID(art_leaf) al, const unsigned char *key,$/;"	v
fill_pct	deps/pmdk/src/libpmemobj/memblock.h	/^	unsigned (*fill_pct)(const struct memory_block *m);$/;"	m	struct:memory_block_ops
fill_pool	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^fill_pool(PMEMobjpool *pop, size_t *noids)$/;"	f	file:
fill_pool	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^fill_pool(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
fill_rand	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^fill_rand(void *addr, size_t len)$/;"	f	file:
fill_replica_struct_uuids	deps/pmdk/src/libpmempool/transform.c	/^fill_replica_struct_uuids(struct pool_set *set, unsigned repn)$/;"	f	file:
fill_struct_broken_part_uuids	deps/pmdk/src/libpmempool/sync.c	/^fill_struct_broken_part_uuids(struct pool_set *set, unsigned repn,$/;"	f	file:
fill_struct_part_uuids	deps/pmdk/src/libpmempool/sync.c	/^fill_struct_part_uuids(struct pool_set *set, unsigned repn,$/;"	f	file:
fill_struct_uuids	deps/pmdk/src/libpmempool/sync.c	/^fill_struct_uuids(struct pool_set *set, unsigned src_replica,$/;"	f	file:
filter 	deps/lua/test/sieve.lua	/^function filter (p, g)$/;"	f
filter_between_elem	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def filter_between_elem(store_list, **kwargs):$/;"	m	class:FilterPartialReorderEngine
filter_contexts	deps/pmdk/src/test/unittest/futils.py	/^def filter_contexts(config_ctx, test_ctx):$/;"	f
filter_max_elem	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def filter_max_elem(store_list, **kwargs):$/;"	m	class:FilterPartialReorderEngine
filter_min_elem	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def filter_min_elem(store_list, **kwargs):$/;"	m	class:FilterPartialReorderEngine
filter_samples	utils/hyperloglog/hll-gnuplot-graph.rb	/^def filter_samples(numsets,max,step,filter)$/;"	f	class:run_experiment
finalizerProc	src/ae.h	/^    aeEventFinalizerProc *finalizerProc;$/;"	m	struct:aeTimeEvent
findBigKeys	src/redis-cli.c	/^static void findBigKeys(void) {$/;"	f	file:
findKeyWithType	tests/support/util.tcl	/^proc findKeyWithType {r type} {$/;"	p
find_array	deps/pmdk/src/examples/libpmemobj/array/array.c	/^find_array(const char *name)$/;"	f
find_available_port	tests/support/util.tcl	/^proc find_available_port start {$/;"	p
find_child	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^find_child(art_node *n, int node_type, unsigned char c)$/;"	f	file:
find_crit_bit	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^find_crit_bit(uint64_t lhs, uint64_t rhs)$/;"	f	file:
find_dev_dax	deps/pmdk/src/tools/daxio/daxio.c	/^find_dev_dax(struct ndctl_ctx *ndctl_ctx, struct daxio_device *dev)$/;"	f	file:
find_kv_in_scenario	deps/pmdk/src/benchmarks/scenario.cpp	/^find_kv_in_scenario(const char *key, const struct scenario *scenario)$/;"	f
find_last_set_64	deps/pmdk/src/examples/ex_common.h	/^find_last_set_64(uint64_t val)$/;"	f
find_le	deps/pmdk/src/libpmemobj/critnib.c	/^find_le(struct critnib_node *__restrict n, uint64_t key)$/;"	f	file:
find_successor	deps/pmdk/src/libpmemobj/critnib.c	/^find_successor(struct critnib_node *__restrict n)$/;"	f	file:
findfile	deps/lua/src/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:
findindex	deps/lua/src/ltable.c	/^static int findindex (lua_State *L, Table *t, StkId key) {$/;"	f	file:
findlocal	deps/lua/src/ldebug.c	/^static const char *findlocal (lua_State *L, CallInfo *ci, int n) {$/;"	f	file:
fingerprint	src/dict.h	/^    long long fingerprint;$/;"	m	struct:dictIterator
fini_gen_rand	deps/jemalloc/test/src/SFMT.c	/^void fini_gen_rand(sfmt_t *ctx) {$/;"	f
fip	deps/pmdk/src/librpmem/rpmem.c	/^	struct rpmem_fip *fip;		\/* fabric provider handle *\/$/;"	m	struct:rpmem_pool	typeref:struct:rpmem_pool::rpmem_fip	file:
fip	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^	struct rpmem_fip *fip;$/;"	m	struct:flush_arg	typeref:struct:flush_arg::rpmem_fip	file:
fip	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^	struct rpmemd_fip *fip;	\/* fabric provider handle *\/$/;"	m	struct:rpmemd	typeref:struct:rpmemd::rpmemd_fip	file:
fip	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct rpmemd_fip *fip;		\/* main context *\/$/;"	m	struct:rpmemd_fip_thread	typeref:struct:rpmemd_fip_thread::rpmemd_fip	file:
fip_client	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^struct fip_client {$/;"	s	file:
fip_running	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^	int fip_running;$/;"	m	struct:rpmemd	file:
fip_service	deps/pmdk/src/librpmem/rpmem.c	/^	char fip_service[NI_MAXSERV];$/;"	m	struct:rpmem_pool	file:
fip_thread	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^	os_thread_t fip_thread;$/;"	m	struct:rpmemd	file:
fired	src/ae.h	/^    aeFiredEvent *fired; \/* Fired events *\/$/;"	m	struct:aeEventLoop
first	deps/jemalloc/include/jemalloc/internal/quarantine.h	/^	size_t			first;$/;"	m	struct:quarantine_s
first	deps/pmdk/src/tools/pmempool/common.h	/^	uint64_t first;$/;"	m	struct:range
first	deps/pmdk/src/windows/getopt/getopt.c	/^static char *first = NULL;$/;"	v	file:
first_done	deps/pmdk/src/common/fs_windows.c	/^	int first_done;$/;"	m	struct:fs	file:
first_field	deps/pmdk/src/test/pmreorder_simple/pmreorder_simple.c	/^	int first_field;$/;"	m	struct:three_field	file:
first_free	deps/pmdk/src/common/ctl.c	/^	int first_free;$/;"	m	struct:ctl	file:
first_part_uuid	deps/pmdk/src/common/set.h	/^	unsigned char first_part_uuid[POOL_HDR_UUID_LEN]; \/* first part uuid *\/$/;"	m	struct:pool_attr
first_snapshot	deps/pmdk/src/libpmemobj/tx.c	/^	int first_snapshot;$/;"	m	struct:tx	file:
firstkey	src/server.h	/^    int firstkey; \/* The first argument that's a key (0 = no keys) *\/$/;"	m	struct:redisCommand
fix	deps/pmdk/src/libpmempool/check_backup.c	/^	int (*fix)(PMEMpoolcheck *, location *, uint32_t, void *);$/;"	m	struct:step	file:
fix	deps/pmdk/src/libpmempool/check_blk.c	/^	int (*fix)(PMEMpoolcheck *, location *, uint32_t, void *);$/;"	m	struct:step	file:
fix	deps/pmdk/src/libpmempool/check_btt_info.c	/^	int (*fix)(PMEMpoolcheck *, location *, uint32_t, void *);$/;"	m	struct:step	file:
fix	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^	int (*fix)(PMEMpoolcheck *, location *, uint32_t, void *);$/;"	m	struct:step	file:
fix	deps/pmdk/src/libpmempool/check_log.c	/^	int (*fix)(PMEMpoolcheck *, location *, uint32_t, void *);$/;"	m	struct:step	file:
fix	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^	int (*fix)(PMEMpoolcheck *, location *, uint32_t, void *);$/;"	m	struct:step	file:
fix	deps/pmdk/src/libpmempool/check_sds.c	/^	int (*fix)(PMEMpoolcheck *, location *, uint32_t, void *);$/;"	m	struct:step	file:
fix_bad_blocks	deps/pmdk/src/libpmempool/replica.h	/^fix_bad_blocks(unsigned flags)$/;"	f
fix_cluster_cmd	src/redis-trib.rb	/^    def fix_cluster_cmd(argv,opt)$/;"	f	class:RedisTrib.alloc_slots
fix_open_slot	src/redis-trib.rb	/^    def fix_open_slot(slot)$/;"	f	class:RedisTrib
fix_slots_coverage	src/redis-trib.rb	/^    def fix_slots_coverage$/;"	f	class:RedisTrib
fixjump	deps/lua/src/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:
flag	deps/pmdk/src/common/set.h	/^	enum pool_set_option_flag flag;$/;"	m	struct:pool_set_option	typeref:enum:pool_set_option::pool_set_option_flag
flag	deps/pmdk/src/test/obj_oid_thread/obj_oid_thread.c	/^static int flag = 1;$/;"	v	file:
flag	deps/pmdk/src/test/pmreorder_simple/pmreorder_simple.c	/^	int flag;$/;"	m	struct:three_field	file:
flag	deps/pmdk/src/windows/getopt/getopt.h	/^  int* flag;$/;"	m	struct:option
flag	src/cluster.c	/^    uint16_t flag;$/;"	m	struct:redisNodeFlags	file:
flagTransaction	src/multi.c	/^void flagTransaction(client *c) {$/;"	f
flag_in_valgrind	deps/jemalloc/src/jemalloc.c	/^	flag_in_valgrind	= (1U << 5),$/;"	e	enum:__anon16	file:
flag_opt_junk_alloc	deps/jemalloc/src/jemalloc.c	/^	flag_opt_junk_alloc	= (1U),$/;"	e	enum:__anon16	file:
flag_opt_junk_free	deps/jemalloc/src/jemalloc.c	/^	flag_opt_junk_free	= (1U << 1),$/;"	e	enum:__anon16	file:
flag_opt_quarantine	deps/jemalloc/src/jemalloc.c	/^	flag_opt_quarantine	= (1U << 2),$/;"	e	enum:__anon16	file:
flag_opt_utrace	deps/jemalloc/src/jemalloc.c	/^	flag_opt_utrace		= (1U << 4),$/;"	e	enum:__anon16	file:
flag_opt_xmalloc	deps/jemalloc/src/jemalloc.c	/^	flag_opt_xmalloc	= (1U << 6)$/;"	e	enum:__anon16	file:
flag_opt_zero	deps/jemalloc/src/jemalloc.c	/^	flag_opt_zero		= (1U << 3),$/;"	e	enum:__anon16	file:
flags	deps/hiredis/hiredis.h	/^    int flags;$/;"	m	struct:redisContext
flags	deps/hiredis/sds.h	/^    unsigned char flags; \/* 3 lsb of type, 5 unused bits *\/$/;"	m	struct:sdshdr16
flags	deps/hiredis/sds.h	/^    unsigned char flags; \/* 3 lsb of type, 5 unused bits *\/$/;"	m	struct:sdshdr32
flags	deps/hiredis/sds.h	/^    unsigned char flags; \/* 3 lsb of type, 5 unused bits *\/$/;"	m	struct:sdshdr64
flags	deps/hiredis/sds.h	/^    unsigned char flags; \/* 3 lsb of type, 5 unused bits *\/$/;"	m	struct:sdshdr8
flags	deps/hiredis/sds.h	/^    unsigned char flags; \/* 3 lsb of type, and 5 msb of string length *\/$/;"	m	struct:sdshdr5
flags	deps/lua/src/lobject.h	/^  lu_byte flags;  \/* 1<<p means tagmethod(p) is not present *\/ $/;"	m	struct:Table
flags	deps/pmdk/src/benchmarks/rpmem.cpp	/^	unsigned *flags;	  \/* flags for ops *\/$/;"	m	struct:rpmem_bench	file:
flags	deps/pmdk/src/common/set.h	/^	int flags;		\/* stores flags used when opening the file *\/$/;"	m	struct:pool_set_part
flags	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint64_t flags;	\/* file flags *\/$/;"	m	struct:objfs_inode	file:
flags	deps/pmdk/src/include/libpmempool.h	/^	unsigned flags;$/;"	m	struct:pmempool_check_argsU
flags	deps/pmdk/src/include/libpmempool.h	/^	unsigned flags;$/;"	m	struct:pmempool_check_argsW
flags	deps/pmdk/src/libpmemblk/btt.c	/^		uint32_t flags;		\/* arena flags (btt_info) *\/$/;"	m	struct:btt::arena	file:
flags	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint32_t flags;			\/* see flag bits below *\/$/;"	m	struct:btt_info
flags	deps/pmdk/src/libpmemobj/alloc_class.h	/^	uint16_t flags;$/;"	m	struct:alloc_class
flags	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint16_t flags;$/;"	m	struct:chunk_header
flags	deps/pmdk/src/libpmemobj/tx.c	/^	uint64_t flags;$/;"	m	struct:tx_alloc_args	file:
flags	deps/pmdk/src/libpmemobj/tx.c	/^	uint64_t flags;$/;"	m	struct:tx_range_def	file:
flags	deps/pmdk/src/libpmempool/replica.h	/^	unsigned flags;$/;"	m	struct:part_health_status
flags	deps/pmdk/src/libpmempool/replica.h	/^	unsigned flags;$/;"	m	struct:poolset_health_status
flags	deps/pmdk/src/libpmempool/replica.h	/^	unsigned flags;$/;"	m	struct:replica_health_status
flags	deps/pmdk/src/libpmempool/rm.c	/^	unsigned flags;$/;"	m	struct:cb_args	file:
flags	deps/pmdk/src/libpmempool/transform.c	/^	unsigned flags;$/;"	m	struct:poolset_compare_status	file:
flags	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	unsigned flags;$/;"	m	struct:rpmem_target_info
flags	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^	uint64_t flags;		\/* MSG operation flags *\/$/;"	m	struct:rpmem_fip_msg
flags	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^	uint64_t flags;		\/* RMA operation flags *\/$/;"	m	struct:rpmem_fip_rma
flags	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t flags;				\/* flags *\/$/;"	m	struct:rpmem_msg_close
flags	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t flags;	\/* lane flags *\/$/;"	m	struct:rpmem_msg_persist_resp
flags	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t flags; \/* lane flags *\/$/;"	m	struct:rpmem_msg_persist
flags	deps/pmdk/src/test/libpmempool_api/libpmempool_test.c	/^	int flags;$/;"	m	struct:pmempool_check_args_1_0	file:
flags	deps/pmdk/src/test/libpmempool_api_win/libpmempool_test_win.c	/^	int flags;$/;"	m	struct:pmempool_check_args_1_0	file:
flags	deps/pmdk/src/tools/pmempool/feature.c	/^	unsigned flags;$/;"	m	struct:feature_ctx	file:
flags	deps/pmdk/src/tools/pmempool/info.h	/^	uint16_t flags;$/;"	m	struct:pmem_obj_class_stats
flags	deps/pmdk/src/tools/pmempool/synchronize.c	/^	unsigned flags;		\/* flags which modify the command execution *\/$/;"	m	struct:pmempool_sync_context	file:
flags	deps/pmdk/src/tools/pmempool/transform.c	/^	unsigned flags;		\/* flags which modify the command execution *\/$/;"	m	struct:pmempool_transform_context	file:
flags	src/cluster.h	/^    int flags;      \/* CLUSTER_NODE_... *\/$/;"	m	struct:clusterNode
flags	src/cluster.h	/^    uint16_t flags;             \/* node->flags copy *\/$/;"	m	struct:__anon169
flags	src/cluster.h	/^    uint16_t flags;     \/* Sender node flags *\/$/;"	m	struct:__anon177
flags	src/sds.h	/^    unsigned char flags; \/* 3 lsb of type, 5 unused bits *\/$/;"	m	struct:sdshdr16
flags	src/sds.h	/^    unsigned char flags; \/* 3 lsb of type, 5 unused bits *\/$/;"	m	struct:sdshdr32
flags	src/sds.h	/^    unsigned char flags; \/* 3 lsb of type, 5 unused bits *\/$/;"	m	struct:sdshdr64
flags	src/sds.h	/^    unsigned char flags; \/* 3 lsb of type, 5 unused bits *\/$/;"	m	struct:sdshdr8
flags	src/sds.h	/^    unsigned char flags; \/* 3 lsb of type, and 5 msb of string length *\/$/;"	m	struct:sdshdr5
flags	src/sentinel.c	/^    int flags;              \/* Script job flags: SENTINEL_SCRIPT_* *\/$/;"	m	struct:sentinelScriptJob	file:
flags	src/sentinel.c	/^    int flags;      \/* See SRI_... defines *\/$/;"	m	struct:sentinelRedisInstance	file:
flags	src/server.h	/^    int flags;              \/* Client flags: CLIENT_* macros. *\/$/;"	m	struct:client
flags	src/server.h	/^    int flags;    \/* The actual flags, obtained from the 'sflags' field. *\/$/;"	m	struct:redisCommand
flags	src/t_zset.c	/^    int flags;$/;"	m	struct:__anon158	file:
fld	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^	int fld;$/;"	m	struct:struct1	file:
fletcher64	deps/pmdk/src/test/checksum/checksum.c	/^fletcher64(void *addr, size_t len)$/;"	f	file:
flib	deps/lua/src/liolib.c	/^static const luaL_Reg flib[] = {$/;"	v	file:
flog	deps/pmdk/src/libpmemblk/btt.c	/^			struct btt_flog flog;	\/* current info *\/$/;"	m	struct:btt::arena::flog_runtime	typeref:struct:btt::arena::flog_runtime::btt_flog	file:
flog	deps/pmdk/src/libpmempool/pool.h	/^	uint8_t *flog;$/;"	m	struct:arena
flog_entry_check	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^flog_entry_check(PMEMpoolcheck *ppc, location *loc, uint32_t i,$/;"	f	file:
flog_read	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^flog_read(PMEMpoolcheck *ppc, struct arena *arenap)$/;"	f	file:
flog_runtime	deps/pmdk/src/libpmemblk/btt.c	/^		struct flog_runtime {$/;"	s	struct:btt::arena	file:
flog_update	deps/pmdk/src/libpmemblk/btt.c	/^flog_update(struct btt *bttp, unsigned lane, struct arena *arenap,$/;"	f	file:
flogoff	deps/pmdk/src/libpmemblk/btt.c	/^		uint64_t flogoff;	\/* offset to area flog *\/$/;"	m	struct:btt::arena	file:
flogoff	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint64_t flogoff;		\/* offset to area flog *\/$/;"	m	struct:btt_info
flogs	deps/pmdk/src/libpmemblk/btt.c	/^		} *flogs;$/;"	m	struct:btt::arena	typeref:struct:btt::arena::flog_runtime	file:
flogsize	deps/pmdk/src/libpmempool/pool.h	/^	size_t flogsize;$/;"	m	struct:arena
flush	deps/pmdk/src/libpmem/pmem.h	/^	flush_func flush;$/;"	m	struct:pmem_funcs
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_clflush.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_clflushopt.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_clwb.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_empty.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_noflush.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_clflush.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_clflushopt.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_clwb.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_empty.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_noflush.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_clflush.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_clflushopt.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_clwb.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_empty.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_noflush.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_clflush.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_clflushopt.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_clwb.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_empty.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_noflush.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_clflush.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_clflushopt.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_clwb.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_empty.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_noflush.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_clflush.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_clflushopt.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_clwb.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_empty.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_noflush.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_clflush.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_clflushopt.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_clwb.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_empty.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_noflush.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_clflush.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_clflushopt.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_clwb.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_empty.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_noflush.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_clflush.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_clflushopt.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_clwb.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_empty.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_noflush.c	33;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_clflush.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_clflushopt.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_clwb.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_empty.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_noflush.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_clflush.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_clflushopt.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_clwb.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_empty.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_noflush.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_clflush.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_clflushopt.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_clwb.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_empty.c	34;"	d	file:
flush	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_noflush.c	34;"	d	file:
flush	deps/pmdk/src/libpmemobj/pmemops.h	/^	flush_fn flush;		\/* flush function *\/$/;"	m	struct:pmem_ops
flush	deps/pmdk/src/librpmem/rpmem_fip.c	/^	rpmem_fip_flush_fn flush;$/;"	m	struct:rpmem_fip_ops	file:
flush	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	flush_func flush;$/;"	m	struct:flush_thread_arg	file:
flush	src/rio.h	/^    int (*flush)(struct _rio *);$/;"	m	struct:_rio
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_clflush.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_clflushopt.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_clwb.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_empty.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f_noflush.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_clflush.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_clflushopt.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_clwb.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_empty.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx_noflush.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_clflush.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_clflushopt.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_clwb.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_empty.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2_noflush.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_clflush.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_clflushopt.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_clwb.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_empty.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f_noflush.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_clflush.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_clflushopt.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_clwb.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_empty.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx_noflush.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_clflush.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_clflushopt.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_clwb.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_empty.c	33;"	d	file:
flush64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2_noflush.c	33;"	d	file:
flush64b_empty	deps/pmdk/src/libpmem/pmem.h	/^flush64b_empty(const char *addr)$/;"	f
flushAppendOnlyFile	src/aof.c	/^void flushAppendOnlyFile(int force) {$/;"	f
flushSlavesOutputBuffers	src/networking.c	/^void flushSlavesOutputBuffers(void) {$/;"	f
flush_arg	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^struct flush_arg {$/;"	s	file:
flush_cl	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^flush_cl(const void *addr, size_t len)$/;"	f	file:
flush_clflush	deps/pmdk/src/libpmem/x86_64/init.c	/^flush_clflush(const void *addr, size_t len)$/;"	f	file:
flush_clflush_nolog	deps/pmdk/src/libpmem/x86_64/flush.h	/^flush_clflush_nolog(const void *addr, size_t len)$/;"	f
flush_clflushopt	deps/pmdk/src/libpmem/x86_64/init.c	/^flush_clflushopt(const void *addr, size_t len)$/;"	f	file:
flush_clflushopt_nolog	deps/pmdk/src/libpmem/x86_64/flush.h	/^flush_clflushopt_nolog(const void *addr, size_t len)$/;"	f
flush_clwb	deps/pmdk/src/libpmem/x86_64/init.c	/^flush_clwb(const void *addr, size_t len)$/;"	f	file:
flush_clwb_nolog	deps/pmdk/src/libpmem/x86_64/flush.h	/^flush_clwb_nolog(const void *addr, size_t len)$/;"	f
flush_common	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^flush_common(char *target, char *prov_name, char *persist_method,$/;"	f	file:
flush_common_mt	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^flush_common_mt(char *target, char *prov_name, char *persist_method,$/;"	f	file:
flush_dcache	deps/pmdk/src/libpmem/aarch64/init.c	/^flush_dcache(const void *addr, size_t len)$/;"	f	file:
flush_dcache_nolog	deps/pmdk/src/libpmem/aarch64/flush.h	/^flush_dcache_nolog(const void *addr, size_t len)$/;"	f
flush_empty	deps/pmdk/src/libpmem/aarch64/init.c	/^flush_empty(const void *addr, size_t len)$/;"	f	file:
flush_empty	deps/pmdk/src/libpmem/x86_64/init.c	/^flush_empty(const void *addr, size_t len)$/;"	f	file:
flush_empty	deps/pmdk/src/test/obj_memops/obj_memops.c	/^flush_empty(void *ctx, const void *addr, size_t len, unsigned flags)$/;"	f	file:
flush_empty_nolog	deps/pmdk/src/libpmem/pmem.h	/^flush_empty_nolog(const void *addr, size_t len)$/;"	f
flush_fn	deps/pmdk/src/libpmemobj/pmemops.h	/^typedef int (*flush_fn)(void *base, const void *, size_t, unsigned);$/;"	t
flush_fn	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^typedef void *(*flush_fn)(void *arg);$/;"	t	file:
flush_func	deps/pmdk/src/libpmem/pmem.h	/^typedef void (*flush_func)(const void *, size_t);$/;"	t
flush_func	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^typedef int (*flush_func)($/;"	t	file:
flush_local	deps/pmdk/src/libpmemobj/obj.h	/^	flush_local_fn flush_local;	\/* flush function *\/$/;"	m	struct:pmemobjpool
flush_local_fn	deps/pmdk/src/libpmemobj/obj.h	/^typedef void (*flush_local_fn)(const void *, size_t);$/;"	t
flush_msync	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^flush_msync(struct pmem_bench *pmb, void *addr, size_t len)$/;"	f	file:
flush_msync	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^flush_msync(const void *addr, size_t len)$/;"	f	file:
flush_msync_0	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^flush_msync_0(struct pmem_bench *pmb, void *addr, size_t len)$/;"	f	file:
flush_msync_async	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^flush_msync_async(struct pmem_bench *pmb, void *addr, size_t len)$/;"	f	file:
flush_msync_err	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^flush_msync_err(struct pmem_bench *pmb, void *addr, size_t len)$/;"	f	file:
flush_msync_invalid	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^flush_msync_invalid(struct pmem_bench *pmb, void *addr, size_t len)$/;"	f	file:
flush_msync_nodirty	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^flush_msync_nodirty(struct pmem_bench *pmb, void *addr, size_t len)$/;"	f	file:
flush_node_config	src/redis-trib.rb	/^    def flush_node_config$/;"	f	class:ClusterNode
flush_nodes_config	src/redis-trib.rb	/^    def flush_nodes_config$/;"	f	class:RedisTrib.alloc_slots
flush_noop	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^flush_noop(struct pmem_bench *pmb, void *addr, size_t len)$/;"	f	file:
flush_normal	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^flush_normal(RPMEMpool *rpp, size_t off, size_t size, unsigned lane)$/;"	f	file:
flush_persist	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^flush_persist(struct pmem_bench *pmb, void *addr, size_t len)$/;"	f	file:
flush_persist_2M	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^flush_persist_2M(struct pmem_bench *pmb, void *addr, size_t len)$/;"	f	file:
flush_persist_2M_msync_0	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^flush_persist_2M_msync_0(struct pmem_bench *pmb, void *addr, size_t len)$/;"	f	file:
flush_persist_4K	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^flush_persist_4K(struct pmem_bench *pmb, void *addr, size_t len)$/;"	f	file:
flush_persist_4K_msync_0	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^flush_persist_4K_msync_0(struct pmem_bench *pmb, void *addr, size_t len)$/;"	f	file:
flush_relaxed	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^flush_relaxed(RPMEMpool *rpp, size_t off, size_t size, unsigned lane)$/;"	f	file:
flush_stores	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def flush_stores(self, flush_op):$/;"	m	class:CollectingState
flush_thread_arg	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^struct flush_thread_arg {$/;"	s	file:
flush_thread_func	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^flush_thread_func(void *arg)$/;"	f	file:
flushallCommand	src/db.c	/^void flushallCommand(client *c) {$/;"	f
flushdbCommand	src/db.c	/^void flushdbCommand(client *c) {$/;"	f
flushes_per_drain	deps/pmdk/src/benchmarks/rpmem.cpp	/^	int flushes_per_drain; \/* # of flushes between drains *\/$/;"	m	struct:rpmem_args	file:
fmode	deps/pmdk/src/benchmarks/benchmark.hpp	/^	mode_t fmode;		 \/* test file's permissions *\/$/;"	m	struct:benchmark_args
fmode	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	unsigned fmode;$/;"	m	struct:ds_context	file:
fn	deps/hiredis/async.h	/^    redisCallbackFn *fn;$/;"	m	struct:redisCallback
fn	deps/hiredis/hiredis.h	/^    redisReplyObjectFunctions *fn;$/;"	m	struct:redisReader
fn	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^	uint64_t fn;	\/* F_{n} *\/$/;"	m	struct:fibo_t	file:
fn1	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^	uint64_t fn1;	\/* F_{n + 1} *\/$/;"	m	struct:fibo_t	file:
fn_alloc	deps/pmdk/src/examples/libpmemobj/array/array.c	/^typedef PMEMoid (*fn_alloc)(size_t size);$/;"	t	file:
fn_free	deps/pmdk/src/examples/libpmemobj/array/array.c	/^typedef void (*fn_free)(struct array_info *info);$/;"	t	file:
fn_init	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	fn_init_t fn_init;$/;"	m	struct:obj_bench	file:
fn_init_t	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^typedef int (*fn_init_t)(struct worker_info *worker, size_t n_elm,$/;"	t	file:
fn_lock	deps/pmdk/src/test/obj_locks/obj_locks.c	/^typedef void *(*fn_lock)(void *arg);$/;"	t	file:
fn_malloc	deps/pmdk/src/common/alloc.c	/^Malloc_func fn_malloc = malloc;$/;"	v
fn_num_t	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^typedef size_t (*fn_num_t)(size_t idx);$/;"	t	file:
fn_num_t	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^typedef size_t (*fn_num_t)(size_t idx);$/;"	t	file:
fn_off	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	fn_os_off_t fn_off; \/* returns offset for proper operation *\/$/;"	m	struct:obj_tx_bench	file:
fn_op	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	fn_op_t *fn_op;$/;"	m	struct:obj_tx_bench	file:
fn_op	deps/pmdk/src/examples/libpmemobj/array/array.c	/^typedef void (*fn_op)(int argc, char *argv[]);$/;"	t	file:
fn_op	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^typedef void (*fn_op)(int id);$/;"	t	file:
fn_op	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^typedef void (*fn_op)(PMEMobjpool *pop, TOID(struct test_obj) *obj);$/;"	t	file:
fn_op_t	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^typedef int (*fn_op_t)(struct obj_tx_bench *obj_bench,$/;"	t	file:
fn_os_off_t	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^typedef struct offset (*fn_os_off_t)(struct obj_tx_bench *obj_bench,$/;"	t	typeref:struct:fn_os_off_t	file:
fn_parse_t	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^typedef enum op_mode (*fn_parse_t)(const char *arg);$/;"	t	typeref:enum:fn_parse_t	file:
fn_position	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	fn_position_t fn_position;$/;"	m	struct:obj_bench	file:
fn_position_t	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^typedef struct element (*fn_position_t)(struct obj_worker *obj_worker,$/;"	t	typeref:struct:fn_position_t	file:
fn_positions	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	fn_position_t *fn_positions; \/* element access functions *\/$/;"	m	struct:obj_worker	file:
fn_print	deps/pmdk/src/examples/libpmemobj/array/array.c	/^typedef void (*fn_print)(struct array_info *info);$/;"	t	file:
fn_realloc	deps/pmdk/src/common/alloc.c	/^Realloc_func fn_realloc = realloc;$/;"	v
fn_realloc	deps/pmdk/src/examples/libpmemobj/array/array.c	/^typedef PMEMoid (*fn_realloc)(PMEMoid *info, size_t prev_size, size_t size);$/;"	t	file:
fn_size	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	fn_size_t fn_size;$/;"	m	struct:pobj_bench	file:
fn_size_t	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^typedef size_t (*fn_size_t)(struct pobj_bench *ob, size_t idx);$/;"	t	file:
fn_type_num	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	fn_type_num_t fn_type_num;$/;"	m	struct:obj_bench	file:
fn_type_num	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	fn_type_num_t fn_type_num;$/;"	m	struct:pobj_bench	file:
fn_type_num	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	fn_type_num_t fn_type_num;$/;"	m	struct:obj_tx_bench	file:
fn_type_num_t	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^typedef size_t (*fn_type_num_t)(size_t worker_idx, size_t op_idx);$/;"	t	file:
fn_type_num_t	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^typedef size_t (*fn_type_num_t)(struct pobj_bench *ob, size_t worker_idx,$/;"	t	file:
fn_type_num_t	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^typedef size_t (*fn_type_num_t)(struct obj_tx_bench *obj_bench,$/;"	t	file:
fn_void	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^typedef void (*fn_void)();$/;"	t	file:
fname	deps/pmdk/src/benchmarks/benchmark.hpp	/^	const char *fname;       \/* path to test file *\/$/;"	m	struct:benchmark_args
fname	deps/pmdk/src/libpmempool/pool.h	/^	char *fname;$/;"	m	struct:pool_set_file
fname	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	const char *fname;		\/* pool's file name *\/$/;"	m	struct:pocli	file:
fname	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	char *fname;$/;"	m	struct:pmemspoil	file:
fname	deps/pmdk/src/test/tools/pmemwrite/write.c	/^	char *fname;	\/* file name *\/$/;"	m	struct:pmemwrite	file:
fname	deps/pmdk/src/tools/pmempool/check.c	/^	char *fname;		\/* file name *\/$/;"	m	struct:pmempool_check_context	file:
fname	deps/pmdk/src/tools/pmempool/common.h	/^	char *fname;$/;"	m	struct:pool_set_file
fname	deps/pmdk/src/tools/pmempool/create.c	/^	char *fname;$/;"	m	struct:pmempool_create	file:
fname	deps/pmdk/src/tools/pmempool/dump.c	/^	char *fname;$/;"	m	struct:pmempool_dump	file:
fname	deps/pmdk/src/tools/pmempool/feature.c	/^	const char *fname;$/;"	m	struct:feature_ctx	file:
fnames	deps/lua/src/liolib.c	/^static const char *const fnames[] = {"input", "output"};$/;"	v	file:
foo	deps/jemalloc/configure	/^		foo();$/;"	f
foo	deps/lua/doc/manual.html	/^     function foo (a)$/;"	f
foo	deps/pmdk/src/examples/libpmemobj/slab_allocator/main.c	/^struct foo {$/;"	s	file:
foo	deps/pmdk/src/test/obj_action/obj_action.c	/^struct foo {$/;"	s	file:
foo	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^struct foo {$/;"	s	file:
foo	deps/pmdk/src/test/obj_layout/obj_layout.c	/^struct foo {$/;"	s	file:
foo	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^struct foo {$/;"	s	file:
foo	deps/pmdk/src/test/obj_pmemcheck/obj_pmemcheck.c	/^struct foo {$/;"	s	file:
foo	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^struct foo {$/;"	s	file:
foo	deps/pmdk/src/test/obj_recovery/obj_recovery.c	/^	TOID(struct foo) foo;$/;"	m	struct:root	file:
foo	deps/pmdk/src/test/obj_recovery/obj_recovery.c	/^struct foo {$/;"	s	file:
foo	deps/pmdk/src/test/obj_recreate/obj_recreate.c	/^	TOID(struct foo) foo;$/;"	m	struct:root	file:
foo	deps/pmdk/src/test/obj_recreate/obj_recreate.c	/^struct foo {$/;"	s	file:
foo	deps/pmdk/src/test/util_vec/util_vec.c	/^	int foo;$/;"	m	struct:test	file:
foo	deps/pmdk/src/test/util_vecq/util_vecq.c	/^	int foo;$/;"	m	struct:test	file:
foo	deps/pmdk/utils/docker/test_package/test_package.c	/^	int foo;$/;"	m	struct:my_root	file:
foo_el	deps/pmdk/src/examples/libpmemobj/lists.c	/^struct foo_el {$/;"	s	file:
foo_large	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^struct foo_large {$/;"	s	file:
foo_list	deps/pmdk/src/examples/libpmemobj/lists.c	/^	POBJ_LIST_HEAD(foo, struct foo_el) foo_list;$/;"	m	struct:listbase	file:
foop	deps/pmdk/src/examples/libpmemobj/slab_allocator/main.c	/^	TOID(struct foo) foop;$/;"	m	struct:root	file:
forbody	deps/lua/src/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isnum) {$/;"	f	file:
force	deps/pmdk/src/tools/pmempool/create.c	/^	int force;$/;"	m	struct:pmempool_create	file:
force	deps/pmdk/src/tools/pmempool/info.h	/^	bool force;		\/* force parsing pool *\/$/;"	m	struct:pmempool_info_args
force	deps/pmdk/src/tools/pmempool/rm.c	/^static int force;$/;"	v	file:
force	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	/^	bool force;$/;"	m	struct:rpmemd_config
force	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^	int force;$/;"	m	struct:rm_cb_args	file:
forceCommandPropagation	src/server.c	/^void forceCommandPropagation(client *c, int flags) {$/;"	f
force_cancel_loop	src/redis-cli.c	/^static volatile sig_atomic_t force_cancel_loop = 0;$/;"	v	file:
force_inline	deps/pmdk/src/common/util.h	129;"	d
force_inline	deps/pmdk/src/common/util.h	132;"	d
force_kill_all_servers	tests/test_helper.tcl	/^proc force_kill_all_servers {} {$/;"	p
force_ret	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^	int force_ret;$/;"	m	struct:req_cb_arg
foreach	deps/lua/src/ltablib.c	/^static int foreach (lua_State *L) {$/;"	f	file:
foreach	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	int(*foreach)(PMEMobjpool *pop, TOID(struct map) map,$/;"	m	struct:map_ops
foreach_instance_id	tests/instances.tcl	/^proc foreach_instance_id {instances idvar code} {$/;"	p
foreach_redis_id	tests/instances.tcl	/^proc foreach_redis_id {idvar code} {$/;"	p
foreach_sentinel_id	tests/instances.tcl	/^proc foreach_sentinel_id {idvar code} {$/;"	p
foreachi	deps/lua/src/ltablib.c	/^static int foreachi (lua_State *L) {$/;"	f	file:
forked	src/scripting.c	/^    int forked; \/* Is this a fork()ed debugging session? *\/$/;"	m	struct:ldbState	file:
forlist	deps/lua/src/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:
formatCommand	tests/support/util.tcl	/^proc formatCommand {args} {$/;"	p
format_command	tests/unit/quit.tcl	/^    proc format_command {args} {$/;"	p
format_license	deps/pmdk/utils/check_license/check-license.c	/^format_license(char *license, size_t length)$/;"	f	file:
fornum	deps/lua/src/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:
forstat	deps/lua/src/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:
forward	src/server.h	/^        struct zskiplistNode *forward;$/;"	m	struct:zskiplistNode::zskiplistLevel	typeref:struct:zskiplistNode::zskiplistLevel::zskiplistNode
fp	deps/pmdk/src/test/pmreorder_flushes/pmreorder_flushes.c	/^static FILE *fp;$/;"	v	file:
fp	src/rio.h	/^            FILE *fp;$/;"	m	struct:_rio::__anon179::__anon181
fpath	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^	const char *fpath;$/;"	m	struct:bbtcreate_options	file:
fpconv_g_fmt	deps/lua/src/fpconv.c	/^int fpconv_g_fmt(char *str, double num, int precision)$/;"	f
fpconv_init	deps/lua/src/fpconv.c	/^void fpconv_init()$/;"	f
fpconv_init	deps/lua/src/fpconv.h	/^static inline void fpconv_init()$/;"	f
fpconv_strtod	deps/lua/src/fpconv.c	/^double fpconv_strtod(const char *nptr, char **endptr)$/;"	f
fpconv_update_locale	deps/lua/src/fpconv.c	/^static void fpconv_update_locale()$/;"	f	file:
fptr	src/server.h	/^    unsigned char *fptr, *vptr;$/;"	m	struct:__anon164
frealloc	deps/lua/src/lstate.h	/^  lua_Alloc frealloc;  \/* function to reallocate memory *\/$/;"	m	struct:global_State
free	deps/jemalloc/include/jemalloc/jemalloc.h	330;"	d
free	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	19;"	d
free	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	19;"	d
free	deps/lua/src/lua_cmsgpack.c	/^    size_t len, free;$/;"	m	struct:mp_buf	file:
free	src/adlist.h	/^    void (*free)(void *ptr);$/;"	m	struct:list
free	src/aof.c	/^    unsigned long used, free;$/;"	m	struct:aofrwblock	file:
free	src/zmalloc.c	62;"	d	file:
free	src/zmalloc.c	67;"	d	file:
freeAllClients	src/redis-benchmark.c	/^static void freeAllClients(void) {$/;"	f	file:
freeClient	src/networking.c	/^void freeClient(client *c) {$/;"	f
freeClient	src/redis-benchmark.c	/^static void freeClient(client c) {$/;"	f	file:
freeClientArgv	src/networking.c	/^static void freeClientArgv(client *c) {$/;"	f	file:
freeClientAsync	src/networking.c	/^void freeClientAsync(client *c) {$/;"	f
freeClientMultiState	src/multi.c	/^void freeClientMultiState(client *c) {$/;"	f
freeClientsInAsyncFreeQueue	src/networking.c	/^void freeClientsInAsyncFreeQueue(void) {$/;"	f
freeClusterLink	src/cluster.c	/^void freeClusterLink(clusterLink *link) {$/;"	f
freeClusterNode	src/cluster.c	/^void freeClusterNode(clusterNode *n) {$/;"	f
freeCompletions	deps/linenoise/linenoise.c	/^static void freeCompletions(linenoiseCompletions *lc) {$/;"	f	file:
freeFakeClient	src/aof.c	/^void freeFakeClient(struct client *c) {$/;"	f
freeFakeClientArgv	src/aof.c	/^void freeFakeClientArgv(struct client *c) {$/;"	f
freeHashObject	src/object.c	/^void freeHashObject(robj *o) {$/;"	f
freeHintsCallback	deps/linenoise/linenoise.c	/^static linenoiseFreeHintsCallback *freeHintsCallback = NULL;$/;"	v	file:
freeHintsCallback	src/redis-cli.c	/^static void freeHintsCallback(void *ptr) {$/;"	f	file:
freeHistory	deps/linenoise/linenoise.c	/^static void freeHistory(void) {$/;"	f	file:
freeListObject	src/object.c	/^void freeListObject(robj *o) {$/;"	f
freeMemoryIfNeeded	src/server.c	/^int freeMemoryIfNeeded(void) {$/;"	f
freeObject	deps/hiredis/hiredis.h	/^    void (*freeObject)(void*);$/;"	m	struct:redisReplyObjectFunctions
freePubsubPattern	src/pubsub.c	/^void freePubsubPattern(void *p) {$/;"	f
freeReplicationBacklog	src/replication.c	/^void freeReplicationBacklog(void) {$/;"	f
freeReplyObject	deps/hiredis/hiredis.c	/^void freeReplyObject(void *reply) {$/;"	f
freeSetObject	src/object.c	/^void freeSetObject(robj *o) {$/;"	f
freeSparklineSequence	src/sparkline.c	/^void freeSparklineSequence(struct sequence *seq) {$/;"	f
freeStringObject	src/object.c	/^void freeStringObject(robj *o) {$/;"	f
freeStringObjectPM	src/object.c	/^void freeStringObjectPM(robj *o) {$/;"	f
freeZsetObject	src/object.c	/^void freeZsetObject(robj *o) {$/;"	f
free_array	deps/pmdk/src/examples/libpmemobj/array/array.c	/^static fn_free free_array[] = {NULL, free_int, free_pmemoid, free_toid};$/;"	v	file:
free_dram	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^free_dram(struct obj_tx_bench *obj_bench, struct worker_info *worker,$/;"	f	file:
free_info	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^struct free_info {$/;"	s	file:
free_int	deps/pmdk/src/examples/libpmemobj/array/array.c	/^free_int(struct array_info *info)$/;"	f	file:
free_leaf	deps/pmdk/src/libpmemobj/critnib.c	/^free_leaf(struct critnib *__restrict c, struct critnib_leaf *__restrict k)$/;"	f	file:
free_node	deps/pmdk/src/libpmemobj/critnib.c	/^free_node(struct critnib *__restrict c, struct critnib_node *__restrict n)$/;"	f	file:
free_on_abort	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	VEC(, struct pocli_args *) free_on_abort;$/;"	m	struct:pocli_ctx	file:
free_onabort	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^free_onabort(PMEMobjpool *pop, enum pobj_tx_stage stage, void *arg)$/;"	f	file:
free_oncommit	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^free_oncommit(PMEMobjpool *pop, enum pobj_tx_stage stage, void *arg)$/;"	f	file:
free_op	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static fn_op_t free_op[] = {free_dram, free_tx, free_pmem, no_free};$/;"	v	file:
free_pmem	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^free_pmem(struct obj_tx_bench *obj_bench, struct worker_info *worker,$/;"	f	file:
free_pmem	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^free_pmem(struct free_info *f, TOID(struct pmem_root) root)$/;"	f	file:
free_pmemoid	deps/pmdk/src/examples/libpmemobj/array/array.c	/^free_pmemoid(struct array_info *info)$/;"	f	file:
free_pool	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^free_pool(PMEMoid *oids, size_t noids)$/;"	f	file:
free_pool	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^free_pool(struct pool_entry *pool)$/;"	f	file:
free_space	deps/pmdk/src/libpmemobj/recycler.h	/^	uint32_t free_space;$/;"	m	struct:recycler_element
free_toid	deps/pmdk/src/examples/libpmemobj/array/array.c	/^free_toid(struct array_info *info)$/;"	f	file:
free_tx	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^free_tx(struct obj_tx_bench *obj_bench, struct worker_info *worker, size_t idx)$/;"	f	file:
free_worker	deps/pmdk/src/benchmarks/benchmark.hpp	/^	void (*free_worker)(struct benchmark *bench,$/;"	m	struct:benchmark_info
free_worker	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^free_worker(struct obj_worker *obj_worker)$/;"	f	file:
free_worker	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^free_worker(void *arg)$/;"	f	file:
free_worker_items	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^free_worker_items(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
free_worker_list	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^free_worker_list(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
freebsd_exclude	deps/pmdk/src/test/unittest/utils.py	/^def freebsd_exclude(tc):$/;"	f
freebsd_only	deps/pmdk/src/test/unittest/utils.py	/^def freebsd_only(tc):$/;"	f
freed	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^static int freed = 0;$/;"	v	file:
freeexp	deps/lua/src/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:
freeobj	deps/lua/src/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:
freereg	deps/lua/src/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:
freereg	deps/lua/src/lparser.h	/^  int freereg;  \/* first free register *\/$/;"	m	struct:FuncState
frees	deps/pmdk/src/test/set_funcs/set_funcs.c	/^	int frees;$/;"	m	struct:counters	file:
freestack	deps/lua/src/lstate.c	/^static void freestack (lua_State *L, lua_State *L1) {$/;"	f	file:
friends	src/redis-trib.rb	/^    def friends$/;"	f	class:ClusterNode
fromstate	deps/lua/src/lstate.c	28;"	d	file:
front	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	size_t front; \/* position of the first entry *\/$/;"	m	struct:queue	file:
fs	deps/lua/src/llex.h	/^  struct FuncState *fs;  \/* `FuncState' is private to the parser *\/$/;"	m	struct:LexState	typeref:struct:LexState::FuncState
fs	deps/pmdk/src/common/fs_posix.c	/^struct fs {$/;"	s	file:
fs	deps/pmdk/src/common/fs_windows.c	/^struct fs {$/;"	s	file:
fs	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    fs = t.Pmem$/;"	v	class:ObjDefragAdvancedMt
fs	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    fs = t.Pmem$/;"	v	class:TEST2
fs	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    fs = t.Pmem$/;"	v	class:BASE
fs	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    fs = t.Pmem$/;"	v	class:TEST2
fs	deps/pmdk/src/test/pmem_has_auto_flush/mocks_posix.c	/^struct fs {$/;"	s	file:
fs	deps/pmdk/src/test/scope/TESTS.py	/^    fs = t.Non$/;"	v	class:Common
fs_delete	deps/pmdk/src/common/fs_posix.c	/^fs_delete(struct fs *f)$/;"	f
fs_delete	deps/pmdk/src/common/fs_windows.c	/^fs_delete(struct fs *f)$/;"	f
fs_entry	deps/pmdk/src/common/fs.h	/^struct fs_entry {$/;"	s
fs_entry_type	deps/pmdk/src/common/fs.h	/^enum fs_entry_type {$/;"	g
fs_new	deps/pmdk/src/common/fs_posix.c	/^fs_new(const char *path)$/;"	f
fs_new	deps/pmdk/src/common/fs_windows.c	/^fs_new(const char *path)$/;"	f
fs_read	deps/pmdk/src/common/fs_posix.c	/^fs_read(struct fs *f)$/;"	f
fs_read	deps/pmdk/src/common/fs_windows.c	/^fs_read(struct fs *f)$/;"	f
fsize	deps/pmdk/src/benchmarks/benchmark.hpp	/^	size_t fsize;		 \/* size of test file *\/$/;"	m	struct:benchmark_args
fsize	deps/pmdk/src/benchmarks/blk.cpp	/^	size_t fsize;   \/* requested file size *\/$/;"	m	struct:blk_args	file:
fsize	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	size_t fsize;      \/* The size of the allocated PMEM *\/$/;"	m	struct:pmem_bench	file:
fsize	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	size_t fsize;$/;"	m	struct:pmem_bench	file:
fsize	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	size_t fsize;		   \/* file size *\/$/;"	m	struct:memset_bench	file:
fstate_t	deps/pmdk/src/libpmempool/feature.c	/^} fstate_t;$/;"	t	typeref:enum:__anon95	file:
ft	deps/pmdk/src/common/fs_posix.c	/^	FTS *ft;$/;"	m	struct:fs	file:
ft	deps/pmdk/src/test/pmem_has_auto_flush/mocks_posix.c	/^	FTS *ft;$/;"	m	struct:fs	file:
ftruncate	deps/pmdk/src/test/pmem_map_file/mocks_posix.c	/^ftruncate(int fd, os_off_t len)$/;"	f
full	src/redis-cli.c	/^    sds full;$/;"	m	struct:__anon168	file:
fun	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	/^typedef int (*fun)(void *, const char *, void *);$/;"	t	file:
func	deps/lua/src/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:
func	deps/lua/src/lapi.c	/^  lua_CFunction func;$/;"	m	struct:CCallS	file:
func	deps/lua/src/lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg
func	deps/lua/src/lstate.h	/^  StkId func;  \/* function index in the stack *\/$/;"	m	struct:CallInfo
func	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	int (*func)(struct benchmark *bench, struct worker_info *info);$/;"	m	struct:benchmark_worker
func	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^	int (*func)(char *, struct examine_ctx *, off_t);$/;"	m	struct:examine	file:
func	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^	char *(*func)(char *, struct search_ctx *);$/;"	m	struct:search	file:
func	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^	int (*func)(char *, struct pmem_context *, int, char *[]);$/;"	m	struct:command	file:
func	deps/pmdk/src/libpmempool/check.c	/^	void (*func)(PMEMpoolcheck *);$/;"	m	struct:step	file:
func	deps/pmdk/src/libpmempool/check_write.c	/^	int (*func)(PMEMpoolcheck *, location *loc);$/;"	m	struct:step	file:
func	deps/pmdk/src/test/obj_debug/obj_debug.c	/^typedef	void (*func)(PMEMobjpool *pop, void *sync, void *cond);$/;"	t	file:
func	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	pocli_cmd_fn func;	\/* command's entry point *\/$/;"	m	struct:pocli_cmd	file:
func	deps/pmdk/src/test/unittest/unittest.h	/^	int (*func)(const struct test_case *tc, int argc, char *argv[]);$/;"	m	struct:test_case
func	deps/pmdk/src/tools/pmempool/pmempool.c	/^	int (*func)(const char *, int, char *[]);$/;"	m	struct:command	file:
func1	deps/jemalloc/test/src/SFMT.c	/^static uint32_t func1(uint32_t x) {$/;"	f	file:
func2	deps/jemalloc/test/src/SFMT.c	/^static uint32_t func2(uint32_t x) {$/;"	f	file:
func_dest	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	offset_fn func_dest;$/;"	m	struct:pmem_bench	file:
func_mode	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	uint64_t (*func_mode)(struct pmem_bench *pmb, uint64_t index);$/;"	m	struct:op_mode	file:
func_op	deps/pmdk/src/benchmarks/log.cpp	/^	int (*func_op)(struct benchmark *, struct operation_info *);$/;"	m	struct:log_bench	file:
func_op	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	int (*func_op)(struct pmem_bench *pmb, void *addr, size_t len);$/;"	m	struct:op	file:
func_op	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	int (*func_op)(struct pmem_bench *pmb, void *addr, size_t len);$/;"	m	struct:pmem_bench	file:
func_op	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	int (*func_op)(void *dest, void *source, size_t len);$/;"	m	struct:pmem_bench	file:
func_op	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	operation_fn func_op;      \/* operation function *\/$/;"	m	struct:memset_bench	file:
func_src	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	offset_fn func_src;$/;"	m	struct:pmem_bench	file:
funcargs	deps/lua/src/lparser.c	/^static void funcargs (LexState *ls, expdesc *f) {$/;"	f	file:
funcinfo	deps/lua/src/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:
funcname	deps/lua/src/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:
funcstat	deps/lua/src/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:
function_event	deps/lua/doc/manual.html	/^     function function_event (func, ...)$/;"	f
functions	deps/lua/doc/contents.html	/^<H3><A NAME="functions">Lua functions<\/A><\/H3>$/;"	a
g	deps/lua/doc/manual.html	/^     function g(a, b, ...) end$/;"	f
g	deps/lua/src/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:
g	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^	int g;$/;"	m	struct:fields	file:
g_iofile	deps/lua/src/liolib.c	/^static int g_iofile (lua_State *L, int f, const char *mode) {$/;"	f	file:
g_read	deps/lua/src/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:
g_write	deps/lua/src/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:
game_event	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^enum game_event {$/;"	g	file:
game_init	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^game_init(PMEMobjpool *pop)$/;"	f
game_loop	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^game_loop(int input)$/;"	f	file:
game_loop	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^game_loop(PMEMobjpool *pop, TOID(struct root) r)$/;"	f	file:
game_state	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^struct game_state {$/;"	s	file:
gc	deps/lua/src/lobject.h	/^  GCObject *gc;$/;"	m	union:__anon23
gc_event	deps/lua/doc/manual.html	/^     function gc_event (udata)$/;"	f
gc_ticker	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	ticker_t	gc_ticker;	\/* Drives incremental GC. *\/$/;"	m	struct:tcache_s
gcdept	deps/lua/src/lstate.h	/^  lu_mem gcdept;  \/* how much GC is `behind schedule' *\/$/;"	m	struct:global_State
gch	deps/lua/src/lstate.h	/^  GCheader gch;$/;"	m	union:GCObject
gclist	deps/lua/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Proto
gclist	deps/lua/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Table
gclist	deps/lua/src/lstate.h	/^  GCObject *gclist;$/;"	m	struct:lua_State
gco2cl	deps/lua/src/lstate.h	153;"	d
gco2h	deps/lua/src/lstate.h	154;"	d
gco2p	deps/lua/src/lstate.h	155;"	d
gco2th	deps/lua/src/lstate.h	159;"	d
gco2ts	deps/lua/src/lstate.h	150;"	d
gco2u	deps/lua/src/lstate.h	152;"	d
gco2uv	deps/lua/src/lstate.h	156;"	d
gcpause	deps/lua/src/lstate.h	/^  int gcpause;  \/* size of pause between successive GCs *\/$/;"	m	struct:global_State
gcstate	deps/lua/src/lstate.h	/^  lu_byte gcstate;  \/* state of garbage collector *\/$/;"	m	struct:global_State
gcstepmul	deps/lua/src/lstate.h	/^  int gcstepmul;  \/* GC `granularity' *\/$/;"	m	struct:global_State
gctm	deps/lua/src/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:
gctx	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_gctx_t		*gctx;$/;"	m	struct:prof_tctx_s
gctx_locks	deps/jemalloc/src/prof.c	/^static malloc_mutex_t	*gctx_locks;$/;"	v	file:
gcvalue	deps/lua/src/lobject.h	91;"	d
gen 	deps/lua/test/sieve.lua	/^function gen (n)$/;"	f
genClientPeerId	src/networking.c	/^void genClientPeerId(client *client, char *peerid,$/;"	f
genRedisInfoString	src/server.c	/^sds genRedisInfoString(char *section) {$/;"	f
gen_rand32	deps/jemalloc/test/src/SFMT.c	/^uint32_t gen_rand32(sfmt_t *ctx) {$/;"	f
gen_rand32_range	deps/jemalloc/test/src/SFMT.c	/^uint32_t gen_rand32_range(sfmt_t *ctx, uint32_t limit) {$/;"	f
gen_rand64	deps/jemalloc/test/src/SFMT.c	/^uint64_t gen_rand64(sfmt_t *ctx) {$/;"	f
gen_rand64_range	deps/jemalloc/test/src/SFMT.c	/^uint64_t gen_rand64_range(sfmt_t *ctx, uint64_t limit) {$/;"	f
gen_rand_all	deps/jemalloc/test/include/test/SFMT-alti.h	/^JEMALLOC_INLINE void gen_rand_all(sfmt_t *ctx) {$/;"	f
gen_rand_all	deps/jemalloc/test/include/test/SFMT-sse2.h	/^JEMALLOC_INLINE void gen_rand_all(sfmt_t *ctx) {$/;"	f
gen_rand_all	deps/jemalloc/test/src/SFMT.c	/^JEMALLOC_INLINE_C void gen_rand_all(sfmt_t *ctx) {$/;"	f
gen_rand_array	deps/jemalloc/test/include/test/SFMT-alti.h	/^JEMALLOC_INLINE void gen_rand_array(sfmt_t *ctx, w128_t *array, int size) {$/;"	f
gen_rand_array	deps/jemalloc/test/include/test/SFMT-sse2.h	/^JEMALLOC_INLINE void gen_rand_array(sfmt_t *ctx, w128_t *array, int size) {$/;"	f
gen_rand_array	deps/jemalloc/test/src/SFMT.c	/^JEMALLOC_INLINE_C void gen_rand_array(sfmt_t *ctx, w128_t *array, int size) {$/;"	f
gen_write_load	tests/helpers/gen_write_load.tcl	/^proc gen_write_load {host port seconds} {$/;"	p
generate_commands	utils/generate-command-help.rb	/^def generate_commands$/;"	f	class:generate_groups
generate_groups	utils/generate-command-help.rb	/^def generate_groups$/;"	f
generate_sequence	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def generate_sequence(self, store_list):$/;"	m	class:AccumulativeReorderEngine
generate_sequence	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def generate_sequence(self, store_list):$/;"	m	class:AccumulativeReverseReorderEngine
generate_sequence	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def generate_sequence(self, store_list):$/;"	m	class:FilterPartialReorderEngine
generate_sequence	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def generate_sequence(self, store_list):$/;"	m	class:FullReorderEngine
generate_sequence	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def generate_sequence(self, store_list):$/;"	m	class:NoCheckerEngine
generate_sequence	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def generate_sequence(self, store_list):$/;"	m	class:NoReorderEngine
generate_sequence	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def generate_sequence(self, store_list):$/;"	m	class:RandomPartialReorderEngine
generate_sequence	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^    def generate_sequence(self, store_list):$/;"	m	class:SlicePartialReorderEngine
generatefib 	deps/lua/test/fibfor.lua	/^function generatefib (n)$/;"	f
genericHgetallCommand	src/t_hash.c	/^void genericHgetallCommand(client *c, int flags) {$/;"	f
genericZrangebylexCommand	src/t_zset.c	/^void genericZrangebylexCommand(client *c, int reverse) {$/;"	f
genericZrangebyscoreCommand	src/t_zset.c	/^void genericZrangebyscoreCommand(client *c, int reverse) {$/;"	f
generic_reader	deps/lua/src/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
genrand_real1	deps/jemalloc/test/include/test/SFMT.h	/^JEMALLOC_INLINE double genrand_real1(sfmt_t *ctx)$/;"	f
genrand_real2	deps/jemalloc/test/include/test/SFMT.h	/^JEMALLOC_INLINE double genrand_real2(sfmt_t *ctx)$/;"	f
genrand_real3	deps/jemalloc/test/include/test/SFMT.h	/^JEMALLOC_INLINE double genrand_real3(sfmt_t *ctx)$/;"	f
genrand_res53	deps/jemalloc/test/include/test/SFMT.h	/^JEMALLOC_INLINE double genrand_res53(sfmt_t *ctx) $/;"	f
genrand_res53_mix	deps/jemalloc/test/include/test/SFMT.h	/^JEMALLOC_INLINE double genrand_res53_mix(sfmt_t *ctx) $/;"	f
genstr	src/quicklist.c	/^static char *genstr(char *prefix, int i) {$/;"	f	file:
geoAppendIfWithinRadius	src/geo.c	/^int geoAppendIfWithinRadius(geoArray *ga, double lon, double lat, double radius, double score, sds member) {$/;"	f
geoArray	src/geo.h	/^typedef struct geoArray {$/;"	s
geoArray	src/geo.h	/^} geoArray;$/;"	t	typeref:struct:geoArray
geoArrayAppend	src/geo.c	/^geoPoint *geoArrayAppend(geoArray *ga) {$/;"	f
geoArrayCreate	src/geo.c	/^geoArray *geoArrayCreate(void) {$/;"	f
geoArrayFree	src/geo.c	/^void geoArrayFree(geoArray *ga) {$/;"	f
geoGetPointsInRange	src/geo.c	/^int geoGetPointsInRange(robj *zobj, double min, double max, double lon, double lat, double radius, geoArray *ga) {$/;"	f
geoPoint	src/geo.h	/^typedef struct geoPoint {$/;"	s
geoPoint	src/geo.h	/^} geoPoint;$/;"	t	typeref:struct:geoPoint
geo_degrad	tests/unit/geo.tcl	/^proc geo_degrad deg {expr {$deg*atan(1)*8\/360}}$/;"	p
geo_distance	tests/unit/geo.tcl	/^proc geo_distance {lon1d lat1d lon2d lat2d} {$/;"	p
geo_random_point	tests/unit/geo.tcl	/^proc geo_random_point {lonvar latvar} {$/;"	p
geoaddCommand	src/geo.c	/^void geoaddCommand(client *c) {$/;"	f
geodistCommand	src/geo.c	/^void geodistCommand(client *c) {$/;"	f
geohashAlign52Bits	deps/geohash-int/geohash_helper.c	/^GeoHashFix52Bits geohashAlign52Bits(const GeoHashBits hash) {$/;"	f
geohashBoundingBox	deps/geohash-int/geohash_helper.c	/^int geohashBoundingBox(double longitude, double latitude, double radius_meters,$/;"	f
geohashCommand	src/geo.c	/^void geohashCommand(client *c) {$/;"	f
geohashDecode	deps/geohash-int/geohash.c	/^int geohashDecode(const GeoHashRange long_range, const GeoHashRange lat_range,$/;"	f
geohashDecodeAreaToLongLat	deps/geohash-int/geohash.c	/^int geohashDecodeAreaToLongLat(const GeoHashArea *area, double *xy) {$/;"	f
geohashDecodeToLongLatType	deps/geohash-int/geohash.c	/^int geohashDecodeToLongLatType(const GeoHashBits hash, double *xy) {$/;"	f
geohashDecodeToLongLatWGS84	deps/geohash-int/geohash.c	/^int geohashDecodeToLongLatWGS84(const GeoHashBits hash, double *xy) {$/;"	f
geohashDecodeType	deps/geohash-int/geohash.c	/^int geohashDecodeType(const GeoHashBits hash, GeoHashArea *area) {$/;"	f
geohashDecodeWGS84	deps/geohash-int/geohash.c	/^int geohashDecodeWGS84(const GeoHashBits hash, GeoHashArea *area) {$/;"	f
geohashEncode	deps/geohash-int/geohash.c	/^int geohashEncode(const GeoHashRange *long_range, const GeoHashRange *lat_range,$/;"	f
geohashEncodeType	deps/geohash-int/geohash.c	/^int geohashEncodeType(double longitude, double latitude, uint8_t step, GeoHashBits *hash) {$/;"	f
geohashEncodeWGS84	deps/geohash-int/geohash.c	/^int geohashEncodeWGS84(double longitude, double latitude, uint8_t step,$/;"	f
geohashEstimateStepsByRadius	deps/geohash-int/geohash_helper.c	/^uint8_t geohashEstimateStepsByRadius(double range_meters, double lat) {$/;"	f
geohashGetAreasByRadius	deps/geohash-int/geohash_helper.c	/^GeoHashRadius geohashGetAreasByRadius(double longitude, double latitude, double radius_meters) {$/;"	f
geohashGetAreasByRadiusWGS84	deps/geohash-int/geohash_helper.c	/^GeoHashRadius geohashGetAreasByRadiusWGS84(double longitude, double latitude,$/;"	f
geohashGetCoordRange	deps/geohash-int/geohash.c	/^void geohashGetCoordRange(GeoHashRange *long_range, GeoHashRange *lat_range) {$/;"	f
geohashGetDistance	deps/geohash-int/geohash_helper.c	/^double geohashGetDistance(double lon1d, double lat1d, double lon2d, double lat2d) {$/;"	f
geohashGetDistanceIfInRadius	deps/geohash-int/geohash_helper.c	/^int geohashGetDistanceIfInRadius(double x1, double y1,$/;"	f
geohashGetDistanceIfInRadiusWGS84	deps/geohash-int/geohash_helper.c	/^int geohashGetDistanceIfInRadiusWGS84(double x1, double y1, double x2,$/;"	f
geohashNeighbors	deps/geohash-int/geohash.c	/^void geohashNeighbors(const GeoHashBits *hash, GeoHashNeighbors *neighbors) {$/;"	f
geohash_move_x	deps/geohash-int/geohash.c	/^static void geohash_move_x(GeoHashBits *hash, int8_t d) {$/;"	f	file:
geohash_move_y	deps/geohash-int/geohash.c	/^static void geohash_move_y(GeoHashBits *hash, int8_t d) {$/;"	f	file:
geoposCommand	src/geo.c	/^void geoposCommand(client *c) {$/;"	f
georadiusByMemberCommand	src/geo.c	/^void georadiusByMemberCommand(client *c) {$/;"	f
georadiusCommand	src/geo.c	/^void georadiusCommand(client *c) {$/;"	f
georadiusGeneric	src/geo.c	/^void georadiusGeneric(client *c, int type) {$/;"	f
get	deps/pmdk/src/benchmarks/map_bench.cpp	/^	int (*get)(struct map_bench *, uint64_t);$/;"	m	struct:map_bench	file:
get	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	PMEMoid(*get)(PMEMobjpool *pop, TOID(struct map) map,$/;"	m	struct:map_ops
get	deps/pmdk/src/test/unittest/basetest.py	/^    def get(cls, conf_ctx):$/;"	m	class:Any
get-result-with-name	utils/speed-regression.tcl	/^proc get-result-with-name {output name} {$/;"	p
get-test-names	utils/speed-regression.tcl	/^proc get-test-names output {$/;"	p
getAbsolutePath	src/util.c	/^sds getAbsolutePath(char *filename) {$/;"	f
getAllClientsInfoString	src/networking.c	/^sds getAllClientsInfoString(void) {$/;"	f
getBMode	deps/lua/src/lopcodes.h	255;"	d
getBitOffsetFromArgument	src/bitops.c	/^int getBitOffsetFromArgument(client *c, robj *o, size_t *offset, int hash, int bits) {$/;"	f
getBitfieldTypeFromArgument	src/bitops.c	/^int getBitfieldTypeFromArgument(client *c, robj *o, int *sign, int *bits) {$/;"	f
getCMode	deps/lua/src/lopcodes.h	256;"	d
getCallback	deps/hiredis/examples/example-ae.c	/^void getCallback(redisAsyncContext *c, void *r, void *privdata) {$/;"	f
getCallback	deps/hiredis/examples/example-libev.c	/^void getCallback(redisAsyncContext *c, void *r, void *privdata) {$/;"	f
getCallback	deps/hiredis/examples/example-libevent.c	/^void getCallback(redisAsyncContext *c, void *r, void *privdata) {$/;"	f
getCallback	deps/hiredis/examples/example-libuv.c	/^void getCallback(redisAsyncContext *c, void *r, void *privdata) {$/;"	f
getClientOutputBufferMemoryUsage	src/networking.c	/^unsigned long getClientOutputBufferMemoryUsage(client *c) {$/;"	f
getClientPeerId	src/networking.c	/^char *getClientPeerId(client *c) {$/;"	f
getClientType	src/networking.c	/^int getClientType(client *c) {$/;"	f
getClientTypeByName	src/networking.c	/^int getClientTypeByName(char *name) {$/;"	f
getClientTypeName	src/networking.c	/^char *getClientTypeName(int class) {$/;"	f
getClientsMaxBuffers	src/networking.c	/^void getClientsMaxBuffers(unsigned long *longest_output_list,$/;"	f
getColumns	deps/linenoise/linenoise.c	/^static int getColumns(int ifd, int ofd) {$/;"	f	file:
getCommand	src/t_string.c	/^void getCommand(client *c) {$/;"	f
getCursorPosition	deps/linenoise/linenoise.c	/^static int getCursorPosition(int ifd, int ofd) {$/;"	f	file:
getDbSize	src/redis-cli.c	/^static int getDbSize(void) {$/;"	f	file:
getDecodedObject	src/object.c	/^robj *getDecodedObject(robj *o) {$/;"	f
getDotfilePath	src/redis-cli.c	/^static sds getDotfilePath(char *envoverride, char *dotfilename) {$/;"	f	file:
getDoubleFromObject	src/object.c	/^int getDoubleFromObject(robj *o, double *target) {$/;"	f
getDoubleFromObjectOrReply	src/object.c	/^int getDoubleFromObjectOrReply(client *c, robj *o, double *target, const char *msg) {$/;"	f
getExpire	src/db.c	/^long long getExpire(redisDb *db, robj *key) {$/;"	f
getF	deps/lua/src/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getGenericCommand	src/t_string.c	/^int getGenericCommand(client *c) {$/;"	f
getInfoField	src/redis-cli.c	/^static char *getInfoField(char *info, char *field) {$/;"	f	file:
getInstantaneousMetric	src/server.c	/^long long getInstantaneousMetric(int metric) {$/;"	f
getKeySizes	src/redis-cli.c	/^static void getKeySizes(redisReply *keys, int *types,$/;"	f	file:
getKeyTypes	src/redis-cli.c	/^static void getKeyTypes(redisReply *keys, int *types) {$/;"	f	file:
getKeysFreeResult	src/db.c	/^void getKeysFreeResult(int *result) {$/;"	f
getKeysFromCommand	src/db.c	/^int *getKeysFromCommand(struct redisCommand *cmd, robj **argv, int argc, int *numkeys) {$/;"	f
getKeysInSlot	src/db.c	/^unsigned int getKeysInSlot(unsigned int hashslot, robj **keys, unsigned int count) {$/;"	f
getKeysUsingCommandTable	src/db.c	/^int *getKeysUsingCommandTable(struct redisCommand *cmd,robj **argv, int argc, int *numkeys) {$/;"	f
getLRUClock	src/server.c	/^unsigned int getLRUClock(void) {$/;"	f
getLongDoubleFromObject	src/object.c	/^int getLongDoubleFromObject(robj *o, long double *target) {$/;"	f
getLongDoubleFromObjectOrReply	src/object.c	/^int getLongDoubleFromObjectOrReply(client *c, robj *o, long double *target, const char *msg) {$/;"	f
getLongFromObjectOrReply	src/object.c	/^int getLongFromObjectOrReply(client *c, robj *o, long *target, const char *msg) {$/;"	f
getLongInfoField	src/redis-cli.c	/^static long getLongInfoField(char *info, char *field) {$/;"	f	file:
getLongLongFromObject	src/object.c	/^int getLongLongFromObject(robj *o, long long *target) {$/;"	f
getLongLongFromObjectOrReply	src/object.c	/^int getLongLongFromObjectOrReply(client *c, robj *o, long long *target, const char *msg) {$/;"	f
getMcontextEip	src/debug.c	/^static void *getMcontextEip(ucontext_t *uc) {$/;"	f	file:
getNodeByQuery	src/cluster.c	/^clusterNode *getNodeByQuery(client *c, struct redisCommand *cmd, robj **argv, int argc, int *hashslot, int *error_code) {$/;"	f
getObjectReadOnlyString	src/bitops.c	/^unsigned char *getObjectReadOnlyString(robj *o, long *len, char *llbuf) {$/;"	f
getOpMode	deps/lua/src/lopcodes.h	254;"	d
getPsyncInitialOffset	src/replication.c	/^long long getPsyncInitialOffset(void) {$/;"	f
getRDB	src/redis-cli.c	/^static void getRDB(void) {$/;"	f	file:
getRandomHexChars	src/util.c	/^void getRandomHexChars(char *p, unsigned int len) {$/;"	f
getS	deps/lua/src/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getSentinelRedisInstanceByAddrAndRunID	src/sentinel.c	/^sentinelRedisInstance *getSentinelRedisInstanceByAddrAndRunID(dict *instances, char *ip, int port, char *runid) {$/;"	f
getSignedBitfield	src/bitops.c	/^int64_t getSignedBitfield(unsigned char *p, uint64_t offset, uint64_t bits) {$/;"	f
getSlotOrReply	src/cluster.c	/^int getSlotOrReply(client *c, robj *o) {$/;"	f
getStringObjectSdsUsedMemory	src/networking.c	/^size_t getStringObjectSdsUsedMemory(robj *o) {$/;"	f
getTimeoutFromObjectOrReply	src/blocked.c	/^int getTimeoutFromObjectOrReply(client *c, robj *object, mstime_t *timeout, int unit) {$/;"	f
getUnsignedBitfield	src/bitops.c	/^uint64_t getUnsignedBitfield(unsigned char *p, uint64_t offset, uint64_t bits) {$/;"	f
get_ack_from_slaves	src/server.h	/^    int get_ack_from_slaves;            \/* If true we send REPLCONF GETACK. *\/$/;"	m	struct:redisServer
get_base_address	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def get_base_address(self):$/;"	m	class:BinaryFile
get_base_address	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    def get_base_address(self):$/;"	m	class:Flush
get_base_address	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    def get_base_address(self):$/;"	m	class:Store
get_base_address	deps/pmdk/src/tools/pmreorder/utils.py	/^    def get_base_address(self):$/;"	m	class:Rangeable
get_bitmap	deps/pmdk/src/libpmemobj/memblock.h	/^	void (*get_bitmap)(const struct memory_block *m, struct run_bitmap *b);$/;"	m	struct:memory_block_ops
get_bitmap_str	deps/pmdk/src/tools/pmempool/info_obj.c	/^get_bitmap_str(uint64_t val, unsigned values)$/;"	f	file:
get_checker	deps/pmdk/src/tools/pmreorder/consistencycheckwrap.py	/^def get_checker(checker_type, checker_path_args, name):$/;"	f
get_cluster_nodes	tests/cluster/cluster.tcl	/^proc get_cluster_nodes id {$/;"	p
get_cmd	deps/pmdk/src/librpmem/rpmem_ssh.c	/^get_cmd(const char **argv)$/;"	f	file:
get_command	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^get_command(char *cmd_str)$/;"	f	file:
get_command	deps/pmdk/src/tools/pmempool/pmempool.c	/^get_command(const char *cmd_str)$/;"	f	file:
get_compTM	deps/lua/src/lvm.c	/^static const TValue *get_compTM (lua_State *L, Table *mt1, Table *mt2,$/;"	f	file:
get_cond	deps/pmdk/src/libpmemobj/sync.c	/^get_cond(PMEMobjpool *pop, PMEMcond_internal *icp)$/;"	f	file:
get_config_line	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^get_config_line(FILE *file, char **line, uint64_t *line_max,$/;"	f	file:
get_config_signature	src/redis-trib.rb	/^    def get_config_signature$/;"	f	class:ClusterNode
get_devdax_size	deps/pmdk/src/test/tools/anonymous_mmap/check_max_mmap.sh	/^function get_devdax_size() {$/;"	f
get_devdax_size	deps/pmdk/src/test/unittest/unittest.sh	/^function get_devdax_size() {$/;"	f
get_engine	deps/pmdk/src/tools/pmreorder/reorderengines.py	/^def get_engine(engine):$/;"	f
get_errno	deps/jemalloc/include/jemalloc/internal/private_namespace.h	270;"	d
get_errno	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	270;"	d
get_errno	deps/jemalloc/include/jemalloc/internal/util.h	/^get_errno(void)$/;"	f
get_examine	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^get_examine(char *type_name)$/;"	f	file:
get_executables	deps/pmdk/src/test/unittest/unittest.sh	/^function get_executables() {$/;"	f
get_extra	deps/pmdk/src/libpmemobj/memblock.c	/^	uint64_t (*get_extra)(const struct memory_block *m);$/;"	m	struct:__anon133	file:
get_extra	deps/pmdk/src/libpmemobj/memblock.h	/^	uint64_t (*get_extra)(const struct memory_block *m);$/;"	m	struct:memory_block_ops
get_files	deps/pmdk/src/test/unittest/unittest.sh	/^function get_files() {$/;"	f
get_flags	deps/pmdk/src/libpmemobj/memblock.c	/^	uint16_t (*get_flags)(const struct memory_block *m);$/;"	m	struct:__anon133	file:
get_flags	deps/pmdk/src/libpmemobj/memblock.h	/^	uint16_t (*get_flags)(const struct memory_block *m);$/;"	m	struct:memory_block_ops
get_flushing_op_num	deps/pmdk/src/benchmarks/rpmem.cpp	/^get_flushing_op_num(struct benchmark *bench, struct rpmem_bench *mb)$/;"	f	file:
get_free_space	deps/pmdk/src/test/unittest/context.py	/^    def get_free_space(self):$/;"	m	class:ContextBase
get_hdr	deps/pmdk/src/libpmempool/feature.c	/^get_hdr(struct pool_set *set, unsigned rep, unsigned part)$/;"	f	file:
get_home_dir	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^get_home_dir(char *str, size_t size)$/;"	f	file:
get_huge_size	deps/jemalloc/test/integration/mallocx.c	/^get_huge_size(size_t ind)$/;"	f	file:
get_huge_size	deps/jemalloc/test/integration/rallocx.c	/^get_huge_size(size_t ind)$/;"	f	file:
get_huge_size	deps/jemalloc/test/integration/xallocx.c	/^get_huge_size(size_t ind)$/;"	f	file:
get_huge_size	deps/jemalloc/test/unit/arena_reset.c	/^get_huge_size(size_t ind)$/;"	f	file:
get_idstring	deps/jemalloc/test/src/SFMT.c	/^const char *get_idstring(void) {$/;"	f
get_info_field	tests/instances.tcl	/^proc get_info_field {info field} {$/;"	p
get_inodes	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^get_inodes(pid_t pid, struct inodes *inodes)$/;"	f	file:
get_instance_attrib	tests/instances.tcl	/^proc get_instance_attrib {type id attrib} {$/;"	p
get_instance_id_by_port	tests/instances.tcl	/^proc get_instance_id_by_port {type port} {$/;"	p
get_item	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^get_item(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
get_item_list	deps/pmdk/src/test/obj_list/obj_list.c	/^get_item_list(PMEMoid head, int n)$/;"	f	file:
get_item_type	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^get_item_type(int n)$/;"	f
get_item_type_sec	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^get_item_type_sec(int n)$/;"	f
get_key	deps/pmdk/src/benchmarks/map_bench.cpp	/^get_key(unsigned *seed, uint64_t max_key)$/;"	f	file:
get_keys	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^get_keys(uint64_t key, PMEMoid value, void *arg)$/;"	f	file:
get_lane	deps/pmdk/src/libpmemobj/lane.c	/^get_lane(uint64_t *locks, struct lane_info *info, uint64_t nlocks)$/;"	f	file:
get_lane_info_record	deps/pmdk/src/libpmemobj/lane.c	/^get_lane_info_record(PMEMobjpool *pop)$/;"	f	file:
get_large_size	deps/jemalloc/test/integration/xallocx.c	/^get_large_size(size_t ind)$/;"	f	file:
get_large_size	deps/jemalloc/test/unit/arena_reset.c	/^get_large_size(size_t ind)$/;"	f	file:
get_lg_prof_sample	deps/jemalloc/test/unit/prof_reset.c	/^get_lg_prof_sample(void)$/;"	f	file:
get_lib_dir	deps/pmdk/src/test/unittest/futils.py	/^def get_lib_dir(ctx):$/;"	f
get_list_count	deps/pmdk/src/test/win_lists/win_lists.c	/^get_list_count(struct TestList *head)$/;"	f	file:
get_lock	deps/pmdk/src/benchmarks/obj_locks.cpp	/^get_lock(uint64_t pop_runid, volatile uint64_t *runid, void *lock,$/;"	f	file:
get_lock	deps/pmdk/src/libpmemobj/memblock.h	/^	os_mutex_t *(*get_lock)(const struct memory_block *m);$/;"	m	struct:memory_block_ops
get_log_files	deps/pmdk/src/test/unittest/basetest.py	/^    def get_log_files(self):$/;"	m	class:BaseTest
get_logger	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^def get_logger(log_output, log_level=None):$/;"	f
get_map_lock_num	deps/pmdk/src/libpmemblk/btt.c	/^get_map_lock_num(uint32_t premap_lba, uint32_t nfree)$/;"	f	file:
get_map_ops_by_string	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^get_map_ops_by_string(const char *type)$/;"	f	file:
get_markers	deps/pmdk/src/tools/pmreorder/markerparser.py	/^    def get_markers(self, markerset):$/;"	m	class:MarkerParser
get_master_with_least_replicas	src/redis-trib.rb	/^    def get_master_with_least_replicas$/;"	f	class:RedisTrib
get_max_address	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def get_max_address(self):$/;"	m	class:BinaryFile
get_max_address	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    def get_max_address(self):$/;"	m	class:Flush
get_max_address	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    def get_max_address(self):$/;"	m	class:Store
get_max_address	deps/pmdk/src/tools/pmreorder/utils.py	/^    def get_max_address(self):$/;"	m	class:Rangeable
get_max_size_class	deps/jemalloc/test/unit/size_classes.c	/^get_max_size_class(void)$/;"	f	file:
get_min_array_size32	deps/jemalloc/test/src/SFMT.c	/^int get_min_array_size32(void) {$/;"	f
get_min_array_size64	deps/jemalloc/test/src/SFMT.c	/^int get_min_array_size64(void) {$/;"	f
get_mmap_flags	deps/pmdk/src/libpmempool/feature.c	/^get_mmap_flags(struct pool_set_part *part, int rdonly)$/;"	f	file:
get_mmap_scenarios	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^get_mmap_scenarios(char *name)$/;"	f
get_mode	deps/pmdk/src/test/unittest/unittest.sh	/^get_mode()$/;"	f
get_move_item	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^get_move_item(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
get_mutex	deps/pmdk/src/libpmemobj/sync.c	/^get_mutex(PMEMobjpool *pop, PMEMmutex_internal *imp)$/;"	f	file:
get_myself	tests/cluster/cluster.tcl	/^proc get_myself id {$/;"	p
get_nhuge	deps/jemalloc/test/integration/mallocx.c	/^get_nhuge(void)$/;"	f	file:
get_nhuge	deps/jemalloc/test/integration/rallocx.c	/^get_nhuge(void)$/;"	f	file:
get_nhuge	deps/jemalloc/test/integration/xallocx.c	/^get_nhuge(void)$/;"	f	file:
get_nhuge	deps/jemalloc/test/unit/arena_reset.c	/^get_nhuge(void)$/;"	f	file:
get_nlarge	deps/jemalloc/test/integration/xallocx.c	/^get_nlarge(void)$/;"	f	file:
get_nlarge	deps/jemalloc/test/unit/arena_reset.c	/^get_nlarge(void)$/;"	f	file:
get_node	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^get_node(struct search_ctx *ctx, int node_type, uint64_t off)$/;"	f	file:
get_node_by_abbreviated_name	src/redis-trib.rb	/^    def get_node_by_abbreviated_name(name)$/;"	f	class:RedisTrib
get_node_by_name	src/redis-trib.rb	/^    def get_node_by_name(name)$/;"	f	class:RedisTrib
get_node_devdax_path	deps/pmdk/src/test/unittest/unittest.sh	/^get_node_devdax_path() {$/;"	f
get_node_devdax_size	deps/pmdk/src/test/unittest/unittest.sh	/^function get_node_devdax_size() {$/;"	f
get_node_dir	deps/pmdk/src/test/unittest/unittest.sh	/^function get_node_dir() {$/;"	f
get_node_with_most_keys_in_slot	src/redis-trib.rb	/^    def get_node_with_most_keys_in_slot(nodes,slot)$/;"	f	class:RedisTrib
get_nsizes_impl	deps/jemalloc/test/integration/mallocx.c	/^get_nsizes_impl(const char *cmd)$/;"	f	file:
get_nsizes_impl	deps/jemalloc/test/integration/rallocx.c	/^get_nsizes_impl(const char *cmd)$/;"	f	file:
get_nsizes_impl	deps/jemalloc/test/integration/xallocx.c	/^get_nsizes_impl(const char *cmd)$/;"	f	file:
get_nsizes_impl	deps/jemalloc/test/unit/arena_reset.c	/^get_nsizes_impl(const char *cmd)$/;"	f	file:
get_nsmall	deps/jemalloc/test/integration/xallocx.c	/^get_nsmall(void)$/;"	f	file:
get_nsmall	deps/jemalloc/test/unit/arena_reset.c	/^get_nsmall(void)$/;"	f	file:
get_offset_an	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^get_offset_an(art_node_u *au)$/;"	f	file:
get_os	deps/pmdk/utils/pkg-common.sh	/^function get_os() {$/;"	f
get_params	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	/^get_params(const char *path, int *flags, size_t *size)$/;"	f	file:
get_persist_method	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^get_persist_method(const char *pm)$/;"	f	file:
get_pmemcheck_version	deps/pmdk/src/test/unittest/unittest.sh	/^function get_pmemcheck_version()$/;"	f
get_pool_open_flags	deps/pmdk/src/libpmempool/feature.c	/^get_pool_open_flags(struct pool_set *set, int rdonly)$/;"	f	file:
get_prompt	deps/lua/src/lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	file:
get_provider	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^get_provider(const char *target, const char *prov_name,$/;"	f	file:
get_read_buf_cb	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^get_read_buf_cb(uv_handle_t *handle, size_t size, uv_buf_t *buf)$/;"	f	file:
get_real_data	deps/pmdk/src/libpmemobj/memblock.h	/^	void *(*get_real_data)(const struct memory_block *m);$/;"	m	struct:memory_block_ops
get_real_size	deps/pmdk/src/libpmemobj/memblock.h	/^	size_t (*get_real_size)(const struct memory_block *m);$/;"	m	struct:memory_block_ops
get_rel_wait	deps/pmdk/src/common/os_thread_windows.c	/^get_rel_wait(const struct timespec *abstime)$/;"	f	file:
get_replica_uuid	deps/pmdk/src/libpmempool/replica.c	/^get_replica_uuid(struct pool_replica *rep, unsigned repn,$/;"	f	file:
get_rm_bestfit	deps/pmdk/src/libpmemobj/container.h	/^	int (*get_rm_bestfit)(struct block_container *c,$/;"	m	struct:block_container_ops
get_rm_exact	deps/pmdk/src/libpmemobj/container.h	/^	int (*get_rm_exact)(struct block_container *c,$/;"	m	struct:block_container_ops
get_root	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^get_root(unsigned graphs_num, size_t min_root_size)$/;"	f	file:
get_rwlock	deps/pmdk/src/libpmemobj/sync.c	/^get_rwlock(PMEMobjpool *pop, PMEMrwlock_internal *irp)$/;"	f	file:
get_sdk_version	deps/pmdk/utils/check_sdk_version.py	/^def get_sdk_version(file):$/;"	f
get_search	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^get_search(char *type_name)$/;"	f	file:
get_size	deps/pmdk/src/libpmemobj/memblock.c	/^	size_t (*get_size)(const struct memory_block *m);$/;"	m	struct:__anon133	file:
get_size	deps/pmdk/src/test/unittest/context.py	/^    def get_size(self, path):$/;"	m	class:ContextBase
get_size	deps/pmdk/src/test/unittest/unittest.sh	/^get_size()$/;"	f
get_size_impl	deps/jemalloc/test/integration/mallocx.c	/^get_size_impl(const char *cmd, size_t ind)$/;"	f	file:
get_size_impl	deps/jemalloc/test/integration/rallocx.c	/^get_size_impl(const char *cmd, size_t ind)$/;"	f	file:
get_size_impl	deps/jemalloc/test/integration/xallocx.c	/^get_size_impl(const char *cmd, size_t ind)$/;"	f	file:
get_size_impl	deps/jemalloc/test/unit/arena_reset.c	/^get_size_impl(const char *cmd, size_t ind)$/;"	f	file:
get_slot_owners	src/redis-trib.rb	/^    def get_slot_owners(slot)$/;"	f	class:RedisTrib
get_small_size	deps/jemalloc/test/integration/xallocx.c	/^get_small_size(size_t ind)$/;"	f	file:
get_small_size	deps/jemalloc/test/unit/arena_reset.c	/^get_small_size(size_t ind)$/;"	f	file:
get_ssh	deps/pmdk/src/librpmem/rpmem_ssh.c	/^get_ssh(void)$/;"	f	file:
get_state	deps/pmdk/src/libpmemobj/memblock.h	/^	enum memblock_state (*get_state)(const struct memory_block *m);$/;"	m	struct:memory_block_ops	typeref:enum:memory_block_ops::get_state
get_tc	deps/pmdk/src/test/unittest/unittest.h	/^get_tc(const char *name, const struct test_case *test_cases, size_t ntests)$/;"	f
get_test_tool_path	deps/pmdk/src/test/unittest/futils.py	/^def get_test_tool_path(ctx, name):$/;"	f
get_testcases	deps/pmdk/src/test/unittest/basetest.py	/^def get_testcases():$/;"	f
get_tool_path	deps/pmdk/src/test/unittest/futils.py	/^def get_tool_path(ctx, name):$/;"	f
get_total_results	deps/pmdk/src/benchmarks/pmembench.cpp	/^get_total_results(struct total_results *tres)$/;"	f	file:
get_trace	deps/pmdk/src/test/unittest/unittest.sh	/^function get_trace() {$/;"	f
get_tx	deps/pmdk/src/libpmemobj/tx.c	/^get_tx()$/;"	f	file:
get_type	deps/pmdk/src/examples/libpmemobj/array/array.c	/^get_type(const char *type_name)$/;"	f	file:
get_type	deps/pmdk/src/include/pmemcompat.h	/^struct get_type {$/;"	s	namespace:pmem::detail
get_type	deps/pmdk/src/include/pmemcompat.h	/^struct get_type<T&> {$/;"	s	namespace:pmem::detail
get_type	deps/pmdk/src/include/pmemcompat.h	/^struct get_type<T*> {$/;"	s	namespace:pmem::detail
get_user_at_node	deps/pmdk/src/librpmem/rpmem_ssh.c	/^get_user_at_node(const struct rpmem_target_info *info)$/;"	f	file:
get_user_data	deps/pmdk/src/libpmemobj/memblock.h	/^	void *(*get_user_data)(const struct memory_block *m);$/;"	m	struct:memory_block_ops
get_user_size	deps/pmdk/src/libpmemobj/memblock.h	/^	size_t (*get_user_size)(const struct memory_block *m);$/;"	m	struct:memory_block_ops
get_vcxproj_files	deps/pmdk/utils/check_sdk_version.py	/^def get_vcxproj_files(root_dir, ignored):$/;"	f
get_version	deps/pmdk/utils/pkg-common.sh	/^function get_version() {$/;"	f
getargs	deps/lua/src/lua.c	/^static int getargs (lua_State *L, char **argv, int n) {$/;"	f	file:
getbinhandler	deps/lua/doc/manual.html	/^     function getbinhandler (op1, op2, event)$/;"	f
getbinopr	deps/lua/src/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:
getbitCommand	src/bitops.c	/^void getbitCommand(client *c) {$/;"	f
getboolfield	deps/lua/src/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:
getcode	deps/lua/src/lcode.h	39;"	d
getcomphandler	deps/lua/doc/manual.html	/^     function getcomphandler (op1, op2, event)$/;"	f
getcurrenv	deps/lua/src/lapi.c	/^static Table *getcurrenv (lua_State *L) {$/;"	f	file:
getfield	deps/lua/src/loslib.c	/^static int getfield (lua_State *L, const char *key, int d) {$/;"	f	file:
getfreepos	deps/lua/src/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:
getfunc	deps/lua/src/lbaselib.c	/^static void getfunc (lua_State *L, int opt) {$/;"	f	file:
getfuncname	deps/lua/src/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:
gethooktable	deps/lua/src/ldblib.c	/^static void gethooktable (lua_State *L) {$/;"	f	file:
getinteger	deps/lua/src/lua_struct.c	/^static lua_Number getinteger (const char *buff, int endian,$/;"	f	file:
getiofile	deps/lua/src/liolib.c	/^static FILE *getiofile (lua_State *L, int findex) {$/;"	f	file:
getjump	deps/lua/src/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:
getjumpcontrol	deps/lua/src/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:
getkeys_proc	src/server.h	/^    redisGetKeysProc *getkeys_proc;$/;"	m	struct:redisCommand
getline	deps/lua/src/ldebug.h	16;"	d
getlocvar	deps/lua/src/lparser.c	32;"	d	file:
getluaproto	deps/lua/src/ldebug.c	/^static Proto *getluaproto (CallInfo *ci) {$/;"	f	file:
getn	deps/lua/src/ltablib.c	/^static int getn (lua_State *L) {$/;"	f	file:
getnum	deps/lua/src/lua_struct.c	/^static int getnum (lua_State *L, const char **fmt, int df) {$/;"	f	file:
getobjname	deps/lua/src/ldebug.c	/^static const char *getobjname (lua_State *L, CallInfo *ci, int stackpos,$/;"	f	file:
getopt	deps/pmdk/src/windows/getopt/getopt.c	/^int getopt(int argc, char* const argv[], const char* optstring) {$/;"	f
getopt_long	deps/pmdk/src/windows/getopt/getopt.c	/^int getopt_long(int argc, char* const argv[], const char* optstring,$/;"	f
getpid	deps/pmdk/src/windows/include/unistd.h	76;"	d
getrangeCommand	src/t_string.c	/^void getrangeCommand(client *c) {$/;"	f
getrdb_mode	src/redis-cli.c	/^    int getrdb_mode;$/;"	m	struct:config	file:
getsetCommand	src/t_string.c	/^void getsetCommand(client *c) {$/;"	f
getsizes	deps/lua/src/lauxlib.c	/^static void getsizes (lua_State *L) {$/;"	f	file:
getstr	deps/lua/src/lobject.h	210;"	d
gettable_event	deps/lua/doc/manual.html	/^     function gettable_event (table, key)$/;"	f
getthread	deps/lua/src/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
gettoalign	deps/lua/src/lua_struct.c	/^static int gettoalign (size_t len, Header *h, int opt, size_t size) {$/;"	f	file:
getunopr	deps/lua/src/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:
gfasttm	deps/lua/src/ltm.h	41;"	d
gfind_nodef	deps/lua/src/lstrlib.c	/^static int gfind_nodef (lua_State *L) {$/;"	f	file:
gid	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint32_t gid;	\/* group ID *\/$/;"	m	struct:objfs_inode	file:
gkey	deps/lua/src/ltable.h	14;"	d
global	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^} global;$/;"	v	typeref:struct:global_t	file:
globalL	deps/lua/src/lua.c	/^static lua_State *globalL = NULL;$/;"	v	file:
global_State	deps/lua/src/lstate.h	/^typedef struct global_State {$/;"	s
global_State	deps/lua/src/lstate.h	/^} global_State;$/;"	t	typeref:struct:global_State
global_rng	deps/pmdk/src/common/rand.c	/^static rng_t global_rng;$/;"	v	file:
global_t	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^static struct global_t {$/;"	s	file:
gmatch	deps/lua/src/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:
gmatch_aux	deps/lua/src/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:
gnext	deps/lua/src/ltable.h	16;"	d
gnode	deps/lua/src/ltable.h	13;"	d
gossip	src/cluster.h	/^        clusterMsgDataGossip gossip[1];$/;"	m	struct:clusterMsgData::__anon173
grant_created_parts_perm	deps/pmdk/src/libpmempool/sync.c	/^grant_created_parts_perm(struct pool_set *set, unsigned src_repn,$/;"	f	file:
granularity	deps/pmdk/src/libpmemobj/alloc_class.c	/^	size_t granularity;$/;"	m	struct:alloc_class_collection	file:
granularity	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_READ_HANDLER(granularity)(void *ctx,$/;"	f	file:
granularity	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_WRITE_HANDLER(granularity)(void *ctx,$/;"	f	file:
granularity	deps/pmdk/src/libpmemobj/pmalloc.c	/^static const struct ctl_argument CTL_ARG(granularity) = CTL_ARG_LONG_LONG;$/;"	v	typeref:struct:CTL_ARG	file:
graph_copies	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    graph_copies = 10$/;"	v	class:ObjDefragAdvanced
graph_copies	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    graph_copies = 10$/;"	v	class:TEST3
graph_copies	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    graph_copies = 10$/;"	v	class:TEST4
graph_copies	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    graph_copies = 5$/;"	v	class:TEST0
graph_copies	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    graph_copies = 5$/;"	v	class:TEST1
graph_copies	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    graph_copies = 5$/;"	v	class:TEST2
graph_copies	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    graph_copies = 5$/;"	v	class:TEST5
graph_copies	deps/pmdk/src/test/obj_defrag_advanced/pgraph.h	/^	unsigned graph_copies;$/;"	m	struct:pgraph_params
graph_create	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^graph_create(struct create_params_t *task, PMEMobjpool *pop, PMEMoid *oidp,$/;"	f	file:
graph_defrag	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^graph_defrag(PMEMobjpool *pop, PMEMoid oid)$/;"	f	file:
graph_defrag_ntimes	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^graph_defrag_ntimes(PMEMobjpool *pop, PMEMoid oid, unsigned max_rounds)$/;"	f	file:
graph_dump	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^graph_dump(PMEMoid oid, const char *path, int has_exist)$/;"	f	file:
graphs	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	PMEMoid graphs[];$/;"	m	struct:root_t	file:
graphs_num	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	unsigned graphs_num;$/;"	m	struct:root_t	file:
gray	deps/lua/src/lstate.h	/^  GCObject *gray;  \/* list of gray objects *\/$/;"	m	struct:global_State
gray2black	deps/lua/src/lgc.h	73;"	d
grayagain	deps/lua/src/lstate.h	/^  GCObject *grayagain;  \/* list of objects to be traversed atomically *\/$/;"	m	struct:global_State
group	deps/pmdk/src/benchmarks/scenario.hpp	/^	char *group;$/;"	m	struct:scenario
group	src/help.h	/^  int group;$/;"	m	struct:commandHelp
group_offset	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^	size_t group_offset;$/;"	m	struct:bitmap_level_s
growCI	deps/lua/src/ldo.c	/^static CallInfo *growCI (lua_State *L) {$/;"	f	file:
growsize	deps/pmdk/src/libpmemobj/palloc.h	/^	uint64_t growsize;$/;"	m	struct:palloc_heap
gstate	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^static struct game_state *gstate;$/;"	v	typeref:struct:game_state	file:
gt	deps/lua/src/lstate.h	22;"	d
gtest_config	deps/pmdk/src/test/util_ctl/util_ctl.c	/^CTL_WRITE_HANDLER(gtest_config)(void *ctx, enum ctl_query_source source,$/;"	f	file:
gtest_config	deps/pmdk/src/test/util_ctl/util_ctl.c	/^static struct ctl_argument CTL_ARG(gtest_config) = CTL_ARG_STRING(8);$/;"	v	typeref:struct:CTL_ARG	file:
gtest_ro	deps/pmdk/src/test/util_ctl/util_ctl.c	/^CTL_READ_HANDLER(gtest_ro)(void *ctx, enum ctl_query_source source,$/;"	f	file:
gval	deps/lua/src/ltable.h	15;"	d
h	deps/lua/src/lparser.h	/^  Table *h;  \/* table to find (and reuse) elements in `k' *\/$/;"	m	struct:FuncState
h	deps/lua/src/lstate.h	/^  struct Table h;$/;"	m	union:GCObject	typeref:struct:GCObject::Table
h	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^	int h;$/;"	m	struct:fields	file:
hFind	deps/pmdk/src/common/fs_windows.c	/^	HANDLE hFind;$/;"	m	struct:fs	file:
handle	deps/hiredis/adapters/libuv.h	/^  uv_poll_t          handle;$/;"	m	struct:redisLibuvEvents
handle	deps/pmdk/src/common/file.h	/^	HANDLE handle;$/;"	m	struct:dir_handle
handle	deps/pmdk/src/common/os_thread_windows.c	/^	HANDLE handle;$/;"	m	struct:__anon82	file:
handle	deps/pmdk/src/libpmem2/config.h	/^	HANDLE handle;$/;"	m	struct:pmem2_config
handleClientsBlockedOnLists	src/t_list.c	/^void handleClientsBlockedOnLists(void) {$/;"	f
handleClientsWithPendingWrites	src/networking.c	/^int handleClientsWithPendingWrites(void) {$/;"	f
handleLinkIOError	src/cluster.c	/^void handleLinkIOError(clusterLink *link) {$/;"	f
handle_luainit	deps/lua/src/lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	file:
handle_script	deps/lua/src/lua.c	/^static int handle_script (lua_State *L, char **argv, int n) {$/;"	f	file:
hard_limit_bytes	src/server.h	/^    unsigned long long hard_limit_bytes;$/;"	m	struct:clientBufferLimitsConfig
has_arg	deps/pmdk/src/windows/getopt/getopt.h	/^  int has_arg;$/;"	m	struct:option
has_bad_blocks	deps/pmdk/src/common/set.h	/^	int has_bad_blocks;	\/* part file contains bad blocks *\/$/;"	m	struct:pool_set_part
has_bad_blocks	deps/pmdk/src/common/set.h	/^	int has_bad_blocks;	\/* pool set contains bad blocks *\/$/;"	m	struct:pool_set
has_flag	tests/cluster/cluster.tcl	/^proc has_flag {node flag} {$/;"	p
has_flag?	src/redis-trib.rb	/^    def has_flag?(flag)$/;"	f	class:ClusterNode
has_port	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^has_port(pid_t pid, unsigned short port)$/;"	f	file:
has_port_inode	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^has_port_inode(unsigned short port, struct inodes *inodes)$/;"	f	file:
has_remote_replicas	deps/pmdk/src/libpmemobj/obj.h	/^	int has_remote_replicas;$/;"	m	struct:pmemobjpool
has_value	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^	unsigned has_value;$/;"	m	struct:tree_map_node	file:
hash	deps/geohash-int/geohash.h	/^    GeoHashBits hash;$/;"	m	struct:__anon145
hash	deps/geohash-int/geohash_helper.h	/^    GeoHashBits hash;$/;"	m	struct:__anon141
hash	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	ckh_hash_t	*hash;$/;"	m	struct:ckh_s
hash	deps/jemalloc/include/jemalloc/internal/hash.h	/^hash(const void *key, size_t len, const uint32_t seed, size_t r_hash[2])$/;"	f
hash	deps/jemalloc/include/jemalloc/internal/private_namespace.h	271;"	d
hash	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	271;"	d
hash	deps/lua/src/lobject.h	/^    unsigned int hash;$/;"	m	struct:TString::__anon24
hash	deps/lua/src/lstate.h	/^  GCObject **hash;$/;"	m	struct:stringtable
hash	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^	uint64_t hash;$/;"	m	struct:entry	file:
hash	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hash(const struct hashmap_rp *hashmap, uint64_t key)$/;"	f	file:
hash64	deps/pmdk/src/common/rand.c	/^hash64(uint64_t x)$/;"	f
hashDictType	src/server.c	/^dictType hashDictType = {$/;"	v
hashFunction	deps/hiredis/dict.h	/^    unsigned int (*hashFunction)(const void *key);$/;"	m	struct:dictType
hashFunction	src/dict.h	/^    unsigned int (*hashFunction)(const void *key);$/;"	m	struct:dictType
hashTypeConvert	src/t_hash.c	/^void hashTypeConvert(robj *o, int enc) {$/;"	f
hashTypeConvertZiplist	src/t_hash.c	/^void hashTypeConvertZiplist(robj *o, int enc) {$/;"	f
hashTypeCurrentFromHashTable	src/t_hash.c	/^void hashTypeCurrentFromHashTable(hashTypeIterator *hi, int what, robj **dst) {$/;"	f
hashTypeCurrentFromZiplist	src/t_hash.c	/^void hashTypeCurrentFromZiplist(hashTypeIterator *hi, int what,$/;"	f
hashTypeCurrentObject	src/t_hash.c	/^robj *hashTypeCurrentObject(hashTypeIterator *hi, int what) {$/;"	f
hashTypeDelete	src/t_hash.c	/^int hashTypeDelete(robj *o, robj *field) {$/;"	f
hashTypeExists	src/t_hash.c	/^int hashTypeExists(robj *o, robj *field) {$/;"	f
hashTypeGetFromHashTable	src/t_hash.c	/^int hashTypeGetFromHashTable(robj *o, robj *field, robj **value) {$/;"	f
hashTypeGetFromZiplist	src/t_hash.c	/^int hashTypeGetFromZiplist(robj *o, robj *field,$/;"	f
hashTypeGetObject	src/t_hash.c	/^robj *hashTypeGetObject(robj *o, robj *field) {$/;"	f
hashTypeGetValueLength	src/t_hash.c	/^size_t hashTypeGetValueLength(robj *o, robj *field) {$/;"	f
hashTypeInitIterator	src/t_hash.c	/^hashTypeIterator *hashTypeInitIterator(robj *subject) {$/;"	f
hashTypeIterator	src/server.h	/^} hashTypeIterator;$/;"	t	typeref:struct:__anon164
hashTypeLength	src/t_hash.c	/^unsigned long hashTypeLength(robj *o) {$/;"	f
hashTypeLookupWriteOrCreate	src/t_hash.c	/^robj *hashTypeLookupWriteOrCreate(client *c, robj *key) {$/;"	f
hashTypeNext	src/t_hash.c	/^int hashTypeNext(hashTypeIterator *hi) {$/;"	f
hashTypeReleaseIterator	src/t_hash.c	/^void hashTypeReleaseIterator(hashTypeIterator *hi) {$/;"	f
hashTypeSet	src/t_hash.c	/^int hashTypeSet(robj *o, robj *field, robj *value) {$/;"	f
hashTypeTryConversion	src/t_hash.c	/^void hashTypeTryConversion(robj *o, robj **argv, int start, int end) {$/;"	f
hashTypeTryObjectEncoding	src/t_hash.c	/^void hashTypeTryObjectEncoding(robj *subject, robj **o1, robj **o2) {$/;"	f
hash_fmix_32	deps/jemalloc/include/jemalloc/internal/hash.h	/^hash_fmix_32(uint32_t h)$/;"	f
hash_fmix_32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	272;"	d
hash_fmix_32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	272;"	d
hash_fmix_64	deps/jemalloc/include/jemalloc/internal/hash.h	/^hash_fmix_64(uint64_t k)$/;"	f
hash_fmix_64	deps/jemalloc/include/jemalloc/internal/private_namespace.h	273;"	d
hash_fmix_64	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	273;"	d
hash_fun_a	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	uint32_t hash_fun_a;$/;"	m	struct:hashmap_atomic	file:
hash_fun_a	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^	uint32_t hash_fun_a;$/;"	m	struct:hashmap_tx	file:
hash_fun_b	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	uint32_t hash_fun_b;$/;"	m	struct:hashmap_atomic	file:
hash_fun_b	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^	uint32_t hash_fun_b;$/;"	m	struct:hashmap_tx	file:
hash_fun_p	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	uint64_t hash_fun_p;$/;"	m	struct:hashmap_atomic	file:
hash_fun_p	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^	uint64_t hash_fun_p;$/;"	m	struct:hashmap_tx	file:
hash_get_block_32	deps/jemalloc/include/jemalloc/internal/hash.h	/^hash_get_block_32(const uint32_t *p, int i)$/;"	f
hash_get_block_32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	274;"	d
hash_get_block_32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	274;"	d
hash_get_block_64	deps/jemalloc/include/jemalloc/internal/hash.h	/^hash_get_block_64(const uint64_t *p, int i)$/;"	f
hash_get_block_64	deps/jemalloc/include/jemalloc/internal/private_namespace.h	275;"	d
hash_get_block_64	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	275;"	d
hash_max_ziplist_entries	src/server.h	/^    size_t hash_max_ziplist_entries;$/;"	m	struct:redisServer
hash_max_ziplist_value	src/server.h	/^    size_t hash_max_ziplist_value;$/;"	m	struct:redisServer
hash_rotl_32	deps/jemalloc/include/jemalloc/internal/hash.h	/^hash_rotl_32(uint32_t x, int8_t r)$/;"	f
hash_rotl_32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	276;"	d
hash_rotl_32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	276;"	d
hash_rotl_64	deps/jemalloc/include/jemalloc/internal/hash.h	/^hash_rotl_64(uint64_t x, int8_t r)$/;"	f
hash_rotl_64	deps/jemalloc/include/jemalloc/internal/private_namespace.h	277;"	d
hash_rotl_64	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	277;"	d
hash_variant_bits	deps/jemalloc/test/unit/hash.c	/^hash_variant_bits(hash_variant_t variant)$/;"	f	file:
hash_variant_string	deps/jemalloc/test/unit/hash.c	/^hash_variant_string(hash_variant_t variant)$/;"	f	file:
hash_variant_t	deps/jemalloc/test/unit/hash.c	/^} hash_variant_t;$/;"	t	typeref:enum:__anon22	file:
hash_variant_verify	deps/jemalloc/test/unit/hash.c	/^hash_variant_verify(hash_variant_t variant)$/;"	f	file:
hash_variant_verify_key	deps/jemalloc/test/unit/hash.c	/^hash_variant_verify_key(hash_variant_t variant, uint8_t *key)$/;"	f	file:
hash_variant_x64_128	deps/jemalloc/test/unit/hash.c	/^	hash_variant_x64_128$/;"	e	enum:__anon22	file:
hash_variant_x86_128	deps/jemalloc/test/unit/hash.c	/^	hash_variant_x86_128,$/;"	e	enum:__anon22	file:
hash_variant_x86_32	deps/jemalloc/test/unit/hash.c	/^	hash_variant_x86_32,$/;"	e	enum:__anon22	file:
hash_x64_128	deps/jemalloc/include/jemalloc/internal/hash.h	/^hash_x64_128(const void *key, const int len, const uint32_t seed,$/;"	f
hash_x64_128	deps/jemalloc/include/jemalloc/internal/private_namespace.h	278;"	d
hash_x64_128	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	278;"	d
hash_x86_128	deps/jemalloc/include/jemalloc/internal/hash.h	/^hash_x86_128(const void *key, const int len, uint32_t seed,$/;"	f
hash_x86_128	deps/jemalloc/include/jemalloc/internal/private_namespace.h	279;"	d
hash_x86_128	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	279;"	d
hash_x86_32	deps/jemalloc/include/jemalloc/internal/hash.h	/^hash_x86_32(const void *key, int len, uint32_t seed)$/;"	f
hash_x86_32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	280;"	d
hash_x86_32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	280;"	d
hashboolean	deps/lua/src/ltable.c	53;"	d	file:
hashmap_args	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap.h	/^struct hashmap_args {$/;"	s
hashmap_atomic	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^struct hashmap_atomic {$/;"	s	file:
hashmap_atomic_ops	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.c	/^struct map_ops hashmap_atomic_ops = {$/;"	v	typeref:struct:map_ops
hashmap_cmd	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap.h	/^enum hashmap_cmd {$/;"	g
hashmap_create	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hashmap_create(PMEMobjpool *pop, TOID(struct hashmap_rp) *hashmap_p,$/;"	f	file:
hashmap_print	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^hashmap_print(uint64_t key, PMEMoid value, void *arg)$/;"	f	file:
hashmap_rp	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^struct hashmap_rp {$/;"	s	file:
hashmap_rp_ops	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.c	/^struct map_ops hashmap_rp_ops = {$/;"	v	typeref:struct:map_ops
hashmap_tx	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^struct hashmap_tx {$/;"	s	file:
hashmap_tx_ops	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.c	/^struct map_ops hashmap_tx_ops = {$/;"	v	typeref:struct:map_ops
hashmod	deps/lua/src/ltable.c	60;"	d	file:
hashnum	deps/lua/src/ltable.c	/^static Node *hashnum (const Table *t, lua_Number n) {$/;"	f	file:
hashpointer	deps/lua/src/ltable.c	63;"	d	file:
hashpow2	deps/lua/src/ltable.c	50;"	d	file:
hashstr	deps/lua/src/ltable.c	52;"	d	file:
hasjumps	deps/lua/src/lcode.c	27;"	d	file:
hasmultret	deps/lua/src/lparser.c	30;"	d	file:
have_dss	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool have_dss =$/;"	v
have_dss	deps/jemalloc/test/integration/MALLOCX_ARENA.c	/^static bool have_dss =$/;"	v	file:
hdelCommand	src/t_hash.c	/^void hdelCommand(client *c) {$/;"	f
hdr	deps/pmdk/src/common/set.h	/^	void *hdr;		\/* base address of header *\/$/;"	m	struct:pool_set_part
hdr	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^	struct log_hdr hdr;	\/* entry header *\/$/;"	m	struct:log	typeref:struct:log::log_hdr	file:
hdr	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^	struct log_hdr hdr;		\/* entry header *\/$/;"	m	struct:log	typeref:struct:log::log_hdr	file:
hdr	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^	struct log_hdr hdr;$/;"	m	struct:log	typeref:struct:log::log_hdr	file:
hdr	deps/pmdk/src/libpmemblk/blk.h	/^	struct pool_hdr hdr;	\/* memory pool header *\/$/;"	m	struct:pmemblk	typeref:struct:pmemblk::pool_hdr
hdr	deps/pmdk/src/libpmemlog/log.h	/^	struct pool_hdr hdr;	\/* memory pool header *\/$/;"	m	struct:pmemlog	typeref:struct:pmemlog::pool_hdr
hdr	deps/pmdk/src/libpmemobj/heap_layout.h	/^	struct chunk_run_header hdr;$/;"	m	struct:chunk_run	typeref:struct:chunk_run::chunk_run_header
hdr	deps/pmdk/src/libpmemobj/obj.h	/^	struct pool_hdr hdr;	\/* memory pool header *\/$/;"	m	struct:pmemobjpool	typeref:struct:pmemobjpool::pool_hdr
hdr	deps/pmdk/src/libpmempool/check_util.h	/^	struct pool_hdr hdr;$/;"	m	struct:__anon87	typeref:struct:__anon87::pool_hdr
hdr	deps/pmdk/src/libpmempool/pool.h	/^	} hdr;$/;"	m	struct:pool_data	typeref:union:pool_data::__anon93
hdr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_hdr hdr;	\/* message header *\/$/;"	m	struct:rpmem_msg_close	typeref:struct:rpmem_msg_close::rpmem_msg_hdr
hdr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_hdr hdr;	\/* message header *\/$/;"	m	struct:rpmem_msg_create	typeref:struct:rpmem_msg_create::rpmem_msg_hdr
hdr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_hdr hdr;	\/* message header *\/$/;"	m	struct:rpmem_msg_open	typeref:struct:rpmem_msg_open::rpmem_msg_hdr
hdr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_hdr hdr;	\/* message header *\/$/;"	m	struct:rpmem_msg_set_attr	typeref:struct:rpmem_msg_set_attr::rpmem_msg_hdr
hdr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_hdr_resp hdr;	\/* message header *\/$/;"	m	struct:rpmem_msg_close_resp	typeref:struct:rpmem_msg_close_resp::rpmem_msg_hdr_resp
hdr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_hdr_resp hdr;	\/* message header *\/$/;"	m	struct:rpmem_msg_create_resp	typeref:struct:rpmem_msg_create_resp::rpmem_msg_hdr_resp
hdr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_hdr_resp hdr;	\/* message header *\/$/;"	m	struct:rpmem_msg_open_resp	typeref:struct:rpmem_msg_open_resp::rpmem_msg_hdr_resp
hdr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_hdr_resp hdr;	\/* message header *\/$/;"	m	struct:rpmem_msg_set_attr_resp	typeref:struct:rpmem_msg_set_attr_resp::rpmem_msg_hdr_resp
hdr	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	struct chunk_header *hdr;$/;"	m	struct:chunk_pair	typeref:struct:chunk_pair::chunk_header	file:
hdr_map_sync	deps/pmdk/src/common/set.h	/^	int hdr_map_sync;	\/* header mapped with MAP_SYNC *\/$/;"	m	struct:pool_set_part
hdr_valid	deps/pmdk/src/libpmempool/check_util.h	/^	int hdr_valid;$/;"	m	struct:__anon87
hdrp	deps/pmdk/src/libpmempool/check_util.h	/^	struct pool_hdr *hdrp;$/;"	m	struct:__anon87	typeref:struct:__anon87::pool_hdr
hdrsize	deps/pmdk/src/common/set.h	/^	size_t hdrsize;		\/* size of the header mapping *\/$/;"	m	struct:pool_set_part
head	deps/hiredis/async.h	/^    redisCallback *head, *tail;$/;"	m	struct:redisCallbackList
head	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	PMDK_TAILQ_HEAD(valueshead, clo_vec_value) head;$/;"	m	struct:clo_vec_vlist
head	deps/pmdk/src/benchmarks/pmembench.cpp	/^	PMDK_LIST_HEAD(benchmarks_head, benchmark) head;$/;"	m	struct:bench_list	file:
head	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	POBJ_LIST_HEAD(plist, struct item) head;$/;"	m	struct:obj_worker	file:
head	deps/pmdk/src/benchmarks/scenario.hpp	/^	PMDK_TAILQ_HEAD(scenariohead, kv) head;$/;"	m	struct:scenario
head	deps/pmdk/src/benchmarks/scenario.hpp	/^	PMDK_TAILQ_HEAD(scenarioshead, scenario) head;$/;"	m	struct:scenarios
head	deps/pmdk/src/examples/libpmemobj/linkedlist/fifo.c	/^	struct tqueuehead head;$/;"	m	struct:fifo_root	typeref:struct:fifo_root::tqueuehead	file:
head	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^	PMEMoid head;		\/* object ID of the first log buffer *\/$/;"	m	struct:base	file:
head	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^	TOID(struct log) head;	\/* object ID of the first log buffer *\/$/;"	m	struct:base	file:
head	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	/^	node_id head;$/;"	m	struct:list_root	file:
head	deps/pmdk/src/libpmemobj/list.c	/^	struct list_head *head;$/;"	m	struct:list_args_insert	typeref:struct:list_args_insert::list_head	file:
head	deps/pmdk/src/libpmemobj/list.c	/^	struct list_head *head;$/;"	m	struct:list_args_reinsert	typeref:struct:list_args_reinsert::list_head	file:
head	deps/pmdk/src/libpmemobj/list.c	/^	struct list_head *head;$/;"	m	struct:list_args_remove	typeref:struct:list_args_remove::list_head	file:
head	deps/pmdk/src/test/obj_list/obj_list.h	/^	POBJ_LIST_HEAD(listhead, struct item) head;$/;"	m	struct:list
head	deps/pmdk/src/test/obj_list/obj_list.h	/^	struct list_head head;$/;"	m	struct:oob_list	typeref:struct:oob_list::list_head
head	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^	POBJ_LIST_HEAD(listhead, struct item) head;$/;"	m	struct:list	file:
head	deps/pmdk/src/test/obj_tx_locks_abort/obj_tx_locks_abort.c	/^	TOID(struct obj) head;$/;"	m	struct:root_obj	file:
head	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	struct field *head;$/;"	m	struct:pmemspoil_list	typeref:struct:pmemspoil_list::field	file:
head	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	struct list_head *head;$/;"	m	struct:list_pair	typeref:struct:list_pair::list_head	file:
head	deps/pmdk/src/tools/pmempool/common.h	/^	PMDK_LIST_HEAD(rangeshead, range) head;$/;"	m	struct:ranges
head	src/adlist.h	/^    listNode *head;$/;"	m	struct:list
head	src/quicklist.h	/^    quicklistNode *head;$/;"	m	struct:quicklist
header	deps/pmdk/src/libpmemobj/heap_layout.h	/^	struct heap_header header;$/;"	m	struct:heap_layout	typeref:struct:heap_layout::heap_header
header	deps/pmdk/src/libpmemobj/heap_layout.h	/^	struct zone_header header;$/;"	m	struct:zone	typeref:struct:zone::zone_header
header	src/server.h	/^    struct zskiplistNode *header, *tail;$/;"	m	struct:zskiplist	typeref:struct:zskiplist::zskiplistNode
header_type	deps/pmdk/src/include/libpmemobj/ctl.h	/^	enum pobj_header_type header_type;$/;"	m	struct:pobj_alloc_class_desc	typeref:enum:pobj_alloc_class_desc::pobj_header_type
header_type	deps/pmdk/src/libpmemobj/alloc_class.h	/^	enum header_type header_type;$/;"	m	struct:alloc_class	typeref:enum:alloc_class::header_type
header_type	deps/pmdk/src/libpmemobj/heap_layout.h	/^enum header_type {$/;"	g
header_type	deps/pmdk/src/libpmemobj/memblock.h	/^	enum header_type header_type;$/;"	m	struct:memory_block	typeref:enum:memory_block::header_type
header_type_to_flag	deps/pmdk/src/libpmemobj/heap_layout.h	/^static const enum chunk_flags header_type_to_flag[MAX_HEADER_TYPES] = {$/;"	v	typeref:enum:chunk_flags
header_type_to_size	deps/pmdk/src/libpmemobj/heap_layout.h	/^static const size_t header_type_to_size[MAX_HEADER_TYPES] = {$/;"	v
headersize	src/ziplist.c	/^    unsigned int headersize;$/;"	m	struct:zlentry	file:
headq	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	PMDK_CIRCLEQ_HEAD(qlist, item) headq;$/;"	m	struct:obj_worker	file:
healthy_replicas	deps/pmdk/src/libpmempool/check_util.h	/^	unsigned healthy_replicas;$/;"	m	struct:__anon87
heap	deps/pmdk/src/include/libpmemobj/action_base.h	/^		struct pobj_action_heap heap;$/;"	m	union:pobj_action::__anon49	typeref:struct:pobj_action::__anon49::pobj_action_heap
heap	deps/pmdk/src/libpmemobj/container.h	/^	struct palloc_heap *heap;$/;"	m	struct:block_container	typeref:struct:block_container::palloc_heap
heap	deps/pmdk/src/libpmemobj/memblock.h	/^	struct palloc_heap *heap;$/;"	m	struct:memory_block	typeref:struct:memory_block::palloc_heap
heap	deps/pmdk/src/libpmemobj/obj.h	/^	struct palloc_heap heap;$/;"	m	struct:pmemobjpool	typeref:struct:pmemobjpool::palloc_heap
heap	deps/pmdk/src/libpmemobj/recycler.c	/^	struct palloc_heap *heap;$/;"	m	struct:recycler	typeref:struct:recycler::palloc_heap	file:
heap	deps/pmdk/src/test/obj_heap/obj_heap.c	/^	void *heap;$/;"	m	struct:mock_pop	file:
heap	deps/pmdk/src/tools/pmempool/info.h	/^		struct palloc_heap *heap;$/;"	m	struct:pmem_info::__anon111	typeref:struct:pmem_info::__anon111::palloc_heap
heap_alloc_classes	deps/pmdk/src/libpmemobj/heap.c	/^heap_alloc_classes(struct palloc_heap *heap)$/;"	f
heap_arena_create	deps/pmdk/src/libpmemobj/heap.c	/^heap_arena_create(struct palloc_heap *heap)$/;"	f
heap_arena_delete	deps/pmdk/src/libpmemobj/heap.c	/^heap_arena_delete(struct arena *arena)$/;"	f	file:
heap_arena_new	deps/pmdk/src/libpmemobj/heap.c	/^heap_arena_new(struct palloc_heap *heap, int automatic)$/;"	f	file:
heap_arena_thread_attach	deps/pmdk/src/libpmemobj/heap.c	/^heap_arena_thread_attach(struct palloc_heap *heap, struct arena *a)$/;"	f	file:
heap_arena_thread_detach	deps/pmdk/src/libpmemobj/heap.c	/^heap_arena_thread_detach(struct arena *a)$/;"	f	file:
heap_arenas_fini	deps/pmdk/src/libpmemobj/heap.c	/^heap_arenas_fini(struct arenas *arenas)$/;"	f	file:
heap_arenas_init	deps/pmdk/src/libpmemobj/heap.c	/^heap_arenas_init(struct arenas *arenas)$/;"	f	file:
heap_boot	deps/pmdk/src/libpmemobj/heap.c	/^heap_boot(struct palloc_heap *heap, void *heap_start, uint64_t heap_size,$/;"	f
heap_boot	deps/pmdk/src/test/obj_list/mocks_windows.h	83;"	d
heap_bucket_acquire	deps/pmdk/src/libpmemobj/heap.c	/^heap_bucket_acquire(struct palloc_heap *heap, uint8_t class_id,$/;"	f
heap_bucket_deref_active	deps/pmdk/src/libpmemobj/heap.c	/^heap_bucket_deref_active(struct palloc_heap *heap, struct bucket *b)$/;"	f	file:
heap_bucket_release	deps/pmdk/src/libpmemobj/heap.c	/^heap_bucket_release(struct palloc_heap *heap, struct bucket *b)$/;"	f
heap_buckets_init	deps/pmdk/src/libpmemobj/heap.c	/^heap_buckets_init(struct palloc_heap *heap)$/;"	f
heap_check	deps/pmdk/src/libpmemobj/heap.c	/^heap_check(void *heap_start, uint64_t heap_size)$/;"	f
heap_check_remote	deps/pmdk/src/libpmemobj/heap.c	/^heap_check_remote(void *heap_start, uint64_t heap_size, struct remote_ops *ops)$/;"	f
heap_cleanup	deps/pmdk/src/libpmemobj/heap.c	/^heap_cleanup(struct palloc_heap *heap)$/;"	f
heap_coalesce	deps/pmdk/src/libpmemobj/heap.c	/^heap_coalesce(struct palloc_heap *heap,$/;"	f	file:
heap_coalesce_huge	deps/pmdk/src/libpmemobj/heap.c	/^heap_coalesce_huge(struct palloc_heap *heap, struct bucket *b,$/;"	f
heap_create_alloc_class_buckets	deps/pmdk/src/libpmemobj/heap.c	/^heap_create_alloc_class_buckets(struct palloc_heap *heap, struct alloc_class *c)$/;"	f
heap_curr_allocated	deps/pmdk/src/libpmemobj/stats.h	/^	uint64_t heap_curr_allocated;$/;"	m	struct:stats_persistent
heap_discard_run	deps/pmdk/src/libpmemobj/heap.c	/^heap_discard_run(struct palloc_heap *heap, struct memory_block *m)$/;"	f
heap_end	deps/pmdk/src/libpmemobj/heap.c	/^heap_end(struct palloc_heap *h)$/;"	f
heap_ensure_huge_bucket_filled	deps/pmdk/src/libpmemobj/heap.c	/^heap_ensure_huge_bucket_filled(struct palloc_heap *heap, struct bucket *bucket)$/;"	f	file:
heap_ensure_run_bucket_filled	deps/pmdk/src/libpmemobj/heap.c	/^heap_ensure_run_bucket_filled(struct palloc_heap *heap, struct bucket *b,$/;"	f	file:
heap_extend	deps/pmdk/src/libpmemobj/heap.c	/^heap_extend(struct palloc_heap *heap, struct bucket *b, size_t size)$/;"	f
heap_force_recycle	deps/pmdk/src/libpmemobj/heap.c	/^heap_force_recycle(struct palloc_heap *heap)$/;"	f
heap_foreach_object	deps/pmdk/src/libpmemobj/heap.c	/^heap_foreach_object(struct palloc_heap *heap, object_callback cb, void *arg,$/;"	f
heap_free_chunk_reuse	deps/pmdk/src/libpmemobj/heap.c	/^heap_free_chunk_reuse(struct palloc_heap *heap,$/;"	f
heap_get_adjacent_free_block	deps/pmdk/src/libpmemobj/heap.c	/^heap_get_adjacent_free_block(struct palloc_heap *heap,$/;"	f	file:
heap_get_arena_auto	deps/pmdk/src/libpmemobj/heap.c	/^heap_get_arena_auto(struct palloc_heap *heap, unsigned arena_id)$/;"	f
heap_get_arena_buckets	deps/pmdk/src/libpmemobj/heap.c	/^heap_get_arena_buckets(struct palloc_heap *heap, unsigned arena_id)$/;"	f
heap_get_arena_by_id	deps/pmdk/src/libpmemobj/heap.c	/^heap_get_arena_by_id(struct palloc_heap *heap, unsigned arena_id)$/;"	f	file:
heap_get_best_class	deps/pmdk/src/libpmemobj/heap.c	/^heap_get_best_class(struct palloc_heap *heap, size_t size)$/;"	f
heap_get_bestfit_block	deps/pmdk/src/libpmemobj/heap.c	/^heap_get_bestfit_block(struct palloc_heap *heap, struct bucket *b,$/;"	f
heap_get_chunk	deps/pmdk/src/libpmemobj/heap.h	/^heap_get_chunk(struct palloc_heap *heap, const struct memory_block *m)$/;"	f
heap_get_chunk_hdr	deps/pmdk/src/libpmemobj/heap.h	/^heap_get_chunk_hdr(struct palloc_heap *heap, const struct memory_block *m)$/;"	f
heap_get_chunk_run	deps/pmdk/src/libpmemobj/heap.h	/^heap_get_chunk_run(struct palloc_heap *heap, const struct memory_block *m)$/;"	f
heap_get_narenas_auto	deps/pmdk/src/libpmemobj/heap.c	/^heap_get_narenas_auto(struct palloc_heap *heap)$/;"	f
heap_get_narenas_max	deps/pmdk/src/libpmemobj/heap.c	/^heap_get_narenas_max(struct palloc_heap *heap)$/;"	f
heap_get_narenas_total	deps/pmdk/src/libpmemobj/heap.c	/^heap_get_narenas_total(struct palloc_heap *heap)$/;"	f
heap_get_procs	deps/pmdk/src/libpmemobj/heap.c	/^heap_get_procs(void)$/;"	f	file:
heap_get_run_lock	deps/pmdk/src/libpmemobj/heap.c	/^heap_get_run_lock(struct palloc_heap *heap, uint32_t chunk_id)$/;"	f
heap_get_thread_arena_id	deps/pmdk/src/libpmemobj/heap.c	/^heap_get_thread_arena_id(struct palloc_heap *heap)$/;"	f
heap_header	deps/pmdk/src/libpmemobj/heap_layout.h	/^struct heap_header {$/;"	s
heap_init	deps/pmdk/src/libpmemobj/heap.c	/^heap_init(void *heap_start, uint64_t heap_size, uint64_t *sizep,$/;"	f
heap_interrupt	deps/pmdk/src/test/obj_heap_interrupt/obj_heap_interrupt.c	/^POBJ_LAYOUT_BEGIN(heap_interrupt);$/;"	v
heap_interrupt	deps/pmdk/src/test/obj_heap_interrupt/obj_heap_interrupt.c	/^POBJ_LAYOUT_END(heap_interrupt);$/;"	v
heap_layout	deps/pmdk/src/libpmemobj/heap_layout.h	/^struct heap_layout {$/;"	s
heap_max_zone	deps/pmdk/src/libpmemobj/heap.c	/^heap_max_zone(size_t size)$/;"	f	file:
heap_memblock_insert_block	deps/pmdk/src/libpmemobj/heap.c	/^heap_memblock_insert_block(const struct memory_block *m, void *b)$/;"	f	file:
heap_memblock_on_free	deps/pmdk/src/libpmemobj/heap.c	/^heap_memblock_on_free(struct palloc_heap *heap, const struct memory_block *m)$/;"	f
heap_offset	deps/pmdk/src/libpmemobj/obj.h	/^	uint64_t heap_offset;$/;"	m	struct:pmemobjpool
heap_populate_bucket	deps/pmdk/src/libpmemobj/heap.c	/^heap_populate_bucket(struct palloc_heap *heap, struct bucket *bucket)$/;"	f	file:
heap_print	deps/jemalloc/test/unit/ph.c	/^heap_print(const heap_t *heap)$/;"	f	file:
heap_reclaim_garbage	deps/pmdk/src/libpmemobj/heap.c	/^heap_reclaim_garbage(struct palloc_heap *heap, struct bucket *bucket)$/;"	f	file:
heap_reclaim_run	deps/pmdk/src/libpmemobj/heap.c	/^heap_reclaim_run(struct palloc_heap *heap, struct memory_block *m, int startup)$/;"	f	file:
heap_reclaim_zone_garbage	deps/pmdk/src/libpmemobj/heap.c	/^heap_reclaim_zone_garbage(struct palloc_heap *heap, struct bucket *bucket,$/;"	f	file:
heap_recycle_unused	deps/pmdk/src/libpmemobj/heap.c	/^heap_recycle_unused(struct palloc_heap *heap, struct recycler *recycler,$/;"	f	file:
heap_reuse_from_recycler	deps/pmdk/src/libpmemobj/heap.c	/^heap_reuse_from_recycler(struct palloc_heap *heap,$/;"	f	file:
heap_rt	deps/pmdk/src/libpmemobj/heap.c	/^struct heap_rt {$/;"	s	file:
heap_run_active	deps/pmdk/src/libpmemobj/stats.h	/^	uint64_t heap_run_active;$/;"	m	struct:stats_transient
heap_run_allocated	deps/pmdk/src/libpmemobj/stats.h	/^	uint64_t heap_run_allocated;$/;"	m	struct:stats_transient
heap_run_create	deps/pmdk/src/libpmemobj/heap.c	/^heap_run_create(struct palloc_heap *heap, struct bucket *b,$/;"	f	file:
heap_run_into_free_chunk	deps/pmdk/src/libpmemobj/heap.c	/^heap_run_into_free_chunk(struct palloc_heap *heap,$/;"	f	file:
heap_run_reuse	deps/pmdk/src/libpmemobj/heap.c	/^heap_run_reuse(struct palloc_heap *heap, struct bucket *b,$/;"	f	file:
heap_set_arena_auto	deps/pmdk/src/libpmemobj/heap.c	/^heap_set_arena_auto(struct palloc_heap *heap, unsigned arena_id,$/;"	f
heap_set_arena_thread	deps/pmdk/src/libpmemobj/heap.c	/^heap_set_arena_thread(struct palloc_heap *heap, unsigned arena_id)$/;"	f
heap_set_narenas_max	deps/pmdk/src/libpmemobj/heap.c	/^heap_set_narenas_max(struct palloc_heap *heap, unsigned size)$/;"	f
heap_size	deps/pmdk/src/libpmemobj/obj.h	/^	uint64_t heap_size;$/;"	m	struct:pmemobjpool
heap_split_block	deps/pmdk/src/libpmemobj/heap.c	/^heap_split_block(struct palloc_heap *heap, struct bucket *b,$/;"	f	file:
heap_t	deps/jemalloc/test/unit/ph.c	/^typedef ph(node_t) heap_t;$/;"	t	file:
heap_thread_arena	deps/pmdk/src/libpmemobj/heap.c	/^heap_thread_arena(struct palloc_heap *heap)$/;"	f	file:
heap_thread_arena_assign	deps/pmdk/src/libpmemobj/heap.c	/^heap_thread_arena_assign(struct palloc_heap *heap)$/;"	f	file:
heap_thread_arena_destructor	deps/pmdk/src/libpmemobj/heap.c	/^heap_thread_arena_destructor(void *arg)$/;"	f	file:
heap_validate	deps/jemalloc/test/unit/ph.c	/^heap_validate(const heap_t *heap)$/;"	f	file:
heap_verify_chunk_header	deps/pmdk/src/libpmemobj/heap.c	/^heap_verify_chunk_header(struct chunk_header *hdr)$/;"	f	file:
heap_verify_header	deps/pmdk/src/libpmemobj/heap.c	/^heap_verify_header(struct heap_header *hdr)$/;"	f	file:
heap_verify_zone	deps/pmdk/src/libpmemobj/heap.c	/^heap_verify_zone(struct zone *zone)$/;"	f	file:
heap_verify_zone_header	deps/pmdk/src/libpmemobj/heap.c	/^heap_verify_zone_header(struct zone_header *hdr)$/;"	f	file:
heap_vg_open	deps/pmdk/src/libpmemobj/heap.c	/^heap_vg_open(struct palloc_heap *heap, object_callback cb,$/;"	f
heap_write_header	deps/pmdk/src/libpmemobj/heap.c	/^heap_write_header(struct heap_header *hdr)$/;"	f	file:
heap_zone_foreach_object	deps/pmdk/src/libpmemobj/heap.c	/^heap_zone_foreach_object(struct palloc_heap *heap, object_callback cb,$/;"	f	file:
heap_zone_init	deps/pmdk/src/libpmemobj/heap.c	/^heap_zone_init(struct palloc_heap *heap, uint32_t zone_id,$/;"	f	file:
heap_zone_update_if_needed	deps/pmdk/src/libpmemobj/heap.c	/^heap_zone_update_if_needed(struct palloc_heap *heap)$/;"	f	file:
height	deps/jemalloc/include/jemalloc/internal/rtree.h	/^	unsigned		height;$/;"	m	struct:rtree_s
helgrind	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    helgrind = t.DISABLE$/;"	v	class:TEST2
helgrind	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    helgrind = t.DISABLE$/;"	v	class:TEST5
helgrind	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    helgrind = t.DISABLE$/;"	v	class:BASE
helgrind_count	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^helgrind_count(uint64_t x)$/;"	f	file:
hello_str	deps/pmdk/src/examples/librpmem/hello.c	/^static const char *hello_str[] = {$/;"	v	file:
hello_t	deps/pmdk/src/examples/librpmem/hello.c	/^struct hello_t {$/;"	s	file:
help	deps/pmdk/src/benchmarks/benchmark.hpp	/^	bool help;		 \/* print help for benchmark *\/$/;"	m	struct:benchmark_args
help	deps/pmdk/src/benchmarks/pmembench.cpp	/^	bool help;$/;"	m	struct:benchmark_opts	file:
help	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^	void (*help)(char *);$/;"	m	struct:examine	file:
help	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^	void (*help)(char *);$/;"	m	struct:search	file:
help	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^	void (*help)(char *);$/;"	m	struct:command	file:
help	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^help(void)$/;"	f	file:
help	deps/pmdk/src/tools/pmempool/pmempool.c	/^	void (*help)(const char *);$/;"	m	struct:command	file:
help	deps/pmdk/utils/sort_solution	/^sub help {$/;"	s
helpEntries	src/redis-cli.c	/^static helpEntry *helpEntries;$/;"	v	file:
helpEntriesLen	src/redis-cli.c	/^static int helpEntriesLen;$/;"	v	file:
helpEntry	src/redis-cli.c	/^} helpEntry;$/;"	t	typeref:struct:__anon168	file:
help_cluster_cmd	src/redis-trib.rb	/^    def help_cluster_cmd(argv,opt)$/;"	f	class:RedisTrib.alloc_slots
help_func	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^help_func(char *appname, struct pmem_context *ctx, int argc, char *argv[])$/;"	f	file:
help_func	deps/pmdk/src/tools/pmempool/pmempool.c	/^help_func(const char *appname, int argc, char *argv[])$/;"	f	file:
help_help	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^help_help(char *appname)$/;"	f	file:
help_help	deps/pmdk/src/tools/pmempool/pmempool.c	/^help_help(const char *appname)$/;"	f	file:
help_str	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^static const char * const  help_str =$/;"	v	file:
help_str	deps/pmdk/src/tools/pmempool/check.c	/^static const char * const help_str =$/;"	v	file:
help_str	deps/pmdk/src/tools/pmempool/create.c	/^static const char * const help_str =$/;"	v	file:
help_str	deps/pmdk/src/tools/pmempool/dump.c	/^static const char * const help_str =$/;"	v	file:
help_str	deps/pmdk/src/tools/pmempool/feature.c	/^static const char * const help_str =$/;"	v	file:
help_str	deps/pmdk/src/tools/pmempool/info.c	/^static const char * const help_str =$/;"	v	file:
help_str	deps/pmdk/src/tools/pmempool/rm.c	/^static const char * const help_str =$/;"	v	file:
help_str	deps/pmdk/src/tools/pmempool/synchronize.c	/^static const char * const help_str =$/;"	v	file:
help_str	deps/pmdk/src/tools/pmempool/transform.c	/^static const char * const help_str =$/;"	v	file:
help_str	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^static const char * const help_str =$/;"	v	file:
help_str	deps/pmdk/utils/check_license/check-license.c	/^static const char * const help_str =$/;"	v	file:
hex	deps/pmdk/src/tools/pmempool/dump.c	/^	int hex;$/;"	m	struct:pmempool_dump	file:
hex_digit_to_int	deps/hiredis/sds.c	/^int hex_digit_to_int(char c) {$/;"	f
hex_digit_to_int	src/sds.c	/^int hex_digit_to_int(char c) {$/;"	f
hexdigit2int	deps/lua/src/lua_cjson.c	/^static int hexdigit2int(char hex)$/;"	f	file:
hexdump	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^    int32_t  hexdump;$/;"	m	struct:examine_ctx	file:
hexdump	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^    int32_t  hexdump;$/;"	m	struct:search_ctx	file:
hexistsCommand	src/t_hash.c	/^void hexistsCommand(client *c) {$/;"	f
hgetCommand	src/t_hash.c	/^void hgetCommand(client *c) {$/;"	f
hgetallCommand	src/t_hash.c	/^void hgetallCommand(client *c) {$/;"	f
high_score	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	uint16_t high_score;$/;"	m	struct:game_state	file:
high_score	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	unsigned high_score;$/;"	m	struct:state	file:
highchunks	deps/jemalloc/src/chunk.c	/^static size_t	highchunks;$/;"	v	file:
highest_valid	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint8_t highest_valid;$/;"	m	struct:platform_capabilities
hincrbyCommand	src/t_hash.c	/^void hincrbyCommand(client *c) {$/;"	f
hincrbyfloatCommand	src/t_hash.c	/^void hincrbyfloatCommand(client *c) {$/;"	f
hints	deps/linenoise/example.c	/^char *hints(const char *buf, int *color, int *bold) {$/;"	f
hints	src/redis-cli.c	/^    int hints;$/;"	m	struct:pref	file:
hintsCallback	deps/linenoise/linenoise.c	/^static linenoiseHintsCallback *hintsCallback = NULL;$/;"	v	file:
hintsCallback	src/redis-cli.c	/^static char *hintsCallback(const char *buf, int *color, int *bold) {$/;"	f	file:
history	deps/linenoise/linenoise.c	/^static char **history = NULL;$/;"	v	file:
history_index	deps/linenoise/linenoise.c	/^    int history_index;  \/* The history index we are currently editing. *\/$/;"	m	struct:linenoiseState	file:
history_len	deps/linenoise/linenoise.c	/^static int history_len = 0;$/;"	v	file:
history_max_len	deps/linenoise/linenoise.c	/^static int history_max_len = LINENOISE_DEFAULT_HISTORY_MAX_LEN;$/;"	v	file:
hkeysCommand	src/t_hash.c	/^void hkeysCommand(client *c) {$/;"	f
hlenCommand	src/t_hash.c	/^void hlenCommand(client *c) {$/;"	f
hllAdd	src/hyperloglog.c	/^int hllAdd(robj *o, unsigned char *ele, size_t elesize) {$/;"	f
hllCount	src/hyperloglog.c	/^uint64_t hllCount(struct hllhdr *hdr, int *invalid) {$/;"	f
hllDenseAdd	src/hyperloglog.c	/^int hllDenseAdd(uint8_t *registers, unsigned char *ele, size_t elesize) {$/;"	f
hllDenseSum	src/hyperloglog.c	/^double hllDenseSum(uint8_t *registers, double *PE, int *ezp) {$/;"	f
hllMerge	src/hyperloglog.c	/^int hllMerge(uint8_t *max, robj *hll) {$/;"	f
hllPatLen	src/hyperloglog.c	/^int hllPatLen(unsigned char *ele, size_t elesize, long *regp) {$/;"	f
hllRawSum	src/hyperloglog.c	/^double hllRawSum(uint8_t *registers, double *PE, int *ezp) {$/;"	f
hllSparseAdd	src/hyperloglog.c	/^int hllSparseAdd(robj *o, unsigned char *ele, size_t elesize) {$/;"	f
hllSparseSum	src/hyperloglog.c	/^double hllSparseSum(uint8_t *sparse, int sparselen, double *PE, int *ezp, int *invalid) {$/;"	f
hllSparseToDense	src/hyperloglog.c	/^int hllSparseToDense(robj *o) {$/;"	f
hll_sparse_max_bytes	src/server.h	/^    size_t hll_sparse_max_bytes;$/;"	m	struct:redisServer
hllhdr	src/hyperloglog.c	/^struct hllhdr {$/;"	s	file:
hm_atomic_check	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_check(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap)$/;"	f
hm_atomic_cmd	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_cmd(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap,$/;"	f
hm_atomic_count	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_count(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap)$/;"	f
hm_atomic_create	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_create(PMEMobjpool *pop, TOID(struct hashmap_atomic) *map, void *arg)$/;"	f
hm_atomic_debug	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_debug(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap,$/;"	f	file:
hm_atomic_foreach	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_foreach(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap,$/;"	f
hm_atomic_get	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_get(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap,$/;"	f
hm_atomic_init	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_init(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap)$/;"	f
hm_atomic_insert	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_insert(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap,$/;"	f
hm_atomic_lookup	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_lookup(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap,$/;"	f
hm_atomic_rebuild	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_rebuild(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap,$/;"	f	file:
hm_atomic_rebuild_finish	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_rebuild_finish(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap)$/;"	f	file:
hm_atomic_remove	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^hm_atomic_remove(PMEMobjpool *pop, TOID(struct hashmap_atomic) hashmap,$/;"	f
hm_rp_check	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hm_rp_check(PMEMobjpool *pop, TOID(struct hashmap_rp) hashmap)$/;"	f
hm_rp_cmd	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hm_rp_cmd(PMEMobjpool *pop, TOID(struct hashmap_rp) hashmap,$/;"	f
hm_rp_count	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hm_rp_count(PMEMobjpool *pop, TOID(struct hashmap_rp) hashmap)$/;"	f
hm_rp_create	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hm_rp_create(PMEMobjpool *pop, TOID(struct hashmap_rp) *map, void *arg)$/;"	f
hm_rp_debug	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hm_rp_debug(PMEMobjpool *pop, TOID(struct hashmap_rp) hashmap, FILE *out)$/;"	f	file:
hm_rp_foreach	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hm_rp_foreach(PMEMobjpool *pop, TOID(struct hashmap_rp) hashmap,$/;"	f
hm_rp_get	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hm_rp_get(PMEMobjpool *pop, TOID(struct hashmap_rp) hashmap,$/;"	f
hm_rp_init	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hm_rp_init(PMEMobjpool *pop, TOID(struct hashmap_rp) hashmap)$/;"	f
hm_rp_insert	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hm_rp_insert(PMEMobjpool *pop, TOID(struct hashmap_rp) hashmap,$/;"	f
hm_rp_lookup	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hm_rp_lookup(PMEMobjpool *pop, TOID(struct hashmap_rp) hashmap,$/;"	f
hm_rp_rebuild	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hm_rp_rebuild(PMEMobjpool *pop, TOID(struct hashmap_rp) hashmap,$/;"	f	file:
hm_rp_remove	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^hm_rp_remove(PMEMobjpool *pop, TOID(struct hashmap_rp) hashmap,$/;"	f
hm_tx_check	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^hm_tx_check(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap)$/;"	f
hm_tx_cmd	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^hm_tx_cmd(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap,$/;"	f
hm_tx_count	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^hm_tx_count(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap)$/;"	f
hm_tx_create	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^hm_tx_create(PMEMobjpool *pop, TOID(struct hashmap_tx) *map, void *arg)$/;"	f
hm_tx_debug	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^hm_tx_debug(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap, FILE *out)$/;"	f	file:
hm_tx_foreach	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^hm_tx_foreach(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap,$/;"	f
hm_tx_get	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^hm_tx_get(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap, uint64_t key)$/;"	f
hm_tx_init	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^hm_tx_init(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap)$/;"	f
hm_tx_insert	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^hm_tx_insert(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap,$/;"	f
hm_tx_lookup	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^hm_tx_lookup(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap, uint64_t key)$/;"	f
hm_tx_rebuild	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^hm_tx_rebuild(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap, size_t new_len)$/;"	f	file:
hm_tx_remove	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^hm_tx_remove(PMEMobjpool *pop, TOID(struct hashmap_tx) hashmap, uint64_t key)$/;"	f
hmgetCommand	src/t_hash.c	/^void hmgetCommand(client *c) {$/;"	f
hmin	deps/jemalloc/src/rtree.c	/^hmin(unsigned ha, unsigned hb)$/;"	f	file:
hmsetCommand	src/t_hash.c	/^void hmsetCommand(client *c) {$/;"	f
hook	deps/lua/src/lstate.h	/^  lua_Hook hook;$/;"	m	struct:lua_State
hook	deps/lua/test/trace-calls.lua	/^local function hook(event)$/;"	f
hookcount	deps/lua/src/lstate.h	/^  int hookcount;$/;"	m	struct:lua_State
hookf	deps/lua/src/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
hookmask	deps/lua/src/lstate.h	/^  lu_byte hookmask;$/;"	m	struct:lua_State
host	deps/hiredis/test.c	/^        const char *host;$/;"	m	struct:config::__anon149	file:
hostip	src/redis-benchmark.c	/^    const char *hostip;$/;"	m	struct:config	file:
hostip	src/redis-cli.c	/^    char *hostip;$/;"	m	struct:config	file:
hostport	src/redis-benchmark.c	/^    int hostport;$/;"	m	struct:config	file:
hostport	src/redis-cli.c	/^    int hostport;$/;"	m	struct:config	file:
hostsocket	src/redis-benchmark.c	/^    const char *hostsocket;$/;"	m	struct:config	file:
hostsocket	src/redis-cli.c	/^    char *hostsocket;$/;"	m	struct:config	file:
howmany	deps/pmdk/src/windows/include/sys/param.h	41;"	d
hscanCommand	src/t_hash.c	/^void hscanCommand(client *c) {$/;"	f
hsetCommand	src/t_hash.c	/^void hsetCommand(client *c) {$/;"	f
hsetnxCommand	src/t_hash.c	/^void hsetnxCommand(client *c) {$/;"	f
hstats	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	malloc_huge_stats_t	*hstats;	\/* nhclasses elements. *\/$/;"	m	struct:ctl_arena_stats_s
hstats	deps/jemalloc/include/jemalloc/internal/stats.h	/^	malloc_huge_stats_t	*hstats;$/;"	m	struct:arena_stats_s
hstrlenCommand	src/t_hash.c	/^void hstrlenCommand(client *c) {$/;"	f
ht	deps/hiredis/dict.h	/^    dict *ht;$/;"	m	struct:dictIterator
ht	src/dict.h	/^    dictht ht[2];$/;"	m	struct:dict
ht	src/t_zset.c	/^            } ht;$/;"	m	union:__anon152::__anon153::_iterset	typeref:struct:__anon152::__anon153::_iterset::__anon155	file:
htNeedsResize	src/server.c	/^int htNeedsResize(dict *dict) {$/;"	f
htobe16	deps/pmdk/src/windows/include/endian.h	53;"	d
htobe32	deps/pmdk/src/windows/include/endian.h	54;"	d
htobe64	deps/pmdk/src/windows/include/endian.h	55;"	d
htole16	deps/pmdk/src/windows/include/endian.h	45;"	d
htole32	deps/pmdk/src/windows/include/endian.h	46;"	d
htole64	deps/pmdk/src/windows/include/endian.h	47;"	d
htonu64	src/endianconv.h	67;"	d
htonu64	src/endianconv.h	70;"	d
huge	deps/jemalloc/include/jemalloc/internal/arena.h	/^	ql_head(extent_node_t)	huge;$/;"	m	struct:arena_s
huge_aalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	281;"	d
huge_aalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	281;"	d
huge_aalloc	deps/jemalloc/src/huge.c	/^huge_aalloc(const void *ptr)$/;"	f
huge_block_size	deps/pmdk/src/libpmemobj/memblock.c	/^huge_block_size(const struct memory_block *m)$/;"	f	file:
huge_dalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	282;"	d
huge_dalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	282;"	d
huge_dalloc	deps/jemalloc/src/huge.c	/^huge_dalloc(tsdn_t *tsdn, void *ptr)$/;"	f
huge_dalloc_junk	deps/jemalloc/include/jemalloc/internal/private_namespace.h	283;"	d
huge_dalloc_junk	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	283;"	d
huge_dalloc_junk	deps/jemalloc/src/huge.c	/^huge_dalloc_junk(void *ptr, size_t usize)$/;"	f	file:
huge_dalloc_junk	deps/jemalloc/src/huge.c	/^huge_dalloc_junk_t *huge_dalloc_junk = JEMALLOC_N(huge_dalloc_junk_impl);$/;"	v
huge_dalloc_junk	deps/jemalloc/src/huge.c	117;"	d	file:
huge_dalloc_junk	deps/jemalloc/src/huge.c	118;"	d	file:
huge_dalloc_junk	deps/jemalloc/src/huge.c	134;"	d	file:
huge_dalloc_junk	deps/jemalloc/src/huge.c	135;"	d	file:
huge_dalloc_junk_intercept	deps/jemalloc/test/unit/junk.c	/^huge_dalloc_junk_intercept(void *ptr, size_t usize)$/;"	f	file:
huge_dalloc_junk_orig	deps/jemalloc/test/unit/junk.c	/^static huge_dalloc_junk_t *huge_dalloc_junk_orig;$/;"	v	file:
huge_dalloc_junk_t	deps/jemalloc/include/jemalloc/internal/huge.h	/^typedef void (huge_dalloc_junk_t)(void *, size_t);$/;"	t
huge_ensure_header_type	deps/pmdk/src/libpmemobj/memblock.c	/^huge_ensure_header_type(const struct memory_block *m,$/;"	f	file:
huge_fill_pct	deps/pmdk/src/libpmemobj/memblock.c	/^huge_fill_pct(const struct memory_block *m)$/;"	f	file:
huge_get_lock	deps/pmdk/src/libpmemobj/memblock.c	/^huge_get_lock(const struct memory_block *m)$/;"	f	file:
huge_get_real_data	deps/pmdk/src/libpmemobj/memblock.c	/^huge_get_real_data(const struct memory_block *m)$/;"	f	file:
huge_get_state	deps/pmdk/src/libpmemobj/memblock.c	/^huge_get_state(const struct memory_block *m)$/;"	f	file:
huge_iterate_free	deps/pmdk/src/libpmemobj/memblock.c	/^huge_iterate_free(const struct memory_block *m, object_callback cb, void *arg)$/;"	f	file:
huge_iterate_used	deps/pmdk/src/libpmemobj/memblock.c	/^huge_iterate_used(const struct memory_block *m, object_callback cb, void *arg)$/;"	f	file:
huge_malloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	284;"	d
huge_malloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	284;"	d
huge_malloc	deps/jemalloc/src/huge.c	/^huge_malloc(tsdn_t *tsdn, arena_t *arena, size_t usize, bool zero)$/;"	f
huge_mtx	deps/jemalloc/include/jemalloc/internal/arena.h	/^	malloc_mutex_t		huge_mtx;$/;"	m	struct:arena_s
huge_node_get	deps/jemalloc/src/huge.c	/^huge_node_get(const void *ptr)$/;"	f	file:
huge_node_reset	deps/jemalloc/src/huge.c	/^huge_node_reset(tsdn_t *tsdn, const void *ptr, extent_node_t *node)$/;"	f	file:
huge_node_set	deps/jemalloc/src/huge.c	/^huge_node_set(tsdn_t *tsdn, const void *ptr, extent_node_t *node)$/;"	f	file:
huge_node_unset	deps/jemalloc/src/huge.c	/^huge_node_unset(const void *ptr, const extent_node_t *node)$/;"	f	file:
huge_palloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	285;"	d
huge_palloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	285;"	d
huge_palloc	deps/jemalloc/src/huge.c	/^huge_palloc(tsdn_t *tsdn, arena_t *arena, size_t usize, size_t alignment,$/;"	f
huge_prep_operation_hdr	deps/pmdk/src/libpmemobj/memblock.c	/^huge_prep_operation_hdr(const struct memory_block *m, enum memblock_state op,$/;"	f	file:
huge_prof_tctx_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	286;"	d
huge_prof_tctx_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	286;"	d
huge_prof_tctx_get	deps/jemalloc/src/huge.c	/^huge_prof_tctx_get(tsdn_t *tsdn, const void *ptr)$/;"	f
huge_prof_tctx_reset	deps/jemalloc/include/jemalloc/internal/private_namespace.h	287;"	d
huge_prof_tctx_reset	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	287;"	d
huge_prof_tctx_reset	deps/jemalloc/src/huge.c	/^huge_prof_tctx_reset(tsdn_t *tsdn, const void *ptr)$/;"	f
huge_prof_tctx_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	288;"	d
huge_prof_tctx_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	288;"	d
huge_prof_tctx_set	deps/jemalloc/src/huge.c	/^huge_prof_tctx_set(tsdn_t *tsdn, const void *ptr, prof_tctx_t *tctx)$/;"	f
huge_ralloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	289;"	d
huge_ralloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	289;"	d
huge_ralloc	deps/jemalloc/src/huge.c	/^huge_ralloc(tsd_t *tsd, arena_t *arena, void *ptr, size_t oldsize,$/;"	f
huge_ralloc_move_helper	deps/jemalloc/src/huge.c	/^huge_ralloc_move_helper(tsdn_t *tsdn, arena_t *arena, size_t usize,$/;"	f	file:
huge_ralloc_no_move	deps/jemalloc/include/jemalloc/internal/private_namespace.h	290;"	d
huge_ralloc_no_move	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	290;"	d
huge_ralloc_no_move	deps/jemalloc/src/huge.c	/^huge_ralloc_no_move(tsdn_t *tsdn, void *ptr, size_t oldsize, size_t usize_min,$/;"	f
huge_ralloc_no_move_expand	deps/jemalloc/src/huge.c	/^huge_ralloc_no_move_expand(tsdn_t *tsdn, void *ptr, size_t oldsize,$/;"	f	file:
huge_ralloc_no_move_shrink	deps/jemalloc/src/huge.c	/^huge_ralloc_no_move_shrink(tsdn_t *tsdn, void *ptr, size_t oldsize,$/;"	f	file:
huge_ralloc_no_move_similar	deps/jemalloc/src/huge.c	/^huge_ralloc_no_move_similar(tsdn_t *tsdn, void *ptr, size_t oldsize,$/;"	f	file:
huge_reinit_chunk	deps/pmdk/src/libpmemobj/memblock.c	/^huge_reinit_chunk(const struct memory_block *m)$/;"	f	file:
huge_salloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	291;"	d
huge_salloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	291;"	d
huge_salloc	deps/jemalloc/src/huge.c	/^huge_salloc(tsdn_t *tsdn, const void *ptr)$/;"	f
huge_vg_init	deps/pmdk/src/libpmemobj/memblock.c	/^huge_vg_init(const struct memory_block *m, int objects,$/;"	f	file:
huge_write_footer	deps/pmdk/src/libpmemobj/memblock.c	/^huge_write_footer(struct chunk_header *hdr, uint32_t size_idx)$/;"	f	file:
hugepage	deps/jemalloc/include/jemalloc/internal/arena.h	/^	bool			hugepage;$/;"	m	struct:arena_chunk_s
human	deps/pmdk/src/tools/pmempool/info.h	/^	bool human;		\/* sizes in human-readable formats *\/$/;"	m	struct:pmempool_info_args
hvalsCommand	src/t_hash.c	/^void hvalsCommand(client *c) {$/;"	f
hvalue	deps/lua/src/lobject.h	99;"	d
hz	src/server.h	/^    int hz;                     \/* serverCron() calls frequency in hertz *\/$/;"	m	struct:redisServer
hz	src/server.h	740;"	d
i	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^	int i;$/;"	m	struct:fields	file:
i	deps/pmdk/src/tools/pmempool/info_obj.c	/^	size_t i;$/;"	m	struct:info_obj_redo_args	file:
i1	deps/pmdk/src/test/obj_debug/obj_debug.c	/^	uint32_t i1;$/;"	m	struct:int3_s	file:
i2	deps/pmdk/src/test/obj_debug/obj_debug.c	/^	uint32_t i2;$/;"	m	struct:int3_s	file:
i3	deps/pmdk/src/test/obj_debug/obj_debug.c	/^	uint32_t i3;$/;"	m	struct:int3_s	file:
i64	src/bitops.c	/^    int64_t i64;        \/* Increment amount (INCRBY) or SET value *\/$/;"	m	struct:bitfieldOp	file:
iABC	deps/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iABx	deps/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAsBx	deps/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
i_ci	deps/lua/src/lua.h	/^  int i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug
i_gamma	deps/jemalloc/test/include/test/math.h	/^i_gamma(double x, double p, double ln_gamma_p)$/;"	f
i_key	deps/lua/src/lobject.h	/^  TKey i_key;$/;"	m	struct:Node
i_val	deps/lua/src/lobject.h	/^  TValue i_val;$/;"	m	struct:Node
iaalloc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^iaalloc(const void *ptr)$/;"	f
iaalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	292;"	d
iaalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	292;"	d
ialloc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^ialloc(tsd_t *tsd, size_t size, szind_t ind, bool zero, bool slow_path)$/;"	f
ialloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	293;"	d
ialloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	293;"	d
ialloc_body	deps/jemalloc/src/jemalloc.c	/^ialloc_body(size_t size, bool zero, tsdn_t **tsdn, size_t *usize,$/;"	f
ialloc_post_check	deps/jemalloc/src/jemalloc.c	/^ialloc_post_check(void *ret, tsdn_t *tsdn, size_t usize, const char *func,$/;"	f
ialloc_prof	deps/jemalloc/src/jemalloc.c	/^ialloc_prof(tsd_t *tsd, size_t usize, szind_t ind, bool zero, bool slow_path)$/;"	f
ialloc_prof_sample	deps/jemalloc/src/jemalloc.c	/^ialloc_prof_sample(tsd_t *tsd, size_t usize, szind_t ind, bool zero,$/;"	f	file:
iallocztm	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^iallocztm(tsdn_t *tsdn, size_t size, szind_t ind, bool zero, tcache_t *tcache,$/;"	f
iallocztm	deps/jemalloc/include/jemalloc/internal/private_namespace.h	294;"	d
iallocztm	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	294;"	d
iarena_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	295;"	d
iarena_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	295;"	d
iarena_cleanup	deps/jemalloc/src/jemalloc.c	/^iarena_cleanup(tsd_t *tsd)$/;"	f
ibc	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_ibc_attr ibc;	\/* in-band connection attributes *\/$/;"	m	struct:rpmem_msg_create_resp	typeref:struct:rpmem_msg_create_resp::rpmem_msg_ibc_attr
ibc	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_ibc_attr ibc;	\/* in-band connection attributes *\/$/;"	m	struct:rpmem_msg_open_resp	typeref:struct:rpmem_msg_open_resp::rpmem_msg_ibc_attr
id	deps/jemalloc/test/unit/ql.c	/^	char id;$/;"	m	struct:list_s	file:
id	deps/jemalloc/test/unit/qr.c	/^	char id;$/;"	m	struct:ring_s	file:
id	deps/pmdk/src/examples/libpmemobj/array/array.c	/^	int id;$/;"	m	struct:array_elm	file:
id	deps/pmdk/src/libpmemobj/alloc_class.h	/^	uint8_t id;$/;"	m	struct:alloc_class
id	deps/pmdk/src/libpmempool/pool.h	/^	uint32_t id;$/;"	m	struct:arena
id	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^	int id;$/;"	m	struct:type	file:
id	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^	int id;$/;"	m	struct:type_sec	file:
id	deps/pmdk/src/test/obj_list/obj_list.h	/^	int id;$/;"	m	struct:item
id	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^	int id;$/;"	m	struct:item	file:
id	deps/pmdk/src/test/obj_toid/obj_toid.c	/^	int id;$/;"	m	struct:obj	file:
id	src/ae.h	/^    long long id; \/* time event identifier. *\/$/;"	m	struct:aeTimeEvent
id	src/server.h	/^    int id;                     \/* Database ID *\/$/;"	m	struct:redisDb
id	src/server.h	/^    uint64_t id;            \/* Client incremental unique ID. *\/$/;"	m	struct:client
id	src/slowlog.h	/^    long long id;       \/* Unique entry identifier. *\/$/;"	m	struct:slowlogEntry
idalloc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^idalloc(tsd_t *tsd, void *ptr)$/;"	f
idalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	296;"	d
idalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	296;"	d
idalloctm	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^idalloctm(tsdn_t *tsdn, void *ptr, tcache_t *tcache, bool is_metadata,$/;"	f
idalloctm	deps/jemalloc/include/jemalloc/internal/private_namespace.h	297;"	d
idalloctm	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	297;"	d
ident	deps/pmdk/src/test/blk_non_zero/blk_non_zero.c	/^ident(unsigned char *buf)$/;"	f	file:
ident	deps/pmdk/src/test/blk_recovery/blk_recovery.c	/^ident(unsigned char *buf)$/;"	f	file:
ident	deps/pmdk/src/test/blk_rw/blk_rw.c	/^ident(unsigned char *buf)$/;"	f	file:
identify_transform_operation	deps/pmdk/src/libpmempool/transform.c	/^identify_transform_operation(struct poolset_compare_status *set_in_s,$/;"	f	file:
idle	src/server.h	/^    unsigned long long idle;    \/* Object idle time. *\/$/;"	m	struct:evictionPoolEntry
idlemode	src/redis-benchmark.c	/^    int idlemode;$/;"	m	struct:config	file:
idx	deps/hiredis/hiredis.h	/^    int idx; \/* index in parent (array) object *\/$/;"	m	struct:redisReadTask
idx	deps/jemalloc/test/src/SFMT.c	/^    int idx;$/;"	m	struct:sfmt_s	file:
idx	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^	unsigned idx;$/;"	m	struct:worker_args	file:
idx	src/latency.h	/^    int idx; \/* Index of the next sample to store. *\/$/;"	m	struct:latencyTimeSeries
idx	src/server.h	/^        int idx;$/;"	m	struct:redisServer::__anon159
idxof	deps/jemalloc/test/src/SFMT.c	/^JEMALLOC_INLINE_C int idxof(int i) {$/;"	f
ifd	deps/linenoise/linenoise.c	/^    int ifd;            \/* Terminal stdin file descriptor. *\/$/;"	m	struct:linenoiseState	file:
ifree	deps/jemalloc/src/jemalloc.c	/^ifree(tsd_t *tsd, void *ptr, tcache_t *tcache, bool slow_path)$/;"	f
ifstat	deps/lua/src/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:
ignore_empty_obj	deps/pmdk/src/tools/pmempool/info.h	/^		bool ignore_empty_obj;$/;"	m	struct:pmempool_info_args::__anon109
ignore_in_res	deps/pmdk/src/benchmarks/benchmark.hpp	/^	bool ignore_in_res;$/;"	m	struct:benchmark_clo
ignore_sds	deps/pmdk/src/common/set.h	/^	int ignore_sds;		\/* don't use shutdown state *\/$/;"	m	struct:pool_set
ii	src/server.h	/^    int ii; \/* intset iterator *\/$/;"	m	struct:__anon163
ii	src/t_zset.c	/^                int ii;$/;"	m	struct:__anon152::__anon153::_iterset::__anon154	file:
imallocx_body	deps/jemalloc/src/jemalloc.c	/^imallocx_body(size_t size, int flags, tsdn_t **tsdn, size_t *usize,$/;"	f
imallocx_flags	deps/jemalloc/src/jemalloc.c	/^imallocx_flags(tsdn_t *tsdn, size_t usize, size_t alignment, bool zero,$/;"	f
imallocx_flags_decode	deps/jemalloc/src/jemalloc.c	/^imallocx_flags_decode(tsd_t *tsd, size_t size, int flags, size_t *usize,$/;"	f
imallocx_no_prof	deps/jemalloc/src/jemalloc.c	/^imallocx_no_prof(tsd_t *tsd, size_t size, int flags, size_t *usize,$/;"	f
imallocx_prof	deps/jemalloc/src/jemalloc.c	/^imallocx_prof(tsd_t *tsd, size_t size, int flags, size_t *usize, bool slow_path)$/;"	f
imallocx_prof_sample	deps/jemalloc/src/jemalloc.c	/^imallocx_prof_sample(tsdn_t *tsdn, size_t usize, size_t alignment, bool zero,$/;"	f	file:
imemalign	deps/jemalloc/src/jemalloc.c	/^imemalign(void **memptr, size_t alignment, size_t size, size_t min_alignment)$/;"	f	file:
imemalign_prof	deps/jemalloc/src/jemalloc.c	/^imemalign_prof(tsd_t *tsd, size_t alignment, size_t usize)$/;"	f
imemalign_prof_sample	deps/jemalloc/src/jemalloc.c	/^imemalign_prof_sample(tsd_t *tsd, size_t alignment, size_t usize,$/;"	f	file:
import_cluster_cmd	src/redis-trib.rb	/^    def import_cluster_cmd(argv,opt)$/;"	f	class:RedisTrib.alloc_slots
importing_slots_from	src/cluster.h	/^    clusterNode *importing_slots_from[CLUSTER_SLOTS];$/;"	m	struct:clusterState
in	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	FILE *in;			\/* input file handle *\/$/;"	m	struct:pocli	file:
in_valgrind	deps/jemalloc/include/jemalloc/internal/private_namespace.h	298;"	d
in_valgrind	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	298;"	d
in_valgrind	deps/jemalloc/src/jemalloc.c	/^bool	in_valgrind;$/;"	v
inallocx	deps/jemalloc/src/jemalloc.c	/^inallocx(tsdn_t *tsdn, size_t size, int flags)$/;"	f
inbuf	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	char *inbuf;			\/* input buffer *\/$/;"	m	struct:pocli	file:
inbuf_len	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	size_t inbuf_len;		\/* input buffer length *\/$/;"	m	struct:pocli	file:
inc_ci	deps/lua/src/ldo.c	260;"	d	file:
inclinenumber	deps/lua/src/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:
includes	deps/pmdk/src/test/unittest/context.py	/^    includes = [Short, Medium]$/;"	v	class:Check
incompat	deps/pmdk/src/common/pool_hdr.h	/^	uint32_t incompat;	\/* mask: "must support" features *\/$/;"	m	struct:__anon70
incompat_features	deps/pmdk/src/include/librpmem.h	/^	uint32_t incompat_features; \/* mask: "must support" features *\/$/;"	m	struct:rpmem_pool_attr
incompat_features	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t incompat_features; \/* mask: "must support" features *\/$/;"	m	struct:rpmem_pool_attr_packed
incomplete	deps/lua/src/lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	file:
incrCommand	src/t_string.c	/^void incrCommand(client *c) {$/;"	f
incrDecrCommand	src/t_string.c	/^void incrDecrCommand(client *c, long long incr) {$/;"	f
incrRefCount	src/object.c	/^void incrRefCount(robj *o) {$/;"	f
incr_top	deps/lua/src/ldo.h	22;"	d
incrbyCommand	src/t_string.c	/^void incrbyCommand(client *c) {$/;"	f
incrbyfloatCommand	src/t_string.c	/^void incrbyfloatCommand(client *c) {$/;"	f
increment	deps/lua/src/strbuf.h	/^    int increment;$/;"	m	struct:__anon29
increment_pos	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^increment_pos(const struct hashmap_rp *hashmap, uint64_t pos)$/;"	f	file:
incrementallyRehash	src/server.c	/^int incrementallyRehash(int dbid) {$/;"	f
ind	deps/jemalloc/include/jemalloc/internal/arena.h	/^	unsigned		ind;$/;"	m	struct:arena_s
index	deps/hiredis/dict.h	/^    int index;$/;"	m	struct:dictIterator
index	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	const ctl_named_node_t	*(*index)(tsdn_t *, const size_t *, size_t,$/;"	m	struct:ctl_indexed_node_s
index	deps/lua/doc/contents.html	/^<H2><A NAME="index">Index<\/A><\/H2>$/;"	a
index	deps/lua/src/lua_cjson.c	/^    int index;$/;"	m	struct:__anon45	file:
index	deps/pmdk/src/benchmarks/benchmark.hpp	/^	size_t index;		       \/* index of worker thread *\/$/;"	m	struct:worker_info
index	deps/pmdk/src/benchmarks/benchmark.hpp	/^	size_t index;		     \/* operation's index *\/$/;"	m	struct:operation_info
index	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	uint32_t index;$/;"	m	struct:field	file:
index	src/dict.h	/^    long index;$/;"	m	struct:dictIterator
index2adr	deps/lua/src/lapi.c	/^static TValue *index2adr (lua_State *L, int idx) {$/;"	f	file:
index2size	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^index2size(szind_t index)$/;"	f
index2size	deps/jemalloc/include/jemalloc/internal/private_namespace.h	299;"	d
index2size	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	299;"	d
index2size_compute	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^index2size_compute(szind_t index)$/;"	f
index2size_compute	deps/jemalloc/include/jemalloc/internal/private_namespace.h	300;"	d
index2size_compute	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	300;"	d
index2size_lookup	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^index2size_lookup(szind_t index)$/;"	f
index2size_lookup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	301;"	d
index2size_lookup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	301;"	d
index2size_tab	deps/jemalloc/include/jemalloc/internal/private_namespace.h	302;"	d
index2size_tab	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	302;"	d
index_lookup	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^index_lookup(const struct hashmap_rp *hashmap, uint64_t key)$/;"	f	file:
index_value	deps/pmdk/src/test/util_ctl/util_ctl.c	/^CTL_READ_HANDLER(index_value)(void *ctx, enum ctl_query_source source,$/;"	f	file:
indexupvalue	deps/lua/src/lparser.c	/^static int indexupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:
info	deps/lua/src/lparser.h	/^    struct { int info, aux; } s;$/;"	m	struct:expdesc::__anon31::__anon32
info	deps/lua/src/lparser.h	/^  lu_byte info;$/;"	m	struct:upvaldesc
info	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	struct worker_info info;$/;"	m	struct:benchmark_worker	typeref:struct:benchmark_worker::worker_info
info	deps/pmdk/src/benchmarks/pmembench.cpp	/^	struct benchmark_info *info;$/;"	m	struct:benchmark	typeref:struct:benchmark::benchmark_info	file:
info	deps/pmdk/src/librpmem/rpmem.c	/^	struct rpmem_target_info *info;$/;"	m	struct:rpmem_pool	typeref:struct:rpmem_pool::rpmem_target_info	file:
info	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def info(self, text):$/;"	m	class:DefaultFileLogger
info	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def info(self, text):$/;"	m	class:DefaultPrintLogger
info	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def info(self, text):$/;"	m	class:LoggingBase
info	src/redis-trib.rb	/^    def info$/;"	f	class:ClusterNode
info	src/sentinel.c	/^    sds info; \/* cached INFO output *\/$/;"	m	struct:sentinelRedisInstance	file:
infoCommand	src/server.c	/^void infoCommand(client *c) {$/;"	f
info_blk_descriptor	deps/pmdk/src/tools/pmempool/info_blk.c	/^info_blk_descriptor(struct pmem_info *pip, int v, struct pmemblk *pbp)$/;"	f	file:
info_blk_skip_block	deps/pmdk/src/tools/pmempool/info_blk.c	/^info_blk_skip_block(struct pmem_info *pip, int is_zero,$/;"	f	file:
info_btt_data	deps/pmdk/src/tools/pmempool/info_blk.c	/^info_btt_data(struct pmem_info *pip, int v, struct btt_info *infop,$/;"	f	file:
info_btt_flog	deps/pmdk/src/tools/pmempool/info_blk.c	/^info_btt_flog(struct pmem_info *pip, int v,$/;"	f	file:
info_btt_info	deps/pmdk/src/tools/pmempool/info_blk.c	/^info_btt_info(struct pmem_info *pip, int v, struct btt_info *infop)$/;"	f	file:
info_btt_layout	deps/pmdk/src/tools/pmempool/info_blk.c	/^info_btt_layout(struct pmem_info *pip, os_off_t btt_off)$/;"	f	file:
info_btt_map	deps/pmdk/src/tools/pmempool/info_blk.c	/^info_btt_map(struct pmem_info *pip, int v,$/;"	f	file:
info_btt_stats	deps/pmdk/src/tools/pmempool/info_blk.c	/^info_btt_stats(struct pmem_info *pip, int v)$/;"	f	file:
info_cluster_cmd	src/redis-trib.rb	/^    def info_cluster_cmd(argv,opt)$/;"	f	class:RedisTrib.alloc_slots
info_lock	deps/pmdk/src/libpmemblk/btt.c	/^		os_mutex_t info_lock;$/;"	m	struct:btt::arena	file:
info_log_data	deps/pmdk/src/tools/pmempool/info_log.c	/^info_log_data(struct pmem_info *pip, int v, struct pmemlog *plp)$/;"	f	file:
info_log_descriptor	deps/pmdk/src/tools/pmempool/info_log.c	/^info_log_descriptor(struct pmem_info *pip, int v, struct pmemlog *plp)$/;"	f	file:
info_log_stats	deps/pmdk/src/tools/pmempool/info_log.c	/^info_log_stats(struct pmem_info *pip, int v, struct pmemlog *plp)$/;"	f	file:
info_obj_add_zone_stats	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_add_zone_stats(struct pmem_obj_zone_stats *total,$/;"	f	file:
info_obj_alloc_hdr	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_alloc_hdr(struct pmem_info *pip, int v,$/;"	f	file:
info_obj_chunk	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_chunk(struct pmem_info *pip, uint64_t c, uint64_t z,$/;"	f	file:
info_obj_class_stats_get_or_insert	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_class_stats_get_or_insert(struct pmem_obj_zone_stats *stats,$/;"	f	file:
info_obj_descriptor	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_descriptor(struct pmem_info *pip)$/;"	f	file:
info_obj_heap	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_heap(struct pmem_info *pip)$/;"	f	file:
info_obj_lane	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_lane(struct pmem_info *pip, int v, struct lane_layout *lane)$/;"	f	file:
info_obj_lanes	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_lanes(struct pmem_info *pip)$/;"	f	file:
info_obj_memblock_is_root	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_memblock_is_root(struct pmem_info *pip, const struct memory_block *m)$/;"	f	file:
info_obj_object	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_object(struct pmem_info *pip, const struct memory_block *m,$/;"	f	file:
info_obj_object_hdr	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_object_hdr(struct pmem_info *pip, int v, int vid,$/;"	f	file:
info_obj_redo_args	deps/pmdk/src/tools/pmempool/info_obj.c	/^struct info_obj_redo_args {$/;"	s	file:
info_obj_redo_entry	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_redo_entry(struct ulog_entry_base *e, void *arg,$/;"	f	file:
info_obj_root_obj	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_root_obj(struct pmem_info *pip)$/;"	f	file:
info_obj_run_bitmap	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_run_bitmap(int v, struct run_bitmap *b)$/;"	f	file:
info_obj_run_cb	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_run_cb(const struct memory_block *m, void *arg)$/;"	f	file:
info_obj_sa_sigaction	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_sa_sigaction(int signum, siginfo_t *info, void *context)$/;"	f	file:
info_obj_sigaction	deps/pmdk/src/tools/pmempool/info_obj.c	/^static struct sigaction info_obj_sigaction = {$/;"	v	typeref:struct:sigaction	file:
info_obj_stats	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_stats(struct pmem_info *pip)$/;"	f	file:
info_obj_stats_alloc_classes	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_stats_alloc_classes(struct pmem_info *pip, int v,$/;"	f	file:
info_obj_stats_chunks	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_stats_chunks(struct pmem_info *pip, int v,$/;"	f	file:
info_obj_stats_objects	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_stats_objects(struct pmem_info *pip, int v,$/;"	f	file:
info_obj_stats_zones	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_stats_zones(struct pmem_info *pip, int v, struct pmem_obj_stats *stats,$/;"	f	file:
info_obj_ulog	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_ulog(struct pmem_info *pip, int v, struct ulog *ulog,$/;"	f	file:
info_obj_zone_chunks	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_zone_chunks(struct pmem_info *pip, struct zone *zone, uint64_t z,$/;"	f	file:
info_obj_zone_hdr	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_zone_hdr(struct pmem_info *pip, int v, struct zone_header *zone)$/;"	f	file:
info_obj_zones_chunks	deps/pmdk/src/tools/pmempool/info_obj.c	/^info_obj_zones_chunks(struct pmem_info *pip)$/;"	f	file:
info_refresh	src/sentinel.c	/^    mstime_t info_refresh;  \/* Time at which we received INFO output from it. *\/$/;"	m	struct:sentinelRedisInstance	file:
info_section_from_redis	src/sentinel.c	3200;"	d	file:
info_string	src/redis-trib.rb	/^    def info_string$/;"	f	class:ClusterNode
info_tailcall	deps/lua/src/ldebug.c	/^static void info_tailcall (lua_Debug *ar) {$/;"	f	file:
infooff	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint64_t infooff;		\/* offset to backup info block *\/$/;"	m	struct:btt_info
infos	deps/pmdk/src/libpmempool/check_util.c	/^	struct check_status_head infos;$/;"	m	struct:check_data	typeref:struct:check_data::check_status_head	file:
infosize	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint32_t infosize;		\/* size of this info block *\/$/;"	m	struct:btt_info
inherit_fname	deps/pmdk/src/tools/pmempool/create.c	/^	char *inherit_fname;$/;"	m	struct:pmempool_create	file:
inherit_params	deps/pmdk/src/tools/pmempool/create.c	/^	struct pmem_pool_params inherit_params;$/;"	m	struct:pmempool_create	typeref:struct:pmempool_create::pmem_pool_params	file:
inherit_pool_params	deps/pmdk/src/tools/pmempool/create.c	/^inherit_pool_params(struct pmempool_create *pcp)$/;"	f	file:
init	deps/lua/src/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon38	file:
init	deps/pmdk/src/benchmarks/benchmark.hpp	/^	int (*init)(struct benchmark *bench, struct benchmark_args *args);$/;"	m	struct:benchmark_info
init	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	int (*init)(struct benchmark *bench, struct benchmark_args *args,$/;"	m	struct:benchmark_worker
init	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	int(*init)(PMEMobjpool *pop, TOID(struct map) map);$/;"	m	struct:map_ops
init	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^init(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
initClientMultiState	src/multi.c	/^void initClientMultiState(client *c) {$/;"	f
initEntry	src/quicklist.c	74;"	d	file:
initPersistentMemory	src/server.c	/^void initPersistentMemory(void) {$/;"	f
initSentinel	src/sentinel.c	/^void initSentinel(void) {$/;"	f
initSentinelConfig	src/sentinel.c	/^void initSentinelConfig(void) {$/;"	f
initServer	src/server.c	/^void initServer(void) {$/;"	f
initServerConfig	src/server.c	/^void initServerConfig(void) {$/;"	f
initStaticStringObject	src/server.h	520;"	d
init_bench_mutex	deps/pmdk/src/benchmarks/obj_locks.cpp	/^init_bench_mutex(struct mutex_bench *mb)$/;"	f	file:
init_bench_rwlock	deps/pmdk/src/benchmarks/obj_locks.cpp	/^init_bench_rwlock(struct mutex_bench *mb)$/;"	f	file:
init_bench_vmutex	deps/pmdk/src/benchmarks/obj_locks.cpp	/^init_bench_vmutex(struct mutex_bench *mb)$/;"	f	file:
init_buff	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^init_buff(struct pool_entry *pool)$/;"	f	file:
init_by_array	deps/jemalloc/test/src/SFMT.c	/^sfmt_t *init_by_array(uint32_t *init_key, int key_length) {$/;"	f
init_by_array_32_expected	deps/jemalloc/test/unit/SFMT.c	/^static const uint32_t init_by_array_32_expected[] = {$/;"	v	file:
init_by_array_64_expected	deps/jemalloc/test/unit/SFMT.c	/^static const uint64_t init_by_array_64_expected[] = {$/;"	v	file:
init_done	deps/pmdk/src/libpmempool/check_util.h	/^	unsigned init_done;$/;"	m	struct:__anon87
init_entries	deps/jemalloc/test/unit/ql.c	/^init_entries(list_t *entries, unsigned nentries)$/;"	f	file:
init_entries	deps/jemalloc/test/unit/qr.c	/^init_entries(ring_t *entries)$/;"	f	file:
init_exp	deps/lua/src/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:
init_gen_rand	deps/jemalloc/test/src/SFMT.c	/^sfmt_t *init_gen_rand(uint32_t seed) {$/;"	f
init_gen_rand_32_expected	deps/jemalloc/test/unit/SFMT.c	/^static const uint32_t init_gen_rand_32_expected[] = {$/;"	v	file:
init_gen_rand_64_expected	deps/jemalloc/test/unit/SFMT.c	/^static const uint64_t init_gen_rand_64_expected[] = {$/;"	v	file:
init_init_lock	deps/jemalloc/src/jemalloc.c	/^static const void (WINAPI *init_init_lock)(void) = _init_init_lock;$/;"	v	file:
init_location_data	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^init_location_data(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
init_location_data	deps/pmdk/src/libpmempool/check_sds.c	/^init_location_data(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
init_lock	deps/jemalloc/src/jemalloc.c	/^static malloc_mutex_t	init_lock = MALLOC_MUTEX_INITIALIZER;$/;"	v	file:
init_lock	deps/jemalloc/src/jemalloc.c	/^static malloc_mutex_t	init_lock = SRWLOCK_INIT;$/;"	v	file:
init_lock	deps/jemalloc/src/jemalloc.c	/^static malloc_mutex_t	init_lock;$/;"	v	file:
init_lock_initialized	deps/jemalloc/src/jemalloc.c	/^static bool init_lock_initialized = false;$/;"	v	file:
init_nkeys	deps/pmdk/src/benchmarks/map_bench.cpp	/^	size_t init_nkeys;$/;"	m	struct:map_bench	file:
init_objects	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^init_objects(struct obj_bench *ob)$/;"	f	file:
init_offsets	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^init_offsets(struct benchmark_args *args, struct memset_bench *mb,$/;"	f	file:
init_offsets	deps/pmdk/src/benchmarks/rpmem.cpp	/^init_offsets(struct benchmark_args *args, struct rpmem_bench *mb,$/;"	f	file:
init_pool	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^init_pool(struct pool_entry *pool, const char *target, const char *pool_path,$/;"	f	file:
init_prefix	deps/pmdk/src/libpmempool/check_sds.c	/^init_prefix(location *loc)$/;"	f	file:
init_rpmem_on_node	deps/pmdk/src/test/unittest/unittest.sh	/^function init_rpmem_on_node() {$/;"	f
init_run_with_max_block	deps/pmdk/src/test/obj_heap/obj_heap.c	/^init_run_with_max_block(struct heap_layout *l, uint32_t chunk_id)$/;"	f	file:
init_run_with_score	deps/pmdk/src/test/obj_heap/obj_heap.c	/^init_run_with_score(struct heap_layout *l, uint32_t chunk_id, int score)$/;"	f	file:
init_slist	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^init_slist(PMEMobjpool *pop, struct slisthead *head)$/;"	f	file:
init_tqueue	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^init_tqueue(PMEMobjpool *pop, struct tqueuehead *head)$/;"	f	file:
init_valgrind_on_node	deps/pmdk/src/test/unittest/unittest.sh	/^function init_valgrind_on_node() {$/;"	f
init_worker	deps/pmdk/src/benchmarks/benchmark.hpp	/^	int (*init_worker)(struct benchmark *bench, struct benchmark_args *args,$/;"	m	struct:benchmark_info
initialize	src/redis-trib.rb	/^    def initialize$/;"	f	class:RedisTrib
initialize	src/redis-trib.rb	/^    def initialize(addr)$/;"	f	class:ClusterNode
initialize_context	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^initialize_context(struct ds_context *ctx, int ac, char *av[])$/;"	f
initialized	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	bool			initialized;$/;"	m	struct:ctl_arena_stats_s
initialized	deps/jemalloc/test/src/SFMT.c	/^    int initialized;$/;"	m	struct:sfmt_s	file:
initialized	deps/pmdk/src/benchmarks/pmembench.cpp	/^	bool initialized;$/;"	m	struct:bench_list	file:
inline	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	16;"	d
inline	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	31;"	d
inline	deps/pmdk/src/windows/include/platform.h	90;"	d
inline	src/lzf_c.c	80;"	d	file:
inline	src/lzf_c.c	83;"	d	file:
inode	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	TOID(struct objfs_inode) inode;	\/* pointer to inode *\/$/;"	m	struct:objfs_dir_entry	file:
inode	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^	unsigned long inode;$/;"	m	struct:inode_item	file:
inode_item	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^struct inode_item {$/;"	s	file:
inodes	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^struct inodes {$/;"	s	file:
inputCatSds	src/debug.c	/^void inputCatSds(void *result, const char *str) {$/;"	f
insert	deps/pmdk/src/benchmarks/map_bench.cpp	/^	int (*insert)(struct map_bench *, uint64_t);$/;"	m	struct:map_bench	file:
insert	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	int(*insert)(PMEMobjpool *pop, TOID(struct map) map,$/;"	m	struct:map_ops
insert	deps/pmdk/src/libpmemobj/container.h	/^	int (*insert)(struct block_container *c, const struct memory_block *m);$/;"	m	struct:block_container_ops
insert_element	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^insert_element(struct ds_context *ctx)$/;"	f
insert_helper	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^insert_helper(PMEMobjpool *pop, struct hashmap_rp *hashmap, uint64_t key,$/;"	f	file:
insert_new	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	int(*insert_new)(PMEMobjpool *pop, TOID(struct map) map,$/;"	m	struct:map_ops
insert_op	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^insert_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
inserted_memblock	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^static const struct memory_block *inserted_memblock;$/;"	v	typeref:struct:memory_block	file:
insertions	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	int insertions;		\/* number of insert operations to perform *\/$/;"	m	struct:ds_context	file:
inst_metric	src/server.h	/^    } inst_metric[STATS_METRIC_COUNT];$/;"	m	struct:redisServer	typeref:struct:redisServer::__anon159
install_suffix	deps/jemalloc/Makefile	/^install_suffix := $/;"	m
instanceLink	src/sentinel.c	/^typedef struct instanceLink {$/;"	s	file:
instanceLink	src/sentinel.c	/^} instanceLink;$/;"	t	typeref:struct:instanceLink	file:
instanceLinkCloseConnection	src/sentinel.c	/^void instanceLinkCloseConnection(instanceLink *link, redisAsyncContext *c) {$/;"	f
instanceLinkConnectionError	src/sentinel.c	/^void instanceLinkConnectionError(const redisAsyncContext *c) {$/;"	f
instance_is_killed	tests/instances.tcl	/^proc instance_is_killed {type id} {$/;"	p
instancesDictType	src/sentinel.c	/^dictType instancesDictType = {$/;"	v
int16_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef signed __int16    int16_t;$/;"	t
int16_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef signed short      int16_t;$/;"	t
int32_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef signed __int32    int32_t;$/;"	t
int32_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef signed int        int32_t;$/;"	t
int32_t	deps/lua/src/lua_bit.c	/^typedef __int32 int32_t;$/;"	t	file:
int3_constructor	deps/pmdk/src/test/obj_debug/obj_debug.c	/^int3_constructor(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
int3_s	deps/pmdk/src/test/obj_debug/obj_debug.c	/^struct int3_s {$/;"	s	file:
int64_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef signed __int64       int64_t;$/;"	t
int8_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef signed __int8     int8_t;$/;"	t
int8_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef signed char       int8_t;$/;"	t
int_fast16_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t
int_fast32_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t
int_fast64_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t
int_fast8_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t
int_least16_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef int16_t   int_least16_t;$/;"	t
int_least32_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef int32_t   int_least32_t;$/;"	t
int_least64_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef int64_t   int_least64_t;$/;"	t
int_least8_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef int8_t    int_least8_t;$/;"	t
integer	deps/hiredis/hiredis.h	/^    long long integer; \/* The integer when type is REDIS_REPLY_INTEGER *\/$/;"	m	struct:redisReply
integers	src/server.h	/^    *integers[OBJ_SHARED_INTEGERS],$/;"	m	struct:sharedObjectsStruct
interactive	src/redis-cli.c	/^    int interactive;$/;"	m	struct:config	file:
interactive_color	deps/pmdk/src/test/unittest/unittest.sh	/^function interactive_color() {$/;"	f
interactive_green	deps/pmdk/src/test/unittest/unittest.sh	/^function interactive_green() {$/;"	f
interactive_red	deps/pmdk/src/test/unittest/unittest.sh	/^function interactive_red() {$/;"	f
interleave64	deps/geohash-int/geohash.c	/^static inline uint64_t interleave64(uint32_t xlo, uint32_t ylo) {$/;"	f	file:
internal	deps/pmdk/src/libpmemobj/lane.h	/^	struct ULOG(LANE_REDO_INTERNAL_SIZE) internal;$/;"	m	struct:lane_layout
internal	deps/pmdk/src/libpmemobj/lane.h	/^	struct operation_context *internal; \/* context for internal ulog *\/$/;"	m	struct:lane	typeref:struct:lane::operation_context
internal_lbasize	deps/pmdk/src/libpmemblk/btt.c	/^		uint32_t internal_lbasize;$/;"	m	struct:btt::arena	file:
internal_lbasize	deps/pmdk/src/libpmemblk/btt.c	/^internal_lbasize(uint32_t external_lbasize)$/;"	f	file:
internal_lbasize	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint32_t internal_lbasize;	\/* size of data area blocks (bytes) *\/$/;"	m	struct:btt_info
internal_nlba	deps/pmdk/src/libpmemblk/btt.c	/^		uint32_t internal_nlba;$/;"	m	struct:btt::arena	file:
internal_nlba	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint32_t internal_nlba;		\/* number of blocks in data area *\/$/;"	m	struct:btt_info
internal_os_cond_t	deps/pmdk/src/common/os_thread_windows.c	/^} internal_os_cond_t;$/;"	t	typeref:struct:__anon81	file:
internal_os_cpu_set_t	deps/pmdk/src/common/os_thread_windows.c	/^} internal_os_cpu_set_t;$/;"	t	typeref:struct:__anon83	file:
internal_os_mutex_t	deps/pmdk/src/common/os_thread_windows.c	/^} internal_os_mutex_t;$/;"	t	typeref:struct:__anon79	file:
internal_os_once_t	deps/pmdk/src/common/os_thread_windows.c	/^typedef long long internal_os_once_t;$/;"	t	file:
internal_os_rwlock_t	deps/pmdk/src/common/os_thread_windows.c	/^} internal_os_rwlock_t;$/;"	t	typeref:struct:__anon80	file:
internal_os_thread_t	deps/pmdk/src/common/os_thread_posix.c	/^} internal_os_thread_t;$/;"	t	typeref:struct:__anon69	file:
internal_os_thread_t	deps/pmdk/src/common/os_thread_windows.c	/^} internal_os_thread_t;$/;"	t	typeref:struct:__anon84	file:
internal_semaphore_t	deps/pmdk/src/common/os_thread_windows.c	/^} internal_semaphore_t;$/;"	t	typeref:struct:__anon82	file:
intersection	deps/pmdk/src/test/RUNTESTS	/^intersection() {$/;"	f
interval	deps/jemalloc/include/jemalloc/internal/arena.h	/^	nstime_t		interval;$/;"	m	struct:arena_decay_s
interval	src/redis-cli.c	/^    long interval;$/;"	m	struct:config	file:
intlen	deps/hiredis/hiredis.c	/^static int intlen(int i) {$/;"	f	file:
intmax_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef int64_t   intmax_t;$/;"	t
intptr_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t
intptr_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t
intrev16	src/endianconv.c	/^uint16_t intrev16(uint16_t v) {$/;"	f
intrev16ifbe	src/endianconv.h	52;"	d
intrev16ifbe	src/endianconv.h	59;"	d
intrev32	src/endianconv.c	/^uint32_t intrev32(uint32_t v) {$/;"	f
intrev32ifbe	src/endianconv.h	53;"	d
intrev32ifbe	src/endianconv.h	60;"	d
intrev64	src/endianconv.c	/^uint64_t intrev64(uint64_t v) {$/;"	f
intrev64ifbe	src/endianconv.h	54;"	d
intrev64ifbe	src/endianconv.h	61;"	d
intrinsicLatencyMode	src/redis-cli.c	/^static void intrinsicLatencyMode(void) {$/;"	f	file:
intrinsicLatencyModeStop	src/redis-cli.c	/^static void intrinsicLatencyModeStop(int s) {$/;"	f	file:
intrinsic_latency_duration	src/redis-cli.c	/^    int intrinsic_latency_duration;$/;"	m	struct:config	file:
intrinsic_latency_mode	src/redis-cli.c	/^    int intrinsic_latency_mode;$/;"	m	struct:config	file:
intro_loop	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^intro_loop(PMEMobjpool *pop, TOID(struct root) r)$/;"	f	file:
intset	src/intset.h	/^typedef struct intset {$/;"	s
intset	src/intset.h	/^} intset;$/;"	t	typeref:struct:intset
intsetAdd	src/intset.c	/^intset *intsetAdd(intset *is, int64_t value, uint8_t *success) {$/;"	f
intsetBlobLen	src/intset.c	/^size_t intsetBlobLen(intset *is) {$/;"	f
intsetFind	src/intset.c	/^uint8_t intsetFind(intset *is, int64_t value) {$/;"	f
intsetGet	src/intset.c	/^uint8_t intsetGet(intset *is, uint32_t pos, int64_t *value) {$/;"	f
intsetLen	src/intset.c	/^uint32_t intsetLen(intset *is) {$/;"	f
intsetMoveTail	src/intset.c	/^static void intsetMoveTail(intset *is, uint32_t from, uint32_t to) {$/;"	f	file:
intsetNew	src/intset.c	/^intset *intsetNew(void) {$/;"	f
intsetRandom	src/intset.c	/^int64_t intsetRandom(intset *is) {$/;"	f
intsetRemove	src/intset.c	/^intset *intsetRemove(intset *is, int64_t value, int *success) {$/;"	f
intsetResize	src/intset.c	/^static intset *intsetResize(intset *is, uint32_t len) {$/;"	f	file:
intsetSearch	src/intset.c	/^static uint8_t intsetSearch(intset *is, int64_t value, uint32_t *pos) {$/;"	f	file:
intsetTest	src/intset.c	/^int intsetTest(int argc, char **argv) {$/;"	f
intsetUpgradeAndAdd	src/intset.c	/^static intset *intsetUpgradeAndAdd(intset *is, int64_t value) {$/;"	f	file:
invalid	deps/hiredis/async.h	/^        redisCallbackList invalid;$/;"	m	struct:redisAsyncContext::__anon148
invalid_addr	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	void *invalid_addr;  \/* invalid pages *\/$/;"	m	struct:pmem_bench	file:
invalid_addr_aligned	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	void *invalid_addr_aligned;  \/* invalid pages - 2M aligned *\/$/;"	m	struct:pmem_bench	file:
invalid_hll_err	src/hyperloglog.c	/^static char *invalid_hll_err = "-INVALIDOBJ Corrupted HLL object detected\\r\\n";$/;"	v	file:
invalid_lba	deps/pmdk/src/libpmemblk/btt.c	/^invalid_lba(struct btt *bttp, uint64_t lba)$/;"	f	file:
invalidate	deps/pmdk/src/include/libpmemobj/base.h	/^	int invalidate;$/;"	m	struct:_pobj_pcache
invalidate	deps/pmdk/src/libpmemobj/memblock.c	/^	void (*invalidate)(const struct memory_block *m);$/;"	m	struct:__anon133	file:
invalidate	deps/pmdk/src/libpmemobj/memblock.h	/^	void (*invalidate)(const struct memory_block *m);$/;"	m	struct:memory_block_ops
invalidate	deps/pmdk/src/libpmemobj/obj.c	/^	int invalidate;$/;"	m	struct:_pobj_pcache	file:
invertjump	deps/lua/src/lcode.c	/^static void invertjump (FuncState *fs, expdesc *e) {$/;"	f	file:
io	src/rio.h	/^    } io;$/;"	m	struct:_rio	typeref:union:_rio::__anon179
io_close	deps/lua/src/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:
io_fclose	deps/lua/src/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:
io_flush	deps/lua/src/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:
io_gc	deps/lua/src/liolib.c	/^static int io_gc (lua_State *L) {$/;"	f	file:
io_input	deps/lua/src/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:
io_lines	deps/lua/src/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:
io_noclose	deps/lua/src/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:
io_open	deps/lua/src/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:
io_output	deps/lua/src/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:
io_pclose	deps/lua/src/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:
io_popen	deps/lua/src/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:
io_read	deps/lua/src/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:
io_readline	deps/lua/src/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:
io_tmpfile	deps/lua/src/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:
io_tostring	deps/lua/src/liolib.c	/^static int io_tostring (lua_State *L) {$/;"	f	file:
io_type	deps/lua/src/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:
io_write	deps/lua/src/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:
ioctl_cmd	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	int ioctl_cmd;$/;"	m	struct:pmemobjfs	file:
ioctl_off	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint64_t ioctl_off;$/;"	m	struct:pmemobjfs	file:
iolib	deps/lua/src/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
iov	deps/pmdk/src/benchmarks/log.cpp	/^	struct iovec *iov; \/* io vector *\/$/;"	m	struct:log_worker_info	typeref:struct:log_worker_info::iovec	file:
iov	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^	struct iovec iov;	\/* IO vector buffer *\/$/;"	m	struct:rpmem_fip_msg	typeref:struct:rpmem_fip_msg::iovec
iov_base	deps/pmdk/src/include/pmemcompat.h	/^	void  *iov_base;$/;"	m	struct:iovec
iov_len	deps/pmdk/src/include/pmemcompat.h	/^	size_t iov_len;$/;"	m	struct:iovec
iovec	deps/pmdk/src/include/pmemcompat.h	/^struct iovec {$/;"	s
ip	src/cluster.h	/^    char ip[NET_IP_STR_LEN];  \/* IP address last time it was seen *\/$/;"	m	struct:__anon169
ip	src/cluster.h	/^    char ip[NET_IP_STR_LEN];  \/* Latest known IP address of this node *\/$/;"	m	struct:clusterNode
ip	src/sentinel.c	/^    char *ip;$/;"	m	struct:sentinelAddr	file:
ip_len	src/anet.h	49;"	d
ipairsaux	deps/lua/src/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:
ipalloc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^ipalloc(tsd_t *tsd, size_t usize, size_t alignment, bool zero)$/;"	f
ipalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	303;"	d
ipalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	303;"	d
ipalloct	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^ipalloct(tsdn_t *tsdn, size_t usize, size_t alignment, bool zero,$/;"	f
ipalloct	deps/jemalloc/include/jemalloc/internal/private_namespace.h	304;"	d
ipalloct	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	304;"	d
ipallocztm	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^ipallocztm(tsdn_t *tsdn, size_t usize, size_t alignment, bool zero,$/;"	f
ipallocztm	deps/jemalloc/include/jemalloc/internal/private_namespace.h	305;"	d
ipallocztm	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	305;"	d
ipfd	src/server.h	/^    int ipfd[CONFIG_BINDADDR_MAX]; \/* TCP socket file descriptors *\/$/;"	m	struct:redisServer
ipfd_count	src/server.h	/^    int ipfd_count;             \/* Used slots in ipfd[] *\/$/;"	m	struct:redisServer
iqalloc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^iqalloc(tsd_t *tsd, void *ptr, tcache_t *tcache, bool slow_path)$/;"	f
iqalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	306;"	d
iqalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	306;"	d
iralloc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^iralloc(tsd_t *tsd, void *ptr, size_t oldsize, size_t size, size_t alignment,$/;"	f
iralloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	307;"	d
iralloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	307;"	d
iralloct	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^iralloct(tsd_t *tsd, void *ptr, size_t oldsize, size_t size, size_t alignment,$/;"	f
iralloct	deps/jemalloc/include/jemalloc/internal/private_namespace.h	308;"	d
iralloct	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	308;"	d
iralloct_realign	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^iralloct_realign(tsd_t *tsd, void *ptr, size_t oldsize, size_t size,$/;"	f
iralloct_realign	deps/jemalloc/include/jemalloc/internal/private_namespace.h	309;"	d
iralloct_realign	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	309;"	d
irallocx_prof	deps/jemalloc/src/jemalloc.c	/^irallocx_prof(tsd_t *tsd, void *old_ptr, size_t old_usize, size_t size,$/;"	f
irallocx_prof_sample	deps/jemalloc/src/jemalloc.c	/^irallocx_prof_sample(tsd_t *tsd, void *old_ptr, size_t old_usize,$/;"	f	file:
irealloc_prof	deps/jemalloc/src/jemalloc.c	/^irealloc_prof(tsd_t *tsd, void *old_ptr, size_t old_usize, size_t usize)$/;"	f
irealloc_prof_sample	deps/jemalloc/src/jemalloc.c	/^irealloc_prof_sample(tsd_t *tsd, void *old_ptr, size_t old_usize, size_t usize,$/;"	f	file:
is	src/t_zset.c	/^                intset *is;$/;"	m	struct:__anon152::__anon153::_iterset::__anon154	file:
is	src/t_zset.c	/^            } is;$/;"	m	union:__anon152::__anon153::_iterset	typeref:struct:__anon152::__anon153::_iterset::__anon154	file:
isColorTerm	src/redis-cli.c	/^int isColorTerm(void) {$/;"	f
isHLLObjectOrReply	src/hyperloglog.c	/^int isHLLObjectOrReply(client *c, robj *o) {$/;"	f
isLfunction	deps/lua/src/lobject.h	316;"	d
isLua	deps/lua/src/lstate.h	62;"	d
isObjectRepresentableAsLongLong	src/object.c	/^int isObjectRepresentableAsLongLong(robj *o, long long *llval) {$/;"	f
isUnsupportedTerm	deps/linenoise/linenoise.c	/^static int isUnsupportedTerm(void) {$/;"	f	file:
is_a_slow_computer	tests/test_helper.tcl	/^proc is_a_slow_computer {} {$/;"	p
is_absolute_path_to_directory	deps/pmdk/src/benchmarks/pmembench.cpp	/^is_absolute_path_to_directory(const char *path)$/;"	f	file:
is_active	deps/pmdk/src/libpmemobj/bucket.h	/^	int is_active;$/;"	m	struct:bucket
is_alive	tests/support/server.tcl	/^proc is_alive config {$/;"	p
is_argument	deps/pmdk/src/benchmarks/config_reader.cpp	/^is_argument(const char *name)$/;"	f	file:
is_argument	deps/pmdk/src/benchmarks/config_reader_win.cpp	/^is_argument(LPTSTR name)$/;"	f	file:
is_auto_flush_cap_set	deps/pmdk/src/common/os_auto_flush_windows.c	/^is_auto_flush_cap_set(uint32_t capabilities)$/;"	f	file:
is_checksum_ok	deps/pmdk/src/tools/pmempool/common.h	/^	int is_checksum_ok;$/;"	m	struct:pmem_pool_params
is_config_consistent?	src/redis-trib.rb	/^    def is_config_consistent?$/;"	f	class:RedisTrib
is_cpu_avx512f_present	deps/pmdk/src/libpmem/x86_64/cpu.c	/^is_cpu_avx512f_present(void)$/;"	f
is_cpu_avx_present	deps/pmdk/src/libpmem/x86_64/cpu.c	/^is_cpu_avx_present(void)$/;"	f
is_cpu_clflush_present	deps/pmdk/src/libpmem/x86_64/cpu.c	/^is_cpu_clflush_present(void)$/;"	f
is_cpu_clflushopt_present	deps/pmdk/src/libpmem/x86_64/cpu.c	/^is_cpu_clflushopt_present(void)$/;"	f
is_cpu_clwb_present	deps/pmdk/src/libpmem/x86_64/cpu.c	/^is_cpu_clwb_present(void)$/;"	f
is_cpu_feature_present	deps/pmdk/src/libpmem/x86_64/cpu.c	/^is_cpu_feature_present(unsigned func, unsigned reg, unsigned bit)$/;"	f	file:
is_cpu_genuine_intel	deps/pmdk/src/libpmem/x86_64/cpu.c	/^is_cpu_genuine_intel(void)$/;"	f
is_dev_dax	deps/pmdk/src/common/set.h	/^	int is_dev_dax;		\/* indicates if the part is on device dax *\/$/;"	m	struct:pool_set_part
is_dev_dax	deps/pmdk/src/libpmemblk/blk.h	/^	int is_dev_dax;		\/* true if mapped on device dax *\/$/;"	m	struct:pmemblk
is_dev_dax	deps/pmdk/src/libpmemlog/log.h	/^	int is_dev_dax;		\/* true if mapped on device dax *\/$/;"	m	struct:pmemlog
is_dev_dax	deps/pmdk/src/libpmemobj/obj.h	/^	int is_dev_dax;		\/* true if mapped on device dax *\/$/;"	m	struct:pmemobjpool
is_dev_dax	deps/pmdk/src/libpmempool/check_util.h	/^	int is_dev_dax;$/;"	m	struct:__anon87
is_dev_dax	deps/pmdk/src/libpmempool/pool.h	/^	int is_dev_dax;$/;"	m	struct:pool_params
is_dev_dax	deps/pmdk/src/test/pmem_map_file/pmem_map_file.c	/^static int is_dev_dax = 0;$/;"	v	file:
is_dev_dax	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	/^is_dev_dax(const char *path)$/;"	f	file:
is_dev_dax_align	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	/^is_dev_dax_align(const char *path, size_t req_align)$/;"	f	file:
is_devdax	deps/pmdk/src/test/unittest/context.py	/^    def is_devdax(self, path):$/;"	m	class:ContextBase
is_devdax	deps/pmdk/src/tools/daxio/daxio.c	/^	int is_devdax;$/;"	m	struct:daxio_device	file:
is_dir	deps/pmdk/src/common/file.h	/^	int is_dir;$/;"	m	struct:file_info
is_direct_mapped	deps/pmdk/src/libpmem/pmem_windows.c	/^is_direct_mapped(const void *begin, const void *end)$/;"	f	file:
is_dirty?	src/redis-trib.rb	/^    def is_dirty?$/;"	f	class:ClusterNode
is_dry_run	deps/pmdk/src/libpmempool/replica.h	/^is_dry_run(unsigned flags)$/;"	f
is_dynamic_poolset	deps/pmdk/src/benchmarks/benchmark.hpp	/^	bool is_dynamic_poolset; \/* test file is directory in which$/;"	m	struct:benchmark_args
is_empty	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	int(*is_empty)(PMEMobjpool *pop, TOID(struct map) map);$/;"	m	struct:map_ops
is_empty	deps/pmdk/src/libpmemobj/container.h	/^	int (*is_empty)(struct block_container *c);$/;"	m	struct:block_container_ops
is_feature_valid	deps/pmdk/src/libpmempool/feature.c	/^is_feature_valid(uint32_t feature)$/;"	f	file:
is_func	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	int is_func;$/;"	m	struct:field	file:
is_hex	deps/pmdk/src/benchmarks/clo.cpp	/^is_hex(const char *arg, size_t len)$/;"	f	file:
is_hex_digit	deps/hiredis/sds.c	/^int is_hex_digit(char c) {$/;"	f
is_hex_digit	src/sds.c	/^int is_hex_digit(char c) {$/;"	f
is_in_flush	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    def is_in_flush(self, store_op):$/;"	m	class:Flush
is_in_flush	deps/pmdk/src/tools/pmreorder/memoryoperations.py	/^    def is_in_flush(self, store_op):$/;"	m	class:FlushBase
is_leaf	deps/pmdk/src/libpmemobj/critnib.c	/^is_leaf(struct critnib_node *n)$/;"	f	file:
is_malloc	deps/jemalloc/src/jemalloc.c	2057;"	d	file:
is_malloc_	deps/jemalloc/src/jemalloc.c	2056;"	d	file:
is_master_replica	deps/pmdk/src/libpmemobj/obj.h	/^	int is_master_replica;$/;"	m	struct:pmemobjpool
is_matchfile	deps/pmdk/src/test/unittest/basetest.py	/^        def is_matchfile(f):$/;"	f	function:BaseTest._run_match
is_mem	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	int is_mem;$/;"	m	struct:pool_entry	file:
is_ndctl_enabled	deps/pmdk/src/test/unittest/unittest.sh	/^function is_ndctl_enabled() {$/;"	f
is_nfit_available	deps/pmdk/src/common/os_auto_flush_windows.c	/^is_nfit_available()$/;"	f	file:
is_oct	deps/pmdk/src/benchmarks/clo.cpp	/^is_oct(const char *arg, size_t len)$/;"	f	file:
is_part	deps/pmdk/src/libpmempool/pool.h	/^	int is_part;$/;"	m	struct:pool_params
is_part	deps/pmdk/src/tools/pmempool/common.h	/^	int is_part;$/;"	m	struct:pmem_pool_params
is_pmem	deps/pmdk/src/common/set.h	/^	int is_pmem;		\/* true if all the parts are in PMEM *\/$/;"	m	struct:pool_replica
is_pmem	deps/pmdk/src/libpmem/pmem.h	/^	is_pmem_func is_pmem;$/;"	m	struct:pmem_funcs
is_pmem	deps/pmdk/src/libpmemblk/blk.h	/^	int is_pmem;		\/* true if pool is PMEM *\/$/;"	m	struct:pmemblk
is_pmem	deps/pmdk/src/libpmemlog/log.h	/^	int is_pmem;		\/* true if pool is PMEM *\/$/;"	m	struct:pmemlog
is_pmem	deps/pmdk/src/libpmemobj/obj.h	/^	int is_pmem;		\/* true if pool is PMEM *\/$/;"	m	struct:pmemobjpool
is_pmem	deps/pmdk/src/libpmempool/pool.h	/^	int is_pmem;$/;"	m	struct:pool_params
is_pmem	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	/^is_pmem(const char *path)$/;"	f	file:
is_pmem_always	deps/pmdk/src/libpmem/pmem.c	/^is_pmem_always(const void *addr, size_t len)$/;"	f	file:
is_pmem_detect	deps/pmdk/src/libpmem/pmem_posix.c	/^is_pmem_detect(const void *addr, size_t len)$/;"	f
is_pmem_detect	deps/pmdk/src/libpmem/pmem_windows.c	/^is_pmem_detect(const void *addr, size_t len)$/;"	f
is_pmem_func	deps/pmdk/src/libpmem/pmem.h	/^typedef int (*is_pmem_func)(const void *addr, size_t len);$/;"	t
is_pmem_never	deps/pmdk/src/libpmem/pmem.c	/^is_pmem_never(const void *addr, size_t len)$/;"	f	file:
is_pmems	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^static const int is_pmems[] = {0, 1};$/;"	v	file:
is_poolset	deps/pmdk/src/benchmarks/benchmark.hpp	/^	bool is_poolset;	 \/* test file is a poolset *\/$/;"	m	struct:benchmark_args
is_poolset	deps/pmdk/src/libpmempool/pool.h	/^	int is_poolset;$/;"	m	struct:pool_params
is_poolset	deps/pmdk/src/tools/pmempool/common.h	/^	int is_poolset;$/;"	m	struct:pmem_pool_params
is_power_of_2	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^is_power_of_2(uint64_t v)$/;"	f	file:
is_preferred	deps/pmdk/src/test/unittest/context.py	/^    is_preferred = True$/;"	v	class:Debug
is_preferred	deps/pmdk/src/test/unittest/context.py	/^    is_preferred = True$/;"	v	class:Pmem
is_preferred	deps/pmdk/src/test/unittest/context.py	/^    is_preferred = True$/;"	v	class:Release
is_remote	deps/pmdk/src/common/set.h	/^	int is_remote;$/;"	m	struct:part_file
is_scenario	deps/pmdk/src/benchmarks/config_reader.cpp	/^is_scenario(const char *name)$/;"	f	file:
is_scenario	deps/pmdk/src/benchmarks/config_reader_win.cpp	/^is_scenario(LPTSTR name)$/;"	f	file:
is_sparse	deps/pmdk/src/test/pmem_map_file/TEST3	/^is_sparse(){$/;"	f
is_terminal	deps/pmdk/src/test/unittest/unittest.sh	/^function is_terminal() {$/;"	f
is_uuid_already_used	deps/pmdk/src/libpmempool/sync.c	/^is_uuid_already_used(uuid_t uuid, struct pool_set *set, unsigned repn)$/;"	f	file:
is_valgrind_enabled_on_node	deps/pmdk/src/test/unittest/unittest.sh	/^function is_valgrind_enabled_on_node() {$/;"	f
is_vararg	deps/lua/src/lobject.h	/^  lu_byte is_vararg;$/;"	m	struct:Proto
is_write	deps/pmdk/src/common/os_thread_windows.c	/^	char is_write;$/;"	m	struct:__anon80	file:
is_zeroed	deps/pmdk/src/libpmemblk/blk.h	/^	int is_zeroed;$/;"	m	struct:pmemblk
is_zeroed	deps/pmdk/src/test/blk_non_zero/blk_non_zero.c	/^is_zeroed(const char *path)$/;"	f	file:
isalloc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^isalloc(tsdn_t *tsdn, const void *ptr, bool demote)$/;"	f
isalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	310;"	d
isalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	310;"	d
isblack	deps/lua/src/lgc.h	66;"	d
isblank	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h	/^isblank(int c)$/;"	f
isbreakable	deps/lua/src/lparser.c	/^  lu_byte isbreakable;  \/* true if `block' is a loop *\/$/;"	m	struct:BlockCnt	file:
iscfunction	deps/lua/src/lobject.h	315;"	d
iscleared	deps/lua/src/lgc.c	/^static int iscleared (const TValue *o, int iskey) {$/;"	f	file:
isclr	deps/pmdk/src/windows/include/sys/param.h	47;"	d
iscollectable	deps/lua/src/lobject.h	189;"	d
isdalloct	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^isdalloct(tsdn_t *tsdn, void *ptr, size_t size, tcache_t *tcache,$/;"	f
isdalloct	deps/jemalloc/include/jemalloc/internal/private_namespace.h	311;"	d
isdalloct	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	311;"	d
isdead	deps/lua/src/lgc.h	70;"	d
isfinalized	deps/lua/src/lgc.c	43;"	d	file:
isfinite	src/solarisfixes.h	40;"	d
isfinite	src/solarisfixes.h	41;"	d
isfree	deps/jemalloc/src/jemalloc.c	/^isfree(tsd_t *tsd, void *ptr, size_t usize, tcache_t *tcache, bool slow_path)$/;"	f
isgray	deps/lua/src/lgc.h	67;"	d
isinf	deps/lua/src/lua_cjson.c	61;"	d	file:
isinf	src/solarisfixes.h	45;"	d
isinf	src/solarisfixes.h	46;"	d
isinstack	deps/lua/src/ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	file:
isnan	src/solarisfixes.h	35;"	d
isnan	src/solarisfixes.h	36;"	d
isnumeral	deps/lua/src/lcode.c	/^static int isnumeral(expdesc *e) {$/;"	f	file:
isp2	deps/lua/src/lua_struct.c	62;"	d	file:
isqalloc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^isqalloc(tsd_t *tsd, void *ptr, size_t size, tcache_t *tcache, bool slow_path)$/;"	f
isqalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	312;"	d
isqalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	312;"	d
isset	deps/pmdk/src/windows/include/sys/param.h	46;"	d
issueCommand	src/redis-cli.c	/^static int issueCommand(int argc, char **argv) {$/;"	f	file:
issueCommandRepeat	src/redis-cli.c	/^static int issueCommandRepeat(int argc, char **argv, long repeat) {$/;"	f	file:
isthreaded	deps/jemalloc/include/jemalloc/internal/mutex.h	61;"	d
isthreaded	deps/jemalloc/include/jemalloc/internal/mutex.h	62;"	d
isthreaded	deps/jemalloc/include/jemalloc/internal/private_namespace.h	313;"	d
isthreaded	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	313;"	d
isthreaded	deps/jemalloc/src/mutex.c	/^bool isthreaded = false;$/;"	v
istty	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	int istty;			\/* stdout is tty *\/$/;"	m	struct:pocli	file:
iswhite	deps/lua/src/lgc.h	65;"	d
item	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^struct item {$/;"	s	file:
item	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	struct tree_map_node_item item)$/;"	s	file:
item	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	struct tree_map_node_item item,$/;"	v	typeref:struct:tree_map_node_item
item	deps/pmdk/src/test/obj_list/obj_list.h	/^	struct item item;$/;"	m	struct:oob_item	typeref:struct:oob_item::item
item	deps/pmdk/src/test/obj_list/obj_list.h	/^struct item {$/;"	s
item	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^struct item {$/;"	s	file:
item	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^struct item {$/;"	s	file:
item_constructor	deps/pmdk/src/test/obj_list/obj_list.c	/^item_constructor(void *ctx, void *ptr, size_t usable_size, void *arg)$/;"	f	file:
item_constructor	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^item_constructor(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
item_data	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^	uint64_t item_data;$/;"	m	struct:store_item	file:
itemp	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	TOID(struct item) itemp;$/;"	m	struct:element	file:
itemq	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	struct item *itemq;$/;"	m	struct:element	typeref:struct:element::item	file:
items	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	struct item **items;	 \/* volatile elements *\/$/;"	m	struct:obj_worker	typeref:struct:obj_worker::item	file:
items	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	char **items;$/;"	m	struct:obj_tx_worker	file:
items	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	struct tree_map_node_item items[BTREE_ORDER - 1];$/;"	m	struct:tree_map_node	typeref:struct:tree_map_node::tree_map_node_item	file:
iter	src/server.h	/^    quicklistIter *iter;$/;"	m	struct:__anon161
iter	src/t_zset.c	/^    } iter;$/;"	m	struct:__anon152	typeref:union:__anon152::__anon153	file:
iterate_free	deps/pmdk/src/libpmemobj/memblock.h	/^	int (*iterate_free)(const struct memory_block *m,$/;"	m	struct:memory_block_ops
iterate_used	deps/pmdk/src/libpmemobj/memblock.h	/^	int (*iterate_used)(const struct memory_block *m,$/;"	m	struct:memory_block_ops
iteration	deps/jemalloc/include/jemalloc/internal/spin.h	/^	unsigned iteration;$/;"	m	struct:spin_s
iterations	deps/pmdk/src/test/obj_pmalloc_rand_mt/obj_pmalloc_rand_mt.c	/^static unsigned iterations = 1000000;$/;"	v	file:
iterators	src/dict.h	/^    int iterators; \/* number of iterators currently running *\/$/;"	m	struct:dict
iterset	src/t_zset.c	/^typedef union _iterset iterset;$/;"	t	typeref:union:_iterset	file:
iterzset	src/t_zset.c	/^typedef union _iterzset iterzset;$/;"	t	typeref:union:_iterzset	file:
itrprintr	src/quicklist.c	/^static int itrprintr(quicklist *ql, int print) {$/;"	f	file:
itrprintr_rev	src/quicklist.c	/^static int itrprintr_rev(quicklist *ql, int print) {$/;"	f	file:
ivsalloc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^ivsalloc(tsdn_t *tsdn, const void *ptr, bool demote)$/;"	f
ivsalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	314;"	d
ivsalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	314;"	d
ixalloc	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^ixalloc(tsdn_t *tsdn, void *ptr, size_t oldsize, size_t size, size_t extra,$/;"	f
ixalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	315;"	d
ixalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	315;"	d
ixallocx_helper	deps/jemalloc/src/jemalloc.c	/^ixallocx_helper(tsdn_t *tsdn, void *ptr, size_t old_usize, size_t size,$/;"	f
ixallocx_prof	deps/jemalloc/src/jemalloc.c	/^ixallocx_prof(tsd_t *tsd, void *ptr, size_t old_usize, size_t size,$/;"	f
ixallocx_prof_sample	deps/jemalloc/src/jemalloc.c	/^ixallocx_prof_sample(tsdn_t *tsdn, void *ptr, size_t old_usize, size_t size,$/;"	f	file:
j	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^	int j;$/;"	m	struct:fields	file:
je_aligned_alloc	deps/jemalloc/include/jemalloc/internal/public_namespace.h	6;"	d
je_aligned_alloc	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	6;"	d
je_aligned_alloc	deps/jemalloc/include/jemalloc/jemalloc.h	360;"	d
je_aligned_alloc	deps/jemalloc/include/jemalloc/jemalloc.h	64;"	d
je_aligned_alloc	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	49;"	d
je_aligned_alloc	deps/jemalloc/include/jemalloc/jemalloc_rename.h	12;"	d
je_calloc	deps/jemalloc/include/jemalloc/internal/public_namespace.h	4;"	d
je_calloc	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	4;"	d
je_calloc	deps/jemalloc/include/jemalloc/jemalloc.h	358;"	d
je_calloc	deps/jemalloc/include/jemalloc/jemalloc.h	62;"	d
je_calloc	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	47;"	d
je_calloc	deps/jemalloc/include/jemalloc/jemalloc_rename.h	10;"	d
je_calloc	deps/jemalloc/src/jemalloc.c	/^void	*__libc_calloc(size_t n, size_t size) PREALIAS(je_calloc);$/;"	v
je_dallocx	deps/jemalloc/include/jemalloc/internal/public_namespace.h	13;"	d
je_dallocx	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	13;"	d
je_dallocx	deps/jemalloc/include/jemalloc/jemalloc.h	367;"	d
je_dallocx	deps/jemalloc/include/jemalloc/jemalloc.h	71;"	d
je_dallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	56;"	d
je_dallocx	deps/jemalloc/include/jemalloc/jemalloc_rename.h	19;"	d
je_dallocx	deps/jemalloc/src/jemalloc.c	/^je_dallocx(void *ptr, int flags)$/;"	f
je_free	deps/jemalloc/include/jemalloc/internal/public_namespace.h	8;"	d
je_free	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	8;"	d
je_free	deps/jemalloc/include/jemalloc/jemalloc.h	362;"	d
je_free	deps/jemalloc/include/jemalloc/jemalloc.h	66;"	d
je_free	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	51;"	d
je_free	deps/jemalloc/include/jemalloc/jemalloc_rename.h	14;"	d
je_free	deps/jemalloc/src/jemalloc.c	/^je_free(void *ptr)$/;"	f
je_free	deps/jemalloc/src/jemalloc.c	/^void	__libc_free(void* ptr) PREALIAS(je_free);$/;"	v
je_get_defrag_hint	deps/jemalloc/src/jemalloc.c	/^je_get_defrag_hint(void* ptr, int *bin_util, int *run_util) {$/;"	f
je_mallctl	deps/jemalloc/include/jemalloc/internal/public_namespace.h	16;"	d
je_mallctl	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	16;"	d
je_mallctl	deps/jemalloc/include/jemalloc/jemalloc.h	370;"	d
je_mallctl	deps/jemalloc/include/jemalloc/jemalloc.h	74;"	d
je_mallctl	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	59;"	d
je_mallctl	deps/jemalloc/include/jemalloc/jemalloc_rename.h	22;"	d
je_mallctl	deps/jemalloc/src/jemalloc.c	/^je_mallctl(const char *name, void *oldp, size_t *oldlenp, void *newp,$/;"	f
je_mallctlbymib	deps/jemalloc/include/jemalloc/internal/public_namespace.h	18;"	d
je_mallctlbymib	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	18;"	d
je_mallctlbymib	deps/jemalloc/include/jemalloc/jemalloc.h	372;"	d
je_mallctlbymib	deps/jemalloc/include/jemalloc/jemalloc.h	76;"	d
je_mallctlbymib	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	61;"	d
je_mallctlbymib	deps/jemalloc/include/jemalloc/jemalloc_rename.h	24;"	d
je_mallctlbymib	deps/jemalloc/src/jemalloc.c	/^je_mallctlbymib(const size_t *mib, size_t miblen, void *oldp, size_t *oldlenp,$/;"	f
je_mallctlnametomib	deps/jemalloc/include/jemalloc/internal/public_namespace.h	17;"	d
je_mallctlnametomib	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	17;"	d
je_mallctlnametomib	deps/jemalloc/include/jemalloc/jemalloc.h	371;"	d
je_mallctlnametomib	deps/jemalloc/include/jemalloc/jemalloc.h	75;"	d
je_mallctlnametomib	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	60;"	d
je_mallctlnametomib	deps/jemalloc/include/jemalloc/jemalloc_rename.h	23;"	d
je_mallctlnametomib	deps/jemalloc/src/jemalloc.c	/^je_mallctlnametomib(const char *name, size_t *mibp, size_t *miblenp)$/;"	f
je_malloc	deps/jemalloc/include/jemalloc/internal/public_namespace.h	3;"	d
je_malloc	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	3;"	d
je_malloc	deps/jemalloc/include/jemalloc/jemalloc.h	357;"	d
je_malloc	deps/jemalloc/include/jemalloc/jemalloc.h	61;"	d
je_malloc	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	46;"	d
je_malloc	deps/jemalloc/include/jemalloc/jemalloc_rename.h	9;"	d
je_malloc	deps/jemalloc/src/jemalloc.c	/^void	*__libc_malloc(size_t size) PREALIAS(je_malloc);$/;"	v
je_malloc_conf	deps/jemalloc/include/jemalloc/internal/public_namespace.h	1;"	d
je_malloc_conf	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	1;"	d
je_malloc_conf	deps/jemalloc/include/jemalloc/jemalloc.h	355;"	d
je_malloc_conf	deps/jemalloc/include/jemalloc/jemalloc.h	59;"	d
je_malloc_conf	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	44;"	d
je_malloc_conf	deps/jemalloc/include/jemalloc/jemalloc_rename.h	7;"	d
je_malloc_message	deps/jemalloc/include/jemalloc/internal/public_namespace.h	2;"	d
je_malloc_message	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	2;"	d
je_malloc_message	deps/jemalloc/include/jemalloc/jemalloc.h	356;"	d
je_malloc_message	deps/jemalloc/include/jemalloc/jemalloc.h	60;"	d
je_malloc_message	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	45;"	d
je_malloc_message	deps/jemalloc/include/jemalloc/jemalloc_rename.h	8;"	d
je_malloc_message	deps/jemalloc/src/util.c	/^JEMALLOC_EXPORT void	(*je_malloc_message)(void *, const char *s);$/;"	v
je_malloc_stats_print	deps/jemalloc/include/jemalloc/internal/public_namespace.h	19;"	d
je_malloc_stats_print	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	19;"	d
je_malloc_stats_print	deps/jemalloc/include/jemalloc/jemalloc.h	373;"	d
je_malloc_stats_print	deps/jemalloc/include/jemalloc/jemalloc.h	77;"	d
je_malloc_stats_print	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	62;"	d
je_malloc_stats_print	deps/jemalloc/include/jemalloc/jemalloc_rename.h	25;"	d
je_malloc_stats_print	deps/jemalloc/src/jemalloc.c	/^je_malloc_stats_print(void (*write_cb)(void *, const char *), void *cbopaque,$/;"	f
je_malloc_usable_size	deps/jemalloc/include/jemalloc/internal/public_namespace.h	20;"	d
je_malloc_usable_size	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	20;"	d
je_malloc_usable_size	deps/jemalloc/include/jemalloc/jemalloc.h	374;"	d
je_malloc_usable_size	deps/jemalloc/include/jemalloc/jemalloc.h	78;"	d
je_malloc_usable_size	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	63;"	d
je_malloc_usable_size	deps/jemalloc/include/jemalloc/jemalloc_rename.h	26;"	d
je_malloc_usable_size	deps/jemalloc/src/jemalloc.c	/^je_malloc_usable_size(JEMALLOC_USABLE_SIZE_CONST void *ptr)$/;"	f
je_mallocx	deps/jemalloc/include/jemalloc/internal/public_namespace.h	9;"	d
je_mallocx	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	9;"	d
je_mallocx	deps/jemalloc/include/jemalloc/jemalloc.h	363;"	d
je_mallocx	deps/jemalloc/include/jemalloc/jemalloc.h	67;"	d
je_mallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	52;"	d
je_mallocx	deps/jemalloc/include/jemalloc/jemalloc_rename.h	15;"	d
je_memalign	deps/jemalloc/include/jemalloc/internal/public_namespace.h	21;"	d
je_memalign	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	21;"	d
je_memalign	deps/jemalloc/include/jemalloc/jemalloc.h	375;"	d
je_memalign	deps/jemalloc/include/jemalloc/jemalloc.h	79;"	d
je_memalign	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	64;"	d
je_memalign	deps/jemalloc/include/jemalloc/jemalloc_rename.h	27;"	d
je_memalign	deps/jemalloc/src/jemalloc.c	/^void	*__libc_memalign(size_t align, size_t s) PREALIAS(je_memalign);$/;"	v
je_nallocx	deps/jemalloc/include/jemalloc/internal/public_namespace.h	15;"	d
je_nallocx	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	15;"	d
je_nallocx	deps/jemalloc/include/jemalloc/jemalloc.h	369;"	d
je_nallocx	deps/jemalloc/include/jemalloc/jemalloc.h	73;"	d
je_nallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	58;"	d
je_nallocx	deps/jemalloc/include/jemalloc/jemalloc_rename.h	21;"	d
je_posix_memalign	deps/jemalloc/include/jemalloc/internal/public_namespace.h	5;"	d
je_posix_memalign	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	5;"	d
je_posix_memalign	deps/jemalloc/include/jemalloc/jemalloc.h	359;"	d
je_posix_memalign	deps/jemalloc/include/jemalloc/jemalloc.h	63;"	d
je_posix_memalign	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	48;"	d
je_posix_memalign	deps/jemalloc/include/jemalloc/jemalloc_rename.h	11;"	d
je_posix_memalign	deps/jemalloc/src/jemalloc.c	/^    PREALIAS(je_posix_memalign);$/;"	v
je_posix_memalign	deps/jemalloc/src/jemalloc.c	/^je_posix_memalign(void **memptr, size_t alignment, size_t size)$/;"	f
je_rallocx	deps/jemalloc/include/jemalloc/internal/public_namespace.h	10;"	d
je_rallocx	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	10;"	d
je_rallocx	deps/jemalloc/include/jemalloc/jemalloc.h	364;"	d
je_rallocx	deps/jemalloc/include/jemalloc/jemalloc.h	68;"	d
je_rallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	53;"	d
je_rallocx	deps/jemalloc/include/jemalloc/jemalloc_rename.h	16;"	d
je_rallocx	deps/jemalloc/src/jemalloc.c	/^je_rallocx(void *ptr, size_t size, int flags)$/;"	f
je_realloc	deps/jemalloc/include/jemalloc/internal/public_namespace.h	7;"	d
je_realloc	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	7;"	d
je_realloc	deps/jemalloc/include/jemalloc/jemalloc.h	361;"	d
je_realloc	deps/jemalloc/include/jemalloc/jemalloc.h	65;"	d
je_realloc	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	50;"	d
je_realloc	deps/jemalloc/include/jemalloc/jemalloc_rename.h	13;"	d
je_realloc	deps/jemalloc/src/jemalloc.c	/^je_realloc(void *ptr, size_t size)$/;"	f
je_realloc	deps/jemalloc/src/jemalloc.c	/^void	*__libc_realloc(void* ptr, size_t size) PREALIAS(je_realloc);$/;"	v
je_sallocx	deps/jemalloc/include/jemalloc/internal/public_namespace.h	12;"	d
je_sallocx	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	12;"	d
je_sallocx	deps/jemalloc/include/jemalloc/jemalloc.h	366;"	d
je_sallocx	deps/jemalloc/include/jemalloc/jemalloc.h	70;"	d
je_sallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	55;"	d
je_sallocx	deps/jemalloc/include/jemalloc/jemalloc_rename.h	18;"	d
je_sdallocx	deps/jemalloc/include/jemalloc/internal/public_namespace.h	14;"	d
je_sdallocx	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	14;"	d
je_sdallocx	deps/jemalloc/include/jemalloc/jemalloc.h	368;"	d
je_sdallocx	deps/jemalloc/include/jemalloc/jemalloc.h	72;"	d
je_sdallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	57;"	d
je_sdallocx	deps/jemalloc/include/jemalloc/jemalloc_rename.h	20;"	d
je_sdallocx	deps/jemalloc/src/jemalloc.c	/^je_sdallocx(void *ptr, size_t size, int flags)$/;"	f
je_valloc	deps/jemalloc/include/jemalloc/internal/public_namespace.h	22;"	d
je_valloc	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	22;"	d
je_valloc	deps/jemalloc/include/jemalloc/jemalloc.h	376;"	d
je_valloc	deps/jemalloc/include/jemalloc/jemalloc.h	80;"	d
je_valloc	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	65;"	d
je_valloc	deps/jemalloc/include/jemalloc/jemalloc_rename.h	28;"	d
je_valloc	deps/jemalloc/src/jemalloc.c	/^void	*__libc_valloc(size_t size) PREALIAS(je_valloc);$/;"	v
je_xallocx	deps/jemalloc/include/jemalloc/internal/public_namespace.h	11;"	d
je_xallocx	deps/jemalloc/include/jemalloc/internal/public_unnamespace.h	11;"	d
je_xallocx	deps/jemalloc/include/jemalloc/jemalloc.h	365;"	d
je_xallocx	deps/jemalloc/include/jemalloc/jemalloc.h	69;"	d
je_xallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	54;"	d
je_xallocx	deps/jemalloc/include/jemalloc/jemalloc_rename.h	17;"	d
je_xallocx	deps/jemalloc/src/jemalloc.c	/^je_xallocx(void *ptr, size_t size, size_t extra, int flags)$/;"	f
jemalloc_constructor	deps/jemalloc/src/jemalloc.c	/^jemalloc_constructor(void)$/;"	f	file:
jemalloc_postfork_child	deps/jemalloc/include/jemalloc/internal/private_namespace.h	316;"	d
jemalloc_postfork_child	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	316;"	d
jemalloc_postfork_child	deps/jemalloc/src/jemalloc.c	/^jemalloc_postfork_child(void)$/;"	f
jemalloc_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_namespace.h	317;"	d
jemalloc_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	317;"	d
jemalloc_postfork_parent	deps/jemalloc/src/jemalloc.c	/^jemalloc_postfork_parent(void)$/;"	f
jemalloc_prefork	deps/jemalloc/include/jemalloc/internal/private_namespace.h	318;"	d
jemalloc_prefork	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	318;"	d
jemalloc_prefork	deps/jemalloc/src/jemalloc.c	/^jemalloc_prefork(void)$/;"	f
jemalloc_zone	deps/jemalloc/src/zone.c	/^static malloc_zone_t jemalloc_zone;$/;"	v	file:
jemalloc_zone_introspect	deps/jemalloc/src/zone.c	/^static struct malloc_introspection_t jemalloc_zone_introspect;$/;"	v	typeref:struct:malloc_introspection_t	file:
jet_aligned_alloc	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	49;"	d
jet_calloc	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	47;"	d
jet_dallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	56;"	d
jet_free	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	51;"	d
jet_mallctl	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	59;"	d
jet_mallctlbymib	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	61;"	d
jet_mallctlnametomib	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	60;"	d
jet_malloc	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	46;"	d
jet_malloc_conf	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	44;"	d
jet_malloc_message	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	45;"	d
jet_malloc_stats_print	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	62;"	d
jet_malloc_usable_size	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	63;"	d
jet_mallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	52;"	d
jet_memalign	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	64;"	d
jet_nallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	58;"	d
jet_posix_memalign	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	48;"	d
jet_rallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	53;"	d
jet_realloc	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	50;"	d
jet_sallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	55;"	d
jet_sdallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	57;"	d
jet_valloc	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	65;"	d
jet_xallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	54;"	d
jitter_state	deps/jemalloc/include/jemalloc/internal/arena.h	/^	uint64_t		jitter_state;$/;"	m	struct:arena_decay_s
join_cluster	src/redis-trib.rb	/^    def join_cluster$/;"	f	class:RedisTrib.alloc_slots
jpc	deps/lua/src/lparser.h	/^  int jpc;  \/* list of pending jumps to `pc' *\/$/;"	m	struct:FuncState
json_append_array	deps/lua/src/lua_cjson.c	/^static void json_append_array(lua_State *l, json_config_t *cfg, int current_depth,$/;"	f	file:
json_append_data	deps/lua/src/lua_cjson.c	/^static void json_append_data(lua_State *l, json_config_t *cfg,$/;"	f	file:
json_append_number	deps/lua/src/lua_cjson.c	/^static void json_append_number(lua_State *l, json_config_t *cfg,$/;"	f	file:
json_append_object	deps/lua/src/lua_cjson.c	/^static void json_append_object(lua_State *l, json_config_t *cfg,$/;"	f	file:
json_append_string	deps/lua/src/lua_cjson.c	/^static void json_append_string(lua_State *l, strbuf_t *json, int lindex)$/;"	f	file:
json_append_unicode_escape	deps/lua/src/lua_cjson.c	/^static int json_append_unicode_escape(json_parse_t *json)$/;"	f	file:
json_arg_init	deps/lua/src/lua_cjson.c	/^static json_config_t *json_arg_init(lua_State *l, int args)$/;"	f	file:
json_cfg_decode_invalid_numbers	deps/lua/src/lua_cjson.c	/^static int json_cfg_decode_invalid_numbers(lua_State *l)$/;"	f	file:
json_cfg_decode_max_depth	deps/lua/src/lua_cjson.c	/^static int json_cfg_decode_max_depth(lua_State *l)$/;"	f	file:
json_cfg_encode_invalid_numbers	deps/lua/src/lua_cjson.c	/^static int json_cfg_encode_invalid_numbers(lua_State *l)$/;"	f	file:
json_cfg_encode_keep_buffer	deps/lua/src/lua_cjson.c	/^static int json_cfg_encode_keep_buffer(lua_State *l)$/;"	f	file:
json_cfg_encode_max_depth	deps/lua/src/lua_cjson.c	/^static int json_cfg_encode_max_depth(lua_State *l)$/;"	f	file:
json_cfg_encode_number_precision	deps/lua/src/lua_cjson.c	/^static int json_cfg_encode_number_precision(lua_State *l)$/;"	f	file:
json_cfg_encode_sparse_array	deps/lua/src/lua_cjson.c	/^static int json_cfg_encode_sparse_array(lua_State *l)$/;"	f	file:
json_check_encode_depth	deps/lua/src/lua_cjson.c	/^static void json_check_encode_depth(lua_State *l, json_config_t *cfg,$/;"	f	file:
json_config_t	deps/lua/src/lua_cjson.c	/^} json_config_t;$/;"	t	typeref:struct:__anon43	file:
json_create_config	deps/lua/src/lua_cjson.c	/^static void json_create_config(lua_State *l)$/;"	f	file:
json_decode	deps/lua/src/lua_cjson.c	/^static int json_decode(lua_State *l)$/;"	f	file:
json_decode_ascend	deps/lua/src/lua_cjson.c	/^static inline void json_decode_ascend(json_parse_t *json)$/;"	f	file:
json_decode_descend	deps/lua/src/lua_cjson.c	/^static void json_decode_descend(lua_State *l, json_parse_t *json, int slots)$/;"	f	file:
json_destroy_config	deps/lua/src/lua_cjson.c	/^static int json_destroy_config(lua_State *l)$/;"	f	file:
json_encode	deps/lua/src/lua_cjson.c	/^static int json_encode(lua_State *l)$/;"	f	file:
json_encode_exception	deps/lua/src/lua_cjson.c	/^static void json_encode_exception(lua_State *l, json_config_t *cfg, strbuf_t *json, int lindex,$/;"	f	file:
json_enum_option	deps/lua/src/lua_cjson.c	/^static int json_enum_option(lua_State *l, int optindex, int *setting,$/;"	f	file:
json_fetch_config	deps/lua/src/lua_cjson.c	/^static json_config_t *json_fetch_config(lua_State *l)$/;"	f	file:
json_integer_option	deps/lua/src/lua_cjson.c	/^static int json_integer_option(lua_State *l, int optindex, int *setting,$/;"	f	file:
json_is_invalid_number	deps/lua/src/lua_cjson.c	/^static int json_is_invalid_number(json_parse_t *json)$/;"	f	file:
json_next_number_token	deps/lua/src/lua_cjson.c	/^static void json_next_number_token(json_parse_t *json, json_token_t *token)$/;"	f	file:
json_next_string_token	deps/lua/src/lua_cjson.c	/^static void json_next_string_token(json_parse_t *json, json_token_t *token)$/;"	f	file:
json_next_token	deps/lua/src/lua_cjson.c	/^static void json_next_token(json_parse_t *json, json_token_t *token)$/;"	f	file:
json_parse_array_context	deps/lua/src/lua_cjson.c	/^static void json_parse_array_context(lua_State *l, json_parse_t *json)$/;"	f	file:
json_parse_object_context	deps/lua/src/lua_cjson.c	/^static void json_parse_object_context(lua_State *l, json_parse_t *json)$/;"	f	file:
json_parse_t	deps/lua/src/lua_cjson.c	/^} json_parse_t;$/;"	t	typeref:struct:__anon44	file:
json_process_value	deps/lua/src/lua_cjson.c	/^static void json_process_value(lua_State *l, json_parse_t *json,$/;"	f	file:
json_protect_conversion	deps/lua/src/lua_cjson.c	/^static int json_protect_conversion(lua_State *l)$/;"	f	file:
json_set_token_error	deps/lua/src/lua_cjson.c	/^static void json_set_token_error(json_token_t *token, json_parse_t *json,$/;"	f	file:
json_throw_parse_error	deps/lua/src/lua_cjson.c	/^static void json_throw_parse_error(lua_State *l, json_parse_t *json,$/;"	f	file:
json_token_t	deps/lua/src/lua_cjson.c	/^} json_token_t;$/;"	t	typeref:struct:__anon45	file:
json_token_type_name	deps/lua/src/lua_cjson.c	/^static const char *json_token_type_name[] = {$/;"	v	file:
json_token_type_t	deps/lua/src/lua_cjson.c	/^} json_token_type_t;$/;"	t	typeref:enum:__anon42	file:
json_verify_invalid_number_setting	deps/lua/src/lua_cjson.c	/^void json_verify_invalid_number_setting(lua_State *l, int *setting)$/;"	f
json_verify_invalid_number_setting	deps/lua/src/lua_cjson.c	335;"	d	file:
jumponcond	deps/lua/src/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:
k	deps/lua/src/lobject.h	/^  TValue *k;  \/* constants used by the function *\/$/;"	m	struct:Proto
k	deps/lua/src/lparser.h	/^  expkind k;$/;"	m	struct:expdesc
k	deps/lua/src/lparser.h	/^  lu_byte k;$/;"	m	struct:upvaldesc
k	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^	int k;$/;"	m	struct:fields	file:
keepalive	src/redis-benchmark.c	/^    int keepalive;$/;"	m	struct:config	file:
key	deps/hiredis/dict.h	/^    void *key;$/;"	m	struct:dictEntry
key	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	const void	*key;$/;"	m	struct:ckhc_s
key	deps/jemalloc/test/unit/ph.c	/^	uint64_t key;$/;"	m	struct:node_s	file:
key	deps/jemalloc/test/unit/rb.c	/^	uint64_t key;$/;"	m	struct:node_s	file:
key	deps/pmdk/src/benchmarks/scenario.hpp	/^	char *key;$/;"	m	struct:kv
key	deps/pmdk/src/examples/libpmemobj/btree.c	/^	int64_t key;$/;"	m	struct:btree_node	file:
key	deps/pmdk/src/examples/libpmemobj/btree.c	/^	int64_t key;$/;"	m	struct:btree_node_arg	file:
key	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	uint64_t key;$/;"	m	struct:entry	file:
key	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	uint64_t key;$/;"	m	struct:entry_args	file:
key	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^	uint64_t key;$/;"	m	struct:entry	file:
key	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^	uint64_t key;$/;"	m	struct:entry	file:
key	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	TOID(var_string) key;$/;"	m	struct:_art_leaf
key	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	unsigned char *key;	\/* for SEARCH, INSERT and REMOVE *\/$/;"	m	struct:ds_context	file:
key	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	union _toid_var_string_toid key;$/;"	m	struct:_art_leaf	typeref:union:_art_leaf::_toid_var_string_toid
key	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^	uint64_t key;$/;"	m	struct:skiplist_map_entry	file:
key	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	uint64_t key, int *p)$/;"	v
key	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	uint64_t key, int p)$/;"	v
key	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	uint64_t key;$/;"	m	struct:tree_map_node_item	file:
key	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^	uint64_t key;$/;"	m	struct:tree_map_entry	file:
key	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^ctree_map_get_leaf(TOID(struct ctree_map) map, uint64_t key,$/;"	v
key	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	uint64_t key;$/;"	m	struct:tree_map_node	file:
key	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^		const unsigned char *key, uint64_t key_size)$/;"	v
key	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^	const unsigned char *key, uint64_t key_size)$/;"	v
key	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^	const unsigned char *key, uint64_t key_size, PMEMoid value)$/;"	v
key	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^	const unsigned char *key, uint64_t key_size,$/;"	v
key	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^	unsigned char key[];$/;"	m	struct:tree_map_node	file:
key	deps/pmdk/src/libpmemobj/critnib.c	/^	uint64_t key;$/;"	m	struct:critnib_leaf	file:
key	src/dict.h	/^    void *key;$/;"	m	struct:dictEntry
key	src/multi.c	/^    robj *key;$/;"	m	struct:watchedKey	file:
key	src/redis-check-rdb.c	/^    robj *key;                      \/* Current key we are reading. *\/$/;"	m	struct:__anon151	file:
key	src/server.h	/^    robj *key;$/;"	m	struct:readyList
key	src/server.h	/^    sds key;                    \/* Key name. *\/$/;"	m	struct:evictionPoolEntry
key2tval	deps/lua/src/ltable.h	18;"	d
keyCompare	deps/hiredis/dict.h	/^    int (*keyCompare)(void *privdata, const void *key1, const void *key2);$/;"	m	struct:dictType
keyCompare	src/dict.h	/^    int (*keyCompare)(void *privdata, const void *key1, const void *key2);$/;"	m	struct:dictType
keyDestructor	deps/hiredis/dict.h	/^    void (*keyDestructor)(void *privdata, void *key);$/;"	m	struct:dictType
keyDestructor	src/dict.h	/^    void (*keyDestructor)(void *privdata, void *key);$/;"	m	struct:dictType
keyDup	deps/hiredis/dict.h	/^    void *(*keyDup)(void *privdata, const void *key);$/;"	m	struct:dictType
keyDup	src/dict.h	/^    void *(*keyDup)(void *privdata, const void *key);$/;"	m	struct:dictType
keyHashSlot	src/cluster.c	/^unsigned int keyHashSlot(char *key, int keylen) {$/;"	f
key_file	deps/pmdk/src/benchmarks/config_reader.cpp	/^	GKeyFile *key_file;$/;"	m	struct:config_reader	file:
key_len	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	uint32_t key_len;$/;"	m	struct:ds_context	file:
key_oid	src/pmem.h	/^    PMEMoid key_oid;$/;"	m	struct:key_val_pair_PM
key_size	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^	const unsigned char *key, uint64_t key_size, PMEMoid value)$/;"	v
key_size	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^	const unsigned char *key, uint64_t key_size,$/;"	v
key_size	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^	uint64_t key_size;$/;"	m	struct:tree_map_node	file:
key_to_slot	src/redis-trib.rb	/^def key_to_slot(key)$/;"	f	class:RedisTrib
key_type	src/redis-check-rdb.c	/^    int key_type;                   \/* Current key type if != -1. *\/$/;"	m	struct:__anon151	file:
key_val_pair_PM	src/pmem.h	/^typedef struct key_val_pair_PM {$/;"	s
key_val_pair_PM	src/pmem.h	/^} key_val_pair_PM;$/;"	t	typeref:struct:key_val_pair_PM
keycomp	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	ckh_keycomp_t	*keycomp;$/;"	m	struct:ckh_s
keylistDictType	src/server.c	/^dictType keylistDictType = {$/;"	v
keyptrDictType	src/server.c	/^dictType keyptrDictType = {$/;"	v
keys	deps/pmdk/src/benchmarks/map_bench.cpp	/^	uint64_t *keys;$/;"	m	struct:map_bench	file:
keys	deps/pmdk/src/benchmarks/map_bench.cpp	/^	uint64_t *keys;$/;"	m	struct:map_bench_worker	file:
keys	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	unsigned char keys[16];$/;"	m	struct:_art_node16
keys	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	unsigned char keys[256];$/;"	m	struct:_art_node48
keys	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	unsigned char keys[4];$/;"	m	struct:_art_node4
keys	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	unsigned char keys[16];$/;"	m	struct:_art_node16
keys	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	unsigned char keys[256];$/;"	m	struct:_art_node48
keys	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	unsigned char keys[4];$/;"	m	struct:_art_node4
keys	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^static uint64_t keys[MAX_INSERTS];$/;"	v	file:
keys	src/redis-check-rdb.c	/^    unsigned long keys;             \/* Number of keys processed. *\/$/;"	m	struct:__anon151	file:
keys	src/server.h	/^    dict *keys;             \/* The keys we are waiting to terminate a blocking$/;"	m	struct:blockingState
keysCommand	src/db.c	/^void keysCommand(client *c) {$/;"	f
keysize	src/redis-benchmark.c	/^    int keysize;$/;"	m	struct:config	file:
keyspaceEventsFlagsToString	src/notify.c	/^sds keyspaceEventsFlagsToString(int flags) {$/;"	f
keyspaceEventsStringToFlags	src/notify.c	/^int keyspaceEventsStringToFlags(char *classes) {$/;"	f
keystep	src/server.h	/^    int keystep;  \/* The step between first and last key *\/$/;"	m	struct:redisCommand
kill_clients	tests/test_helper.tcl	/^proc kill_clients {} {$/;"	p
kill_instance	tests/instances.tcl	/^proc kill_instance {type id} {$/;"	p
kill_on_node	deps/pmdk/src/test/unittest/unittest.sh	/^function kill_on_node() {$/;"	f
kill_server	tests/support/server.tcl	/^proc kill_server config {$/;"	p
kname	deps/lua/src/ldebug.c	/^static const char *kname (Proto *p, int c) {$/;"	f	file:
kqfd	src/ae_kqueue.c	/^    int kqfd;$/;"	m	struct:aeApiState	file:
kv	deps/pmdk/src/benchmarks/scenario.hpp	/^struct kv {$/;"	s
kv_alloc	deps/pmdk/src/benchmarks/scenario.cpp	/^kv_alloc(const char *key, const char *value)$/;"	f
kv_cmsg	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^enum kv_cmsg {$/;"	g
kv_cmsg_token	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^static const char *kv_cmsg_token[MAX_CMSG] = {$/;"	v
kv_free	deps/pmdk/src/benchmarks/scenario.cpp	/^kv_free(struct kv *kv)$/;"	f
kv_list_init	deps/pmdk/src/benchmarks/config_reader_win.cpp	/^kv_list_init(LPTSTR list)$/;"	f	file:
kv_list_skip_comment	deps/pmdk/src/benchmarks/config_reader_win.cpp	/^kv_list_skip_comment(KV_LIST list)$/;"	f	file:
kv_server	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^POBJ_LAYOUT_BEGIN(kv_server);$/;"	v
kv_server	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^POBJ_LAYOUT_END(kv_server);$/;"	v
l	deps/lua/src/lobject.h	/^    } l;$/;"	m	union:UpVal::__anon26	typeref:struct:UpVal::__anon26::__anon27
l	deps/lua/src/lobject.h	/^  LClosure l;$/;"	m	union:Closure
l	deps/lua/src/lstate.c	/^  lua_State l;$/;"	m	struct:LG	file:
l	deps/pmdk/src/test/obj_lane/obj_lane.c	/^	struct lane_layout l[MAX_MOCK_LANES];$/;"	m	struct:mock_pop	typeref:struct:mock_pop::lane_layout	file:
l	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^	int l;$/;"	m	struct:fields	file:
l2s	deps/pmdk/src/test/rpmemd_log/rpmemd_log_test.c	/^l2s(enum rpmemd_log_level level)$/;"	f	file:
l_G	deps/lua/src/lstate.h	/^  global_State *l_G;$/;"	m	struct:lua_State
l_alloc	deps/lua/src/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
l_d	deps/lua/src/luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast
l_gt	deps/lua/src/lstate.h	/^  TValue l_gt;  \/* table of globals *\/$/;"	m	struct:lua_State
l_isfalse	deps/lua/src/lobject.h	103;"	d
l_l	deps/lua/src/luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast
l_mem	deps/lua/src/llimits.h	/^typedef LUAI_MEM l_mem;$/;"	t
l_message	deps/lua/src/lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	file:
l_registry	deps/lua/src/lstate.h	/^  TValue l_registry;$/;"	m	struct:global_State
l_setbit	deps/lua/src/lgc.h	32;"	d
l_strcmp	deps/lua/src/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:
l_uacNumber	deps/lua/src/llimits.h	/^typedef LUAI_UACNUMBER l_uacNumber;$/;"	t
label	src/sparkline.h	/^    char *label;$/;"	m	struct:sample
label_margin_top	src/sparkline.c	/^static int label_margin_top = 1;$/;"	v	file:
labels	src/sparkline.h	/^    int labels;$/;"	m	struct:sequence
laction	deps/lua/src/lua.c	/^static void laction (int i) {$/;"	f	file:
laddr	deps/pmdk/src/librpmem/rpmem_fip.c	/^	void *laddr;	\/* local memory base address *\/$/;"	m	struct:rpmem_fip	file:
laddr	deps/pmdk/src/librpmem/rpmem_fip.h	/^	void *laddr;$/;"	m	struct:rpmem_fip_attr
laidout	deps/pmdk/src/libpmemblk/btt.c	/^	int laidout;$/;"	m	struct:btt	file:
lane	deps/pmdk/src/libpmemobj/lane.h	/^	struct lane *lane;$/;"	m	struct:lane_descriptor	typeref:struct:lane_descriptor::lane
lane	deps/pmdk/src/libpmemobj/lane.h	/^struct lane {$/;"	s
lane	deps/pmdk/src/libpmemobj/tx.c	/^	struct lane *lane;$/;"	m	struct:tx	typeref:struct:tx::lane	file:
lane	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t lane;	\/* lane identifier *\/$/;"	m	struct:rpmem_msg_persist
lane	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t lane;	\/* lane identifier *\/$/;"	m	struct:rpmem_msg_persist_resp
lane	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	unsigned lane;$/;"	m	struct:drain_thread_arg	file:
lane	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	unsigned lane;$/;"	m	struct:flush_thread_arg	file:
lane	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^	unsigned lane;$/;"	m	struct:flush_arg	file:
lane_alloc_runtime	deps/pmdk/src/libpmemobj/pmalloc.c	/^struct lane_alloc_runtime {$/;"	s	file:
lane_boot	deps/pmdk/src/libpmemobj/lane.c	/^lane_boot(PMEMobjpool *pop)$/;"	f
lane_check	deps/pmdk/src/libpmemobj/lane.c	/^lane_check(PMEMobjpool *pop)$/;"	f
lane_cleanup	deps/pmdk/src/libpmemobj/lane.c	/^lane_cleanup(PMEMobjpool *pop)$/;"	f
lane_descriptor	deps/pmdk/src/libpmemobj/lane.h	/^struct lane_descriptor {$/;"	s
lane_destroy	deps/pmdk/src/libpmemobj/lane.c	/^lane_destroy(PMEMobjpool *pop, struct lane *lane)$/;"	f	file:
lane_enter	deps/pmdk/src/libpmemblk/blk.c	/^lane_enter(PMEMblkpool *pbp, unsigned *lane)$/;"	f	file:
lane_exit	deps/pmdk/src/libpmemblk/blk.c	/^lane_exit(PMEMblkpool *pbp, unsigned mylane)$/;"	f	file:
lane_get_layout	deps/pmdk/src/libpmemobj/lane.c	/^lane_get_layout(PMEMobjpool *pop, uint64_t lane_idx)$/;"	f	file:
lane_hold	deps/pmdk/src/libpmemobj/lane.c	/^lane_hold(PMEMobjpool *pop, struct lane **lanep)$/;"	f
lane_hold	deps/pmdk/src/test/obj_list/mocks_windows.h	76;"	d
lane_idx	deps/pmdk/src/libpmemobj/lane.h	/^	uint64_t lane_idx;$/;"	m	struct:lane_info
lane_info	deps/pmdk/src/libpmemobj/lane.h	/^struct lane_info {$/;"	s
lane_info_boot	deps/pmdk/src/libpmemobj/lane.c	/^lane_info_boot(void)$/;"	f
lane_info_cleanup	deps/pmdk/src/libpmemobj/lane.c	/^lane_info_cleanup(PMEMobjpool *pop)$/;"	f	file:
lane_info_create	deps/pmdk/src/libpmemobj/lane.c	/^lane_info_create(void)$/;"	f	file:
lane_info_delete	deps/pmdk/src/libpmemobj/lane.c	/^lane_info_delete(void)$/;"	f	file:
lane_info_destroy	deps/pmdk/src/libpmemobj/lane.c	/^lane_info_destroy(void)$/;"	f
lane_info_ht_boot	deps/pmdk/src/libpmemobj/lane.c	/^lane_info_ht_boot(void)$/;"	f	file:
lane_info_ht_destroy	deps/pmdk/src/libpmemobj/lane.c	/^lane_info_ht_destroy(void *ht)$/;"	f	file:
lane_init	deps/pmdk/src/libpmemobj/lane.c	/^lane_init(PMEMobjpool *pop, struct lane *lane, struct lane_layout *layout)$/;"	f	file:
lane_init_data	deps/pmdk/src/libpmemobj/lane.c	/^lane_init_data(PMEMobjpool *pop)$/;"	f
lane_layout	deps/pmdk/src/libpmemobj/lane.h	/^struct lane_layout {$/;"	s
lane_locks	deps/pmdk/src/libpmemobj/lane.h	/^	uint64_t *lane_locks;$/;"	m	struct:lane_descriptor
lane_need_recovery	deps/pmdk/src/tools/pmempool/info_obj.c	/^lane_need_recovery(struct pmem_info *pip, struct lane_layout *lane)$/;"	f	file:
lane_ranges	deps/pmdk/src/tools/pmempool/info.h	/^		struct ranges lane_ranges;$/;"	m	struct:pmempool_info_args::__anon109	typeref:struct:pmempool_info_args::__anon109::ranges
lane_recover_and_section_boot	deps/pmdk/src/libpmemobj/lane.c	/^lane_recover_and_section_boot(PMEMobjpool *pop)$/;"	f
lane_recover_and_section_boot	deps/pmdk/src/test/obj_list/mocks_windows.h	78;"	d
lane_redo_extend	deps/pmdk/src/libpmemobj/lane.c	/^lane_redo_extend(void *base, uint64_t *redo, uint64_t gen_num)$/;"	f	file:
lane_release	deps/pmdk/src/libpmemobj/lane.c	/^lane_release(PMEMobjpool *pop)$/;"	f
lane_release	deps/pmdk/src/test/obj_list/mocks_windows.h	77;"	d
lane_section_cleanup	deps/pmdk/src/libpmemobj/lane.c	/^lane_section_cleanup(PMEMobjpool *pop)$/;"	f
lane_section_cleanup	deps/pmdk/src/test/obj_list/mocks_windows.h	79;"	d
lane_ulog_constructor	deps/pmdk/src/libpmemobj/lane.c	/^lane_ulog_constructor(void *base, void *ptr, size_t usable_size, void *arg)$/;"	f	file:
lane_undo_extend	deps/pmdk/src/libpmemobj/lane.c	/^lane_undo_extend(void *base, uint64_t *redo, uint64_t gen_num)$/;"	f	file:
lanes	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct rpmem_fip_plane *lanes;$/;"	m	struct:rpmem_fip	typeref:struct:rpmem_fip::rpmem_fip_plane	file:
lanes	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^	char lanes[LANE_TOTAL_SIZE];$/;"	m	struct:mock_pop	file:
lanes	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct rpmemd_fip_lane **lanes; \/* lanes processed by this thread *\/$/;"	m	struct:rpmemd_fip_thread	typeref:struct:rpmemd_fip_thread::rpmemd_fip_lane	file:
lanes	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct rpmemd_fip_lane *lanes;$/;"	m	struct:rpmemd_fip	typeref:struct:rpmemd_fip::rpmemd_fip_lane	file:
lanes_desc	deps/pmdk/src/libpmemobj/obj.h	/^	struct lane_descriptor lanes_desc;$/;"	m	struct:pmemobjpool	typeref:struct:pmemobjpool::lane_descriptor
lanes_exit	deps/pmdk/src/benchmarks/obj_lanes.cpp	/^lanes_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
lanes_fini	deps/pmdk/src/librpmem/rpmem_fip.c	/^	rpmem_fip_fini_fn lanes_fini;$/;"	m	struct:rpmem_fip_ops	file:
lanes_info	deps/pmdk/src/benchmarks/obj_lanes.cpp	/^static struct benchmark_info lanes_info;$/;"	v	typeref:struct:benchmark_info	file:
lanes_init	deps/pmdk/src/benchmarks/obj_lanes.cpp	/^lanes_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
lanes_init	deps/pmdk/src/librpmem/rpmem_fip.c	/^	rpmem_fip_init_fn lanes_init;$/;"	m	struct:rpmem_fip_ops	file:
lanes_init_mem	deps/pmdk/src/librpmem/rpmem_fip.c	/^	rpmem_fip_init_fn lanes_init_mem;$/;"	m	struct:rpmem_fip_ops	file:
lanes_offset	deps/pmdk/src/libpmemobj/obj.h	/^	uint64_t lanes_offset;$/;"	m	struct:pmemobjpool
lanes_op	deps/pmdk/src/benchmarks/obj_lanes.cpp	/^lanes_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
lanes_per_thread	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	size_t lanes_per_thread; \/* number of lanes per thread *\/$/;"	m	struct:rpmemd_fip	file:
lanes_post	deps/pmdk/src/librpmem/rpmem_fip.c	/^	rpmem_fip_init_fn lanes_post;$/;"	m	struct:rpmem_fip_ops	file:
lanes_recovery	deps/pmdk/src/tools/pmempool/info.h	/^		bool lanes_recovery;$/;"	m	struct:pmempool_info_args::__anon109
lang	deps/pmdk/src/examples/librpmem/hello.c	/^	enum lang_t lang;$/;"	m	struct:hello_t	typeref:enum:hello_t::lang_t	file:
lang_t	deps/pmdk/src/examples/librpmem/hello.c	/^enum lang_t {en, es};$/;"	g	file:
lapi_c	deps/lua/src/lapi.c	13;"	d	file:
lapi_h	deps/lua/src/lapi.h	8;"	d
large_data	deps/pmdk/src/test/obj_recovery/obj_recovery.c	/^	char large_data[MB];$/;"	m	struct:root	file:
large_maxclass	deps/jemalloc/include/jemalloc/internal/private_namespace.h	319;"	d
large_maxclass	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	319;"	d
large_maxclass	deps/jemalloc/src/arena.c	/^size_t		large_maxclass; \/* Max large size class. *\/$/;"	v
large_pad	deps/jemalloc/include/jemalloc/internal/arena.h	/^static const size_t	large_pad =$/;"	v
last	deps/pmdk/src/tools/pmempool/common.h	/^	uint64_t last;$/;"	m	struct:range
lastTime	src/ae.h	/^    time_t lastTime;     \/* Used to detect system clock skew *\/$/;"	m	struct:aeEventLoop
lastVoteEpoch	src/cluster.h	/^    uint64_t lastVoteEpoch;     \/* Epoch of the last vote granted. *\/$/;"	m	struct:clusterState
last_avail_time	src/sentinel.c	/^    mstime_t last_avail_time; \/* Last time the instance replied to ping with$/;"	m	struct:instanceLink	file:
last_cmd_type	src/redis-cli.c	/^    int last_cmd_type;$/;"	m	struct:config	file:
last_dbid	src/cluster.c	/^    long last_dbid;$/;"	m	struct:migrateCachedSocket	file:
last_errnum	deps/pmdk/src/libpmemobj/tx.c	/^	int last_errnum;$/;"	m	struct:tx	file:
last_hello_time	src/sentinel.c	/^    mstime_t last_hello_time; \/* Only used if SRI_SENTINEL is set. Last time$/;"	m	struct:sentinelRedisInstance	file:
last_master_down_reply_time	src/sentinel.c	/^    mstime_t last_master_down_reply_time; \/* Time of last reply to$/;"	m	struct:sentinelRedisInstance	file:
last_ping_time	src/sentinel.c	/^    mstime_t last_ping_time;  \/* Time at which we sent the last ping. This is$/;"	m	struct:instanceLink	file:
last_pong_time	src/sentinel.c	/^    mstime_t last_pong_time;  \/* Last time the instance replied to ping,$/;"	m	struct:instanceLink	file:
last_pub_time	src/sentinel.c	/^    mstime_t last_pub_time;   \/* Last time we sent hello via Pub\/Sub. *\/$/;"	m	struct:sentinelRedisInstance	file:
last_reconn_time	src/sentinel.c	/^    mstime_t last_reconn_time;  \/* Last reconnection attempt performed when$/;"	m	struct:instanceLink	file:
last_run_max_size	deps/pmdk/src/libpmemobj/alloc_class.c	/^	size_t last_run_max_size;$/;"	m	struct:alloc_class_collection	file:
last_sample_count	src/server.h	/^        long long last_sample_count;\/* Count in last sample *\/$/;"	m	struct:redisServer::__anon159
last_sample_time	src/server.h	/^        long long last_sample_time; \/* Timestamp of last sample in ms *\/$/;"	m	struct:redisServer::__anon159
last_use_time	src/cluster.c	/^    time_t last_use_time;$/;"	m	struct:migrateCachedSocket	file:
lastbgsave_status	src/server.h	/^    int lastbgsave_status;          \/* C_OK or C_ERR *\/$/;"	m	struct:redisServer
lastbgsave_try	src/server.h	/^    time_t lastbgsave_try;          \/* Unix time of last attempted bgsave *\/$/;"	m	struct:redisServer
lastcmd	src/server.h	/^    struct redisCommand *cmd, *lastcmd;  \/* Last command executed. *\/$/;"	m	struct:client	typeref:struct:client::
lastfree	deps/lua/src/lobject.h	/^  Node *lastfree;  \/* any free position is before this position *\/$/;"	m	struct:Table
lastinteraction	src/server.h	/^    time_t lastinteraction; \/* Time of the last interaction, used for timeout *\/$/;"	m	struct:client
lastkey	src/server.h	/^    int lastkey;  \/* The last argument that's a key *\/$/;"	m	struct:redisCommand
lastline	deps/lua/src/llex.h	/^  int lastline;  \/* line of last token `consumed' *\/$/;"	m	struct:LexState
lastlinedefined	deps/lua/src/lobject.h	/^  int lastlinedefined;$/;"	m	struct:Proto
lastlinedefined	deps/lua/src/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lastlistfield	deps/lua/src/lparser.c	/^static void lastlistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
lastsave	src/server.h	/^    time_t lastsave;                \/* Unix time of last successful save *\/$/;"	m	struct:redisServer
lastsaveCommand	src/db.c	/^void lastsaveCommand(client *c) {$/;"	f
lasttarget	deps/lua/src/lparser.h	/^  int lasttarget;   \/* `pc' of last `jump target' *\/$/;"	m	struct:FuncState
latency	deps/pmdk/src/benchmarks/benchmark.hpp	/^	struct latency latency;$/;"	m	struct:total_results	typeref:struct:total_results::latency
latency	deps/pmdk/src/benchmarks/benchmark.hpp	/^struct latency {$/;"	s
latency	src/latency.h	/^    uint32_t latency; \/* Latency in milliseconds. *\/$/;"	m	struct:latencySample
latency	src/redis-benchmark.c	/^    long long *latency;$/;"	m	struct:config	file:
latency	src/redis-benchmark.c	/^    long long latency;      \/* Request latency *\/$/;"	m	struct:_client	file:
latencyAddSample	src/latency.c	/^void latencyAddSample(char *event, mstime_t latency) {$/;"	f
latencyAddSampleIfNeeded	src/latency.h	84;"	d
latencyCommand	src/latency.c	/^void latencyCommand(client *c) {$/;"	f
latencyCommandGenSparkeline	src/latency.c	/^sds latencyCommandGenSparkeline(char *event, struct latencyTimeSeries *ts) {$/;"	f
latencyCommandReplyWithLatestEvents	src/latency.c	/^void latencyCommandReplyWithLatestEvents(client *c) {$/;"	f
latencyCommandReplyWithSamples	src/latency.c	/^void latencyCommandReplyWithSamples(client *c, struct latencyTimeSeries *ts) {$/;"	f
latencyDistMode	src/redis-cli.c	/^static void latencyDistMode(void) {$/;"	f	file:
latencyEndMonitor	src/latency.h	79;"	d
latencyMode	src/redis-cli.c	/^static void latencyMode(void) {$/;"	f	file:
latencyMonitorInit	src/latency.c	/^void latencyMonitorInit(void) {$/;"	f
latencyRemoveNestedEvent	src/latency.h	90;"	d
latencyResetEvent	src/latency.c	/^int latencyResetEvent(char *event_to_reset) {$/;"	f
latencySample	src/latency.h	/^struct latencySample {$/;"	s
latencyStartMonitor	src/latency.h	71;"	d
latencyStats	src/latency.h	/^struct latencyStats {$/;"	s
latencyTimeSeries	src/latency.h	/^struct latencyTimeSeries {$/;"	s
latencyTimeSeriesDictType	src/latency.c	/^dictType latencyTimeSeriesDictType = {$/;"	v
latency_dist_mode	src/redis-cli.c	/^    int latency_dist_mode;$/;"	m	struct:config	file:
latency_events	src/server.h	/^    dict *latency_events;$/;"	m	struct:redisServer
latency_history	src/redis-cli.c	/^    int latency_history;$/;"	m	struct:config	file:
latency_mode	src/redis-cli.c	/^    int latency_mode;$/;"	m	struct:config	file:
latency_monitor_threshold	src/server.h	/^    long long latency_monitor_threshold;$/;"	m	struct:redisServer
latitude	deps/geohash-int/geohash.h	/^    GeoHashRange latitude;$/;"	m	struct:__anon145
latitude	src/geo.h	/^    double latitude;$/;"	m	struct:geoPoint
lauxlib_c	deps/lua/src/lauxlib.c	20;"	d	file:
lauxlib_h	deps/lua/src/lauxlib.h	9;"	d
layout	deps/pmdk/src/libpmemobj/lane.h	/^	struct lane_layout *layout; \/* pointer to persistent layout *\/$/;"	m	struct:lane	typeref:struct:lane::lane_layout
layout	deps/pmdk/src/libpmemobj/obj.h	/^	char layout[PMEMOBJ_MAX_LAYOUT];$/;"	m	struct:pmemobjpool
layout	deps/pmdk/src/libpmemobj/palloc.h	/^	struct heap_layout *layout;$/;"	m	struct:palloc_heap	typeref:struct:palloc_heap::heap_layout
layout	deps/pmdk/src/libpmempool/pool.h	/^			char layout[PMEMOBJ_MAX_LAYOUT];$/;"	m	struct:pool_params::__anon90::__anon92
layout	deps/pmdk/src/test/obj_layout/obj_layout.c	/^POBJ_LAYOUT_BEGIN(layout);$/;"	v
layout	deps/pmdk/src/test/obj_layout/obj_layout.c	/^POBJ_LAYOUT_END(layout);$/;"	v
layout	deps/pmdk/src/tools/pmempool/common.h	/^			char layout[PMEMOBJ_MAX_LAYOUT];$/;"	m	struct:pmem_pool_params::__anon104::__anon106
layout	deps/pmdk/src/tools/pmempool/create.c	/^	char *layout;$/;"	m	struct:pmempool_create	file:
layout_write_mutex	deps/pmdk/src/libpmemblk/btt.c	/^	os_mutex_t layout_write_mutex;$/;"	m	struct:btt	file:
lba	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint32_t lba;		\/* last pre-map LBA using this entry *\/$/;"	m	struct:btt_flog
lba_to_arena_lba	deps/pmdk/src/libpmemblk/btt.c	/^lba_to_arena_lba(struct btt *bttp, uint64_t lba,$/;"	f	file:
lbaselib_c	deps/lua/src/lbaselib.c	14;"	d	file:
lbasize	deps/pmdk/src/libpmemblk/btt.c	/^	uint32_t lbasize;		\/* external LBA size *\/$/;"	m	struct:btt	file:
lcode_c	deps/lua/src/lcode.c	10;"	d	file:
lcode_h	deps/lua/src/lcode.h	8;"	d
lconfig_h	deps/lua/src/luaconf.h	9;"	d
ld_preload	deps/pmdk/src/test/unittest/basetest.py	/^    ld_preload = ''$/;"	v	class:BaseTest
ldb	src/scripting.c	/^} ldb;$/;"	v	typeref:struct:ldbState
ldbAddBreakpoint	src/scripting.c	/^int ldbAddBreakpoint(int line) {$/;"	f
ldbBreak	src/scripting.c	/^void ldbBreak(sds *argv, int argc) {$/;"	f
ldbCatStackValue	src/scripting.c	/^sds ldbCatStackValue(sds s, lua_State *lua, int idx) {$/;"	f
ldbCatStackValueRec	src/scripting.c	/^sds ldbCatStackValueRec(sds s, lua_State *lua, int idx, int level) {$/;"	f
ldbDelBreakpoint	src/scripting.c	/^int ldbDelBreakpoint(int line) {$/;"	f
ldbDisable	src/scripting.c	/^void ldbDisable(client *c) {$/;"	f
ldbEnable	src/scripting.c	/^void ldbEnable(client *c) {$/;"	f
ldbEndSession	src/scripting.c	/^void ldbEndSession(client *c) {$/;"	f
ldbEval	src/scripting.c	/^void ldbEval(lua_State *lua, sds *argv, int argc) {$/;"	f
ldbFlushLog	src/scripting.c	/^void ldbFlushLog(list *log) {$/;"	f
ldbGetSourceLine	src/scripting.c	/^char *ldbGetSourceLine(int line) {$/;"	f
ldbInit	src/scripting.c	/^void ldbInit(void) {$/;"	f
ldbIsBreakpoint	src/scripting.c	/^int ldbIsBreakpoint(int line) {$/;"	f
ldbKillForkedSessions	src/scripting.c	/^void ldbKillForkedSessions(void) {$/;"	f
ldbList	src/scripting.c	/^void ldbList(int around, int context) {$/;"	f
ldbLog	src/scripting.c	/^void ldbLog(sds entry) {$/;"	f
ldbLogRedisReply	src/scripting.c	/^void ldbLogRedisReply(char *reply) {$/;"	f
ldbLogSourceLine	src/scripting.c	/^void ldbLogSourceLine(int lnum) {$/;"	f
ldbLogStackValue	src/scripting.c	/^void ldbLogStackValue(lua_State *lua, char *prefix) {$/;"	f
ldbLogWithMaxLen	src/scripting.c	/^void ldbLogWithMaxLen(sds entry) {$/;"	f
ldbMaxlen	src/scripting.c	/^void ldbMaxlen(sds *argv, int argc) {$/;"	f
ldbPendingChildren	src/scripting.c	/^int ldbPendingChildren(void) {$/;"	f
ldbPrint	src/scripting.c	/^void ldbPrint(lua_State *lua, char *varname) {$/;"	f
ldbPrintAll	src/scripting.c	/^void ldbPrintAll(lua_State *lua) {$/;"	f
ldbRedis	src/scripting.c	/^void ldbRedis(lua_State *lua, sds *argv, int argc) {$/;"	f
ldbRedisProtocolToHuman	src/scripting.c	/^char *ldbRedisProtocolToHuman(sds *o, char *reply) {$/;"	f
ldbRedisProtocolToHuman_Bulk	src/scripting.c	/^char *ldbRedisProtocolToHuman_Bulk(sds *o, char *reply) {$/;"	f
ldbRedisProtocolToHuman_Int	src/scripting.c	/^char *ldbRedisProtocolToHuman_Int(sds *o, char *reply) {$/;"	f
ldbRedisProtocolToHuman_MultiBulk	src/scripting.c	/^char *ldbRedisProtocolToHuman_MultiBulk(sds *o, char *reply) {$/;"	f
ldbRedisProtocolToHuman_Status	src/scripting.c	/^char *ldbRedisProtocolToHuman_Status(sds *o, char *reply) {$/;"	f
ldbRemoveChild	src/scripting.c	/^int ldbRemoveChild(pid_t pid) {$/;"	f
ldbRepl	src/scripting.c	/^int ldbRepl(lua_State *lua) {$/;"	f
ldbReplParseCommand	src/scripting.c	/^sds *ldbReplParseCommand(int *argcp) {$/;"	f
ldbSendLogs	src/scripting.c	/^void ldbSendLogs(void) {$/;"	f
ldbStartSession	src/scripting.c	/^int ldbStartSession(client *c) {$/;"	f
ldbState	src/scripting.c	/^struct ldbState {$/;"	s	file:
ldbTrace	src/scripting.c	/^void ldbTrace(lua_State *lua) {$/;"	f
ldblib_c	deps/lua/src/ldblib.c	12;"	d	file:
ldebug_c	deps/lua/src/ldebug.c	13;"	d	file:
ldebug_h	deps/lua/src/ldebug.h	8;"	d
ldo_c	deps/lua/src/ldo.c	12;"	d	file:
ldo_h	deps/lua/src/ldo.h	8;"	d
ldump_c	deps/lua/src/ldump.c	9;"	d	file:
le16toh	deps/pmdk/src/windows/include/endian.h	49;"	d
le32toh	deps/pmdk/src/windows/include/endian.h	50;"	d
le64toh	deps/pmdk/src/windows/include/endian.h	51;"	d
le_event	deps/lua/doc/manual.html	/^     function le_event (op1, op2)$/;"	f
leader	src/sentinel.c	/^    char *leader;       \/* If this is a master instance, this is the runid of$/;"	m	struct:sentinelRedisInstance	file:
leaderVotesDictType	src/sentinel.c	/^dictType leaderVotesDictType = {$/;"	v
leader_epoch	src/sentinel.c	/^    uint64_t leader_epoch; \/* Epoch of the 'leader' field. *\/$/;"	m	struct:sentinelRedisInstance	file:
leaf_matches	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^leaf_matches(struct search_ctx *ctx, art_leaf *n,$/;"	f	file:
leak_ngctx	deps/jemalloc/src/prof.c	/^	size_t	leak_ngctx;$/;"	m	struct:prof_gctx_merge_iter_arg_s	file:
leaveblock	deps/lua/src/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:
leavelevel	deps/lua/src/lparser.c	282;"	d	file:
left	deps/lua/src/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon36	file:
left	deps/lua/src/lua_cmsgpack.c	/^    size_t left;$/;"	m	struct:mp_cur	file:
left	deps/pmdk/src/test/unittest/ut.c	/^	struct fd_lut *left;$/;"	m	struct:fd_lut	typeref:struct:fd_lut::fd_lut	file:
len	deps/hiredis/hiredis.h	/^    int len; \/* Length of string *\/$/;"	m	struct:redisReply
len	deps/hiredis/hiredis.h	/^    size_t len; \/* Buffer length *\/$/;"	m	struct:redisReader
len	deps/hiredis/sds.h	/^    uint16_t len; \/* used *\/$/;"	m	struct:sdshdr16
len	deps/hiredis/sds.h	/^    uint32_t len; \/* used *\/$/;"	m	struct:sdshdr32
len	deps/hiredis/sds.h	/^    uint64_t len; \/* used *\/$/;"	m	struct:sdshdr64
len	deps/hiredis/sds.h	/^    uint8_t len; \/* used *\/$/;"	m	struct:sdshdr8
len	deps/jemalloc/include/jemalloc/internal/prof.h	/^	unsigned	len;$/;"	m	struct:prof_bt_s
len	deps/linenoise/linenoise.c	/^    int len;$/;"	m	struct:abuf	file:
len	deps/linenoise/linenoise.c	/^    size_t len;         \/* Current edited line length. *\/$/;"	m	struct:linenoiseState	file:
len	deps/linenoise/linenoise.h	/^  size_t len;$/;"	m	struct:linenoiseCompletions
len	deps/lua/src/lobject.h	/^    size_t len;$/;"	m	struct:TString::__anon24
len	deps/lua/src/lobject.h	/^    size_t len;$/;"	m	struct:Udata::__anon25
len	deps/lua/src/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon38	file:
len	deps/lua/src/lua_cmsgpack.c	/^    size_t len, free;$/;"	m	struct:mp_buf	file:
len	deps/pmdk/src/examples/libpmemlog/logfile/logentry.h	/^	size_t len;		\/* length of the rest of the log entry *\/$/;"	m	struct:logentry
len	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	size_t len;$/;"	m	struct:_var_string
len	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	size_t len;$/;"	m	struct:_var_string
len	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^	size_t len; \/* actual length of the message (while parsing) *\/$/;"	m	struct:client_data	file:
len	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^	uint64_t len;$/;"	m	struct:map_value	file:
len	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint64_t len;	\/* length of symbolic link *\/$/;"	m	struct:objfs_symlink	file:
len	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	size_t len; \/* length of the data buffer *\/$/;"	m	struct:entry	file:
len	deps/pmdk/src/examples/libpmemobj/string_store/layout.h	/^	size_t len;$/;"	m	struct:my_root
len	deps/pmdk/src/test/obj_reorder_basic/obj_reorder_basic.c	/^	size_t len;$/;"	m	struct:my_root	file:
len	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^	uint64_t len;$/;"	m	struct:btt_context	file:
len	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	size_t len;$/;"	m	struct:checksum_args	file:
len	deps/pmdk/src/tools/daxio/daxio.c	/^	size_t len;	\/* total length of I\/O *\/$/;"	m	struct:daxio_context	file:
len	src/adlist.h	/^    unsigned long len;$/;"	m	struct:list
len	src/quicklist.h	/^    unsigned int len;           \/* number of quicklistNodes *\/$/;"	m	struct:quicklist
len	src/sds.h	/^    uint16_t len; \/* used *\/$/;"	m	struct:sdshdr16
len	src/sds.h	/^    uint32_t len; \/* used *\/$/;"	m	struct:sdshdr32
len	src/sds.h	/^    uint64_t len; \/* used *\/$/;"	m	struct:sdshdr64
len	src/sds.h	/^    uint8_t len; \/* used *\/$/;"	m	struct:sdshdr8
len	src/ziplist.c	/^    unsigned int lensize, len;$/;"	m	struct:zlentry	file:
len_event	deps/lua/doc/manual.html	/^     function len_event (op)$/;"	f
length	deps/lua/src/strbuf.h	/^    int length;$/;"	m	struct:__anon29
length	deps/pmdk/src/common/extent.h	/^	uint64_t length;$/;"	m	struct:extent
length	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint16_t length;$/;"	m	struct:platform_capabilities
length	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint32_t length;$/;"	m	struct:nfit_header
length	deps/pmdk/src/common/os_badblock.h	/^	unsigned length;$/;"	m	struct:bad_block
length	deps/pmdk/src/include/libpmem2.h	/^	size_t length;$/;"	m	struct:pmem2_badblock
length	deps/pmdk/src/libpmem2/config.h	/^	size_t length; \/* length of the mapping *\/$/;"	m	struct:pmem2_config
length	deps/pmdk/src/libpmem2/map.h	/^	size_t length; \/* effective length of the mapping *\/$/;"	m	struct:pmem2_map
length	src/intset.h	/^    uint32_t length;$/;"	m	struct:intset
length	src/server.h	/^    unsigned long length;$/;"	m	struct:zskiplist
length	src/sparkline.h	/^    int length;$/;"	m	struct:sequence
lensize	src/ziplist.c	/^    unsigned int lensize, len;$/;"	m	struct:zlentry	file:
lessequal	deps/lua/src/lvm.c	/^static int lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f	file:
level	deps/lua/src/lstrlib.c	/^  int level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:
level	deps/pmdk/src/common/fs.h	/^	long level;$/;"	m	struct:fs_entry
level	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	int level;$/;"	m	struct:state	file:
level	src/server.h	/^    int level;$/;"	m	struct:zskiplist
level	src/server.h	/^    } level[];$/;"	m	struct:zskiplistNode	typeref:struct:zskiplistNode::zskiplistLevel
levels	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^	bitmap_level_t levels[BITMAP_MAX_LEVELS+1];$/;"	m	struct:bitmap_info_s
levels	deps/jemalloc/include/jemalloc/internal/rtree.h	/^	rtree_level_t		levels[RTREE_HEIGHT_MAX];$/;"	m	struct:rtree_s
lfunc_c	deps/lua/src/lfunc.c	10;"	d	file:
lfunc_h	deps/lua/src/lfunc.h	8;"	d
lg	deps/jemalloc/include/jemalloc/internal/size_classes.sh	/^lg() {$/;"	f
lg_curbuckets	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	unsigned	lg_curbuckets;$/;"	m	struct:ckh_s
lg_dirty_mult	deps/jemalloc/include/jemalloc/internal/arena.h	/^	ssize_t			lg_dirty_mult;$/;"	m	struct:arena_s
lg_dirty_mult	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	ssize_t			lg_dirty_mult;$/;"	m	struct:ctl_arena_stats_s
lg_dirty_mult_default	deps/jemalloc/src/arena.c	/^static ssize_t	lg_dirty_mult_default;$/;"	v	file:
lg_fill_div	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	unsigned	lg_fill_div;	\/* Fill (ncached_max >> lg_fill_div). *\/$/;"	m	struct:tcache_bin_s
lg_floor	deps/jemalloc/include/jemalloc/internal/private_namespace.h	320;"	d
lg_floor	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	320;"	d
lg_floor	deps/jemalloc/include/jemalloc/internal/util.h	/^lg_floor(size_t x)$/;"	f
lg_maxobjs	deps/jemalloc/include/jemalloc/internal/quarantine.h	/^	size_t			lg_maxobjs;$/;"	m	struct:quarantine_s
lg_minbuckets	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	unsigned	lg_minbuckets;$/;"	m	struct:ckh_s
lg_prof_sample	deps/jemalloc/include/jemalloc/internal/private_namespace.h	321;"	d
lg_prof_sample	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	321;"	d
lg_prof_sample	deps/jemalloc/src/prof.c	/^size_t		lg_prof_sample;$/;"	v
lgc_c	deps/lua/src/lgc.c	9;"	d	file:
lgc_h	deps/lua/src/lgc.h	8;"	d
lhead	deps/pmdk/src/test/obj_debug/obj_debug.c	/^	POBJ_LIST_HEAD(listhead, struct tobj) lhead, lhead2;$/;"	m	struct:root	file:
lhead2	deps/pmdk/src/test/obj_debug/obj_debug.c	/^	POBJ_LIST_HEAD(listhead, struct tobj) lhead, lhead2;$/;"	m	struct:root	file:
li	src/server.h	/^    listTypeIterator *li;$/;"	m	struct:__anon162
lib	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	char *lib;$/;"	m	struct:obj_tx_args	file:
lib_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	int lib_mode;       \/* type of operation used in initialization *\/$/;"	m	struct:obj_tx_bench	file:
lib_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^enum lib_mode {$/;"	g	file:
lib_op	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	int lib_op;	 \/* type of main operation *\/$/;"	m	struct:obj_tx_bench	file:
lib_op_free	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	int lib_op_free;    \/* type of main operation *\/$/;"	m	struct:obj_tx_bench	file:
libc_memcpy	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^libc_memcpy(void *dest, void *source, size_t len)$/;"	f	file:
libc_memcpy_persist	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^libc_memcpy_persist(void *dest, void *source, size_t len)$/;"	f	file:
libc_memset	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^libc_memset(void *dest, int c, size_t len)$/;"	f	file:
libc_memset_msync	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^libc_memset_msync(void *dest, int c, size_t len)$/;"	f	file:
libc_memset_persist	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^libc_memset_persist(void *dest, int c, size_t len)$/;"	f	file:
libpmem2_fini	deps/pmdk/src/libpmem2/libpmem2.c	/^libpmem2_fini(void)$/;"	f
libpmem2_init	deps/pmdk/src/libpmem2/libpmem2.c	/^libpmem2_init(void)$/;"	f
libpmem2_install_triggers_overrides	deps/pmdk/utils/build-dpkg.sh	/^function libpmem2_install_triggers_overrides() {$/;"	f
libpmem_fini	deps/pmdk/src/libpmem/libpmem.c	/^libpmem_fini(void)$/;"	f
libpmem_init	deps/pmdk/src/libpmem/libpmem.c	/^libpmem_init(void)$/;"	f
libpmem_memcpy_nodrain	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^libpmem_memcpy_nodrain(void *dest, void *source, size_t len)$/;"	f	file:
libpmem_memcpy_persist	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^libpmem_memcpy_persist(void *dest, void *source, size_t len)$/;"	f	file:
libpmem_memset_nodrain	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^libpmem_memset_nodrain(void *dest, int c, size_t len)$/;"	f	file:
libpmem_memset_persist	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^libpmem_memset_persist(void *dest, int c, size_t len)$/;"	f	file:
libpmemblk_fini	deps/pmdk/src/libpmemblk/libpmemblk.c	/^libpmemblk_fini(void)$/;"	f
libpmemblk_init	deps/pmdk/src/libpmemblk/libpmemblk.c	/^libpmemblk_init(void)$/;"	f
libpmemlog_fini	deps/pmdk/src/libpmemlog/libpmemlog.c	/^libpmemlog_fini(void)$/;"	f
libpmemlog_init	deps/pmdk/src/libpmemlog/libpmemlog.c	/^libpmemlog_init(void)$/;"	f
libpmemobj_fini	deps/pmdk/src/libpmemobj/libpmemobj.c	/^libpmemobj_fini(void)$/;"	f
libpmemobj_init	deps/pmdk/src/libpmemobj/libpmemobj.c	/^libpmemobj_init(void)$/;"	f
libpmempool_feature_disable	deps/pmdk/src/test/libpmempool_feature/common.sh	/^function libpmempool_feature_disable() {$/;"	f
libpmempool_feature_enable	deps/pmdk/src/test/libpmempool_feature/common.sh	/^function libpmempool_feature_enable() {$/;"	f
libpmempool_feature_query	deps/pmdk/src/test/libpmempool_feature/common.sh	/^function libpmempool_feature_query() {$/;"	f
libpmempool_feature_query_abnormal	deps/pmdk/src/test/libpmempool_feature/common.sh	/^function libpmempool_feature_query_abnormal() {$/;"	f
libpmempool_fini	deps/pmdk/src/libpmempool/libpmempool.c	/^libpmempool_fini(void)$/;"	f
libpmempool_init	deps/pmdk/src/libpmempool/libpmempool.c	/^libpmempool_init(void)$/;"	f
librpmem_fini	deps/pmdk/src/librpmem/librpmem.c	/^librpmem_fini(void)$/;"	f
librpmem_init	deps/pmdk/src/librpmem/librpmem.c	/^librpmem_init(void)$/;"	f
libsize	deps/lua/src/lauxlib.c	/^static int libsize (const luaL_Reg *l) {$/;"	f	file:
likely	deps/jemalloc/include/jemalloc/internal/util.h	69;"	d
likely	deps/jemalloc/include/jemalloc/internal/util.h	72;"	d
likely	deps/pmdk/src/common/util.h	465;"	d
likely	deps/pmdk/src/common/util.h	468;"	d
likely	src/quicklist.c	85;"	d	file:
likely	src/quicklist.c	88;"	d	file:
lindexCommand	src/t_list.c	/^void lindexCommand(client *c) {$/;"	f
line	deps/pmdk/utils/cstyle	/^line: while (<$filehandle>) {$/;"	l
linear_alloc	deps/pmdk/src/test/obj_list/obj_list_mocks.c	/^linear_alloc(uint64_t *cur_offset, size_t size)$/;"	f	file:
linedefined	deps/lua/src/lobject.h	/^  int linedefined;$/;"	m	struct:Proto
linedefined	deps/lua/src/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lineinfo	deps/lua/src/lobject.h	/^  int *lineinfo;  \/* map from opcodes to source lines *\/$/;"	m	struct:Proto
linenoise	deps/linenoise/linenoise.c	/^char *linenoise(const char *prompt) {$/;"	f
linenoiseAddCompletion	deps/linenoise/linenoise.c	/^void linenoiseAddCompletion(linenoiseCompletions *lc, const char *str) {$/;"	f
linenoiseAtExit	deps/linenoise/linenoise.c	/^static void linenoiseAtExit(void) {$/;"	f	file:
linenoiseBeep	deps/linenoise/linenoise.c	/^static void linenoiseBeep(void) {$/;"	f	file:
linenoiseClearScreen	deps/linenoise/linenoise.c	/^void linenoiseClearScreen(void) {$/;"	f
linenoiseCompletionCallback	deps/linenoise/linenoise.h	/^typedef void(linenoiseCompletionCallback)(const char *, linenoiseCompletions *);$/;"	t
linenoiseCompletions	deps/linenoise/linenoise.h	/^typedef struct linenoiseCompletions {$/;"	s
linenoiseCompletions	deps/linenoise/linenoise.h	/^} linenoiseCompletions;$/;"	t	typeref:struct:linenoiseCompletions
linenoiseEdit	deps/linenoise/linenoise.c	/^static int linenoiseEdit(int stdin_fd, int stdout_fd, char *buf, size_t buflen, const char *prompt)$/;"	f	file:
linenoiseEditBackspace	deps/linenoise/linenoise.c	/^void linenoiseEditBackspace(struct linenoiseState *l) {$/;"	f
linenoiseEditDelete	deps/linenoise/linenoise.c	/^void linenoiseEditDelete(struct linenoiseState *l) {$/;"	f
linenoiseEditDeletePrevWord	deps/linenoise/linenoise.c	/^void linenoiseEditDeletePrevWord(struct linenoiseState *l) {$/;"	f
linenoiseEditHistoryNext	deps/linenoise/linenoise.c	/^void linenoiseEditHistoryNext(struct linenoiseState *l, int dir) {$/;"	f
linenoiseEditInsert	deps/linenoise/linenoise.c	/^int linenoiseEditInsert(struct linenoiseState *l, char c) {$/;"	f
linenoiseEditMoveEnd	deps/linenoise/linenoise.c	/^void linenoiseEditMoveEnd(struct linenoiseState *l) {$/;"	f
linenoiseEditMoveHome	deps/linenoise/linenoise.c	/^void linenoiseEditMoveHome(struct linenoiseState *l) {$/;"	f
linenoiseEditMoveLeft	deps/linenoise/linenoise.c	/^void linenoiseEditMoveLeft(struct linenoiseState *l) {$/;"	f
linenoiseEditMoveRight	deps/linenoise/linenoise.c	/^void linenoiseEditMoveRight(struct linenoiseState *l) {$/;"	f
linenoiseFree	deps/linenoise/linenoise.c	/^void linenoiseFree(void *ptr) {$/;"	f
linenoiseFreeHintsCallback	deps/linenoise/linenoise.h	/^typedef void(linenoiseFreeHintsCallback)(void *);$/;"	t
linenoiseHintsCallback	deps/linenoise/linenoise.h	/^typedef char*(linenoiseHintsCallback)(const char *, int *color, int *bold);$/;"	t
linenoiseHistoryAdd	deps/linenoise/linenoise.c	/^int linenoiseHistoryAdd(const char *line) {$/;"	f
linenoiseHistoryLoad	deps/linenoise/linenoise.c	/^int linenoiseHistoryLoad(const char *filename) {$/;"	f
linenoiseHistorySave	deps/linenoise/linenoise.c	/^int linenoiseHistorySave(const char *filename) {$/;"	f
linenoiseHistorySetMaxLen	deps/linenoise/linenoise.c	/^int linenoiseHistorySetMaxLen(int len) {$/;"	f
linenoiseNoTTY	deps/linenoise/linenoise.c	/^static char *linenoiseNoTTY(void) {$/;"	f	file:
linenoisePrintKeyCodes	deps/linenoise/linenoise.c	/^void linenoisePrintKeyCodes(void) {$/;"	f
linenoiseRaw	deps/linenoise/linenoise.c	/^static int linenoiseRaw(char *buf, size_t buflen, const char *prompt) {$/;"	f	file:
linenoiseSetCompletionCallback	deps/linenoise/linenoise.c	/^void linenoiseSetCompletionCallback(linenoiseCompletionCallback *fn) {$/;"	f
linenoiseSetFreeHintsCallback	deps/linenoise/linenoise.c	/^void linenoiseSetFreeHintsCallback(linenoiseFreeHintsCallback *fn) {$/;"	f
linenoiseSetHintsCallback	deps/linenoise/linenoise.c	/^void linenoiseSetHintsCallback(linenoiseHintsCallback *fn) {$/;"	f
linenoiseSetMultiLine	deps/linenoise/linenoise.c	/^void linenoiseSetMultiLine(int ml) {$/;"	f
linenoiseState	deps/linenoise/linenoise.c	/^struct linenoiseState {$/;"	s	file:
linenumber	deps/lua/src/llex.h	/^  int linenumber;  \/* input line counter *\/$/;"	m	struct:LexState
lines	src/scripting.c	/^    int lines;  \/* Number of lines in 'src'. *\/$/;"	m	struct:ldbState	file:
linit_c	deps/lua/src/linit.c	8;"	d	file:
link	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	ql_elm(tcache_t) link;		\/* Used for aggregating stats. *\/$/;"	m	struct:tcache_s
link	deps/jemalloc/include/jemalloc/internal/tsd.h	/^	ql_elm(tsd_init_block_t)	link;$/;"	m	struct:tsd_init_block_s
link	deps/jemalloc/include/jemalloc/internal/witness.h	/^	ql_elm(witness_t)	link;$/;"	m	struct:witness_s
link	src/cluster.h	/^    clusterLink *link;          \/* TCP\/IP link with this node *\/$/;"	m	struct:clusterNode
link	src/sentinel.c	/^    instanceLink *link; \/* Link to the instance, may be shared for Sentinels. *\/$/;"	m	struct:sentinelRedisInstance	file:
link_whole_archive	deps/jemalloc/Makefile	/^link_whole_archive := 0$/;"	m
linsertCommand	src/t_list.c	/^void linsertCommand(client *c) {$/;"	f
linuxMemoryWarnings	src/server.c	/^void linuxMemoryWarnings(void) {$/;"	f
linuxOvercommitMemoryValue	src/server.c	/^int linuxOvercommitMemoryValue(void) {$/;"	f
linux_exclude	deps/pmdk/src/test/unittest/utils.py	/^def linux_exclude(tc):$/;"	f
linux_only	deps/pmdk/src/test/unittest/utils.py	/^def linux_only(tc):$/;"	f
liolib_c	deps/lua/src/liolib.c	13;"	d	file:
list	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	POBJ_LIST_ENTRY(struct entry) list;$/;"	m	struct:entry	file:
list	deps/pmdk/src/examples/libpmemobj/linkedlist/fifo.c	/^POBJ_LAYOUT_BEGIN(list);$/;"	v
list	deps/pmdk/src/examples/libpmemobj/linkedlist/fifo.c	/^POBJ_LAYOUT_END(list);$/;"	v
list	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^struct list {$/;"	s	file:
list	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^POBJ_LAYOUT_BEGIN(list);$/;"	v
list	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^POBJ_LAYOUT_END(list);$/;"	v
list	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^	POBJ_LIST_HEAD(head, struct node) list;$/;"	m	struct:root	file:
list	deps/pmdk/src/test/obj_list/obj_list.h	/^struct list {$/;"	s
list	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^struct list {$/;"	s	file:
list	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^} list[] = {$/;"	v	typeref:struct:test_list	file:
list	src/adlist.h	/^typedef struct list {$/;"	s
list	src/adlist.h	/^} list;$/;"	t	typeref:struct:list
listAddNodeHead	src/adlist.c	/^list *listAddNodeHead(list *list, void *value)$/;"	f
listAddNodeTail	src/adlist.c	/^list *listAddNodeTail(list *list, void *value)$/;"	f
listCreate	src/adlist.c	/^list *listCreate(void)$/;"	f
listDelNode	src/adlist.c	/^void listDelNode(list *list, listNode *node)$/;"	f
listDup	src/adlist.c	/^list *listDup(list *orig)$/;"	f
listFirst	src/adlist.h	58;"	d
listGetDupMethod	src/adlist.h	68;"	d
listGetFree	src/adlist.h	69;"	d
listGetIterator	src/adlist.c	/^listIter *listGetIterator(list *list, int direction)$/;"	f
listGetMatchMethod	src/adlist.h	70;"	d
listIndex	src/adlist.c	/^listNode *listIndex(list *list, long index) {$/;"	f
listInsertNode	src/adlist.c	/^list *listInsertNode(list *list, listNode *old_node, void *value, int after) {$/;"	f
listIter	src/adlist.h	/^typedef struct listIter {$/;"	s
listIter	src/adlist.h	/^} listIter;$/;"	t	typeref:struct:listIter
listLast	src/adlist.h	59;"	d
listLength	src/adlist.h	57;"	d
listMatchObjects	src/networking.c	/^int listMatchObjects(void *a, void *b) {$/;"	f
listMatchPubsubPattern	src/pubsub.c	/^int listMatchPubsubPattern(void *a, void *b) {$/;"	f
listNext	src/adlist.c	/^listNode *listNext(listIter *iter)$/;"	f
listNextNode	src/adlist.h	61;"	d
listNode	src/adlist.h	/^typedef struct listNode {$/;"	s
listNode	src/adlist.h	/^} listNode;$/;"	t	typeref:struct:listNode
listNodeValue	src/adlist.h	62;"	d
listPopSaver	src/t_list.c	/^void *listPopSaver(unsigned char *data, unsigned int sz) {$/;"	f
listPrevNode	src/adlist.h	60;"	d
listRelease	src/adlist.c	/^void listRelease(list *list)$/;"	f
listReleaseIterator	src/adlist.c	/^void listReleaseIterator(listIter *iter) {$/;"	f
listRewind	src/adlist.c	/^void listRewind(list *list, listIter *li) {$/;"	f
listRewindTail	src/adlist.c	/^void listRewindTail(list *list, listIter *li) {$/;"	f
listRotate	src/adlist.c	/^void listRotate(list *list) {$/;"	f
listSearchKey	src/adlist.c	/^listNode *listSearchKey(list *list, void *key)$/;"	f
listSetDupMethod	src/adlist.h	64;"	d
listSetFreeMethod	src/adlist.h	65;"	d
listSetMatchMethod	src/adlist.h	66;"	d
listTypeConvert	src/t_list.c	/^void listTypeConvert(robj *subject, int enc) {$/;"	f
listTypeDelete	src/t_list.c	/^void listTypeDelete(listTypeIterator *iter, listTypeEntry *entry) {$/;"	f
listTypeEntry	src/server.h	/^} listTypeEntry;$/;"	t	typeref:struct:__anon162
listTypeEqual	src/t_list.c	/^int listTypeEqual(listTypeEntry *entry, robj *o) {$/;"	f
listTypeGet	src/t_list.c	/^robj *listTypeGet(listTypeEntry *entry) {$/;"	f
listTypeInitIterator	src/t_list.c	/^listTypeIterator *listTypeInitIterator(robj *subject, long index,$/;"	f
listTypeInsert	src/t_list.c	/^void listTypeInsert(listTypeEntry *entry, robj *value, int where) {$/;"	f
listTypeIterator	src/server.h	/^} listTypeIterator;$/;"	t	typeref:struct:__anon161
listTypeLength	src/t_list.c	/^unsigned long listTypeLength(robj *subject) {$/;"	f
listTypeNext	src/t_list.c	/^int listTypeNext(listTypeIterator *li, listTypeEntry *entry) {$/;"	f
listTypePop	src/t_list.c	/^robj *listTypePop(robj *subject, int where) {$/;"	f
listTypePush	src/t_list.c	/^void listTypePush(robj *subject, robj *value, int where) {$/;"	f
listTypeReleaseIterator	src/t_list.c	/^void listTypeReleaseIterator(listTypeIterator *li) {$/;"	f
list_alloc	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^list_alloc(void)$/;"	f	file:
list_args_common	deps/pmdk/src/libpmemobj/list.c	/^struct list_args_common {$/;"	s	file:
list_args_insert	deps/pmdk/src/libpmemobj/list.c	/^struct list_args_insert {$/;"	s	file:
list_args_reinsert	deps/pmdk/src/libpmemobj/list.c	/^struct list_args_reinsert {$/;"	s	file:
list_args_remove	deps/pmdk/src/libpmemobj/list.c	/^struct list_args_remove {$/;"	s	file:
list_big	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^	POBJ_LIST_HEAD(head_big, struct node_big) list_big;$/;"	m	struct:root	file:
list_compress_depth	src/server.h	/^    int list_compress_depth;$/;"	m	struct:redisServer
list_constr_args	deps/pmdk/src/examples/libpmemobj/lists.c	/^struct list_constr_args {$/;"	s	file:
list_element_constr	deps/pmdk/src/examples/libpmemobj/lists.c	/^list_element_constr(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
list_entry	deps/pmdk/src/libpmemobj/list.h	/^struct list_entry {$/;"	s
list_fill_entry_persist	deps/pmdk/src/libpmemobj/list.c	/^list_fill_entry_persist(PMEMobjpool *pop, struct list_entry *entry_ptr,$/;"	f	file:
list_fill_entry_redo_log	deps/pmdk/src/libpmemobj/list.c	/^list_fill_entry_redo_log(PMEMobjpool *pop,$/;"	f	file:
list_flog_inval	deps/pmdk/src/libpmempool/check_util.h	/^	struct list *list_flog_inval;$/;"	m	struct:__anon87	typeref:struct:__anon87::list
list_free	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^list_free(struct list *list)$/;"	f	file:
list_get_dest	deps/pmdk/src/libpmemobj/list.c	/^list_get_dest(PMEMobjpool *pop, struct list_head *head, PMEMoid dest,$/;"	f	file:
list_head	deps/pmdk/src/libpmemobj/list.h	/^struct list_head {$/;"	s
list_head_t	deps/jemalloc/test/unit/ql.c	/^typedef ql_head(list_t) list_head_t;$/;"	t	file:
list_insert	deps/pmdk/src/examples/libpmemobj/lists.c	/^list_insert(PMEMobjpool *pop, struct listbase *base,$/;"	f	file:
list_insert	deps/pmdk/src/libpmemobj/list.c	/^list_insert(PMEMobjpool *pop,$/;"	f
list_insert_after	deps/pmdk/src/libpmemobj/list.c	/^list_insert_after(PMEMobjpool *pop,$/;"	f	file:
list_insert_before	deps/pmdk/src/libpmemobj/list.c	/^list_insert_before(PMEMobjpool *pop,$/;"	f	file:
list_insert_consistent	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	/^list_insert_consistent(struct list_root *root, node_id node, int value)$/;"	f	file:
list_insert_inconsistent	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	/^list_insert_inconsistent(struct list_root *root, node_id node, int value)$/;"	f	file:
list_insert_new	deps/pmdk/src/libpmemobj/list.c	/^list_insert_new(PMEMobjpool *pop,$/;"	f	file:
list_insert_new_user	deps/pmdk/src/libpmemobj/list.c	/^list_insert_new_user(PMEMobjpool *pop,$/;"	f
list_insert_user	deps/pmdk/src/libpmemobj/list.c	/^list_insert_user(PMEMobjpool *pop,$/;"	f	file:
list_inval	deps/pmdk/src/libpmempool/check_util.h	/^	struct list *list_inval;$/;"	m	struct:__anon87	typeref:struct:__anon87::list
list_item	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^struct list_item {$/;"	s	file:
list_len	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	unsigned list_len; \/* initial list length *\/$/;"	m	struct:obj_list_args	file:
list_max_ziplist_size	src/server.h	/^    int list_max_ziplist_size;$/;"	m	struct:redisServer
list_move	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	struct obj_worker *list_move;$/;"	m	struct:obj_worker	typeref:struct:obj_worker::obj_worker	file:
list_move	deps/pmdk/src/libpmemobj/list.c	/^list_move(PMEMobjpool *pop,$/;"	f
list_mutexes_lock	deps/pmdk/src/libpmemobj/list.c	/^list_mutexes_lock(PMEMobjpool *pop,$/;"	f	file:
list_mutexes_unlock	deps/pmdk/src/libpmemobj/list.c	/^list_mutexes_unlock(PMEMobjpool *pop,$/;"	f	file:
list_node	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	/^struct list_node {$/;"	s	file:
list_pages	deps/pmdk/utils/get_aliases.sh	/^function list_pages {$/;"	f
list_pair	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^struct list_pair {$/;"	s	file:
list_pop	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^list_pop(struct list *list, uint32_t *valp)$/;"	f	file:
list_print	deps/pmdk/src/examples/libpmemobj/lists.c	/^list_print(PMEMobjpool *pop, struct listbase *base, enum list_type type)$/;"	f	file:
list_print	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	/^list_print(struct list_root *list)$/;"	f	file:
list_push	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^list_push(struct list *list, uint32_t val)$/;"	f	file:
list_remove	deps/pmdk/src/libpmemobj/list.c	/^list_remove(PMEMobjpool *pop,$/;"	f
list_remove_free	deps/pmdk/src/libpmemobj/list.c	/^list_remove_free(PMEMobjpool *pop, size_t pe_offset,$/;"	f	file:
list_remove_free_user	deps/pmdk/src/libpmemobj/list.c	/^list_remove_free_user(PMEMobjpool *pop, size_t pe_offset,$/;"	f
list_remove_single	deps/pmdk/src/libpmemobj/list.c	/^list_remove_single(PMEMobjpool *pop,$/;"	f	file:
list_root	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	/^struct list_root {$/;"	s	file:
list_s	deps/jemalloc/test/unit/ql.c	/^struct list_s {$/;"	s	file:
list_set_oid_redo_log	deps/pmdk/src/libpmemobj/list.c	/^list_set_oid_redo_log(PMEMobjpool *pop,$/;"	f	file:
list_t	deps/jemalloc/test/unit/ql.c	/^typedef struct list_s list_t;$/;"	t	typeref:struct:list_s	file:
list_type	deps/pmdk/src/examples/libpmemobj/lists.c	/^enum list_type {$/;"	g	file:
list_unmap	deps/pmdk/src/libpmempool/check_util.h	/^	struct list *list_unmap;$/;"	m	struct:__anon87	typeref:struct:__anon87::list
list_update_head	deps/pmdk/src/libpmemobj/list.c	/^list_update_head(PMEMobjpool *pop,$/;"	f	file:
listbase	deps/pmdk/src/examples/libpmemobj/lists.c	/^struct listbase {$/;"	s	file:
listenToPort	src/server.c	/^int listenToPort(int port, int *fds, int *count) {$/;"	f
listfield	deps/lua/src/lparser.c	/^static void listfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
listing	deps/lua/src/luac.c	/^static int listing=0;			\/* list bytecodes? *\/$/;"	v	file:
lists	deps/pmdk/src/examples/libpmemobj/lists.c	/^	struct listbase lists[MAX_LISTS];$/;"	m	struct:my_root	typeref:struct:my_root::listbase	file:
liveclients	src/redis-benchmark.c	/^    int liveclients;$/;"	m	struct:config	file:
ll2string	src/util.c	/^int ll2string(char* dst, size_t dstlen, long long svalue) {$/;"	f
ll_funcs	deps/lua/src/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_load	deps/lua/src/loadlib.c	/^static void *ll_load (lua_State *L, const char *path) {$/;"	f	file:
ll_loadfunc	deps/lua/src/loadlib.c	/^static int ll_loadfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:
ll_loadlib	deps/lua/src/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:
ll_module	deps/lua/src/loadlib.c	/^static int ll_module (lua_State *L) {$/;"	f	file:
ll_register	deps/lua/src/loadlib.c	/^static void **ll_register (lua_State *L, const char *path) {$/;"	f	file:
ll_require	deps/lua/src/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:
ll_seeall	deps/lua/src/loadlib.c	/^static int ll_seeall (lua_State *L) {$/;"	f	file:
ll_sym	deps/lua/src/loadlib.c	/^static lua_CFunction ll_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:
ll_unloadlib	deps/lua/src/loadlib.c	/^static void ll_unloadlib (void *lib) {$/;"	f	file:
llenCommand	src/t_list.c	/^void llenCommand(client *c) {$/;"	f
llex	deps/lua/src/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
llex_c	deps/lua/src/llex.c	12;"	d	file:
llex_h	deps/lua/src/llex.h	8;"	d
llimits_h	deps/lua/src/llimits.h	8;"	d
lmathlib_c	deps/lua/src/lmathlib.c	11;"	d	file:
lmem_c	deps/lua/src/lmem.c	10;"	d	file:
lmem_h	deps/lua/src/lmem.h	8;"	d
lmemfind	deps/lua/src/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:
lmod	deps/lua/src/lobject.h	355;"	d
ln_gamma	deps/jemalloc/test/include/test/math.h	/^ln_gamma(double x)$/;"	f
ln_gamma_misc_expected	deps/jemalloc/test/unit/math.c	/^static const double ln_gamma_misc_expected[] = {$/;"	v	file:
lndebug	deps/linenoise/linenoise.c	195;"	d	file:
load	deps/pmdk/src/libpmemobj/critnib.c	/^load(void *src, void *dst)$/;"	f	file:
loadAppendOnlyFile	src/aof.c	/^int loadAppendOnlyFile(char *filename) {$/;"	f
loadDataFromDisk	src/server.c	/^void loadDataFromDisk(void) {$/;"	f
loadServerConfig	src/config.c	/^void loadServerConfig(char *filename, char *options) {$/;"	f
loadServerConfigFromString	src/config.c	/^void loadServerConfigFromString(char *config) {$/;"	f
load_aux	deps/lua/src/lbaselib.c	/^static int load_aux (lua_State *L, int status) {$/;"	f	file:
load_cluster_info_from_node	src/redis-trib.rb	/^    def load_cluster_info_from_node(nodeaddr)$/;"	f	class:RedisTrib.alloc_slots
load_default_global_test_configuration	deps/pmdk/src/test/RUNTESTS	/^load_default_global_test_configuration() {$/;"	f
load_info	src/redis-trib.rb	/^    def load_info(o={})$/;"	f	class:ClusterNode
loader_C	deps/lua/src/loadlib.c	/^static int loader_C (lua_State *L) {$/;"	f	file:
loader_Croot	deps/lua/src/loadlib.c	/^static int loader_Croot (lua_State *L) {$/;"	f	file:
loader_Lua	deps/lua/src/loadlib.c	/^static int loader_Lua (lua_State *L) {$/;"	f	file:
loader_preload	deps/lua/src/loadlib.c	/^static int loader_preload (lua_State *L) {$/;"	f	file:
loaderror	deps/lua/src/loadlib.c	/^static void loaderror (lua_State *L, const char *filename) {$/;"	f	file:
loaders	deps/lua/src/loadlib.c	/^static const lua_CFunction loaders[] =$/;"	v	file:
loading	src/server.h	/^    int loading;                \/* We are loading data from disk if true *\/$/;"	m	struct:redisServer
loadingProgress	src/rdb.c	/^void loadingProgress(off_t pos) {$/;"	f
loading_loaded_bytes	src/server.h	/^    off_t loading_loaded_bytes;$/;"	m	struct:redisServer
loading_process_events_interval_bytes	src/server.h	/^    off_t loading_process_events_interval_bytes;$/;"	m	struct:redisServer
loading_start_time	src/server.h	/^    time_t loading_start_time;$/;"	m	struct:redisServer
loading_total_bytes	src/server.h	/^    off_t loading_total_bytes;$/;"	m	struct:redisServer
loadingerr	src/server.h	/^    *outofrangeerr, *noscripterr, *loadingerr, *slowscripterr, *bgsaveerr,$/;"	m	struct:sharedObjectsStruct
loadlib_c	deps/lua/src/loadlib.c	16;"	d	file:
loadline	deps/lua/src/lua.c	/^static int loadline (lua_State *L) {$/;"	f	file:
lobject_c	deps/lua/src/lobject.c	13;"	d	file:
lobject_h	deps/lua/src/lobject.h	9;"	d
local a 	deps/lua/test/factorial.lua	/^      local a = function (f) return f(f) end$/;"	f
local f	deps/lua/test/env.lua	/^local f=function (t,i) return os.getenv(i) end$/;"	f
local f	deps/lua/test/readonly.lua	/^local f=function (t,i) error("cannot redefine global variable `"..i.."'",2) end$/;"	f
local log	deps/lua/test/trace-globals.lua	/^ local log=function (name,old,new)$/;"	f
local set	deps/lua/test/trace-globals.lua	/^ local set=function (t,name,value)$/;"	f
local tostring	deps/lua/test/trace-globals.lua	/^ local tostring=function(a)$/;"	f
locale_decimal_point	deps/lua/src/fpconv.c	/^static char locale_decimal_point = '.';$/;"	v	file:
localfunc	deps/lua/src/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:
localstat	deps/lua/src/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:
location	deps/pmdk/src/libpmempool/check_util.h	/^} location;$/;"	t	typeref:struct:__anon87
location_release	deps/pmdk/src/libpmempool/check_backup.c	/^location_release(location *loc)$/;"	f	file:
location_release	deps/pmdk/src/libpmempool/check_btt_info.c	/^location_release(location *loc)$/;"	f	file:
lock	deps/jemalloc/include/jemalloc/internal/arena.h	/^	malloc_mutex_t		lock;$/;"	m	struct:arena_bin_s
lock	deps/jemalloc/include/jemalloc/internal/arena.h	/^	malloc_mutex_t		lock;$/;"	m	struct:arena_s
lock	deps/jemalloc/include/jemalloc/internal/mutex.h	/^	SRWLOCK         	lock;$/;"	m	struct:malloc_mutex_s
lock	deps/jemalloc/include/jemalloc/internal/prof.h	/^	malloc_mutex_t		*lock;$/;"	m	struct:prof_gctx_s
lock	deps/jemalloc/include/jemalloc/internal/prof.h	/^	malloc_mutex_t		*lock;$/;"	m	struct:prof_tdata_s
lock	deps/jemalloc/include/jemalloc/internal/tsd.h	/^	malloc_mutex_t			lock;$/;"	m	struct:tsd_init_head_s
lock	deps/jemalloc/test/include/test/mtx.h	/^	CRITICAL_SECTION	lock;$/;"	m	struct:__anon19
lock	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	os_mutex_t lock;$/;"	m	struct:benchmark_worker
lock	deps/pmdk/src/benchmarks/map_bench.cpp	/^	os_mutex_t lock;$/;"	m	struct:map_bench	file:
lock	deps/pmdk/src/common/os_thread_windows.c	/^	CRITICAL_SECTION lock;$/;"	m	struct:__anon79	file:
lock	deps/pmdk/src/common/os_thread_windows.c	/^	SRWLOCK lock;$/;"	m	struct:__anon80	file:
lock	deps/pmdk/src/libpmemobj/bucket.h	/^	os_mutex_t lock;$/;"	m	struct:bucket
lock	deps/pmdk/src/libpmemobj/heap.c	/^	os_mutex_t lock;$/;"	m	struct:arenas	file:
lock	deps/pmdk/src/libpmemobj/list.h	/^	PMEMmutex lock;$/;"	m	struct:list_head
lock	deps/pmdk/src/libpmemobj/obj.h	/^		os_mutex_t lock;$/;"	m	struct:pmemobjpool::__anon117
lock	deps/pmdk/src/libpmemobj/palloc.c	/^	os_mutex_t *lock;$/;"	m	struct:pobj_action_internal	file:
lock	deps/pmdk/src/libpmemobj/recycler.c	/^	os_mutex_t lock;$/;"	m	struct:recycler	file:
lock	deps/pmdk/src/libpmemobj/tx.c	/^	} lock;$/;"	m	struct:tx_lock_data	typeref:union:tx_lock_data::__anon132	file:
lock	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^	os_spinlock_t lock;$/;"	m	struct:rpmem_fip_lane
lock	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	PMEMmutex lock;$/;"	m	struct:dummy_root	file:
lock	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^static os_mutex_t lock;$/;"	v	file:
lock	deps/pmdk/src/test/obj_locks/obj_locks.c	/^	TOID(struct locks) lock;$/;"	m	struct:thread_args	file:
lock	deps/pmdk/src/test/obj_oid_thread/obj_oid_thread.c	/^static os_mutex_t lock;$/;"	v	file:
lock	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^	os_mutex_t lock;$/;"	m	struct:action	file:
lock	deps/pmdk/src/test/obj_recovery/obj_recovery.c	/^	PMEMmutex lock;$/;"	m	struct:root	file:
lock	deps/pmdk/src/test/obj_tx_locks_abort/obj_tx_locks_abort.c	/^	PMEMmutex lock;$/;"	m	struct:obj	file:
lock	deps/pmdk/src/test/obj_tx_locks_abort/obj_tx_locks_abort.c	/^	PMEMmutex lock;$/;"	m	struct:root_obj	file:
lock	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^	os_mutex_t lock;$/;"	m	struct:rpmemd_db	file:
lock1	deps/pmdk/src/test/obj_direct/obj_direct.c	/^static os_mutex_t lock1;$/;"	v	file:
lock2	deps/pmdk/src/test/obj_direct/obj_direct.c	/^static os_mutex_t lock2;$/;"	v	file:
lock_devdax	deps/pmdk/src/test/unittest/unittest.sh	/^lock_devdax() {$/;"	f
lock_fun_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^typedef int (*lock_fun_wrapper)(PMEMobjpool *pop, void *lock);$/;"	t	file:
lock_mode	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	char *lock_mode;	      \/* "1by1" or "all-lock" *\/$/;"	m	struct:prog_args	file:
lock_mode	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	enum operation_mode lock_mode; \/* lock usage mode *\/$/;"	m	struct:mutex_bench	typeref:enum:mutex_bench::operation_mode	file:
lock_t	deps/pmdk/src/benchmarks/obj_locks.cpp	/^} lock_t;$/;"	t	typeref:union:lock_union	file:
lock_type	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	char *lock_type;	      \/* "mutex", "rwlock" or "ram-mutex" *\/$/;"	m	struct:prog_args	file:
lock_type	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	enum benchmark_mode lock_type; \/* lock type *\/$/;"	m	struct:mutex_bench	typeref:enum:mutex_bench::benchmark_mode	file:
lock_type	deps/pmdk/src/libpmemobj/tx.c	/^	enum pobj_tx_param lock_type;$/;"	m	struct:tx_lock_data	typeref:enum:tx_lock_data::pobj_tx_param	file:
lock_union	deps/pmdk/src/benchmarks/obj_locks.cpp	/^typedef union lock_union {$/;"	u	file:
locks	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	TOID(lock_t) locks; \/* an array of locks *\/$/;"	m	struct:my_root	file:
locks	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	lock_t *locks;		       \/* pointer to the array of locks *\/$/;"	m	struct:mutex_bench	file:
locks	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^	PMEMmutex locks[MAX_THREADS];	\/* thread synchronization locks *\/$/;"	m	struct:base	file:
locks	deps/pmdk/src/libpmemblk/blk.h	/^	os_mutex_t *locks;	\/* one per lane *\/$/;"	m	struct:pmemblk
locks	deps/pmdk/src/test/obj_locks/obj_locks.c	/^struct locks {$/;"	s	file:
locks_clo	deps/pmdk/src/benchmarks/obj_locks.cpp	/^static struct benchmark_clo locks_clo[7];$/;"	v	typeref:struct:benchmark_clo	file:
locks_exit	deps/pmdk/src/benchmarks/obj_locks.cpp	/^locks_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
locks_info	deps/pmdk/src/benchmarks/obj_locks.cpp	/^static struct benchmark_info locks_info;$/;"	v	typeref:struct:benchmark_info	file:
locks_init	deps/pmdk/src/benchmarks/obj_locks.cpp	/^locks_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
locks_op	deps/pmdk/src/benchmarks/obj_locks.cpp	/^locks_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
locvars	deps/lua/src/lobject.h	/^  struct LocVar *locvars;  \/* information about local variables *\/$/;"	m	struct:Proto	typeref:struct:Proto::LocVar
log	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^struct log {$/;"	s	file:
log	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^struct log {$/;"	s	file:
log	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^struct log {$/;"	s	file:
log	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^	TOID(struct log) log;$/;"	m	struct:base	file:
log	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^struct log {$/;"	s	file:
log	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	59;"	d	file:
log	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	67;"	d	file:
log	deps/pmdk/src/libpmempool/pool.h	/^		struct pmemlog log;$/;"	m	union:pool_data::__anon93	typeref:struct:pool_data::__anon93::pmemlog
log	deps/pmdk/src/tools/pmempool/info.h	/^	} log;$/;"	m	struct:pmempool_info_args	typeref:struct:pmempool_info_args::__anon107
logCurrentClient	src/debug.c	/^void logCurrentClient(void) {$/;"	f
logRegisters	src/debug.c	/^void logRegisters(ucontext_t *uc) {$/;"	f
logStackContent	src/debug.c	/^void logStackContent(void **sp) {$/;"	f
logStackTrace	src/debug.c	/^void logStackTrace(ucontext_t *uc) {$/;"	f
log_append	deps/pmdk/src/benchmarks/log.cpp	/^log_append(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
log_append_info	deps/pmdk/src/benchmarks/log.cpp	/^static struct benchmark_info log_append_info;$/;"	v	typeref:struct:benchmark_info	file:
log_appendv	deps/pmdk/src/benchmarks/log.cpp	/^log_appendv(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
log_bench	deps/pmdk/src/benchmarks/log.cpp	/^struct log_bench {$/;"	s	file:
log_clo	deps/pmdk/src/benchmarks/log.cpp	/^static struct benchmark_clo log_clo[6];$/;"	v	typeref:struct:benchmark_clo	file:
log_cnt	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^static uint64_t log_cnt;$/;"	v	file:
log_constructor	deps/pmdk/src/benchmarks/log.cpp	/^log_constructor(void)$/;"	f
log_convert2h	deps/pmdk/src/libpmemlog/log.h	/^log_convert2h(struct pmemlog *plp)$/;"	f
log_convert2le	deps/pmdk/src/libpmemlog/log.h	/^log_convert2le(struct pmemlog *plp)$/;"	f
log_crashes	tests/instances.tcl	/^proc log_crashes {} {$/;"	p
log_ctl_init_and_load	deps/pmdk/src/libpmemlog/libpmemlog.c	/^log_ctl_init_and_load(PMEMlogpool *plp)$/;"	f	file:
log_descr_check	deps/pmdk/src/libpmemlog/log.c	/^log_descr_check(PMEMlogpool *plp, size_t poolsize)$/;"	f	file:
log_descr_create	deps/pmdk/src/libpmemlog/log.c	/^log_descr_create(PMEMlogpool *plp, size_t poolsize)$/;"	f	file:
log_err	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^log_err(const char *file, int lineno, const char *fmt, ...)$/;"	f	file:
log_exit	deps/pmdk/src/benchmarks/log.cpp	/^log_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
log_fh	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^static FILE *log_fh;$/;"	v	file:
log_fh	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^static FILE *log_fh;$/;"	v	file:
log_file	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	/^	char *log_file;$/;"	m	struct:rpmemd_config
log_file_matches	tests/integration/replication.tcl	/^proc log_file_matches {log pattern} {$/;"	p
log_format_feat_default	deps/pmdk/src/libpmemlog/log.h	/^static const features_t log_format_feat_default = LOG_FORMAT_FEAT_DEFAULT;$/;"	v
log_free	deps/pmdk/src/test/set_funcs/set_funcs.c	/^log_free(void *ptr)$/;"	f	file:
log_free_worker	deps/pmdk/src/benchmarks/log.cpp	/^log_free_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
log_hdr	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^struct log_hdr {$/;"	s	file:
log_hdr	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^struct log_hdr {$/;"	s	file:
log_hdr	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^struct log_hdr {$/;"	s	file:
log_hdr_check	deps/pmdk/src/libpmempool/check_log.c	/^log_hdr_check(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
log_hdr_fix	deps/pmdk/src/libpmempool/check_log.c	/^log_hdr_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question, void *ctx)$/;"	f	file:
log_init	deps/pmdk/src/benchmarks/log.cpp	/^log_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
log_init_worker	deps/pmdk/src/benchmarks/log.cpp	/^log_init_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
log_level	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	/^	enum rpmemd_log_level log_level;$/;"	m	struct:rpmemd_config	typeref:enum:rpmemd_config::rpmemd_log_level
log_levels	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^log_levels = ["debug", "info", "warning", "error", "critical"]$/;"	v
log_malloc	deps/pmdk/src/test/set_funcs/set_funcs.c	/^log_malloc(size_t size)$/;"	f	file:
log_open_common	deps/pmdk/src/libpmemlog/log.c	/^log_open_common(const char *path, unsigned flags)$/;"	f	file:
log_persist	deps/pmdk/src/libpmemlog/log.c	/^log_persist(PMEMlogpool *plp, uint64_t new_write_offset)$/;"	f	file:
log_pool_desc_size	deps/pmdk/src/test/unittest/unittest.sh	/^function log_pool_desc_size() {$/;"	f
log_process_data	deps/pmdk/src/benchmarks/log.cpp	/^log_process_data(const void *buf, size_t len, void *arg)$/;"	f	file:
log_read	deps/pmdk/src/libpmempool/check_log.c	/^log_read(PMEMpoolcheck *ppc)$/;"	f	file:
log_read_info	deps/pmdk/src/benchmarks/log.cpp	/^static struct benchmark_info log_read_info;$/;"	v	typeref:struct:benchmark_info	file:
log_read_op	deps/pmdk/src/benchmarks/log.cpp	/^log_read_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
log_realloc	deps/pmdk/src/test/set_funcs/set_funcs.c	/^log_realloc(void *ptr, size_t size)$/;"	f	file:
log_run	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^log_run(const char *pid_file, char *cmd, char *argv[])$/;"	f	file:
log_runtime_init	deps/pmdk/src/libpmemlog/log.c	/^log_runtime_init(PMEMlogpool *plp, int rdonly)$/;"	f	file:
log_stages	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^log_stages(PMEMobjpool *pop, enum pobj_tx_stage stage, void *arg)$/;"	f	file:
log_strdup	deps/pmdk/src/test/set_funcs/set_funcs.c	/^log_strdup(const char *s)$/;"	f	file:
log_type	deps/pmdk/src/libpmemobj/memops.h	/^enum log_type {$/;"	g
log_worker_info	deps/pmdk/src/benchmarks/log.cpp	/^struct log_worker_info {$/;"	s	file:
log_write	deps/pmdk/src/libpmempool/check_write.c	/^log_write(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
logentry	deps/pmdk/src/examples/libpmemlog/logfile/logentry.h	/^struct logentry {$/;"	s
logfile	src/server.h	/^    char *logfile;                  \/* Path of log file *\/$/;"	m	struct:redisServer
loglevel_enum	src/config.c	/^configEnum loglevel_enum[] = {$/;"	v
logs	src/scripting.c	/^    list *logs; \/* List of messages to send to the client. *\/$/;"	m	struct:ldbState	file:
longLatFromMember	src/geo.c	/^int longLatFromMember(robj *zobj, robj *member, double *xy) {$/;"	f
long_options	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/test/getopt/getopt.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/tools/daxio/daxio.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/tools/pmempool/check.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/tools/pmempool/create.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/tools/pmempool/dump.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/tools/pmempool/feature.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/tools/pmempool/info.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/tools/pmempool/pmempool.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/tools/pmempool/rm.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/tools/pmempool/synchronize.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
long_options	deps/pmdk/src/tools/pmempool/transform.c	/^static const struct option long_options[] = {$/;"	v	typeref:struct:option	file:
longitude	deps/geohash-int/geohash.h	/^    GeoHashRange longitude;$/;"	m	struct:__anon145
longitude	src/geo.h	/^    double longitude;$/;"	m	struct:geoPoint
longval	src/quicklist.h	/^    long long longval;$/;"	m	struct:quicklistEntry
lookahead	deps/lua/src/llex.h	/^  Token lookahead;  \/* look ahead token *\/$/;"	m	struct:LexState
lookup	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	int(*lookup)(PMEMobjpool *pop, TOID(struct map) map,$/;"	m	struct:map_ops
lookupCommand	src/server.c	/^struct redisCommand *lookupCommand(sds name) {$/;"	f
lookupCommandByCString	src/server.c	/^struct redisCommand *lookupCommandByCString(char *s) {$/;"	f
lookupCommandOrOriginal	src/server.c	/^struct redisCommand *lookupCommandOrOriginal(sds name) {$/;"	f
lookupKey	src/db.c	/^robj *lookupKey(redisDb *db, robj *key, int flags) {$/;"	f
lookupKeyByPattern	src/sort.c	/^robj *lookupKeyByPattern(redisDb *db, robj *pattern, robj *subst) {$/;"	f
lookupKeyRead	src/db.c	/^robj *lookupKeyRead(redisDb *db, robj *key) {$/;"	f
lookupKeyReadOrReply	src/db.c	/^robj *lookupKeyReadOrReply(client *c, robj *key, robj *reply) {$/;"	f
lookupKeyReadWithFlags	src/db.c	/^robj *lookupKeyReadWithFlags(redisDb *db, robj *key, int flags) {$/;"	f
lookupKeyWrite	src/db.c	/^robj *lookupKeyWrite(redisDb *db, robj *key) {$/;"	f
lookupKeyWriteOrReply	src/db.c	/^robj *lookupKeyWriteOrReply(client *c, robj *key, robj *reply) {$/;"	f
lookupStringForBitCommand	src/bitops.c	/^robj *lookupStringForBitCommand(client *c, size_t maxbit) {$/;"	f
loop	deps/hiredis/adapters/ae.h	/^    aeEventLoop *loop;$/;"	m	struct:redisAeEvents
loop	deps/hiredis/adapters/libev.h	/^    struct ev_loop *loop;$/;"	m	struct:redisLibevEvents	typeref:struct:redisLibevEvents::ev_loop
loop	deps/hiredis/examples/example-ae.c	/^static aeEventLoop *loop;$/;"	v	file:
loop	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^static uv_loop_t *loop;$/;"	v	file:
loop	src/redis-benchmark.c	/^    int loop;$/;"	m	struct:config	file:
loop	src/sentinel.c	/^    aeEventLoop *loop;$/;"	m	struct:redisAeEvents	file:
lopcodes_c	deps/lua/src/lopcodes.c	7;"	d	file:
lopcodes_h	deps/lua/src/lopcodes.h	8;"	d
loslib_c	deps/lua/src/loslib.c	14;"	d	file:
low_water	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	int		low_water;	\/* Min # cached since last GC. *\/$/;"	m	struct:tcache_bin_s
lpFileName	deps/pmdk/src/benchmarks/config_reader_win.cpp	/^	LPTSTR lpFileName;$/;"	m	struct:config_reader	file:
lparser_c	deps/lua/src/lparser.c	10;"	d	file:
lparser_h	deps/lua/src/lparser.h	8;"	d
lpool	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^static uint8_t lpool[POOL_SIZE];$/;"	v	file:
lpop	src/server.h	/^    *unsubscribebulk, *psubscribebulk, *punsubscribebulk, *del, *rpop, *lpop,$/;"	m	struct:sharedObjectsStruct
lpopCommand	src/server.h	/^    struct redisCommand *delCommand, *multiCommand, *lpushCommand, *lpopCommand,$/;"	m	struct:redisServer	typeref:struct:redisServer::
lpopCommand	src/t_list.c	/^void lpopCommand(client *c) {$/;"	f
lpush	src/server.h	/^    *lpush, *emptyscan, *minstring, *maxstring,$/;"	m	struct:sharedObjectsStruct
lpushCommand	src/server.h	/^    struct redisCommand *delCommand, *multiCommand, *lpushCommand, *lpopCommand,$/;"	m	struct:redisServer	typeref:struct:redisServer::
lpushCommand	src/t_list.c	/^void lpushCommand(client *c) {$/;"	f
lpushxCommand	src/t_list.c	/^void lpushxCommand(client *c) {$/;"	f
lrangeCommand	src/t_list.c	/^void lrangeCommand(client *c) {$/;"	f
lremCommand	src/t_list.c	/^void lremCommand(client *c) {$/;"	f
lru	src/server.h	/^    unsigned lru:LRU_BITS; \/* lru time (relative to server.lruclock) *\/$/;"	m	struct:redisObject
lru_test_mode	src/redis-cli.c	/^    int lru_test_mode;$/;"	m	struct:config	file:
lru_test_sample_size	src/redis-cli.c	/^    long long lru_test_sample_size;$/;"	m	struct:config	file:
lruclock	src/server.h	/^    unsigned lruclock:LRU_BITS; \/* Clock for LRU eviction *\/$/;"	m	struct:redisServer
ls	deps/lua/src/lparser.h	/^  struct LexState *ls;  \/* lexical state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::LexState
lsetCommand	src/t_list.c	/^void lsetCommand(client *c) {$/;"	f
lshift128	deps/jemalloc/test/src/SFMT.c	/^JEMALLOC_INLINE_C void lshift128(w128_t *out, w128_t const *in, int shift) {$/;"	f
lsizenode	deps/lua/src/lobject.h	/^  lu_byte lsizenode;  \/* log2 of size of `node' array *\/$/;"	m	struct:Table
lstate_c	deps/lua/src/lstate.c	10;"	d	file:
lstate_h	deps/lua/src/lstate.h	8;"	d
lstats	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	malloc_large_stats_t	*lstats;	\/* nlclasses elements. *\/$/;"	m	struct:ctl_arena_stats_s
lstats	deps/jemalloc/include/jemalloc/internal/stats.h	/^	malloc_large_stats_t	*lstats;$/;"	m	struct:arena_stats_s
lstop	deps/lua/src/lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	file:
lstring_c	deps/lua/src/lstring.c	10;"	d	file:
lstring_h	deps/lua/src/lstring.h	8;"	d
lstrlib_c	deps/lua/src/lstrlib.c	14;"	d	file:
lt_event	deps/lua/doc/manual.html	/^     function lt_event (op1, op2)$/;"	f
ltable_c	deps/lua/src/ltable.c	24;"	d	file:
ltable_h	deps/lua/src/ltable.h	8;"	d
ltablib_c	deps/lua/src/ltablib.c	10;"	d	file:
ltm_c	deps/lua/src/ltm.c	10;"	d	file:
ltm_h	deps/lua/src/ltm.h	8;"	d
ltrimCommand	src/t_list.c	/^void ltrimCommand(client *c) {$/;"	f
lu_byte	deps/lua/src/llimits.h	/^typedef unsigned char lu_byte;$/;"	t
lu_int32	deps/lua/src/llimits.h	/^typedef LUAI_UINT32 lu_int32;$/;"	t
lu_mem	deps/lua/src/llimits.h	/^typedef LUAI_UMEM lu_mem;$/;"	t
lua	src/server.h	/^    lua_State *lua; \/* The Lua interpreter. We use just one for all clients *\/$/;"	m	struct:redisServer
luaA_pushobject	deps/lua/src/lapi.c	/^void luaA_pushobject (lua_State *L, const TValue *o) {$/;"	f
luaB_assert	deps/lua/src/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:
luaB_auxwrap	deps/lua/src/lbaselib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_cocreate	deps/lua/src/lbaselib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_collectgarbage	deps/lua/src/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:
luaB_coresume	deps/lua/src/lbaselib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_corunning	deps/lua/src/lbaselib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:
luaB_costatus	deps/lua/src/lbaselib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:
luaB_cowrap	deps/lua/src/lbaselib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_dofile	deps/lua/src/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:
luaB_error	deps/lua/src/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:
luaB_gcinfo	deps/lua/src/lbaselib.c	/^static int luaB_gcinfo (lua_State *L) {$/;"	f	file:
luaB_getfenv	deps/lua/src/lbaselib.c	/^static int luaB_getfenv (lua_State *L) {$/;"	f	file:
luaB_getmetatable	deps/lua/src/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:
luaB_ipairs	deps/lua/src/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:
luaB_load	deps/lua/src/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:
luaB_loadfile	deps/lua/src/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:
luaB_loadstring	deps/lua/src/lbaselib.c	/^static int luaB_loadstring (lua_State *L) {$/;"	f	file:
luaB_newproxy	deps/lua/src/lbaselib.c	/^static int luaB_newproxy (lua_State *L) {$/;"	f	file:
luaB_next	deps/lua/src/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:
luaB_pairs	deps/lua/src/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:
luaB_pcall	deps/lua/src/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:
luaB_print	deps/lua/src/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:
luaB_rawequal	deps/lua/src/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:
luaB_rawget	deps/lua/src/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:
luaB_rawset	deps/lua/src/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:
luaB_select	deps/lua/src/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:
luaB_setfenv	deps/lua/src/lbaselib.c	/^static int luaB_setfenv (lua_State *L) {$/;"	f	file:
luaB_setmetatable	deps/lua/src/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:
luaB_tonumber	deps/lua/src/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:
luaB_tostring	deps/lua/src/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:
luaB_type	deps/lua/src/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:
luaB_unpack	deps/lua/src/lbaselib.c	/^static int luaB_unpack (lua_State *L) {$/;"	f	file:
luaB_xpcall	deps/lua/src/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:
luaB_yield	deps/lua/src/lbaselib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:
luaC_barrier	deps/lua/src/lgc.h	86;"	d
luaC_barrierback	deps/lua/src/lgc.c	/^void luaC_barrierback (lua_State *L, Table *t) {$/;"	f
luaC_barrierf	deps/lua/src/lgc.c	/^void luaC_barrierf (lua_State *L, GCObject *o, GCObject *v) {$/;"	f
luaC_barriert	deps/lua/src/lgc.h	89;"	d
luaC_callGCTM	deps/lua/src/lgc.c	/^void luaC_callGCTM (lua_State *L) {$/;"	f
luaC_checkGC	deps/lua/src/lgc.h	80;"	d
luaC_freeall	deps/lua/src/lgc.c	/^void luaC_freeall (lua_State *L) {$/;"	f
luaC_fullgc	deps/lua/src/lgc.c	/^void luaC_fullgc (lua_State *L) {$/;"	f
luaC_link	deps/lua/src/lgc.c	/^void luaC_link (lua_State *L, GCObject *o, lu_byte tt) {$/;"	f
luaC_linkupval	deps/lua/src/lgc.c	/^void luaC_linkupval (lua_State *L, UpVal *uv) {$/;"	f
luaC_objbarrier	deps/lua/src/lgc.h	92;"	d
luaC_objbarriert	deps/lua/src/lgc.h	96;"	d
luaC_separateudata	deps/lua/src/lgc.c	/^size_t luaC_separateudata (lua_State *L, int all) {$/;"	f
luaC_step	deps/lua/src/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f
luaC_white	deps/lua/src/lgc.h	77;"	d
luaCreateFunction	src/scripting.c	/^int luaCreateFunction(client *c, lua_State *lua, char *funcname, robj *body) {$/;"	f
luaD_call	deps/lua/src/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults) {$/;"	f
luaD_callhook	deps/lua/src/ldo.c	/^void luaD_callhook (lua_State *L, int event, int line) {$/;"	f
luaD_checkstack	deps/lua/src/ldo.h	16;"	d
luaD_growstack	deps/lua/src/ldo.c	/^void luaD_growstack (lua_State *L, int n) {$/;"	f
luaD_pcall	deps/lua/src/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f
luaD_poscall	deps/lua/src/ldo.c	/^int luaD_poscall (lua_State *L, StkId firstResult) {$/;"	f
luaD_precall	deps/lua/src/ldo.c	/^int luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f
luaD_protectedparser	deps/lua/src/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name) {$/;"	f
luaD_rawrunprotected	deps/lua/src/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f
luaD_reallocCI	deps/lua/src/ldo.c	/^void luaD_reallocCI (lua_State *L, int newsize) {$/;"	f
luaD_reallocstack	deps/lua/src/ldo.c	/^void luaD_reallocstack (lua_State *L, int newsize) {$/;"	f
luaD_seterrorobj	deps/lua/src/ldo.c	/^void luaD_seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f
luaD_throw	deps/lua/src/ldo.c	/^void luaD_throw (lua_State *L, int errcode) {$/;"	f
luaE_freethread	deps/lua/src/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f
luaE_newthread	deps/lua/src/lstate.c	/^lua_State *luaE_newthread (lua_State *L) {$/;"	f
luaF_close	deps/lua/src/lfunc.c	/^void luaF_close (lua_State *L, StkId level) {$/;"	f
luaF_findupval	deps/lua/src/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f
luaF_freeclosure	deps/lua/src/lfunc.c	/^void luaF_freeclosure (lua_State *L, Closure *c) {$/;"	f
luaF_freeproto	deps/lua/src/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f
luaF_freeupval	deps/lua/src/lfunc.c	/^void luaF_freeupval (lua_State *L, UpVal *uv) {$/;"	f
luaF_getlocalname	deps/lua/src/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f
luaF_newCclosure	deps/lua/src/lfunc.c	/^Closure *luaF_newCclosure (lua_State *L, int nelems, Table *e) {$/;"	f
luaF_newLclosure	deps/lua/src/lfunc.c	/^Closure *luaF_newLclosure (lua_State *L, int nelems, Table *e) {$/;"	f
luaF_newproto	deps/lua/src/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f
luaF_newupval	deps/lua/src/lfunc.c	/^UpVal *luaF_newupval (lua_State *L) {$/;"	f
luaG_aritherror	deps/lua/src/ldebug.c	/^void luaG_aritherror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_checkcode	deps/lua/src/ldebug.c	/^int luaG_checkcode (const Proto *pt) {$/;"	f
luaG_checkopenop	deps/lua/src/ldebug.c	/^int luaG_checkopenop (Instruction i) {$/;"	f
luaG_concaterror	deps/lua/src/ldebug.c	/^void luaG_concaterror (lua_State *L, StkId p1, StkId p2) {$/;"	f
luaG_errormsg	deps/lua/src/ldebug.c	/^void luaG_errormsg (lua_State *L) {$/;"	f
luaG_ordererror	deps/lua/src/ldebug.c	/^int luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_runerror	deps/lua/src/ldebug.c	/^void luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f
luaG_typeerror	deps/lua/src/ldebug.c	/^void luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f
luaH_free	deps/lua/src/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f
luaH_get	deps/lua/src/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f
luaH_getn	deps/lua/src/ltable.c	/^int luaH_getn (Table *t) {$/;"	f
luaH_getnum	deps/lua/src/ltable.c	/^const TValue *luaH_getnum (Table *t, int key) {$/;"	f
luaH_getstr	deps/lua/src/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f
luaH_isdummy	deps/lua/src/ltable.c	/^int luaH_isdummy (Node *n) { return n == dummynode; }$/;"	f
luaH_mainposition	deps/lua/src/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f
luaH_new	deps/lua/src/ltable.c	/^Table *luaH_new (lua_State *L, int narray, int nhash) {$/;"	f
luaH_next	deps/lua/src/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f
luaH_resizearray	deps/lua/src/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, int nasize) {$/;"	f
luaH_set	deps/lua/src/ltable.c	/^TValue *luaH_set (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_setnum	deps/lua/src/ltable.c	/^TValue *luaH_setnum (lua_State *L, Table *t, int key) {$/;"	f
luaH_setstr	deps/lua/src/ltable.c	/^TValue *luaH_setstr (lua_State *L, Table *t, TString *key) {$/;"	f
luaI_openlib	deps/lua/src/lauxlib.c	/^LUALIB_API void luaI_openlib (lua_State *L, const char *libname,$/;"	f
luaI_openlib	deps/lua/src/lauxlib.h	27;"	d
luaK_checkstack	deps/lua/src/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f
luaK_code	deps/lua/src/lcode.c	/^static int luaK_code (FuncState *fs, Instruction i, int line) {$/;"	f	file:
luaK_codeABC	deps/lua/src/lcode.c	/^int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {$/;"	f
luaK_codeABx	deps/lua/src/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f
luaK_codeAsBx	deps/lua/src/lcode.h	41;"	d
luaK_concat	deps/lua/src/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f
luaK_dischargevars	deps/lua/src/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2RK	deps/lua/src/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyreg	deps/lua/src/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2nextreg	deps/lua/src/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2val	deps/lua/src/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f
luaK_fixline	deps/lua/src/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f
luaK_getlabel	deps/lua/src/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f
luaK_goiffalse	deps/lua/src/lcode.c	/^static void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f	file:
luaK_goiftrue	deps/lua/src/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f
luaK_indexed	deps/lua/src/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f
luaK_infix	deps/lua/src/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f
luaK_jump	deps/lua/src/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f
luaK_nil	deps/lua/src/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f
luaK_numberK	deps/lua/src/lcode.c	/^int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f
luaK_patchlist	deps/lua/src/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f
luaK_patchtohere	deps/lua/src/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f
luaK_posfix	deps/lua/src/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr op, expdesc *e1, expdesc *e2) {$/;"	f
luaK_prefix	deps/lua/src/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e) {$/;"	f
luaK_reserveregs	deps/lua/src/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f
luaK_ret	deps/lua/src/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f
luaK_self	deps/lua/src/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f
luaK_setlist	deps/lua/src/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f
luaK_setmultret	deps/lua/src/lcode.h	43;"	d
luaK_setoneret	deps/lua/src/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f
luaK_setreturns	deps/lua/src/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f
luaK_storevar	deps/lua/src/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f
luaK_stringK	deps/lua/src/lcode.c	/^int luaK_stringK (FuncState *fs, TString *s) {$/;"	f
luaL_Buffer	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_Buffer"><code>luaL_Buffer<\/code><\/a><\/h3>$/;"	a
luaL_Buffer	deps/lua/src/lauxlib.h	/^typedef struct luaL_Buffer {$/;"	s
luaL_Buffer	deps/lua/src/lauxlib.h	/^} luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Reg	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_Reg"><code>luaL_Reg<\/code><\/a><\/h3>$/;"	a
luaL_Reg	deps/lua/src/lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	deps/lua/src/lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_addchar	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_addchar"><code>luaL_addchar<\/code><\/a><\/h3><p>$/;"	a
luaL_addchar	deps/lua/src/lauxlib.h	136;"	d
luaL_addlstring	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_addlstring"><code>luaL_addlstring<\/code><\/a><\/h3><p>$/;"	a
luaL_addlstring	deps/lua/src/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f
luaL_addsize	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_addsize"><code>luaL_addsize<\/code><\/a><\/h3><p>$/;"	a
luaL_addsize	deps/lua/src/lauxlib.h	143;"	d
luaL_addstring	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_addstring"><code>luaL_addstring<\/code><\/a><\/h3><p>$/;"	a
luaL_addstring	deps/lua/src/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f
luaL_addvalue	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_addvalue"><code>luaL_addvalue<\/code><\/a><\/h3><p>$/;"	a
luaL_addvalue	deps/lua/src/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f
luaL_argcheck	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_argcheck"><code>luaL_argcheck<\/code><\/a><\/h3><p>$/;"	a
luaL_argcheck	deps/lua/src/lauxlib.h	100;"	d
luaL_argerror	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_argerror"><code>luaL_argerror<\/code><\/a><\/h3><p>$/;"	a
luaL_argerror	deps/lua/src/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int narg, const char *extramsg) {$/;"	f
luaL_buffinit	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_buffinit"><code>luaL_buffinit<\/code><\/a><\/h3><p>$/;"	a
luaL_buffinit	deps/lua/src/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f
luaL_callmeta	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_callmeta"><code>luaL_callmeta<\/code><\/a><\/h3><p>$/;"	a
luaL_callmeta	deps/lua/src/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f
luaL_checkany	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkany"><code>luaL_checkany<\/code><\/a><\/h3><p>$/;"	a
luaL_checkany	deps/lua/src/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int narg) {$/;"	f
luaL_checkint	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkint"><code>luaL_checkint<\/code><\/a><\/h3><p>$/;"	a
luaL_checkint	deps/lua/src/lauxlib.h	104;"	d
luaL_checkinteger	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkinteger"><code>luaL_checkinteger<\/code><\/a><\/h3><p>$/;"	a
luaL_checkinteger	deps/lua/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int narg) {$/;"	f
luaL_checklong	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_checklong"><code>luaL_checklong<\/code><\/a><\/h3><p>$/;"	a
luaL_checklong	deps/lua/src/lauxlib.h	106;"	d
luaL_checklstring	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_checklstring"><code>luaL_checklstring<\/code><\/a><\/h3><p>$/;"	a
luaL_checklstring	deps/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {$/;"	f
luaL_checknumber	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_checknumber"><code>luaL_checknumber<\/code><\/a><\/h3><p>$/;"	a
luaL_checknumber	deps/lua/src/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int narg) {$/;"	f
luaL_checkoption	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkoption"><code>luaL_checkoption<\/code><\/a><\/h3><p>$/;"	a
luaL_checkoption	deps/lua/src/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int narg, const char *def,$/;"	f
luaL_checkstack	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkstack"><code>luaL_checkstack<\/code><\/a><\/h3><p>$/;"	a
luaL_checkstack	deps/lua/src/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *mes) {$/;"	f
luaL_checkstring	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkstring"><code>luaL_checkstring<\/code><\/a><\/h3><p>$/;"	a
luaL_checkstring	deps/lua/src/lauxlib.h	102;"	d
luaL_checktype	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_checktype"><code>luaL_checktype<\/code><\/a><\/h3><p>$/;"	a
luaL_checktype	deps/lua/src/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int narg, int t) {$/;"	f
luaL_checkudata	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkudata"><code>luaL_checkudata<\/code><\/a><\/h3><p>$/;"	a
luaL_checkudata	deps/lua/src/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_dofile	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_dofile"><code>luaL_dofile<\/code><\/a><\/h3><p>$/;"	a
luaL_dofile	deps/lua/src/lauxlib.h	111;"	d
luaL_dostring	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_dostring"><code>luaL_dostring<\/code><\/a><\/h3><p>$/;"	a
luaL_dostring	deps/lua/src/lauxlib.h	114;"	d
luaL_error	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_error"><code>luaL_error<\/code><\/a><\/h3><p>$/;"	a
luaL_error	deps/lua/src/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f
luaL_findtable	deps/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_findtable (lua_State *L, int idx,$/;"	f
luaL_getmetafield	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_getmetafield"><code>luaL_getmetafield<\/code><\/a><\/h3><p>$/;"	a
luaL_getmetafield	deps/lua/src/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f
luaL_getmetatable	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_getmetatable"><code>luaL_getmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_getmetatable	deps/lua/src/lauxlib.h	117;"	d
luaL_getn	deps/lua/src/lauxlib.c	/^LUALIB_API int luaL_getn (lua_State *L, int t) {$/;"	f
luaL_getn	deps/lua/src/lauxlib.h	22;"	d
luaL_gsub	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_gsub"><code>luaL_gsub<\/code><\/a><\/h3><p>$/;"	a
luaL_gsub	deps/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s, const char *p,$/;"	f
luaL_loadbuffer	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_loadbuffer"><code>luaL_loadbuffer<\/code><\/a><\/h3><p>$/;"	a
luaL_loadbuffer	deps/lua/src/lauxlib.c	/^LUALIB_API int luaL_loadbuffer (lua_State *L, const char *buff, size_t size,$/;"	f
luaL_loadfile	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_loadfile"><code>luaL_loadfile<\/code><\/a><\/h3><p>$/;"	a
luaL_loadfile	deps/lua/src/lauxlib.c	/^LUALIB_API int luaL_loadfile (lua_State *L, const char *filename) {$/;"	f
luaL_loadstring	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_loadstring"><code>luaL_loadstring<\/code><\/a><\/h3><p>$/;"	a
luaL_loadstring	deps/lua/src/lauxlib.c	/^LUALIB_API int (luaL_loadstring) (lua_State *L, const char *s) {$/;"	f
luaL_newmetatable	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_newmetatable"><code>luaL_newmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_newmetatable	deps/lua/src/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_newstate	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_newstate"><code>luaL_newstate<\/code><\/a><\/h3><p>$/;"	a
luaL_newstate	deps/lua/src/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f
luaL_openlibs	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_openlibs"><code>luaL_openlibs<\/code><\/a><\/h3><p>$/;"	a
luaL_openlibs	deps/lua/src/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f
luaL_opt	deps/lua/src/lauxlib.h	119;"	d
luaL_optint	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_optint"><code>luaL_optint<\/code><\/a><\/h3><p>$/;"	a
luaL_optint	deps/lua/src/lauxlib.h	105;"	d
luaL_optinteger	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_optinteger"><code>luaL_optinteger<\/code><\/a><\/h3><p>$/;"	a
luaL_optinteger	deps/lua/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int narg,$/;"	f
luaL_optlong	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_optlong"><code>luaL_optlong<\/code><\/a><\/h3><p>$/;"	a
luaL_optlong	deps/lua/src/lauxlib.h	107;"	d
luaL_optlstring	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_optlstring"><code>luaL_optlstring<\/code><\/a><\/h3><p>$/;"	a
luaL_optlstring	deps/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,$/;"	f
luaL_optnumber	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_optnumber"><code>luaL_optnumber<\/code><\/a><\/h3><p>$/;"	a
luaL_optnumber	deps/lua/src/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int narg, lua_Number def) {$/;"	f
luaL_optstring	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_optstring"><code>luaL_optstring<\/code><\/a><\/h3><p>$/;"	a
luaL_optstring	deps/lua/src/lauxlib.h	103;"	d
luaL_prepbuffer	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_prepbuffer"><code>luaL_prepbuffer<\/code><\/a><\/h3><p>$/;"	a
luaL_prepbuffer	deps/lua/src/lauxlib.c	/^LUALIB_API char *luaL_prepbuffer (luaL_Buffer *B) {$/;"	f
luaL_pushresult	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_pushresult"><code>luaL_pushresult<\/code><\/a><\/h3><p>$/;"	a
luaL_pushresult	deps/lua/src/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f
luaL_putchar	deps/lua/src/lauxlib.h	141;"	d
luaL_ref	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_ref"><code>luaL_ref<\/code><\/a><\/h3><p>$/;"	a
luaL_ref	deps/lua/src/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f
luaL_reg	deps/lua/src/lauxlib.h	170;"	d
luaL_register	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_register"><code>luaL_register<\/code><\/a><\/h3><p>$/;"	a
luaL_register	deps/lua/src/lauxlib.c	/^LUALIB_API void (luaL_register) (lua_State *L, const char *libname,$/;"	f
luaL_register	deps/lua/src/lua_struct.c	42;"	d	file:
luaL_setfuncs	deps/lua/src/lua_cjson.c	/^static void luaL_setfuncs (lua_State *l, const luaL_Reg *reg, int nup)$/;"	f	file:
luaL_setn	deps/lua/src/lauxlib.c	/^LUALIB_API void luaL_setn (lua_State *L, int t, int n) {$/;"	f
luaL_setn	deps/lua/src/lauxlib.h	23;"	d
luaL_typename	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_typename"><code>luaL_typename<\/code><\/a><\/h3><p>$/;"	a
luaL_typename	deps/lua/src/lauxlib.h	109;"	d
luaL_typerror	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_typerror"><code>luaL_typerror<\/code><\/a><\/h3><p>$/;"	a
luaL_typerror	deps/lua/src/lauxlib.c	/^LUALIB_API int luaL_typerror (lua_State *L, int narg, const char *tname) {$/;"	f
luaL_unref	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_unref"><code>luaL_unref<\/code><\/a><\/h3><p>$/;"	a
luaL_unref	deps/lua/src/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f
luaL_where	deps/lua/doc/manual.html	/^<hr><h3><a name="luaL_where"><code>luaL_where<\/code><\/a><\/h3><p>$/;"	a
luaL_where	deps/lua/src/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f
luaLdbLineHook	src/scripting.c	/^void luaLdbLineHook(lua_State *lua, lua_Debug *ar) {$/;"	f
luaLoadLib	src/scripting.c	/^void luaLoadLib(lua_State *lua, const char *libname, lua_CFunction luafunc) {$/;"	f
luaLoadLibraries	src/scripting.c	/^void luaLoadLibraries(lua_State *lua) {$/;"	f
luaLogCommand	src/scripting.c	/^int luaLogCommand(lua_State *lua) {$/;"	f
luaM_free	deps/lua/src/lmem.h	25;"	d
luaM_freearray	deps/lua/src/lmem.h	26;"	d
luaM_freemem	deps/lua/src/lmem.h	24;"	d
luaM_growaux_	deps/lua/src/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,$/;"	f
luaM_growvector	deps/lua/src/lmem.h	33;"	d
luaM_malloc	deps/lua/src/lmem.h	28;"	d
luaM_new	deps/lua/src/lmem.h	29;"	d
luaM_newvector	deps/lua/src/lmem.h	30;"	d
luaM_realloc_	deps/lua/src/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f
luaM_reallocv	deps/lua/src/lmem.h	19;"	d
luaM_reallocvector	deps/lua/src/lmem.h	37;"	d
luaM_toobig	deps/lua/src/lmem.c	/^void *luaM_toobig (lua_State *L) {$/;"	f
luaMaskCountHook	src/scripting.c	/^void luaMaskCountHook(lua_State *lua, lua_Debug *ar) {$/;"	f
luaO_chunkid	deps/lua/src/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t bufflen) {$/;"	f
luaO_fb2int	deps/lua/src/lobject.c	/^int luaO_fb2int (int x) {$/;"	f
luaO_int2fb	deps/lua/src/lobject.c	/^int luaO_int2fb (unsigned int x) {$/;"	f
luaO_log2	deps/lua/src/lobject.c	/^int luaO_log2 (unsigned int x) {$/;"	f
luaO_nilobject	deps/lua/src/lobject.h	363;"	d
luaO_nilobject_	deps/lua/src/lobject.c	/^const TValue luaO_nilobject_ = {{NULL}, LUA_TNIL};$/;"	v
luaO_nilobject_	deps/lua/src/lobject.h	/^LUAI_DATA const TValue luaO_nilobject_;$/;"	v
luaO_pushfstring	deps/lua/src/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
luaO_pushvfstring	deps/lua/src/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f
luaO_rawequalObj	deps/lua/src/lobject.c	/^int luaO_rawequalObj (const TValue *t1, const TValue *t2) {$/;"	f
luaO_str2d	deps/lua/src/lobject.c	/^int luaO_str2d (const char *s, lua_Number *result) {$/;"	f
luaP_opmodes	deps/lua/src/lopcodes.c	/^const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaP_opmodes	deps/lua/src/lopcodes.h	/^LUAI_DATA const lu_byte luaP_opmodes[NUM_OPCODES];$/;"	v
luaP_opnames	deps/lua/src/lopcodes.c	/^const char *const luaP_opnames[NUM_OPCODES+1] = {$/;"	v
luaP_opnames	deps/lua/src/lopcodes.h	/^LUAI_DATA const char *const luaP_opnames[NUM_OPCODES+1];  \/* opcode names *\/$/;"	v
luaPushError	src/scripting.c	/^void luaPushError(lua_State *lua, char *error) {$/;"	f
luaRaiseError	src/scripting.c	/^int luaRaiseError(lua_State *lua) {$/;"	f
luaRedisBreakpointCommand	src/scripting.c	/^int luaRedisBreakpointCommand(lua_State *lua) {$/;"	f
luaRedisCallCommand	src/scripting.c	/^int luaRedisCallCommand(lua_State *lua) {$/;"	f
luaRedisDebugCommand	src/scripting.c	/^int luaRedisDebugCommand(lua_State *lua) {$/;"	f
luaRedisErrorReplyCommand	src/scripting.c	/^int luaRedisErrorReplyCommand(lua_State *lua) {$/;"	f
luaRedisGenericCommand	src/scripting.c	/^int luaRedisGenericCommand(lua_State *lua, int raise_error) {$/;"	f
luaRedisPCallCommand	src/scripting.c	/^int luaRedisPCallCommand(lua_State *lua) {$/;"	f
luaRedisReplicateCommandsCommand	src/scripting.c	/^int luaRedisReplicateCommandsCommand(lua_State *lua) {$/;"	f
luaRedisReturnSingleFieldTable	src/scripting.c	/^int luaRedisReturnSingleFieldTable(lua_State *lua, char *field) {$/;"	f
luaRedisSetReplCommand	src/scripting.c	/^int luaRedisSetReplCommand(lua_State *lua) {$/;"	f
luaRedisSha1hexCommand	src/scripting.c	/^int luaRedisSha1hexCommand(lua_State *lua) {$/;"	f
luaRedisStatusReplyCommand	src/scripting.c	/^int luaRedisStatusReplyCommand(lua_State *lua) {$/;"	f
luaRemoveUnsupportedFunctions	src/scripting.c	/^void luaRemoveUnsupportedFunctions(lua_State *lua) {$/;"	f
luaReplyToRedisReply	src/scripting.c	/^void luaReplyToRedisReply(client *c, lua_State *lua) {$/;"	f
luaS_fix	deps/lua/src/lstring.h	24;"	d
luaS_new	deps/lua/src/lstring.h	20;"	d
luaS_newliteral	deps/lua/src/lstring.h	21;"	d
luaS_newlstr	deps/lua/src/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f
luaS_newudata	deps/lua/src/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s, Table *e) {$/;"	f
luaS_resize	deps/lua/src/lstring.c	/^void luaS_resize (lua_State *L, int newsize) {$/;"	f
luaSetGlobalArray	src/scripting.c	/^void luaSetGlobalArray(lua_State *lua, char *var, robj **elev, int elec) {$/;"	f
luaSortArray	src/scripting.c	/^void luaSortArray(lua_State *lua) {$/;"	f
luaT_gettm	deps/lua/src/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f
luaT_gettmbyobj	deps/lua/src/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f
luaT_init	deps/lua/src/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f
luaT_typenames	deps/lua/src/ltm.c	/^const char *const luaT_typenames[] = {$/;"	v
luaT_typenames	deps/lua/src/ltm.h	/^LUAI_DATA const char *const luaT_typenames[];$/;"	v
luaU_dump	deps/lua/etc/noparser.c	/^LUAI_FUNC int luaU_dump (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip) {$/;"	f
luaU_dump	deps/lua/src/ldump.c	/^int luaU_dump (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)$/;"	f
luaU_header	deps/lua/src/lundump.c	/^void luaU_header (char* h)$/;"	f
luaU_undump	deps/lua/src/lundump.c	/^Proto* luaU_undump (lua_State* L, ZIO* Z, Mbuffer* buff, const char* name)$/;"	f
luaV_concat	deps/lua/src/lvm.c	/^void luaV_concat (lua_State *L, int total, int last) {$/;"	f
luaV_equalval	deps/lua/src/lvm.c	/^int luaV_equalval (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f
luaV_execute	deps/lua/src/lvm.c	/^void luaV_execute (lua_State *L, int nexeccalls) {$/;"	f
luaV_gettable	deps/lua/src/lvm.c	/^void luaV_gettable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_lessthan	deps/lua/src/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_settable	deps/lua/src/lvm.c	/^void luaV_settable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_tonumber	deps/lua/src/lvm.c	/^const TValue *luaV_tonumber (const TValue *obj, TValue *n) {$/;"	f
luaV_tostring	deps/lua/src/lvm.c	/^int luaV_tostring (lua_State *L, StkId obj) {$/;"	f
luaX_init	deps/lua/etc/noparser.c	/^LUAI_FUNC void luaX_init (lua_State *L) {$/;"	f
luaX_init	deps/lua/src/llex.c	/^void luaX_init (lua_State *L) {$/;"	f
luaX_lexerror	deps/lua/src/llex.c	/^void luaX_lexerror (LexState *ls, const char *msg, int token) {$/;"	f
luaX_lookahead	deps/lua/src/llex.c	/^void luaX_lookahead (LexState *ls) {$/;"	f
luaX_newstring	deps/lua/src/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f
luaX_next	deps/lua/src/llex.c	/^void luaX_next (LexState *ls) {$/;"	f
luaX_setinput	deps/lua/src/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source) {$/;"	f
luaX_syntaxerror	deps/lua/src/llex.c	/^void luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f
luaX_token2str	deps/lua/src/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f
luaX_tokens	deps/lua/src/llex.c	/^const char *const luaX_tokens [] = {$/;"	v
luaX_tokens	deps/lua/src/llex.h	/^LUAI_DATA const char *const luaX_tokens [];$/;"	v
luaY_checklimit	deps/lua/src/lparser.c	34;"	d	file:
luaY_parser	deps/lua/etc/noparser.c	/^LUAI_FUNC Proto *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff, const char *name) {$/;"	f
luaY_parser	deps/lua/src/lparser.c	/^Proto *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff, const char *name) {$/;"	f
luaZ_buffer	deps/lua/src/lzio.h	32;"	d
luaZ_bufflen	deps/lua/src/lzio.h	34;"	d
luaZ_fill	deps/lua/src/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f
luaZ_freebuffer	deps/lua/src/lzio.h	43;"	d
luaZ_init	deps/lua/src/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f
luaZ_initbuffer	deps/lua/src/lzio.h	30;"	d
luaZ_lookahead	deps/lua/src/lzio.c	/^int luaZ_lookahead (ZIO *z) {$/;"	f
luaZ_openspace	deps/lua/src/lzio.c	/^char *luaZ_openspace (lua_State *L, Mbuffer *buff, size_t n) {$/;"	f
luaZ_read	deps/lua/src/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f
luaZ_resetbuffer	deps/lua/src/lzio.h	36;"	d
luaZ_resizebuffer	deps/lua/src/lzio.h	39;"	d
luaZ_sizebuffer	deps/lua/src/lzio.h	33;"	d
lua_Alloc	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_Alloc"><code>lua_Alloc<\/code><\/a><\/h3>$/;"	a
lua_Alloc	deps/lua/src/lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_CFunction	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_CFunction"><code>lua_CFunction<\/code><\/a><\/h3>$/;"	a
lua_CFunction	deps/lua/src/lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_Chunkreader	deps/lua/src/lua.h	293;"	d
lua_Chunkwriter	deps/lua/src/lua.h	294;"	d
lua_Debug	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_Debug"><code>lua_Debug<\/code><\/a><\/h3>$/;"	a
lua_Debug	deps/lua/src/lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	deps/lua/src/lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Hook	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_Hook"><code>lua_Hook<\/code><\/a><\/h3>$/;"	a
lua_Hook	deps/lua/src/lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Integer	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_Integer"><code>lua_Integer<\/code><\/a><\/h3>$/;"	a
lua_Integer	deps/lua/src/lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_Number	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_Number"><code>lua_Number<\/code><\/a><\/h3>$/;"	a
lua_Number	deps/lua/src/lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Reader	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_Reader"><code>lua_Reader<\/code><\/a><\/h3>$/;"	a
lua_Reader	deps/lua/src/lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_State	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_State"><code>lua_State<\/code><\/a><\/h3>$/;"	a
lua_State	deps/lua/src/lstate.h	/^struct lua_State {$/;"	s
lua_State	deps/lua/src/lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_TValue	deps/lua/src/lobject.h	/^typedef struct lua_TValue {$/;"	s
lua_Writer	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_Writer"><code>lua_Writer<\/code><\/a><\/h3>$/;"	a
lua_Writer	deps/lua/src/lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void* p, size_t sz, void* ud);$/;"	t
lua_always_replicate_commands	src/server.h	/^    int lua_always_replicate_commands; \/* Default replication type. *\/$/;"	m	struct:redisServer
lua_array_length	deps/lua/src/lua_cjson.c	/^static int lua_array_length(lua_State *l, json_config_t *cfg, strbuf_t *json)$/;"	f	file:
lua_assert	deps/lua/src/llimits.h	62;"	d
lua_assert	deps/lua/src/lualib.h	49;"	d
lua_atpanic	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_atpanic"><code>lua_atpanic<\/code><\/a><\/h3><p>$/;"	a
lua_atpanic	deps/lua/src/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f
lua_c	deps/lua/src/lua.c	13;"	d	file:
lua_call	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_call"><code>lua_call<\/code><\/a><\/h3><p>$/;"	a
lua_call	deps/lua/src/lapi.c	/^LUA_API void lua_call (lua_State *L, int nargs, int nresults) {$/;"	f
lua_caller	src/server.h	/^    client *lua_caller;   \/* The client running EVAL right now, or NULL *\/$/;"	m	struct:redisServer
lua_checkstack	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_checkstack"><code>lua_checkstack<\/code><\/a><\/h3><p>$/;"	a
lua_checkstack	deps/lua/src/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int size) {$/;"	f
lua_cjson_new	deps/lua/src/lua_cjson.c	/^static int lua_cjson_new(lua_State *l)$/;"	f	file:
lua_cjson_safe_new	deps/lua/src/lua_cjson.c	/^static int lua_cjson_safe_new(lua_State *l)$/;"	f	file:
lua_client	src/server.h	/^    client *lua_client;   \/* The "fake client" to query Redis from Lua *\/$/;"	m	struct:redisServer
lua_close	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_close"><code>lua_close<\/code><\/a><\/h3><p>$/;"	a
lua_close	deps/lua/src/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f
lua_concat	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_concat"><code>lua_concat<\/code><\/a><\/h3><p>$/;"	a
lua_concat	deps/lua/src/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f
lua_cpcall	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_cpcall"><code>lua_cpcall<\/code><\/a><\/h3><p>$/;"	a
lua_cpcall	deps/lua/src/lapi.c	/^LUA_API int lua_cpcall (lua_State *L, lua_CFunction func, void *ud) {$/;"	f
lua_createtable	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_createtable"><code>lua_createtable<\/code><\/a><\/h3><p>$/;"	a
lua_createtable	deps/lua/src/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f
lua_dump	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_dump"><code>lua_dump<\/code><\/a><\/h3><p>$/;"	a
lua_dump	deps/lua/src/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data) {$/;"	f
lua_equal	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_equal"><code>lua_equal<\/code><\/a><\/h3><p>$/;"	a
lua_equal	deps/lua/src/lapi.c	/^LUA_API int lua_equal (lua_State *L, int index1, int index2) {$/;"	f
lua_error	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_error"><code>lua_error<\/code><\/a><\/h3><p>$/;"	a
lua_error	deps/lua/src/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f
lua_freeline	deps/lua/src/luaconf.h	281;"	d
lua_freeline	deps/lua/src/luaconf.h	287;"	d
lua_gc	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_gc"><code>lua_gc<\/code><\/a><\/h3><p>$/;"	a
lua_gc	deps/lua/src/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, int data) {$/;"	f
lua_getallocf	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_getallocf"><code>lua_getallocf<\/code><\/a><\/h3><p>$/;"	a
lua_getallocf	deps/lua/src/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f
lua_getfenv	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_getfenv"><code>lua_getfenv<\/code><\/a><\/h3><p>$/;"	a
lua_getfenv	deps/lua/src/lapi.c	/^LUA_API void lua_getfenv (lua_State *L, int idx) {$/;"	f
lua_getfield	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_getfield"><code>lua_getfield<\/code><\/a><\/h3><p>$/;"	a
lua_getfield	deps/lua/src/lapi.c	/^LUA_API void lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_getgccount	deps/lua/src/lua.h	291;"	d
lua_getglobal	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_getglobal"><code>lua_getglobal<\/code><\/a><\/h3><p>$/;"	a
lua_getglobal	deps/lua/src/lua.h	277;"	d
lua_gethook	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_gethook"><code>lua_gethook<\/code><\/a><\/h3><p>$/;"	a
lua_gethook	deps/lua/src/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f
lua_gethookcount	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_gethookcount"><code>lua_gethookcount<\/code><\/a><\/h3><p>$/;"	a
lua_gethookcount	deps/lua/src/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f
lua_gethookmask	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_gethookmask"><code>lua_gethookmask<\/code><\/a><\/h3><p>$/;"	a
lua_gethookmask	deps/lua/src/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f
lua_getinfo	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_getinfo"><code>lua_getinfo<\/code><\/a><\/h3><p>$/;"	a
lua_getinfo	deps/lua/src/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f
lua_getlocal	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_getlocal"><code>lua_getlocal<\/code><\/a><\/h3><p>$/;"	a
lua_getlocal	deps/lua/src/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_getmetatable	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_getmetatable"><code>lua_getmetatable<\/code><\/a><\/h3><p>$/;"	a
lua_getmetatable	deps/lua/src/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f
lua_getref	deps/lua/src/lauxlib.h	167;"	d
lua_getregistry	deps/lua/src/lua.h	289;"	d
lua_getstack	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_getstack"><code>lua_getstack<\/code><\/a><\/h3><p>$/;"	a
lua_getstack	deps/lua/src/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f
lua_gettable	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_gettable"><code>lua_gettable<\/code><\/a><\/h3><p>$/;"	a
lua_gettable	deps/lua/src/lapi.c	/^LUA_API void lua_gettable (lua_State *L, int idx) {$/;"	f
lua_gettop	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_gettop"><code>lua_gettop<\/code><\/a><\/h3><p>$/;"	a
lua_gettop	deps/lua/src/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f
lua_getupvalue	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_getupvalue"><code>lua_getupvalue<\/code><\/a><\/h3><p>$/;"	a
lua_getupvalue	deps/lua/src/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_h	deps/lua/src/lua.h	10;"	d
lua_ident	deps/lua/src/lapi.c	/^const char lua_ident[] =$/;"	v
lua_insert	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_insert"><code>lua_insert<\/code><\/a><\/h3><p>$/;"	a
lua_insert	deps/lua/src/lapi.c	/^LUA_API void lua_insert (lua_State *L, int idx) {$/;"	f
lua_isboolean	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_isboolean"><code>lua_isboolean<\/code><\/a><\/h3><p>$/;"	a
lua_isboolean	deps/lua/src/lua.h	268;"	d
lua_iscfunction	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_iscfunction"><code>lua_iscfunction<\/code><\/a><\/h3><p>$/;"	a
lua_iscfunction	deps/lua/src/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f
lua_isfunction	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_isfunction"><code>lua_isfunction<\/code><\/a><\/h3><p>$/;"	a
lua_isfunction	deps/lua/src/lua.h	264;"	d
lua_islightuserdata	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_islightuserdata"><code>lua_islightuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_islightuserdata	deps/lua/src/lua.h	266;"	d
lua_isnil	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_isnil"><code>lua_isnil<\/code><\/a><\/h3><p>$/;"	a
lua_isnil	deps/lua/src/lua.h	267;"	d
lua_isnone	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_isnone"><code>lua_isnone<\/code><\/a><\/h3><p>$/;"	a
lua_isnone	deps/lua/src/lua.h	270;"	d
lua_isnoneornil	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_isnoneornil"><code>lua_isnoneornil<\/code><\/a><\/h3><p>$/;"	a
lua_isnoneornil	deps/lua/src/lua.h	271;"	d
lua_isnumber	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_isnumber"><code>lua_isnumber<\/code><\/a><\/h3><p>$/;"	a
lua_isnumber	deps/lua/src/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f
lua_isstring	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_isstring"><code>lua_isstring<\/code><\/a><\/h3><p>$/;"	a
lua_isstring	deps/lua/src/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f
lua_istable	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_istable"><code>lua_istable<\/code><\/a><\/h3><p>$/;"	a
lua_istable	deps/lua/src/lua.h	265;"	d
lua_isthread	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_isthread"><code>lua_isthread<\/code><\/a><\/h3><p>$/;"	a
lua_isthread	deps/lua/src/lua.h	269;"	d
lua_isuserdata	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_isuserdata"><code>lua_isuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_isuserdata	deps/lua/src/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f
lua_kill	src/server.h	/^    int lua_kill;         \/* Kill the script if true. *\/$/;"	m	struct:redisServer
lua_lessthan	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_lessthan"><code>lua_lessthan<\/code><\/a><\/h3><p>$/;"	a
lua_lessthan	deps/lua/src/lapi.c	/^LUA_API int lua_lessthan (lua_State *L, int index1, int index2) {$/;"	f
lua_load	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_load"><code>lua_load<\/code><\/a><\/h3><p>$/;"	a
lua_load	deps/lua/src/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f
lua_lock	deps/lua/src/llimits.h	110;"	d
lua_longjmp	deps/lua/src/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_multi_emitted	src/server.h	/^    int lua_multi_emitted;\/* True if we already proagated MULTI. *\/$/;"	m	struct:redisServer
lua_newstate	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_newstate"><code>lua_newstate<\/code><\/a><\/h3><p>$/;"	a
lua_newstate	deps/lua/src/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newtable	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_newtable"><code>lua_newtable<\/code><\/a><\/h3><p>$/;"	a
lua_newtable	deps/lua/src/lua.h	256;"	d
lua_newthread	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_newthread"><code>lua_newthread<\/code><\/a><\/h3><p>$/;"	a
lua_newthread	deps/lua/src/lapi.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f
lua_newuserdata	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_newuserdata"><code>lua_newuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_newuserdata	deps/lua/src/lapi.c	/^LUA_API void *lua_newuserdata (lua_State *L, size_t size) {$/;"	f
lua_next	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_next"><code>lua_next<\/code><\/a><\/h3><p>$/;"	a
lua_next	deps/lua/src/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f
lua_number2int	deps/lua/src/luaconf.h	563;"	d
lua_number2int	deps/lua/src/luaconf.h	571;"	d
lua_number2int	deps/lua/src/luaconf.h	580;"	d
lua_number2integer	deps/lua/src/luaconf.h	564;"	d
lua_number2integer	deps/lua/src/luaconf.h	573;"	d
lua_number2integer	deps/lua/src/luaconf.h	581;"	d
lua_number2str	deps/lua/src/luaconf.h	523;"	d
lua_objlen	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_objlen"><code>lua_objlen<\/code><\/a><\/h3><p>$/;"	a
lua_objlen	deps/lua/src/lapi.c	/^LUA_API size_t lua_objlen (lua_State *L, int idx) {$/;"	f
lua_open	deps/lua/src/lua.h	287;"	d
lua_pcall	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pcall"><code>lua_pcall<\/code><\/a><\/h3><p>$/;"	a
lua_pcall	deps/lua/src/lapi.c	/^LUA_API int lua_pcall (lua_State *L, int nargs, int nresults, int errfunc) {$/;"	f
lua_pclose	deps/lua/src/luaconf.h	671;"	d
lua_pclose	deps/lua/src/luaconf.h	676;"	d
lua_pclose	deps/lua/src/luaconf.h	682;"	d
lua_pop	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pop"><code>lua_pop<\/code><\/a><\/h3><p>$/;"	a
lua_pop	deps/lua/src/lua.h	254;"	d
lua_popen	deps/lua/src/luaconf.h	670;"	d
lua_popen	deps/lua/src/luaconf.h	675;"	d
lua_popen	deps/lua/src/luaconf.h	680;"	d
lua_pushboolean	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushboolean"><code>lua_pushboolean<\/code><\/a><\/h3><p>$/;"	a
lua_pushboolean	deps/lua/src/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f
lua_pushcclosure	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushcclosure"><code>lua_pushcclosure<\/code><\/a><\/h3><p>$/;"	a
lua_pushcclosure	deps/lua/src/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f
lua_pushcfunction	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushcfunction"><code>lua_pushcfunction<\/code><\/a><\/h3><p>$/;"	a
lua_pushcfunction	deps/lua/src/lua.h	260;"	d
lua_pushfstring	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushfstring"><code>lua_pushfstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushfstring	deps/lua/src/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
lua_pushinteger	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushinteger"><code>lua_pushinteger<\/code><\/a><\/h3><p>$/;"	a
lua_pushinteger	deps/lua/src/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f
lua_pushlightuserdata	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushlightuserdata"><code>lua_pushlightuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_pushlightuserdata	deps/lua/src/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f
lua_pushliteral	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushliteral"><code>lua_pushliteral<\/code><\/a><\/h3><p>$/;"	a
lua_pushliteral	deps/lua/src/lua.h	273;"	d
lua_pushlstring	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushlstring"><code>lua_pushlstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushlstring	deps/lua/src/lapi.c	/^LUA_API void lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f
lua_pushnil	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushnil"><code>lua_pushnil<\/code><\/a><\/h3><p>$/;"	a
lua_pushnil	deps/lua/src/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f
lua_pushnumber	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushnumber"><code>lua_pushnumber<\/code><\/a><\/h3><p>$/;"	a
lua_pushnumber	deps/lua/src/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f
lua_pushstring	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushstring"><code>lua_pushstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushstring	deps/lua/src/lapi.c	/^LUA_API void lua_pushstring (lua_State *L, const char *s) {$/;"	f
lua_pushthread	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushthread"><code>lua_pushthread<\/code><\/a><\/h3><p>$/;"	a
lua_pushthread	deps/lua/src/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f
lua_pushunsigned	deps/lua/src/lua_cmsgpack.c	35;"	d	file:
lua_pushunsigned	deps/lua/src/lua_cmsgpack.c	37;"	d	file:
lua_pushvalue	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushvalue"><code>lua_pushvalue<\/code><\/a><\/h3><p>$/;"	a
lua_pushvalue	deps/lua/src/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f
lua_pushvfstring	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_pushvfstring"><code>lua_pushvfstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushvfstring	deps/lua/src/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f
lua_random_dirty	src/server.h	/^    int lua_random_dirty; \/* True if a random command was called during the$/;"	m	struct:redisServer
lua_rawequal	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_rawequal"><code>lua_rawequal<\/code><\/a><\/h3><p>$/;"	a
lua_rawequal	deps/lua/src/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f
lua_rawget	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_rawget"><code>lua_rawget<\/code><\/a><\/h3><p>$/;"	a
lua_rawget	deps/lua/src/lapi.c	/^LUA_API void lua_rawget (lua_State *L, int idx) {$/;"	f
lua_rawgeti	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_rawgeti"><code>lua_rawgeti<\/code><\/a><\/h3><p>$/;"	a
lua_rawgeti	deps/lua/src/lapi.c	/^LUA_API void lua_rawgeti (lua_State *L, int idx, int n) {$/;"	f
lua_rawset	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_rawset"><code>lua_rawset<\/code><\/a><\/h3><p>$/;"	a
lua_rawset	deps/lua/src/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f
lua_rawseti	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_rawseti"><code>lua_rawseti<\/code><\/a><\/h3><p>$/;"	a
lua_rawseti	deps/lua/src/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, int n) {$/;"	f
lua_readline	deps/lua/src/luaconf.h	277;"	d
lua_readline	deps/lua/src/luaconf.h	283;"	d
lua_ref	deps/lua/src/lauxlib.h	162;"	d
lua_register	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_register"><code>lua_register<\/code><\/a><\/h3><p>$/;"	a
lua_register	deps/lua/src/lua.h	258;"	d
lua_remove	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_remove"><code>lua_remove<\/code><\/a><\/h3><p>$/;"	a
lua_remove	deps/lua/src/lapi.c	/^LUA_API void lua_remove (lua_State *L, int idx) {$/;"	f
lua_repl	src/server.h	/^    int lua_repl;         \/* Script replication flags for redis.set_repl(). *\/$/;"	m	struct:redisServer
lua_replace	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_replace"><code>lua_replace<\/code><\/a><\/h3><p>$/;"	a
lua_replace	deps/lua/src/lapi.c	/^LUA_API void lua_replace (lua_State *L, int idx) {$/;"	f
lua_replicate_commands	src/server.h	/^    int lua_replicate_commands; \/* True if we are doing single commands repl. *\/$/;"	m	struct:redisServer
lua_resume	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_resume"><code>lua_resume<\/code><\/a><\/h3><p>$/;"	a
lua_resume	deps/lua/src/ldo.c	/^LUA_API int lua_resume (lua_State *L, int nargs) {$/;"	f
lua_saveline	deps/lua/src/luaconf.h	278;"	d
lua_saveline	deps/lua/src/luaconf.h	286;"	d
lua_scripts	src/server.h	/^    dict *lua_scripts;         \/* A dictionary of SHA1 -> Lua scripts *\/$/;"	m	struct:redisServer
lua_setallocf	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_setallocf"><code>lua_setallocf<\/code><\/a><\/h3><p>$/;"	a
lua_setallocf	deps/lua/src/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f
lua_setfenv	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_setfenv"><code>lua_setfenv<\/code><\/a><\/h3><p>$/;"	a
lua_setfenv	deps/lua/src/lapi.c	/^LUA_API int lua_setfenv (lua_State *L, int idx) {$/;"	f
lua_setfield	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_setfield"><code>lua_setfield<\/code><\/a><\/h3><p>$/;"	a
lua_setfield	deps/lua/src/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_setglobal	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_setglobal"><code>lua_setglobal<\/code><\/a><\/h3><p>$/;"	a
lua_setglobal	deps/lua/src/lua.h	276;"	d
lua_sethook	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_sethook"><code>lua_sethook<\/code><\/a><\/h3><p>$/;"	a
lua_sethook	deps/lua/src/ldebug.c	/^LUA_API int lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f
lua_setlevel	deps/lua/src/lapi.c	/^LUA_API void lua_setlevel (lua_State *from, lua_State *to) {$/;"	f
lua_setlocal	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_setlocal"><code>lua_setlocal<\/code><\/a><\/h3><p>$/;"	a
lua_setlocal	deps/lua/src/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_setmetatable	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_setmetatable"><code>lua_setmetatable<\/code><\/a><\/h3><p>$/;"	a
lua_setmetatable	deps/lua/src/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f
lua_settable	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_settable"><code>lua_settable<\/code><\/a><\/h3><p>$/;"	a
lua_settable	deps/lua/src/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f
lua_settop	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_settop"><code>lua_settop<\/code><\/a><\/h3><p>$/;"	a
lua_settop	deps/lua/src/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f
lua_setupvalue	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_setupvalue"><code>lua_setupvalue<\/code><\/a><\/h3><p>$/;"	a
lua_setupvalue	deps/lua/src/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_status	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_status"><code>lua_status<\/code><\/a><\/h3><p>$/;"	a
lua_status	deps/lua/src/lapi.c	/^LUA_API int  lua_status (lua_State *L) {$/;"	f
lua_stdin_is_tty	deps/lua/src/luaconf.h	229;"	d
lua_stdin_is_tty	deps/lua/src/luaconf.h	233;"	d
lua_stdin_is_tty	deps/lua/src/luaconf.h	235;"	d
lua_str2number	deps/lua/src/luaconf.h	525;"	d
lua_strlen	deps/lua/src/lua.h	262;"	d
lua_time_limit	src/server.h	/^    mstime_t lua_time_limit;  \/* Script timeout in milliseconds *\/$/;"	m	struct:redisServer
lua_time_start	src/server.h	/^    mstime_t lua_time_start;  \/* Start time of script, milliseconds time *\/$/;"	m	struct:redisServer
lua_timedout	src/server.h	/^    int lua_timedout;     \/* True if we reached the time limit for script$/;"	m	struct:redisServer
lua_tmpnam	deps/lua/src/luaconf.h	649;"	d
lua_tmpnam	deps/lua/src/luaconf.h	657;"	d
lua_toboolean	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_toboolean"><code>lua_toboolean<\/code><\/a><\/h3><p>$/;"	a
lua_toboolean	deps/lua/src/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f
lua_tocfunction	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_tocfunction"><code>lua_tocfunction<\/code><\/a><\/h3><p>$/;"	a
lua_tocfunction	deps/lua/src/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f
lua_tointeger	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_tointeger"><code>lua_tointeger<\/code><\/a><\/h3><p>$/;"	a
lua_tointeger	deps/lua/src/lapi.c	/^LUA_API lua_Integer lua_tointeger (lua_State *L, int idx) {$/;"	f
lua_tolstring	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_tolstring"><code>lua_tolstring<\/code><\/a><\/h3><p>$/;"	a
lua_tolstring	deps/lua/src/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
lua_tonumber	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_tonumber"><code>lua_tonumber<\/code><\/a><\/h3><p>$/;"	a
lua_tonumber	deps/lua/src/lapi.c	/^LUA_API lua_Number lua_tonumber (lua_State *L, int idx) {$/;"	f
lua_topointer	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_topointer"><code>lua_topointer<\/code><\/a><\/h3><p>$/;"	a
lua_topointer	deps/lua/src/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f
lua_tostring	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_tostring"><code>lua_tostring<\/code><\/a><\/h3><p>$/;"	a
lua_tostring	deps/lua/src/lua.h	279;"	d
lua_tothread	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_tothread"><code>lua_tothread<\/code><\/a><\/h3><p>$/;"	a
lua_tothread	deps/lua/src/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f
lua_touserdata	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_touserdata"><code>lua_touserdata<\/code><\/a><\/h3><p>$/;"	a
lua_touserdata	deps/lua/src/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f
lua_type	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_type"><code>lua_type<\/code><\/a><\/h3><p>$/;"	a
lua_type	deps/lua/src/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f
lua_typename	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_typename"><code>lua_typename<\/code><\/a><\/h3><p>$/;"	a
lua_typename	deps/lua/src/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f
lua_unlock	deps/lua/src/llimits.h	111;"	d
lua_unref	deps/lua/src/lauxlib.h	165;"	d
lua_upvalueindex	deps/lua/doc/manual.html	/^<a name="lua_upvalueindex"><code>lua_upvalueindex<\/code><\/a>.$/;"	a
lua_upvalueindex	deps/lua/src/lua.h	39;"	d
lua_write_dirty	src/server.h	/^    int lua_write_dirty;  \/* True if a write command was called during the$/;"	m	struct:redisServer
lua_xmove	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_xmove"><code>lua_xmove<\/code><\/a><\/h3><p>$/;"	a
lua_xmove	deps/lua/src/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f
lua_yield	deps/lua/doc/manual.html	/^<hr><h3><a name="lua_yield"><code>lua_yield<\/code><\/a><\/h3><p>$/;"	a
lua_yield	deps/lua/src/ldo.c	/^LUA_API int lua_yield (lua_State *L, int nresults) {$/;"	f
luaall_c	deps/lua/etc/all.c	5;"	d	file:
luabp	src/scripting.c	/^    int luabp;  \/* Stop at next line because redis.breakpoint() was called. *\/$/;"	m	struct:ldbState	file:
luac_c	deps/lua/src/luac.c	12;"	d	file:
luac_c	deps/lua/src/print.c	10;"	d	file:
luai_Cast	deps/lua/src/luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	u
luai_apicheck	deps/lua/src/luaconf.h	379;"	d
luai_apicheck	deps/lua/src/luaconf.h	381;"	d
luai_jmpbuf	deps/lua/src/luaconf.h	611;"	d
luai_jmpbuf	deps/lua/src/luaconf.h	617;"	d
luai_jmpbuf	deps/lua/src/luaconf.h	623;"	d
luai_numadd	deps/lua/src/luaconf.h	533;"	d
luai_numdiv	deps/lua/src/luaconf.h	536;"	d
luai_numeq	deps/lua/src/luaconf.h	540;"	d
luai_numisnan	deps/lua/src/luaconf.h	543;"	d
luai_numle	deps/lua/src/luaconf.h	542;"	d
luai_numlt	deps/lua/src/luaconf.h	541;"	d
luai_nummod	deps/lua/src/luaconf.h	537;"	d
luai_nummul	deps/lua/src/luaconf.h	535;"	d
luai_numpow	deps/lua/src/luaconf.h	538;"	d
luai_numsub	deps/lua/src/luaconf.h	534;"	d
luai_numunm	deps/lua/src/luaconf.h	539;"	d
luai_threadyield	deps/lua/src/llimits.h	115;"	d
luai_userstateclose	deps/lua/src/luaconf.h	724;"	d
luai_userstatefree	deps/lua/src/luaconf.h	726;"	d
luai_userstateopen	deps/lua/src/luaconf.h	723;"	d
luai_userstateresume	deps/lua/src/luaconf.h	727;"	d
luai_userstatethread	deps/lua/src/luaconf.h	725;"	d
luai_userstateyield	deps/lua/src/luaconf.h	728;"	d
lualib_h	deps/lua/src/lualib.h	9;"	d
lualibs	deps/lua/src/linit.c	/^static const luaL_Reg lualibs[] = {$/;"	v	file:
luaopen_base	deps/lua/src/lbaselib.c	/^LUALIB_API int luaopen_base (lua_State *L) {$/;"	f
luaopen_bit	deps/lua/src/lua_bit.c	/^LUALIB_API int luaopen_bit(lua_State *L)$/;"	f
luaopen_cjson	deps/lua/src/lua_cjson.c	/^int luaopen_cjson(lua_State *l)$/;"	f
luaopen_cjson_safe	deps/lua/src/lua_cjson.c	/^int luaopen_cjson_safe(lua_State *l)$/;"	f
luaopen_cmsgpack	deps/lua/src/lua_cmsgpack.c	/^LUALIB_API int luaopen_cmsgpack(lua_State *L) {$/;"	f
luaopen_cmsgpack_safe	deps/lua/src/lua_cmsgpack.c	/^LUALIB_API int luaopen_cmsgpack_safe(lua_State *L) {$/;"	f
luaopen_create	deps/lua/src/lua_cmsgpack.c	/^int luaopen_create(lua_State *L) {$/;"	f
luaopen_debug	deps/lua/src/ldblib.c	/^LUALIB_API int luaopen_debug (lua_State *L) {$/;"	f
luaopen_io	deps/lua/src/liolib.c	/^LUALIB_API int luaopen_io (lua_State *L) {$/;"	f
luaopen_math	deps/lua/src/lmathlib.c	/^LUALIB_API int luaopen_math (lua_State *L) {$/;"	f
luaopen_os	deps/lua/src/loslib.c	/^LUALIB_API int luaopen_os (lua_State *L) {$/;"	f
luaopen_package	deps/lua/src/loadlib.c	/^LUALIB_API int luaopen_package (lua_State *L) {$/;"	f
luaopen_string	deps/lua/src/lstrlib.c	/^LUALIB_API int luaopen_string (lua_State *L) {$/;"	f
luaopen_struct	deps/lua/src/lua_struct.c	/^LUALIB_API int luaopen_struct (lua_State *L) {$/;"	f
luaopen_table	deps/lua/src/ltablib.c	/^LUALIB_API int luaopen_table (lua_State *L) {$/;"	f
lundump_c	deps/lua/src/lundump.c	9;"	d	file:
lundump_h	deps/lua/src/lundump.h	8;"	d
lvl	deps/lua/src/lauxlib.h	/^  int lvl;  \/* number of strings in the stack (level) *\/$/;"	m	struct:luaL_Buffer
lvm_c	deps/lua/src/lvm.c	12;"	d	file:
lvm_h	deps/lua/src/lvm.h	8;"	d
lzf_compress	src/lzf_c.c	/^lzf_compress (const void *const in_data, unsigned int in_len,$/;"	f
lzf_decompress	src/lzf_d.c	/^lzf_decompress (const void *const in_data,  unsigned int in_len,$/;"	f
lzf_movsb	src/lzf_d.c	48;"	d	file:
lzio_c	deps/lua/src/lzio.c	10;"	d	file:
lzio_h	deps/lua/src/lzio.h	9;"	d
m	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	*m = D_RO(node)->items[c - 1]; \/* select median item *\/$/;"	m	struct:m	file:
m	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	struct tree_map_node_item *m)$/;"	s	file:
m	deps/pmdk/src/libpmemobj/container_seglists.c	/^	struct memory_block m;$/;"	m	struct:block_container_seglists	typeref:struct:block_container_seglists::memory_block	file:
m	deps/pmdk/src/libpmemobj/memblock.h	/^	struct memory_block m;$/;"	m	struct:memory_block_reserved	typeref:struct:memory_block_reserved::memory_block
m	deps/pmdk/src/libpmemobj/palloc.c	/^			struct memory_block m;$/;"	m	struct:pobj_action_internal::__anon127::__anon128	typeref:struct:pobj_action_internal::__anon127::__anon128::memory_block	file:
m256_get16b	deps/pmdk/src/libpmem/x86_64/avx.h	/^m256_get16b(__m256i ymm)$/;"	f
m256_get2b	deps/pmdk/src/libpmem/x86_64/avx.h	/^m256_get2b(__m256i ymm)$/;"	f
m256_get4b	deps/pmdk/src/libpmem/x86_64/avx.h	/^m256_get4b(__m256i ymm)$/;"	f
m256_get8b	deps/pmdk/src/libpmem/x86_64/avx.h	/^m256_get8b(__m256i ymm)$/;"	f
m_ops	deps/pmdk/src/libpmemobj/memblock.h	/^	const struct memory_block_ops *m_ops;$/;"	m	struct:memory_block	typeref:struct:memory_block::memory_block_ops
mach_absolute_time	deps/jemalloc/configure	/^	mach_absolute_time();$/;"	f
machine	deps/pmdk/src/common/pool_hdr.h	/^	uint16_t machine;		\/* required architecture *\/$/;"	m	struct:arch_flags
machine_class	deps/pmdk/src/common/pool_hdr.h	/^	uint8_t machine_class;		\/* address size -- 64 bit or 32 bit *\/$/;"	m	struct:arch_flags
macro_reserve_s	deps/pmdk/src/test/obj_action/obj_action.c	/^struct macro_reserve_s {$/;"	s	file:
mad	src/latency.h	/^    uint32_t mad;           \/* Mean absolute deviation. *\/$/;"	m	struct:latencyStats
mag	deps/pmdk/src/common/util.c	/^	uint64_t mag;$/;"	m	struct:suff	file:
magic	deps/jemalloc/test/unit/ph.c	/^	uint32_t magic;$/;"	m	struct:node_s	file:
magic	deps/jemalloc/test/unit/rb.c	/^	uint32_t magic;$/;"	m	struct:node_s	file:
magic	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint32_t magic;$/;"	m	struct:zone_header
magic	src/hyperloglog.c	/^    char magic[4];      \/* "HYLL" *\/$/;"	m	struct:hllhdr	file:
main	deps/hiredis/examples/example-ae.c	/^int main (int argc, char **argv) {$/;"	f
main	deps/hiredis/examples/example-libev.c	/^int main (int argc, char **argv) {$/;"	f
main	deps/hiredis/examples/example-libevent.c	/^int main (int argc, char **argv) {$/;"	f
main	deps/hiredis/examples/example-libuv.c	/^int main (int argc, char **argv) {$/;"	f
main	deps/hiredis/examples/example.c	/^int main(int argc, char **argv) {$/;"	f
main	deps/hiredis/sds.c	/^int main(void) {$/;"	f
main	deps/hiredis/test.c	/^int main(int argc, char **argv) {$/;"	f
main	deps/jemalloc/build-aux/config.guess	/^		main()$/;"	f
main	deps/jemalloc/build-aux/config.guess	/^	main ()$/;"	f
main	deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads_main.cpp	/^int main(int argc, char** argv)$/;"	f
main	deps/jemalloc/test/integration/MALLOCX_ARENA.c	/^main(void)$/;"	f
main	deps/jemalloc/test/integration/aligned_alloc.c	/^main(void)$/;"	f
main	deps/jemalloc/test/integration/allocated.c	/^main(void)$/;"	f
main	deps/jemalloc/test/integration/chunk.c	/^main(void)$/;"	f
main	deps/jemalloc/test/integration/mallocx.c	/^main(void)$/;"	f
main	deps/jemalloc/test/integration/overflow.c	/^main(void)$/;"	f
main	deps/jemalloc/test/integration/posix_memalign.c	/^main(void)$/;"	f
main	deps/jemalloc/test/integration/rallocx.c	/^main(void)$/;"	f
main	deps/jemalloc/test/integration/sdallocx.c	/^main(void)$/;"	f
main	deps/jemalloc/test/integration/thread_arena.c	/^main(void)$/;"	f
main	deps/jemalloc/test/integration/thread_tcache_enabled.c	/^main(void)$/;"	f
main	deps/jemalloc/test/integration/xallocx.c	/^main(void)$/;"	f
main	deps/jemalloc/test/stress/microbench.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/SFMT.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/a0.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/arena_reset.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/atomic.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/bitmap.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/ckh.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/decay.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/fork.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/hash.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/junk.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/lg_chunk.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/mallctl.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/math.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/mq.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/mtx.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/nstime.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/pack.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/pages.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/ph.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/prng.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/prof_accum.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/prof_active.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/prof_gdump.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/prof_idump.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/prof_reset.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/prof_thread_name.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/ql.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/qr.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/quarantine.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/rb.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/rtree.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/run_quantize.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/size_classes.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/smoothstep.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/stats.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/ticker.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/tsd.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/util.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/witness.c	/^main(void)$/;"	f
main	deps/jemalloc/test/unit/zero.c	/^main(void)$/;"	f
main	deps/linenoise/example.c	/^int main(int argc, char **argv) {$/;"	f
main	deps/lua/etc/min.c	/^int main(void)$/;"	f
main	deps/lua/src/lua.c	/^int main (int argc, char **argv) {$/;"	f
main	deps/lua/src/luac.c	/^int main(int argc, char* argv[])$/;"	f
main	deps/pmdk/src/benchmarks/pmembench.cpp	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmem/full_copy.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmem/manpage.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmem/simple_copy.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemblk/assetdb/asset_checkin.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemblk/assetdb/asset_checkout.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemblk/assetdb/asset_list.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemblk/assetdb/asset_load.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemblk/manpage.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemlog/logfile/addlog.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemlog/logfile/printlog.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemlog/manpage.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/array/array.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/btree.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^main(int ac, char *av[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/linkedlist/fifo.c	/^main(int argc, const char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/lists.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/manpage.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^int main(int argc, const char *argv[]) {$/;"	f
main	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/pi.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/setjmp.c	/^main(int argc, const char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/slab_allocator/main.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/string_store/reader.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/string_store/writer.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/string_store_tx/reader.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/string_store_tx/writer.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/string_store_tx_type/reader.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmemobj/string_store_tx_type/writer.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/libpmempool/manpage.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/librpmem/basic.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/librpmem/hello.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/librpmem/manpage.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/RUNTESTS.py	/^def main():$/;"	f
main	deps/pmdk/src/test/arch_flags/arch_flags.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/blk_include/blk_include.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/blk_nblock/blk_nblock.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/blk_non_zero/blk_non_zero.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/blk_pool/blk_pool.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/blk_pool_lock/blk_pool_lock.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/blk_recovery/blk_recovery.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/blk_rw/blk_rw.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/blk_rw_mt/blk_rw_mt.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/checksum/checksum.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/compat_incompat_features/pool_open.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/env.py	/^def main():$/;"	f
main	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/getopt/getopt.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/libpmempool_api/libpmempool_test.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/libpmempool_check_version/libpmempool_check_version.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/libpmempool_feature/libpmempool_feature.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/libpmempool_include/libpmempool_include.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/libpmempool_rm/libpmempool_rm.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/libpmempool_sync/libpmempool_sync.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/libpmempool_transform/libpmempool_transform.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/log_basic/log_basic.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/log_include/log_include.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/log_pool/log_pool.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/log_pool_lock/log_pool_lock.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/log_recovery/log_recovery.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/log_walker/log_walker.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/mmap/mmap.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/mmap_fixed/mmap_fixed.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_action/obj_action.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_alloc/obj_alloc.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_badblock/obj_badblock.c	/^int main(int argc, char **argv) {$/;"	f
main	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_check/obj_check.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_check_remote/obj_check_remote.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_ctl_alignment/obj_ctl_alignment.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_ctl_alloc_class/obj_ctl_alloc_class.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_ctl_alloc_class_config/obj_ctl_alloc_class_config.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_ctl_config/obj_ctl_config.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_ctl_debug/obj_ctl_debug.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_ctl_heap_size/obj_ctl_heap_size.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_ctl_stats/obj_ctl_stats.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_debug/obj_debug.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_defrag/obj_defrag.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_direct/obj_direct.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_direct_volatile/obj_direct_volatile.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_extend/obj_extend.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_fragmentation/obj_fragmentation.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_heap/obj_heap.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_heap_interrupt/obj_heap_interrupt.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_heap_state/obj_heap_state.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_include/obj_base_include.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_lane/obj_lane.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_layout/obj_layout.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_list/obj_list.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_locks/obj_locks.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_mem/obj_mem.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_memblock/obj_memblock.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_memcheck_register/obj_memcheck_register.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_memops/obj_memops.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_oid_thread/obj_oid_thread.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_out_of_memory/obj_out_of_memory.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_pmalloc_oom_mt/obj_pmalloc_oom_mt.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_pmalloc_rand_mt/obj_pmalloc_rand_mt.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_pmemcheck/obj_pmemcheck.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_pool/obj_pool.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_pool_lock/obj_pool_lock.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_pool_lookup/obj_pool_lookup.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_recovery/obj_recovery.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_recreate/obj_recreate.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_reorder_basic/obj_reorder_basic.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_root/obj_root.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_sds/obj_sds.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_sync/obj_sync.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_toid/obj_toid.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_invalid/obj_tx_invalid.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_locks_abort/obj_tx_locks_abort.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_mt/obj_tx_mt.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_tx_user_data/obj_tx_user_data.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_ulog_size/obj_ulog_size.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/obj_zones/obj_zones.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/out_err/out_err.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/out_err_mt/out_err_mt.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^main(int argc, char **argv)$/;"	f
main	deps/pmdk/src/test/pmem2_include/pmem2_include.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem2_map/pmem2_map.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_deep_persist/pmem_deep_persist.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_has_auto_flush/pmem_has_auto_flush.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_has_auto_flush_win/pmem_has_auto_flush_win.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_include/pmem_include.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_is_pmem/pmem_is_pmem.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_is_pmem_posix/pmem_is_pmem_posix.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_map_file/pmem_map_file.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_map_file_trunc/pmem_map_file_trunc.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_memcpy/pmem_memcpy.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_memmove/pmem_memmove.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_memset/pmem_memset.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_movnt/pmem_movnt.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_unmap/pmem_unmap.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmem_valgr_simple/pmem_valgr_simple.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmreorder_flushes/pmreorder_flushes.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmreorder_simple/pmreorder_simple.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/remote_basic/remote_basic.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/remote_obj_basic/remote_obj_basic.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/rpmem_addr/rpmem_addr.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/rpmem_addr_ext/rpmem_addr_ext.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/rpmem_proto/rpmem_proto.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/rpmemd_config/rpmemd_config_test.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/rpmemd_log/rpmemd_log_test.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/set_funcs/set_funcs.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/signal_handle/signal_handle.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/anonymous_mmap/anonymous_mmap.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/dllview/dllview.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/extents/extents.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/fallocate_detect/fallocate_detect.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/fip/fip.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/pmemalloc/pmemalloc.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/pmemwrite/write.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/tools/usc_permission_check/usc_permission_check.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/traces/traces.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/traces_custom_function/traces_custom_function.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/traces_pmem/traces_pmem.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_badblock/util_badblock.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_cpuid/util_cpuid.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_ctl/util_ctl.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_extent/util_extent.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_file_create/util_file_create.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_file_open/util_file_open.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_is_absolute/util_is_absolute.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_is_poolset/util_is_poolset.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_is_zeroed/util_is_zeroed.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_map_proc/util_map_proc.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_parse_size/util_parse_size.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_poolset/util_poolset.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_poolset_foreach/util_poolset_foreach.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_poolset_parse/util_poolset_parse.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_poolset_size/util_poolset_size.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_sds/util_sds.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_uuid_generate/util_uuid_generate.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_vec/util_vec.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/util_vecq/util_vecq.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/win_common/win_common.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/win_lists/win_lists.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/win_mmap_dtor/win_mmap_dtor.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/win_poolset_unmap/win_poolset_unmap.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/test/win_signal/win_signal.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/tools/daxio/daxio.c	/^main(int argc, char **argv)$/;"	f
main	deps/pmdk/src/tools/pmempool/pmempool.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/src/tools/pmreorder/pmreorder.py	/^def main():$/;"	f
main	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/utils/check_license/check-license.c	/^main(int argc, char *argv[])$/;"	f
main	deps/pmdk/utils/check_sdk_version.py	/^def main():$/;"	f
main	deps/pmdk/utils/docker/test_package/test_package.c	/^main(int argc, char *argv[])$/;"	f
main	src/redis-benchmark.c	/^int main(int argc, const char **argv) {$/;"	f
main	src/redis-check-aof.c	/^int main(int argc, char **argv) {$/;"	f
main	src/redis-cli.c	/^int main(int argc, char **argv) {$/;"	f
main	src/sds.c	/^int main(void) {$/;"	f
main	src/server.c	/^int main(int argc, char **argv) {$/;"	f
main	tests/cluster/run.tcl	/^proc main {} {$/;"	p
main	tests/sentinel/run.tcl	/^proc main {} {$/;"	p
main	utils/corrupt_rdb.c	/^int main(int argc, char **argv) {$/;"	f
main	utils/hashtable/rehashing.c	/^int main(void) {$/;"	f
main	utils/speed-regression.tcl	/^proc main {} {$/;"	p
main_affinity	deps/pmdk/src/benchmarks/benchmark.hpp	/^	ssize_t main_affinity;   \/* main thread affinity *\/$/;"	m	struct:benchmark_args
mainposition	deps/lua/src/ltable.c	/^static Node *mainposition (const Table *t, const TValue *key) {$/;"	f	file:
mainthread	deps/lua/src/lstate.h	/^  struct lua_State *mainthread;$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
major	deps/pmdk/src/benchmarks/pmembench.cpp	/^	unsigned major;$/;"	m	struct:version_s	file:
major	deps/pmdk/src/common/pool_hdr.h	/^	uint32_t major;			\/* format major version number *\/$/;"	m	struct:pool_hdr
major	deps/pmdk/src/common/set.h	/^	uint32_t major; \/* format major version number *\/$/;"	m	struct:pool_attr
major	deps/pmdk/src/include/librpmem.h	/^	uint32_t major; \/* format major version number *\/$/;"	m	struct:rpmem_pool_attr
major	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint16_t major;			\/* major version *\/$/;"	m	struct:btt_info
major	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t major;$/;"	m	struct:heap_header
major	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint16_t major;			\/* protocol version major number *\/$/;"	m	struct:rpmem_msg_common
major	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t major; \/* format major version number *\/$/;"	m	struct:rpmem_pool_attr_packed
major	deps/pmdk/src/tools/daxio/daxio.c	/^	unsigned major;$/;"	m	struct:daxio_device	file:
makemask	deps/lua/src/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makewhite	deps/lua/src/lgc.c	34;"	d	file:
mallctl	deps/jemalloc/include/jemalloc/jemalloc.h	338;"	d
mallctl	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	27;"	d
mallctl	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	27;"	d
mallctl_bool_get	deps/jemalloc/test/unit/prof_active.c	/^mallctl_bool_get(const char *name, bool expected, const char *func, int line)$/;"	f	file:
mallctl_bool_set	deps/jemalloc/test/unit/prof_active.c	/^mallctl_bool_set(const char *name, bool old_expected, bool val_new,$/;"	f	file:
mallctl_prof_active_get	deps/jemalloc/test/unit/prof_active.c	44;"	d	file:
mallctl_prof_active_get_impl	deps/jemalloc/test/unit/prof_active.c	/^mallctl_prof_active_get_impl(bool prof_active_old_expected, const char *func,$/;"	f	file:
mallctl_prof_active_set	deps/jemalloc/test/unit/prof_active.c	55;"	d	file:
mallctl_prof_active_set_impl	deps/jemalloc/test/unit/prof_active.c	/^mallctl_prof_active_set_impl(bool prof_active_old_expected,$/;"	f	file:
mallctl_thread_name_get	deps/jemalloc/test/unit/prof_thread_name.c	22;"	d	file:
mallctl_thread_name_get_impl	deps/jemalloc/test/unit/prof_thread_name.c	/^mallctl_thread_name_get_impl(const char *thread_name_expected, const char *func,$/;"	f	file:
mallctl_thread_name_set	deps/jemalloc/test/unit/prof_thread_name.c	36;"	d	file:
mallctl_thread_name_set_impl	deps/jemalloc/test/unit/prof_thread_name.c	/^mallctl_thread_name_set_impl(const char *thread_name, const char *func,$/;"	f	file:
mallctl_thread_prof_active_get	deps/jemalloc/test/unit/prof_active.c	66;"	d	file:
mallctl_thread_prof_active_get_impl	deps/jemalloc/test/unit/prof_active.c	/^mallctl_thread_prof_active_get_impl(bool thread_prof_active_old_expected,$/;"	f	file:
mallctl_thread_prof_active_set	deps/jemalloc/test/unit/prof_active.c	77;"	d	file:
mallctl_thread_prof_active_set_impl	deps/jemalloc/test/unit/prof_active.c	/^mallctl_thread_prof_active_set_impl(bool thread_prof_active_old_expected,$/;"	f	file:
mallctlbymib	deps/jemalloc/include/jemalloc/jemalloc.h	340;"	d
mallctlbymib	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	29;"	d
mallctlbymib	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	29;"	d
mallctlnametomib	deps/jemalloc/include/jemalloc/jemalloc.h	339;"	d
mallctlnametomib	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	28;"	d
mallctlnametomib	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	28;"	d
malloc	deps/jemalloc/include/jemalloc/jemalloc.h	325;"	d
malloc	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	14;"	d
malloc	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	14;"	d
malloc	src/zmalloc.c	59;"	d	file:
malloc	src/zmalloc.c	64;"	d	file:
malloc_bin_stats_s	deps/jemalloc/include/jemalloc/internal/stats.h	/^struct malloc_bin_stats_s {$/;"	s
malloc_bin_stats_t	deps/jemalloc/include/jemalloc/internal/stats.h	/^typedef struct malloc_bin_stats_s malloc_bin_stats_t;$/;"	t	typeref:struct:malloc_bin_stats_s
malloc_conf	deps/jemalloc/include/jemalloc/jemalloc.h	323;"	d
malloc_conf	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	12;"	d
malloc_conf	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	12;"	d
malloc_conf	deps/jemalloc/test/integration/chunk.c	/^const char *malloc_conf = "junk:false";$/;"	v
malloc_conf	deps/jemalloc/test/integration/mallocx.c	/^const char *malloc_conf = "junk:false";$/;"	v
malloc_conf	deps/jemalloc/test/integration/xallocx.c	/^const char *malloc_conf = "junk:false";$/;"	v
malloc_conf	deps/jemalloc/test/unit/arena_reset.c	/^const char *malloc_conf = "prof:true,lg_prof_sample:0";$/;"	v
malloc_conf	deps/jemalloc/test/unit/decay.c	/^const char *malloc_conf = "purge:decay,decay_time:1";$/;"	v
malloc_conf	deps/jemalloc/test/unit/junk.c	/^const char *malloc_conf =$/;"	v
malloc_conf	deps/jemalloc/test/unit/lg_chunk.c	/^const char *malloc_conf = "lg_chunk:0";$/;"	v
malloc_conf	deps/jemalloc/test/unit/pack.c	/^const char *malloc_conf =$/;"	v
malloc_conf	deps/jemalloc/test/unit/prof_accum.c	/^const char *malloc_conf =$/;"	v
malloc_conf	deps/jemalloc/test/unit/prof_active.c	/^const char *malloc_conf =$/;"	v
malloc_conf	deps/jemalloc/test/unit/prof_gdump.c	/^const char *malloc_conf = "prof:true,prof_active:false,prof_gdump:true";$/;"	v
malloc_conf	deps/jemalloc/test/unit/prof_idump.c	/^const char *malloc_conf =$/;"	v
malloc_conf	deps/jemalloc/test/unit/prof_reset.c	/^const char *malloc_conf =$/;"	v
malloc_conf	deps/jemalloc/test/unit/prof_thread_name.c	/^const char *malloc_conf = "prof:true,prof_active:false";$/;"	v
malloc_conf	deps/jemalloc/test/unit/quarantine.c	/^const char *malloc_conf = "abort:false,junk:true,redzone:true,quarantine:"$/;"	v
malloc_conf	deps/jemalloc/test/unit/zero.c	/^const char *malloc_conf =$/;"	v
malloc_conf_error	deps/jemalloc/src/jemalloc.c	/^malloc_conf_error(const char *msg, const char *k, size_t klen, const char *v,$/;"	f	file:
malloc_conf_init	deps/jemalloc/src/jemalloc.c	/^malloc_conf_init(void)$/;"	f	file:
malloc_conf_next	deps/jemalloc/src/jemalloc.c	/^malloc_conf_next(char const **opts_p, char const **k_p, size_t *klen_p,$/;"	f	file:
malloc_cprintf	deps/jemalloc/include/jemalloc/internal/private_namespace.h	322;"	d
malloc_cprintf	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	322;"	d
malloc_cprintf	deps/jemalloc/src/util.c	/^malloc_cprintf(void (*write_cb)(void *, const char *), void *cbopaque,$/;"	f
malloc_dallocx	deps/jemalloc/test/stress/microbench.c	/^malloc_dallocx(void)$/;"	f	file:
malloc_free	deps/jemalloc/test/stress/microbench.c	/^malloc_free(void)$/;"	f	file:
malloc_huge_stats_s	deps/jemalloc/include/jemalloc/internal/stats.h	/^struct malloc_huge_stats_s {$/;"	s
malloc_huge_stats_t	deps/jemalloc/include/jemalloc/internal/stats.h	/^typedef struct malloc_huge_stats_s malloc_huge_stats_t;$/;"	t	typeref:struct:malloc_huge_stats_s
malloc_init	deps/jemalloc/src/jemalloc.c	/^malloc_init(void)$/;"	f
malloc_init_a0	deps/jemalloc/src/jemalloc.c	/^malloc_init_a0(void)$/;"	f
malloc_init_a0_initialized	deps/jemalloc/src/jemalloc.c	/^	malloc_init_a0_initialized	= 2,$/;"	e	enum:__anon15	file:
malloc_init_hard	deps/jemalloc/src/jemalloc.c	/^malloc_init_hard(void)$/;"	f	file:
malloc_init_hard_a0	deps/jemalloc/src/jemalloc.c	/^malloc_init_hard_a0(void)$/;"	f	file:
malloc_init_hard_a0_locked	deps/jemalloc/src/jemalloc.c	/^malloc_init_hard_a0_locked()$/;"	f	file:
malloc_init_hard_finish	deps/jemalloc/src/jemalloc.c	/^malloc_init_hard_finish(tsdn_t *tsdn)$/;"	f	file:
malloc_init_hard_needed	deps/jemalloc/src/jemalloc.c	/^malloc_init_hard_needed(void)$/;"	f	file:
malloc_init_hard_recursible	deps/jemalloc/src/jemalloc.c	/^malloc_init_hard_recursible(void)$/;"	f	file:
malloc_init_initialized	deps/jemalloc/src/jemalloc.c	/^	malloc_init_initialized		= 0 \/* Common case --> jnz. *\/$/;"	e	enum:__anon15	file:
malloc_init_recursible	deps/jemalloc/src/jemalloc.c	/^	malloc_init_recursible		= 1,$/;"	e	enum:__anon15	file:
malloc_init_state	deps/jemalloc/src/jemalloc.c	/^static malloc_init_t	malloc_init_state = malloc_init_uninitialized;$/;"	v	file:
malloc_init_t	deps/jemalloc/src/jemalloc.c	/^} malloc_init_t;$/;"	t	typeref:enum:__anon15	file:
malloc_init_uninitialized	deps/jemalloc/src/jemalloc.c	/^	malloc_init_uninitialized	= 3,$/;"	e	enum:__anon15	file:
malloc_initialized	deps/jemalloc/src/jemalloc.c	/^malloc_initialized(void)$/;"	f
malloc_initializer	deps/jemalloc/src/jemalloc.c	/^static bool			malloc_initializer = NO_INITIALIZER;$/;"	v	file:
malloc_initializer	deps/jemalloc/src/jemalloc.c	/^static pthread_t		malloc_initializer = NO_INITIALIZER;$/;"	v	file:
malloc_is_malloc	deps/jemalloc/src/jemalloc.c	2055;"	d	file:
malloc_large_stats_s	deps/jemalloc/include/jemalloc/internal/stats.h	/^struct malloc_large_stats_s {$/;"	s
malloc_large_stats_t	deps/jemalloc/include/jemalloc/internal/stats.h	/^typedef struct malloc_large_stats_s malloc_large_stats_t;$/;"	t	typeref:struct:malloc_large_stats_s
malloc_message	deps/jemalloc/include/jemalloc/jemalloc.h	324;"	d
malloc_message	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	13;"	d
malloc_message	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	13;"	d
malloc_mus_free	deps/jemalloc/test/stress/microbench.c	/^malloc_mus_free(void)$/;"	f	file:
malloc_mutex_assert_not_owner	deps/jemalloc/include/jemalloc/internal/mutex.h	/^malloc_mutex_assert_not_owner(tsdn_t *tsdn, malloc_mutex_t *mutex)$/;"	f
malloc_mutex_assert_not_owner	deps/jemalloc/include/jemalloc/internal/private_namespace.h	323;"	d
malloc_mutex_assert_not_owner	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	323;"	d
malloc_mutex_assert_owner	deps/jemalloc/include/jemalloc/internal/mutex.h	/^malloc_mutex_assert_owner(tsdn_t *tsdn, malloc_mutex_t *mutex)$/;"	f
malloc_mutex_assert_owner	deps/jemalloc/include/jemalloc/internal/private_namespace.h	324;"	d
malloc_mutex_assert_owner	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	324;"	d
malloc_mutex_boot	deps/jemalloc/include/jemalloc/internal/private_namespace.h	325;"	d
malloc_mutex_boot	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	325;"	d
malloc_mutex_boot	deps/jemalloc/src/mutex.c	/^malloc_mutex_boot(void)$/;"	f
malloc_mutex_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	326;"	d
malloc_mutex_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	326;"	d
malloc_mutex_init	deps/jemalloc/src/mutex.c	/^malloc_mutex_init(malloc_mutex_t *mutex, const char *name, witness_rank_t rank)$/;"	f
malloc_mutex_lock	deps/jemalloc/include/jemalloc/internal/mutex.h	/^malloc_mutex_lock(tsdn_t *tsdn, malloc_mutex_t *mutex)$/;"	f
malloc_mutex_lock	deps/jemalloc/include/jemalloc/internal/private_namespace.h	327;"	d
malloc_mutex_lock	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	327;"	d
malloc_mutex_postfork_child	deps/jemalloc/include/jemalloc/internal/private_namespace.h	328;"	d
malloc_mutex_postfork_child	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	328;"	d
malloc_mutex_postfork_child	deps/jemalloc/src/mutex.c	/^malloc_mutex_postfork_child(tsdn_t *tsdn, malloc_mutex_t *mutex)$/;"	f
malloc_mutex_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_namespace.h	329;"	d
malloc_mutex_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	329;"	d
malloc_mutex_postfork_parent	deps/jemalloc/src/mutex.c	/^malloc_mutex_postfork_parent(tsdn_t *tsdn, malloc_mutex_t *mutex)$/;"	f
malloc_mutex_prefork	deps/jemalloc/include/jemalloc/internal/private_namespace.h	330;"	d
malloc_mutex_prefork	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	330;"	d
malloc_mutex_prefork	deps/jemalloc/src/mutex.c	/^malloc_mutex_prefork(tsdn_t *tsdn, malloc_mutex_t *mutex)$/;"	f
malloc_mutex_s	deps/jemalloc/include/jemalloc/internal/mutex.h	/^struct malloc_mutex_s {$/;"	s
malloc_mutex_t	deps/jemalloc/include/jemalloc/internal/mutex.h	/^typedef struct malloc_mutex_s malloc_mutex_t;$/;"	t	typeref:struct:malloc_mutex_s
malloc_mutex_unlock	deps/jemalloc/include/jemalloc/internal/mutex.h	/^malloc_mutex_unlock(tsdn_t *tsdn, malloc_mutex_t *mutex)$/;"	f
malloc_mutex_unlock	deps/jemalloc/include/jemalloc/internal/private_namespace.h	331;"	d
malloc_mutex_unlock	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	331;"	d
malloc_nallocx_free	deps/jemalloc/test/stress/microbench.c	/^malloc_nallocx_free(void)$/;"	f	file:
malloc_ncpus	deps/jemalloc/src/jemalloc.c	/^malloc_ncpus(void)$/;"	f	file:
malloc_num	deps/pmdk/src/common/alloc.c	/^static __thread int malloc_num;$/;"	v	file:
malloc_printf	deps/jemalloc/include/jemalloc/internal/private_namespace.h	332;"	d
malloc_printf	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	332;"	d
malloc_printf	deps/jemalloc/src/util.c	/^malloc_printf(const char *format, ...)$/;"	f
malloc_sallocx_free	deps/jemalloc/test/stress/microbench.c	/^malloc_sallocx_free(void)$/;"	f	file:
malloc_sdallocx	deps/jemalloc/test/stress/microbench.c	/^malloc_sdallocx(void)$/;"	f	file:
malloc_slow	deps/jemalloc/src/jemalloc.c	/^static bool	malloc_slow = true;$/;"	v	file:
malloc_slow_flag_init	deps/jemalloc/src/jemalloc.c	/^malloc_slow_flag_init(void)$/;"	f	file:
malloc_slow_flags	deps/jemalloc/src/jemalloc.c	/^static uint8_t	malloc_slow_flags;$/;"	v	file:
malloc_snprintf	deps/jemalloc/include/jemalloc/internal/private_namespace.h	333;"	d
malloc_snprintf	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	333;"	d
malloc_snprintf	deps/jemalloc/src/util.c	/^malloc_snprintf(char *str, size_t size, const char *format, ...)$/;"	f
malloc_stats_print	deps/jemalloc/include/jemalloc/jemalloc.h	341;"	d
malloc_stats_print	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	30;"	d
malloc_stats_print	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	30;"	d
malloc_strtoumax	deps/jemalloc/include/jemalloc/internal/private_namespace.h	334;"	d
malloc_strtoumax	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	334;"	d
malloc_strtoumax	deps/jemalloc/src/util.c	/^malloc_strtoumax(const char *restrict nptr, char **restrict endptr, int base)$/;"	f
malloc_thread_init	deps/jemalloc/src/jemalloc.c	/^malloc_thread_init(void)$/;"	f
malloc_tsd_boot0	deps/jemalloc/include/jemalloc/internal/private_namespace.h	335;"	d
malloc_tsd_boot0	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	335;"	d
malloc_tsd_boot0	deps/jemalloc/src/tsd.c	/^malloc_tsd_boot0(void)$/;"	f
malloc_tsd_boot1	deps/jemalloc/include/jemalloc/internal/private_namespace.h	336;"	d
malloc_tsd_boot1	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	336;"	d
malloc_tsd_boot1	deps/jemalloc/src/tsd.c	/^malloc_tsd_boot1(void)$/;"	f
malloc_tsd_cleanup_register	deps/jemalloc/include/jemalloc/internal/private_namespace.h	337;"	d
malloc_tsd_cleanup_register	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	337;"	d
malloc_tsd_cleanup_register	deps/jemalloc/src/tsd.c	/^malloc_tsd_cleanup_register(bool (*f)(void))$/;"	f
malloc_tsd_cleanup_t	deps/jemalloc/include/jemalloc/internal/tsd.h	/^typedef bool (*malloc_tsd_cleanup_t)(void);$/;"	t
malloc_tsd_dalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	338;"	d
malloc_tsd_dalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	338;"	d
malloc_tsd_dalloc	deps/jemalloc/src/tsd.c	/^malloc_tsd_dalloc(void *wrapper)$/;"	f
malloc_tsd_data	deps/jemalloc/include/jemalloc/internal/tsd.h	138;"	d
malloc_tsd_data	deps/jemalloc/include/jemalloc/internal/tsd.h	145;"	d
malloc_tsd_data	deps/jemalloc/include/jemalloc/internal/tsd.h	151;"	d
malloc_tsd_data	deps/jemalloc/include/jemalloc/internal/tsd.h	159;"	d
malloc_tsd_data	deps/jemalloc/src/tsd.c	/^malloc_tsd_data(, , tsd_t, TSD_INITIALIZER)$/;"	f
malloc_tsd_externs	deps/jemalloc/include/jemalloc/internal/tsd.h	114;"	d
malloc_tsd_externs	deps/jemalloc/include/jemalloc/internal/tsd.h	119;"	d
malloc_tsd_externs	deps/jemalloc/include/jemalloc/internal/tsd.h	124;"	d
malloc_tsd_externs	deps/jemalloc/include/jemalloc/internal/tsd.h	129;"	d
malloc_tsd_funcs	deps/jemalloc/include/jemalloc/internal/tsd.h	174;"	d
malloc_tsd_funcs	deps/jemalloc/include/jemalloc/internal/tsd.h	240;"	d
malloc_tsd_funcs	deps/jemalloc/include/jemalloc/internal/tsd.h	304;"	d
malloc_tsd_funcs	deps/jemalloc/include/jemalloc/internal/tsd.h	437;"	d
malloc_tsd_malloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	339;"	d
malloc_tsd_malloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	339;"	d
malloc_tsd_no_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	340;"	d
malloc_tsd_no_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	340;"	d
malloc_tsd_no_cleanup	deps/jemalloc/src/tsd.c	/^malloc_tsd_no_cleanup(void *arg)$/;"	f
malloc_tsd_protos	deps/jemalloc/include/jemalloc/internal/tsd.h	98;"	d
malloc_tsd_types	deps/jemalloc/include/jemalloc/internal/tsd.h	80;"	d
malloc_tsd_types	deps/jemalloc/include/jemalloc/internal/tsd.h	82;"	d
malloc_tsd_types	deps/jemalloc/include/jemalloc/internal/tsd.h	84;"	d
malloc_tsd_types	deps/jemalloc/include/jemalloc/internal/tsd.h	90;"	d
malloc_tsd_types	deps/jemalloc/test/unit/tsd.c	/^malloc_tsd_types(data_, data_t)$/;"	f
malloc_usable_size	deps/jemalloc/include/jemalloc/jemalloc.h	342;"	d
malloc_usable_size	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	31;"	d
malloc_usable_size	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	31;"	d
malloc_utrace_t	deps/jemalloc/src/jemalloc.c	/^} malloc_utrace_t;$/;"	t	typeref:struct:__anon17	file:
malloc_vcprintf	deps/jemalloc/include/jemalloc/internal/private_namespace.h	341;"	d
malloc_vcprintf	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	341;"	d
malloc_vcprintf	deps/jemalloc/src/util.c	/^malloc_vcprintf(void (*write_cb)(void *, const char *), void *cbopaque,$/;"	f
malloc_vsnprintf	deps/jemalloc/include/jemalloc/internal/private_namespace.h	342;"	d
malloc_vsnprintf	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	342;"	d
malloc_vsnprintf	deps/jemalloc/src/util.c	/^malloc_vsnprintf(char *str, size_t size, const char *format, va_list ap)$/;"	f
malloc_write	deps/jemalloc/include/jemalloc/internal/private_namespace.h	343;"	d
malloc_write	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	343;"	d
malloc_write	deps/jemalloc/src/util.c	/^malloc_write(const char *s)$/;"	f
mallocs	deps/pmdk/src/test/set_funcs/set_funcs.c	/^	int mallocs;$/;"	m	struct:counters	file:
mallocx	deps/jemalloc/include/jemalloc/jemalloc.h	331;"	d
mallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	20;"	d
mallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	20;"	d
mallocx_free	deps/jemalloc/test/stress/microbench.c	/^mallocx_free(void)$/;"	f	file:
manualFailoverCheckTimeout	src/cluster.c	/^void manualFailoverCheckTimeout(void) {$/;"	f
many	deps/pmdk/src/test/obj_ctl_alloc_class/obj_ctl_alloc_class.c	/^many(const char *path)$/;"	f	file:
map	deps/pmdk/src/benchmarks/map_bench.cpp	/^	TOID(struct map) map;$/;"	m	struct:map_bench	file:
map	deps/pmdk/src/benchmarks/map_bench.cpp	/^	TOID(struct map) map;$/;"	m	struct:root	file:
map	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^	TOID(struct map) map;$/;"	m	struct:store_root	file:
map	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^	TOID(struct map) map;$/;"	m	struct:root	file:
map	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^	TOID(struct map) map;$/;"	m	struct:root	file:
map	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^POBJ_LAYOUT_BEGIN(map);$/;"	v
map	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^POBJ_LAYOUT_END(map);$/;"	v
map	deps/pmdk/src/libpmemobj/obj.h	/^		struct ravl *map;$/;"	m	struct:pmemobjpool::__anon117	typeref:struct:pmemobjpool::__anon117::ravl
map	deps/pmdk/src/libpmempool/pool.h	/^	uint32_t *map;$/;"	m	struct:arena
map_abort	deps/pmdk/src/libpmemblk/btt.c	/^map_abort(struct btt *bttp, unsigned lane, struct arena *arenap,$/;"	f	file:
map_all_unbroken_headers	deps/pmdk/src/libpmempool/replica.c	/^map_all_unbroken_headers(struct pool_set *set,$/;"	f	file:
map_bench	deps/pmdk/src/benchmarks/map_bench.cpp	/^struct map_bench {$/;"	s	file:
map_bench_args	deps/pmdk/src/benchmarks/map_bench.cpp	/^struct map_bench_args {$/;"	s	file:
map_bench_clos	deps/pmdk/src/benchmarks/map_bench.cpp	/^static struct benchmark_clo map_bench_clos[5];$/;"	v	typeref:struct:benchmark_clo	file:
map_bench_constructor	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_bench_constructor(void)$/;"	f
map_bench_get_init	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_bench_get_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
map_bench_get_init_worker	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_bench_get_init_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
map_bench_worker	deps/pmdk/src/benchmarks/map_bench.cpp	/^struct map_bench_worker {$/;"	s	file:
map_bias	deps/jemalloc/include/jemalloc/internal/private_namespace.h	344;"	d
map_bias	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	344;"	d
map_bias	deps/jemalloc/src/arena.c	/^size_t		map_bias;$/;"	v
map_bits	deps/jemalloc/include/jemalloc/internal/arena.h	/^	arena_chunk_map_bits_t	map_bits[1]; \/* Dynamically sized. *\/$/;"	m	struct:arena_chunk_s
map_btree_check	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^map_btree_check(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_btree_clear	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^map_btree_clear(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_btree_create	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^map_btree_create(PMEMobjpool *pop, TOID(struct map) *map, void *arg)$/;"	f	file:
map_btree_destroy	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^map_btree_destroy(PMEMobjpool *pop, TOID(struct map) *map)$/;"	f	file:
map_btree_foreach	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^map_btree_foreach(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_btree_get	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^map_btree_get(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_btree_insert	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^map_btree_insert(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_btree_insert_new	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^map_btree_insert_new(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_btree_is_empty	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^map_btree_is_empty(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_btree_lookup	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^map_btree_lookup(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_btree_remove	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^map_btree_remove(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_btree_remove_free	deps/pmdk/src/examples/libpmemobj/map/map_btree.c	/^map_btree_remove_free(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_check	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_check(struct map_ctx *mapc, TOID(struct map) map)$/;"	f
map_clear	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_clear(struct map_ctx *mapc, TOID(struct map) map)$/;"	f
map_cmd	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_cmd(struct map_ctx *mapc, TOID(struct map) map, unsigned cmd, uint64_t arg)$/;"	f
map_common_exit	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_common_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
map_common_free_worker	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_common_free_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
map_common_init	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_common_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
map_common_init_worker	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_common_init_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
map_count	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_count(struct map_ctx *mapc, TOID(struct map) map)$/;"	f
map_create	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_create(struct map_ctx *mapc, TOID(struct map) *map, void *arg)$/;"	f
map_ctree_check	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^map_ctree_check(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_ctree_clear	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^map_ctree_clear(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_ctree_create	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^map_ctree_create(PMEMobjpool *pop, TOID(struct map) *map, void *arg)$/;"	f	file:
map_ctree_destroy	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^map_ctree_destroy(PMEMobjpool *pop, TOID(struct map) *map)$/;"	f	file:
map_ctree_foreach	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^map_ctree_foreach(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_ctree_get	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^map_ctree_get(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_ctree_insert	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^map_ctree_insert(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_ctree_insert_new	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^map_ctree_insert_new(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_ctree_is_empty	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^map_ctree_is_empty(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_ctree_lookup	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^map_ctree_lookup(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_ctree_remove	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^map_ctree_remove(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_ctree_remove_free	deps/pmdk/src/examples/libpmemobj/map/map_ctree.c	/^map_ctree_remove_free(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_ctx	deps/pmdk/src/examples/libpmemobj/map/map.h	/^struct map_ctx {$/;"	s
map_ctx_free	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_ctx_free(struct map_ctx *mapc)$/;"	f
map_ctx_init	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_ctx_init(const struct map_ops *ops, PMEMobjpool *pop)$/;"	f
map_destroy	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_destroy(struct map_ctx *mapc, TOID(struct map) *map)$/;"	f
map_entry_check	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^map_entry_check(PMEMpoolcheck *ppc, location *loc, uint32_t i)$/;"	f	file:
map_entry_is_error	deps/pmdk/src/libpmemblk/btt.c	/^map_entry_is_error(uint32_t map_entry)$/;"	f	file:
map_entry_is_initial	deps/pmdk/src/libpmemblk/btt.c	/^map_entry_is_initial(uint32_t map_entry)$/;"	f
map_entry_is_zero	deps/pmdk/src/libpmemblk/btt.c	/^map_entry_is_zero(uint32_t map_entry)$/;"	f	file:
map_entry_is_zero_or_initial	deps/pmdk/src/libpmemblk/btt.c	/^map_entry_is_zero_or_initial(uint32_t map_entry)$/;"	f	file:
map_entry_setf	deps/pmdk/src/libpmemblk/btt.c	/^map_entry_setf(struct btt *bttp, unsigned lane, uint64_t lba, uint32_t setf)$/;"	f	file:
map_foreach	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_foreach(struct map_ctx *mapc, TOID(struct map) map,$/;"	f
map_get	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_get(struct map_ctx *mapc, TOID(struct map) map, uint64_t key)$/;"	f
map_get_exit	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_get_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
map_get_info	deps/pmdk/src/benchmarks/map_bench.cpp	/^static struct benchmark_info map_get_info;$/;"	v	typeref:struct:benchmark_info	file:
map_get_obj_op	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_get_obj_op(struct map_bench *map_bench, uint64_t key)$/;"	f	file:
map_get_op	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_get_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
map_get_postmap_lba	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^map_get_postmap_lba(struct arena *arenap, uint32_t i)$/;"	f	file:
map_get_root_op	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_get_root_op(struct map_bench *map_bench, uint64_t key)$/;"	f	file:
map_global_rand_keys_init	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_global_rand_keys_init(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
map_hm_atomic_check	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.c	/^map_hm_atomic_check(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_hm_atomic_cmd	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.c	/^map_hm_atomic_cmd(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_hm_atomic_count	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.c	/^map_hm_atomic_count(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_hm_atomic_create	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.c	/^map_hm_atomic_create(PMEMobjpool *pop, TOID(struct map) *map, void *arg)$/;"	f	file:
map_hm_atomic_foreach	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.c	/^map_hm_atomic_foreach(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_hm_atomic_get	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.c	/^map_hm_atomic_get(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_hm_atomic_init	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.c	/^map_hm_atomic_init(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_hm_atomic_insert	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.c	/^map_hm_atomic_insert(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_hm_atomic_lookup	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.c	/^map_hm_atomic_lookup(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_hm_atomic_remove	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_atomic.c	/^map_hm_atomic_remove(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_hm_rp_check	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.c	/^map_hm_rp_check(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_hm_rp_cmd	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.c	/^map_hm_rp_cmd(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_hm_rp_count	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.c	/^map_hm_rp_count(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_hm_rp_create	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.c	/^map_hm_rp_create(PMEMobjpool *pop, TOID(struct map) *map, void *arg)$/;"	f	file:
map_hm_rp_foreach	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.c	/^map_hm_rp_foreach(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_hm_rp_get	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.c	/^map_hm_rp_get(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_hm_rp_init	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.c	/^map_hm_rp_init(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_hm_rp_insert	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.c	/^map_hm_rp_insert(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_hm_rp_lookup	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.c	/^map_hm_rp_lookup(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_hm_rp_remove	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_rp.c	/^map_hm_rp_remove(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_hm_tx_check	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.c	/^map_hm_tx_check(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_hm_tx_cmd	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.c	/^map_hm_tx_cmd(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_hm_tx_count	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.c	/^map_hm_tx_count(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_hm_tx_create	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.c	/^map_hm_tx_create(PMEMobjpool *pop, TOID(struct map) *map, void *arg)$/;"	f	file:
map_hm_tx_foreach	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.c	/^map_hm_tx_foreach(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_hm_tx_get	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.c	/^map_hm_tx_get(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_hm_tx_init	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.c	/^map_hm_tx_init(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_hm_tx_insert	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.c	/^map_hm_tx_insert(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_hm_tx_lookup	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.c	/^map_hm_tx_lookup(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_hm_tx_remove	deps/pmdk/src/examples/libpmemobj/map/map_hashmap_tx.c	/^map_hm_tx_remove(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_init	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_init(struct map_ctx *mapc, TOID(struct map) map)$/;"	f
map_insert	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_insert(struct map_ctx *mapc, TOID(struct map) map,$/;"	f
map_insert_alloc_op	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_insert_alloc_op(struct map_bench *map_bench, uint64_t key)$/;"	f	file:
map_insert_info	deps/pmdk/src/benchmarks/map_bench.cpp	/^static struct benchmark_info map_insert_info;$/;"	v	typeref:struct:benchmark_info	file:
map_insert_init_worker	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_insert_init_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
map_insert_new	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_insert_new(struct map_ctx *mapc, TOID(struct map) map,$/;"	f
map_insert_op	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_insert_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
map_insert_root_op	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_insert_root_op(struct map_bench *map_bench, uint64_t key)$/;"	f	file:
map_is_empty	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_is_empty(struct map_ctx *mapc, TOID(struct map) map)$/;"	f
map_keys_exit	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_keys_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
map_keys_init	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_keys_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
map_lock	deps/pmdk/src/libpmemblk/btt.c	/^map_lock(struct btt *bttp, unsigned lane, struct arena *arenap,$/;"	f	file:
map_locks	deps/pmdk/src/libpmemblk/btt.c	/^		os_mutex_t *map_locks;$/;"	m	struct:btt::arena	file:
map_lookup	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_lookup(struct map_ctx *mapc, TOID(struct map) map, uint64_t key)$/;"	f
map_misc_offset	deps/jemalloc/include/jemalloc/internal/private_namespace.h	345;"	d
map_misc_offset	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	345;"	d
map_misc_offset	deps/jemalloc/src/arena.c	/^size_t		map_misc_offset;$/;"	v
map_ops	deps/pmdk/src/examples/libpmemobj/map/map.h	/^struct map_ops {$/;"	s
map_pmem	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^map_pmem(const char *path, size_t *mapped_len)$/;"	f	file:
map_rbtree_check	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^map_rbtree_check(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_rbtree_clear	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^map_rbtree_clear(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_rbtree_create	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^map_rbtree_create(PMEMobjpool *pop, TOID(struct map) *map, void *arg)$/;"	f	file:
map_rbtree_destroy	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^map_rbtree_destroy(PMEMobjpool *pop, TOID(struct map) *map)$/;"	f	file:
map_rbtree_foreach	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^map_rbtree_foreach(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_rbtree_get	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^map_rbtree_get(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_rbtree_insert	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^map_rbtree_insert(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_rbtree_insert_new	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^map_rbtree_insert_new(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_rbtree_is_empty	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^map_rbtree_is_empty(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_rbtree_lookup	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^map_rbtree_lookup(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_rbtree_remove	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^map_rbtree_remove(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_rbtree_remove_free	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^map_rbtree_remove_free(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_read	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^map_read(PMEMpoolcheck *ppc, struct arena *arenap)$/;"	f	file:
map_remove	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_remove(struct map_ctx *mapc, TOID(struct map) map, uint64_t key)$/;"	f
map_remove_exit	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_remove_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
map_remove_free	deps/pmdk/src/examples/libpmemobj/map/map.c	/^map_remove_free(struct map_ctx *mapc, TOID(struct map) map, uint64_t key)$/;"	f
map_remove_free_op	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_remove_free_op(struct map_bench *map_bench, uint64_t key)$/;"	f	file:
map_remove_info	deps/pmdk/src/benchmarks/map_bench.cpp	/^static struct benchmark_info map_remove_info;$/;"	v	typeref:struct:benchmark_info	file:
map_remove_init	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_remove_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
map_remove_init_worker	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_remove_init_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
map_remove_op	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_remove_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
map_remove_root_op	deps/pmdk/src/benchmarks/map_bench.cpp	/^map_remove_root_op(struct map_bench *map_bench, uint64_t key)$/;"	f	file:
map_rtree_check	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_check(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_rtree_clear	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_clear(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_rtree_create	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_create(PMEMobjpool *pop, TOID(struct map) *map, void *arg)$/;"	f	file:
map_rtree_destroy	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_destroy(PMEMobjpool *pop, TOID(struct map) *map)$/;"	f	file:
map_rtree_foreach	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_foreach(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_rtree_foreach_cb	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_foreach_cb(const unsigned char *key,$/;"	f	file:
map_rtree_get	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_get(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_rtree_insert	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_insert(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_rtree_insert_new	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_insert_new(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_rtree_is_empty	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_is_empty(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_rtree_lookup	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_lookup(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_rtree_remove	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_remove(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_rtree_remove_free	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^map_rtree_remove_free(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_skiplist_check	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^map_skiplist_check(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_skiplist_clear	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^map_skiplist_clear(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_skiplist_create	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^map_skiplist_create(PMEMobjpool *pop, TOID(struct map) *map, void *arg)$/;"	f	file:
map_skiplist_destroy	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^map_skiplist_destroy(PMEMobjpool *pop, TOID(struct map) *map)$/;"	f	file:
map_skiplist_foreach	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^map_skiplist_foreach(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_skiplist_get	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^map_skiplist_get(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_skiplist_insert	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^map_skiplist_insert(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_skiplist_insert_new	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^map_skiplist_insert_new(PMEMobjpool *pop, TOID(struct map) map,$/;"	f	file:
map_skiplist_is_empty	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^map_skiplist_is_empty(PMEMobjpool *pop, TOID(struct map) map)$/;"	f	file:
map_skiplist_lookup	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^map_skiplist_lookup(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_skiplist_remove	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^map_skiplist_remove(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_skiplist_remove_free	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^map_skiplist_remove_free(PMEMobjpool *pop, TOID(struct map) map, uint64_t key)$/;"	f	file:
map_sync	deps/pmdk/src/common/set.h	/^	int map_sync;		\/* part has been mapped with MAP_SYNC flag *\/$/;"	m	struct:pool_set_part
map_tracker	deps/pmdk/src/common/mmap.h	/^struct map_tracker {$/;"	s
map_types	deps/pmdk/src/benchmarks/map_bench.cpp	/^} map_types[] = {$/;"	v	typeref:struct:__anon115	file:
map_unlock	deps/pmdk/src/libpmemblk/btt.c	/^map_unlock(struct btt *bttp, unsigned lane, struct arena *arenap,$/;"	f	file:
map_value	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^struct map_value {$/;"	s	file:
mapc	deps/pmdk/src/benchmarks/map_bench.cpp	/^	struct map_ctx *mapc;$/;"	m	struct:map_bench	typeref:struct:map_bench::map_ctx	file:
mapc	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^static struct map_ctx *mapc;$/;"	v	typeref:struct:map_ctx	file:
mapc	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^static struct map_ctx *mapc;$/;"	v	typeref:struct:map_ctx	file:
mapc	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	struct map_ctx *mapc;$/;"	m	struct:pmemobjfs	typeref:struct:pmemobjfs::map_ctx	file:
maplen	deps/pmdk/src/tools/daxio/daxio.c	/^	size_t maplen;		\/* mapping length *\/$/;"	m	struct:daxio_device	file:
mapoff	deps/pmdk/src/libpmemblk/btt.c	/^		uint64_t mapoff;	\/* offset to area map *\/$/;"	m	struct:btt::arena	file:
mapoff	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint64_t mapoff;		\/* offset to area map *\/$/;"	m	struct:btt_info
mapped	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	size_t			mapped;$/;"	m	struct:ctl_stats_s
mapped	deps/jemalloc/include/jemalloc/internal/stats.h	/^	size_t		mapped;$/;"	m	struct:arena_stats_s
mapped_len	deps/pmdk/src/benchmarks/rpmem.cpp	/^	size_t mapped_len;	\/* mapped length *\/$/;"	m	struct:rpmem_bench	file:
maps	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^} maps[] = {$/;"	v	typeref:struct:__anon98	file:
maps_coalesce	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^static const bool maps_coalesce =$/;"	v
mapsize	deps/pmdk/src/libpmempool/pool.h	/^	size_t mapsize;$/;"	m	struct:arena
margs	deps/pmdk/src/benchmarks/map_bench.cpp	/^	struct map_bench_args *margs;$/;"	m	struct:map_bench	typeref:struct:map_bench::map_bench_args	file:
markNodeAsFailingIfNeeded	src/cluster.c	/^void markNodeAsFailingIfNeeded(clusterNode *node) {$/;"	f
marker_cli_parser	deps/pmdk/src/tools/pmreorder/markerparser.py	/^    def marker_cli_parser(self, macros):$/;"	m	class:MarkerParser
marker_file_parser	deps/pmdk/src/tools/pmreorder/markerparser.py	/^    def marker_file_parser(self, macros):$/;"	m	class:MarkerParser
markfinalized	deps/lua/src/lgc.c	44;"	d	file:
markmt	deps/lua/src/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:
markobject	deps/lua/src/lgc.c	55;"	d	file:
markroot	deps/lua/src/lgc.c	/^static void markroot (lua_State *L) {$/;"	f	file:
marktmu	deps/lua/src/lgc.c	/^static void marktmu (global_State *g) {$/;"	f	file:
markupval	deps/lua/src/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:
markvalue	deps/lua/src/lgc.c	52;"	d	file:
mask	src/ae.h	/^    int mask; \/* one of AE_(READABLE|WRITABLE) *\/$/;"	m	struct:aeFileEvent
mask	src/ae.h	/^    int mask;$/;"	m	struct:aeFiredEvent
maskmarks	deps/lua/src/lgc.c	32;"	d	file:
master	src/sentinel.c	/^    struct sentinelRedisInstance *master; \/* Master instance if it's slave. *\/$/;"	m	struct:sentinelRedisInstance	typeref:struct:sentinelRedisInstance::sentinelRedisInstance	file:
master	src/server.h	/^    client *master;     \/* Client that is master for this slave *\/$/;"	m	struct:redisServer
masterTryPartialResynchronization	src/replication.c	/^int masterTryPartialResynchronization(client *c) {$/;"	f
master_link_down_time	src/sentinel.c	/^    mstime_t master_link_down_time; \/* Slave replication link down time. *\/$/;"	m	struct:sentinelRedisInstance	file:
master_repl_offset	src/server.h	/^    long long master_repl_offset;   \/* Global replication offset *\/$/;"	m	struct:redisServer
masterauth	src/server.h	/^    char *masterauth;               \/* AUTH with this password with master *\/$/;"	m	struct:redisServer
masterdownerr	src/server.h	/^    *masterdownerr, *roslaveerr, *execaborterr, *noautherr, *noreplicaserr,$/;"	m	struct:sharedObjectsStruct
masterhost	src/server.h	/^    char *masterhost;               \/* Hostname of master *\/$/;"	m	struct:redisServer
masterport	src/server.h	/^    int masterport;                 \/* Port of master *\/$/;"	m	struct:redisServer
masters	src/sentinel.c	/^    dict *masters;      \/* Dictionary of master sentinelRedisInstances.$/;"	m	struct:sentinelState	file:
match	deps/lua/src/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:
match	deps/pmdk/src/test/match	/^sub match {$/;"	s
match	deps/pmdk/src/test/unittest/basetest.py	/^    match = True$/;"	v	class:BaseTest
match	deps/pmdk/src/test/unittest/unittest.sh	/^function match() {$/;"	f
match	src/adlist.h	/^    int (*match)(void *ptr, void *key);$/;"	m	struct:list
match_capture	deps/lua/src/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:
match_class	deps/lua/src/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:
match_dev_dax	deps/pmdk/src/tools/daxio/daxio.c	/^match_dev_dax(struct daxio_device *dev, struct daxctl_region *dax_region)$/;"	f	file:
matchbalance	deps/lua/src/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:
matchbracketclass	deps/lua/src/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:
math_abs	deps/lua/src/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:
math_acos	deps/lua/src/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:
math_asin	deps/lua/src/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:
math_atan	deps/lua/src/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:
math_atan2	deps/lua/src/lmathlib.c	/^static int math_atan2 (lua_State *L) {$/;"	f	file:
math_ceil	deps/lua/src/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:
math_cos	deps/lua/src/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:
math_cosh	deps/lua/src/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:
math_deg	deps/lua/src/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:
math_exp	deps/lua/src/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:
math_floor	deps/lua/src/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:
math_fmod	deps/lua/src/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:
math_frexp	deps/lua/src/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:
math_ldexp	deps/lua/src/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:
math_log	deps/lua/src/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:
math_log10	deps/lua/src/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:
math_max	deps/lua/src/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:
math_min	deps/lua/src/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:
math_modf	deps/lua/src/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:
math_pow	deps/lua/src/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:
math_rad	deps/lua/src/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:
math_random	deps/lua/src/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:
math_randomseed	deps/lua/src/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:
math_sin	deps/lua/src/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:
math_sinh	deps/lua/src/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:
math_sqrt	deps/lua/src/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:
math_tan	deps/lua/src/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:
math_tanh	deps/lua/src/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:
mathlib	deps/lua/src/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
max	deps/geohash-int/geohash.h	/^    double max;$/;"	m	struct:__anon144
max	deps/jemalloc/include/jemalloc/internal/prof.h	/^	unsigned	max;$/;"	m	struct:__anon11
max	deps/pmdk/src/benchmarks/benchmark.hpp	/^		int64_t max;$/;"	m	struct:benchmark_clo::__anon113
max	deps/pmdk/src/benchmarks/benchmark.hpp	/^		uint64_t max;$/;"	m	struct:benchmark_clo::__anon114
max	deps/pmdk/src/benchmarks/benchmark.hpp	/^	double max;$/;"	m	struct:results
max	deps/pmdk/src/benchmarks/benchmark.hpp	/^	uint64_t max;$/;"	m	struct:latency
max	deps/pmdk/src/benchmarks/clo.cpp	52;"	d	file:
max	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_READ_HANDLER(max)(void *ctx,$/;"	f	file:
max	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_WRITE_HANDLER(max)(void *ctx,$/;"	f	file:
max	deps/pmdk/src/libpmemobj/pmalloc.c	/^static const struct ctl_argument CTL_ARG(max) = CTL_ARG_LONG_LONG;$/;"	v	typeref:struct:CTL_ARG	file:
max	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	55;"	d
max	src/latency.h	/^    uint32_t max;           \/* Max of current samples. *\/$/;"	m	struct:latencyStats
max	src/latency.h	/^    uint32_t max; \/* Max latency observed for this event. *\/$/;"	m	struct:latencyTimeSeries
max	src/redis-cli.c	/^    long long max;   \/* Max latency to fit into this interval (usec). *\/$/;"	m	struct:distsamples	file:
max	src/server.h	/^    double min, max;$/;"	m	struct:__anon165
max	src/server.h	/^    robj *min, *max;  \/* May be set to shared.(minstring|maxstring) *\/$/;"	m	struct:__anon166
max	src/sparkline.h	/^    double min, max;$/;"	m	struct:sequence
max_edges	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_edges = 10$/;"	v	class:ObjDefragAdvanced
max_edges	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_edges = 32$/;"	v	class:TEST4
max_edges	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_edges = 32$/;"	v	class:TEST5
max_edges	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_edges = 5$/;"	v	class:TEST0
max_edges	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_edges = 5$/;"	v	class:TEST1
max_edges	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_edges = 64$/;"	v	class:TEST2
max_edges	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_edges = 64$/;"	v	class:TEST3
max_edges	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	unsigned max_edges; \/* max # of edges per node *\/$/;"	m	struct:vgraph_params
max_expand	deps/lua/src/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:
max_free_block	deps/pmdk/src/libpmemobj/recycler.h	/^	uint32_t max_free_block;$/;"	m	struct:recycler_element
max_key	deps/pmdk/src/benchmarks/map_bench.cpp	/^	uint64_t max_key;$/;"	m	struct:map_bench_args	file:
max_lanes	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	/^	uint64_t max_lanes;$/;"	m	struct:rpmemd_config
max_len	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	size_t max_len;      \/* maximum list length *\/$/;"	m	struct:obj_bench	file:
max_level	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	unsigned max_level;$/;"	m	struct:obj_tx_worker	file:
max_name	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint64_t max_name;$/;"	m	struct:pmemobjfs	file:
max_nodes	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_nodes = 128$/;"	v	class:TEST4
max_nodes	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_nodes = 2048$/;"	v	class:TEST1
max_nodes	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_nodes = 256$/;"	v	class:TEST3
max_nodes	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_nodes = 256$/;"	v	class:TEST5
max_nodes	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_nodes = 5$/;"	v	class:TEST0
max_nodes	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_nodes = 50$/;"	v	class:ObjDefragAdvanced
max_nodes	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_nodes = 512$/;"	v	class:TEST2
max_nodes	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	unsigned max_nodes; \/* max # of nodes per graph *\/$/;"	m	struct:vgraph_params
max_pattern_size	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	unsigned max_pattern_size;$/;"	m	struct:vgraph_params
max_processing_chunk	src/rio.h	/^    size_t max_processing_chunk;$/;"	m	struct:_rio
max_rounds	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    max_rounds = 10$/;"	v	class:ObjDefragAdvanced
max_rounds	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	unsigned max_rounds;$/;"	m	struct:create_n_defrag_params_t	file:
max_size	deps/pmdk/src/tools/pmempool/create.c	/^	int max_size;$/;"	m	struct:pmempool_create	file:
max_wq_size	deps/pmdk/src/librpmem/rpmem.c	/^	size_t max_wq_size;		\/* max WQ size supported by provider *\/$/;"	m	struct:rpmem_pool	file:
max_wq_size	deps/pmdk/src/librpmem/rpmem_fip.h	/^	size_t max_wq_size;$/;"	m	struct:rpmem_fip_attr
max_wq_size	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	/^	size_t max_wq_size[MAX_RPMEM_PROV];$/;"	m	struct:rpmem_fip_probe
max_wq_size	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^	unsigned max_wq_size;$/;"	m	struct:fip_client	file:
maxbuf	deps/hiredis/hiredis.h	/^    size_t maxbuf; \/* Max length of unused buffer *\/$/;"	m	struct:redisReader
maxclients	src/server.h	/^    unsigned int maxclients;            \/* Max number of simultaneous clients *\/$/;"	m	struct:redisServer
maxex	src/server.h	/^    int minex, maxex; \/* are min or max exclusive? *\/$/;"	m	struct:__anon165
maxex	src/server.h	/^    int minex, maxex; \/* are min or max exclusive? *\/$/;"	m	struct:__anon166
maxfd	src/ae.h	/^    int maxfd;   \/* highest file descriptor currently registered *\/$/;"	m	struct:aeEventLoop
maxidletime	src/server.h	/^    int maxidletime;                \/* Client timeout in seconds *\/$/;"	m	struct:redisServer
maxlanes	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^	unsigned maxlanes;$/;"	m	struct:bbtcreate_options	file:
maxlen	src/scripting.c	/^    size_t maxlen;  \/* Max var dump \/ reply length. *\/$/;"	m	struct:ldbState	file:
maxlen_hint_sent	src/scripting.c	/^    int maxlen_hint_sent; \/* Did we already hint about "set maxlen"? *\/$/;"	m	struct:ldbState	file:
maxmemory	src/server.h	/^    unsigned long long maxmemory;   \/* Max number of memory bytes to use *\/$/;"	m	struct:redisServer
maxmemory_policy	src/server.h	/^    int maxmemory_policy;           \/* Policy for key eviction *\/$/;"	m	struct:redisServer
maxmemory_policy_enum	src/config.c	/^configEnum maxmemory_policy_enum[] = {$/;"	v
maxmemory_samples	src/server.h	/^    int maxmemory_samples;          \/* Pricision of random sampling *\/$/;"	m	struct:redisServer
maxn	deps/lua/src/ltablib.c	/^static int maxn (lua_State *L) {$/;"	f	file:
maxrows	deps/linenoise/linenoise.c	/^    size_t maxrows;     \/* Maximum num of rows used so far (multiline mode) *\/$/;"	m	struct:linenoiseState	file:
maxstacksize	deps/lua/src/lobject.h	/^  lu_byte maxstacksize;$/;"	m	struct:Proto
maxstring	src/server.h	/^    *lpush, *emptyscan, *minstring, *maxstring,$/;"	m	struct:sharedObjectsStruct
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_clflush.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_clflushopt.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_clwb.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_empty.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f_noflush.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_clflush.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_clflushopt.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_clwb.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_empty.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx_noflush.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_clflush.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_clflushopt.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_clwb.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_empty.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2_noflush.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_clflush.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_clflushopt.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_clwb.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_empty.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f_noflush.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_clflush.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_clflushopt.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_clwb.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_empty.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx_noflush.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_clflush.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_clflushopt.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_clwb.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_empty.c	35;"	d	file:
maybe_barrier	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2_noflush.c	35;"	d	file:
mb_delim	src/redis-cli.c	/^    sds mb_delim;$/;"	m	struct:config	file:
mb_ops	deps/pmdk/src/libpmemobj/memblock.c	/^static const struct memory_block_ops mb_ops[MAX_MEMORY_BLOCK] = {$/;"	v	typeref:struct:memory_block_ops	file:
mb_write	deps/jemalloc/include/jemalloc/internal/mb.h	/^mb_write(void)$/;"	f
mb_write	deps/jemalloc/include/jemalloc/internal/private_namespace.h	346;"	d
mb_write	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	346;"	d
mbulkhdr	src/server.h	/^    *mbulkhdr[OBJ_SHARED_BULKHDR_LEN], \/* "*<value>\\r\\n" *\/$/;"	m	struct:sharedObjectsStruct
mc	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^POBJ_LAYOUT_BEGIN(mc);$/;"	v
mc	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^POBJ_LAYOUT_END(mc);$/;"	v
measure_time	deps/pmdk/src/benchmarks/benchmark.hpp	/^	bool measure_time;$/;"	m	struct:benchmark_info
med	deps/pmdk/src/benchmarks/benchmark.hpp	/^	double med;$/;"	m	struct:results
med3	src/pqsort.c	/^med3(char *a, char *b, char *c,$/;"	f	file:
mem_fn	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^typedef void *(*mem_fn)(void *, const void *, size_t);$/;"	t	file:
memalign	deps/jemalloc/include/jemalloc/jemalloc.h	343;"	d
memalign	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	32;"	d
memalign	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	32;"	d
member	src/geo.h	/^    char *member;$/;"	m	struct:geoPoint
membersOfAllNeighbors	src/geo.c	/^int membersOfAllNeighbors(robj *zobj, GeoHashRadius n, double lon, double lat, double radius, geoArray *ga) {$/;"	f
membersOfGeoHashBox	src/geo.c	/^int membersOfGeoHashBox(robj *zobj, GeoHashBits hash, geoArray *ga, double lon, double lat, double radius) {$/;"	f
memblock_detect_type	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_detect_type(struct palloc_heap *heap, const struct memory_block *m)$/;"	f	file:
memblock_from_offset	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_from_offset(struct palloc_heap *heap, uint64_t off)$/;"	f
memblock_from_offset_opt	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_from_offset_opt(struct palloc_heap *heap, uint64_t off, int size)$/;"	f
memblock_header_compact_get_extra	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_compact_get_extra(const struct memory_block *m)$/;"	f	file:
memblock_header_compact_get_flags	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_compact_get_flags(const struct memory_block *m)$/;"	f	file:
memblock_header_compact_get_size	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_compact_get_size(const struct memory_block *m)$/;"	f	file:
memblock_header_compact_invalidate	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_compact_invalidate(const struct memory_block *m)$/;"	f	file:
memblock_header_compact_reinit	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_compact_reinit(const struct memory_block *m)$/;"	f	file:
memblock_header_compact_write	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_compact_write(const struct memory_block *m,$/;"	f	file:
memblock_header_legacy_get_extra	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_legacy_get_extra(const struct memory_block *m)$/;"	f	file:
memblock_header_legacy_get_flags	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_legacy_get_flags(const struct memory_block *m)$/;"	f	file:
memblock_header_legacy_get_size	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_legacy_get_size(const struct memory_block *m)$/;"	f	file:
memblock_header_legacy_invalidate	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_legacy_invalidate(const struct memory_block *m)$/;"	f	file:
memblock_header_legacy_reinit	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_legacy_reinit(const struct memory_block *m)$/;"	f	file:
memblock_header_legacy_write	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_legacy_write(const struct memory_block *m,$/;"	f	file:
memblock_header_none_get_extra	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_none_get_extra(const struct memory_block *m)$/;"	f	file:
memblock_header_none_get_flags	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_none_get_flags(const struct memory_block *m)$/;"	f	file:
memblock_header_none_get_size	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_none_get_size(const struct memory_block *m)$/;"	f	file:
memblock_header_none_invalidate	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_none_invalidate(const struct memory_block *m)$/;"	f	file:
memblock_header_none_reinit	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_none_reinit(const struct memory_block *m)$/;"	f	file:
memblock_header_none_write	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_none_write(const struct memory_block *m,$/;"	f	file:
memblock_header_ops	deps/pmdk/src/libpmemobj/memblock.c	/^} memblock_header_ops[MAX_HEADER_TYPES] = {$/;"	v	typeref:struct:__anon133	file:
memblock_header_type	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_header_type(const struct memory_block *m)$/;"	f	file:
memblock_huge_init	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_huge_init(struct palloc_heap *heap,$/;"	f
memblock_rebuild_state	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_rebuild_state(struct palloc_heap *heap, struct memory_block *m)$/;"	f
memblock_run_bitmap	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_run_bitmap(uint32_t *size_idx, uint16_t flags,$/;"	f
memblock_run_default_nallocs	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_run_default_nallocs(uint32_t *size_idx, uint16_t flags,$/;"	f	file:
memblock_run_init	deps/pmdk/src/libpmemobj/memblock.c	/^memblock_run_init(struct palloc_heap *heap,$/;"	f
memblock_state	deps/pmdk/src/libpmemobj/memblock.h	/^enum memblock_state {$/;"	g
memcheck	deps/pmdk/src/test/obj_basic_integration/TESTS.py	/^    memcheck = t.DISABLE$/;"	v	class:TEST0
memcheck	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    memcheck = t.DISABLE$/;"	v	class:TEST5
memcheck	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    memcheck = t.DISABLE$/;"	v	class:BASE
memcheck	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    memcheck = vg.AUTO$/;"	v	class:TEST6
memcheck	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    memcheck = vg.AUTO$/;"	v	class:TEST8
memcheck	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    memcheck = t.DISABLE$/;"	v	class:TEST0
memcheck	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    memcheck = t.DISABLE$/;"	v	class:TEST2
memcheck	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    memcheck = t.ENABLE$/;"	v	class:TEST3
memcheck	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^    memcheck = t.DISABLE$/;"	v	class:TEST0
memcheck	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^    memcheck = t.ENABLE$/;"	v	class:TEST2
memcheck	deps/pmdk/src/test/obj_ulog_size/TESTS.py	/^    memcheck = t.DISABLE$/;"	v	class:TEST0
memcheck	deps/pmdk/src/test/obj_ulog_size/TESTS.py	/^    memcheck = t.ENABLE$/;"	v	class:TEST1
memcheck_check_leaks	deps/pmdk/src/test/unittest/basetest.py	/^    memcheck_check_leaks = True$/;"	v	class:BaseTest
memcpy	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	bool memcpy;$/;"	m	struct:pmem_args	file:
memcpy	deps/pmdk/src/libpmemobj/pmemops.h	/^	memcpy_fn memcpy; \/* persistent memcpy function *\/$/;"	m	struct:pmem_ops
memcpy_fn	deps/pmdk/src/libpmemobj/pmemops.h	/^typedef void *(*memcpy_fn)(void *base, void *dest, const void *src, size_t len,$/;"	t
memcpy_impl	deps/pmdk/src/libpmem/x86_64/init.c	/^enum memcpy_impl {$/;"	g	file:
memcpy_libc	deps/pmdk/src/test/obj_memops/obj_memops.c	/^memcpy_libc(void *ctx, void *dest, const void *src, size_t len, unsigned flags)$/;"	f	file:
memcpy_local	deps/pmdk/src/libpmemobj/obj.h	/^	memcpy_local_fn memcpy_local; \/* persistent memcpy function *\/$/;"	m	struct:pmemobjpool
memcpy_local_fn	deps/pmdk/src/libpmemobj/obj.h	/^typedef void *(*memcpy_local_fn)(void *dest, const void *src, size_t len,$/;"	t
memcpy_nodrain_count	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^memcpy_nodrain_count(void *dest, const void *src, size_t len, unsigned flags)$/;"	f	file:
memcpy_persist	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^	void *(*memcpy_persist)(void *pmemdest, const void *src, size_t len);$/;"	m	struct:result	file:
memcpy_persist	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	void *(*memcpy_persist)(void *pmemdest, const void *src, size_t len);$/;"	m	struct:rpmemd_fip	file:
memcpy_persist	deps/pmdk/src/tools/rpmemd/rpmemd_fip.h	/^	void *(*memcpy_persist)(void *pmemdest, const void *src, size_t len);$/;"	m	struct:rpmemd_fip_attr
memcpy_persist_count	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^memcpy_persist_count(void *dest, const void *src, size_t len, unsigned flags)$/;"	f	file:
memcpy_read	deps/pmdk/src/benchmarks/blk.cpp	/^memcpy_read(struct blk_bench *bb, struct benchmark_args *ba,$/;"	f	file:
memcpy_write	deps/pmdk/src/benchmarks/blk.cpp	/^memcpy_write(struct blk_bench *bb, struct benchmark_args *ba,$/;"	f	file:
memmove	deps/pmdk/src/libpmemobj/pmemops.h	/^	memmove_fn memmove; \/* persistent memmove function *\/$/;"	m	struct:pmem_ops
memmove_fn	deps/pmdk/src/libpmemobj/pmemops.h	/^typedef void *(*memmove_fn)(void *base, void *dest, const void *src, size_t len,$/;"	t
memmove_local	deps/pmdk/src/libpmemobj/obj.h	/^	memmove_local_fn memmove_local; \/* persistent memmove function *\/$/;"	m	struct:pmemobjpool
memmove_local_fn	deps/pmdk/src/libpmemobj/obj.h	/^typedef void *(*memmove_local_fn)(void *dest, const void *src, size_t len,$/;"	t
memmove_mov16x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f.h	/^memmove_mov16x64b(char *dest, const char *src)$/;"	f
memmove_mov1x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx.h	/^memmove_mov1x64b(char *dest, const char *src)$/;"	f
memmove_mov1x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f.h	/^memmove_mov1x64b(char *dest, const char *src)$/;"	f
memmove_mov1x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2.h	/^memmove_mov1x64b(char *dest, const char *src)$/;"	f
memmove_mov2x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx.h	/^memmove_mov2x64b(char *dest, const char *src)$/;"	f
memmove_mov2x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f.h	/^memmove_mov2x64b(char *dest, const char *src)$/;"	f
memmove_mov2x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2.h	/^memmove_mov2x64b(char *dest, const char *src)$/;"	f
memmove_mov32x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f.h	/^memmove_mov32x64b(char *dest, const char *src)$/;"	f
memmove_mov4x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx.h	/^memmove_mov4x64b(char *dest, const char *src)$/;"	f
memmove_mov4x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f.h	/^memmove_mov4x64b(char *dest, const char *src)$/;"	f
memmove_mov4x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2.h	/^memmove_mov4x64b(char *dest, const char *src)$/;"	f
memmove_mov8x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx.h	/^memmove_mov8x64b(char *dest, const char *src)$/;"	f
memmove_mov8x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f.h	/^memmove_mov8x64b(char *dest, const char *src)$/;"	f
memmove_mov_avx512f_bw	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f.h	/^memmove_mov_avx512f_bw(char *dest, const char *src, size_t len)$/;"	f
memmove_mov_avx512f_fw	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx512f.h	/^memmove_mov_avx512f_fw(char *dest, const char *src, size_t len)$/;"	f
memmove_mov_avx_bw	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx.h	/^memmove_mov_avx_bw(char *dest, const char *src, size_t len)$/;"	f
memmove_mov_avx_fw	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_avx.h	/^memmove_mov_avx_fw(char *dest, const char *src, size_t len)$/;"	f
memmove_mov_sse_bw	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2.h	/^memmove_mov_sse_bw(char *dest, const char *src, size_t len)$/;"	f
memmove_mov_sse_fw	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_t_sse2.h	/^memmove_mov_sse_fw(char *dest, const char *src, size_t len)$/;"	f
memmove_movnt16x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^memmove_movnt16x64b(char *dest, const char *src)$/;"	f
memmove_movnt1x16b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx.h	/^memmove_movnt1x16b(char *dest, const char *src)$/;"	f
memmove_movnt1x16b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^memmove_movnt1x16b(char *dest, const char *src)$/;"	f
memmove_movnt1x16b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2.h	/^memmove_movnt1x16b(char *dest, const char *src)$/;"	f
memmove_movnt1x32b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx.h	/^memmove_movnt1x32b(char *dest, const char *src)$/;"	f
memmove_movnt1x32b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^memmove_movnt1x32b(char *dest, const char *src)$/;"	f
memmove_movnt1x32b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2.h	/^memmove_movnt1x32b(char *dest, const char *src)$/;"	f
memmove_movnt1x4b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx.h	/^memmove_movnt1x4b(char *dest, const char *src)$/;"	f
memmove_movnt1x4b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^memmove_movnt1x4b(char *dest, const char *src)$/;"	f
memmove_movnt1x4b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2.h	/^memmove_movnt1x4b(char *dest, const char *src)$/;"	f
memmove_movnt1x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx.h	/^memmove_movnt1x64b(char *dest, const char *src)$/;"	f
memmove_movnt1x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^memmove_movnt1x64b(char *dest, const char *src)$/;"	f
memmove_movnt1x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2.h	/^memmove_movnt1x64b(char *dest, const char *src)$/;"	f
memmove_movnt1x8b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx.h	/^memmove_movnt1x8b(char *dest, const char *src)$/;"	f
memmove_movnt1x8b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^memmove_movnt1x8b(char *dest, const char *src)$/;"	f
memmove_movnt1x8b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2.h	/^memmove_movnt1x8b(char *dest, const char *src)$/;"	f
memmove_movnt2x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx.h	/^memmove_movnt2x64b(char *dest, const char *src)$/;"	f
memmove_movnt2x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^memmove_movnt2x64b(char *dest, const char *src)$/;"	f
memmove_movnt2x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2.h	/^memmove_movnt2x64b(char *dest, const char *src)$/;"	f
memmove_movnt32x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^memmove_movnt32x64b(char *dest, const char *src)$/;"	f
memmove_movnt4x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx.h	/^memmove_movnt4x64b(char *dest, const char *src)$/;"	f
memmove_movnt4x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^memmove_movnt4x64b(char *dest, const char *src)$/;"	f
memmove_movnt4x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2.h	/^memmove_movnt4x64b(char *dest, const char *src)$/;"	f
memmove_movnt8x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx.h	/^memmove_movnt8x64b(char *dest, const char *src)$/;"	f
memmove_movnt8x64b	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^memmove_movnt8x64b(char *dest, const char *src)$/;"	f
memmove_movnt_avx512f_bw	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^memmove_movnt_avx512f_bw(char *dest, const char *src, size_t len)$/;"	f
memmove_movnt_avx512f_fw	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx512f.h	/^memmove_movnt_avx512f_fw(char *dest, const char *src, size_t len)$/;"	f
memmove_movnt_avx_bw	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx.h	/^memmove_movnt_avx_bw(char *dest, const char *src, size_t len)$/;"	f
memmove_movnt_avx_fw	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_avx.h	/^memmove_movnt_avx_fw(char *dest, const char *src, size_t len)$/;"	f
memmove_movnt_sse_bw	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2.h	/^memmove_movnt_sse_bw(char *dest, const char *src, size_t len)$/;"	f
memmove_movnt_sse_fw	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_nt_sse2.h	/^memmove_movnt_sse_fw(char *dest, const char *src, size_t len)$/;"	f
memmove_nodrain	deps/pmdk/src/libpmem/pmem.h	/^	memmove_nodrain_func memmove_nodrain;$/;"	m	struct:pmem_funcs
memmove_nodrain_func	deps/pmdk/src/libpmem/pmem.h	/^typedef void *(*memmove_nodrain_func)(void *pmemdest, const void *src,$/;"	t
memmove_nodrain_generic	deps/pmdk/src/libpmem/memops_generic.c	/^memmove_nodrain_generic(void *dst, const void *src, size_t len,$/;"	f
memmove_nodrain_libc	deps/pmdk/src/libpmem/aarch64/init.c	/^memmove_nodrain_libc(void *pmemdest, const void *src, size_t len,$/;"	f	file:
memmove_nodrain_libc	deps/pmdk/src/libpmem/x86_64/init.c	/^memmove_nodrain_libc(void *pmemdest, const void *src, size_t len,$/;"	f	file:
memmove_small_avx	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_avx.h	/^memmove_small_avx(char *dest, const char *src, size_t len)$/;"	f
memmove_small_avx512f	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_avx512f.h	/^memmove_small_avx512f(char *dest, const char *src, size_t len)$/;"	f
memmove_small_avx_noflush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_avx.h	/^memmove_small_avx_noflush(char *dest, const char *src, size_t len)$/;"	f
memmove_small_sse2	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_sse2.h	/^memmove_small_sse2(char *dest, const char *src, size_t len)$/;"	f
memmove_small_sse2_noflush	deps/pmdk/src/libpmem/x86_64/memcpy/memcpy_sse2.h	/^memmove_small_sse2_noflush(char *dest, const char *src, size_t len)$/;"	f
memory_block	deps/pmdk/src/libpmemobj/memblock.h	/^struct memory_block {$/;"	s
memory_block_ops	deps/pmdk/src/libpmemobj/memblock.h	/^struct memory_block_ops {$/;"	s
memory_block_reserved	deps/pmdk/src/libpmemobj/memblock.h	/^struct memory_block_reserved {$/;"	s
memory_block_type	deps/pmdk/src/libpmemobj/memblock.h	/^enum memory_block_type {$/;"	g
memory_map	deps/pmdk/src/tools/pmreorder/utils.py	/^def memory_map(filename, size=0, access=mmap.ACCESS_WRITE, offset=0):$/;"	f
memory_order	deps/pmdk/src/common/util.h	/^} memory_order;$/;"	t	typeref:enum:__anon85
memory_order	deps/pmdk/src/common/util.h	/^} memory_order;$/;"	t	typeref:enum:__anon86
memory_order_acq_rel	deps/pmdk/src/common/util.h	/^	memory_order_acq_rel = __ATOMIC_ACQ_REL,$/;"	e	enum:__anon85
memory_order_acq_rel	deps/pmdk/src/common/util.h	/^	memory_order_acq_rel,$/;"	e	enum:__anon86
memory_order_acquire	deps/pmdk/src/common/util.h	/^	memory_order_acquire = __ATOMIC_ACQUIRE,$/;"	e	enum:__anon85
memory_order_acquire	deps/pmdk/src/common/util.h	/^	memory_order_acquire,$/;"	e	enum:__anon86
memory_order_consume	deps/pmdk/src/common/util.h	/^	memory_order_consume = __ATOMIC_CONSUME,$/;"	e	enum:__anon85
memory_order_consume	deps/pmdk/src/common/util.h	/^	memory_order_consume,$/;"	e	enum:__anon86
memory_order_relaxed	deps/pmdk/src/common/util.h	/^	memory_order_relaxed = __ATOMIC_RELAXED,$/;"	e	enum:__anon85
memory_order_relaxed	deps/pmdk/src/common/util.h	/^	memory_order_relaxed,$/;"	e	enum:__anon86
memory_order_release	deps/pmdk/src/common/util.h	/^	memory_order_release = __ATOMIC_RELEASE,$/;"	e	enum:__anon85
memory_order_release	deps/pmdk/src/common/util.h	/^	memory_order_release,$/;"	e	enum:__anon86
memory_order_seq_cst	deps/pmdk/src/common/util.h	/^	memory_order_seq_cst = __ATOMIC_SEQ_CST$/;"	e	enum:__anon85
memory_order_seq_cst	deps/pmdk/src/common/util.h	/^	memory_order_seq_cst$/;"	e	enum:__anon86
memrev16	src/endianconv.c	/^void memrev16(void *p) {$/;"	f
memrev16ifbe	src/endianconv.h	49;"	d
memrev16ifbe	src/endianconv.h	56;"	d
memrev32	src/endianconv.c	/^void memrev32(void *p) {$/;"	f
memrev32ifbe	src/endianconv.h	50;"	d
memrev32ifbe	src/endianconv.h	57;"	d
memrev64	src/endianconv.c	/^void memrev64(void *p) {$/;"	f
memrev64ifbe	src/endianconv.h	51;"	d
memrev64ifbe	src/endianconv.h	58;"	d
memrevifle	deps/lua/src/lua_cmsgpack.c	/^void memrevifle(void *ptr, size_t len) {$/;"	f
memset	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	bool memset;       \/* use libc memset function *\/$/;"	m	struct:memset_args	file:
memset	deps/pmdk/src/libpmemobj/pmemops.h	/^	memset_fn memset; \/* persistent memset function *\/$/;"	m	struct:pmem_ops
memset_args	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^struct memset_args {$/;"	s	file:
memset_bench	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^struct memset_bench {$/;"	s	file:
memset_clo	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^static struct benchmark_clo memset_clo[7];$/;"	v	typeref:struct:benchmark_clo	file:
memset_exit	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^memset_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
memset_fn	deps/pmdk/src/libpmemobj/pmemops.h	/^typedef void *(*memset_fn)(void *base, void *dest, int c, size_t len,$/;"	t
memset_info	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^static struct benchmark_info memset_info;$/;"	v	typeref:struct:benchmark_info	file:
memset_init	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^memset_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
memset_libc	deps/pmdk/src/test/obj_memops/obj_memops.c	/^memset_libc(void *ctx, void *ptr, int c, size_t sz, unsigned flags)$/;"	f	file:
memset_local	deps/pmdk/src/libpmemobj/obj.h	/^	memset_local_fn memset_local; \/* persistent memset function *\/$/;"	m	struct:pmemobjpool
memset_local_fn	deps/pmdk/src/libpmemobj/obj.h	/^typedef void *(*memset_local_fn)(void *dest, int c, size_t len, unsigned flags);$/;"	t
memset_mov16x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f.h	/^memset_mov16x64b(char *dest, __m512i zmm)$/;"	f
memset_mov1x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx.h	/^memset_mov1x64b(char *dest, __m256i ymm)$/;"	f
memset_mov1x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f.h	/^memset_mov1x64b(char *dest, __m512i zmm)$/;"	f
memset_mov1x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2.h	/^memset_mov1x64b(char *dest, __m128i xmm)$/;"	f
memset_mov2x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx.h	/^memset_mov2x64b(char *dest, __m256i ymm)$/;"	f
memset_mov2x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f.h	/^memset_mov2x64b(char *dest, __m512i zmm)$/;"	f
memset_mov2x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2.h	/^memset_mov2x64b(char *dest, __m128i xmm)$/;"	f
memset_mov32x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f.h	/^memset_mov32x64b(char *dest, __m512i zmm)$/;"	f
memset_mov4x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx.h	/^memset_mov4x64b(char *dest, __m256i ymm)$/;"	f
memset_mov4x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f.h	/^memset_mov4x64b(char *dest, __m512i zmm)$/;"	f
memset_mov4x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_sse2.h	/^memset_mov4x64b(char *dest, __m128i xmm)$/;"	f
memset_mov8x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx.h	/^memset_mov8x64b(char *dest, __m256i ymm)$/;"	f
memset_mov8x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_t_avx512f.h	/^memset_mov8x64b(char *dest, __m512i zmm)$/;"	f
memset_movnt16x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f.h	/^memset_movnt16x64b(char *dest, __m512i zmm)$/;"	f
memset_movnt1x16b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx.h	/^memset_movnt1x16b(char *dest, __m256i ymm)$/;"	f
memset_movnt1x16b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f.h	/^memset_movnt1x16b(char *dest, __m256i ymm)$/;"	f
memset_movnt1x16b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2.h	/^memset_movnt1x16b(char *dest, __m128i xmm)$/;"	f
memset_movnt1x32b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx.h	/^memset_movnt1x32b(char *dest, __m256i ymm)$/;"	f
memset_movnt1x32b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f.h	/^memset_movnt1x32b(char *dest, __m256i ymm)$/;"	f
memset_movnt1x32b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2.h	/^memset_movnt1x32b(char *dest, __m128i xmm)$/;"	f
memset_movnt1x4b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx.h	/^memset_movnt1x4b(char *dest, __m256i ymm)$/;"	f
memset_movnt1x4b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f.h	/^memset_movnt1x4b(char *dest, __m256i ymm)$/;"	f
memset_movnt1x4b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2.h	/^memset_movnt1x4b(char *dest, __m128i xmm)$/;"	f
memset_movnt1x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx.h	/^memset_movnt1x64b(char *dest, __m256i ymm)$/;"	f
memset_movnt1x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f.h	/^memset_movnt1x64b(char *dest, __m512i zmm)$/;"	f
memset_movnt1x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2.h	/^memset_movnt1x64b(char *dest, __m128i xmm)$/;"	f
memset_movnt1x8b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx.h	/^memset_movnt1x8b(char *dest, __m256i ymm)$/;"	f
memset_movnt1x8b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f.h	/^memset_movnt1x8b(char *dest, __m256i ymm)$/;"	f
memset_movnt1x8b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2.h	/^memset_movnt1x8b(char *dest, __m128i xmm)$/;"	f
memset_movnt2x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx.h	/^memset_movnt2x64b(char *dest, __m256i ymm)$/;"	f
memset_movnt2x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f.h	/^memset_movnt2x64b(char *dest, __m512i zmm)$/;"	f
memset_movnt2x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2.h	/^memset_movnt2x64b(char *dest, __m128i xmm)$/;"	f
memset_movnt32x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f.h	/^memset_movnt32x64b(char *dest, __m512i zmm)$/;"	f
memset_movnt4x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx.h	/^memset_movnt4x64b(char *dest, __m256i ymm)$/;"	f
memset_movnt4x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f.h	/^memset_movnt4x64b(char *dest, __m512i zmm)$/;"	f
memset_movnt4x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_sse2.h	/^memset_movnt4x64b(char *dest, __m128i xmm)$/;"	f
memset_movnt8x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx.h	/^memset_movnt8x64b(char *dest, __m256i ymm)$/;"	f
memset_movnt8x64b	deps/pmdk/src/libpmem/x86_64/memset/memset_nt_avx512f.h	/^memset_movnt8x64b(char *dest, __m512i zmm)$/;"	f
memset_nodrain	deps/pmdk/src/libpmem/pmem.h	/^	memset_nodrain_func memset_nodrain;$/;"	m	struct:pmem_funcs
memset_nodrain_count	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^memset_nodrain_count(void *dest, size_t len, unsigned flags)$/;"	f	file:
memset_nodrain_func	deps/pmdk/src/libpmem/pmem.h	/^typedef void *(*memset_nodrain_func)(void *pmemdest, int c, size_t len,$/;"	t
memset_nodrain_generic	deps/pmdk/src/libpmem/memops_generic.c	/^memset_nodrain_generic(void *dst, int c, size_t len, unsigned flags)$/;"	f
memset_nodrain_libc	deps/pmdk/src/libpmem/aarch64/init.c	/^memset_nodrain_libc(void *pmemdest, int c, size_t len, unsigned flags)$/;"	f	file:
memset_nodrain_libc	deps/pmdk/src/libpmem/x86_64/init.c	/^memset_nodrain_libc(void *pmemdest, int c, size_t len, unsigned flags)$/;"	f	file:
memset_op	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^memset_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
memset_persist_count	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^memset_persist_count(void *dest, size_t len, unsigned flags)$/;"	f	file:
memset_small_avx	deps/pmdk/src/libpmem/x86_64/memset/memset_avx.h	/^memset_small_avx(char *dest, __m256i ymm, size_t len)$/;"	f
memset_small_avx512f	deps/pmdk/src/libpmem/x86_64/memset/memset_avx512f.h	/^memset_small_avx512f(char *dest, __m256i ymm, size_t len)$/;"	f
memset_small_avx_noflush	deps/pmdk/src/libpmem/x86_64/memset/memset_avx.h	/^memset_small_avx_noflush(char *dest, __m256i ymm, size_t len)$/;"	f
memset_small_sse2	deps/pmdk/src/libpmem/x86_64/memset/memset_sse2.h	/^memset_small_sse2(char *dest, __m128i xmm, size_t len)$/;"	f
memset_small_sse2_noflush	deps/pmdk/src/libpmem/x86_64/memset/memset_sse2.h	/^memset_small_sse2_noflush(char *dest, __m128i xmm, size_t len)$/;"	f
memtest	src/memtest.c	/^void memtest(size_t megabytes, int passes) {$/;"	f
memtest_addressing	src/memtest.c	/^int memtest_addressing(unsigned long *l, size_t bytes, int interactive) {$/;"	f
memtest_alloc_and_test	src/memtest.c	/^void memtest_alloc_and_test(size_t megabytes, int passes) {$/;"	f
memtest_compare	src/memtest.c	/^int memtest_compare(unsigned long *l, size_t bytes, int interactive) {$/;"	f
memtest_compare_times	src/memtest.c	/^int memtest_compare_times(unsigned long *m, size_t bytes, int pass, int times,$/;"	f
memtest_fill_random	src/memtest.c	/^void memtest_fill_random(unsigned long *l, size_t bytes, int interactive) {$/;"	f
memtest_fill_value	src/memtest.c	/^void memtest_fill_value(unsigned long *l, size_t bytes, unsigned long v1,$/;"	f
memtest_preserving_test	src/memtest.c	/^int memtest_preserving_test(unsigned long *m, size_t bytes, int passes) {$/;"	f
memtest_progress_end	src/memtest.c	/^void memtest_progress_end(void) {$/;"	f
memtest_progress_start	src/memtest.c	/^void memtest_progress_start(char *title, int pass) {$/;"	f
memtest_progress_step	src/memtest.c	/^void memtest_progress_step(size_t curr, size_t size, char c) {$/;"	f
memtest_test	src/memtest.c	/^int memtest_test(unsigned long *m, size_t bytes, int passes, int interactive) {$/;"	f
memtest_test_linux_anonymous_maps	src/debug.c	/^int memtest_test_linux_anonymous_maps(void) {$/;"	f
memtoll	src/util.c	/^long long memtoll(const char *p, int *err) {$/;"	f
merge	deps/jemalloc/include/jemalloc/jemalloc.h	/^	chunk_merge_t		*merge;$/;"	m	struct:__anon14
merge	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^	chunk_merge_t		*merge;$/;"	m	struct:__anon1
merge_entries	deps/pmdk/src/libpmemobj/memops.c	/^	VECQ(, struct ulog_entry_val *) merge_entries;$/;"	m	struct:operation_context	file:
message_len	src/cluster.h	/^    uint32_t message_len;$/;"	m	struct:__anon171
messagebulk	src/server.h	/^    *busykeyerr, *oomerr, *plus, *messagebulk, *pmessagebulk, *subscribebulk,$/;"	m	struct:sharedObjectsStruct
metadata	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	size_t			metadata;$/;"	m	struct:ctl_stats_s
metadata_allocated	deps/jemalloc/include/jemalloc/internal/stats.h	/^	size_t		metadata_allocated; \/* Protected via atomic_*_z(). *\/$/;"	m	struct:arena_stats_s
metadata_mapped	deps/jemalloc/include/jemalloc/internal/stats.h	/^	size_t		metadata_mapped;$/;"	m	struct:arena_stats_s
metatable	deps/lua/src/lobject.h	/^    struct Table *metatable;$/;"	m	struct:Udata::__anon25	typeref:struct:Udata::__anon25::Table
metatable	deps/lua/src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Table	typeref:struct:Table::Table
mf_can_start	src/cluster.h	/^    int mf_can_start;           \/* If non-zero signal that the manual failover$/;"	m	struct:clusterState
mf_end	src/cluster.h	/^    mstime_t mf_end;            \/* Manual failover time limit (ms unixtime).$/;"	m	struct:clusterState
mf_master_offset	src/cluster.h	/^    long long mf_master_offset; \/* Master offset the slave needs to start MF$/;"	m	struct:clusterState
mf_slave	src/cluster.h	/^    clusterNode *mf_slave;      \/* Slave performing the manual failover. *\/$/;"	m	struct:clusterState
mflags	src/cluster.h	/^    unsigned char mflags[3]; \/* Message flags: CLUSTERMSG_FLAG[012]_... *\/$/;"	m	struct:__anon177
mgetCommand	src/t_string.c	/^void mgetCommand(client *c) {$/;"	f
microseconds	src/server.h	/^    long long microseconds, calls;$/;"	m	struct:redisCommand
migrateCacheDictType	src/server.c	/^dictType migrateCacheDictType = {$/;"	v
migrateCachedSocket	src/cluster.c	/^typedef struct migrateCachedSocket {$/;"	s	file:
migrateCachedSocket	src/cluster.c	/^} migrateCachedSocket;$/;"	t	typeref:struct:migrateCachedSocket	file:
migrateCloseSocket	src/cluster.c	/^void migrateCloseSocket(robj *host, robj *port) {$/;"	f
migrateCloseTimedoutSockets	src/cluster.c	/^void migrateCloseTimedoutSockets(void) {$/;"	f
migrateCommand	src/cluster.c	/^void migrateCommand(client *c) {$/;"	f
migrateGetKeys	src/db.c	/^int *migrateGetKeys(struct redisCommand *cmd, robj **argv, int argc, int *numkeys) {$/;"	f
migrateGetSocket	src/cluster.c	/^migrateCachedSocket* migrateGetSocket(client *c, robj *host, robj *port, long timeout) {$/;"	f
migrate_cached_sockets	src/server.h	/^    dict *migrate_cached_sockets;\/* MIGRATE cached sockets *\/$/;"	m	struct:redisServer
migrating_slots_to	src/cluster.h	/^    clusterNode *migrating_slots_to[CLUSTER_SLOTS];$/;"	m	struct:clusterState
min	deps/geohash-int/geohash.h	/^    double min;$/;"	m	struct:__anon144
min	deps/pmdk/src/benchmarks/benchmark.hpp	/^		int64_t min;$/;"	m	struct:benchmark_clo::__anon113
min	deps/pmdk/src/benchmarks/benchmark.hpp	/^		uint64_t min;$/;"	m	struct:benchmark_clo::__anon114
min	deps/pmdk/src/benchmarks/benchmark.hpp	/^	double min;$/;"	m	struct:results
min	deps/pmdk/src/benchmarks/benchmark.hpp	/^	uint64_t min;$/;"	m	struct:latency
min	deps/pmdk/src/benchmarks/clo.cpp	49;"	d	file:
min	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^min(int a, int b)$/;"	f	file:
min	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^min(int a, int b)$/;"	f	file:
min	deps/pmdk/src/libpmempool/check_util.h	54;"	d
min	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	54;"	d
min	deps/pmdk/src/tools/pmempool/common.h	87;"	d
min	src/latency.h	/^    uint32_t min;           \/* Min of current samples. *\/$/;"	m	struct:latencyStats
min	src/pqsort.c	49;"	d	file:
min	src/server.h	/^    double min, max;$/;"	m	struct:__anon165
min	src/server.h	/^    robj *min, *max;  \/* May be set to shared.(minstring|maxstring) *\/$/;"	m	struct:__anon166
min	src/sparkline.h	/^    double min, max;$/;"	m	struct:sequence
min_exe_time	deps/pmdk/src/benchmarks/benchmark.hpp	/^	unsigned min_exe_time;   \/* minimal execution time *\/$/;"	m	struct:benchmark_args
min_expand	deps/lua/src/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:
min_len	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	size_t min_len;      \/* initial list length *\/$/;"	m	struct:obj_bench	file:
min_pattern_size	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	unsigned min_pattern_size;$/;"	m	struct:vgraph_params
min_root_size	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    min_root_size = 0$/;"	v	class:ObjDefragAdvanced
min_root_size	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    min_root_size = 4096$/;"	v	class:TEST2
min_rsize	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	unsigned min_rsize; \/* minimum reallocation size *\/$/;"	m	struct:obj_tx_args	file:
min_size	deps/pmdk/src/benchmarks/log.cpp	/^	size_t min_size; \/* minimum size for random mode *\/$/;"	m	struct:prog_args	file:
min_size	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	unsigned min_size; \/* minimum random allocation size *\/$/;"	m	struct:obj_list_args	file:
min_size	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	unsigned min_size;$/;"	m	struct:pobj_args	file:
min_size	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	unsigned min_size;  \/* minimum allocation size *\/$/;"	m	struct:obj_tx_args	file:
min_size	deps/pmdk/src/benchmarks/rpmem.cpp	/^	size_t min_size;	  \/* minimum file size *\/$/;"	m	struct:rpmem_bench	file:
minex	src/server.h	/^    int minex, maxex; \/* are min or max exclusive? *\/$/;"	m	struct:__anon165
minex	src/server.h	/^    int minex, maxex; \/* are min or max exclusive? *\/$/;"	m	struct:__anon166
minimum	deps/pmdk/src/test/unittest/unittest.sh	/^minimum() {$/;"	f
minor	deps/pmdk/src/benchmarks/pmembench.cpp	/^	unsigned minor;$/;"	m	struct:version_s	file:
minor	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint16_t minor;			\/* minor version *\/$/;"	m	struct:btt_info
minor	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t minor;$/;"	m	struct:heap_header
minor	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint16_t minor;			\/* protocol version minor number *\/$/;"	m	struct:rpmem_msg_common
minor	deps/pmdk/src/tools/daxio/daxio.c	/^	unsigned minor;$/;"	m	struct:daxio_device	file:
minreplicas	src/server.h	/^    int minreplicas;        \/* MINREPLICAS for synchronous replication *\/$/;"	m	struct:multiState
minreplicas_timeout	src/server.h	/^    time_t minreplicas_timeout; \/* MINREPLICAS timeout as unixtime. *\/$/;"	m	struct:multiState
minsize	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^	size_t minsize;       \/* minimum size for random allocation size *\/$/;"	m	struct:prog_args	file:
minsize	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^	size_t minsize;       \/* minimum size for random allocation size *\/$/;"	m	struct:prog_args	file:
minstring	src/server.h	/^    *lpush, *emptyscan, *minstring, *maxstring,$/;"	m	struct:sharedObjectsStruct
mixDigest	src/debug.c	/^void mixDigest(unsigned char *digest, void *ptr, size_t len) {$/;"	f
mixObjectDigest	src/debug.c	/^void mixObjectDigest(unsigned char *digest, robj *o) {$/;"	f
mix_worker	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^mix_worker(void *arg)$/;"	f	file:
mkdirs	deps/pmdk/src/test/unittest/context.py	/^    def mkdirs(self, path, mode=None):$/;"	m	class:Context
mkfuncname	deps/lua/src/loadlib.c	/^static const char *mkfuncname (lua_State *L, const char *modname) {$/;"	f	file:
mlmode	deps/linenoise/linenoise.c	/^static int mlmode = 0;  \/* Multi line mode. Default is single line. *\/$/;"	v	file:
mm_recursion	deps/jemalloc/test/include/test/SFMT-sse2.h	/^JEMALLOC_ALWAYS_INLINE __m128i mm_recursion(__m128i *a, __m128i *b, $/;"	f
mmap	deps/pmdk/src/windows/win_mmap.c	/^mmap(void *addr, size_t len, int prot, int flags, int fd, os_off_t offset)$/;"	f
mmap_file_mapping_comparer	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^mmap_file_mapping_comparer(PFILE_MAPPING_TRACKER a, PFILE_MAPPING_TRACKER b)$/;"	f	file:
mmap_file_mapping_comparer	deps/pmdk/src/windows/win_mmap.c	/^mmap_file_mapping_comparer(PFILE_MAPPING_TRACKER a, PFILE_MAPPING_TRACKER b)$/;"	f	file:
mmap_flags	deps/jemalloc/src/pages.c	/^static int	mmap_flags;$/;"	v	file:
mmap_info	deps/pmdk/src/windows/win_mmap.c	/^mmap_info(void)$/;"	f	file:
mmap_reserve	deps/pmdk/src/windows/win_mmap.c	/^mmap_reserve(void *addr, size_t len)$/;"	f	file:
mmap_split	deps/pmdk/src/windows/win_mmap.c	/^mmap_split(PFILE_MAPPING_TRACKER mt, void *begin, void *end)$/;"	f	file:
mmap_unreserve	deps/pmdk/src/windows/win_mmap.c	/^mmap_unreserve(void *addr, size_t len)$/;"	f	file:
mock_drain	deps/pmdk/src/test/obj_lane/obj_lane.c	/^mock_drain(void *ctx)$/;"	f	file:
mock_flush	deps/pmdk/src/test/obj_lane/obj_lane.c	/^mock_flush(void *ctx, const void *addr, size_t len, unsigned flags)$/;"	f	file:
mock_get_real_data	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^mock_get_real_data(const struct memory_block *m)$/;"	f	file:
mock_get_real_size	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^mock_get_real_size(const struct memory_block *m)$/;"	f	file:
mock_memset	deps/pmdk/src/test/obj_lane/obj_lane.c	/^mock_memset(void *ctx, void *ptr, int c, size_t sz, unsigned flags)$/;"	f	file:
mock_obj	deps/pmdk/src/test/obj_sync/obj_sync.c	/^static struct mock_obj {$/;"	s	file:
mock_open_pool	deps/pmdk/src/test/obj_sync/obj_sync.c	/^mock_open_pool(PMEMobjpool *pop)$/;"	f	file:
mock_ops	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^static const struct memory_block_ops mock_ops = {$/;"	v	typeref:struct:memory_block_ops	file:
mock_options	deps/pmdk/src/test/util_poolset/util_poolset.c	/^mock_options(const char *arg)$/;"	f	file:
mock_persist	deps/pmdk/src/test/obj_lane/obj_lane.c	/^mock_persist(void *ctx, const void *addr, size_t len, unsigned flags)$/;"	f	file:
mock_pop	deps/pmdk/src/test/obj_heap/obj_heap.c	/^struct mock_pop {$/;"	s	file:
mock_pop	deps/pmdk/src/test/obj_lane/obj_lane.c	/^struct mock_pop {$/;"	s	file:
mock_pop	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^static PMEMobjpool *mock_pop;$/;"	v	file:
mock_pop	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^struct mock_pop {$/;"	s	file:
mode	deps/pmdk/src/benchmarks/blk.cpp	/^	enum op_mode mode;$/;"	m	struct:blk_bench	typeref:enum:blk_bench::op_mode	file:
mode	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	char *mode;      \/* stat, seq, rand *\/$/;"	m	struct:pmem_args	file:
mode	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	const char *mode;$/;"	m	struct:op_mode	file:
mode	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	char *mode;	\/* operation mode: stat, seq, rand *\/$/;"	m	struct:memset_args	file:
mode	deps/pmdk/src/benchmarks/rpmem.cpp	/^	char *mode;	\/* operation mode: stat, seq, rand *\/$/;"	m	struct:rpmem_args	file:
mode	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	int mode;		\/* operation mode *\/$/;"	m	struct:ds_context	file:
mode	deps/pmdk/src/libpmempool/pool.h	/^	mode_t mode;$/;"	m	struct:pool_params
mode	deps/pmdk/src/libpmempool/pool.h	/^	mode_t mode;$/;"	m	struct:pool_set_file
mode	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^enum mode {$/;"	g	file:
mode	deps/pmdk/src/tools/pmempool/common.h	/^	mode_t mode;$/;"	m	struct:pmem_pool_params
mode	deps/pmdk/src/tools/pmempool/common.h	/^	mode_t mode;$/;"	m	struct:pool_set_file
mode	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^	mode_t mode;$/;"	m	struct:rpmemd_db	file:
mode_check_license	deps/pmdk/utils/check_license/check-license.c	/^mode_check_license(const char *path_pattern, const char *path_to_check,$/;"	f	file:
mode_check_pattern	deps/pmdk/utils/check_license/check-license.c	/^mode_check_pattern(const char *path_license, const char *path_to_check)$/;"	f	file:
mode_create_pattern_file	deps/pmdk/utils/check_license/check-license.c	/^mode_create_pattern_file(const char *path_license, const char *path_pattern)$/;"	f	file:
mode_rand	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^mode_rand(struct pmem_bench *pmb, uint64_t index)$/;"	f	file:
mode_rand	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^mode_rand(struct pmem_bench *pmb, struct operation_info *info)$/;"	f	file:
mode_seq	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^mode_seq(struct pmem_bench *pmb, uint64_t index)$/;"	f	file:
mode_seq	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^mode_seq(struct pmem_bench *pmb, struct operation_info *info)$/;"	f	file:
mode_stat	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^mode_stat(struct pmem_bench *pmb, uint64_t index)$/;"	f	file:
mode_stat	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^mode_stat(struct pmem_bench *pmb, struct operation_info *info)$/;"	f	file:
mode_str	deps/pmdk/src/benchmarks/blk.cpp	/^	char *mode_str; \/* mode: stat, seq, rand *\/$/;"	m	struct:blk_args	file:
mode_t	deps/pmdk/src/include/pmemcompat.h	/^typedef int mode_t;$/;"	t
mode_t	deps/pmdk/src/windows/include/platform.h	/^typedef int mode_t;$/;"	t
modes	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^static struct op_mode modes[] = {$/;"	v	typeref:struct:op_mode	file:
modes	deps/pmdk/src/test/tools/extents/extents.c	/^enum modes {$/;"	g	file:
modinit	deps/lua/src/loadlib.c	/^static void modinit (lua_State *L, const char *modname) {$/;"	f	file:
monitor	deps/pmdk/src/librpmem/rpmem.c	/^	os_thread_t monitor;$/;"	m	struct:rpmem_pool	file:
monitor	deps/pmdk/src/librpmem/rpmem_fip.c	/^	os_thread_t monitor;$/;"	m	struct:rpmem_fip	file:
monitorCommand	src/server.c	/^void monitorCommand(client *c) {$/;"	f
monitor_mode	src/redis-cli.c	/^    int monitor_mode;$/;"	m	struct:config	file:
monitors	src/server.h	/^    list *slaves, *monitors;    \/* List of slaves and MONITORs *\/$/;"	m	struct:redisServer
monotonic_mock	deps/jemalloc/test/unit/decay.c	/^static bool monotonic_mock;$/;"	v	file:
most_recently_trimmed	deps/jemalloc/test/unit/junk.c	/^static void *most_recently_trimmed;$/;"	v	file:
moveCommand	src/db.c	/^void moveCommand(client *c) {$/;"	f
moveToNextTask	deps/hiredis/hiredis.c	/^static void moveToNextTask(redisReader *r) {$/;"	f	file:
move_aliens	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^move_aliens(PMEMobjpool *pop, TOID(struct root) r, int dx, int dy)$/;"	f	file:
move_inner_state	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def move_inner_state(self, in_op):$/;"	m	class:CollectingState
move_slot	src/redis-trib.rb	/^    def move_slot(source,target,slot,o={})$/;"	f	class:RedisTrib.alloc_slots
moved	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	POBJ_LIST_HEAD(moved_list, struct dummy_node) moved;$/;"	m	struct:dummy_root	file:
mp_buf	deps/lua/src/lua_cmsgpack.c	/^typedef struct mp_buf {$/;"	s	file:
mp_buf	deps/lua/src/lua_cmsgpack.c	/^} mp_buf;$/;"	t	typeref:struct:mp_buf	file:
mp_buf_append	deps/lua/src/lua_cmsgpack.c	/^void mp_buf_append(lua_State *L, mp_buf *buf, const unsigned char *s, size_t len) {$/;"	f
mp_buf_free	deps/lua/src/lua_cmsgpack.c	/^void mp_buf_free(lua_State *L, mp_buf *buf) {$/;"	f
mp_buf_new	deps/lua/src/lua_cmsgpack.c	/^mp_buf *mp_buf_new(lua_State *L) {$/;"	f
mp_cur	deps/lua/src/lua_cmsgpack.c	/^typedef struct mp_cur {$/;"	s	file:
mp_cur	deps/lua/src/lua_cmsgpack.c	/^} mp_cur;$/;"	t	typeref:struct:mp_cur	file:
mp_cur_consume	deps/lua/src/lua_cmsgpack.c	160;"	d	file:
mp_cur_init	deps/lua/src/lua_cmsgpack.c	/^void mp_cur_init(mp_cur *cursor, const unsigned char *s, size_t len) {$/;"	f
mp_cur_need	deps/lua/src/lua_cmsgpack.c	165;"	d	file:
mp_decode_to_lua_array	deps/lua/src/lua_cmsgpack.c	/^void mp_decode_to_lua_array(lua_State *L, mp_cur *c, size_t len) {$/;"	f
mp_decode_to_lua_hash	deps/lua/src/lua_cmsgpack.c	/^void mp_decode_to_lua_hash(lua_State *L, mp_cur *c, size_t len) {$/;"	f
mp_decode_to_lua_type	deps/lua/src/lua_cmsgpack.c	/^void mp_decode_to_lua_type(lua_State *L, mp_cur *c) {$/;"	f
mp_encode_array	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_array(lua_State *L, mp_buf *buf, int64_t n) {$/;"	f
mp_encode_bytes	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_bytes(lua_State *L, mp_buf *buf, const unsigned char *s, size_t len) {$/;"	f
mp_encode_double	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_double(lua_State *L, mp_buf *buf, double d) {$/;"	f
mp_encode_int	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_int(lua_State *L, mp_buf *buf, int64_t n) {$/;"	f
mp_encode_lua_bool	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_lua_bool(lua_State *L, mp_buf *buf) {$/;"	f
mp_encode_lua_integer	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_lua_integer(lua_State *L, mp_buf *buf) {$/;"	f
mp_encode_lua_null	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_lua_null(lua_State *L, mp_buf *buf) {$/;"	f
mp_encode_lua_number	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_lua_number(lua_State *L, mp_buf *buf) {$/;"	f
mp_encode_lua_string	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_lua_string(lua_State *L, mp_buf *buf) {$/;"	f
mp_encode_lua_table	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_lua_table(lua_State *L, mp_buf *buf, int level) {$/;"	f
mp_encode_lua_table_as_array	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_lua_table_as_array(lua_State *L, mp_buf *buf, int level) {$/;"	f
mp_encode_lua_table_as_map	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_lua_table_as_map(lua_State *L, mp_buf *buf, int level) {$/;"	f
mp_encode_lua_type	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_lua_type(lua_State *L, mp_buf *buf, int level) {$/;"	f
mp_encode_map	deps/lua/src/lua_cmsgpack.c	/^void mp_encode_map(lua_State *L, mp_buf *buf, int64_t n) {$/;"	f
mp_pack	deps/lua/src/lua_cmsgpack.c	/^int mp_pack(lua_State *L) {$/;"	f
mp_realloc	deps/lua/src/lua_cmsgpack.c	/^void *mp_realloc(lua_State *L, void *target, size_t osize,size_t nsize) {$/;"	f
mp_safe	deps/lua/src/lua_cmsgpack.c	/^int mp_safe(lua_State *L) {$/;"	f
mp_unpack	deps/lua/src/lua_cmsgpack.c	/^int mp_unpack(lua_State *L) {$/;"	f
mp_unpack_full	deps/lua/src/lua_cmsgpack.c	/^int mp_unpack_full(lua_State *L, int limit, int offset) {$/;"	f
mp_unpack_limit	deps/lua/src/lua_cmsgpack.c	/^int mp_unpack_limit(lua_State *L) {$/;"	f
mp_unpack_one	deps/lua/src/lua_cmsgpack.c	/^int mp_unpack_one(lua_State *L) {$/;"	f
mprotect	deps/pmdk/src/windows/win_mmap.c	/^mprotect(void *addr, size_t len, int prot)$/;"	f
mq_gen	deps/jemalloc/test/include/test/mq.h	31;"	d
mq_msg	deps/jemalloc/test/include/test/mq.h	29;"	d
mq_msg_s	deps/jemalloc/test/unit/mq.c	/^struct mq_msg_s {$/;"	s	file:
mq_msg_t	deps/jemalloc/test/unit/mq.c	/^typedef struct mq_msg_s mq_msg_t;$/;"	t	typeref:struct:mq_msg_s	file:
mq_nanosleep	deps/jemalloc/test/src/mq.c	/^mq_nanosleep(unsigned ns)$/;"	f
mr	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct fid_mr *mr; \/* local memory region *\/$/;"	m	struct:rpmem_fip	typeref:struct:rpmem_fip::fid_mr	file:
mr	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct fid_mr *mr;		\/* memory region for pool *\/$/;"	m	struct:rpmemd_fip	typeref:struct:rpmemd_fip::fid_mr	file:
mr_desc	deps/pmdk/src/librpmem/rpmem_fip.c	/^	void *mr_desc;	\/* local memory descriptor *\/$/;"	m	struct:rpmem_fip	file:
mresv	deps/pmdk/src/libpmemobj/palloc.c	/^			struct memory_block_reserved *mresv;$/;"	m	struct:pobj_action_internal::__anon127::__anon128	typeref:struct:pobj_action_internal::__anon127::__anon128::memory_block_reserved	file:
msetCommand	src/t_string.c	/^void msetCommand(client *c) {$/;"	f
msetGenericCommand	src/t_string.c	/^void msetGenericCommand(client *c, int nx) {$/;"	f
msetnxCommand	src/t_string.c	/^void msetnxCommand(client *c) {$/;"	f
msg	deps/pmdk/src/common/out.c	/^	char msg[MAXPRINT];$/;"	m	struct:errormsg	file:
msg	deps/pmdk/src/include/libpmempool.h	/^		const char *msg;$/;"	m	struct:pmempool_check_statusU::__anon47
msg	deps/pmdk/src/include/libpmempool.h	/^		const wchar_t *msg;$/;"	m	struct:pmempool_check_statusW::__anon48
msg	deps/pmdk/src/libpmempool/check_util.c	/^	char *msg;$/;"	m	struct:check_status	file:
msg	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^	struct fi_msg msg;	\/* message structure *\/$/;"	m	struct:rpmem_fip_msg	typeref:struct:rpmem_fip_msg::fi_msg
msg	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^	struct fi_msg_rma msg;	\/* message structure *\/$/;"	m	struct:rpmem_fip_rma	typeref:struct:rpmem_fip_rma::fi_msg_rma
msg	deps/pmdk/src/test/unittest/unittest.sh	/^function msg() {$/;"	f
msg	src/cluster.h	/^        clusterMsgDataPublish msg;$/;"	m	struct:clusterMsgData::__anon175
msg_buf	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^static uv_buf_t msg_buf = {0};$/;"	v	file:
msg_failed	deps/pmdk/src/test/tools/anonymous_mmap/check_max_mmap.sh	/^function msg_failed() {$/;"	f
msg_handler	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^typedef int (*msg_handler)(uv_stream_t *client, const char *msg, size_t len);$/;"	t	file:
msg_iov	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^	struct iovec msg_iov;	\/* IO vector buffer *\/$/;"	m	struct:rpmem_fip_rma	typeref:struct:rpmem_fip_rma::iovec
msg_skip	deps/pmdk/src/test/tools/anonymous_mmap/check_max_mmap.sh	/^function msg_skip() {$/;"	f
mstate	src/server.h	/^    multiState mstate;      \/* MULTI\/EXEC state *\/$/;"	m	struct:client
mstime	src/quicklist.c	/^static long long mstime(void) { return ustime() \/ 1000; }$/;"	f	file:
mstime	src/redis-benchmark.c	/^static long long mstime(void) {$/;"	f	file:
mstime	src/redis-cli.c	/^static long long mstime(void) {$/;"	f	file:
mstime	src/server.c	/^mstime_t mstime(void) {$/;"	f
mstime	src/server.h	/^    long long mstime;       \/* Like 'unixtime' but with milliseconds resolution. *\/$/;"	m	struct:redisServer
mstime_t	src/server.h	/^typedef long long mstime_t; \/* millisecond time type. *\/$/;"	t
msync	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	bool msync;	\/* perform msync operation *\/$/;"	m	struct:memset_args	file:
msync	deps/pmdk/src/windows/win_mmap.c	/^msync(void *addr, size_t len, int flags)$/;"	f
mt	deps/lua/src/lstate.h	/^  struct Table *mt[NUM_TAGS];  \/* metatables for basic types *\/$/;"	m	struct:global_State	typeref:struct:global_State::Table
mt.__index 	deps/lua/etc/strict.lua	/^mt.__index = function (t, n)$/;"	f
mt.__newindex 	deps/lua/etc/strict.lua	/^mt.__newindex = function (t, n, v)$/;"	f
mtime	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint32_t mtime; \/* time of last modification *\/$/;"	m	struct:objfs_inode	file:
mtime	deps/pmdk/src/libpmempool/pool.h	/^	time_t mtime;$/;"	m	struct:pool_set_file
mtime	deps/pmdk/src/tools/pmempool/common.h	/^	time_t mtime;$/;"	m	struct:pool_set_file
mtx	deps/jemalloc/test/unit/mtx.c	/^	mtx_t		mtx;$/;"	m	struct:__anon21	file:
mtx	deps/pmdk/src/test/obj_locks/obj_locks.c	/^	PMEMmutex mtx;$/;"	m	struct:locks	file:
mtx	deps/pmdk/src/test/obj_tx_mt/obj_tx_mt.c	/^static os_mutex_t mtx;$/;"	v	file:
mtx_fini	deps/jemalloc/test/src/mtx.c	/^mtx_fini(mtx_t *mtx)$/;"	f
mtx_init	deps/jemalloc/test/src/mtx.c	/^mtx_init(mtx_t *mtx)$/;"	f
mtx_lock	deps/jemalloc/test/src/mtx.c	/^mtx_lock(mtx_t *mtx)$/;"	f
mtx_t	deps/jemalloc/test/include/test/mtx.h	/^} mtx_t;$/;"	t	typeref:struct:__anon19
mtx_unlock	deps/jemalloc/test/src/mtx.c	/^mtx_unlock(mtx_t *mtx)$/;"	f
multiCmd	src/server.h	/^typedef struct multiCmd {$/;"	s
multiCmd	src/server.h	/^} multiCmd;$/;"	t	typeref:struct:multiCmd
multiCommand	src/multi.c	/^void multiCommand(client *c) {$/;"	f
multiCommand	src/server.h	/^    struct redisCommand *delCommand, *multiCommand, *lpushCommand, *lpopCommand,$/;"	m	struct:redisServer	typeref:struct:redisServer::
multiState	src/server.h	/^typedef struct multiState {$/;"	s
multiState	src/server.h	/^} multiState;$/;"	t	typeref:struct:multiState
multibulklen	src/server.h	/^    int multibulklen;       \/* Number of multi bulk arguments left to read. *\/$/;"	m	struct:client
multiops	deps/pmdk/src/benchmarks/benchmark.hpp	/^	bool multiops;$/;"	m	struct:benchmark_info
multithread	deps/pmdk/src/benchmarks/benchmark.hpp	/^	bool multithread;$/;"	m	struct:benchmark_info
munmap	deps/pmdk/src/windows/win_mmap.c	/^munmap(void *addr, size_t len)$/;"	f
mutex	deps/pmdk/src/libpmemobj/critnib.c	/^	os_mutex_t mutex; \/* writes\/removes *\/$/;"	m	struct:critnib	file:
mutex	deps/pmdk/src/libpmemobj/sync.h	/^			os_mutex_t mutex;$/;"	m	union:padded_pmemmutex::__anon118::__anon119
mutex	deps/pmdk/src/libpmemobj/tx.c	/^		PMEMmutex *mutex;$/;"	m	union:tx_lock_data::__anon132	file:
mutex	deps/pmdk/src/test/obj_sync/obj_sync.c	/^	PMEMmutex mutex;$/;"	m	struct:mock_obj	file:
mutex_bench	deps/pmdk/src/benchmarks/obj_locks.cpp	/^struct mutex_bench {$/;"	s	file:
mutex_check_worker	deps/pmdk/src/test/obj_sync/obj_sync.c	/^mutex_check_worker(void *arg)$/;"	f	file:
mutex_head	deps/pmdk/src/libpmemobj/obj.h	/^	PMEMmutex_internal *mutex_head;$/;"	m	struct:pmemobjpool
mutex_lock_nofail	deps/pmdk/src/benchmarks/map_bench.cpp	/^mutex_lock_nofail(os_mutex_t *lock)$/;"	f	file:
mutex_locked	deps/pmdk/src/test/obj_sync/obj_sync.c	/^	PMEMmutex mutex_locked;$/;"	m	struct:mock_obj	file:
mutex_u	deps/pmdk/src/libpmemobj/sync.h	/^		} mutex_u;$/;"	m	struct:padded_pmemmutex::__anon118	typeref:union:padded_pmemmutex::__anon118::__anon119
mutex_unlock_nofail	deps/pmdk/src/benchmarks/map_bench.cpp	/^mutex_unlock_nofail(os_mutex_t *lock)$/;"	f	file:
mutex_write_worker	deps/pmdk/src/test/obj_sync/obj_sync.c	/^mutex_write_worker(void *arg)$/;"	f	file:
mutexes	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	/^	PMEMmutex mutexes[NUM_LOCKS];$/;"	m	struct:transaction_data	file:
mutexes	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^	PMEMmutex mutexes[NUM_LOCKS];$/;"	m	struct:transaction_data	file:
mutexp	deps/pmdk/src/benchmarks/obj_locks.cpp	/^		os_mutex_t *mutexp; \/* pointer to os_thread mutex in RAM *\/$/;"	m	struct:padded_volatile_pmemmutex::__anon116	file:
my_context	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^struct ds_context my_context;$/;"	v	typeref:struct:ds_context
my_root	deps/pmdk/src/benchmarks/obj_locks.cpp	/^struct my_root {$/;"	s	file:
my_root	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^struct my_root {$/;"	s	file:
my_root	deps/pmdk/src/examples/libpmemobj/lists.c	/^struct my_root {$/;"	s	file:
my_root	deps/pmdk/src/examples/libpmemobj/string_store/layout.h	/^struct my_root {$/;"	s
my_root	deps/pmdk/src/examples/libpmemobj/string_store_tx/layout.h	/^struct my_root {$/;"	s
my_root	deps/pmdk/src/examples/libpmemobj/string_store_tx_type/layout.h	/^struct my_root {$/;"	s
my_root	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^struct my_root {$/;"	s	file:
my_root	deps/pmdk/src/test/obj_reorder_basic/obj_reorder_basic.c	/^struct my_root {$/;"	s	file:
my_root	deps/pmdk/utils/docker/test_package/test_package.c	/^struct my_root {$/;"	s	file:
myds	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^struct datastore myds;$/;"	v	typeref:struct:datastore
myid	src/sentinel.c	/^    char myid[CONFIG_RUN_ID_SIZE+1]; \/* This sentinel ID. *\/$/;"	m	struct:sentinelState	file:
myself	src/cluster.c	/^clusterNode *myself = NULL;$/;"	v
myself	src/cluster.h	/^    clusterNode *myself;  \/* This node *\/$/;"	m	struct:clusterState
myslots	src/cluster.h	/^    unsigned char myslots[CLUSTER_SLOTS\/8];$/;"	m	struct:__anon177
n	deps/lua/src/lobject.h	/^  lua_Number n;$/;"	m	union:__anon23
n	deps/lua/src/lua_bit.c	/^  lua_Number n;$/;"	m	union:__anon40	file:
n	deps/lua/src/lzio.h	/^  size_t n;			\/* bytes still unread *\/$/;"	m	struct:Zio
n	deps/lua/src/lzio.h	/^  size_t n;$/;"	m	struct:Mbuffer
n	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	art_node n;$/;"	m	struct:_art_node16
n	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	art_node n;$/;"	m	struct:_art_node256
n	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	art_node n;$/;"	m	struct:_art_node4
n	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	art_node n;$/;"	m	struct:_art_node48
n	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_node n;$/;"	m	struct:_art_node16
n	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_node n;$/;"	m	struct:_art_node256
n	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_node n;$/;"	m	struct:_art_node4
n	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	art_node n;$/;"	m	struct:_art_node48
n	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	int n; \/* number of occupied slots *\/$/;"	m	struct:tree_map_node	file:
n	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^	struct tree_map_entry *n = &D_RW(map)->root;$/;"	m	struct:parent	typeref:struct:parent::tree_map_entry	file:
n	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^	unsigned n;	\/* index *\/$/;"	m	struct:fibo_t	file:
n	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^	TOID(struct node) n;$/;"	m	struct:root	file:
nCcalls	deps/lua/src/lstate.h	/^  unsigned short nCcalls;  \/* number of nested C calls *\/$/;"	m	struct:lua_State
n_bytes	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t n_bytes;$/;"	m	struct:pmem_obj_type_stats
n_chunks	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t n_chunks;$/;"	m	struct:pmem_obj_zone_stats
n_chunks_type	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t n_chunks_type[MAX_CHUNK_TYPE];$/;"	m	struct:pmem_obj_zone_stats
n_cl_stores	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	unsigned n_cl_stores;$/;"	m	struct:ops_counter	file:
n_drain	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	unsigned n_drain;$/;"	m	struct:ops_counter	file:
n_drain_from_pmem_memcpy	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	unsigned n_drain_from_pmem_memcpy;$/;"	m	struct:ops_counter	file:
n_drain_from_pmem_memset	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	unsigned n_drain_from_pmem_memset;$/;"	m	struct:ops_counter	file:
n_elm	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	size_t n_elm;		     \/* number of elements in array *\/$/;"	m	struct:obj_worker	file:
n_files_bbs	deps/pmdk/src/common/badblock.c	/^	int n_files_bbs;	\/* number of files with bad blocks *\/$/;"	m	struct:check_file_cb	file:
n_flush_from_pmem_memcpy	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	unsigned n_flush_from_pmem_memcpy;$/;"	m	struct:ops_counter	file:
n_flush_from_pmem_memset	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	unsigned n_flush_from_pmem_memset;$/;"	m	struct:ops_counter	file:
n_flushing_ops_per_thread	deps/pmdk/src/benchmarks/rpmem.cpp	/^	unsigned n_flushing_ops_per_thread; \/* # of operation which require$/;"	m	struct:rpmem_bench	file:
n_locks	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	unsigned n_locks;	\/* number of mutex\/rwlock objects *\/$/;"	m	struct:prog_args	file:
n_objects	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t n_objects;$/;"	m	struct:pmem_obj_type_stats
n_objs	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	size_t n_objs;$/;"	m	struct:pobj_args	file:
n_objs	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	size_t n_objs;      \/* number of objects to allocate *\/$/;"	m	struct:obj_tx_bench	file:
n_offsets	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	size_t n_offsets;  \/* number of elements in offsets array *\/$/;"	m	struct:pmem_bench	file:
n_offsets	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	size_t n_offsets;	  \/* number of random elements *\/$/;"	m	struct:memset_bench	file:
n_offsets	deps/pmdk/src/benchmarks/rpmem.cpp	/^	size_t n_offsets;	 \/* number of random elements *\/$/;"	m	struct:rpmem_bench	file:
n_oid	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	fn_num_t n_oid;     \/* returns object's number in array *\/$/;"	m	struct:obj_tx_bench	file:
n_ops	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	size_t n_ops;$/;"	m	struct:pobj_args	file:
n_ops	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	size_t n_ops;       \/* number of operations *\/$/;"	m	struct:obj_tx_args	file:
n_ops_per_thread	deps/pmdk/src/benchmarks/benchmark.hpp	/^	size_t n_ops_per_thread; \/* number of operations per thread *\/$/;"	m	struct:benchmark_args
n_per_cq	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^	size_t n_per_cq; \/* number of entries per lane in completion queue *\/$/;"	m	struct:rpmem_fip_lane_attr	file:
n_per_rq	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^	size_t n_per_rq; \/* number of entries per lane in receive queue *\/$/;"	m	struct:rpmem_fip_lane_attr	file:
n_per_sq	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^	size_t n_per_sq; \/* number of entries per lane in send queue  *\/$/;"	m	struct:rpmem_fip_lane_attr	file:
n_pmem_drain	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	unsigned n_pmem_drain;$/;"	m	struct:ops_counter	file:
n_pmem_flush	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	unsigned n_pmem_flush;$/;"	m	struct:ops_counter	file:
n_pmem_msync	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	unsigned n_pmem_msync;$/;"	m	struct:ops_counter	file:
n_pmem_persist	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	unsigned n_pmem_persist;$/;"	m	struct:ops_counter	file:
n_pools	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	size_t n_pools;$/;"	m	struct:pobj_bench	file:
n_pot_cache_misses	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	unsigned n_pot_cache_misses;$/;"	m	struct:ops_counter	file:
n_rand_offsets	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	size_t n_rand_offsets;$/;"	m	struct:pmem_bench	file:
n_threads	deps/pmdk/src/benchmarks/benchmark.hpp	/^	unsigned n_threads;      \/* number of working threads *\/$/;"	m	struct:benchmark_args
n_total_bytes	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t n_total_bytes;$/;"	m	struct:pmem_obj_stats
n_total_objects	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t n_total_objects;$/;"	m	struct:pmem_obj_stats
n_units	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t n_units;$/;"	m	struct:pmem_obj_class_stats
n_used	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t n_used;$/;"	m	struct:pmem_obj_class_stats
n_zones	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t n_zones;$/;"	m	struct:pmem_obj_stats
n_zones_used	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t n_zones_used;$/;"	m	struct:pmem_obj_stats
na	deps/lua/src/lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	file:
nactive	deps/jemalloc/include/jemalloc/internal/arena.h	/^	size_t			nactive;$/;"	m	struct:arena_s
nactive	deps/pmdk/src/libpmemobj/heap.c	/^	size_t nactive;$/;"	m	struct:arenas	file:
nactvar	deps/lua/src/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the breakable structure *\/$/;"	m	struct:BlockCnt	file:
nactvar	deps/lua/src/lparser.h	/^  lu_byte nactvar;  \/* number of active local variables *\/$/;"	m	struct:FuncState
nallocated	deps/pmdk/src/common/set.h	/^	unsigned nallocated;$/;"	m	struct:pool_replica
nallocs	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	size_t nallocs;$/;"	m	struct:clo_vec
nallocs	deps/pmdk/src/libpmemobj/alloc_class.h	/^		unsigned nallocs; \/* number of allocs per run *\/$/;"	m	struct:alloc_class::__anon131
nallocs	deps/pmdk/src/libpmemobj/recycler.c	/^	size_t nallocs;$/;"	m	struct:recycler	file:
nallocs	deps/pmdk/src/tools/pmempool/info.h	/^	uint32_t nallocs;$/;"	m	struct:pmem_obj_class_stats
nallocx	deps/jemalloc/include/jemalloc/jemalloc.h	337;"	d
nallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	26;"	d
nallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	26;"	d
name	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	const char		*name;$/;"	m	struct:ctl_named_node_s
name	deps/jemalloc/include/jemalloc/internal/witness.h	/^	const char		*name;$/;"	m	struct:witness_s
name	deps/lua/src/lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg
name	deps/lua/src/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:
name	deps/lua/src/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug
name	deps/lua/src/lundump.c	/^ const char* name;$/;"	m	struct:__anon39	file:
name	deps/pmdk/src/benchmarks/benchmark.hpp	/^	const char *name;$/;"	m	struct:benchmark_info
name	deps/pmdk/src/benchmarks/scenario.hpp	/^	char *name;$/;"	m	struct:scenario
name	deps/pmdk/src/common/ctl.h	/^	const char *name;$/;"	m	struct:ctl_index
name	deps/pmdk/src/common/ctl.h	/^	const char *name;$/;"	m	struct:ctl_node
name	deps/pmdk/src/common/fs.h	/^	const char *name;$/;"	m	struct:fs_entry
name	deps/pmdk/src/common/set.h	/^	const char *name;$/;"	m	struct:pool_set_option
name	deps/pmdk/src/examples/libpmemblk/assetdb/asset.h	/^	char name[ASSET_NAME_MAX];$/;"	m	struct:asset
name	deps/pmdk/src/examples/libpmemobj/array/array.c	/^	char name[MAX_BUFFLEN];$/;"	m	struct:array_info	file:
name	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^	const char *name;$/;"	m	struct:examine	file:
name	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^	const char *name;$/;"	m	struct:search	file:
name	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^	const char *name;$/;"	m	struct:command	file:
name	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^	const char *name;$/;"	m	struct:__anon98	file:
name	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	TOID(char) name; \/* symbolic link data *\/$/;"	m	struct:objfs_symlink	file:
name	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	char name[];			\/* name *\/$/;"	m	struct:objfs_dir_entry	file:
name	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^	const char *name;$/;"	m	struct:test_list	file:
name	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	const char *name;	\/* long name of command *\/$/;"	m	struct:pocli_cmd	file:
name	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	char *name;$/;"	m	struct:field	file:
name	deps/pmdk/src/test/unittest/unittest.h	/^	const char *name;$/;"	m	struct:test_case
name	deps/pmdk/src/tools/pmempool/pmempool.c	/^	const char *name;$/;"	m	struct:command	file:
name	deps/pmdk/src/windows/getopt/getopt.h	/^  const char* name;$/;"	m	struct:option
name	src/cluster.c	/^    char *name;$/;"	m	struct:redisNodeFlags	file:
name	src/cluster.h	/^    char name[CLUSTER_NAMELEN]; \/* Node name, hex string, sha1-size *\/$/;"	m	struct:clusterNode
name	src/config.c	/^    const char *name;$/;"	m	struct:configEnum	file:
name	src/help.h	/^  char *name;$/;"	m	struct:commandHelp
name	src/sentinel.c	/^    char *name;     \/* Master name from the point of view of this sentinel. *\/$/;"	m	struct:sentinelRedisInstance	file:
name	src/server.h	/^    char *name;$/;"	m	struct:redisCommand
name	src/server.h	/^    char *name;$/;"	m	struct:redisFunctionSym
name	src/server.h	/^    robj *name;             \/* As set by CLIENT SETNAME. *\/$/;"	m	struct:client
name_short	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	const char *name_short;	\/* short name of command *\/$/;"	m	struct:pocli_cmd	file:
named	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	bool			named;$/;"	m	struct:ctl_node_s
namelen	deps/pmdk/src/common/fs.h	/^	size_t namelen;$/;"	m	struct:fs_entry
namewhat	deps/lua/src/lua.h	/^  const char *namewhat;	\/* (n) `global', `local', `field', `method' *\/$/;"	m	struct:lua_Debug
narena	deps/pmdk/src/libpmemblk/btt.c	/^	unsigned narena;		\/* number of arenas *\/$/;"	m	struct:btt	file:
narena	deps/pmdk/src/libpmempool/check_util.h	/^	uint32_t narena;$/;"	m	struct:__anon87
narenas	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	unsigned		narenas;$/;"	m	struct:ctl_stats_s
narenas	deps/pmdk/src/libpmempool/pool.h	/^	uint32_t narenas;$/;"	m	struct:pool_data
narenas_auto	deps/jemalloc/include/jemalloc/internal/private_namespace.h	347;"	d
narenas_auto	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	347;"	d
narenas_auto	deps/jemalloc/src/jemalloc.c	/^unsigned		narenas_auto; \/* Read-only after initialization. *\/$/;"	v
narenas_tdata_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	348;"	d
narenas_tdata_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	348;"	d
narenas_tdata_cleanup	deps/jemalloc/src/jemalloc.c	/^narenas_tdata_cleanup(tsd_t *tsd)$/;"	f
narenas_total	deps/jemalloc/src/jemalloc.c	/^static unsigned		narenas_total; \/* Use narenas_total_*(). *\/$/;"	v	file:
narenas_total_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	349;"	d
narenas_total_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	349;"	d
narenas_total_get	deps/jemalloc/src/jemalloc.c	/^narenas_total_get(void)$/;"	f
narenas_total_inc	deps/jemalloc/src/jemalloc.c	/^narenas_total_inc(void)$/;"	f	file:
narenas_total_set	deps/jemalloc/src/jemalloc.c	/^narenas_total_set(unsigned narenas)$/;"	f	file:
nargs	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	size_t nargs;$/;"	m	struct:clo_vec
nargs	deps/pmdk/src/test/tools/pmemwrite/write.c	/^	int nargs;	\/* number of arguments *\/$/;"	m	struct:pmemwrite	file:
native	deps/lua/src/lua_struct.c	/^} const native = {1};$/;"	v	file:
nbits	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^	size_t nbits;$/;"	m	struct:bitmap_info_s
nbits	deps/pmdk/src/libpmemobj/memblock.h	/^	unsigned nbits; \/* number of valid bits *\/$/;"	m	struct:run_bitmap
nblocks	deps/pmdk/src/benchmarks/blk.cpp	/^	size_t nblocks;		  \/* actual number of blocks *\/$/;"	m	struct:blk_bench	file:
nblocks	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^	size_t nblocks;			\/* number of available blocks *\/$/;"	m	struct:base	file:
nbuckets	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	size_t nbuckets;$/;"	m	struct:buckets	file:
nbuckets	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^	size_t nbuckets;$/;"	m	struct:buckets	file:
nbytes	deps/pmdk/src/benchmarks/benchmark.hpp	/^	uint64_t nbytes;       \/* number of bytes processed *\/$/;"	m	struct:benchmark_results
ncached	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	unsigned	ncached;	\/* # of cached objects. *\/$/;"	m	struct:tcache_bin_s
ncached_max	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	unsigned	ncached_max;	\/* Upper limit on ncached. *\/$/;"	m	struct:tcache_bin_info_s
nchildren	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	unsigned		nchildren;$/;"	m	struct:ctl_named_node_s
ncleanups	deps/jemalloc/src/tsd.c	/^static unsigned ncleanups;$/;"	v	file:
nclos	deps/pmdk/src/benchmarks/benchmark.hpp	/^	size_t nclos;$/;"	m	struct:benchmark_info
nclos	deps/pmdk/src/benchmarks/pmembench.cpp	/^	size_t nclos;$/;"	m	struct:benchmark	file:
ncmds	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	size_t ncmds;			\/* number of available commands *\/$/;"	m	struct:pocli	file:
ncpus	deps/jemalloc/include/jemalloc/internal/private_namespace.h	350;"	d
ncpus	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	350;"	d
ncpus	deps/jemalloc/src/jemalloc.c	/^unsigned	ncpus;$/;"	v
ncycles	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    ncycles = 2$/;"	v	class:ObjDefragAdvancedMt
ncycles	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    ncycles = 25$/;"	v	class:TEST3
ncycles	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    ncycles = 25$/;"	v	class:TEST4
ncycles	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    ncycles = 25$/;"	v	class:TEST5
ncycles	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	unsigned ncycles;$/;"	m	struct:create_n_defrag_params_t	file:
ndalloc	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	ndalloc;$/;"	m	struct:malloc_bin_stats_s
ndalloc	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	ndalloc;$/;"	m	struct:malloc_huge_stats_s
ndalloc	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	ndalloc;$/;"	m	struct:malloc_large_stats_s
ndalloc_huge	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	ndalloc_huge;$/;"	m	struct:arena_stats_s
ndalloc_large	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	ndalloc_large;$/;"	m	struct:arena_stats_s
ndalloc_small	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	uint64_t		ndalloc_small;$/;"	m	struct:ctl_arena_stats_s
ndctl_ctx	deps/pmdk/src/tools/daxio/daxio.c	/^	struct ndctl_ctx *ndctl_ctx;$/;"	m	struct:daxio_device	typeref:struct:daxio_device::ndctl_ctx	file:
ndctl_get_namespace_of_device	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_get_namespace_of_device() {$/;"	f
ndctl_get_namespace_of_device_node	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_get_namespace_of_device_node() {$/;"	f
ndctl_inject_error	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_inject_error() {$/;"	f
ndctl_inject_error_node	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_inject_error_node() {$/;"	f
ndctl_nfit_test_fini	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_fini() {$/;"	f
ndctl_nfit_test_fini_node	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_fini_node() {$/;"	f
ndctl_nfit_test_get_block_device	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_get_block_device() {$/;"	f
ndctl_nfit_test_get_block_device_node	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_get_block_device_node() {$/;"	f
ndctl_nfit_test_get_dax_device	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_get_dax_device() {$/;"	f
ndctl_nfit_test_get_dax_device_node	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_get_dax_device_node() {$/;"	f
ndctl_nfit_test_get_device	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_get_device() {$/;"	f
ndctl_nfit_test_get_device_node	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_get_device_node() {$/;"	f
ndctl_nfit_test_grant_access	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_grant_access() {$/;"	f
ndctl_nfit_test_grant_access_node	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_grant_access_node() {$/;"	f
ndctl_nfit_test_init	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_init() {$/;"	f
ndctl_nfit_test_init_node	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_init_node() {$/;"	f
ndctl_nfit_test_mount_pmem	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_mount_pmem() {$/;"	f
ndctl_nfit_test_mount_pmem_node	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_nfit_test_mount_pmem_node() {$/;"	f
ndctl_requires_extra_access	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_requires_extra_access()$/;"	f
ndctl_uninject_error	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_uninject_error() {$/;"	f
ndctl_uninject_error_node	deps/pmdk/src/test/common_badblock.sh	/^function ndctl_uninject_error_node() {$/;"	f
ndirty	deps/jemalloc/include/jemalloc/internal/arena.h	/^	size_t			ndirty;$/;"	m	struct:arena_decay_s
ndirty	deps/jemalloc/include/jemalloc/internal/arena.h	/^	size_t			ndirty;$/;"	m	struct:arena_s
need_value	deps/lua/src/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:
neighbors	deps/geohash-int/geohash_helper.h	/^    GeoHashNeighbors neighbors;$/;"	m	struct:__anon141
nest_count	deps/pmdk/src/libpmemobj/lane.h	/^	unsigned long nest_count;$/;"	m	struct:lane_info
nested	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	unsigned nested;    \/* number of nested transactions *\/$/;"	m	struct:obj_tx_args	file:
nesting_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	int nesting_mode;   \/* type of nesting in main operation *\/$/;"	m	struct:obj_tx_bench	file:
nesting_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^enum nesting_mode {$/;"	g	file:
nestings	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static fn_op_t nestings[] = {obj_op_sim, obj_op_tx};$/;"	v	file:
neterr	src/server.h	/^    char neterr[ANET_ERR_LEN];   \/* Error buffer for anet.c *\/$/;"	m	struct:redisServer
new_level	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	int new_level;$/;"	m	struct:state	file:
new_level	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^new_level(PMEMobjpool *pop, TOID(struct root) r)$/;"	f	file:
new_localvar	deps/lua/src/lparser.c	/^static void new_localvar (LexState *ls, TString *name, int n) {$/;"	f	file:
new_localvarliteral	deps/lua/src/lparser.c	156;"	d	file:
new_map	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint32_t new_map;	\/* new post-map LBA *\/$/;"	m	struct:btt_flog
new_paths	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^new_paths(const char *dir, const char *name, const char *old_desc,$/;"	f	file:
new_poolset	deps/pmdk/src/test/unittest/context.py	/^    def new_poolset(self, path):$/;"	m	class:Context
new_size	deps/pmdk/src/libpmemobj/obj.c	/^	size_t new_size;$/;"	m	struct:carg_realloc	file:
new_size	deps/pmdk/src/test/obj_list/obj_list.c	/^	size_t new_size;$/;"	m	struct:realloc_arg	file:
new_state	deps/pmdk/src/libpmemobj/palloc.c	/^			enum memblock_state new_state;$/;"	m	struct:pobj_action_internal::__anon127::__anon128	typeref:enum:pobj_action_internal::__anon127::__anon128::memblock_state	file:
new_store_item	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^new_store_item(void)$/;"	f
newfenv	deps/lua/src/liolib.c	/^static void newfenv (lua_State *L, lua_CFunction cls) {$/;"	f	file:
newfile	deps/lua/src/liolib.c	/^static FILE **newfile (lua_State *L) {$/;"	f	file:
newkey	deps/lua/src/ltable.c	/^static TValue *newkey (lua_State *L, Table *t, const TValue *key) {$/;"	f	file:
newlstr	deps/lua/src/lstring.c	/^static TString *newlstr (lua_State *L, const char *str, size_t l,$/;"	f	file:
newpool	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	int newpool;		\/* complete new memory pool *\/$/;"	m	struct:ds_context	file:
next	deps/hiredis/async.h	/^    struct redisCallback *next; \/* simple singly linked list *\/$/;"	m	struct:redisCallback	typeref:struct:redisCallback::redisCallback
next	deps/hiredis/dict.h	/^    struct dictEntry *next;$/;"	m	struct:dictEntry	typeref:struct:dictEntry::dictEntry
next	deps/jemalloc/include/jemalloc/internal/tcache.h	/^		tcaches_t	*next;$/;"	m	union:tcaches_s::__anon3
next	deps/lua/src/llex.c	28;"	d	file:
next	deps/lua/src/lobject.h	/^      struct UpVal *next;$/;"	m	struct:UpVal::__anon26::__anon27	typeref:struct:UpVal::__anon26::__anon27::UpVal
next	deps/lua/src/lobject.h	/^    struct Node *next;  \/* for chaining *\/$/;"	m	struct:TKey::__anon28	typeref:struct:TKey::__anon28::Node
next	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	PMDK_TAILQ_ENTRY(clo_vec_alloc) next;$/;"	m	struct:clo_vec_alloc
next	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	PMDK_TAILQ_ENTRY(clo_vec_args) next;$/;"	m	struct:clo_vec_args
next	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	PMDK_TAILQ_ENTRY(clo_vec_value) next;$/;"	m	struct:clo_vec_value
next	deps/pmdk/src/benchmarks/pmembench.cpp	/^	PMDK_LIST_ENTRY(benchmark) next;$/;"	m	struct:benchmark	file:
next	deps/pmdk/src/benchmarks/scenario.hpp	/^	PMDK_TAILQ_ENTRY(kv) next;$/;"	m	struct:kv
next	deps/pmdk/src/benchmarks/scenario.hpp	/^	PMDK_TAILQ_ENTRY(scenario) next;$/;"	m	struct:scenario
next	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^	TOID(struct entry) next;$/;"	m	struct:entry	file:
next	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^	TOID(struct skiplist_map_node) next[SKIPLIST_LEVELS_NUM];$/;"	m	struct:skiplist_map_node	file:
next	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^	PMEMoid next;		\/* object ID of the next log buffer *\/$/;"	m	struct:log_hdr	file:
next	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^	TOID(struct log) next;	\/* object ID of the next log buffer *\/$/;"	m	struct:log_hdr	file:
next	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	TOID(struct alien) next;$/;"	m	struct:alien	file:
next	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	TOID(struct bullet) next;$/;"	m	struct:bullet	file:
next	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	TOID(struct star) next;$/;"	m	struct:star	file:
next	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	/^	node_id next;$/;"	m	struct:list_node	file:
next	deps/pmdk/src/libpmemblk/btt.c	/^			int next;		\/* next write (0 or 1) *\/$/;"	m	struct:btt::arena::flog_runtime	file:
next	deps/pmdk/src/libpmemobj/lane.h	/^	struct lane_info *prev, *next;$/;"	m	struct:lane_info	typeref:struct:lane_info::
next	deps/pmdk/src/libpmemobj/memops.c	/^	struct ulog_next next; \/* vector of 'next' fields of persistent ulog *\/$/;"	m	struct:operation_context	typeref:struct:operation_context::ulog_next	file:
next	deps/pmdk/src/libpmemobj/sync.h	/^				union padded_pmemcond *next;$/;"	m	struct:padded_pmemcond::__anon124::__anon125::__anon126	typeref:union:padded_pmemcond::__anon124::__anon125::__anon126::padded_pmemcond
next	deps/pmdk/src/libpmemobj/sync.h	/^				union padded_pmemmutex *next;$/;"	m	struct:padded_pmemmutex::__anon118::__anon119::__anon120	typeref:union:padded_pmemmutex::__anon118::__anon119::__anon120::padded_pmemmutex
next	deps/pmdk/src/libpmemobj/sync.h	/^				union padded_pmemrwlock *next;$/;"	m	struct:padded_pmemrwlock::__anon121::__anon122::__anon123	typeref:union:padded_pmemrwlock::__anon121::__anon122::__anon123::padded_pmemrwlock
next	deps/pmdk/src/libpmempool/pool.h	/^	PMDK_TAILQ_ENTRY(arena) next;$/;"	m	struct:arena
next	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^	POBJ_LIST_ENTRY(struct node) next;$/;"	m	struct:node	file:
next	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^	POBJ_LIST_ENTRY(struct node_big) next;$/;"	m	struct:node_big	file:
next	deps/pmdk/src/test/obj_debug/obj_debug.c	/^	POBJ_LIST_ENTRY(struct tobj) next;$/;"	m	struct:tobj	file:
next	deps/pmdk/src/test/obj_list/obj_list.h	/^	POBJ_LIST_ENTRY(struct item) next;$/;"	m	struct:item
next	deps/pmdk/src/test/obj_list_macro/obj_list_macro.c	/^	POBJ_LIST_ENTRY(struct item) next;$/;"	m	struct:item	file:
next	deps/pmdk/src/test/obj_tx_locks_abort/obj_tx_locks_abort.c	/^	TOID(struct obj) next;$/;"	m	struct:obj	file:
next	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	struct field *next;$/;"	m	struct:field	typeref:struct:field::field	file:
next	deps/pmdk/src/tools/pmempool/common.h	/^	PMDK_LIST_ENTRY(range) next;$/;"	m	struct:range
next	deps/pmdk/src/tools/pmempool/info.h	/^	PMDK_TAILQ_ENTRY(pmem_obj_type_stats) next;$/;"	m	struct:pmem_obj_type_stats
next	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def next(self, in_op):$/;"	m	class:CollectingState
next	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def next(self, in_op):$/;"	m	class:InitState
next	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def next(self, in_op):$/;"	m	class:ReplayingState
next	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def next(self, in_op):$/;"	m	class:State
next	src/adlist.h	/^    listNode *next;$/;"	m	struct:listIter
next	src/adlist.h	/^    struct listNode *next;$/;"	m	struct:listNode	typeref:struct:listNode::listNode
next	src/ae.h	/^    struct aeTimeEvent *next;$/;"	m	struct:aeTimeEvent	typeref:struct:aeTimeEvent::aeTimeEvent
next	src/dict.h	/^    struct dictEntry *next;$/;"	m	struct:dictEntry	typeref:struct:dictEntry::dictEntry
next	src/quicklist.h	/^    struct quicklistNode *next;$/;"	m	struct:quicklistNode	typeref:struct:quicklistNode::quicklistNode
next	src/rand.c	/^static void next(void) {$/;"	f	file:
nextArgument	deps/hiredis/async.c	/^static char *nextArgument(char *start, char **str, size_t *len) {$/;"	f	file:
nextEntry	deps/hiredis/dict.h	/^    dictEntry *entry, *nextEntry;$/;"	m	struct:dictIterator
nextEntry	src/dict.h	/^    dictEntry *entry, *nextEntry;$/;"	m	struct:dictIterator
next_client_id	src/server.h	/^    uint64_t next_client_id;    \/* Next client unique ID. Incremental. *\/$/;"	m	struct:redisServer
next_directory_id	deps/pmdk/src/common/set.h	/^	unsigned next_directory_id;$/;"	m	struct:pool_set
next_gc_bin	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	szind_t		next_gc_bin;	\/* Next bin to GC. *\/$/;"	m	struct:tcache_s
next_id	deps/pmdk/src/common/set.h	/^	unsigned next_id;$/;"	m	struct:pool_set
next_lane	deps/pmdk/src/libpmemblk/blk.h	/^	unsigned next_lane;	\/* used to rotate through lanes *\/$/;"	m	struct:pmemblk
next_lane_idx	deps/pmdk/src/libpmemobj/lane.h	/^	unsigned next_lane_idx;$/;"	m	struct:lane_descriptor
next_part_hdr_valid	deps/pmdk/src/libpmempool/check_util.h	/^	int next_part_hdr_valid;$/;"	m	struct:__anon87
next_part_hdrp	deps/pmdk/src/libpmempool/check_util.h	/^	struct pool_hdr *next_part_hdrp;$/;"	m	struct:__anon87	typeref:struct:__anon87::pool_hdr
next_part_uuid	deps/pmdk/src/common/pool_hdr.h	/^	uuid_t next_part_uuid;		\/* next part *\/$/;"	m	struct:pool_hdr
next_repl_hdr_valid	deps/pmdk/src/libpmempool/check_util.h	/^	int next_repl_hdr_valid;$/;"	m	struct:__anon87
next_repl_hdrp	deps/pmdk/src/libpmempool/check_util.h	/^	struct pool_hdr *next_repl_hdrp;$/;"	m	struct:__anon87	typeref:struct:__anon87::pool_hdr
next_repl_uuid	deps/pmdk/src/common/pool_hdr.h	/^	uuid_t next_repl_uuid;		\/* next replica *\/$/;"	m	struct:pool_hdr
next_repl_uuid	deps/pmdk/src/common/set.h	/^	unsigned char next_repl_uuid[POOL_HDR_UUID_LEN]; \/* next replica uuid *\/$/;"	m	struct:pool_attr
next_thr_uid	deps/jemalloc/src/prof.c	/^static uint64_t		next_thr_uid;$/;"	v	file:
next_thr_uid_mtx	deps/jemalloc/src/prof.c	/^static malloc_mutex_t	next_thr_uid_mtx;$/;"	v	file:
next_uuid	deps/pmdk/src/include/librpmem.h	/^	unsigned char next_uuid[RPMEM_POOL_HDR_UUID_LEN]; \/* next pool uuid *\/$/;"	m	struct:rpmem_pool_attr
next_uuid	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	unsigned char next_uuid[RPMEM_POOL_HDR_UUID_LEN]; \/* next pool uuid *\/$/;"	m	struct:rpmem_pool_attr_packed
nextoff	deps/pmdk/src/libpmemblk/btt.c	/^		uint64_t nextoff;	\/* offset to next arena *\/$/;"	m	struct:btt::arena	file:
nextoff	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint64_t nextoff;		\/* offset to next arena (or zero) *\/$/;"	m	struct:btt_info
nfills	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nfills;$/;"	m	struct:malloc_bin_stats_s
nfit_header	deps/pmdk/src/common/os_auto_flush_windows.h	/^struct nfit_header$/;"	s
nflushes	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nflushes;$/;"	m	struct:malloc_bin_stats_s
nfree	deps/jemalloc/include/jemalloc/internal/arena.h	/^	unsigned	nfree;$/;"	m	struct:arena_run_s
nfree	deps/pmdk/src/libpmemblk/btt.c	/^	uint32_t nfree;			\/* available flog entries *\/$/;"	m	struct:btt	file:
nfree	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint32_t nfree;			\/* number of free blocks *\/$/;"	m	struct:btt_info
ngcotouv	deps/lua/src/lstate.h	157;"	d
ngroups	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^	size_t ngroups;$/;"	m	struct:bitmap_info_s
ngrows	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	uint64_t	ngrows;$/;"	m	struct:ckh_s
nh	deps/lua/src/lparser.c	/^  int nh;  \/* total number of `record' elements *\/$/;"	m	struct:ConsControl	file:
nhbins	deps/jemalloc/include/jemalloc/internal/private_namespace.h	351;"	d
nhbins	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	351;"	d
nhbins	deps/jemalloc/src/tcache.c	/^unsigned		nhbins;$/;"	v
nhclasses	deps/jemalloc/include/jemalloc/internal/private_namespace.h	352;"	d
nhclasses	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	352;"	d
nhclasses	deps/jemalloc/src/arena.c	/^unsigned	nhclasses; \/* Number of huge size classes. *\/$/;"	v
nhdrs	deps/pmdk/src/common/set.h	/^	unsigned nhdrs;		\/* should be 0, 1 or nparts *\/$/;"	m	struct:pool_replica
nhdrs	deps/pmdk/src/libpmempool/replica.h	/^	unsigned nhdrs;$/;"	m	struct:replica_health_status
nhealthy	deps/pmdk/src/common/os_badblock.h	/^	int nhealthy;$/;"	m	struct:bad_block
nilK	deps/lua/src/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:
ninserts	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	uint64_t	ninserts;$/;"	m	struct:ckh_s
nk	deps/lua/src/lobject.h	/^  } nk;$/;"	m	union:TKey	typeref:struct:TKey::__anon28
nk	deps/lua/src/lparser.h	/^  int nk;  \/* number of elements in `k' *\/$/;"	m	struct:FuncState
nkeys	deps/pmdk/src/benchmarks/map_bench.cpp	/^	size_t nkeys;$/;"	m	struct:map_bench	file:
nkeys	deps/pmdk/src/benchmarks/map_bench.cpp	/^	size_t nkeys;$/;"	m	struct:map_bench_worker	file:
nkeys	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^static uint64_t nkeys;$/;"	v	file:
nlane	deps/pmdk/src/libpmemblk/blk.h	/^	unsigned nlane;		\/* number of lanes *\/$/;"	m	struct:pmemblk
nlane	deps/pmdk/src/libpmemblk/btt.c	/^	unsigned nlane; \/* number of concurrent threads allowed per btt *\/$/;"	m	struct:btt	file:
nlanes	deps/pmdk/src/benchmarks/rpmem.cpp	/^	unsigned *nlanes;	 \/* number of lanes for each remote replica *\/$/;"	m	struct:rpmem_bench	file:
nlanes	deps/pmdk/src/libpmemobj/obj.h	/^	uint64_t nlanes;$/;"	m	struct:pmemobjpool
nlanes	deps/pmdk/src/librpmem/rpmem_fip.c	/^	unsigned nlanes;$/;"	m	struct:rpmem_fip	file:
nlanes	deps/pmdk/src/librpmem/rpmem_fip.h	/^	unsigned nlanes;$/;"	m	struct:rpmem_fip_attr
nlanes	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	unsigned nlanes;$/;"	m	struct:rpmem_req_attr
nlanes	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	unsigned nlanes;$/;"	m	struct:rpmem_resp_attr
nlanes	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t nlanes;		\/* number of lanes *\/$/;"	m	struct:rpmem_msg_ibc_attr
nlanes	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t nlanes;		\/* number of lanes used by initiator *\/$/;"	m	struct:rpmem_msg_common
nlanes	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	unsigned nlanes;$/;"	m	struct:pool_entry	file:
nlanes	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^	unsigned nlanes;$/;"	m	struct:fip_client	file:
nlanes	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	size_t nlanes;	\/* number of lanes processed by this thread *\/$/;"	m	struct:rpmemd_fip_thread	file:
nlanes	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	unsigned nlanes;	\/* number of lanes *\/$/;"	m	struct:rpmemd_fip	file:
nlanes	deps/pmdk/src/tools/rpmemd/rpmemd_fip.h	/^	unsigned nlanes;$/;"	m	struct:rpmemd_fip_attr
nlba	deps/pmdk/src/libpmemblk/blk.h	/^	size_t nlba;		\/* number of LBAs in pool *\/$/;"	m	struct:pmemblk
nlba	deps/pmdk/src/libpmemblk/btt.c	/^	uint64_t nlba;			\/* total number of external LBAs *\/$/;"	m	struct:btt	file:
nlclasses	deps/jemalloc/include/jemalloc/internal/private_namespace.h	353;"	d
nlclasses	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	353;"	d
nlclasses	deps/jemalloc/src/arena.c	/^unsigned	nlclasses; \/* Number of large size classes. *\/$/;"	v
nlevels	deps/jemalloc/include/jemalloc/internal/bitmap.h	/^	unsigned nlevels;$/;"	m	struct:bitmap_info_s
nlimbo	deps/jemalloc/include/jemalloc/internal/prof.h	/^	unsigned		nlimbo;$/;"	m	struct:prof_gctx_s
nlocks	deps/pmdk/src/libpmemobj/heap.c	/^	unsigned nlocks;$/;"	m	struct:heap_rt	file:
nlocvars	deps/lua/src/lparser.h	/^  short nlocvars;  \/* number of elements in `locvars' *\/$/;"	m	struct:FuncState
nmadvise	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nmadvise;$/;"	m	struct:arena_stats_s
nmalloc	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nmalloc;$/;"	m	struct:malloc_bin_stats_s
nmalloc	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nmalloc;$/;"	m	struct:malloc_huge_stats_s
nmalloc	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nmalloc;$/;"	m	struct:malloc_large_stats_s
nmalloc_huge	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nmalloc_huge;$/;"	m	struct:arena_stats_s
nmalloc_large	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nmalloc_large;$/;"	m	struct:arena_stats_s
nmalloc_small	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	uint64_t		nmalloc_small;$/;"	m	struct:ctl_arena_stats_s
no_argument	deps/pmdk/src/windows/getopt/getopt.h	35;"	d
no_barrier_after_ntstores	deps/pmdk/src/libpmem/x86_64/memcpy_memset.h	/^no_barrier_after_ntstores(void)$/;"	f
no_free	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^no_free(struct obj_tx_bench *obj_bench, struct worker_info *worker, size_t idx)$/;"	f	file:
no_headers	deps/pmdk/src/librpmem/rpmem.c	/^	int no_headers;$/;"	m	struct:rpmem_pool	file:
no_lazy_lock	deps/jemalloc/test/unit/stats.c	/^no_lazy_lock(void)$/;"	f	file:
no_memset	deps/pmdk/src/benchmarks/rpmem.cpp	/^	bool no_memset;    \/* do not call memset before each persist *\/$/;"	m	struct:rpmem_args	file:
no_warmup	deps/pmdk/src/benchmarks/blk.cpp	/^	bool no_warmup; \/* don't do warmup *\/$/;"	m	struct:blk_args	file:
no_warmup	deps/pmdk/src/benchmarks/log.cpp	/^	bool no_warmup;  \/* don't do warmup *\/$/;"	m	struct:prog_args	file:
no_warmup	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	bool no_warmup;  \/* don't do warmup *\/$/;"	m	struct:pmem_args	file:
no_warmup	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	bool no_warmup;$/;"	m	struct:pmem_args	file:
no_warmup	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	bool no_warmup;    \/* do not do warmup *\/$/;"	m	struct:memset_args	file:
no_warmup	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^	bool no_warmup;       \/* do not do warmup *\/$/;"	m	struct:prog_args	file:
no_warmup	deps/pmdk/src/benchmarks/rpmem.cpp	/^	bool no_warmup;    \/* do not do warmup *\/$/;"	m	struct:rpmem_args	file:
noautherr	src/server.h	/^    *masterdownerr, *roslaveerr, *execaborterr, *noautherr, *noreplicaserr,$/;"	m	struct:sharedObjectsStruct
nobjects	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^	size_t nobjects;$/;"	m	struct:pmix_worker	file:
nobjects	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static size_t nobjects;$/;"	v	file:
nobjects	deps/pmdk/src/test/obj_pmalloc_rand_mt/obj_pmalloc_rand_mt.c	/^static unsigned nobjects;$/;"	v	file:
nobjs	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^	uint64_t nobjs;       \/* number of allocated objects *\/$/;"	m	struct:obj_bench	file:
node	deps/jemalloc/include/jemalloc/internal/arena.h	/^	extent_node_t		node;$/;"	m	struct:arena_chunk_s
node	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	struct ctl_node_s	node;$/;"	m	struct:ctl_indexed_node_s	typeref:struct:ctl_indexed_node_s::ctl_node_s
node	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	struct ctl_node_s	node;$/;"	m	struct:ctl_named_node_s	typeref:struct:ctl_named_node_s::ctl_node_s
node	deps/lua/src/lobject.h	/^  Node *node;$/;"	m	struct:Table
node	deps/pmdk/src/common/uuid.h	/^	uint8_t node[6];$/;"	m	struct:uuid
node	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	TOID(art_node_u) node;$/;"	m	struct:_cb_data
node	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^	TOID(struct tree_map_node) node;$/;"	m	struct:parent	file:
node	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	char node[RPMEM_MAX_NODE];$/;"	m	struct:rpmem_target_info
node	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	TOID(struct dummy_node) node;$/;"	m	struct:dummy_root	file:
node	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^struct node {$/;"	s	file:
node	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	struct vnode_t node[];$/;"	m	struct:vgraph_t	typeref:struct:vgraph_t::vnode_t
node	deps/pmdk/src/test/obj_tx_invalid/obj_tx_invalid.c	/^	TOID(struct dummy_node) node;$/;"	m	struct:dummy_root	file:
node	src/cluster.h	/^    struct clusterNode *node;   \/* Node related to this link if any, or NULL *\/$/;"	m	struct:clusterLink	typeref:struct:clusterLink::clusterNode
node	src/cluster.h	/^    struct clusterNode *node;  \/* Node reporting the failure condition. *\/$/;"	m	struct:clusterNodeFailReport	typeref:struct:clusterNodeFailReport::clusterNode
node	src/quicklist.h	/^    quicklistNode *node;$/;"	m	struct:quicklistEntry
node	src/t_zset.c	/^                zskiplistNode *node;$/;"	m	struct:__anon152::__anon153::_iterzset::__anon157	file:
nodeFailed	src/cluster.h	66;"	d
nodeHasAddr	src/cluster.h	63;"	d
nodeInHandshake	src/cluster.h	62;"	d
nodeIp2String	src/cluster.c	/^void nodeIp2String(char *buf, clusterLink *link) {$/;"	f
nodeIsMaster	src/cluster.h	60;"	d
nodeIsSlave	src/cluster.h	61;"	d
nodeTimedOut	src/cluster.h	65;"	d
nodeUpdateAddressIfNeeded	src/cluster.c	/^int nodeUpdateAddressIfNeeded(clusterNode *node, clusterLink *link, int port) {$/;"	f
nodeWithoutAddr	src/cluster.h	64;"	d
node_addr	deps/pmdk/src/common/set.h	/^	char *node_addr;	\/* address of a remote node *\/$/;"	m	struct:remote_replica
node_addr	deps/pmdk/src/libpmemobj/obj.h	/^	char *node_addr;	\/* address of a remote node *\/$/;"	m	struct:pmemobjpool
node_alloc	deps/jemalloc/test/unit/rtree.c	/^node_alloc(size_t nelms)$/;"	f	file:
node_big	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^struct node_big {$/;"	s	file:
node_cache	deps/jemalloc/include/jemalloc/internal/arena.h	/^	ql_head(extent_node_t)	node_cache;$/;"	m	struct:arena_s
node_cache_mtx	deps/jemalloc/include/jemalloc/internal/arena.h	/^	malloc_mutex_t		node_cache_mtx;$/;"	m	struct:arena_s
node_callback	deps/pmdk/src/common/ctl.h	/^typedef int (*node_callback)(void *ctx, enum ctl_query_source type,$/;"	t
node_cmp	deps/jemalloc/test/unit/ph.c	/^node_cmp(const node_t *a, const node_t *b)$/;"	f	file:
node_cmp	deps/jemalloc/test/unit/rb.c	/^node_cmp(const node_t *a, const node_t *b) {$/;"	f	file:
node_cmp_magic	deps/jemalloc/test/unit/ph.c	/^node_cmp_magic(const node_t *a, const node_t *b) {$/;"	f	file:
node_constr_cancel	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^node_constr_cancel(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
node_dalloc	deps/jemalloc/test/unit/rtree.c	/^node_dalloc(rtree_node_elm_t *node)$/;"	f	file:
node_dax_device_zero	deps/pmdk/src/test/unittest/unittest.sh	/^node_dax_device_zero() {$/;"	f
node_id	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	/^typedef size_t node_id;$/;"	t	file:
node_id	deps/pmdk/src/test/obj_defrag_advanced/pgraph.h	/^	unsigned node_id;$/;"	m	struct:pnode_t
node_id	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	unsigned node_id;$/;"	m	struct:vnode_t
node_print	deps/jemalloc/test/unit/ph.c	/^node_print(const node_t *node, unsigned depth)$/;"	f	file:
node_remove	deps/jemalloc/test/unit/ph.c	/^node_remove(heap_t *heap, node_t *node)$/;"	f	file:
node_remove	deps/jemalloc/test/unit/rb.c	/^node_remove(tree_t *tree, node_t *node, unsigned nnodes)$/;"	f	file:
node_remove_first	deps/jemalloc/test/unit/ph.c	/^node_remove_first(heap_t *heap)$/;"	f	file:
node_s	deps/jemalloc/test/unit/ph.c	/^struct node_s {$/;"	s	file:
node_s	deps/jemalloc/test/unit/rb.c	/^struct node_s {$/;"	s	file:
node_t	deps/jemalloc/test/unit/ph.c	/^typedef struct node_s node_t;$/;"	t	typeref:struct:node_s	file:
node_t	deps/jemalloc/test/unit/rb.c	/^typedef struct node_s node_t;$/;"	t	typeref:struct:node_s	file:
node_validate	deps/jemalloc/test/unit/ph.c	/^node_validate(const node_t *node, const node_t *parent)$/;"	f	file:
nodecfg	src/cluster.h	/^        clusterMsgDataUpdate nodecfg;$/;"	m	struct:clusterMsgData::__anon176
nodename	src/cluster.h	/^    char nodename[CLUSTER_NAMELEN]; \/* Name of the slots owner. *\/$/;"	m	struct:__anon172
nodename	src/cluster.h	/^    char nodename[CLUSTER_NAMELEN];$/;"	m	struct:__anon169
nodename	src/cluster.h	/^    char nodename[CLUSTER_NAMELEN];$/;"	m	struct:__anon170
nodes	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	/^	struct list_node nodes[MAX_NODES];$/;"	m	struct:list_root	typeref:struct:list_root::list_node	file:
nodes	deps/pmdk/src/test/obj_defrag_advanced/pgraph.h	/^	PMEMoid nodes[];$/;"	m	struct:pgraph_t
nodes	src/cluster.h	/^    dict *nodes;          \/* Hash table of name -> clusterNode structures *\/$/;"	m	struct:clusterState
nodes_black_list	src/cluster.h	/^    dict *nodes_black_list; \/* Nodes we don't re-add for a few seconds. *\/$/;"	m	struct:clusterState
nodes_num	deps/pmdk/src/test/obj_defrag_advanced/pgraph.h	/^	unsigned nodes_num;$/;"	m	struct:pgraph_t
nodes_num	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	unsigned nodes_num;$/;"	m	struct:vgraph_t
nodes_with_keys_in_slot	src/redis-trib.rb	/^    def nodes_with_keys_in_slot(slot)$/;"	f	class:RedisTrib
noexists_cb	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^noexists_cb(struct part_file *pf, void *arg)$/;"	f	file:
noflag	deps/pmdk/src/tools/pmempool/info.h	/^	uint32_t noflag;	\/* number of blocks not marked with any flag *\/$/;"	m	struct:pmem_blk_stats
noflush	deps/pmdk/src/libpmem/x86_64/memcpy_memset.h	/^noflush(const void *addr, size_t len)$/;"	f
noflush64b	deps/pmdk/src/libpmem/x86_64/memcpy_memset.h	/^noflush64b(const char *addr)$/;"	f
nokeyerr	src/server.h	/^    *emptymultibulk, *wrongtypeerr, *nokeyerr, *syntaxerr, *sameobjecterr,$/;"	m	struct:sharedObjectsStruct
nondirty_addr	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	void *nondirty_addr; \/* non-dirty pages *\/$/;"	m	struct:pmem_bench	file:
nondirty_addr_aligned	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	void *nondirty_addr_aligned; \/* non-dirty pages - 2M aligned *\/$/;"	m	struct:pmem_bench	file:
nonempty_lists	deps/pmdk/src/libpmemobj/container_seglists.c	/^	uint64_t nonempty_lists;$/;"	m	struct:block_container_seglists	file:
noninteractive	src/redis-cli.c	/^static int noninteractive(int argc, char **argv) {$/;"	f	file:
noop_verify	deps/pmdk/src/test/obj_heap_interrupt/obj_heap_interrupt.c	/^noop_verify(PMEMobjpool *pop)$/;"	f	file:
nops	deps/pmdk/src/benchmarks/benchmark.hpp	/^	size_t nops;		       \/* number of operations *\/$/;"	m	struct:worker_info
nops	deps/pmdk/src/benchmarks/benchmark.hpp	/^	size_t nops;$/;"	m	struct:total_results
nops	deps/pmdk/src/benchmarks/benchmark.hpp	/^	uint64_t nops;	 \/* number of operations executed *\/$/;"	m	struct:benchmark_results
nops	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	unsigned nops;$/;"	m	struct:drain_thread_arg	file:
nops	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	unsigned nops;$/;"	m	struct:flush_thread_arg	file:
nopsps	deps/pmdk/src/benchmarks/benchmark.hpp	/^	double nopsps;$/;"	m	struct:total_results
noptions	deps/pmdk/src/tools/pmempool/common.h	/^	size_t noptions;$/;"	m	struct:options
noreplicaserr	src/server.h	/^    *masterdownerr, *roslaveerr, *execaborterr, *noautherr, *noreplicaserr,$/;"	m	struct:sharedObjectsStruct
north	deps/geohash-int/geohash.h	/^    GeoHashBits north;$/;"	m	struct:__anon146
north_east	deps/geohash-int/geohash.h	/^    GeoHashBits north_east;$/;"	m	struct:__anon146
north_west	deps/geohash-int/geohash.h	/^    GeoHashBits north_west;$/;"	m	struct:__anon146
noscripterr	src/server.h	/^    *outofrangeerr, *noscripterr, *loadingerr, *slowscripterr, *bgsaveerr,$/;"	m	struct:sharedObjectsStruct
not_implemented	deps/jemalloc/include/jemalloc/internal/assert.h	29;"	d
not_implemented	deps/jemalloc/src/util.c	20;"	d	file:
not_implemented	deps/jemalloc/src/util.c	665;"	d	file:
not_implemented	deps/jemalloc/test/include/test/jemalloc_test.h	135;"	d
not_implemented	deps/jemalloc/test/include/test/jemalloc_test.h	154;"	d
not_reached	deps/jemalloc/include/jemalloc/internal/assert.h	17;"	d
not_reached	deps/jemalloc/src/util.c	12;"	d	file:
not_reached	deps/jemalloc/src/util.c	664;"	d	file:
not_reached	deps/jemalloc/test/include/test/jemalloc_test.h	134;"	d
not_reached	deps/jemalloc/test/include/test/jemalloc_test.h	147;"	d
notail	deps/lua/src/lua.c	258;"	d	file:
notification_script	src/sentinel.c	/^    char *notification_script;$/;"	m	struct:sentinelRedisInstance	file:
notifyKeyspaceEvent	src/notify.c	/^void notifyKeyspaceEvent(int type, char *event, robj *key, int dbid) {$/;"	f
notify_keyspace_events	src/server.h	/^    int notify_keyspace_events; \/* Events to propagate via Pub\/Sub. This is an$/;"	m	struct:redisServer
notused	src/hyperloglog.c	/^    uint8_t notused[3]; \/* Reserved for future use, must be zero. *\/$/;"	m	struct:hllhdr	file:
notused0	src/cluster.h	/^    uint16_t notused0;  \/* 2 bytes not used. *\/$/;"	m	struct:__anon177
notused1	src/cluster.h	/^    char notused1[32];  \/* 32 bytes reserved for future usage. *\/$/;"	m	struct:__anon177
notused1	src/cluster.h	/^    uint16_t notused1;          \/* Some room for future improvements. *\/$/;"	m	struct:__anon169
notused2	src/cluster.h	/^    uint32_t notused2;$/;"	m	struct:__anon169
np	deps/lua/src/lparser.h	/^  int np;  \/* number of elements in `p' *\/$/;"	m	struct:FuncState
npages_per_chunk_compute	deps/jemalloc/test/unit/pack.c	/^npages_per_chunk_compute(void)$/;"	f	file:
npages_per_run_compute	deps/jemalloc/test/unit/pack.c	/^npages_per_run_compute(void)$/;"	f	file:
nparts	deps/pmdk/src/common/set.h	/^	unsigned nparts;$/;"	m	struct:pool_replica
nparts	deps/pmdk/src/libpmempool/replica.h	/^	unsigned nparts;$/;"	m	struct:replica_health_status
npending	src/ae_evport.c	/^    int     npending;                           \/* # of pending fds *\/$/;"	m	struct:aeApiState	file:
npurge	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	npurge;$/;"	m	struct:arena_stats_s
nraddr	deps/pmdk/src/common/valgrind/valgrind.h	/^      unsigned int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon54
nraddr	deps/pmdk/src/common/valgrind/valgrind.h	/^      unsigned int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon55
nraddr	deps/pmdk/src/common/valgrind/valgrind.h	/^      unsigned int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon57
nraddr	deps/pmdk/src/common/valgrind/valgrind.h	/^      unsigned int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon60
nraddr	deps/pmdk/src/common/valgrind/valgrind.h	/^      unsigned int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon63
nraddr	deps/pmdk/src/common/valgrind/valgrind.h	/^      unsigned long int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon56
nraddr	deps/pmdk/src/common/valgrind/valgrind.h	/^      unsigned long int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon58
nraddr	deps/pmdk/src/common/valgrind/valgrind.h	/^      unsigned long int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon59
nraddr	deps/pmdk/src/common/valgrind/valgrind.h	/^      unsigned long int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon61
nraddr	deps/pmdk/src/common/valgrind/valgrind.h	/^      unsigned long nraddr; \/* where's the code? *\/$/;"	m	struct:__anon64
nraddr	deps/pmdk/src/common/valgrind/valgrind.h	/^     unsigned long int nraddr; \/* where's the code? *\/$/;"	m	struct:__anon62
nregs	deps/jemalloc/include/jemalloc/internal/arena.h	/^	uint32_t		nregs;$/;"	m	struct:arena_bin_info_s
nregs_per_run_compute	deps/jemalloc/test/unit/pack.c	/^nregs_per_run_compute(void)$/;"	f	file:
nrelocs	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	uint64_t	nrelocs;$/;"	m	struct:ckh_s
nrepeats	deps/pmdk/src/benchmarks/benchmark.hpp	/^	size_t nrepeats;$/;"	m	struct:total_results
nreplicas	deps/pmdk/src/benchmarks/rpmem.cpp	/^	unsigned nreplicas;       \/* number of remote replicas *\/$/;"	m	struct:rpmem_bench	file:
nreplicas	deps/pmdk/src/common/set.h	/^	unsigned nreplicas;$/;"	m	struct:pool_set
nreplicas	deps/pmdk/src/libpmempool/replica.h	/^	unsigned nreplicas;$/;"	m	struct:poolset_health_status
nreplicas	deps/pmdk/src/libpmempool/transform.c	/^	unsigned nreplicas;$/;"	m	struct:poolset_compare_status	file:
nrequests	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nrequests;$/;"	m	struct:malloc_bin_stats_s
nrequests	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nrequests;$/;"	m	struct:malloc_large_stats_s
nrequests	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nrequests;$/;"	m	struct:tcache_bin_stats_s
nrequests_large	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nrequests_large;$/;"	m	struct:arena_stats_s
nrequests_small	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	uint64_t		nrequests_small;$/;"	m	struct:ctl_arena_stats_s
nresults	deps/lua/src/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:
nresults	deps/lua/src/lstate.h	/^  int nresults;  \/* expected number of results from this function *\/$/;"	m	struct:CallInfo
nresv	deps/pmdk/src/libpmemobj/memblock.h	/^	int nresv;$/;"	m	struct:memory_block_reserved
nrthreads	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^static int nrthreads; \/* in mixed tests, read threads *\/$/;"	v	file:
nruns	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	nruns;$/;"	m	struct:malloc_bin_stats_s
nruns_per_chunk_compute	deps/jemalloc/test/unit/pack.c	/^nruns_per_chunk_compute(void)$/;"	f	file:
ns	deps/jemalloc/include/jemalloc/internal/nstime.h	/^	uint64_t	ns;$/;"	m	struct:nstime_s
ns	deps/pmdk/src/libpmemblk/btt.c	/^	void *ns;$/;"	m	struct:btt	file:
ns_callback	deps/pmdk/src/libpmemblk/btt.h	/^struct ns_callback {$/;"	s
ns_cb	deps/pmdk/src/libpmemblk/blk.c	/^static struct ns_callback ns_cb = {$/;"	v	typeref:struct:ns_callback	file:
ns_cbp	deps/pmdk/src/libpmemblk/btt.c	/^	const struct ns_callback *ns_cbp;$/;"	m	struct:btt	typeref:struct:btt::ns_callback	file:
ns_is_zeroed	deps/pmdk/src/libpmemblk/btt.h	/^	int ns_is_zeroed;$/;"	m	struct:ns_callback
ns_resource	deps/pmdk/src/common/os_badblock.h	/^	unsigned long long ns_resource;	\/* address of the namespace *\/$/;"	m	struct:badblocks
nshrinkfails	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	uint64_t	nshrinkfails;$/;"	m	struct:ckh_s
nshrinks	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	uint64_t	nshrinks;$/;"	m	struct:ckh_s
nsmap	deps/pmdk/src/libpmemblk/blk.c	/^nsmap(void *ns, unsigned lane, void **addrp, size_t len, uint64_t off)$/;"	f	file:
nsmap	deps/pmdk/src/libpmemblk/btt.h	/^	ssize_t (*nsmap)(void *ns, unsigned lane, void **addrp,$/;"	m	struct:ns_callback
nsmap	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^nsmap(void *ns, unsigned lane, void **addrp, size_t len,$/;"	f	file:
nsread	deps/pmdk/src/libpmemblk/blk.c	/^nsread(void *ns, unsigned lane, void *buf, size_t count, uint64_t off)$/;"	f	file:
nsread	deps/pmdk/src/libpmemblk/btt.h	/^	int (*nsread)(void *ns, unsigned lane,$/;"	m	struct:ns_callback
nsread	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^nsread(void *ns, unsigned lane, void *buf, size_t count,$/;"	f	file:
nssync	deps/pmdk/src/libpmemblk/blk.c	/^nssync(void *ns, unsigned lane, void *addr, size_t len)$/;"	f	file:
nssync	deps/pmdk/src/libpmemblk/btt.h	/^	void (*nssync)(void *ns, unsigned lane, void *addr, size_t len);$/;"	m	struct:ns_callback
nssync	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^nssync(void *ns, unsigned lane, void *addr, size_t len)$/;"	f	file:
nstime_add	deps/jemalloc/include/jemalloc/internal/private_namespace.h	354;"	d
nstime_add	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	354;"	d
nstime_add	deps/jemalloc/src/nstime.c	/^nstime_add(nstime_t *time, const nstime_t *addend)$/;"	f
nstime_compare	deps/jemalloc/include/jemalloc/internal/private_namespace.h	355;"	d
nstime_compare	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	355;"	d
nstime_compare	deps/jemalloc/src/nstime.c	/^nstime_compare(const nstime_t *a, const nstime_t *b)$/;"	f
nstime_copy	deps/jemalloc/include/jemalloc/internal/private_namespace.h	356;"	d
nstime_copy	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	356;"	d
nstime_copy	deps/jemalloc/src/nstime.c	/^nstime_copy(nstime_t *time, const nstime_t *source)$/;"	f
nstime_divide	deps/jemalloc/include/jemalloc/internal/private_namespace.h	357;"	d
nstime_divide	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	357;"	d
nstime_divide	deps/jemalloc/src/nstime.c	/^nstime_divide(const nstime_t *time, const nstime_t *divisor)$/;"	f
nstime_get	deps/jemalloc/src/nstime.c	/^nstime_get(nstime_t *time)$/;"	f	file:
nstime_idivide	deps/jemalloc/include/jemalloc/internal/private_namespace.h	358;"	d
nstime_idivide	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	358;"	d
nstime_idivide	deps/jemalloc/src/nstime.c	/^nstime_idivide(nstime_t *time, uint64_t divisor)$/;"	f
nstime_imultiply	deps/jemalloc/include/jemalloc/internal/private_namespace.h	359;"	d
nstime_imultiply	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	359;"	d
nstime_imultiply	deps/jemalloc/src/nstime.c	/^nstime_imultiply(nstime_t *time, uint64_t multiplier)$/;"	f
nstime_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	360;"	d
nstime_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	360;"	d
nstime_init	deps/jemalloc/src/nstime.c	/^nstime_init(nstime_t *time, uint64_t ns)$/;"	f
nstime_init2	deps/jemalloc/include/jemalloc/internal/private_namespace.h	361;"	d
nstime_init2	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	361;"	d
nstime_init2	deps/jemalloc/src/nstime.c	/^nstime_init2(nstime_t *time, uint64_t sec, uint64_t nsec)$/;"	f
nstime_monotonic	deps/jemalloc/include/jemalloc/internal/private_namespace.h	362;"	d
nstime_monotonic	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	362;"	d
nstime_monotonic	deps/jemalloc/src/nstime.c	/^nstime_monotonic(void)$/;"	f
nstime_monotonic	deps/jemalloc/src/nstime.c	/^nstime_monotonic_t *nstime_monotonic = JEMALLOC_N(n_nstime_monotonic);$/;"	v
nstime_monotonic	deps/jemalloc/src/nstime.c	154;"	d	file:
nstime_monotonic	deps/jemalloc/src/nstime.c	155;"	d	file:
nstime_monotonic	deps/jemalloc/src/nstime.c	165;"	d	file:
nstime_monotonic	deps/jemalloc/src/nstime.c	166;"	d	file:
nstime_monotonic_mock	deps/jemalloc/test/unit/decay.c	/^nstime_monotonic_mock(void)$/;"	f	file:
nstime_monotonic_orig	deps/jemalloc/test/unit/decay.c	/^static nstime_monotonic_t *nstime_monotonic_orig;$/;"	v	file:
nstime_monotonic_t	deps/jemalloc/include/jemalloc/internal/nstime.h	/^typedef bool (nstime_monotonic_t)(void);$/;"	t
nstime_ns	deps/jemalloc/include/jemalloc/internal/private_namespace.h	363;"	d
nstime_ns	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	363;"	d
nstime_ns	deps/jemalloc/src/nstime.c	/^nstime_ns(const nstime_t *time)$/;"	f
nstime_nsec	deps/jemalloc/include/jemalloc/internal/private_namespace.h	364;"	d
nstime_nsec	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	364;"	d
nstime_nsec	deps/jemalloc/src/nstime.c	/^nstime_nsec(const nstime_t *time)$/;"	f
nstime_s	deps/jemalloc/include/jemalloc/internal/nstime.h	/^struct nstime_s {$/;"	s
nstime_sec	deps/jemalloc/include/jemalloc/internal/private_namespace.h	365;"	d
nstime_sec	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	365;"	d
nstime_sec	deps/jemalloc/src/nstime.c	/^nstime_sec(const nstime_t *time)$/;"	f
nstime_subtract	deps/jemalloc/include/jemalloc/internal/private_namespace.h	366;"	d
nstime_subtract	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	366;"	d
nstime_subtract	deps/jemalloc/src/nstime.c	/^nstime_subtract(nstime_t *time, const nstime_t *subtrahend)$/;"	f
nstime_t	deps/jemalloc/include/jemalloc/internal/nstime.h	/^typedef struct nstime_s nstime_t;$/;"	t	typeref:struct:nstime_s
nstime_update	deps/jemalloc/include/jemalloc/internal/private_namespace.h	367;"	d
nstime_update	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	367;"	d
nstime_update	deps/jemalloc/src/nstime.c	/^nstime_update(nstime_t *time)$/;"	f
nstime_update	deps/jemalloc/src/nstime.c	/^nstime_update_t *nstime_update = JEMALLOC_N(n_nstime_update);$/;"	v
nstime_update	deps/jemalloc/src/nstime.c	171;"	d	file:
nstime_update	deps/jemalloc/src/nstime.c	172;"	d	file:
nstime_update	deps/jemalloc/src/nstime.c	191;"	d	file:
nstime_update	deps/jemalloc/src/nstime.c	192;"	d	file:
nstime_update_mock	deps/jemalloc/test/unit/decay.c	/^nstime_update_mock(nstime_t *time)$/;"	f	file:
nstime_update_orig	deps/jemalloc/test/unit/decay.c	/^static nstime_update_t *nstime_update_orig;$/;"	v	file:
nstime_update_t	deps/jemalloc/include/jemalloc/internal/nstime.h	/^typedef bool (nstime_update_t)(nstime_t *);$/;"	t
nswrite	deps/pmdk/src/libpmemblk/blk.c	/^nswrite(void *ns, unsigned lane, const void *buf, size_t count,$/;"	f	file:
nswrite	deps/pmdk/src/libpmemblk/btt.h	/^	int (*nswrite)(void *ns, unsigned lane,$/;"	m	struct:ns_callback
nswrite	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^nswrite(void *ns, unsigned lane, const void *buf,$/;"	f	file:
nszero	deps/pmdk/src/libpmemblk/blk.c	/^nszero(void *ns, unsigned lane, size_t count, uint64_t off)$/;"	f	file:
nszero	deps/pmdk/src/libpmemblk/btt.h	/^	int (*nszero)(void *ns, unsigned lane, size_t count, uint64_t off);$/;"	m	struct:ns_callback
nszero	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^nszero(void *ns, unsigned lane, size_t len, uint64_t off)$/;"	f	file:
nth	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^static int nth;$/;"	v	file:
nthreads	deps/jemalloc/include/jemalloc/internal/arena.h	/^	unsigned		nthreads[2];$/;"	m	struct:arena_s
nthreads	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	unsigned		nthreads;$/;"	m	struct:ctl_arena_stats_s
nthreads	deps/pmdk/src/benchmarks/benchmark.hpp	/^	size_t nthreads;$/;"	m	struct:total_results
nthreads	deps/pmdk/src/libpmemobj/heap.c	/^	size_t nthreads;$/;"	m	struct:arena	file:
nthreads	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^static int nthreads;  \/* number of threads *\/$/;"	v	file:
nthreads	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    nthreads = 1$/;"	v	class:TEST3
nthreads	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    nthreads = 10$/;"	v	class:TEST4
nthreads	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    nthreads = 10$/;"	v	class:TEST5
nthreads	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    nthreads = 2$/;"	v	class:ObjDefragAdvancedMt
nthreads	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	/^	size_t nthreads;$/;"	m	struct:rpmemd_config
nthreads	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	size_t nthreads;	\/* number of threads for processing *\/$/;"	m	struct:rpmemd_fip	file:
nthreads	deps/pmdk/src/tools/rpmemd/rpmemd_fip.h	/^	size_t nthreads;$/;"	m	struct:rpmemd_fip_attr
nticks	deps/jemalloc/include/jemalloc/internal/ticker.h	/^	int32_t	nticks;$/;"	m	struct:ticker_s
ntohu64	src/endianconv.h	68;"	d
ntohu64	src/endianconv.h	71;"	d
nul	src/setproctitle.c	/^	char *nul;$/;"	m	struct:__anon183	file:
nullbulk	src/server.h	/^    *colon, *nullbulk, *nullmultibulk, *queued,$/;"	m	struct:sharedObjectsStruct
nullmultibulk	src/server.h	/^    *colon, *nullbulk, *nullmultibulk, *queued,$/;"	m	struct:sharedObjectsStruct
num_children	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	uint8_t num_children;$/;"	m	struct:_art_node
num_children	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	uint8_t num_children;$/;"	m	struct:_art_node
num_dict_entries	src/server.h	/^	uint64_t num_dict_entries;$/;"	m	struct:redis_pmem_root
number	deps/lua/src/lua_cjson.c	/^        double number;$/;"	m	union:__anon45::__anon46	file:
number	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^	uint64_t number;$/;"	m	struct:data_s	file:
number_str	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^	char number_str[NUMBER_LEN];$/;"	m	struct:data_s	file:
numclients	src/redis-benchmark.c	/^    int numclients;$/;"	m	struct:config	file:
numfds	src/rio.h	/^            int numfds;$/;"	m	struct:_rio::__anon179::__anon182
numints	deps/lua/src/ltable.c	69;"	d	file:
numops	src/server.h	/^    int numops;$/;"	m	struct:redisOpArray
numparams	deps/lua/src/lobject.h	/^  lu_byte numparams;$/;"	m	struct:Proto
numreplicas	src/server.h	/^    int numreplicas;        \/* Number of replicas we are waiting for ACK. *\/$/;"	m	struct:blockingState
numslaves	src/cluster.h	/^    int numslaves;  \/* Number of slave nodes, if this is a master *\/$/;"	m	struct:clusterNode
numslots	src/cluster.h	/^    int numslots;   \/* Number of slots handled by this node *\/$/;"	m	struct:clusterNode
numusearray	deps/lua/src/ltable.c	/^static int numusearray (const Table *t, int *nums) {$/;"	f	file:
numusehash	deps/lua/src/ltable.c	/^static int numusehash (const Table *t, int *nums, int *pnasize) {$/;"	f	file:
nupdates_mock	deps/jemalloc/test/unit/decay.c	/^static unsigned nupdates_mock;$/;"	v	file:
nups	deps/lua/src/lobject.h	/^  lu_byte nups;  \/* number of upvalues *\/$/;"	m	struct:Proto
nups	deps/lua/src/lua.h	/^  int nups;		\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug
nuse	deps/lua/src/lstate.h	/^  lu_int32 nuse;  \/* number of elements *\/$/;"	m	struct:stringtable
nval	deps/lua/src/lparser.h	/^    lua_Number nval;$/;"	m	union:expdesc::__anon31
nvalue	deps/lua/src/lobject.h	93;"	d
nvalues	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	size_t nvalues;$/;"	m	struct:clo_vec_vlist
nvalues	deps/pmdk/src/libpmemobj/memblock.h	/^	unsigned nvalues; \/* number of 8 byte values - size of values array *\/$/;"	m	struct:run_bitmap
nwthreads	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^static int nwthreads; \/* ... and write threads *\/$/;"	v	file:
nzones	deps/pmdk/src/libpmemobj/heap.c	/^	unsigned nzones;$/;"	m	struct:heap_rt	file:
o2s	deps/jemalloc/src/util.c	/^o2s(uintmax_t x, bool alt_form, char *s, size_t *slen_p)$/;"	f	file:
o_down_since_time	src/sentinel.c	/^    mstime_t o_down_since_time; \/* Objectively down since time. *\/$/;"	m	struct:sentinelRedisInstance	file:
obc	deps/pmdk/src/librpmem/rpmem.c	/^	struct rpmem_obc *obc;		\/* out-of-band connection handle *\/$/;"	m	struct:rpmem_pool	typeref:struct:rpmem_pool::rpmem_obc	file:
obc	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^	struct rpmemd_obc *obc;	\/* out-of-band connection handle *\/$/;"	m	struct:rpmemd	typeref:struct:rpmemd::rpmemd_obc	file:
obj	deps/hiredis/hiredis.h	/^    void *obj; \/* holds user-generated value for a read task *\/$/;"	m	struct:redisReadTask
obj	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	fn_num_t obj;$/;"	m	struct:pobj_bench	file:
obj	deps/pmdk/src/libpmempool/pool.h	/^		} obj;$/;"	m	union:pool_params::__anon90	typeref:struct:pool_params::__anon90::__anon92
obj	deps/pmdk/src/test/obj_alloc/obj_alloc.c	/^	TOID(struct object) obj;$/;"	m	struct:root	file:
obj	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^	TOID(struct object) obj;$/;"	m	struct:root	file:
obj	deps/pmdk/src/test/obj_toid/obj_toid.c	/^struct obj {$/;"	s	file:
obj	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^	TOID(struct pmem_obj) obj;$/;"	m	struct:pmem_root	file:
obj	deps/pmdk/src/test/obj_tx_locks_abort/obj_tx_locks_abort.c	/^struct obj {$/;"	s	file:
obj	deps/pmdk/src/tools/pmempool/common.h	/^		} obj;$/;"	m	union:pmem_pool_params::__anon104	typeref:struct:pmem_pool_params::__anon104::__anon106
obj	deps/pmdk/src/tools/pmempool/info.h	/^	} obj;$/;"	m	struct:pmem_info	typeref:struct:pmem_info::__anon111
obj	deps/pmdk/src/tools/pmempool/info.h	/^	} obj;$/;"	m	struct:pmempool_info_args	typeref:struct:pmempool_info_args::__anon109
obj	src/server.h	/^    robj *obj;$/;"	m	struct:_redisSortObject
obj	src/server.h	/^    robj *obj;$/;"	m	struct:zskiplistNode
obj2gco	deps/lua/src/lstate.h	162;"	d
obj_alloc_construct	deps/pmdk/src/libpmemobj/obj.c	/^obj_alloc_construct(PMEMobjpool *pop, PMEMoid *oidp, size_t size,$/;"	f	file:
obj_alloc_root	deps/pmdk/src/libpmemobj/obj.c	/^obj_alloc_root(PMEMobjpool *pop, size_t size,$/;"	f	file:
obj_args	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	struct obj_tx_args *obj_args; \/* pointer to benchmark arguments *\/$/;"	m	struct:obj_tx_bench	typeref:struct:obj_tx_bench::obj_tx_args	file:
obj_bench	deps/pmdk/src/benchmarks/obj_lanes.cpp	/^struct obj_bench {$/;"	s	file:
obj_bench	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^struct obj_bench {$/;"	s	file:
obj_bench	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^static struct obj_bench {$/;"	s	file:
obj_bench	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^} obj_bench;$/;"	v	typeref:struct:obj_bench	file:
obj_bench	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^struct obj_bench {$/;"	s	file:
obj_bench	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^} obj_bench;$/;"	v	typeref:struct:obj_tx_bench	file:
obj_check_basic	deps/pmdk/src/libpmemobj/obj.c	/^obj_check_basic(PMEMobjpool *pop, size_t mapped_size)$/;"	f	file:
obj_check_basic_local	deps/pmdk/src/libpmemobj/obj.c	/^obj_check_basic_local(PMEMobjpool *pop, size_t mapped_size)$/;"	f	file:
obj_check_basic_remote	deps/pmdk/src/libpmemobj/obj.c	/^obj_check_basic_remote(PMEMobjpool *pop, size_t mapped_size)$/;"	f	file:
obj_cleanup_remote	deps/pmdk/src/libpmemobj/obj.c	/^obj_cleanup_remote(PMEMobjpool *pop)$/;"	f	file:
obj_ctl_init_and_load	deps/pmdk/src/libpmemobj/obj.c	/^obj_ctl_init_and_load(PMEMobjpool *pop)$/;"	f	file:
obj_descr_check	deps/pmdk/src/libpmemobj/obj.c	/^obj_descr_check(PMEMobjpool *pop, const char *layout, size_t poolsize)$/;"	f	file:
obj_descr_create	deps/pmdk/src/libpmemobj/obj.c	/^obj_descr_create(PMEMobjpool *pop, const char *layout, size_t poolsize)$/;"	f	file:
obj_direct	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^static struct benchmark_info obj_direct;$/;"	v	typeref:struct:benchmark_info	file:
obj_direct	deps/pmdk/src/test/obj_direct/obj_direct.c	/^obj_direct(PMEMoid oid)$/;"	f	file:
obj_direct_inline	deps/pmdk/src/test/obj_direct/obj_direct_inline.c	/^obj_direct_inline(PMEMoid oid)$/;"	f
obj_direct_non_inline	deps/pmdk/src/test/obj_direct/obj_direct_non_inline.c	/^obj_direct_non_inline(PMEMoid oid)$/;"	f
obj_doffset	deps/pmdk/src/libpmemobj/list.c	/^	uint64_t obj_doffset;$/;"	m	struct:list_args_common	file:
obj_doffset	deps/pmdk/src/libpmemobj/list.c	/^	uint64_t obj_doffset;$/;"	m	struct:list_args_reinsert	file:
obj_doffset	deps/pmdk/src/libpmemobj/list.c	/^	uint64_t obj_doffset;$/;"	m	struct:list_args_remove	file:
obj_drain	deps/pmdk/src/test/obj_list/obj_list_mocks.c	/^obj_drain(void *ctx)$/;"	f	file:
obj_drain	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^obj_drain(void *ctx)$/;"	f	file:
obj_drain_empty	deps/pmdk/src/libpmemobj/obj.c	/^obj_drain_empty(void)$/;"	f	file:
obj_exit	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^obj_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
obj_exit	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
obj_fini	deps/pmdk/src/libpmemobj/obj.c	/^obj_fini(void)$/;"	f
obj_flush	deps/pmdk/src/test/obj_list/obj_list_mocks.c	/^obj_flush(void *ctx, const void *addr, size_t len, unsigned flags)$/;"	f	file:
obj_flush	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^obj_flush(void *ctx, const void *addr, size_t len, unsigned flags)$/;"	f	file:
obj_format_feat_default	deps/pmdk/src/libpmemobj/obj.h	/^static const features_t obj_format_feat_default = OBJ_FORMAT_FEAT_CHECK;$/;"	v
obj_free	deps/pmdk/src/libpmemobj/obj.c	/^obj_free(PMEMobjpool *pop, PMEMoid *oidp)$/;"	f	file:
obj_free	deps/pmdk/src/test/set_funcs/set_funcs.c	/^obj_free(void *ptr)$/;"	f	file:
obj_free_worker_items	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_free_worker_items(struct obj_worker *obj_worker)$/;"	f	file:
obj_free_worker_list	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_free_worker_list(struct obj_worker *obj_worker)$/;"	f	file:
obj_get_nlanes	deps/pmdk/src/libpmemobj/obj.c	/^obj_get_nlanes(void)$/;"	f	file:
obj_handle_remote_persist_error	deps/pmdk/src/libpmemobj/obj.c	/^obj_handle_remote_persist_error(PMEMobjpool *pop)$/;"	f	file:
obj_heap_drain	deps/pmdk/src/test/obj_heap/obj_heap.c	/^obj_heap_drain(void *ctx)$/;"	f	file:
obj_heap_flush	deps/pmdk/src/test/obj_heap/obj_heap.c	/^obj_heap_flush(void *ctx, const void *ptr, size_t sz, unsigned flags)$/;"	f	file:
obj_heap_memset	deps/pmdk/src/test/obj_heap/obj_heap.c	/^obj_heap_memset(void *ctx, void *ptr, int c, size_t sz, unsigned flags)$/;"	f	file:
obj_heap_persist	deps/pmdk/src/test/obj_heap/obj_heap.c	/^obj_heap_persist(void *ctx, const void *ptr, size_t sz, unsigned flags)$/;"	f	file:
obj_init	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^obj_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
obj_init	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
obj_init	deps/pmdk/src/libpmemobj/obj.c	/^obj_init(void)$/;"	f
obj_init_list	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_init_list(struct worker_info *worker, size_t n_oids, size_t list_len)$/;"	f	file:
obj_init_worker	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_init_worker(struct worker_info *worker, size_t n_elm, size_t list_len)$/;"	f	file:
obj_insert	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^static struct benchmark_info obj_insert;$/;"	v	typeref:struct:benchmark_info	file:
obj_insert_init_worker	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_insert_init_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
obj_insert_new	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^static struct benchmark_info obj_insert_new;$/;"	v	typeref:struct:benchmark_info	file:
obj_insert_new_init_worker	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_insert_new_init_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
obj_insert_new_op	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_insert_new_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
obj_insert_op	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_insert_op(struct operation_info *info)$/;"	f	file:
obj_lines_constructor	deps/pmdk/src/benchmarks/obj_lanes.cpp	/^obj_lines_constructor(void)$/;"	f
obj_list_args	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^struct obj_list_args {$/;"	s	file:
obj_list_clo	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^static struct benchmark_clo obj_list_clo[6];$/;"	v	typeref:struct:benchmark_clo	file:
obj_malloc	deps/pmdk/src/test/set_funcs/set_funcs.c	/^obj_malloc(size_t size)$/;"	f	file:
obj_memcpy	deps/pmdk/src/test/obj_list/obj_list_mocks.c	/^obj_memcpy(void *ctx, void *dest, const void *src, size_t len,$/;"	f	file:
obj_memcpy	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^obj_memcpy(void *ctx, void *dest, const void *src, size_t len, unsigned flags)$/;"	f	file:
obj_memset	deps/pmdk/src/test/obj_list/obj_list_mocks.c	/^obj_memset(void *ctx, void *ptr, int c, size_t sz, unsigned flags)$/;"	f	file:
obj_memset	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^obj_memset(void *ctx, void *ptr, int c, size_t sz, unsigned flags)$/;"	f	file:
obj_move	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^static struct benchmark_info obj_move;$/;"	v	typeref:struct:benchmark_info	file:
obj_move_free_worker	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_move_free_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
obj_move_init_worker	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_move_init_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
obj_move_op	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_move_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
obj_msync_nofail	deps/pmdk/src/libpmemobj/obj.c	/^obj_msync_nofail(const void *addr, size_t size)$/;"	f	file:
obj_msync_nofail	deps/pmdk/src/test/obj_list/obj_list_mocks.c	/^obj_msync_nofail(const void *addr, size_t size)$/;"	f	file:
obj_msync_nofail	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^obj_msync_nofail(const void *addr, size_t size)$/;"	f	file:
obj_nopmem_memcpy	deps/pmdk/src/libpmemobj/obj.c	/^obj_nopmem_memcpy(void *dest, const void *src, size_t len, unsigned flags)$/;"	f	file:
obj_nopmem_memmove	deps/pmdk/src/libpmemobj/obj.c	/^obj_nopmem_memmove(void *dest, const void *src, size_t len, unsigned flags)$/;"	f	file:
obj_nopmem_memset	deps/pmdk/src/libpmemobj/obj.c	/^obj_nopmem_memset(void *dest, int c, size_t len, unsigned flags)$/;"	f	file:
obj_norep_drain	deps/pmdk/src/libpmemobj/obj.c	/^obj_norep_drain(void *ctx)$/;"	f	file:
obj_norep_flush	deps/pmdk/src/libpmemobj/obj.c	/^obj_norep_flush(void *ctx, const void *addr, size_t len, unsigned flags)$/;"	f	file:
obj_norep_memcpy	deps/pmdk/src/libpmemobj/obj.c	/^obj_norep_memcpy(void *ctx, void *dest, const void *src, size_t len,$/;"	f	file:
obj_norep_memmove	deps/pmdk/src/libpmemobj/obj.c	/^obj_norep_memmove(void *ctx, void *dest, const void *src, size_t len,$/;"	f	file:
obj_norep_memset	deps/pmdk/src/libpmemobj/obj.c	/^obj_norep_memset(void *ctx, void *dest, int c, size_t len, unsigned flags)$/;"	f	file:
obj_norep_persist	deps/pmdk/src/libpmemobj/obj.c	/^obj_norep_persist(void *ctx, const void *addr, size_t len, unsigned flags)$/;"	f	file:
obj_op_sim	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_op_sim(struct obj_tx_bench *obj_bench, struct worker_info *worker,$/;"	f	file:
obj_op_tx	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_op_tx(struct obj_tx_bench *obj_bench, struct worker_info *worker,$/;"	f	file:
obj_open	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^static struct benchmark_info obj_open;$/;"	v	typeref:struct:benchmark_info	file:
obj_open_common	deps/pmdk/src/libpmemobj/obj.c	/^obj_open_common(const char *path, const char *layout, unsigned flags, int boot)$/;"	f	file:
obj_persist	deps/pmdk/src/test/obj_list/obj_list_mocks.c	/^obj_persist(void *ctx, const void *addr, size_t len, unsigned flags)$/;"	f	file:
obj_persist	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^obj_persist(void *ctx, const void *addr, size_t len, unsigned flags)$/;"	f	file:
obj_persist_clo	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^static struct benchmark_clo obj_persist_clo[1];$/;"	v	typeref:struct:benchmark_clo	file:
obj_persist_exit	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^obj_persist_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
obj_persist_info	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^static struct benchmark_info obj_persist_info;$/;"	v	typeref:struct:benchmark_info	file:
obj_persist_init	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^obj_persist_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
obj_persist_op	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^obj_persist_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
obj_pmalloc_constructor	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^obj_pmalloc_constructor(void)$/;"	f
obj_pmemblk	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^POBJ_LAYOUT_BEGIN(obj_pmemblk);$/;"	v
obj_pmemblk	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^POBJ_LAYOUT_END(obj_pmemblk);$/;"	v
obj_pmemlog_macros	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^POBJ_LAYOUT_BEGIN(obj_pmemlog_macros);$/;"	v
obj_pmemlog_macros	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^POBJ_LAYOUT_END(obj_pmemlog_macros);$/;"	v
obj_pmemlog_minimal	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^POBJ_LAYOUT_BEGIN(obj_pmemlog_minimal);$/;"	v
obj_pmemlog_minimal	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^POBJ_LAYOUT_END(obj_pmemlog_minimal);$/;"	v
obj_pmemlog_simple	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^POBJ_LAYOUT_BEGIN(obj_pmemlog_simple);$/;"	v
obj_pmemlog_simple	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^POBJ_LAYOUT_END(obj_pmemlog_simple);$/;"	v
obj_pool_cleanup	deps/pmdk/src/libpmemobj/obj.c	/^obj_pool_cleanup(PMEMobjpool *pop)$/;"	f	file:
obj_pool_close	deps/pmdk/src/libpmemobj/obj.c	/^obj_pool_close(struct pool_set *set)$/;"	f	file:
obj_pool_desc_size	deps/pmdk/src/test/unittest/unittest.sh	/^function obj_pool_desc_size() {$/;"	f
obj_pool_init	deps/pmdk/src/libpmemobj/obj.c	/^obj_pool_init(void)$/;"	f	file:
obj_pool_lock_cleanup	deps/pmdk/src/libpmemobj/obj.c	/^obj_pool_lock_cleanup(PMEMobjpool *pop)$/;"	f	file:
obj_pool_open	deps/pmdk/src/libpmemobj/obj.c	/^obj_pool_open(struct pool_set **set, const char *path, unsigned flags,$/;"	f	file:
obj_read_remote	deps/pmdk/src/libpmemobj/obj.c	/^obj_read_remote(void *ctx, uintptr_t base, void *dest, void *addr,$/;"	f
obj_realloc	deps/pmdk/src/test/set_funcs/set_funcs.c	/^obj_realloc(void *ptr, size_t size)$/;"	f	file:
obj_realloc_common	deps/pmdk/src/libpmemobj/obj.c	/^obj_realloc_common(PMEMobjpool *pop,$/;"	f	file:
obj_remote_persist	deps/pmdk/src/libpmemobj/obj.c	/^obj_remote_persist(PMEMobjpool *pop, const void *addr, size_t len,$/;"	f	file:
obj_remove	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^static struct benchmark_info obj_remove;$/;"	v	typeref:struct:benchmark_info	file:
obj_remove_free	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^static struct benchmark_info obj_remove_free;$/;"	v	typeref:struct:benchmark_info	file:
obj_remove_free_op	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_remove_free_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
obj_remove_init_worker	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_remove_init_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
obj_remove_op	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^obj_remove_op(struct operation_info *info)$/;"	f	file:
obj_rep_drain	deps/pmdk/src/libpmemobj/obj.c	/^obj_rep_drain(void *ctx)$/;"	f	file:
obj_rep_flush	deps/pmdk/src/libpmemobj/obj.c	/^obj_rep_flush(void *ctx, const void *addr, size_t len, unsigned flags)$/;"	f	file:
obj_rep_memcpy	deps/pmdk/src/libpmemobj/obj.c	/^obj_rep_memcpy(void *ctx, void *dest, const void *src, size_t len,$/;"	f	file:
obj_rep_memmove	deps/pmdk/src/libpmemobj/obj.c	/^obj_rep_memmove(void *ctx, void *dest, const void *src, size_t len,$/;"	f	file:
obj_rep_memset	deps/pmdk/src/libpmemobj/obj.c	/^obj_rep_memset(void *ctx, void *dest, int c, size_t len, unsigned flags)$/;"	f	file:
obj_rep_persist	deps/pmdk/src/libpmemobj/obj.c	/^obj_rep_persist(void *ctx, const void *addr, size_t len, unsigned flags)$/;"	f	file:
obj_replica_fini	deps/pmdk/src/libpmemobj/obj.c	/^obj_replica_fini(struct pool_replica *repset)$/;"	f	file:
obj_replica_init	deps/pmdk/src/libpmemobj/obj.c	/^obj_replica_init(PMEMobjpool *rep, struct pool_set *set, unsigned repidx,$/;"	f	file:
obj_replica_init_local	deps/pmdk/src/libpmemobj/obj.c	/^obj_replica_init_local(PMEMobjpool *rep, int is_pmem, size_t resvsize)$/;"	f	file:
obj_replica_init_remote	deps/pmdk/src/libpmemobj/obj.c	/^obj_replica_init_remote(PMEMobjpool *rep, struct pool_set *set,$/;"	f	file:
obj_replicas_check_basic	deps/pmdk/src/libpmemobj/obj.c	/^obj_replicas_check_basic(PMEMobjpool *pop)$/;"	f	file:
obj_replicas_cleanup	deps/pmdk/src/libpmemobj/obj.c	/^obj_replicas_cleanup(struct pool_set *set)$/;"	f	file:
obj_replicas_fini	deps/pmdk/src/libpmemobj/obj.c	/^obj_replicas_fini(struct pool_set *set)$/;"	f	file:
obj_replicas_init	deps/pmdk/src/libpmemobj/obj.c	/^obj_replicas_init(struct pool_set *set)$/;"	f	file:
obj_runtime_cleanup_common	deps/pmdk/src/libpmemobj/obj.c	/^obj_runtime_cleanup_common(PMEMobjpool *pop)$/;"	f	file:
obj_runtime_init	deps/pmdk/src/libpmemobj/obj.c	/^obj_runtime_init(PMEMobjpool *pop, int rdonly, int boot, unsigned nlanes)$/;"	f	file:
obj_runtime_init_common	deps/pmdk/src/libpmemobj/obj.c	/^obj_runtime_init_common(PMEMobjpool *pop)$/;"	f	file:
obj_size	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	size_t obj_size;$/;"	m	struct:pobj_args	file:
obj_size	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^	size_t obj_size;      \/* size of each allocated objects *\/$/;"	m	struct:obj_bench	file:
obj_size	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	size_t obj_size;    \/* size of each allocated object *\/$/;"	m	struct:obj_tx_args	file:
obj_strdup	deps/pmdk/src/test/set_funcs/set_funcs.c	/^obj_strdup(const char *s)$/;"	f	file:
obj_sync_persist	deps/pmdk/src/test/obj_sync/obj_sync.c	/^obj_sync_persist(void *ctx, const void *ptr, size_t sz, unsigned flags)$/;"	f	file:
obj_tx_abort	deps/pmdk/src/libpmemobj/tx.c	/^obj_tx_abort(int errnum, int user)$/;"	f	file:
obj_tx_add_range	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static struct benchmark_info obj_tx_add_range;$/;"	v	typeref:struct:benchmark_info	file:
obj_tx_add_range_init	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_tx_add_range_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
obj_tx_add_range_op	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_tx_add_range_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
obj_tx_alloc	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static struct benchmark_info obj_tx_alloc;$/;"	v	typeref:struct:benchmark_info	file:
obj_tx_alloc_init	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_tx_alloc_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
obj_tx_args	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^struct obj_tx_args {$/;"	s	file:
obj_tx_bench	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static struct obj_tx_bench {$/;"	s	file:
obj_tx_callback	deps/pmdk/src/libpmemobj/tx.c	/^obj_tx_callback(struct tx *tx)$/;"	f	file:
obj_tx_clo	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static struct benchmark_clo obj_tx_clo[8];$/;"	v	typeref:struct:benchmark_clo	file:
obj_tx_exit	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_tx_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f
obj_tx_exit_worker	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_tx_exit_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
obj_tx_fail_err	deps/pmdk/src/libpmemobj/tx.c	/^obj_tx_fail_err(int errnum, uint64_t flags)$/;"	f	file:
obj_tx_fail_null	deps/pmdk/src/libpmemobj/tx.c	/^obj_tx_fail_null(int errnum, uint64_t flags)$/;"	f	file:
obj_tx_free	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static struct benchmark_info obj_tx_free;$/;"	v	typeref:struct:benchmark_info	file:
obj_tx_free_init	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_tx_free_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
obj_tx_init	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_tx_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f
obj_tx_init_worker	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_tx_init_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
obj_tx_init_worker_alloc_obj	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_tx_init_worker_alloc_obj(struct benchmark *bench,$/;"	f	file:
obj_tx_op	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_tx_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
obj_tx_realloc	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static struct benchmark_info obj_tx_realloc;$/;"	v	typeref:struct:benchmark_info	file:
obj_tx_realloc_exit	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_tx_realloc_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
obj_tx_realloc_init	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^obj_tx_realloc_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
obj_tx_worker	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^struct obj_tx_worker {$/;"	s	file:
obj_verify	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^POBJ_LAYOUT_BEGIN(obj_verify);$/;"	v
obj_verify	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^POBJ_LAYOUT_END(obj_verify);$/;"	v
obj_vg_boot	deps/pmdk/src/libpmemobj/obj.c	/^obj_vg_boot(struct pmemobjpool *pop)$/;"	f	file:
obj_vg_check_no_undef	deps/pmdk/src/libpmemobj/obj.c	/^obj_vg_check_no_undef(struct pmemobjpool *pop)$/;"	f	file:
obj_worker	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^struct obj_worker {$/;"	s	file:
objdir	deps/pmdk/src/benchmarks/Makefile	/^objdir=.$/;"	m
objdir	deps/pmdk/src/test/unittest/Makefile	/^objdir=.$/;"	m
object	deps/pmdk/src/test/obj_alloc/obj_alloc.c	/^struct object {$/;"	s	file:
object	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^struct object {$/;"	s	file:
object	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^struct object {$/;"	s	file:
object	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^struct object {$/;"	s	file:
object	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^struct object {$/;"	s	file:
object	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^struct object {$/;"	s	file:
object	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^struct object {$/;"	s	file:
objectCommand	src/object.c	/^void objectCommand(client *c) {$/;"	f
objectCommandLookup	src/object.c	/^robj *objectCommandLookup(client *c, robj *key) {$/;"	f
objectCommandLookupOrReply	src/object.c	/^robj *objectCommandLookupOrReply(client *c, robj *key, robj *reply) {$/;"	f
object_callback	deps/pmdk/src/libpmemobj/palloc.h	/^typedef int (*object_callback)(const struct memory_block *m, void *arg);$/;"	t
object_macro	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^struct object_macro {$/;"	s	file:
object_size	deps/pmdk/src/test/obj_pmalloc_rand_mt/obj_pmalloc_rand_mt.c	/^static size_t object_size;$/;"	v	file:
objects	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static PMEMoid *objects;$/;"	v	file:
objfs_block_t	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^typedef uint8_t objfs_block_t;$/;"	t	file:
objfs_dir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^struct objfs_dir {$/;"	s	file:
objfs_dir_entry	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^struct objfs_dir_entry {$/;"	s	file:
objfs_file	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^struct objfs_file {$/;"	s	file:
objfs_inode	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^struct objfs_inode {$/;"	s	file:
objfs_super	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^struct objfs_super {$/;"	s	file:
objfs_symlink	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^struct objfs_symlink {$/;"	s	file:
objid	deps/pmdk/src/tools/pmempool/info.h	/^		uint64_t objid;$/;"	m	struct:pmem_info::__anon111
objroot	deps/jemalloc/Makefile	/^objroot := $/;"	m
objs	deps/jemalloc/include/jemalloc/internal/quarantine.h	/^	quarantine_obj_t	objs[1]; \/* Dynamically sized ring buffer. *\/$/;"	m	struct:quarantine_s
obuf	deps/hiredis/hiredis.h	/^    char *obuf; \/* Write buffer *\/$/;"	m	struct:redisContext
obuf	src/redis-benchmark.c	/^    sds obuf;$/;"	m	struct:_client	file:
obuf_soft_limit_reached_time	src/server.h	/^    time_t obuf_soft_limit_reached_time;$/;"	m	struct:client
oem_id	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint8_t oem_id[NFIT_OEM_ID_LEN];$/;"	m	struct:nfit_header
oem_revision	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint32_t oem_revision;$/;"	m	struct:nfit_header
oem_table_id	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint8_t oem_table_id[NFIT_OEM_TABLE_ID_LEN];$/;"	m	struct:nfit_header
ofd	deps/linenoise/linenoise.c	/^    int ofd;            \/* Terminal stdout file descriptor. *\/$/;"	m	struct:linenoiseState	file:
off	deps/pmdk/src/benchmarks/benchmark.hpp	/^	size_t off;$/;"	m	struct:benchmark_clo
off	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	uint64_t off;$/;"	m	struct:offset	file:
off	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	uint64_t off;$/;"	m	struct:pmemoid
off	deps/pmdk/src/include/libpmemobj/base.h	/^	uint64_t off;$/;"	m	struct:pmemoid
off	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	size_t off;$/;"	m	struct:flush_thread_arg	file:
off_entire	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^off_entire(struct obj_tx_bench *obj_bench, size_t idx)$/;"	f	file:
off_range	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^off_range(struct obj_tx_bench *obj_bench, size_t idx)$/;"	f	file:
offs	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^	TOID(uint64_t) offs; \/* vector of the allocated object offsets *\/$/;"	m	struct:my_root	file:
offs	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^	uint64_t *offs;		   \/* pointer to the vector of offsets *\/$/;"	m	struct:obj_bench	file:
offs	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^	uint64_t offs[MAX_THREADS][MAX_OPS_PER_THREAD];$/;"	m	struct:root	file:
offset	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^struct offset {$/;"	s	file:
offset	deps/pmdk/src/common/os_badblock.h	/^	unsigned long long offset;$/;"	m	struct:bad_block
offset	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^    uint64_t offset;$/;"	m	struct:examine_ctx	file:
offset	deps/pmdk/src/include/libpmem2.h	/^	size_t offset;$/;"	m	struct:pmem2_badblock
offset	deps/pmdk/src/include/libpmemobj/action_base.h	/^	uint64_t offset;$/;"	m	struct:pobj_action_heap
offset	deps/pmdk/src/libpmem2/config.h	/^	size_t offset;$/;"	m	struct:pmem2_config
offset	deps/pmdk/src/libpmemobj/memops.c	/^	size_t offset; \/* data offset inside of the log *\/$/;"	m	struct:operation_log	file:
offset	deps/pmdk/src/libpmemobj/palloc.c	/^			uint64_t offset;$/;"	m	struct:pobj_action_internal::__anon127::__anon128	file:
offset	deps/pmdk/src/libpmemobj/tx.c	/^	uint64_t offset;$/;"	m	struct:tx_range_def	file:
offset	deps/pmdk/src/libpmemobj/ulog.h	/^	uint64_t offset; \/* offset with operation type flag *\/$/;"	m	struct:ulog_entry_base
offset	deps/pmdk/src/libpmempool/check_util.h	/^	uint64_t offset;$/;"	m	struct:__anon87
offset	deps/pmdk/src/libpmempool/pool.h	/^	uint64_t offset;$/;"	m	struct:arena
offset	deps/pmdk/src/tools/daxio/daxio.c	/^	size_t offset;		\/* seek or skip *\/$/;"	m	struct:daxio_device	file:
offset	src/bitops.c	/^    uint64_t offset;    \/* Bitfield offset. *\/$/;"	m	struct:bitfieldOp	file:
offset	src/cluster.h	/^    uint64_t offset;    \/* Master replication offset if node is a master or$/;"	m	struct:__anon177
offset	src/quicklist.h	/^    int offset;$/;"	m	struct:quicklistEntry
offset	src/quicklist.h	/^    long offset; \/* offset in current ziplist *\/$/;"	m	struct:quicklistIter
offset_fn	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^typedef size_t (*offset_fn)(struct pmem_bench *pmb,$/;"	t	file:
offset_in	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^	size_t offset_in;	\/* offset from beginning of input file for *\/$/;"	m	struct:ddmap_context	file:
offset_logical	deps/pmdk/src/common/extent.h	/^	uint64_t offset_logical;$/;"	m	struct:extent
offset_out	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^	size_t offset_out;	\/* offset from beginning of output file for *\/$/;"	m	struct:ddmap_context	file:
offset_physical	deps/pmdk/src/common/extent.h	/^	uint64_t offset_physical;$/;"	m	struct:extent
offset_state	deps/jemalloc/include/jemalloc/internal/arena.h	/^	size_t			offset_state;$/;"	m	struct:arena_s
offset_string	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^    char *offset_string;$/;"	m	struct:examine_ctx	file:
offsetof	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h	46;"	d
offsetof	deps/pmdk/src/include/libpmemobj/types.h	73;"	d
offsetof	deps/pmdk/src/include/libpmemobj/types.h	74;"	d
offsetp	deps/pmdk/src/libpmemobj/palloc.c	/^	uint64_t **offsetp;$/;"	m	struct:palloc_defrag_entry	file:
offsets	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	uint64_t *offsets; \/* write offsets *\/$/;"	m	struct:pmem_bench	file:
offsets	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	uint64_t *offsets;	 \/* random\/sequential address offsets *\/$/;"	m	struct:memset_bench	file:
offsets	deps/pmdk/src/benchmarks/rpmem.cpp	/^	size_t *offsets;	  \/* random\/sequential address offsets *\/$/;"	m	struct:rpmem_bench	file:
offsets_pos	deps/pmdk/src/benchmarks/rpmem.cpp	/^	size_t *offsets_pos;      \/* position within offsets *\/$/;"	m	struct:rpmem_bench	file:
ofh	deps/pmdk/src/tools/pmempool/dump.c	/^	FILE *ofh;$/;"	m	struct:pmempool_dump	file:
ofname	deps/pmdk/src/tools/pmempool/dump.c	/^	char *ofname;$/;"	m	struct:pmempool_dump	file:
oid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	PMEMoid oid;$/;"	m	union:_toid_art_leaf_toid
oid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	PMEMoid oid;$/;"	m	union:_toid_art_node16_toid
oid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	PMEMoid oid;$/;"	m	union:_toid_art_node256_toid
oid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	PMEMoid oid;$/;"	m	union:_toid_art_node48_toid
oid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	PMEMoid oid;$/;"	m	union:_toid_art_node4_toid
oid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	PMEMoid oid;$/;"	m	union:_toid_art_node_toid
oid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	PMEMoid oid;$/;"	m	union:_toid_art_node_u_toid
oid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	PMEMoid oid;$/;"	m	union:_toid_var_string_toid
oid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	PMEMoid oid;$/;"	m	union:art_tree_root_toid
oid	deps/pmdk/src/test/obj_action/obj_action.c	/^		PMEMoid oid;$/;"	m	struct:root::__anon135	file:
oid	deps/pmdk/src/test/obj_action/obj_action.c	/^		PMEMoid oid;$/;"	m	struct:root::__anon136	file:
oid	deps/pmdk/src/test/obj_action/obj_action.c	/^		PMEMoid oid;$/;"	m	struct:root::__anon137	file:
oid	deps/pmdk/src/test/obj_action/obj_action.c	/^		PMEMoid oid;$/;"	m	struct:root::__anon138	file:
oid	deps/pmdk/src/test/obj_action/obj_action.c	/^		PMEMoid oid;$/;"	m	struct:root::__anon139	file:
oid	deps/pmdk/src/test/obj_action/obj_action.c	/^	PMEMoid oid;$/;"	m	struct:macro_reserve_s	file:
oid	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^	PMEMoid oid;$/;"	m	struct:arena_alloc	file:
oidp	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	PMEMoid *oidp;$/;"	m	struct:create_n_defrag_params_t	file:
oids	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	TOID(struct item) * oids;    \/* persistent pmemobj list elements *\/$/;"	m	struct:obj_worker	file:
oids	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	PMEMoid *oids;$/;"	m	struct:pobj_worker	file:
oids	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^	PMEMoid *oids;	\/* vector of allocated objects *\/$/;"	m	struct:obj_bench	file:
oids	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	TOID(struct item) * oids;$/;"	m	struct:obj_tx_worker	file:
ok	src/intset.c	/^static void ok(void) {$/;"	f	file:
ok	src/server.h	/^    robj *crlf, *ok, *err, *emptybulk, *czero, *cone, *cnegone, *pong, *space,$/;"	m	struct:sharedObjectsStruct
old_hooks	deps/jemalloc/test/integration/chunk.c	/^static chunk_hooks_t old_hooks;$/;"	v	file:
old_map	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint32_t old_map;	\/* old post-map LBA (the freed block) *\/$/;"	m	struct:btt_flog
old_size	deps/pmdk/src/libpmemobj/obj.c	/^	size_t old_size;$/;"	m	struct:carg_realloc	file:
old_size	deps/pmdk/src/test/obj_list/obj_list.c	/^	size_t old_size;$/;"	m	struct:realloc_arg	file:
oldpos	deps/linenoise/linenoise.c	/^    size_t oldpos;      \/* Previous refresh cursor position. *\/$/;"	m	struct:linenoiseState	file:
onConnect	deps/hiredis/async.h	/^    redisConnectCallback *onConnect;$/;"	m	struct:redisAsyncContext
onDisconnect	deps/hiredis/async.h	/^    redisDisconnectCallback *onDisconnect;$/;"	m	struct:redisAsyncContext
on_cancel	deps/pmdk/src/libpmemobj/palloc.c	/^	void (*on_cancel)(struct palloc_heap *heap,$/;"	m	struct:__anon130	file:
on_close	deps/hiredis/adapters/libuv.h	/^static void on_close(uv_handle_t* handle) {$/;"	f
on_process	deps/pmdk/src/libpmemobj/palloc.c	/^	void (*on_process)(struct palloc_heap *heap,$/;"	m	struct:__anon130	file:
on_unlock	deps/pmdk/src/libpmemobj/palloc.c	/^	void (*on_unlock)(struct palloc_heap *heap,$/;"	m	struct:__anon130	file:
one_num	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^one_num(size_t idx)$/;"	f	file:
one_num	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^one_num(size_t idx)$/;"	f	file:
one_obj	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	bool one_obj;$/;"	m	struct:pobj_args	file:
one_pool	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	bool one_pool;$/;"	m	struct:pobj_args	file:
oob	deps/pmdk/src/test/obj_list/obj_list.h	/^	struct oob_header oob;$/;"	m	struct:oob_item	typeref:struct:oob_item::oob_header
oob_header	deps/pmdk/src/test/obj_list/obj_list.h	/^struct oob_header {$/;"	s
oob_item	deps/pmdk/src/test/obj_list/obj_list.h	/^struct oob_item {$/;"	s
oob_list	deps/pmdk/src/test/obj_list/obj_list.h	/^struct oob_list {$/;"	s
oom_worker	deps/pmdk/src/test/obj_pmalloc_oom_mt/obj_pmalloc_oom_mt.c	/^oom_worker(void *arg)$/;"	f	file:
oomerr	src/server.h	/^    *busykeyerr, *oomerr, *plus, *messagebulk, *pmessagebulk, *subscribebulk,$/;"	m	struct:sharedObjectsStruct
op	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^struct op {$/;"	s	file:
op	deps/pmdk/src/tools/pmempool/feature.c	/^	enum feature_op op;$/;"	m	struct:feature_ctx	typeref:enum:feature_ctx::feature_op	file:
op_bench_mutex	deps/pmdk/src/benchmarks/obj_locks.cpp	/^op_bench_mutex(struct mutex_bench *mb)$/;"	f	file:
op_bench_rwlock	deps/pmdk/src/benchmarks/obj_locks.cpp	/^op_bench_rwlock(struct mutex_bench *mb)$/;"	f	file:
op_bench_vmutex	deps/pmdk/src/benchmarks/obj_locks.cpp	/^op_bench_vmutex(struct mutex_bench *mb)$/;"	f	file:
op_create	deps/pmdk/src/examples/librpmem/basic.c	/^enum op_t {op_create, op_open, op_remove, op_max};$/;"	e	enum:op_t	file:
op_dump_compare	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^op_dump_compare(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
op_graph_create	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^op_graph_create(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
op_graph_create_n_defrag_mt	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^op_graph_create_n_defrag_mt(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
op_graph_defrag	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^op_graph_defrag(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
op_graph_dump	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^op_graph_dump(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
op_graph_dump_all	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^op_graph_dump_all(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
op_max	deps/pmdk/src/examples/librpmem/basic.c	/^enum op_t {op_create, op_open, op_remove, op_max};$/;"	e	enum:op_t	file:
op_mode	deps/pmdk/src/benchmarks/blk.cpp	/^enum op_mode {$/;"	g	file:
op_mode	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^struct op_mode {$/;"	s	file:
op_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	int op_mode;	\/* type of operation *\/$/;"	m	struct:obj_tx_bench	file:
op_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^enum op_mode {$/;"	g	file:
op_open	deps/pmdk/src/examples/librpmem/basic.c	/^enum op_t {op_create, op_open, op_remove, op_max};$/;"	e	enum:op_t	file:
op_pool_close	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^op_pool_close(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
op_pool_create	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^op_pool_create(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
op_pool_open	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^op_pool_open(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
op_remove	deps/pmdk/src/examples/librpmem/basic.c	/^enum op_t {op_create, op_open, op_remove, op_max};$/;"	e	enum:op_t	file:
op_t	deps/pmdk/src/examples/librpmem/basic.c	/^enum op_t {op_create, op_open, op_remove, op_max};$/;"	g	file:
op_type	deps/pmdk/src/benchmarks/blk.cpp	/^enum op_type {$/;"	g	file:
opcode	src/bitops.c	/^    int opcode;         \/* Operation id. *\/$/;"	m	struct:bitfieldOp	file:
open	deps/pmdk/src/tools/rpmemd/rpmemd_obc.h	/^	int (*open)(struct rpmemd_obc *obc, void *arg,$/;"	m	struct:rpmemd_obc_requests
openDirectLogFiledes	src/debug.c	/^int openDirectLogFiledes(void) {$/;"	f
open_cli	tests/integration/redis-cli.tcl	/^    proc open_cli {} {$/;"	p
open_file_add	deps/pmdk/src/test/unittest/ut.c	/^open_file_add(struct fd_lut *root, int fdnum, const char *fdfile)$/;"	f	file:
open_file_free	deps/pmdk/src/test/unittest/ut.c	/^open_file_free(struct fd_lut *root)$/;"	f	file:
open_file_remove	deps/pmdk/src/test/unittest/ut.c	/^open_file_remove(struct fd_lut *root, int fdnum, const char *fdfile)$/;"	f	file:
open_file_walk	deps/pmdk/src/test/unittest/ut.c	/^open_file_walk(struct fd_lut *root)$/;"	f	file:
open_func	deps/lua/src/lparser.c	/^static void open_func (LexState *ls, FuncState *fs) {$/;"	f	file:
open_remote_replicas	deps/pmdk/src/libpmempool/sync.c	/^open_remote_replicas(struct pool_set *set,$/;"	f	file:
opened	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	TOID(struct map) opened;		\/* map of opened files \/ dirs *\/$/;"	m	struct:objfs_super	file:
openupval	deps/lua/src/lstate.h	/^  GCObject *openupval;  \/* list of open upvalues in this stack *\/$/;"	m	struct:lua_State
operation	deps/pmdk/src/benchmarks/benchmark.hpp	/^	int (*operation)(struct benchmark *bench, struct operation_info *info);$/;"	m	struct:benchmark_info
operation	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	char *operation; \/* msync, dummy_msync, persist, ... *\/$/;"	m	struct:pmem_args	file:
operation	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	char *operation;$/;"	m	struct:pmem_args	file:
operation	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	char *operation;$/;"	m	struct:obj_tx_args	file:
operation_add_buffer	deps/pmdk/src/libpmemobj/memops.c	/^operation_add_buffer(struct operation_context *ctx,$/;"	f
operation_add_entry	deps/pmdk/src/libpmemobj/memops.c	/^operation_add_entry(struct operation_context *ctx, void *ptr, uint64_t value,$/;"	f
operation_add_entry	deps/pmdk/src/test/obj_memblock/mocks_windows.h	48;"	d
operation_add_typed_entry	deps/pmdk/src/libpmemobj/memops.c	/^operation_add_typed_entry(struct operation_context *ctx,$/;"	f
operation_add_typed_entry	deps/pmdk/src/test/obj_memblock/mocks_windows.h	47;"	d
operation_add_user_buffer	deps/pmdk/src/libpmemobj/memops.c	/^operation_add_user_buffer(struct operation_context *ctx,$/;"	f
operation_cancel	deps/pmdk/src/libpmemobj/memops.c	/^operation_cancel(struct operation_context *ctx)$/;"	f
operation_context	deps/pmdk/src/libpmemobj/memops.c	/^struct operation_context {$/;"	s	file:
operation_delete	deps/pmdk/src/libpmemobj/memops.c	/^operation_delete(struct operation_context *ctx)$/;"	f
operation_finish	deps/pmdk/src/libpmemobj/memops.c	/^operation_finish(struct operation_context *ctx, unsigned flags)$/;"	f
operation_finish	deps/pmdk/src/test/obj_heap_interrupt/mocks_windows.h	47;"	d
operation_fn	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^typedef int (*operation_fn)(void *dest, int c, size_t len);$/;"	t	file:
operation_free_logs	deps/pmdk/src/libpmemobj/memops.c	/^operation_free_logs(struct operation_context *ctx, uint64_t flags)$/;"	f
operation_get_any_user_buffer	deps/pmdk/src/libpmemobj/memops.c	/^operation_get_any_user_buffer(struct operation_context *ctx)$/;"	f
operation_info	deps/pmdk/src/benchmarks/benchmark.hpp	/^struct operation_info {$/;"	s
operation_init	deps/pmdk/src/libpmemobj/memops.c	/^operation_init(struct operation_context *ctx)$/;"	f
operation_log	deps/pmdk/src/libpmemobj/memops.c	/^struct operation_log {$/;"	s	file:
operation_log_persistent_init	deps/pmdk/src/libpmemobj/memops.c	/^operation_log_persistent_init(struct operation_log *log,$/;"	f	file:
operation_log_transient_init	deps/pmdk/src/libpmemobj/memops.c	/^operation_log_transient_init(struct operation_log *log)$/;"	f	file:
operation_log_type	deps/pmdk/src/libpmemobj/memops.h	/^enum operation_log_type {$/;"	g
operation_merge	deps/pmdk/src/libpmemobj/memops.c	/^operation_merge(struct ulog_entry_base *entry, uint64_t value,$/;"	f	file:
operation_merge_entry_add	deps/pmdk/src/libpmemobj/memops.c	/^operation_merge_entry_add(struct operation_context *ctx,$/;"	f	file:
operation_mode	deps/pmdk/src/benchmarks/obj_locks.cpp	/^enum operation_mode {$/;"	g	file:
operation_mode	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^enum operation_mode {$/;"	g	file:
operation_mode	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^enum operation_mode {$/;"	g	file:
operation_mode	deps/pmdk/src/benchmarks/rpmem.cpp	/^enum operation_mode {$/;"	g	file:
operation_new	deps/pmdk/src/libpmemobj/memops.c	/^operation_new(struct ulog *ulog, size_t ulog_base_nbytes,$/;"	f
operation_process	deps/pmdk/src/libpmemobj/memops.c	/^operation_process(struct operation_context *ctx)$/;"	f
operation_process_persistent_redo	deps/pmdk/src/libpmemobj/memops.c	/^operation_process_persistent_redo(struct operation_context *ctx)$/;"	f	file:
operation_process_persistent_undo	deps/pmdk/src/libpmemobj/memops.c	/^operation_process_persistent_undo(struct operation_context *ctx)$/;"	f	file:
operation_reserve	deps/pmdk/src/libpmemobj/memops.c	/^operation_reserve(struct operation_context *ctx, size_t new_capacity)$/;"	f
operation_resume	deps/pmdk/src/libpmemobj/memops.c	/^operation_resume(struct operation_context *ctx)$/;"	f
operation_set_any_user_buffer	deps/pmdk/src/libpmemobj/memops.c	/^operation_set_any_user_buffer(struct operation_context *ctx,$/;"	f
operation_set_auto_reserve	deps/pmdk/src/libpmemobj/memops.c	/^operation_set_auto_reserve(struct operation_context *ctx, int auto_reserve)$/;"	f
operation_start	deps/pmdk/src/libpmemobj/memops.c	/^operation_start(struct operation_context *ctx)$/;"	f
operation_state	deps/pmdk/src/libpmemobj/memops.c	/^enum operation_state {$/;"	g	file:
operation_transient_clean	deps/pmdk/src/libpmemobj/memops.c	/^operation_transient_clean(void *base, const void *addr, size_t len,$/;"	f	file:
operation_transient_memcpy	deps/pmdk/src/libpmemobj/memops.c	/^operation_transient_memcpy(void *base, void *dest, const void *src, size_t len,$/;"	f	file:
operation_try_merge_entry	deps/pmdk/src/libpmemobj/memops.c	/^operation_try_merge_entry(struct operation_context *ctx,$/;"	f	file:
operation_type	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^enum operation_type { OP_TYPE_UNKNOWN, OP_TYPE_READ, OP_TYPE_WRITE };$/;"	g	file:
operation_user_buffer_range_cmp	deps/pmdk/src/libpmemobj/memops.c	/^operation_user_buffer_range_cmp(const void *lhs, const void *rhs)$/;"	f
operation_user_buffer_remove	deps/pmdk/src/libpmemobj/memops.c	/^operation_user_buffer_remove(void *base, void *addr)$/;"	f	file:
operation_user_buffer_try_insert	deps/pmdk/src/libpmemobj/memops.c	/^operation_user_buffer_try_insert(PMEMobjpool *pop,$/;"	f	file:
operation_user_buffer_verify_align	deps/pmdk/src/libpmemobj/memops.c	/^operation_user_buffer_verify_align(struct operation_context *ctx,$/;"	f
operations	deps/pmdk/src/examples/libpmemobj/array/array.c	/^static fn_op operations[] = {do_alloc, do_realloc, do_free, do_print};$/;"	v	file:
opinfo	deps/pmdk/src/benchmarks/benchmark.hpp	/^	struct operation_info *opinfo; \/* operation info structure *\/$/;"	m	struct:worker_info	typeref:struct:worker_info::operation_info
opmode	deps/lua/src/lopcodes.c	59;"	d	file:
opname	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	const char *opname;$/;"	m	struct:op	file:
ops	deps/pmdk/src/benchmarks/map_bench.cpp	/^	const struct map_ops *ops;$/;"	m	struct:__anon115	typeref:struct:__anon115::map_ops	file:
ops	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	struct bench_ops *ops;$/;"	m	struct:mutex_bench	typeref:struct:mutex_bench::bench_ops	file:
ops	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^static struct op ops[] = {$/;"	v	typeref:struct:op	file:
ops	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^	struct map_ops *ops;$/;"	m	struct:__anon98	typeref:struct:__anon98::map_ops	file:
ops	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	const struct map_ops *ops;$/;"	m	struct:map_ctx	typeref:struct:map_ctx::map_ops
ops	deps/pmdk/src/librpmem/rpmem_fip.c	/^	const struct rpmem_fip_ops *ops;$/;"	m	struct:rpmem_fip	typeref:struct:rpmem_fip::rpmem_fip_ops	file:
ops	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^static struct test_case ops[] = {$/;"	v	typeref:struct:test_case	file:
ops	src/server.h	/^    redisOp *ops;$/;"	m	struct:redisOpArray
ops_counter	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^static struct ops_counter ops_counter;$/;"	v	typeref:struct:ops_counter	file:
ops_counter	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^struct ops_counter {$/;"	s	file:
ops_str	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^static const char *ops_str[MAX_QUEUE_OP] =$/;"	v	file:
opt	deps/pmdk/src/tools/pmempool/common.h	/^	int opt;$/;"	m	struct:option_requirement
opt_abort	deps/jemalloc/include/jemalloc/internal/private_namespace.h	368;"	d
opt_abort	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	368;"	d
opt_abort	deps/jemalloc/src/jemalloc.c	/^bool	opt_abort =$/;"	v
opt_decay_time	deps/jemalloc/include/jemalloc/internal/private_namespace.h	369;"	d
opt_decay_time	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	369;"	d
opt_decay_time	deps/jemalloc/src/arena.c	/^ssize_t		opt_decay_time = DECAY_TIME_DEFAULT;$/;"	v
opt_dss	deps/jemalloc/include/jemalloc/internal/private_namespace.h	370;"	d
opt_dss	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	370;"	d
opt_dss	deps/jemalloc/src/chunk.c	/^const char	*opt_dss = DSS_DEFAULT;$/;"	v
opt_junk	deps/jemalloc/include/jemalloc/internal/private_namespace.h	371;"	d
opt_junk	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	371;"	d
opt_junk	deps/jemalloc/src/jemalloc.c	/^const char	*opt_junk =$/;"	v
opt_junk_alloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	372;"	d
opt_junk_alloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	372;"	d
opt_junk_alloc	deps/jemalloc/src/jemalloc.c	/^bool	opt_junk_alloc =$/;"	v
opt_junk_free	deps/jemalloc/include/jemalloc/internal/private_namespace.h	373;"	d
opt_junk_free	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	373;"	d
opt_junk_free	deps/jemalloc/src/jemalloc.c	/^bool	opt_junk_free =$/;"	v
opt_lg_chunk	deps/jemalloc/include/jemalloc/internal/private_namespace.h	374;"	d
opt_lg_chunk	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	374;"	d
opt_lg_chunk	deps/jemalloc/src/chunk.c	/^size_t		opt_lg_chunk = 0;$/;"	v
opt_lg_dirty_mult	deps/jemalloc/include/jemalloc/internal/private_namespace.h	375;"	d
opt_lg_dirty_mult	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	375;"	d
opt_lg_dirty_mult	deps/jemalloc/src/arena.c	/^ssize_t		opt_lg_dirty_mult = LG_DIRTY_MULT_DEFAULT;$/;"	v
opt_lg_prof_interval	deps/jemalloc/include/jemalloc/internal/private_namespace.h	376;"	d
opt_lg_prof_interval	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	376;"	d
opt_lg_prof_interval	deps/jemalloc/src/prof.c	/^ssize_t		opt_lg_prof_interval = LG_PROF_INTERVAL_DEFAULT;$/;"	v
opt_lg_prof_sample	deps/jemalloc/include/jemalloc/internal/private_namespace.h	377;"	d
opt_lg_prof_sample	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	377;"	d
opt_lg_prof_sample	deps/jemalloc/src/prof.c	/^size_t		opt_lg_prof_sample = LG_PROF_SAMPLE_DEFAULT;$/;"	v
opt_lg_tcache_max	deps/jemalloc/include/jemalloc/internal/private_namespace.h	378;"	d
opt_lg_tcache_max	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	378;"	d
opt_lg_tcache_max	deps/jemalloc/src/tcache.c	/^ssize_t	opt_lg_tcache_max = LG_TCACHE_MAXCLASS_DEFAULT;$/;"	v
opt_long	deps/pmdk/src/benchmarks/benchmark.hpp	/^	const char *opt_long;$/;"	m	struct:benchmark_clo
opt_narenas	deps/jemalloc/include/jemalloc/internal/private_namespace.h	379;"	d
opt_narenas	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	379;"	d
opt_narenas	deps/jemalloc/src/jemalloc.c	/^unsigned	opt_narenas = 0;$/;"	v
opt_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t opt_node[] = {$/;"	v	file:
opt_prof	deps/jemalloc/include/jemalloc/internal/private_namespace.h	380;"	d
opt_prof	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	380;"	d
opt_prof	deps/jemalloc/src/prof.c	/^bool		opt_prof = false;$/;"	v
opt_prof_accum	deps/jemalloc/include/jemalloc/internal/private_namespace.h	381;"	d
opt_prof_accum	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	381;"	d
opt_prof_accum	deps/jemalloc/src/prof.c	/^bool		opt_prof_accum = false;$/;"	v
opt_prof_active	deps/jemalloc/include/jemalloc/internal/private_namespace.h	382;"	d
opt_prof_active	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	382;"	d
opt_prof_active	deps/jemalloc/src/prof.c	/^bool		opt_prof_active = true;$/;"	v
opt_prof_final	deps/jemalloc/include/jemalloc/internal/private_namespace.h	383;"	d
opt_prof_final	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	383;"	d
opt_prof_final	deps/jemalloc/src/prof.c	/^bool		opt_prof_final = false;$/;"	v
opt_prof_gdump	deps/jemalloc/include/jemalloc/internal/private_namespace.h	384;"	d
opt_prof_gdump	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	384;"	d
opt_prof_gdump	deps/jemalloc/src/prof.c	/^bool		opt_prof_gdump = false;$/;"	v
opt_prof_leak	deps/jemalloc/include/jemalloc/internal/private_namespace.h	385;"	d
opt_prof_leak	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	385;"	d
opt_prof_leak	deps/jemalloc/src/prof.c	/^bool		opt_prof_leak = false;$/;"	v
opt_prof_prefix	deps/jemalloc/include/jemalloc/internal/private_namespace.h	386;"	d
opt_prof_prefix	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	386;"	d
opt_prof_prefix	deps/jemalloc/src/prof.c	/^char		opt_prof_prefix[$/;"	v
opt_prof_thread_active_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	387;"	d
opt_prof_thread_active_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	387;"	d
opt_prof_thread_active_init	deps/jemalloc/src/prof.c	/^bool		opt_prof_thread_active_init = true;$/;"	v
opt_purge	deps/jemalloc/include/jemalloc/internal/private_namespace.h	388;"	d
opt_purge	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	388;"	d
opt_purge	deps/jemalloc/src/arena.c	/^purge_mode_t	opt_purge = PURGE_DEFAULT;$/;"	v
opt_quarantine	deps/jemalloc/include/jemalloc/internal/private_namespace.h	389;"	d
opt_quarantine	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	389;"	d
opt_quarantine	deps/jemalloc/src/jemalloc.c	/^size_t	opt_quarantine = ZU(0);$/;"	v
opt_redzone	deps/jemalloc/include/jemalloc/internal/private_namespace.h	390;"	d
opt_redzone	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	390;"	d
opt_redzone	deps/jemalloc/src/jemalloc.c	/^bool	opt_redzone = false;$/;"	v
opt_short	deps/pmdk/src/benchmarks/benchmark.hpp	/^	int opt_short;$/;"	m	struct:benchmark_clo
opt_stats_print	deps/jemalloc/include/jemalloc/internal/private_namespace.h	391;"	d
opt_stats_print	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	391;"	d
opt_stats_print	deps/jemalloc/src/stats.c	/^bool	opt_stats_print = false;$/;"	v
opt_tcache	deps/jemalloc/include/jemalloc/internal/private_namespace.h	392;"	d
opt_tcache	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	392;"	d
opt_tcache	deps/jemalloc/src/tcache.c	/^bool	opt_tcache = true;$/;"	v
opt_utrace	deps/jemalloc/include/jemalloc/internal/private_namespace.h	393;"	d
opt_utrace	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	393;"	d
opt_utrace	deps/jemalloc/src/jemalloc.c	/^bool	opt_utrace = false;$/;"	v
opt_xmalloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	394;"	d
opt_xmalloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	394;"	d
opt_xmalloc	deps/jemalloc/src/jemalloc.c	/^bool	opt_xmalloc = false;$/;"	v
opt_zero	deps/jemalloc/include/jemalloc/internal/private_namespace.h	395;"	d
opt_zero	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	395;"	d
opt_zero	deps/jemalloc/src/jemalloc.c	/^bool	opt_zero = false;$/;"	v
optarg	deps/pmdk/src/windows/getopt/getopt.c	/^char* optarg;$/;"	v
optcursor	deps/pmdk/src/windows/getopt/getopt.c	/^static char* optcursor = NULL;$/;"	v	file:
opterr	deps/pmdk/src/windows/getopt/getopt.c	/^int opterr;$/;"	v
optimization_level	src/quicklist.c	/^static const size_t optimization_level[] = {4096, 8192, 16384, 32768, 65536};$/;"	v	file:
optind	deps/pmdk/src/windows/getopt/getopt.c	/^int optind = 1;$/;"	v
option	deps/pmdk/src/windows/getopt/getopt.h	/^struct option {$/;"	s
option_requirement	deps/pmdk/src/tools/pmempool/common.h	/^struct option_requirement {$/;"	s
option_requirements	deps/pmdk/src/tools/pmempool/dump.c	/^static const struct option_requirement option_requirements[] = {$/;"	v	typeref:struct:option_requirement	file:
option_requirements	deps/pmdk/src/tools/pmempool/info.c	/^static const struct option_requirement option_requirements[] = {$/;"	v	typeref:struct:option_requirement	file:
optional_argument	deps/pmdk/src/windows/getopt/getopt.h	37;"	d
options	deps/pmdk/src/common/set.h	/^	unsigned options;	\/* enabled pool set options *\/$/;"	m	struct:pool_set
options	deps/pmdk/src/tools/pmempool/common.h	/^struct options {$/;"	s
options	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^static const struct option options[] = {$/;"	v	typeref:struct:option	file:
optopt	deps/pmdk/src/windows/getopt/getopt.c	/^int optopt;$/;"	v
opts	deps/pmdk/src/benchmarks/benchmark.hpp	/^	void *opts;		 \/* benchmark specific arguments *\/$/;"	m	struct:benchmark_args
opts	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	struct pocli_opts opts;		\/* configuration options *\/$/;"	m	struct:pocli	typeref:struct:pocli::pocli_opts	file:
opts	deps/pmdk/src/tools/pmempool/common.h	/^	const struct option *opts;$/;"	m	struct:options	typeref:struct:options::option
opts	deps/pmdk/src/tools/pmempool/create.c	/^	struct options *opts;$/;"	m	struct:pmempool_create	typeref:struct:pmempool_create::options	file:
opts	deps/pmdk/src/tools/pmempool/info.h	/^	struct options *opts;$/;"	m	struct:pmem_info	typeref:struct:pmem_info::options
opts_size	deps/pmdk/src/benchmarks/benchmark.hpp	/^	size_t opts_size;$/;"	m	struct:benchmark_info
optsize	deps/lua/src/lua_struct.c	/^static size_t optsize (lua_State *L, char opt, const char **fmt) {$/;"	f	file:
optstr	deps/pmdk/src/tools/pmempool/rm.c	/^static const char *optstr = "hvsfialr";$/;"	v	file:
optstr	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^static const char *optstr = "c:hVr:fst:";$/;"	v	file:
order_new	deps/pmdk/src/test/obj_defrag_advanced/pgraph.c	/^order_new(struct vgraph_t *vgraph, rng_t *rngp)$/;"	f	file:
order_shuffle	deps/pmdk/src/test/obj_defrag_advanced/pgraph.c	/^order_shuffle(unsigned *order, unsigned num, rng_t *rngp)$/;"	f	file:
org	src/redis-cli.c	/^    struct commandHelp *org;$/;"	m	struct:__anon168	typeref:struct:__anon168::commandHelp	file:
orig_commands	src/server.h	/^    dict *orig_commands;        \/* Command table before command renaming. *\/$/;"	m	struct:redisServer
orig_hooks	deps/jemalloc/test/integration/chunk.c	/^static chunk_hooks_t orig_hooks;$/;"	v	file:
orig_termios	deps/linenoise/linenoise.c	/^static struct termios orig_termios; \/* In order to restore at exit.*\/$/;"	v	typeref:struct:termios	file:
orphaned_time	src/cluster.h	/^    mstime_t orphaned_time;     \/* Starting time of orphaned master condition *\/$/;"	m	struct:clusterNode
os_access	deps/pmdk/src/common/os_posix.c	/^os_access(const char *pathname, int mode)$/;"	f
os_access	deps/pmdk/src/common/os_windows.c	/^os_access(const char *pathname, int mode)$/;"	f
os_auto_flush	deps/pmdk/src/common/os_auto_flush_linux.c	/^os_auto_flush(void)$/;"	f
os_auto_flush	deps/pmdk/src/common/os_auto_flush_none.c	/^os_auto_flush(void)$/;"	f
os_auto_flush	deps/pmdk/src/common/os_auto_flush_windows.c	/^os_auto_flush(void)$/;"	f
os_badblocks_check_file	deps/pmdk/src/common/badblock_ndctl.c	/^os_badblocks_check_file(const char *file)$/;"	f
os_badblocks_check_file	deps/pmdk/src/common/badblock_none.c	/^os_badblocks_check_file(const char *file)$/;"	f
os_badblocks_clear	deps/pmdk/src/common/badblock_ndctl.c	/^os_badblocks_clear(const char *file, struct badblocks *bbs)$/;"	f
os_badblocks_clear	deps/pmdk/src/common/badblock_none.c	/^os_badblocks_clear(const char *file, struct badblocks *bbs)$/;"	f
os_badblocks_clear_all	deps/pmdk/src/common/badblock_ndctl.c	/^os_badblocks_clear_all(const char *file)$/;"	f
os_badblocks_clear_all	deps/pmdk/src/common/badblock_none.c	/^os_badblocks_clear_all(const char *file)$/;"	f
os_badblocks_clear_file	deps/pmdk/src/common/badblock_ndctl.c	/^os_badblocks_clear_file(const char *file, struct badblocks *bbs)$/;"	f	file:
os_badblocks_count	deps/pmdk/src/common/badblock_ndctl.c	/^os_badblocks_count(const char *file)$/;"	f
os_badblocks_count	deps/pmdk/src/common/badblock_none.c	/^os_badblocks_count(const char *file)$/;"	f
os_badblocks_get	deps/pmdk/src/common/badblock_ndctl.c	/^os_badblocks_get(const char *file, struct badblocks *bbs)$/;"	f
os_badblocks_get	deps/pmdk/src/common/badblock_none.c	/^os_badblocks_get(const char *file, struct badblocks *bbs)$/;"	f
os_chmod	deps/pmdk/src/common/os_posix.c	/^os_chmod(const char *pathname, mode_t mode)$/;"	f
os_chmod	deps/pmdk/src/common/os_windows.c	/^os_chmod(const char *pathname, mode_t mode)$/;"	f
os_clock	deps/lua/src/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:
os_clock_gettime	deps/pmdk/src/common/os_posix.c	/^os_clock_gettime(int id, struct timespec *ts)$/;"	f
os_clock_gettime	deps/pmdk/src/common/os_windows.c	/^os_clock_gettime(int id, struct timespec *ts)$/;"	f
os_close	deps/pmdk/src/common/os.h	102;"	d
os_cond_broadcast	deps/pmdk/src/common/os_thread_posix.c	/^os_cond_broadcast(os_cond_t *__restrict cond)$/;"	f
os_cond_broadcast	deps/pmdk/src/common/os_thread_windows.c	/^os_cond_broadcast(os_cond_t *__restrict cond)$/;"	f
os_cond_destroy	deps/pmdk/src/common/os_thread_posix.c	/^os_cond_destroy(os_cond_t *__restrict cond)$/;"	f
os_cond_destroy	deps/pmdk/src/common/os_thread_windows.c	/^os_cond_destroy(os_cond_t *__restrict cond)$/;"	f
os_cond_init	deps/pmdk/src/common/os_thread_posix.c	/^os_cond_init(os_cond_t *__restrict cond)$/;"	f
os_cond_init	deps/pmdk/src/common/os_thread_windows.c	/^os_cond_init(os_cond_t *__restrict cond)$/;"	f
os_cond_init	deps/pmdk/src/test/obj_sync/mocks_windows.h	50;"	d
os_cond_signal	deps/pmdk/src/common/os_thread_posix.c	/^os_cond_signal(os_cond_t *__restrict cond)$/;"	f
os_cond_signal	deps/pmdk/src/common/os_thread_windows.c	/^os_cond_signal(os_cond_t *__restrict cond)$/;"	f
os_cond_t	deps/pmdk/src/common/os_thread.h	/^} os_cond_t;$/;"	t	typeref:union:__anon73
os_cond_timedwait	deps/pmdk/src/common/os_thread_posix.c	/^os_cond_timedwait(os_cond_t *__restrict cond,$/;"	f
os_cond_timedwait	deps/pmdk/src/common/os_thread_windows.c	/^os_cond_timedwait(os_cond_t *__restrict cond,$/;"	f
os_cond_wait	deps/pmdk/src/common/os_thread_posix.c	/^os_cond_wait(os_cond_t *__restrict cond,$/;"	f
os_cond_wait	deps/pmdk/src/common/os_thread_windows.c	/^os_cond_wait(os_cond_t *__restrict cond,$/;"	f
os_cpu_set	deps/pmdk/src/common/os_thread_posix.c	/^os_cpu_set(size_t cpu, os_cpu_set_t *set)$/;"	f
os_cpu_set	deps/pmdk/src/common/os_thread_windows.c	/^os_cpu_set(size_t cpu, os_cpu_set_t *set)$/;"	f
os_cpu_set_t	deps/pmdk/src/common/os_thread.h	/^} os_cpu_set_t;$/;"	t	typeref:union:__anon78
os_cpu_zero	deps/pmdk/src/common/os_thread_posix.c	/^os_cpu_zero(os_cpu_set_t *set)$/;"	f
os_cpu_zero	deps/pmdk/src/common/os_thread_windows.c	/^os_cpu_zero(os_cpu_set_t *set)$/;"	f
os_date	deps/lua/src/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:
os_deep_flush_write	deps/pmdk/src/common/os_deep_linux.c	/^os_deep_flush_write(int region_id)$/;"	f	file:
os_deep_type	deps/pmdk/src/common/os_deep_linux.c	/^os_deep_type(const struct map_tracker *mt, void *addr, size_t len)$/;"	f	file:
os_difftime	deps/lua/src/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:
os_dimm_devdax_clear_badblocks	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_devdax_clear_badblocks(const char *path, struct badblocks *pbbs)$/;"	f
os_dimm_devdax_clear_badblocks	deps/pmdk/src/common/os_dimm_none.c	/^os_dimm_devdax_clear_badblocks(const char *path, struct badblocks *bbs)$/;"	f
os_dimm_devdax_clear_badblocks	deps/pmdk/src/common/os_dimm_windows.c	/^os_dimm_devdax_clear_badblocks(const char *path, struct badblocks *bbs)$/;"	f
os_dimm_devdax_clear_badblocks_all	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_devdax_clear_badblocks_all(const char *path)$/;"	f
os_dimm_devdax_clear_badblocks_all	deps/pmdk/src/common/os_dimm_none.c	/^os_dimm_devdax_clear_badblocks_all(const char *path)$/;"	f
os_dimm_devdax_clear_badblocks_all	deps/pmdk/src/common/os_dimm_windows.c	/^os_dimm_devdax_clear_badblocks_all(const char *path)$/;"	f
os_dimm_devdax_clear_one_badblock	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_devdax_clear_one_badblock(struct ndctl_bus *bus,$/;"	f	file:
os_dimm_files_namespace_badblocks	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_files_namespace_badblocks(const char *path, struct badblocks *bbs)$/;"	f
os_dimm_files_namespace_badblocks	deps/pmdk/src/common/os_dimm_none.c	/^os_dimm_files_namespace_badblocks(const char *path, struct badblocks *bbs)$/;"	f
os_dimm_files_namespace_badblocks	deps/pmdk/src/common/os_dimm_windows.c	/^os_dimm_files_namespace_badblocks(const char *path, struct badblocks *bbs)$/;"	f
os_dimm_files_namespace_badblocks_bus	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_files_namespace_badblocks_bus(struct ndctl_ctx *ctx,$/;"	f	file:
os_dimm_files_namespace_bus	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_files_namespace_bus(struct ndctl_ctx *ctx,$/;"	f	file:
os_dimm_get_namespace_bounds	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_get_namespace_bounds(struct ndctl_region *region,$/;"	f	file:
os_dimm_interleave_set	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_interleave_set(struct ndctl_ctx *ctx, const os_stat_t *st)$/;"	f	file:
os_dimm_match_devdax	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_match_devdax(const os_stat_t *st, const char *devname)$/;"	f	file:
os_dimm_match_fsdax	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_match_fsdax(const os_stat_t *st, const char *devname)$/;"	f	file:
os_dimm_namespace_get_badblocks	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_namespace_get_badblocks(struct ndctl_region *region,$/;"	f	file:
os_dimm_namespace_get_badblocks_by_namespace	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_namespace_get_badblocks_by_namespace(struct ndctl_namespace *ndns,$/;"	f	file:
os_dimm_namespace_get_badblocks_by_region	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_namespace_get_badblocks_by_region(struct ndctl_region *region,$/;"	f	file:
os_dimm_region_namespace	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_region_namespace(struct ndctl_ctx *ctx, const os_stat_t *st,$/;"	f	file:
os_dimm_uid	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_uid(const char *path, char *uid, size_t *buff_len)$/;"	f
os_dimm_uid	deps/pmdk/src/common/os_dimm_none.c	/^os_dimm_uid(const char *path, char *uid, size_t *len)$/;"	f
os_dimm_uid	deps/pmdk/src/common/os_dimm_windows.c	/^os_dimm_uid(const char *path, char *uid, size_t *len)$/;"	f
os_dimm_uid	deps/pmdk/src/test/obj_sds/mocks_windows.h	39;"	d
os_dimm_uid	deps/pmdk/src/test/util_sds/mocks_windows.h	39;"	d
os_dimm_usc	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_usc(const char *path, uint64_t *usc)$/;"	f
os_dimm_usc	deps/pmdk/src/common/os_dimm_none.c	/^os_dimm_usc(const char *path, uint64_t *usc)$/;"	f
os_dimm_usc	deps/pmdk/src/common/os_dimm_windows.c	/^os_dimm_usc(const char *path, uint64_t *usc)$/;"	f
os_dimm_usc	deps/pmdk/src/test/obj_sds/mocks_windows.h	38;"	d
os_dimm_usc	deps/pmdk/src/test/util_sds/mocks_windows.h	38;"	d
os_dimm_usc_dimm	deps/pmdk/src/common/os_dimm_ndctl.c	/^os_dimm_usc_dimm(struct ndctl_dimm *dimm)$/;"	f	file:
os_dimm_volume_handle	deps/pmdk/src/common/os_dimm_windows.c	/^os_dimm_volume_handle(const char *path)$/;"	f	file:
os_execute	deps/lua/src/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:
os_execv	deps/pmdk/src/common/os_posix.c	/^os_execv(const char *path, char *const argv[])$/;"	f
os_execv	deps/pmdk/src/common/os_windows.c	/^os_execv(const char *path, char *const argv[])$/;"	f
os_exit	deps/lua/src/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:
os_extents_common	deps/pmdk/src/common/extent_linux.c	/^os_extents_common(const char *path, struct extents *exts,$/;"	f	file:
os_extents_count	deps/pmdk/src/common/extent_freebsd.c	/^os_extents_count(const char *path, struct extents *exts)$/;"	f
os_extents_count	deps/pmdk/src/common/extent_linux.c	/^os_extents_count(const char *path, struct extents *exts)$/;"	f
os_extents_get	deps/pmdk/src/common/extent_freebsd.c	/^os_extents_get(const char *path, struct extents *exts)$/;"	f
os_extents_get	deps/pmdk/src/common/extent_linux.c	/^os_extents_get(const char *path, struct extents *exts)$/;"	f
os_fclose	deps/pmdk/src/common/os.h	103;"	d
os_fdopen	deps/pmdk/src/common/os_posix.c	/^os_fdopen(int fd, const char *mode)$/;"	f
os_fdopen	deps/pmdk/src/common/os_windows.c	/^os_fdopen(int fd, const char *mode)$/;"	f
os_flock	deps/pmdk/src/common/os_posix.c	/^os_flock(int fd, int operation)$/;"	f
os_flock	deps/pmdk/src/common/os_windows.c	/^os_flock(int fd, int operation)$/;"	f
os_fopen	deps/pmdk/src/common/os_posix.c	/^os_fopen(const char *pathname, const char *mode)$/;"	f
os_fopen	deps/pmdk/src/common/os_windows.c	/^os_fopen(const char *pathname, const char *mode)$/;"	f
os_fstat	deps/pmdk/src/common/os.h	94;"	d
os_fstat	deps/pmdk/src/common/os.h	98;"	d
os_fsync	deps/pmdk/src/common/os_posix.c	/^os_fsync(int fd)$/;"	f
os_fsync	deps/pmdk/src/common/os_windows.c	/^os_fsync(int fd)$/;"	f
os_fsync_dir	deps/pmdk/src/common/os_posix.c	/^os_fsync_dir(const char *dir_name)$/;"	f
os_fsync_dir	deps/pmdk/src/common/os_windows.c	/^os_fsync_dir(const char *dir_name)$/;"	f
os_ftruncate	deps/pmdk/src/common/os_posix.c	/^os_ftruncate(int fd, os_off_t length)$/;"	f
os_ftruncate	deps/pmdk/src/common/os_windows.c	/^os_ftruncate(int fd, os_off_t length)$/;"	f
os_ftruncate	deps/pmdk/src/test/pmem_map_file/mocks_windows.h	48;"	d
os_ftruncate	deps/pmdk/src/test/pmem_map_file_win/mocks_windows.h	48;"	d
os_getenv	deps/lua/src/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:
os_getenv	deps/pmdk/src/common/os_posix.c	/^os_getenv(const char *name)$/;"	f
os_getenv	deps/pmdk/src/common/os_windows.c	/^os_getenv(const char *name)$/;"	f
os_lseek	deps/pmdk/src/common/os.h	95;"	d
os_lseek	deps/pmdk/src/common/os.h	99;"	d
os_madvise	deps/pmdk/src/common/os.h	62;"	d
os_madvise	deps/pmdk/src/common/os.h	65;"	d
os_major	deps/pmdk/src/common/os.h	75;"	d
os_major	deps/pmdk/src/common/os.h	78;"	d
os_minor	deps/pmdk/src/common/os.h	76;"	d
os_minor	deps/pmdk/src/common/os.h	79;"	d
os_mkstemp	deps/pmdk/src/common/os_posix.c	/^os_mkstemp(char *temp)$/;"	f
os_mkstemp	deps/pmdk/src/common/os_windows.c	/^os_mkstemp(char *temp)$/;"	f
os_mutex_destroy	deps/pmdk/src/common/os_thread_posix.c	/^os_mutex_destroy(os_mutex_t *__restrict mutex)$/;"	f
os_mutex_destroy	deps/pmdk/src/common/os_thread_windows.c	/^os_mutex_destroy(os_mutex_t *__restrict mutex)$/;"	f
os_mutex_init	deps/pmdk/src/common/os_thread_posix.c	/^os_mutex_init(os_mutex_t *__restrict mutex)$/;"	f
os_mutex_init	deps/pmdk/src/common/os_thread_windows.c	/^os_mutex_init(os_mutex_t *__restrict mutex)$/;"	f
os_mutex_init	deps/pmdk/src/test/obj_sync/mocks_windows.h	48;"	d
os_mutex_lock	deps/pmdk/src/common/os_thread_posix.c	/^os_mutex_lock(os_mutex_t *__restrict mutex)$/;"	f
os_mutex_lock	deps/pmdk/src/common/os_thread_windows.c	/^os_mutex_lock(os_mutex_t *__restrict mutex)$/;"	f
os_mutex_lock_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^os_mutex_lock_wrapper(PMEMobjpool *pop, void *lock)$/;"	f	file:
os_mutex_t	deps/pmdk/src/common/os_thread.h	/^} os_mutex_t;$/;"	t	typeref:union:__anon71
os_mutex_timedlock	deps/pmdk/src/common/os_thread_posix.c	/^os_mutex_timedlock(os_mutex_t *__restrict mutex,$/;"	f
os_mutex_timedlock	deps/pmdk/src/common/os_thread_windows.c	/^os_mutex_timedlock(os_mutex_t *__restrict mutex,$/;"	f
os_mutex_trylock	deps/pmdk/src/common/os_thread_posix.c	/^os_mutex_trylock(os_mutex_t *__restrict mutex)$/;"	f
os_mutex_trylock	deps/pmdk/src/common/os_thread_windows.c	/^os_mutex_trylock(os_mutex_t *__restrict mutex)$/;"	f
os_mutex_unlock	deps/pmdk/src/common/os_thread_posix.c	/^os_mutex_unlock(os_mutex_t *__restrict mutex)$/;"	f
os_mutex_unlock	deps/pmdk/src/common/os_thread_windows.c	/^os_mutex_unlock(os_mutex_t *__restrict mutex)$/;"	f
os_mutex_unlock_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^os_mutex_unlock_wrapper(PMEMobjpool *pop, void *lock)$/;"	f	file:
os_off_t	deps/pmdk/src/common/os.h	/^typedef off_t os_off_t;$/;"	t
os_off_t	deps/pmdk/src/windows/include/platform.h	/^typedef long long os_off_t;$/;"	t
os_once	deps/pmdk/src/common/os_thread_posix.c	/^os_once(os_once_t *o, void (*func)(void))$/;"	f
os_once	deps/pmdk/src/common/os_thread_windows.c	/^os_once(os_once_t *once, void (*func)(void))$/;"	f
os_once_t	deps/pmdk/src/common/os_thread.h	/^} os_once_t;$/;"	t	typeref:union:__anon75
os_open	deps/pmdk/src/common/os_posix.c	/^os_open(const char *pathname, int flags, ...)$/;"	f
os_open	deps/pmdk/src/common/os_windows.c	/^os_open(const char *pathname, int flags, ...)$/;"	f
os_open	deps/pmdk/src/test/util_poolset/mocks_windows.h	47;"	d
os_overcommits	deps/jemalloc/src/pages.c	/^static bool	os_overcommits;$/;"	v	file:
os_overcommits_proc	deps/jemalloc/src/pages.c	/^os_overcommits_proc(void)$/;"	f	file:
os_overcommits_sysctl	deps/jemalloc/src/pages.c	/^os_overcommits_sysctl(void)$/;"	f	file:
os_part_deep_common	deps/pmdk/src/common/os_deep_linux.c	/^os_part_deep_common(struct pool_replica *rep, unsigned partidx, void *addr,$/;"	f
os_part_deep_common	deps/pmdk/src/common/os_deep_windows.c	/^os_part_deep_common(struct pool_replica *rep, unsigned partidx, void *addr,$/;"	f
os_posix_fallocate	deps/pmdk/src/common/os_posix.c	/^os_posix_fallocate(int fd, os_off_t offset, off_t len)$/;"	f
os_posix_fallocate	deps/pmdk/src/common/os_windows.c	/^os_posix_fallocate(int fd, os_off_t offset, os_off_t len)$/;"	f
os_posix_fallocate	deps/pmdk/src/test/pmem_map_file/mocks_windows.h	47;"	d
os_posix_fallocate	deps/pmdk/src/test/pmem_map_file_win/mocks_windows.h	47;"	d
os_posix_fallocate	deps/pmdk/src/test/util_poolset/mocks_windows.h	51;"	d
os_pushresult	deps/lua/src/loslib.c	/^static int os_pushresult (lua_State *L, int i, const char *filename) {$/;"	f	file:
os_rand_r	deps/pmdk/src/common/os_posix.c	/^os_rand_r(unsigned *seedp)$/;"	f
os_rand_r	deps/pmdk/src/common/os_windows.c	/^os_rand_r(unsigned *seedp)$/;"	f
os_range_deep_common	deps/pmdk/src/common/os_deep_linux.c	/^os_range_deep_common(uintptr_t addr, size_t len)$/;"	f
os_range_deep_common	deps/pmdk/src/common/os_deep_windows.c	/^os_range_deep_common(uintptr_t addr, size_t len)$/;"	f
os_remove	deps/lua/src/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:
os_rename	deps/lua/src/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:
os_rwlock_destroy	deps/pmdk/src/common/os_thread_posix.c	/^os_rwlock_destroy(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_destroy	deps/pmdk/src/common/os_thread_windows.c	/^os_rwlock_destroy(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_init	deps/pmdk/src/common/os_thread_posix.c	/^os_rwlock_init(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_init	deps/pmdk/src/common/os_thread_windows.c	/^os_rwlock_init(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_init	deps/pmdk/src/test/obj_sync/mocks_windows.h	49;"	d
os_rwlock_rdlock	deps/pmdk/src/common/os_thread_posix.c	/^os_rwlock_rdlock(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_rdlock	deps/pmdk/src/common/os_thread_windows.c	/^os_rwlock_rdlock(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_rdlock_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^os_rwlock_rdlock_wrapper(PMEMobjpool *pop, void *lock)$/;"	f	file:
os_rwlock_t	deps/pmdk/src/common/os_thread.h	/^} os_rwlock_t;$/;"	t	typeref:union:__anon72
os_rwlock_timedrdlock	deps/pmdk/src/common/os_thread_posix.c	/^os_rwlock_timedrdlock(os_rwlock_t *__restrict rwlock,$/;"	f
os_rwlock_timedrdlock	deps/pmdk/src/common/os_thread_windows.c	/^os_rwlock_timedrdlock(os_rwlock_t *__restrict rwlock,$/;"	f
os_rwlock_timedwrlock	deps/pmdk/src/common/os_thread_posix.c	/^os_rwlock_timedwrlock(os_rwlock_t *__restrict rwlock,$/;"	f
os_rwlock_timedwrlock	deps/pmdk/src/common/os_thread_windows.c	/^os_rwlock_timedwrlock(os_rwlock_t *__restrict rwlock,$/;"	f
os_rwlock_tryrdlock	deps/pmdk/src/common/os_thread_posix.c	/^os_rwlock_tryrdlock(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_tryrdlock	deps/pmdk/src/common/os_thread_windows.c	/^os_rwlock_tryrdlock(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_trywrlock	deps/pmdk/src/common/os_thread_posix.c	/^os_rwlock_trywrlock(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_trywrlock	deps/pmdk/src/common/os_thread_windows.c	/^os_rwlock_trywrlock(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_unlock	deps/pmdk/src/common/os_thread_posix.c	/^os_rwlock_unlock(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_unlock	deps/pmdk/src/common/os_thread_windows.c	/^os_rwlock_unlock(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_unlock_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^os_rwlock_unlock_wrapper(PMEMobjpool *pop, void *lock)$/;"	f	file:
os_rwlock_wrlock	deps/pmdk/src/common/os_thread_posix.c	/^os_rwlock_wrlock(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_wrlock	deps/pmdk/src/common/os_thread_windows.c	/^os_rwlock_wrlock(os_rwlock_t *__restrict rwlock)$/;"	f
os_rwlock_wrlock_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^os_rwlock_wrlock_wrapper(PMEMobjpool *pop, void *lock)$/;"	f	file:
os_semaphore_destroy	deps/pmdk/src/common/os_thread_posix.c	/^os_semaphore_destroy(os_semaphore_t *sem)$/;"	f
os_semaphore_destroy	deps/pmdk/src/common/os_thread_windows.c	/^os_semaphore_destroy(os_semaphore_t *sem)$/;"	f
os_semaphore_init	deps/pmdk/src/common/os_thread_posix.c	/^os_semaphore_init(os_semaphore_t *sem, unsigned value)$/;"	f
os_semaphore_init	deps/pmdk/src/common/os_thread_windows.c	/^os_semaphore_init(os_semaphore_t *sem, unsigned value)$/;"	f
os_semaphore_post	deps/pmdk/src/common/os_thread_posix.c	/^os_semaphore_post(os_semaphore_t *sem)$/;"	f
os_semaphore_post	deps/pmdk/src/common/os_thread_windows.c	/^os_semaphore_post(os_semaphore_t *sem)$/;"	f
os_semaphore_t	deps/pmdk/src/common/os_thread.h	/^} os_semaphore_t;$/;"	t	typeref:union:__anon76
os_semaphore_trywait	deps/pmdk/src/common/os_thread_posix.c	/^os_semaphore_trywait(os_semaphore_t *sem)$/;"	f
os_semaphore_trywait	deps/pmdk/src/common/os_thread_windows.c	/^os_semaphore_trywait(os_semaphore_t *sem)$/;"	f
os_semaphore_wait	deps/pmdk/src/common/os_thread_posix.c	/^os_semaphore_wait(os_semaphore_t *sem)$/;"	f
os_semaphore_wait	deps/pmdk/src/common/os_thread_windows.c	/^os_semaphore_wait(os_semaphore_t *sem)$/;"	f
os_setenv	deps/pmdk/src/common/os_posix.c	/^os_setenv(const char *name, const char *value, int overwrite)$/;"	f
os_setenv	deps/pmdk/src/common/os_windows.c	/^os_setenv(const char *name, const char *value, int overwrite)$/;"	f
os_setlocale	deps/lua/src/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:
os_skipBOM	deps/pmdk/src/common/os_windows.c	/^os_skipBOM(FILE *file)$/;"	f	file:
os_spin_destroy	deps/pmdk/src/common/os_thread_posix.c	/^os_spin_destroy(os_spinlock_t *lock)$/;"	f
os_spin_init	deps/pmdk/src/common/os_thread_posix.c	/^os_spin_init(os_spinlock_t *lock, int pshared)$/;"	f
os_spin_lock	deps/pmdk/src/common/os_thread_posix.c	/^os_spin_lock(os_spinlock_t *lock)$/;"	f
os_spin_trylock	deps/pmdk/src/common/os_thread_posix.c	/^os_spin_trylock(os_spinlock_t *lock)$/;"	f
os_spin_unlock	deps/pmdk/src/common/os_thread_posix.c	/^os_spin_unlock(os_spinlock_t *lock)$/;"	f
os_spinlock_t	deps/pmdk/src/common/os_thread.h	/^typedef uintptr_t os_spinlock_t;$/;"	t
os_spinlock_t	deps/pmdk/src/common/os_thread.h	/^typedef volatile int os_spinlock_t; \/* XXX: not implemented on windows *\/$/;"	t
os_stat	deps/pmdk/src/common/os_posix.c	/^os_stat(const char *pathname, os_stat_t *buf)$/;"	f
os_stat	deps/pmdk/src/common/os_windows.c	/^os_stat(const char *pathname, os_stat_t *buf)$/;"	f
os_stat_t	deps/pmdk/src/common/os.h	/^typedef struct _stat64 os_stat_t;$/;"	t	typeref:struct:_stat64
os_stat_t	deps/pmdk/src/common/os.h	/^typedef struct stat os_stat_t;$/;"	t	typeref:struct:stat
os_strsignal	deps/pmdk/src/common/os_posix.c	/^os_strsignal(int sig)$/;"	f
os_strsignal	deps/pmdk/src/common/os_windows.c	/^os_strsignal(int sig)$/;"	f
os_thread_atfork	deps/pmdk/src/common/os_thread_posix.c	/^os_thread_atfork(void (*prepare)(void), void (*parent)(void),$/;"	f
os_thread_attr_t	deps/pmdk/src/common/os_thread.h	/^} os_thread_attr_t;$/;"	t	typeref:union:__anon77
os_thread_create	deps/pmdk/src/common/os_thread_posix.c	/^os_thread_create(os_thread_t *thread, const os_thread_attr_t *attr,$/;"	f
os_thread_create	deps/pmdk/src/common/os_thread_windows.c	/^os_thread_create(os_thread_t *thread, const os_thread_attr_t *attr,$/;"	f
os_thread_join	deps/pmdk/src/common/os_thread_posix.c	/^os_thread_join(os_thread_t *thread, void **result)$/;"	f
os_thread_join	deps/pmdk/src/common/os_thread_windows.c	/^os_thread_join(os_thread_t *thread, void **result)$/;"	f
os_thread_self	deps/pmdk/src/common/os_thread_posix.c	/^os_thread_self(os_thread_t *thread)$/;"	f
os_thread_self	deps/pmdk/src/common/os_thread_windows.c	/^os_thread_self(os_thread_t *thread)$/;"	f
os_thread_setaffinity_np	deps/pmdk/src/common/os_thread_posix.c	/^os_thread_setaffinity_np(os_thread_t *thread, size_t set_size,$/;"	f
os_thread_setaffinity_np	deps/pmdk/src/common/os_thread_windows.c	/^os_thread_setaffinity_np(os_thread_t *thread, size_t set_size,$/;"	f
os_thread_start_routine_wrapper	deps/pmdk/src/common/os_thread_windows.c	/^os_thread_start_routine_wrapper(void *arg)$/;"	f	file:
os_thread_t	deps/pmdk/src/common/os_thread.h	/^} os_thread_t;$/;"	t	typeref:union:__anon74
os_time	deps/lua/src/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:
os_tls_get	deps/pmdk/src/common/os_thread_posix.c	/^os_tls_get(os_tls_key_t key)$/;"	f
os_tls_get	deps/pmdk/src/common/os_thread_windows.c	/^os_tls_get(os_tls_key_t key)$/;"	f
os_tls_key_create	deps/pmdk/src/common/os_thread_posix.c	/^os_tls_key_create(os_tls_key_t *key, void (*destructor)(void *))$/;"	f
os_tls_key_create	deps/pmdk/src/common/os_thread_windows.c	/^os_tls_key_create(os_tls_key_t *key, void (*destructor)(void *))$/;"	f
os_tls_key_delete	deps/pmdk/src/common/os_thread_posix.c	/^os_tls_key_delete(os_tls_key_t key)$/;"	f
os_tls_key_delete	deps/pmdk/src/common/os_thread_windows.c	/^os_tls_key_delete(os_tls_key_t key)$/;"	f
os_tls_key_t	deps/pmdk/src/common/os_thread.h	/^typedef unsigned os_tls_key_t;$/;"	t
os_tls_set	deps/pmdk/src/common/os_thread_posix.c	/^os_tls_set(os_tls_key_t key, const void *value)$/;"	f
os_tls_set	deps/pmdk/src/common/os_thread_windows.c	/^os_tls_set(os_tls_key_t key, const void *value)$/;"	f
os_tmpname	deps/lua/src/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:
os_unlink	deps/pmdk/src/common/os_posix.c	/^os_unlink(const char *pathname)$/;"	f
os_unlink	deps/pmdk/src/common/os_windows.c	/^os_unlink(const char *pathname)$/;"	f
os_unsetenv	deps/pmdk/src/common/os_posix.c	/^os_unsetenv(const char *name)$/;"	f
os_unsetenv	deps/pmdk/src/common/os_windows.c	/^os_unsetenv(const char *name)$/;"	f
os_writev	deps/pmdk/src/common/os_posix.c	/^os_writev(int fd, const struct iovec *iov, int iovcnt)$/;"	f
os_writev	deps/pmdk/src/common/os_windows.c	/^os_writev(int fd, const struct iovec *iov, int iovcnt)$/;"	f
otherwhite	deps/lua/src/lgc.h	69;"	d
out	deps/pmdk/src/common/out.c	/^out(const char *fmt, ...)$/;"	f
out	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	FILE *out;$/;"	m	struct:pocli_ctx	file:
out	deps/pmdk/src/test/unittest/ut.c	/^out(int flags, const char *fmt, ...)$/;"	f	file:
out_column_width	deps/pmdk/src/tools/pmempool/output.c	/^static unsigned out_column_width = 20;$/;"	v	file:
out_common	deps/pmdk/src/common/out.c	/^out_common(const char *file, int line, const char *func, int level,$/;"	f	file:
out_concat	deps/pmdk/src/tools/pmempool/output.c	/^out_concat(char *str_buff, int *curr, int *count, const char *str)$/;"	f	file:
out_err	deps/pmdk/src/common/out.c	/^out_err(const char *file, int line, const char *func,$/;"	f
out_err	deps/pmdk/src/test/tools/sparsefile/sparsefile.c	/^out_err(const wchar_t *fmt, ...)$/;"	f	file:
out_err_vargs	deps/pmdk/src/test/tools/sparsefile/sparsefile.c	/^out_err_vargs(const wchar_t *fmt, va_list ap)$/;"	f	file:
out_error	deps/pmdk/src/common/out.c	/^out_error(const char *file, int line, const char *func,$/;"	f	file:
out_fatal	deps/pmdk/src/common/out.c	/^out_fatal(const char *file, int line, const char *func,$/;"	f
out_fatal_abort	deps/pmdk/src/common/out.h	/^out_fatal_abort(const char *file, int line, const char *func,$/;"	f
out_fatal_discard	deps/pmdk/src/common/out.h	/^out_fatal_discard(const char *file, int line, const char *func,$/;"	f
out_fh	deps/pmdk/src/tools/pmempool/output.c	/^static FILE *out_fh;$/;"	v	file:
out_fini	deps/pmdk/src/common/out.c	/^out_fini(void)$/;"	f
out_get_alignment_desc_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_alignment_desc_str(uint64_t ad, uint64_t valid_ad)$/;"	f
out_get_arch_data_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_arch_data_str(uint8_t data)$/;"	f
out_get_arch_machine_class_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_arch_machine_class_str(uint8_t machine_class)$/;"	f
out_get_arch_machine_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_arch_machine_str(uint16_t machine)$/;"	f
out_get_ascii_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_ascii_str(char *str, size_t str_len, const uint8_t *datap, size_t len)$/;"	f	file:
out_get_btt_map_entry	deps/pmdk/src/tools/pmempool/output.c	/^out_get_btt_map_entry(uint32_t map)$/;"	f
out_get_checksum	deps/pmdk/src/tools/pmempool/output.c	/^out_get_checksum(void *addr, size_t len, uint64_t *csump, size_t skip_off)$/;"	f
out_get_chunk_flags	deps/pmdk/src/tools/pmempool/output.c	/^out_get_chunk_flags(uint16_t flags)$/;"	f
out_get_chunk_type_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_chunk_type_str(enum chunk_type type)$/;"	f
out_get_errormsg	deps/pmdk/src/common/out.c	/^out_get_errormsg(void)$/;"	f
out_get_errormsg	deps/pmdk/src/common/out.h	243;"	d
out_get_errormsg	deps/pmdk/src/common/out.h	245;"	d
out_get_errormsgW	deps/pmdk/src/common/out.c	/^out_get_errormsgW(void)$/;"	f
out_get_hex_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_hex_str(char *str, size_t str_len, const uint8_t *datap, size_t len)$/;"	f	file:
out_get_incompat_features_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_incompat_features_str(uint32_t incompat)$/;"	f
out_get_last_shutdown_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_last_shutdown_str(uint8_t dirty)$/;"	f
out_get_percentage	deps/pmdk/src/tools/pmempool/output.c	/^out_get_percentage(double perc)$/;"	f
out_get_pmemoid_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_pmemoid_str(PMEMoid oid, uint64_t uuid_lo)$/;"	f
out_get_pool_signature	deps/pmdk/src/tools/pmempool/output.c	/^out_get_pool_signature(pmem_pool_type_t type)$/;"	f
out_get_pool_type_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_pool_type_str(pmem_pool_type_t type)$/;"	f
out_get_size_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_size_str(uint64_t size, int human)$/;"	f
out_get_time_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_time_str(time_t time)$/;"	f
out_get_uuid_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_uuid_str(uuid_t uuid)$/;"	f
out_get_zone_magic_str	deps/pmdk/src/tools/pmempool/output.c	/^out_get_zone_magic_str(uint32_t magic)$/;"	f
out_indent_level	deps/pmdk/src/tools/pmempool/output.c	/^static int out_indent_level;$/;"	v	file:
out_indent_str	deps/pmdk/src/tools/pmempool/output.c	/^static char out_indent_str[MAX_INDENT + 1];$/;"	v	file:
out_init	deps/pmdk/src/common/out.c	/^out_init(const char *log_prefix, const char *log_level_var,$/;"	f
out_log	deps/pmdk/src/common/out.c	/^out_log(const char *file, int line, const char *func, int level,$/;"	f
out_log_discard	deps/pmdk/src/common/out.h	/^out_log_discard(const char *file, int line, const char *func, int level,$/;"	f
out_nonl	deps/pmdk/src/common/out.c	/^out_nonl(int level, const char *fmt, ...)$/;"	f
out_nonl_discard	deps/pmdk/src/common/out.h	/^out_nonl_discard(int level, const char *fmt, ...)$/;"	f
out_prefix	deps/pmdk/src/tools/pmempool/output.c	/^static const char *out_prefix;$/;"	v	file:
out_print_func	deps/pmdk/src/common/out.c	/^out_print_func(const char *s)$/;"	f	file:
out_set_col_width	deps/pmdk/src/tools/pmempool/output.c	/^out_set_col_width(unsigned col_width)$/;"	f
out_set_prefix	deps/pmdk/src/tools/pmempool/output.c	/^out_set_prefix(const char *prefix)$/;"	f
out_set_print_func	deps/pmdk/src/common/out.c	/^out_set_print_func(void (*print_func)(const char *s))$/;"	f
out_set_stream	deps/pmdk/src/tools/pmempool/output.c	/^out_set_stream(FILE *stream)$/;"	f
out_set_vlevel	deps/pmdk/src/tools/pmempool/output.c	/^out_set_vlevel(int vlevel)$/;"	f
out_set_vsnprintf_func	deps/pmdk/src/common/out.c	/^out_set_vsnprintf_func(int (*vsnprintf_func)(char *str, size_t size,$/;"	f
out_snprintf	deps/pmdk/src/common/out.c	/^out_snprintf(char *str, size_t size, const char *format, ...)$/;"	f	file:
out_vlevel	deps/pmdk/src/tools/pmempool/output.c	/^static int out_vlevel;$/;"	v	file:
outofrangeerr	src/server.h	/^    *outofrangeerr, *noscripterr, *loadingerr, *slowscripterr, *bgsaveerr,$/;"	m	struct:sharedObjectsStruct
output	deps/lua/src/luac.c	/^static const char* output=Output;	\/* actual output file name *\/$/;"	v	file:
output	src/redis-cli.c	/^    int output; \/* output mode, see OUTPUT_* defines *\/$/;"	m	struct:config	file:
outv	deps/pmdk/src/tools/pmempool/output.c	/^outv(int vlevel, const char *fmt, ...)$/;"	f
outv_check	deps/pmdk/src/tools/pmempool/output.c	/^outv_check(int vlevel)$/;"	f
outv_err	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^outv_err(const char *fmt, ...)$/;"	f
outv_err	deps/pmdk/src/tools/pmempool/output.c	/^outv_err(const char *fmt, ...)$/;"	f
outv_err_vargs	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^outv_err_vargs(const char *fmt, va_list ap)$/;"	f
outv_err_vargs	deps/pmdk/src/tools/pmempool/output.c	/^outv_err_vargs(const char *fmt, va_list ap)$/;"	f
outv_field	deps/pmdk/src/tools/pmempool/output.c	/^outv_field(int vlevel, const char *field, const char *fmt, ...)$/;"	f
outv_hexdump	deps/pmdk/src/tools/pmempool/output.c	/^outv_hexdump(int vlevel, const void *addr, size_t len, size_t offset, int sep)$/;"	f
outv_indent	deps/pmdk/src/tools/pmempool/output.c	/^outv_indent(int vlevel, int i)$/;"	f
outv_nl	deps/pmdk/src/tools/pmempool/output.c	/^outv_nl(int vlevel)$/;"	f
outv_title	deps/pmdk/src/tools/pmempool/output.c	/^outv_title(int vlevel, const char *fmt, ...)$/;"	f
overlap_object	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^struct overlap_object {$/;"	s	file:
override_clos	deps/pmdk/src/benchmarks/pmembench.cpp	/^	bool override_clos;$/;"	m	struct:pmembench	file:
owtype	src/bitops.c	/^    int owtype;         \/* Overflow type to use. *\/$/;"	m	struct:bitfieldOp	file:
p	deps/jemalloc/src/jemalloc.c	/^	void	*p;	\/* Input pointer (as in realloc(p, s)). *\/$/;"	m	struct:__anon17	file:
p	deps/lua/src/lauxlib.h	/^  char *p;			\/* current position in buffer *\/$/;"	m	struct:luaL_Buffer
p	deps/lua/src/lobject.h	/^  struct Proto **p;  \/* functions defined inside the function *\/$/;"	m	struct:Proto	typeref:struct:Proto::Proto
p	deps/lua/src/lobject.h	/^  struct Proto *p;$/;"	m	struct:LClosure	typeref:struct:LClosure::Proto
p	deps/lua/src/lobject.h	/^  void *p;$/;"	m	union:__anon23
p	deps/lua/src/lstate.h	/^  struct Proto p;$/;"	m	union:GCObject	typeref:struct:GCObject::Proto
p	deps/lua/src/lua_cmsgpack.c	/^    const unsigned char *p;$/;"	m	struct:mp_cur	file:
p	deps/lua/src/lzio.h	/^  const char *p;		\/* current position in buffer *\/$/;"	m	struct:Zio
p	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_insert_item(TOID(struct tree_map_node) node, int p,$/;"	v
p	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_insert_node(TOID(struct tree_map_node) node, int p,$/;"	v
p	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^	struct tree_map_entry *p = NULL;$/;"	m	struct:parent	typeref:struct:parent::tree_map_entry	file:
p	deps/pmdk/src/test/obj_heap/obj_heap.c	/^	PMEMobjpool p;$/;"	m	struct:mock_pop	file:
p	deps/pmdk/src/test/obj_lane/obj_lane.c	/^	PMEMobjpool p;$/;"	m	struct:mock_pop	file:
p	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^	PMEMobjpool p;$/;"	m	struct:mock_pop	file:
p	src/ziplist.c	/^    unsigned char *p;$/;"	m	struct:zlentry	file:
p2rz	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^p2rz(tsdn_t *tsdn, const void *ptr)$/;"	f
p2rz	deps/jemalloc/include/jemalloc/internal/private_namespace.h	396;"	d
p2rz	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	396;"	d
p_ops	deps/pmdk/src/libpmemobj/memops.c	/^	const struct pmem_ops *p_ops;$/;"	m	struct:operation_context	typeref:struct:operation_context::pmem_ops	file:
p_ops	deps/pmdk/src/libpmemobj/obj.h	/^	struct pmem_ops p_ops;$/;"	m	struct:pmemobjpool	typeref:struct:pmemobjpool::pmem_ops
p_ops	deps/pmdk/src/libpmemobj/palloc.h	/^	struct pmem_ops p_ops;$/;"	m	struct:palloc_heap	typeref:struct:palloc_heap::pmem_ops
p_test	deps/jemalloc/test/src/test.c	/^p_test(test_t *t, ...)$/;"	f
p_test_fail	deps/jemalloc/test/src/test.c	/^p_test_fail(const char *prefix, const char *message)$/;"	f
p_test_fini	deps/jemalloc/test/src/test.c	/^p_test_fini(void)$/;"	f
p_test_impl	deps/jemalloc/test/src/test.c	/^p_test_impl(bool do_malloc_init, test_t *t, va_list ap)$/;"	f	file:
p_test_init	deps/jemalloc/test/src/test.c	/^p_test_init(const char *name)$/;"	f
p_test_no_malloc_init	deps/jemalloc/test/src/test.c	/^p_test_no_malloc_init(test_t *t, ...)$/;"	f
pa	deps/pmdk/src/benchmarks/obj_lanes.cpp	/^	struct prog_args *pa; \/* prog_args structure *\/$/;"	m	struct:obj_bench	typeref:struct:obj_bench::prog_args	file:
pa	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	struct prog_args *pa;	  \/* prog_args structure *\/$/;"	m	struct:mutex_bench	typeref:struct:mutex_bench::prog_args	file:
pa	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^	struct prog_args *pa;      \/* prog_args structure *\/$/;"	m	struct:obj_bench	typeref:struct:obj_bench::prog_args	file:
pa	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^	struct prog_args *pa; \/* prog_args structure *\/$/;"	m	struct:obj_bench	typeref:struct:obj_bench::prog_args	file:
pack_all_libs	deps/pmdk/src/test/unittest/unittest.sh	/^function pack_all_libs() {$/;"	f
pack_rpmem_pool_attr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^pack_rpmem_pool_attr(const struct rpmem_pool_attr *src,$/;"	f
pact	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^	struct pobj_action pact;$/;"	m	struct:action	typeref:struct:action::pobj_action	file:
pactive	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	size_t			pactive;$/;"	m	struct:ctl_arena_stats_s
padded_pmemcond	deps/pmdk/src/libpmemobj/sync.h	/^typedef union padded_pmemcond {$/;"	u
padded_pmemmutex	deps/pmdk/src/libpmemobj/sync.h	/^typedef union padded_pmemmutex {$/;"	u
padded_pmemrwlock	deps/pmdk/src/libpmemobj/sync.h	/^typedef union padded_pmemrwlock {$/;"	u
padded_volatile_pmemmutex	deps/pmdk/src/benchmarks/obj_locks.cpp	/^typedef union padded_volatile_pmemmutex {$/;"	u	file:
padding	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	char padding[_POBJ_CL_SIZE];$/;"	m	union:padded_volatile_pmemmutex	file:
padding	deps/pmdk/src/common/os_thread.h	/^	char padding[16]; \/* 16 to be safe *\/$/;"	m	union:__anon75
padding	deps/pmdk/src/common/os_thread.h	/^	char padding[32]; \/* linux: 8 windows: 32 *\/$/;"	m	union:__anon74
padding	deps/pmdk/src/common/os_thread.h	/^	char padding[44]; \/* linux: 40 windows: 44 *\/$/;"	m	union:__anon71
padding	deps/pmdk/src/common/os_thread.h	/^	char padding[48]; \/* linux: 48 windows: 12 *\/$/;"	m	union:__anon73
padding	deps/pmdk/src/common/os_thread.h	/^	char padding[512];$/;"	m	union:__anon78
padding	deps/pmdk/src/common/os_thread.h	/^	char padding[56];  \/* linux: 56 windows: 8 *\/$/;"	m	union:__anon76
padding	deps/pmdk/src/common/os_thread.h	/^	char padding[56];  \/* linux: 56 windows: 8 *\/$/;"	m	union:__anon77
padding	deps/pmdk/src/common/os_thread.h	/^	char padding[56]; \/* linux: 56 windows: 13 *\/$/;"	m	union:__anon72
padding	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	uint16_t padding; \/* to 8 bytes *\/$/;"	m	struct:player	file:
padding	deps/pmdk/src/include/libpmemobj/thread.h	/^	char padding[_POBJ_CL_SIZE];$/;"	m	union:__anon50
padding	deps/pmdk/src/include/libpmemobj/thread.h	/^	char padding[_POBJ_CL_SIZE];$/;"	m	union:__anon51
padding	deps/pmdk/src/include/libpmemobj/thread.h	/^	char padding[_POBJ_CL_SIZE];$/;"	m	union:__anon52
padding	deps/pmdk/src/libpmemobj/palloc.c	/^	uint32_t padding;$/;"	m	struct:pobj_action_internal	file:
padding	deps/pmdk/src/libpmemobj/sync.h	/^	char padding[_POBJ_CL_SIZE];$/;"	m	union:padded_pmemcond
padding	deps/pmdk/src/libpmemobj/sync.h	/^	char padding[_POBJ_CL_SIZE];$/;"	m	union:padded_pmemmutex
padding	deps/pmdk/src/libpmemobj/sync.h	/^	char padding[_POBJ_CL_SIZE];$/;"	m	union:padded_pmemrwlock
padding	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^	char padding[PAD_SIZE]; \/* to page boundary *\/$/;"	m	struct:mock_pop	file:
pages_boot	deps/jemalloc/include/jemalloc/internal/private_namespace.h	397;"	d
pages_boot	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	397;"	d
pages_boot	deps/jemalloc/src/pages.c	/^pages_boot(void)$/;"	f
pages_commit	deps/jemalloc/include/jemalloc/internal/private_namespace.h	398;"	d
pages_commit	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	398;"	d
pages_commit	deps/jemalloc/src/pages.c	/^pages_commit(void *addr, size_t size)$/;"	f
pages_commit_impl	deps/jemalloc/src/pages.c	/^pages_commit_impl(void *addr, size_t size, bool commit)$/;"	f	file:
pages_decommit	deps/jemalloc/include/jemalloc/internal/private_namespace.h	399;"	d
pages_decommit	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	399;"	d
pages_decommit	deps/jemalloc/src/pages.c	/^pages_decommit(void *addr, size_t size)$/;"	f
pages_huge	deps/jemalloc/include/jemalloc/internal/private_namespace.h	400;"	d
pages_huge	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	400;"	d
pages_huge	deps/jemalloc/src/pages.c	/^pages_huge(void *addr, size_t size)$/;"	f
pages_map	deps/jemalloc/include/jemalloc/internal/private_namespace.h	401;"	d
pages_map	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	401;"	d
pages_map	deps/jemalloc/src/pages.c	/^pages_map(void *addr, size_t size, bool *commit)$/;"	f
pages_nohuge	deps/jemalloc/include/jemalloc/internal/private_namespace.h	402;"	d
pages_nohuge	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	402;"	d
pages_nohuge	deps/jemalloc/src/pages.c	/^pages_nohuge(void *addr, size_t size)$/;"	f
pages_purge	deps/jemalloc/include/jemalloc/internal/private_namespace.h	403;"	d
pages_purge	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	403;"	d
pages_purge	deps/jemalloc/src/pages.c	/^pages_purge(void *addr, size_t size)$/;"	f
pages_trim	deps/jemalloc/include/jemalloc/internal/private_namespace.h	404;"	d
pages_trim	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	404;"	d
pages_trim	deps/jemalloc/src/pages.c	/^pages_trim(void *addr, size_t alloc_size, size_t leadsize, size_t size,$/;"	f
pages_unmap	deps/jemalloc/include/jemalloc/internal/private_namespace.h	405;"	d
pages_unmap	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	405;"	d
pages_unmap	deps/jemalloc/src/pages.c	/^pages_unmap(void *addr, size_t size)$/;"	f
palloc_action_compare	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_action_compare(const void *lhs, const void *rhs)$/;"	f	file:
palloc_boot	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_boot(struct palloc_heap *heap, void *heap_start,$/;"	f
palloc_buckets_init	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_buckets_init(struct palloc_heap *heap)$/;"	f
palloc_cancel	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_cancel(struct palloc_heap *heap,$/;"	f
palloc_constr	deps/pmdk/src/libpmemobj/palloc.h	/^typedef int (*palloc_constr)(void *base, void *ptr,$/;"	t
palloc_defer_free	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_defer_free(struct palloc_heap *heap, uint64_t off,$/;"	f
palloc_defer_free	deps/pmdk/src/test/obj_list/mocks_windows.h	67;"	d
palloc_defer_free_create	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_defer_free_create(struct palloc_heap *heap, uint64_t off,$/;"	f	file:
palloc_defrag	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_defrag(struct palloc_heap *heap, uint64_t **objv, size_t objcnt,$/;"	f
palloc_defrag_entry	deps/pmdk/src/libpmemobj/palloc.c	/^struct palloc_defrag_entry {$/;"	s	file:
palloc_exec_actions	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_exec_actions(struct palloc_heap *heap,$/;"	f	file:
palloc_extra	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_extra(struct palloc_heap *heap, uint64_t off)$/;"	f
palloc_first	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_first(struct palloc_heap *heap)$/;"	f
palloc_flags	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_flags(struct palloc_heap *heap, uint64_t off)$/;"	f
palloc_heap	deps/pmdk/src/libpmemobj/palloc.h	/^struct palloc_heap {$/;"	s
palloc_heap_action_exec	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_heap_action_exec(struct palloc_heap *heap,$/;"	f	file:
palloc_heap_action_on_cancel	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_heap_action_on_cancel(struct palloc_heap *heap,$/;"	f	file:
palloc_heap_action_on_process	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_heap_action_on_process(struct palloc_heap *heap,$/;"	f	file:
palloc_heap_action_on_unlock	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_heap_action_on_unlock(struct palloc_heap *heap,$/;"	f	file:
palloc_heap_check	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_heap_check(void *heap_start, uint64_t heap_size)$/;"	f
palloc_heap_check_remote	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_heap_check_remote(void *heap_start, uint64_t heap_size,$/;"	f
palloc_heap_cleanup	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_heap_cleanup(struct palloc_heap *heap)$/;"	f
palloc_heap_end	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_heap_end(struct palloc_heap *h)$/;"	f
palloc_heap_vg_open	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_heap_vg_open(struct palloc_heap *heap, int objects)$/;"	f
palloc_init	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_init(void *heap_start, uint64_t heap_size, uint64_t *sizep,$/;"	f
palloc_mem_action_exec	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_mem_action_exec(struct palloc_heap *heap,$/;"	f	file:
palloc_mem_action_noop	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_mem_action_noop(struct palloc_heap *heap,$/;"	f	file:
palloc_next	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_next(struct palloc_heap *heap, uint64_t off)$/;"	f
palloc_offset_compare	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_offset_compare(const void *lhs, const void *rhs)$/;"	f	file:
palloc_operation	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_operation(struct palloc_heap *heap,$/;"	f
palloc_pointer_compare	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_pointer_compare(const void *lhs, const void *rhs)$/;"	f	file:
palloc_publish	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_publish(struct palloc_heap *heap,$/;"	f
palloc_publish	deps/pmdk/src/test/obj_list/mocks_windows.h	66;"	d
palloc_reservation_clear	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_reservation_clear(struct palloc_heap *heap,$/;"	f	file:
palloc_reservation_create	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_reservation_create(struct palloc_heap *heap, size_t size,$/;"	f	file:
palloc_reserve	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_reserve(struct palloc_heap *heap, size_t size,$/;"	f
palloc_reserve	deps/pmdk/src/test/obj_list/mocks_windows.h	65;"	d
palloc_restore_free_chunk_state	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_restore_free_chunk_state(struct palloc_heap *heap,$/;"	f	file:
palloc_set_value	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_set_value(struct palloc_heap *heap, struct pobj_action *act,$/;"	f
palloc_usable_size	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_usable_size(struct palloc_heap *heap, uint64_t off)$/;"	f
palloc_usable_size	deps/pmdk/src/test/obj_list/mocks_windows.h	64;"	d
palloc_vg_register_alloc	deps/pmdk/src/libpmemobj/palloc.c	/^palloc_vg_register_alloc(const struct memory_block *m, void *arg)$/;"	f	file:
panic	deps/lua/src/lauxlib.c	/^static int panic (lua_State *L) {$/;"	f	file:
panic	deps/lua/src/lstate.h	/^  lua_CFunction panic;  \/* to be called in unprotected errors *\/$/;"	m	struct:global_State
parallel_syncs	src/sentinel.c	/^    int parallel_syncs; \/* How many slaves to reconfigure at same time. *\/$/;"	m	struct:sentinelRedisInstance	file:
params	deps/pmdk/src/libpmempool/pool.h	/^	struct pool_params params;$/;"	m	struct:pool_data	typeref:struct:pool_data::pool_params
params	deps/pmdk/src/tools/pmempool/create.c	/^	struct pmem_pool_params params;$/;"	m	struct:pmempool_create	typeref:struct:pmempool_create::pmem_pool_params	file:
params	deps/pmdk/src/tools/pmempool/info.h	/^	struct pmem_pool_params params;$/;"	m	struct:pmem_info	typeref:struct:pmem_info::pmem_pool_params
params	src/help.h	/^  char *params;$/;"	m	struct:commandHelp
parent	deps/hiredis/hiredis.h	/^    struct redisReadTask *parent; \/* parent task *\/$/;"	m	struct:redisReadTask	typeref:struct:redisReadTask::redisReadTask
parent	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^	struct tree_map_entry **parent)$/;"	s	file:
parent	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) parent;$/;"	m	struct:tree_map_node	file:
parent	deps/pmdk/src/libpmemobj/ravl.c	/^	struct ravl_node *parent;$/;"	m	struct:ravl_node	typeref:struct:ravl_node::ravl_node	file:
parent_uuid	deps/pmdk/src/libpmemblk/btt.c	/^	uint8_t parent_uuid[BTTINFO_UUID_LEN];$/;"	m	struct:btt	file:
parent_uuid	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint8_t parent_uuid[BTTINFO_UUID_LEN];	\/* UUID of container *\/$/;"	m	struct:btt_info
pargs	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	struct pmem_args *pargs; \/* prog_args structure *\/$/;"	m	struct:pmem_bench	typeref:struct:pmem_bench::pmem_args	file:
pargs	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	struct pmem_args *pargs;$/;"	m	struct:pmem_bench	typeref:struct:pmem_bench::pmem_args	file:
pargs	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	struct memset_args *pargs; \/* benchmark specific arguments *\/$/;"	m	struct:memset_bench	typeref:struct:memset_bench::memset_args	file:
pargs	deps/pmdk/src/benchmarks/rpmem.cpp	/^	struct rpmem_args *pargs; \/* benchmark specific arguments *\/$/;"	m	struct:rpmem_bench	typeref:struct:rpmem_bench::rpmem_args	file:
parity	deps/jemalloc/test/src/SFMT.c	/^static uint32_t parity[4] = {PARITY1, PARITY2, PARITY3, PARITY4};$/;"	v	file:
parlist	deps/lua/src/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:
parseOptions	src/redis-benchmark.c	/^int parseOptions(int argc, const char **argv) {$/;"	f
parseOptions	src/redis-cli.c	/^static int parseOptions(int argc, char **argv) {$/;"	f	file:
parseScanCursorOrReply	src/db.c	/^int parseScanCursorOrReply(client *c, robj *o, unsigned long *cursor) {$/;"	f
parse_args	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^parse_args(char *arg, int max, const char **names)$/;"	f	file:
parse_args	deps/pmdk/src/examples/librpmem/basic.c	/^parse_args(int argc, char *argv[], enum op_t *op, const char **target,$/;"	f	file:
parse_args	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^parse_args(int argc, char *argv[], const char **target, const char **poolset,$/;"	f	file:
parse_args	deps/pmdk/src/examples/librpmem/hello.c	/^parse_args(int argc, char *argv[], const char **target, const char **poolset)$/;"	f	file:
parse_args	deps/pmdk/src/examples/librpmem/manpage.c	/^parse_args(int argc, char *argv[], const char **target, const char **poolset)$/;"	f	file:
parse_args	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	/^parse_args(int argc, char *argv[])$/;"	f	file:
parse_args	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^parse_args(struct ddmap_context *ctx, int argc, char *argv[])$/;"	f	file:
parse_args	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	/^parse_args(int argc, char *argv[])$/;"	f	file:
parse_args	deps/pmdk/src/tools/daxio/daxio.c	/^parse_args(struct daxio_context *ctx, int argc, char * const argv[])$/;"	f	file:
parse_args	deps/pmdk/src/tools/pmempool/feature.c	/^parse_args(struct feature_ctx *pfp, const char *appname,$/;"	f	file:
parse_args	deps/pmdk/src/tools/pmempool/info.c	/^parse_args(const char *appname, int argc, char *argv[],$/;"	f	file:
parse_benchmark_mode	deps/pmdk/src/benchmarks/obj_locks.cpp	/^parse_benchmark_mode(const char *arg)$/;"	f	file:
parse_bool	deps/pmdk/src/librpmem/rpmem_fip.c	/^parse_bool(const char *str_value)$/;"	f	file:
parse_cl_args	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^parse_cl_args(int argc, char *argv[], struct rpmemd_config *config,$/;"	f	file:
parse_config	deps/pmdk/src/test/unittest/configurator.py	/^    def parse_config(self):$/;"	m	class:Configurator
parse_config_bool	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^parse_config_bool(bool *config_value, const char *value)$/;"	f	file:
parse_config_file	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^parse_config_file(const char *filename, struct rpmemd_config *config,$/;"	f	file:
parse_config_key	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^parse_config_key(const char *key)$/;"	f	file:
parse_config_line	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^parse_config_line(char *line, struct rpmemd_special_chars_pos *pos,$/;"	f	file:
parse_config_string	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^parse_config_string(const char *value)$/;"	f	file:
parse_err_code	deps/pmdk/src/test/pmem_map_file/pmem_map_file.c	/^parse_err_code(const char *err_str)$/;"	f	file:
parse_flags	deps/pmdk/src/test/pmem_map_file/pmem_map_file.c	/^parse_flags(const char *flags_str)$/;"	f	file:
parse_flags	deps/pmdk/src/test/pmem_map_file_win/pmem_map_file_win.c	/^parse_flags(const wchar_t *flags_str)$/;"	f	file:
parse_keyval	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^static int parse_keyval(struct ds_context *ctx, char *arg, int mode)$/;"	f	file:
parse_lib	deps/pmdk/src/test/scope/TESTS.py	/^def parse_lib(ctx, lib, static=False):$/;"	f
parse_lib_linux	deps/pmdk/src/test/scope/TESTS.py	/^def parse_lib_linux(ctx, lib, static):$/;"	f
parse_lib_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^parse_lib_mode(const char *arg)$/;"	f	file:
parse_lib_win	deps/pmdk/src/test/scope/TESTS.py	/^def parse_lib_win(ctx, lib, static):$/;"	f
parse_map_type	deps/pmdk/src/benchmarks/map_bench.cpp	/^parse_map_type(const char *str)$/;"	f	file:
parse_map_type	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^parse_map_type(const char *type)$/;"	f	file:
parse_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	int parse_mode;     \/* type of parsing function *\/$/;"	m	struct:obj_tx_args	file:
parse_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^enum parse_mode { PARSE_OP_MODE, PARSE_OP_MODE_ADD_RANGE };$/;"	g	file:
parse_nfit_buffer	deps/pmdk/src/common/os_auto_flush_windows.c	/^parse_nfit_buffer(const unsigned char *nfit_buffer, unsigned long buffer_size)$/;"	f	file:
parse_nonzero	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^parse_nonzero(unsigned *var, const char *arg)$/;"	f	file:
parse_number	deps/pmdk/src/benchmarks/clo.cpp	/^parse_number(const char *arg, size_t len, void *value, int s, int base)$/;"	f	file:
parse_number_base	deps/pmdk/src/benchmarks/clo.cpp	/^parse_number_base(const char *arg, void *value, int s, int base)$/;"	f	file:
parse_op	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static fn_parse_t parse_op[] = {parse_op_mode, parse_op_mode_add_range};$/;"	v	file:
parse_op_mode	deps/pmdk/src/benchmarks/blk.cpp	/^parse_op_mode(const char *arg)$/;"	f	file:
parse_op_mode	deps/pmdk/src/benchmarks/obj_locks.cpp	/^parse_op_mode(const char *arg)$/;"	f	file:
parse_op_mode	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^parse_op_mode(const char *arg)$/;"	f	file:
parse_op_mode	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^parse_op_mode(const char *arg)$/;"	f	file:
parse_op_mode	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^parse_op_mode(const char *arg)$/;"	f	file:
parse_op_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^parse_op_mode(const char *arg)$/;"	f	file:
parse_op_mode	deps/pmdk/src/benchmarks/rpmem.cpp	/^parse_op_mode(const char *arg)$/;"	f	file:
parse_op_mode_add_range	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^parse_op_mode_add_range(const char *arg)$/;"	f	file:
parse_op_type	deps/pmdk/src/benchmarks/blk.cpp	/^parse_op_type(const char *arg)$/;"	f	file:
parse_op_type	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^parse_op_type(const char *arg)$/;"	f	file:
parse_op_type	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^parse_op_type(const char *arg)$/;"	f	file:
parse_options	src/redis-trib.rb	/^    def parse_options(cmd)$/;"	f	class:RedisTrib.alloc_slots
parse_options	tests/instances.tcl	/^proc parse_options {} {$/;"	p
parse_size	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^parse_size(const char *str, uint64_t *sizep)$/;"	f	file:
parse_stage	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^parse_stage(void)$/;"	f	file:
parse_test_params	deps/pmdk/src/test/rpmemd_config/rpmemd_config_test.c	/^parse_test_params(int *argc, char *argv[])$/;"	f	file:
parse_type_mode	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^parse_type_mode(const char *arg)$/;"	f	file:
parse_type_num_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^parse_type_num_mode(const char *arg)$/;"	f	file:
parser	deps/pmdk/src/common/ctl.h	/^	ctl_arg_parser parser;$/;"	m	struct:ctl_argument_parser
parser_codes	deps/pmdk/src/common/set.c	/^enum parser_codes {$/;"	g	file:
parser_errstr	deps/pmdk/src/common/set.c	/^static const char *parser_errstr[PARSER_MAX_CODE] = {$/;"	v	file:
parser_read_line	deps/pmdk/src/common/set.c	/^parser_read_line(char *line, size_t *size, char **path)$/;"	f	file:
parser_read_options	deps/pmdk/src/common/set.c	/^parser_read_options(char *line, unsigned *options)$/;"	f	file:
parser_read_replica	deps/pmdk/src/common/set.c	/^parser_read_replica(char *line, char **node_addr, char **pool_desc)$/;"	f	file:
parsers	deps/pmdk/src/common/ctl.h	/^	struct ctl_argument_parser parsers[]; \/* array of 'fields' in arg *\/$/;"	m	struct:ctl_argument	typeref:struct:ctl_argument::ctl_argument_parser
part	deps/pmdk/src/common/set.h	/^	struct pool_set_part *part;$/;"	m	struct:part_file	typeref:struct:part_file::pool_set_part
part	deps/pmdk/src/common/set.h	/^	struct pool_set_part part[];$/;"	m	struct:pool_replica	typeref:struct:pool_replica::pool_set_part
part	deps/pmdk/src/libpmempool/check.c	/^	bool part;$/;"	m	struct:step	file:
part	deps/pmdk/src/libpmempool/check_util.h	/^	unsigned part;$/;"	m	struct:__anon87
part	deps/pmdk/src/libpmempool/replica.h	/^	struct part_health_status part[];$/;"	m	struct:replica_health_status	typeref:struct:replica_health_status::part_health_status
part_file	deps/pmdk/src/common/set.h	/^struct part_file {$/;"	s
part_health_status	deps/pmdk/src/libpmempool/replica.h	/^struct part_health_status {$/;"	s
partial	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	unsigned char partial[MAX_PREFIX_LEN];$/;"	m	struct:_art_node
partial	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	unsigned char partial[MAX_PREFIX_LEN];$/;"	m	struct:_art_node
partial_len	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	uint32_t partial_len;$/;"	m	struct:_art_node
partial_len	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	uint32_t partial_len;$/;"	m	struct:_art_node
pass	deps/pmdk/src/test/unittest/unittest.sh	/^function pass() {$/;"	f
patchlistaux	deps/lua/src/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:
patchtestreg	deps/lua/src/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:
path	deps/hiredis/test.c	/^        const char *path;$/;"	m	struct:config::__anon150	file:
path	deps/pmdk/src/common/file.h	/^	const char *path;$/;"	m	struct:dir_handle
path	deps/pmdk/src/common/fs.h	/^	const char *path;$/;"	m	struct:fs_entry
path	deps/pmdk/src/common/set.h	/^	char *path;		\/* path of the poolset file *\/$/;"	m	struct:pool_set
path	deps/pmdk/src/common/set.h	/^	const char *path;$/;"	m	struct:pool_set_directory
path	deps/pmdk/src/common/set.h	/^	const char *path;$/;"	m	struct:pool_set_part
path	deps/pmdk/src/include/libpmempool.h	/^	const char *path;$/;"	m	struct:pmempool_check_argsU
path	deps/pmdk/src/include/libpmempool.h	/^	const wchar_t *path;$/;"	m	struct:pmempool_check_argsW
path	deps/pmdk/src/libpmemobj/critnib.c	/^	uint64_t path;$/;"	m	struct:critnib_node	file:
path	deps/pmdk/src/libpmempool/pmempool.h	/^	char *path;$/;"	m	struct:pmempool_check_ctx
path	deps/pmdk/src/test/libpmempool_api/libpmempool_test.c	/^	const char *path;$/;"	m	struct:pmempool_check_args_1_0	file:
path	deps/pmdk/src/test/libpmempool_api_win/libpmempool_test_win.c	/^	const wchar_t *path;$/;"	m	struct:pmempool_check_args_1_0	file:
path	deps/pmdk/src/tools/daxio/daxio.c	/^	char *path;$/;"	m	struct:daxio_device	file:
pathIsBaseName	src/util.c	/^int pathIsBaseName(char *path) {$/;"	f
path_mask	deps/pmdk/src/libpmemobj/critnib.c	/^path_mask(sh_t shift)$/;"	f	file:
pathlen	deps/pmdk/src/common/fs.h	/^	size_t pathlen;$/;"	m	struct:fs_entry
pattern	src/redis-cli.c	/^    char *pattern;$/;"	m	struct:config	file:
pattern	src/server.h	/^    robj *pattern;$/;"	m	struct:_redisSortOperation
pattern	src/server.h	/^    robj *pattern;$/;"	m	struct:pubsubPattern
pattern_size	deps/pmdk/src/test/obj_defrag_advanced/pgraph.h	/^	size_t pattern_size;$/;"	m	struct:pnode_t
pattern_size	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	size_t pattern_size; \/* size of the pattern allocated after the node *\/$/;"	m	struct:vnode_t
patterns	deps/hiredis/async.h	/^        struct dict *patterns;$/;"	m	struct:redisAsyncContext::__anon148	typeref:struct:redisAsyncContext::__anon148::dict
pauseClients	src/networking.c	/^void pauseClients(mstime_t end) {$/;"	f
pause_on_error	tests/instances.tcl	/^proc pause_on_error {} {$/;"	p
pbp	deps/pmdk/src/benchmarks/blk.cpp	/^	PMEMblkpool *pbp;	 \/* pmemblk handle *\/$/;"	m	struct:blk_bench	file:
pc	deps/lua/src/lparser.h	/^  int pc;  \/* next position to code (equivalent to `ncode') *\/$/;"	m	struct:FuncState
pc	src/sentinel.c	/^    redisAsyncContext *pc; \/* Hiredis context for Pub \/ Sub. *\/$/;"	m	struct:instanceLink	file:
pcRel	deps/lua/src/ldebug.h	14;"	d
pc_conn_time	src/sentinel.c	/^    mstime_t pc_conn_time; \/* pc connection time. *\/$/;"	m	struct:instanceLink	file:
pc_last_activity	src/sentinel.c	/^    mstime_t pc_last_activity; \/* Last time we received any message. *\/$/;"	m	struct:instanceLink	file:
pctl50_0p	deps/pmdk/src/benchmarks/benchmark.hpp	/^	uint64_t pctl50_0p;$/;"	m	struct:latency
pctl99_0p	deps/pmdk/src/benchmarks/benchmark.hpp	/^	uint64_t pctl99_0p;$/;"	m	struct:latency
pctl99_9p	deps/pmdk/src/benchmarks/benchmark.hpp	/^	uint64_t pctl99_9p;$/;"	m	struct:latency
pdf-LUAL_BUFFERSIZE	deps/lua/doc/manual.html	/^Returns an address to a space of size <a name="pdf-LUAL_BUFFERSIZE"><code>LUAL_BUFFERSIZE<\/code><\/a>$/;"	a
pdf-LUA_CPATH	deps/lua/doc/manual.html	/^using the environment variable <a name="pdf-LUA_CPATH"><code>LUA_CPATH<\/code><\/a>$/;"	a
pdf-LUA_ENVIRONINDEX	deps/lua/doc/manual.html	/^at pseudo-index <a name="pdf-LUA_ENVIRONINDEX"><code>LUA_ENVIRONINDEX<\/code><\/a>.$/;"	a
pdf-LUA_ERRERR	deps/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRERR"><code>LUA_ERRERR<\/code><\/a>:<\/b>$/;"	a
pdf-LUA_ERRFILE	deps/lua/doc/manual.html	/^but it has an extra error code <a name="pdf-LUA_ERRFILE"><code>LUA_ERRFILE<\/code><\/a>$/;"	a
pdf-LUA_ERRMEM	deps/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRMEM"><code>LUA_ERRMEM<\/code><\/a>:<\/b>$/;"	a
pdf-LUA_ERRRUN	deps/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRRUN"><code>LUA_ERRRUN<\/code><\/a>:<\/b>$/;"	a
pdf-LUA_ERRSYNTAX	deps/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRSYNTAX"><code>LUA_ERRSYNTAX<\/code><\/a>:<\/b>$/;"	a
pdf-LUA_GLOBALSINDEX	deps/lua/doc/manual.html	/^always at pseudo-index <a name="pdf-LUA_GLOBALSINDEX"><code>LUA_GLOBALSINDEX<\/code><\/a>.$/;"	a
pdf-LUA_HOOKCALL	deps/lua/doc/manual.html	/^<a name="pdf-LUA_HOOKCALL"><code>LUA_HOOKCALL<\/code><\/a>, <a name="pdf-LUA_HOOKRET"><code>LUA_HOOKRET<\/code><\/a>,$/;"	a
pdf-LUA_HOOKCOUNT	deps/lua/doc/manual.html	/^and <a name="pdf-LUA_HOOKCOUNT"><code>LUA_HOOKCOUNT<\/code><\/a>.$/;"	a
pdf-LUA_HOOKTAILRET	deps/lua/doc/manual.html	/^<a name="pdf-LUA_HOOKTAILRET"><code>LUA_HOOKTAILRET<\/code><\/a>, <a name="pdf-LUA_HOOKLINE"><code>LUA_HOOKLINE<\/code><\/a>,$/;"	a
pdf-LUA_INIT	deps/lua/doc/manual.html	/^the interpreter checks for an environment variable <a name="pdf-LUA_INIT"><code>LUA_INIT<\/code><\/a>.$/;"	a
pdf-LUA_MASKCALL	deps/lua/doc/manual.html	/^<a name="pdf-LUA_MASKCALL"><code>LUA_MASKCALL<\/code><\/a>,$/;"	a
pdf-LUA_MASKCOUNT	deps/lua/doc/manual.html	/^and <a name="pdf-LUA_MASKCOUNT"><code>LUA_MASKCOUNT<\/code><\/a>.$/;"	a
pdf-LUA_MASKLINE	deps/lua/doc/manual.html	/^<a name="pdf-LUA_MASKLINE"><code>LUA_MASKLINE<\/code><\/a>,$/;"	a
pdf-LUA_MASKRET	deps/lua/doc/manual.html	/^<a name="pdf-LUA_MASKRET"><code>LUA_MASKRET<\/code><\/a>,$/;"	a
pdf-LUA_MINSTACK	deps/lua/doc/manual.html	/^it ensures that at least <a name="pdf-LUA_MINSTACK"><code>LUA_MINSTACK<\/code><\/a> stack positions are available.$/;"	a
pdf-LUA_MULTRET	deps/lua/doc/manual.html	/^unless <code>nresults<\/code> is <a name="pdf-LUA_MULTRET"><code>LUA_MULTRET<\/code><\/a>.$/;"	a
pdf-LUA_NOREF	deps/lua/doc/manual.html	/^The constant <a name="pdf-LUA_NOREF"><code>LUA_NOREF<\/code><\/a> is guaranteed to be different$/;"	a
pdf-LUA_PATH	deps/lua/doc/manual.html	/^the value of the environment variable <a name="pdf-LUA_PATH"><code>LUA_PATH<\/code><\/a> or$/;"	a
pdf-LUA_REFNIL	deps/lua/doc/manual.html	/^<a href="#luaL_ref"><code>luaL_ref<\/code><\/a> returns the constant <a name="pdf-LUA_REFNIL"><code>LUA_REFNIL<\/code><\/a>.$/;"	a
pdf-LUA_REGISTRYINDEX	deps/lua/doc/manual.html	/^<a name="pdf-LUA_REGISTRYINDEX"><code>LUA_REGISTRYINDEX<\/code><\/a>.$/;"	a
pdf-LUA_YIELD	deps/lua/doc/manual.html	/^or <a name="pdf-LUA_YIELD"><code>LUA_YIELD<\/code><\/a> if the thread is suspended.$/;"	a
pdf-_G	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-_G"><code>_G<\/code><\/a><\/h3>$/;"	a
pdf-_PROMPT	deps/lua/doc/manual.html	/^If the global variable <a name="pdf-_PROMPT"><code>_PROMPT<\/code><\/a> contains a string,$/;"	a
pdf-_PROMPT2	deps/lua/doc/manual.html	/^Similarly, if the global variable <a name="pdf-_PROMPT2"><code>_PROMPT2<\/code><\/a> contains a string,$/;"	a
pdf-_VERSION	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-_VERSION"><code>_VERSION<\/code><\/a><\/h3>$/;"	a
pdf-assert	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-assert"><code>assert (v [, message])<\/code><\/a><\/h3>$/;"	a
pdf-collectgarbage	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-collectgarbage"><code>collectgarbage ([opt [, arg]])<\/code><\/a><\/h3>$/;"	a
pdf-coroutine	deps/lua/doc/manual.html	/^the basic library and come inside the table <a name="pdf-coroutine"><code>coroutine<\/code><\/a>.$/;"	a
pdf-coroutine.create	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.create"><code>coroutine.create (f)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.resume	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.resume"><code>coroutine.resume (co [, val1, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.running	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.running"><code>coroutine.running ()<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.status	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.status"><code>coroutine.status (co)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.wrap	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.wrap"><code>coroutine.wrap (f)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.yield	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.yield"><code>coroutine.yield (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-debug	deps/lua/doc/manual.html	/^inside the <a name="pdf-debug"><code>debug<\/code><\/a> table.$/;"	a
pdf-debug.debug	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.debug"><code>debug.debug ()<\/code><\/a><\/h3>$/;"	a
pdf-debug.getfenv	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getfenv"><code>debug.getfenv (o)<\/code><\/a><\/h3>$/;"	a
pdf-debug.gethook	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.gethook"><code>debug.gethook ([thread])<\/code><\/a><\/h3>$/;"	a
pdf-debug.getinfo	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getinfo"><code>debug.getinfo ([thread,] function [, what])<\/code><\/a><\/h3>$/;"	a
pdf-debug.getlocal	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getlocal"><code>debug.getlocal ([thread,] level, local)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getmetatable	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getmetatable"><code>debug.getmetatable (object)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getregistry	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getregistry"><code>debug.getregistry ()<\/code><\/a><\/h3>$/;"	a
pdf-debug.getupvalue	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getupvalue"><code>debug.getupvalue (func, up)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setfenv	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setfenv"><code>debug.setfenv (object, table)<\/code><\/a><\/h3>$/;"	a
pdf-debug.sethook	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.sethook"><code>debug.sethook ([thread,] hook, mask [, count])<\/code><\/a><\/h3>$/;"	a
pdf-debug.setlocal	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setlocal"><code>debug.setlocal ([thread,] level, local, value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setmetatable	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setmetatable"><code>debug.setmetatable (object, table)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setupvalue	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setupvalue"><code>debug.setupvalue (func, up, value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.traceback	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.traceback"><code>debug.traceback ([thread,] [message [, level]])<\/code><\/a><\/h3>$/;"	a
pdf-dofile	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-dofile"><code>dofile ([filename])<\/code><\/a><\/h3>$/;"	a
pdf-error	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-error"><code>error (message [, level])<\/code><\/a><\/h3>$/;"	a
pdf-file:close	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:close"><code>file:close ()<\/code><\/a><\/h3>$/;"	a
pdf-file:flush	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:flush"><code>file:flush ()<\/code><\/a><\/h3>$/;"	a
pdf-file:lines	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:lines"><code>file:lines ()<\/code><\/a><\/h3>$/;"	a
pdf-file:read	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:read"><code>file:read (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-file:seek	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:seek"><code>file:seek ([whence] [, offset])<\/code><\/a><\/h3>$/;"	a
pdf-file:setvbuf	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:setvbuf"><code>file:setvbuf (mode [, size])<\/code><\/a><\/h3>$/;"	a
pdf-file:write	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:write"><code>file:write (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-getfenv	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-getfenv"><code>getfenv ([f])<\/code><\/a><\/h3>$/;"	a
pdf-getmetatable	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-getmetatable"><code>getmetatable (object)<\/code><\/a><\/h3>$/;"	a
pdf-io	deps/lua/doc/manual.html	/^all operations are supplied by table <a name="pdf-io"><code>io<\/code><\/a>.$/;"	a
pdf-io.close	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.close"><code>io.close ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.flush	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.flush"><code>io.flush ()<\/code><\/a><\/h3>$/;"	a
pdf-io.input	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.input"><code>io.input ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.lines	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.lines"><code>io.lines ([filename])<\/code><\/a><\/h3>$/;"	a
pdf-io.open	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.open"><code>io.open (filename [, mode])<\/code><\/a><\/h3>$/;"	a
pdf-io.output	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.output"><code>io.output ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.popen	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.popen"><code>io.popen (prog [, mode])<\/code><\/a><\/h3>$/;"	a
pdf-io.read	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.read"><code>io.read (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-io.stdin	deps/lua/doc/manual.html	/^<a name="pdf-io.stdin"><code>io.stdin<\/code><\/a>, <a name="pdf-io.stdout"><code>io.stdout<\/code><\/a>, and <a name="pdf-io.stderr"><code>io.stderr<\/code><\/a>.$/;"	a
pdf-io.tmpfile	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.tmpfile"><code>io.tmpfile ()<\/code><\/a><\/h3>$/;"	a
pdf-io.type	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.type"><code>io.type (obj)<\/code><\/a><\/h3>$/;"	a
pdf-io.write	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.write"><code>io.write (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-ipairs	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-ipairs"><code>ipairs (t)<\/code><\/a><\/h3>$/;"	a
pdf-load	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-load"><code>load (func [, chunkname])<\/code><\/a><\/h3>$/;"	a
pdf-loadfile	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-loadfile"><code>loadfile ([filename])<\/code><\/a><\/h3>$/;"	a
pdf-loadstring	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-loadstring"><code>loadstring (string [, chunkname])<\/code><\/a><\/h3>$/;"	a
pdf-lua.h	deps/lua/doc/manual.html	/^are declared in the header file <a name="pdf-lua.h"><code>lua.h<\/code><\/a>.$/;"	a
pdf-luai_apicheck	deps/lua/doc/manual.html	/^with a proper definition for the macro <a name="pdf-luai_apicheck"><code>luai_apicheck<\/code><\/a>,$/;"	a
pdf-lualib.h	deps/lua/doc/manual.html	/^These functions are declared in <a name="pdf-lualib.h"><code>lualib.h<\/code><\/a>$/;"	a
pdf-luaopen_base	deps/lua/doc/manual.html	/^<a name="pdf-luaopen_base"><code>luaopen_base<\/code><\/a> (for the basic library),$/;"	a
pdf-luaopen_debug	deps/lua/doc/manual.html	/^and <a name="pdf-luaopen_debug"><code>luaopen_debug<\/code><\/a> (for the debug library).$/;"	a
pdf-luaopen_io	deps/lua/doc/manual.html	/^<a name="pdf-luaopen_io"><code>luaopen_io<\/code><\/a> (for the I\/O library),$/;"	a
pdf-luaopen_math	deps/lua/doc/manual.html	/^<a name="pdf-luaopen_math"><code>luaopen_math<\/code><\/a> (for the mathematical library),$/;"	a
pdf-luaopen_os	deps/lua/doc/manual.html	/^<a name="pdf-luaopen_os"><code>luaopen_os<\/code><\/a> (for the Operating System library),$/;"	a
pdf-luaopen_package	deps/lua/doc/manual.html	/^<a name="pdf-luaopen_package"><code>luaopen_package<\/code><\/a> (for the package library),$/;"	a
pdf-luaopen_string	deps/lua/doc/manual.html	/^<a name="pdf-luaopen_string"><code>luaopen_string<\/code><\/a> (for the string library),$/;"	a
pdf-luaopen_table	deps/lua/doc/manual.html	/^<a name="pdf-luaopen_table"><code>luaopen_table<\/code><\/a> (for the table library),$/;"	a
pdf-math	deps/lua/doc/manual.html	/^It provides all its functions inside the table <a name="pdf-math"><code>math<\/code><\/a>.$/;"	a
pdf-math.abs	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.abs"><code>math.abs (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.acos	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.acos"><code>math.acos (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.asin	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.asin"><code>math.asin (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.atan	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.atan"><code>math.atan (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.atan2	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.atan2"><code>math.atan2 (y, x)<\/code><\/a><\/h3>$/;"	a
pdf-math.ceil	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.ceil"><code>math.ceil (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.cos	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.cos"><code>math.cos (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.cosh	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.cosh"><code>math.cosh (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.deg	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.deg"><code>math.deg (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.exp	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.exp"><code>math.exp (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.floor	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.floor"><code>math.floor (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.fmod	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.fmod"><code>math.fmod (x, y)<\/code><\/a><\/h3>$/;"	a
pdf-math.frexp	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.frexp"><code>math.frexp (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.huge	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.huge"><code>math.huge<\/code><\/a><\/h3>$/;"	a
pdf-math.ldexp	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.ldexp"><code>math.ldexp (m, e)<\/code><\/a><\/h3>$/;"	a
pdf-math.log	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.log"><code>math.log (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.log10	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.log10"><code>math.log10 (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.max	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.max"><code>math.max (x, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-math.min	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.min"><code>math.min (x, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-math.modf	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.modf"><code>math.modf (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.pi	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.pi"><code>math.pi<\/code><\/a><\/h3>$/;"	a
pdf-math.pow	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.pow"><code>math.pow (x, y)<\/code><\/a><\/h3>$/;"	a
pdf-math.rad	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.rad"><code>math.rad (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.random	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.random"><code>math.random ([m [, n]])<\/code><\/a><\/h3>$/;"	a
pdf-math.randomseed	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.randomseed"><code>math.randomseed (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.sin	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.sin"><code>math.sin (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.sinh	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.sinh"><code>math.sinh (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.sqrt	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.sqrt"><code>math.sqrt (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.tan	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.tan"><code>math.tan (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.tanh	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.tanh"><code>math.tanh (x)<\/code><\/a><\/h3>$/;"	a
pdf-module	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-module"><code>module (name [, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-next	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-next"><code>next (table [, index])<\/code><\/a><\/h3>$/;"	a
pdf-os	deps/lua/doc/manual.html	/^This library is implemented through table <a name="pdf-os"><code>os<\/code><\/a>.$/;"	a
pdf-os.clock	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.clock"><code>os.clock ()<\/code><\/a><\/h3>$/;"	a
pdf-os.date	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.date"><code>os.date ([format [, time]])<\/code><\/a><\/h3>$/;"	a
pdf-os.difftime	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.difftime"><code>os.difftime (t2, t1)<\/code><\/a><\/h3>$/;"	a
pdf-os.execute	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.execute"><code>os.execute ([command])<\/code><\/a><\/h3>$/;"	a
pdf-os.exit	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.exit"><code>os.exit ([code])<\/code><\/a><\/h3>$/;"	a
pdf-os.getenv	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.getenv"><code>os.getenv (varname)<\/code><\/a><\/h3>$/;"	a
pdf-os.remove	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.remove"><code>os.remove (filename)<\/code><\/a><\/h3>$/;"	a
pdf-os.rename	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.rename"><code>os.rename (oldname, newname)<\/code><\/a><\/h3>$/;"	a
pdf-os.setlocale	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.setlocale"><code>os.setlocale (locale [, category])<\/code><\/a><\/h3>$/;"	a
pdf-os.time	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.time"><code>os.time ([table])<\/code><\/a><\/h3>$/;"	a
pdf-os.tmpname	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.tmpname"><code>os.tmpname ()<\/code><\/a><\/h3>$/;"	a
pdf-package	deps/lua/doc/manual.html	/^Everything else is exported in a table <a name="pdf-package"><code>package<\/code><\/a>.$/;"	a
pdf-package.cpath	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.cpath"><code>package.cpath<\/code><\/a><\/h3>$/;"	a
pdf-package.loaded	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.loaded"><code>package.loaded<\/code><\/a><\/h3>$/;"	a
pdf-package.loaders	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.loaders"><code>package.loaders<\/code><\/a><\/h3>$/;"	a
pdf-package.loadlib	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.loadlib"><code>package.loadlib (libname, funcname)<\/code><\/a><\/h3>$/;"	a
pdf-package.path	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.path"><code>package.path<\/code><\/a><\/h3>$/;"	a
pdf-package.preload	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.preload"><code>package.preload<\/code><\/a><\/h3>$/;"	a
pdf-package.seeall	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.seeall"><code>package.seeall (module)<\/code><\/a><\/h3>$/;"	a
pdf-pairs	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-pairs"><code>pairs (t)<\/code><\/a><\/h3>$/;"	a
pdf-pcall	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-pcall"><code>pcall (f, arg1, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-print	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-print"><code>print (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-rawequal	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-rawequal"><code>rawequal (v1, v2)<\/code><\/a><\/h3>$/;"	a
pdf-rawget	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-rawget"><code>rawget (table, index)<\/code><\/a><\/h3>$/;"	a
pdf-rawset	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-rawset"><code>rawset (table, index, value)<\/code><\/a><\/h3>$/;"	a
pdf-require	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-require"><code>require (modname)<\/code><\/a><\/h3>$/;"	a
pdf-select	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-select"><code>select (index, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-setfenv	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-setfenv"><code>setfenv (f, table)<\/code><\/a><\/h3>$/;"	a
pdf-setmetatable	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-setmetatable"><code>setmetatable (table, metatable)<\/code><\/a><\/h3>$/;"	a
pdf-string	deps/lua/doc/manual.html	/^<a name="pdf-string"><code>string<\/code><\/a>.$/;"	a
pdf-string.byte	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.byte"><code>string.byte (s [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-string.char	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.char"><code>string.char (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.dump	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.dump"><code>string.dump (function)<\/code><\/a><\/h3>$/;"	a
pdf-string.find	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.find"><code>string.find (s, pattern [, init [, plain]])<\/code><\/a><\/h3>$/;"	a
pdf-string.format	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.format"><code>string.format (formatstring, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.gmatch	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.gmatch"><code>string.gmatch (s, pattern)<\/code><\/a><\/h3>$/;"	a
pdf-string.gsub	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.gsub"><code>string.gsub (s, pattern, repl [, n])<\/code><\/a><\/h3>$/;"	a
pdf-string.len	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.len"><code>string.len (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.lower	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.lower"><code>string.lower (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.match	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.match"><code>string.match (s, pattern [, init])<\/code><\/a><\/h3>$/;"	a
pdf-string.rep	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.rep"><code>string.rep (s, n)<\/code><\/a><\/h3>$/;"	a
pdf-string.reverse	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.reverse"><code>string.reverse (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.sub	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.sub"><code>string.sub (s, i [, j])<\/code><\/a><\/h3>$/;"	a
pdf-string.upper	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.upper"><code>string.upper (s)<\/code><\/a><\/h3>$/;"	a
pdf-table	deps/lua/doc/manual.html	/^It provides all its functions inside the table <a name="pdf-table"><code>table<\/code><\/a>.$/;"	a
pdf-table.concat	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.concat"><code>table.concat (table [, sep [, i [, j]]])<\/code><\/a><\/h3>$/;"	a
pdf-table.insert	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.insert"><code>table.insert (table, [pos,] value)<\/code><\/a><\/h3>$/;"	a
pdf-table.maxn	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.maxn"><code>table.maxn (table)<\/code><\/a><\/h3>$/;"	a
pdf-table.remove	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.remove"><code>table.remove (table [, pos])<\/code><\/a><\/h3>$/;"	a
pdf-table.sort	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.sort"><code>table.sort (table [, comp])<\/code><\/a><\/h3>$/;"	a
pdf-tonumber	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-tonumber"><code>tonumber (e [, base])<\/code><\/a><\/h3>$/;"	a
pdf-tostring	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-tostring"><code>tostring (e)<\/code><\/a><\/h3>$/;"	a
pdf-type	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-type"><code>type (v)<\/code><\/a><\/h3>$/;"	a
pdf-unpack	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-unpack"><code>unpack (list [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-xpcall	deps/lua/doc/manual.html	/^<hr><h3><a name="pdf-xpcall"><code>xpcall (f, err)<\/code><\/a><\/h3>$/;"	a
pdirty	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	size_t			pdirty;$/;"	m	struct:ctl_arena_stats_s
pdll	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	PDLL_ENTRY(struct objfs_dir_entry) pdll; \/* list entry *\/$/;"	m	struct:objfs_dir_entry	file:
pe_first	deps/pmdk/src/libpmemobj/list.h	/^	PMEMoid pe_first;$/;"	m	struct:list_head
pe_first	src/server.h	/^	TOID(struct key_val_pair_PM) pe_first;$/;"	m	struct:redis_pmem_root
pe_next	deps/pmdk/src/libpmemobj/list.h	/^	PMEMoid pe_next;$/;"	m	struct:list_entry
pe_offset	deps/pmdk/src/libpmemobj/list.c	/^	ssize_t pe_offset;$/;"	m	struct:list_args_common	file:
pe_offset	deps/pmdk/src/libpmemobj/list.c	/^	ssize_t pe_offset;$/;"	m	struct:list_args_remove	file:
pe_prev	deps/pmdk/src/libpmemobj/list.h	/^	PMEMoid pe_prev;$/;"	m	struct:list_entry
peak_arenas	deps/pmdk/src/libpmemobj/recycler.c	/^	size_t *peak_arenas;$/;"	m	struct:recycler	file:
peerid	src/server.h	/^    sds peerid;             \/* Cached peer ID. *\/$/;"	m	struct:client
pending	src/redis-benchmark.c	/^    int pending;            \/* Number of pending requests (replies to consume) *\/$/;"	m	struct:_client	file:
pending_commands	src/sentinel.c	/^    int pending_commands;  \/* Number of commands sent waiting for a reply. *\/$/;"	m	struct:instanceLink	file:
pending_del_leaves	deps/pmdk/src/libpmemobj/critnib.c	/^	struct critnib_leaf *pending_del_leaves[DELETED_LIFE];$/;"	m	struct:critnib	typeref:struct:critnib::critnib_leaf	file:
pending_del_nodes	deps/pmdk/src/libpmemobj/critnib.c	/^	struct critnib_node *pending_del_nodes[DELETED_LIFE];$/;"	m	struct:critnib	typeref:struct:critnib::critnib_node	file:
pending_fds	src/ae_evport.c	/^    int     pending_fds[MAX_EVENT_BATCHSZ];     \/* pending fds *\/$/;"	m	struct:aeApiState	file:
pending_masks	src/ae_evport.c	/^    int     pending_masks[MAX_EVENT_BATCHSZ];   \/* pending fds' masks *\/$/;"	m	struct:aeApiState	file:
pep	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct fid_pep *pep;		\/* passive endpoint - listener *\/$/;"	m	struct:rpmemd_fip	typeref:struct:rpmemd_fip::fid_pep	file:
period	src/latency.h	/^    time_t period;          \/* Number of seconds since first event and now. *\/$/;"	m	struct:latencyStats
period_certification	deps/jemalloc/test/src/SFMT.c	/^static void period_certification(sfmt_t *ctx) {$/;"	f	file:
persist	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	bool persist;$/;"	m	struct:pmem_args	file:
persist	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	bool persist;      \/* perform persist operation *\/$/;"	m	struct:memset_args	file:
persist	deps/pmdk/src/libpmemobj/pmemops.h	/^	persist_fn persist;	\/* persist function *\/$/;"	m	struct:pmem_ops
persist	deps/pmdk/src/librpmem/rpmem_fip.c	/^	rpmem_fip_persist_fn persist;$/;"	m	struct:rpmem_fip_ops	file:
persist	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^	int (*persist)(const void *addr, size_t len);$/;"	m	struct:result	file:
persist	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	int (*persist)(const void *addr, size_t len);	\/* persist function *\/$/;"	m	struct:rpmemd_fip	file:
persist	deps/pmdk/src/tools/rpmemd/rpmemd_fip.h	/^	int (*persist)(const void *addr, size_t len);$/;"	m	struct:rpmemd_fip_attr
persistCommand	src/db.c	/^void persistCommand(client *c) {$/;"	f
persist_apm	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	/^	bool persist_apm;$/;"	m	struct:rpmemd_config
persist_empty	deps/pmdk/src/test/obj_memops/obj_memops.c	/^persist_empty(void *ctx, const void *addr, size_t len, unsigned flags)$/;"	f	file:
persist_fn	deps/pmdk/src/libpmemobj/pmemops.h	/^typedef int (*persist_fn)(void *base, const void *, size_t, unsigned);$/;"	t
persist_general	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	/^	bool persist_general;$/;"	m	struct:rpmemd_config
persist_local	deps/pmdk/src/libpmemobj/obj.h	/^	persist_local_fn persist_local;	\/* persist function *\/$/;"	m	struct:pmemobjpool
persist_local_fn	deps/pmdk/src/libpmemobj/obj.h	/^typedef void (*persist_local_fn)(const void *, size_t);$/;"	t
persist_method	deps/pmdk/src/librpmem/rpmem_fip.c	/^	enum rpmem_persist_method persist_method;$/;"	m	struct:rpmem_fip	typeref:enum:rpmem_fip::rpmem_persist_method	file:
persist_method	deps/pmdk/src/librpmem/rpmem_fip.h	/^	enum rpmem_persist_method persist_method;$/;"	m	struct:rpmem_fip_attr	typeref:enum:rpmem_fip_attr::rpmem_persist_method
persist_method	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	enum rpmem_persist_method persist_method;$/;"	m	struct:rpmem_resp_attr	typeref:enum:rpmem_resp_attr::rpmem_persist_method
persist_method	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t persist_method;	\/* persist method *\/$/;"	m	struct:rpmem_msg_ibc_attr
persist_method	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^	enum rpmem_persist_method persist_method;$/;"	m	struct:result	typeref:enum:result::rpmem_persist_method	file:
persist_method	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^	enum rpmem_persist_method persist_method;$/;"	m	struct:rpmemd	typeref:enum:rpmemd::rpmem_persist_method	file:
persist_method	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	enum rpmem_persist_method persist_method;$/;"	m	struct:rpmemd_fip	typeref:enum:rpmemd_fip::rpmem_persist_method	file:
persist_method	deps/pmdk/src/tools/rpmemd/rpmemd_fip.h	/^	enum rpmem_persist_method persist_method;$/;"	m	struct:rpmemd_fip_attr	typeref:enum:rpmemd_fip_attr::rpmem_persist_method
persist_normal	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^persist_normal(RPMEMpool *rpp, size_t off, size_t size, unsigned lane)$/;"	f	file:
persist_relaxed	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^persist_relaxed(RPMEMpool *rpp, size_t off, size_t size, unsigned lane)$/;"	f	file:
persist_remote	deps/pmdk/src/libpmemobj/obj.h	/^	persist_remote_fn persist_remote; \/* remote persist function *\/$/;"	m	struct:pmemobjpool
persist_remote_fn	deps/pmdk/src/libpmemobj/obj.h	/^typedef int (*persist_remote_fn)(PMEMobjpool *pop, const void *addr,$/;"	t
persistent	deps/pmdk/src/libpmemobj/stats.h	/^	struct stats_persistent *persistent;$/;"	m	struct:stats	typeref:struct:stats::stats_persistent
persistent	src/server.h	/^    bool persistent;                \/* Persistence enabled\/disabled *\/$/;"	m	struct:redisServer
pexpireCommand	src/db.c	/^void pexpireCommand(client *c) {$/;"	f
pexpireatCommand	src/db.c	/^void pexpireatCommand(client *c) {$/;"	f
pfaddCommand	src/hyperloglog.c	/^void pfaddCommand(client *c) {$/;"	f
pfcountCommand	src/hyperloglog.c	/^void pfcountCommand(client *c) {$/;"	f
pfdebugCommand	src/hyperloglog.c	/^void pfdebugCommand(client *c) {$/;"	f
pfile	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	struct pool_set_file *pfile;$/;"	m	struct:pmemspoil	typeref:struct:pmemspoil::pool_set_file	file:
pfile	deps/pmdk/src/tools/pmempool/check.c	/^	struct pool_set_file *pfile;$/;"	m	struct:pmempool_check_context	typeref:struct:pmempool_check_context::pool_set_file	file:
pfile	deps/pmdk/src/tools/pmempool/info.h	/^	struct pool_set_file *pfile;$/;"	m	struct:pmem_info	typeref:struct:pmem_info::pool_set_file
pfmergeCommand	src/hyperloglog.c	/^void pfmergeCommand(client *c) {$/;"	f
pfree	deps/pmdk/src/libpmemobj/pmalloc.c	/^pfree(PMEMobjpool *pop, uint64_t *off)$/;"	f
pfree	deps/pmdk/src/test/obj_list/mocks_windows.h	60;"	d
pfree_info	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^static struct benchmark_info pfree_info;$/;"	v	typeref:struct:benchmark_info	file:
pfree_init	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^pfree_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
pfree_op	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^pfree_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
pfselftestCommand	src/hyperloglog.c	/^void pfselftestCommand(client *c) {$/;"	f
pgraph_copy_delete	deps/pmdk/src/test/obj_defrag_advanced/pgraph.c	/^pgraph_copy_delete(PMEMoid *nodes, unsigned num)$/;"	f	file:
pgraph_copy_new	deps/pmdk/src/test/obj_defrag_advanced/pgraph.c	/^pgraph_copy_new(PMEMobjpool *pop, struct vgraph_t *vgraph, rng_t *rngp)$/;"	f	file:
pgraph_delete	deps/pmdk/src/test/obj_defrag_advanced/pgraph.c	/^pgraph_delete(PMEMoid *oidp)$/;"	f
pgraph_new	deps/pmdk/src/test/obj_defrag_advanced/pgraph.c	/^pgraph_new(PMEMobjpool *pop, PMEMoid *oidp, struct vgraph_t *vgraph,$/;"	f
pgraph_params	deps/pmdk/src/test/obj_defrag_advanced/pgraph.h	/^struct pgraph_params$/;"	s
pgraph_print	deps/pmdk/src/test/obj_defrag_advanced/pgraph.c	/^pgraph_print(struct pgraph_t *pgraph, const char *dump)$/;"	f
pgraph_size	deps/pmdk/src/test/obj_defrag_advanced/pgraph.c	/^pgraph_size(unsigned nodes_num)$/;"	f	file:
pgraph_t	deps/pmdk/src/test/obj_defrag_advanced/pgraph.h	/^struct pgraph_t$/;"	s
ph	deps/jemalloc/include/jemalloc/internal/ph.h	27;"	d
ph_gen	deps/jemalloc/include/jemalloc/internal/ph.h	206;"	d
ph_link	deps/jemalloc/include/jemalloc/internal/arena.h	/^	phn(arena_chunk_map_misc_t)		ph_link;$/;"	m	struct:arena_chunk_map_misc_s
ph_merge_aux	deps/jemalloc/include/jemalloc/internal/ph.h	167;"	d
ph_merge_children	deps/jemalloc/include/jemalloc/internal/ph.h	180;"	d
ph_merge_siblings	deps/jemalloc/include/jemalloc/internal/ph.h	82;"	d
ph_proto	deps/jemalloc/include/jemalloc/internal/ph.h	194;"	d
phn	deps/jemalloc/include/jemalloc/internal/ph.h	19;"	d
phn_lchild_get	deps/jemalloc/include/jemalloc/internal/ph.h	33;"	d
phn_lchild_set	deps/jemalloc/include/jemalloc/internal/ph.h	35;"	d
phn_merge	deps/jemalloc/include/jemalloc/internal/ph.h	66;"	d
phn_merge_ordered	deps/jemalloc/include/jemalloc/internal/ph.h	51;"	d
phn_next_get	deps/jemalloc/include/jemalloc/internal/ph.h	39;"	d
phn_next_set	deps/jemalloc/include/jemalloc/internal/ph.h	47;"	d
phn_prev_get	deps/jemalloc/include/jemalloc/internal/ph.h	45;"	d
phn_prev_set	deps/jemalloc/include/jemalloc/internal/ph.h	41;"	d
pi	deps/pmdk/src/examples/libpmemobj/pi.c	/^POBJ_LAYOUT_BEGIN(pi);$/;"	v
pi	deps/pmdk/src/examples/libpmemobj/pi.c	/^POBJ_LAYOUT_END(pi);$/;"	v
pi	deps/pmdk/src/examples/libpmemobj/pi.c	/^struct pi {$/;"	s	file:
pi_task	deps/pmdk/src/examples/libpmemobj/pi.c	/^struct pi_task {$/;"	s	file:
pi_task_construct	deps/pmdk/src/examples/libpmemobj/pi.c	/^pi_task_construct(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
pi_task_proto	deps/pmdk/src/examples/libpmemobj/pi.c	/^struct pi_task_proto {$/;"	s	file:
pick_col	deps/pmdk/src/test/unicode_api/TEST0	/^function pick_col {$/;"	f
pid	deps/pmdk/src/examples/libpmemlog/logfile/logentry.h	/^	int pid;$/;"	m	struct:logentry
pid	deps/pmdk/src/examples/libpmemlog/logfile/logentry.h	/^	pid_t pid;$/;"	m	struct:logentry
pid	deps/pmdk/src/librpmem/rpmem_cmd.h	/^	pid_t pid;	\/* pid of process *\/$/;"	m	struct:rpmem_cmd
pid	src/sentinel.c	/^    pid_t pid;              \/* Script execution pid. *\/$/;"	m	struct:sentinelScriptJob	file:
pid	src/server.h	/^    pid_t pid;                  \/* Main process pid. *\/$/;"	m	struct:redisServer
pidfile	src/server.h	/^    char *pidfile;              \/* PID file path *\/$/;"	m	struct:redisServer
pind2sz	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^pind2sz(pszind_t pind)$/;"	f
pind2sz	deps/jemalloc/include/jemalloc/internal/private_namespace.h	406;"	d
pind2sz	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	406;"	d
pind2sz_compute	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^pind2sz_compute(pszind_t pind)$/;"	f
pind2sz_compute	deps/jemalloc/include/jemalloc/internal/private_namespace.h	407;"	d
pind2sz_compute	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	407;"	d
pind2sz_lookup	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^pind2sz_lookup(pszind_t pind)$/;"	f
pind2sz_lookup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	408;"	d
pind2sz_lookup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	408;"	d
pind2sz_tab	deps/jemalloc/include/jemalloc/internal/private_namespace.h	409;"	d
pind2sz_tab	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	409;"	d
ping	src/cluster.h	/^    } ping;$/;"	m	union:clusterMsgData	typeref:struct:clusterMsgData::__anon173
pingCommand	src/server.c	/^void pingCommand(client *c) {$/;"	f
ping_sent	src/cluster.h	/^    mstime_t ping_sent;      \/* Unix time we sent latest ping *\/$/;"	m	struct:clusterNode
ping_sent	src/cluster.h	/^    uint32_t ping_sent;$/;"	m	struct:__anon169
ping_server	tests/support/server.tcl	/^proc ping_server {host port} {$/;"	p
pip	deps/pmdk/src/tools/pmempool/info_obj.c	/^	struct pmem_info *pip;$/;"	m	struct:info_obj_redo_args	typeref:struct:info_obj_redo_args::pmem_info	file:
pipeMode	src/redis-cli.c	/^static void pipeMode(void) {$/;"	f	file:
pipe_mode	src/redis-cli.c	/^    int pipe_mode;$/;"	m	struct:config	file:
pipe_timeout	src/redis-cli.c	/^    int pipe_timeout;$/;"	m	struct:config	file:
pipeline	src/redis-benchmark.c	/^    int pipeline;$/;"	m	struct:config	file:
pk_funcs	deps/lua/src/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
platform_capabilities	deps/pmdk/src/common/os_auto_flush_windows.h	/^struct platform_capabilities$/;"	s
platform_init	deps/pmdk/src/libpmem/ppc64/platform_generic.c	/^platform_init(struct pmem_funcs *funcs)$/;"	f
player	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^struct player {$/;"	s	file:
player	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	TOID(struct player) player;$/;"	m	struct:root	file:
player	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^struct player {$/;"	s	file:
plen	deps/linenoise/linenoise.c	/^    size_t plen;        \/* Prompt length. *\/$/;"	m	struct:linenoiseState	file:
plist	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	POBJ_LIST_ENTRY(struct dummy_node) plist;$/;"	m	struct:dummy_node	file:
plist	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	POBJ_LIST_ENTRY(struct dummy_node) plist;$/;"	m	struct:dummy_node_c	file:
plist_m	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	POBJ_LIST_ENTRY(struct dummy_node) plist_m;$/;"	m	struct:dummy_node	file:
plist_m	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	POBJ_LIST_ENTRY(struct dummy_node) plist_m;$/;"	m	struct:dummy_node_c	file:
plp	deps/pmdk/src/benchmarks/log.cpp	/^	PMEMlogpool *plp;       \/* pmemlog handle *\/$/;"	m	struct:log_bench	file:
plus	src/server.h	/^    *busykeyerr, *oomerr, *plus, *messagebulk, *pmessagebulk, *subscribebulk,$/;"	m	struct:sharedObjectsStruct
pm2str	deps/pmdk/src/rpmem_common/rpmem_common.c	/^static const char *pm2str[MAX_RPMEM_PM] = {$/;"	v	file:
pm_file_path	src/server.h	/^    char* pm_file_path;             \/* Path to persistent memory file *\/$/;"	m	struct:redisServer
pm_file_size	src/server.h	/^    size_t pm_file_size;            \/* If PM file does not exist, create new one with given size *\/$/;"	m	struct:redisServer
pm_mutex	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	PMEMmutex pm_mutex;$/;"	m	union:lock_union	file:
pm_pool	src/server.h	/^    PMEMobjpool *pm_pool;           \/* PMEM pool handle *\/$/;"	m	struct:redisServer
pm_reconstruct_required	src/server.h	/^    bool pm_reconstruct_required; \/* reconstruct database form PMEM *\/$/;"	m	struct:redisServer
pm_rootoid	src/server.h	/^    TOID(struct redis_pmem_root) pm_rootoid; \/*PMEM root object OID*\/$/;"	m	struct:redisServer
pm_rwlock	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	PMEMrwlock pm_rwlock;$/;"	m	union:lock_union	file:
pm_type_emb_sds_type_id	src/server.h	/^uint64_t pm_type_emb_sds_type_id;$/;"	v
pm_type_key_val_pair_PM	src/server.h	/^uint64_t pm_type_key_val_pair_PM;$/;"	v
pm_type_root_type_id	src/server.h	/^uint64_t pm_type_root_type_id;$/;"	v
pm_type_sds_type_id	src/server.h	/^uint64_t pm_type_sds_type_id;$/;"	v
pm_vmutex	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	PMEM_volatile_mutex pm_vmutex;$/;"	m	union:lock_union	file:
pmain	deps/lua/src/lua.c	/^static int pmain (lua_State *L) {$/;"	f	file:
pmain	deps/lua/src/luac.c	/^static int pmain(lua_State* L)$/;"	f	file:
pmalloc	deps/pmdk/src/libpmemobj/pmalloc.c	/^pmalloc(PMEMobjpool *pop, uint64_t *off, size_t size,$/;"	f
pmalloc	deps/pmdk/src/test/obj_list/mocks_windows.h	59;"	d
pmalloc_boot	deps/pmdk/src/libpmemobj/pmalloc.c	/^pmalloc_boot(PMEMobjpool *pop)$/;"	f
pmalloc_cleanup	deps/pmdk/src/libpmemobj/pmalloc.c	/^pmalloc_cleanup(PMEMobjpool *pop)$/;"	f
pmalloc_clo	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^static struct benchmark_clo pmalloc_clo[3];$/;"	v	typeref:struct:benchmark_clo	file:
pmalloc_construct	deps/pmdk/src/libpmemobj/pmalloc.c	/^pmalloc_construct(PMEMobjpool *pop, uint64_t *off, size_t size,$/;"	f
pmalloc_construct	deps/pmdk/src/test/obj_list/mocks_windows.h	61;"	d
pmalloc_ctl_register	deps/pmdk/src/libpmemobj/pmalloc.c	/^pmalloc_ctl_register(PMEMobjpool *pop)$/;"	f
pmalloc_exit	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^pmalloc_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
pmalloc_header_type_parser	deps/pmdk/src/libpmemobj/pmalloc.c	/^pmalloc_header_type_parser(const void *arg, void *dest, size_t dest_size)$/;"	f	file:
pmalloc_info	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^static struct benchmark_info pmalloc_info;$/;"	v	typeref:struct:benchmark_info	file:
pmalloc_init	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^pmalloc_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
pmalloc_layout	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^POBJ_LAYOUT_BEGIN(pmalloc_layout);$/;"	v
pmalloc_layout	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^POBJ_LAYOUT_END(pmalloc_layout);$/;"	v
pmalloc_op	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^pmalloc_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
pmalloc_operation_hold	deps/pmdk/src/libpmemobj/pmalloc.c	/^pmalloc_operation_hold(PMEMobjpool *pop)$/;"	f
pmalloc_operation_hold_no_start	deps/pmdk/src/libpmemobj/pmalloc.c	/^pmalloc_operation_hold_no_start(PMEMobjpool *pop)$/;"	f
pmalloc_operation_hold_type	deps/pmdk/src/libpmemobj/pmalloc.c	/^pmalloc_operation_hold_type(PMEMobjpool *pop, enum pmalloc_operation_type type,$/;"	f	file:
pmalloc_operation_release	deps/pmdk/src/libpmemobj/pmalloc.c	/^pmalloc_operation_release(PMEMobjpool *pop)$/;"	f
pmalloc_operation_type	deps/pmdk/src/libpmemobj/pmalloc.c	/^enum pmalloc_operation_type {$/;"	g	file:
pmalloc_redo_extend	deps/pmdk/src/test/obj_memops/obj_memops.c	/^pmalloc_redo_extend(void *base, uint64_t *redo, uint64_t gen_num)$/;"	f	file:
pmalloc_search_cb	deps/pmdk/src/libpmemobj/palloc.c	/^pmalloc_search_cb(const struct memory_block *m, void *arg)$/;"	f	file:
pmdk_use_attr_deprec_with_msg	deps/pmdk/src/include/libpmemobj/tx_base.h	104;"	d
pmdk_use_attr_deprec_with_msg	deps/pmdk/src/include/libpmemobj/tx_base.h	83;"	d
pmdk_use_attr_deprec_with_msg	deps/pmdk/src/include/libpmemobj/tx_base.h	88;"	d
pmdk_use_attr_deprec_with_msg	deps/pmdk/src/include/libpmemobj/tx_base.h	90;"	d
pmdk_use_attr_deprec_with_msg	deps/pmdk/src/include/libpmemobj/tx_base.h	97;"	d
pmdk_use_attr_deprec_with_msg	deps/pmdk/src/include/libpmemobj/tx_base.h	99;"	d
pmem	deps/pmdk/src/include/pmemcompat.h	/^namespace pmem {$/;"	n
pmem2_badblock	deps/pmdk/src/include/libpmem2.h	/^struct pmem2_badblock {$/;"	s
pmem2_badblock_clear	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_badblock_clear(const struct pmem2_config *cfg,$/;"	f
pmem2_badblock_iterator_delete	deps/pmdk/src/libpmem2/pmem2.c	/^void pmem2_badblock_iterator_delete($/;"	f
pmem2_badblock_iterator_new	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_badblock_iterator_new(const struct pmem2_config *cfg,$/;"	f
pmem2_badblock_next	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_badblock_next(struct pmem2_badblock_iterator *pbb,$/;"	f
pmem2_config	deps/pmdk/src/libpmem2/config.h	/^struct pmem2_config {$/;"	s
pmem2_config_delete	deps/pmdk/src/libpmem2/config.c	/^pmem2_config_delete(struct pmem2_config **cfg)$/;"	f
pmem2_config_new	deps/pmdk/src/libpmem2/config.c	/^pmem2_config_new(struct pmem2_config **cfg)$/;"	f
pmem2_config_set_address	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_config_set_address(struct pmem2_config *cfg, unsigned type, void *addr)$/;"	f
pmem2_config_set_fd	deps/pmdk/src/libpmem2/config_posix.c	/^pmem2_config_set_fd(struct pmem2_config *cfg, int fd)$/;"	f
pmem2_config_set_fd	deps/pmdk/src/libpmem2/config_windows.c	/^pmem2_config_set_fd(struct pmem2_config *cfg, int fd)$/;"	f
pmem2_config_set_handle	deps/pmdk/src/libpmem2/config_windows.c	/^pmem2_config_set_handle(struct pmem2_config *cfg, HANDLE handle)$/;"	f
pmem2_config_set_length	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_config_set_length(struct pmem2_config *cfg, size_t length)$/;"	f
pmem2_config_set_offset	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_config_set_offset(struct pmem2_config *cfg, size_t offset)$/;"	f
pmem2_config_set_protection	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_config_set_protection(struct pmem2_config *cfg, unsigned flag)$/;"	f
pmem2_config_set_required_store_granularity	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_config_set_required_store_granularity(struct pmem2_config *cfg,$/;"	f
pmem2_config_set_sharing	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_config_set_sharing(struct pmem2_config *cfg, unsigned type)$/;"	f
pmem2_config_use_anonymous_mapping	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_config_use_anonymous_mapping(struct pmem2_config *cfg, unsigned on)$/;"	f
pmem2_drain_fn	deps/pmdk/src/include/libpmem2.h	/^typedef void (*pmem2_drain_fn)(void);$/;"	t
pmem2_errormsg	deps/pmdk/src/include/libpmem2.h	54;"	d
pmem2_errormsg	deps/pmdk/src/include/libpmem2.h	57;"	d
pmem2_errormsg	deps/pmdk/src/libpmem2/libpmem2.c	/^pmem2_errormsg(void)$/;"	f
pmem2_errormsgU	deps/pmdk/src/libpmem2/libpmem2.c	/^pmem2_errormsgU(void)$/;"	f	file:
pmem2_errormsgW	deps/pmdk/src/libpmem2/libpmem2.c	/^pmem2_errormsgW(void)$/;"	f
pmem2_flush_fn	deps/pmdk/src/include/libpmem2.h	/^typedef void (*pmem2_flush_fn)(void *ptr, size_t size);$/;"	t
pmem2_get_device_id	deps/pmdk/src/include/libpmem2.h	53;"	d
pmem2_get_device_id	deps/pmdk/src/include/libpmem2.h	56;"	d
pmem2_get_device_id	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_get_device_id(const struct pmem2_config *cfg, char *id, size_t *len)$/;"	f
pmem2_get_device_idU	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_get_device_idU(const struct pmem2_config *cfg, char *id, size_t *len)$/;"	f
pmem2_get_device_idW	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_get_device_idW(const struct pmem2_config *cfg, wchar_t *id, size_t *len)$/;"	f
pmem2_get_device_usc	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_get_device_usc(const struct pmem2_config *cfg, uint64_t *usc)$/;"	f
pmem2_get_drain_fn	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_get_drain_fn(struct pmem2_map *map)$/;"	f
pmem2_get_flush_fn	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_get_flush_fn(struct pmem2_map *map)$/;"	f
pmem2_get_memcpy_fn	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_get_memcpy_fn(struct pmem2_map *map)$/;"	f
pmem2_get_memmove_fn	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_get_memmove_fn(struct pmem2_map *map)$/;"	f
pmem2_get_memset_fn	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_get_memset_fn(struct pmem2_map *map)$/;"	f
pmem2_get_persist_fn	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_get_persist_fn(struct pmem2_map *map)$/;"	f
pmem2_granularity	deps/pmdk/src/include/libpmem2.h	/^enum pmem2_granularity {$/;"	g
pmem2_malloc	deps/pmdk/src/libpmem2/pmem2_utils.c	/^pmem2_malloc(size_t size, int *err)$/;"	f
pmem2_map	deps/pmdk/src/libpmem2/map.h	/^struct pmem2_map {$/;"	s
pmem2_map	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_map(const struct pmem2_config *cfg, struct pmem2_map **map)$/;"	f
pmem2_map_get_address	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_map_get_address(struct pmem2_map *map)$/;"	f
pmem2_map_get_size	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_map_get_size(struct pmem2_map *map)$/;"	f
pmem2_map_get_store_granularity	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_map_get_store_granularity(struct pmem2_map *map)$/;"	f
pmem2_memcpy_fn	deps/pmdk/src/include/libpmem2.h	/^typedef void (*pmem2_memcpy_fn)(void *pmemdest, const void *src, size_t len,$/;"	t
pmem2_memmove_fn	deps/pmdk/src/include/libpmem2.h	/^typedef void (*pmem2_memmove_fn)(void *pmemdest, const void *src, size_t len,$/;"	t
pmem2_memset_fn	deps/pmdk/src/include/libpmem2.h	/^typedef void (*pmem2_memset_fn)(void *pmemdest, int c, size_t len,$/;"	t
pmem2_persist_fn	deps/pmdk/src/include/libpmem2.h	/^typedef void (*pmem2_persist_fn)(void *ptr, size_t size);$/;"	t
pmem2_unmap	deps/pmdk/src/libpmem2/pmem2.c	/^pmem2_unmap(struct pmem2_map **map)$/;"	f
pmemAddToPmemList	src/pmem.c	/^pmemAddToPmemList(void *key, void *val)$/;"	f
pmemKVpairSet	src/pmem.c	/^void pmemKVpairSet(void *key, void *val)$/;"	f
pmemReconstruct	src/pmem.c	/^pmemReconstruct(void)$/;"	f
pmemRemoveFromPmemList	src/pmem.c	/^pmemRemoveFromPmemList(PMEMoid kv_PM_oid)$/;"	f
pmem_addr	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	void *pmem_addr; \/* PMEM base address *\/$/;"	m	struct:pmem_bench	file:
pmem_addr	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	unsigned char *pmem_addr;$/;"	m	struct:pmem_bench	file:
pmem_addr	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	void *pmem_addr;	   \/* mapped file address *\/$/;"	m	struct:memset_bench	file:
pmem_addr_aligned	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	void *pmem_addr_aligned;     \/* PMEM pages - 2M aligned *\/$/;"	m	struct:pmem_bench	file:
pmem_allocation_type	deps/pmdk/src/common/fault_injection.h	/^enum pmem_allocation_type { PMEM_MALLOC, PMEM_REALLOC };$/;"	g
pmem_args	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^struct pmem_args {$/;"	s	file:
pmem_args	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^struct pmem_args {$/;"	s	file:
pmem_atomic_list_constructor	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^pmem_atomic_list_constructor(void)$/;"	f
pmem_bench	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^struct pmem_bench {$/;"	s	file:
pmem_bench	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^struct pmem_bench {$/;"	s	file:
pmem_blk_stats	deps/pmdk/src/tools/pmempool/info.h	/^struct pmem_blk_stats {$/;"	s
pmem_check_version	deps/pmdk/src/include/libpmem.h	53;"	d
pmem_check_version	deps/pmdk/src/include/libpmem.h	57;"	d
pmem_check_version	deps/pmdk/src/libpmem/libpmem.c	/^pmem_check_version(unsigned major_required, unsigned minor_required)$/;"	f
pmem_check_versionU	deps/pmdk/src/libpmem/libpmem.c	/^pmem_check_versionU(unsigned major_required, unsigned minor_required)$/;"	f	file:
pmem_check_versionW	deps/pmdk/src/libpmem/libpmem.c	/^pmem_check_versionW(unsigned major_required, unsigned minor_required)$/;"	f
pmem_clflushopt	deps/pmdk/src/libpmem/x86_64/flush.h	44;"	d
pmem_clflushopt	deps/pmdk/src/libpmem/x86_64/flush.h	52;"	d
pmem_clwb	deps/pmdk/src/libpmem/x86_64/flush.h	45;"	d
pmem_clwb	deps/pmdk/src/libpmem/x86_64/flush.h	55;"	d
pmem_context	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct pmem_context {$/;"	s
pmem_cpuinfo_to_funcs	deps/pmdk/src/libpmem/x86_64/init.c	/^pmem_cpuinfo_to_funcs(struct pmem_funcs *funcs, enum memcpy_impl *impl)$/;"	f	file:
pmem_ctx	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^    struct pmem_context *pmem_ctx;$/;"	m	struct:examine_ctx	typeref:struct:examine_ctx::pmem_context	file:
pmem_ctx	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^    struct pmem_context *pmem_ctx;$/;"	m	struct:search_ctx	typeref:struct:search_ctx::pmem_context	file:
pmem_deep_drain	deps/pmdk/src/libpmem/pmem.c	/^pmem_deep_drain(const void *addr, size_t len)$/;"	f
pmem_deep_flush	deps/pmdk/src/libpmem/pmem.c	/^pmem_deep_flush(const void *addr, size_t len)$/;"	f
pmem_deep_persist	deps/pmdk/src/libpmem/pmem.c	/^pmem_deep_persist(const void *addr, size_t len)$/;"	f
pmem_drain	deps/pmdk/src/libpmem/pmem.c	/^pmem_drain(void)$/;"	f
pmem_drain	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	49;"	d
pmem_drain_nop	deps/pmdk/src/test/obj_list/obj_list_mocks.c	/^pmem_drain_nop(void)$/;"	f	file:
pmem_emit_log	deps/pmdk/src/libpmem/pmem.c	/^pmem_emit_log(const char *func, int order)$/;"	f
pmem_errormsg	deps/pmdk/src/include/libpmem.h	54;"	d
pmem_errormsg	deps/pmdk/src/include/libpmem.h	58;"	d
pmem_errormsg	deps/pmdk/src/libpmem/libpmem.c	/^pmem_errormsg(void)$/;"	f
pmem_errormsgU	deps/pmdk/src/libpmem/libpmem.c	/^pmem_errormsgU(void)$/;"	f	file:
pmem_errormsgW	deps/pmdk/src/libpmem/libpmem.c	/^pmem_errormsgW(void)$/;"	f
pmem_fault_injection_enabled	deps/pmdk/src/libpmem/pmem.c	/^pmem_fault_injection_enabled(void)$/;"	f
pmem_fault_injection_enabled	deps/pmdk/src/libpmem/pmem.h	/^pmem_fault_injection_enabled(void)$/;"	f
pmem_flush	deps/pmdk/src/libpmem/pmem.c	/^pmem_flush(const void *addr, size_t len)$/;"	f
pmem_flush	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	48;"	d
pmem_flush_bench	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^static struct benchmark_info pmem_flush_bench;$/;"	v	typeref:struct:benchmark_info	file:
pmem_flush_clo	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^static struct benchmark_clo pmem_flush_clo[3];$/;"	v	typeref:struct:benchmark_clo	file:
pmem_flush_constructor	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^pmem_flush_constructor(void)$/;"	f
pmem_flush_exit	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^pmem_flush_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
pmem_flush_flags	deps/pmdk/src/libpmem/pmem.h	/^pmem_flush_flags(const void *addr, size_t len, unsigned flags)$/;"	f
pmem_flush_init	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^pmem_flush_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
pmem_flush_operation	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^pmem_flush_operation(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
pmem_funcs	deps/pmdk/src/libpmem/pmem.h	/^struct pmem_funcs {$/;"	s
pmem_has_auto_flush	deps/pmdk/src/libpmem/pmem.c	/^pmem_has_auto_flush()$/;"	f
pmem_has_hw_drain	deps/pmdk/src/libpmem/pmem.c	/^pmem_has_hw_drain(void)$/;"	f
pmem_info	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^	int pmem_info;$/;"	m	struct:pmem_obj	file:
pmem_info	deps/pmdk/src/tools/pmempool/info.h	/^struct pmem_info {$/;"	s
pmem_init	deps/pmdk/src/libpmem/pmem.c	/^pmem_init(void)$/;"	f
pmem_init_funcs	deps/pmdk/src/libpmem/aarch64/init.c	/^pmem_init_funcs(struct pmem_funcs *funcs)$/;"	f
pmem_init_funcs	deps/pmdk/src/libpmem/ppc64/init.c	/^pmem_init_funcs(struct pmem_funcs *funcs)$/;"	f
pmem_init_funcs	deps/pmdk/src/libpmem/x86_64/init.c	/^pmem_init_funcs(struct pmem_funcs *funcs)$/;"	f
pmem_inject_fault_at	deps/pmdk/src/libpmem/pmem.c	/^pmem_inject_fault_at(enum pmem_allocation_type type, int nth,$/;"	f
pmem_inject_fault_at	deps/pmdk/src/libpmem/pmem.h	/^pmem_inject_fault_at(enum pmem_allocation_type type, int nth,$/;"	f
pmem_is_pmem	deps/pmdk/src/libpmem/pmem.c	/^pmem_is_pmem(const void *addr, size_t len)$/;"	f
pmem_is_pmem	deps/pmdk/src/test/util_poolset/mocks_windows.h	55;"	d
pmem_is_pmem_force	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^static int pmem_is_pmem_force = 0;$/;"	v	file:
pmem_is_pmem_init	deps/pmdk/src/libpmem/pmem.c	/^pmem_is_pmem_init(void)$/;"	f	file:
pmem_len	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^	size_t pmem_len; \/* length of PMEM mapping *\/$/;"	m	struct:pmem_bench	file:
pmem_list_next	src/pmem.h	/^    TOID(struct key_val_pair_PM) pmem_list_next;$/;"	m	struct:key_val_pair_PM
pmem_list_prev	src/pmem.h	/^    TOID(struct key_val_pair_PM) pmem_list_prev;$/;"	m	struct:key_val_pair_PM
pmem_locks_constructor	deps/pmdk/src/benchmarks/obj_locks.cpp	/^pmem_locks_constructor(void)$/;"	f
pmem_map_file	deps/pmdk/src/include/libpmem.h	52;"	d
pmem_map_file	deps/pmdk/src/include/libpmem.h	56;"	d
pmem_map_file	deps/pmdk/src/libpmem/pmem.c	/^pmem_map_file(const char *path, size_t len, int flags,$/;"	f
pmem_map_fileU	deps/pmdk/src/libpmem/pmem.c	/^pmem_map_fileU(const char *path, size_t len, int flags,$/;"	f	file:
pmem_map_fileW	deps/pmdk/src/libpmem/pmem.c	/^pmem_map_fileW(const wchar_t *path, size_t len, int flags, mode_t mode,$/;"	f
pmem_map_register	deps/pmdk/src/libpmem/pmem_posix.c	/^pmem_map_register(int fd, size_t len, const char *path, int is_dev_dax)$/;"	f
pmem_map_register	deps/pmdk/src/libpmem/pmem_windows.c	/^pmem_map_register(int fd, size_t len, const char *path, int is_dev_dax)$/;"	f
pmem_map_type	deps/pmdk/src/common/mmap.h	/^enum pmem_map_type {$/;"	g
pmem_memcpy	deps/pmdk/src/libpmem/pmem.c	/^pmem_memcpy(void *pmemdest, const void *src, size_t len, unsigned flags)$/;"	f
pmem_memcpy	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	53;"	d
pmem_memcpy_bench	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^static struct benchmark_info pmem_memcpy_bench;$/;"	v	typeref:struct:benchmark_info	file:
pmem_memcpy_clo	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^static struct benchmark_clo pmem_memcpy_clo[8];$/;"	v	typeref:struct:benchmark_clo	file:
pmem_memcpy_constructor	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^pmem_memcpy_constructor(void)$/;"	f
pmem_memcpy_exit	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^pmem_memcpy_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
pmem_memcpy_fn	deps/pmdk/src/test/pmem_memcpy/pmem_memcpy.c	/^typedef void *pmem_memcpy_fn(void *pmemdest, const void *src, size_t len,$/;"	t	file:
pmem_memcpy_fn	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^typedef void *pmem_memcpy_fn(void *pmemdest, const void *src, size_t len,$/;"	t	file:
pmem_memcpy_init	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^pmem_memcpy_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
pmem_memcpy_nodrain	deps/pmdk/src/libpmem/pmem.c	/^pmem_memcpy_nodrain(void *pmemdest, const void *src, size_t len)$/;"	f
pmem_memcpy_nodrain	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	52;"	d
pmem_memcpy_nodrain_wrapper	deps/pmdk/src/test/pmem_memcpy/pmem_memcpy.c	/^pmem_memcpy_nodrain_wrapper(void *pmemdest, const void *src, size_t len,$/;"	f	file:
pmem_memcpy_nodrain_wrapper	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^pmem_memcpy_nodrain_wrapper(void *pmemdest, const void *src, size_t len,$/;"	f	file:
pmem_memcpy_operation	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^pmem_memcpy_operation(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
pmem_memcpy_persist	deps/pmdk/src/libpmem/pmem.c	/^pmem_memcpy_persist(void *pmemdest, const void *src, size_t len)$/;"	f
pmem_memcpy_persist	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	51;"	d
pmem_memcpy_persist_wrapper	deps/pmdk/src/test/pmem_memcpy/pmem_memcpy.c	/^pmem_memcpy_persist_wrapper(void *pmemdest, const void *src, size_t len,$/;"	f	file:
pmem_memcpy_persist_wrapper	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^pmem_memcpy_persist_wrapper(void *pmemdest, const void *src, size_t len,$/;"	f	file:
pmem_memmove	deps/pmdk/src/libpmem/pmem.c	/^pmem_memmove(void *pmemdest, const void *src, size_t len, unsigned flags)$/;"	f
pmem_memmove	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	56;"	d
pmem_memmove_fn	deps/pmdk/src/test/pmem_memmove/pmem_memmove.c	/^typedef void *pmem_memmove_fn(void *pmemdest, const void *src, size_t len,$/;"	t	file:
pmem_memmove_fn	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^typedef void *pmem_memmove_fn(void *pmemdest, const void *src, size_t len,$/;"	t	file:
pmem_memmove_nodrain	deps/pmdk/src/libpmem/pmem.c	/^pmem_memmove_nodrain(void *pmemdest, const void *src, size_t len)$/;"	f
pmem_memmove_nodrain	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	55;"	d
pmem_memmove_nodrain_wrapper	deps/pmdk/src/test/pmem_memmove/pmem_memmove.c	/^pmem_memmove_nodrain_wrapper(void *pmemdest, const void *src, size_t len,$/;"	f	file:
pmem_memmove_nodrain_wrapper	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^pmem_memmove_nodrain_wrapper(void *pmemdest, const void *src, size_t len,$/;"	f	file:
pmem_memmove_persist	deps/pmdk/src/libpmem/pmem.c	/^pmem_memmove_persist(void *pmemdest, const void *src, size_t len)$/;"	f
pmem_memmove_persist	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	54;"	d
pmem_memmove_persist_wrapper	deps/pmdk/src/test/pmem_memmove/pmem_memmove.c	/^pmem_memmove_persist_wrapper(void *pmemdest, const void *src, size_t len,$/;"	f	file:
pmem_memmove_persist_wrapper	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^pmem_memmove_persist_wrapper(void *pmemdest, const void *src, size_t len,$/;"	f	file:
pmem_memset	deps/pmdk/src/libpmem/pmem.c	/^pmem_memset(void *pmemdest, int c, size_t len, unsigned flags)$/;"	f
pmem_memset	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	59;"	d
pmem_memset_constructor	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^pmem_memset_constructor(void)$/;"	f
pmem_memset_fn	deps/pmdk/src/test/pmem_memset/pmem_memset.c	/^typedef void *pmem_memset_fn(void *pmemdest, int c, size_t len, unsigned flags);$/;"	t	file:
pmem_memset_fn	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^typedef void *pmem_memset_fn(void *pmemdest, int c, size_t len, unsigned flags);$/;"	t	file:
pmem_memset_nodrain	deps/pmdk/src/libpmem/pmem.c	/^pmem_memset_nodrain(void *pmemdest, int c, size_t len)$/;"	f
pmem_memset_nodrain	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	58;"	d
pmem_memset_nodrain_wrapper	deps/pmdk/src/test/pmem_memset/pmem_memset.c	/^pmem_memset_nodrain_wrapper(void *pmemdest, int c, size_t len, unsigned flags)$/;"	f	file:
pmem_memset_nodrain_wrapper	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^pmem_memset_nodrain_wrapper(void *pmemdest, int c, size_t len, unsigned flags)$/;"	f	file:
pmem_memset_persist	deps/pmdk/src/libpmem/pmem.c	/^pmem_memset_persist(void *pmemdest, int c, size_t len)$/;"	f
pmem_memset_persist	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	57;"	d
pmem_memset_persist_wrapper	deps/pmdk/src/test/pmem_memset/pmem_memset.c	/^pmem_memset_persist_wrapper(void *pmemdest, int c, size_t len, unsigned flags)$/;"	f	file:
pmem_memset_persist_wrapper	deps/pmdk/src/test/pmem_movnt_align/pmem_movnt_align.c	/^pmem_memset_persist_wrapper(void *pmemdest, int c, size_t len, unsigned flags)$/;"	f	file:
pmem_msync	deps/pmdk/src/libpmem/pmem.c	/^pmem_msync(const void *addr, size_t len)$/;"	f
pmem_msync	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	50;"	d
pmem_obj	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^struct pmem_obj {$/;"	s	file:
pmem_obj_class_stats	deps/pmdk/src/tools/pmempool/info.h	/^struct pmem_obj_class_stats {$/;"	s
pmem_obj_stats	deps/pmdk/src/tools/pmempool/info.h	/^struct pmem_obj_stats {$/;"	s
pmem_obj_stats_get_type	deps/pmdk/src/tools/pmempool/info_obj.c	/^pmem_obj_stats_get_type(struct pmem_obj_stats *stats, uint64_t type_num)$/;"	f	file:
pmem_obj_type_stats	deps/pmdk/src/tools/pmempool/info.h	/^struct pmem_obj_type_stats {$/;"	s
pmem_obj_zone_stats	deps/pmdk/src/tools/pmempool/info.h	/^struct pmem_obj_zone_stats {$/;"	s
pmem_ops	deps/pmdk/src/libpmemobj/pmemops.h	/^struct pmem_ops {$/;"	s
pmem_os_init	deps/pmdk/src/libpmem/pmem_posix.c	/^pmem_os_init(void)$/;"	f
pmem_os_init	deps/pmdk/src/libpmem/pmem_windows.c	/^pmem_os_init(void)$/;"	f
pmem_persist	deps/pmdk/src/libpmem/pmem.c	/^pmem_persist(const void *addr, size_t len)$/;"	f
pmem_persist	deps/pmdk/src/test/obj_persist_count/mocks_windows.h	47;"	d
pmem_pool_checksum	deps/pmdk/src/tools/pmempool/common.c	/^pmem_pool_checksum(const void *base_pool_addr)$/;"	f
pmem_pool_get_min_size	deps/pmdk/src/tools/pmempool/common.c	/^pmem_pool_get_min_size(pmem_pool_type_t type)$/;"	f
pmem_pool_params	deps/pmdk/src/tools/pmempool/common.h	/^struct pmem_pool_params {$/;"	s
pmem_pool_parse_params	deps/pmdk/src/tools/pmempool/common.c	/^pmem_pool_parse_params(const char *fname, struct pmem_pool_params *paramsp,$/;"	f
pmem_pool_type	deps/pmdk/src/tools/pmempool/common.c	/^pmem_pool_type(const void *base_pool_addr)$/;"	f
pmem_pool_type_parse_hdr	deps/pmdk/src/tools/pmempool/common.c	/^pmem_pool_type_parse_hdr(const struct pool_hdr *hdrp)$/;"	f
pmem_pool_type_parse_str	deps/pmdk/src/tools/pmempool/common.c	/^pmem_pool_type_parse_str(const char *str)$/;"	f
pmem_pool_type_t	deps/pmdk/src/tools/pmempool/common.h	/^} pmem_pool_type_t;$/;"	t	typeref:enum:__anon103
pmem_reserved	deps/pmdk/src/libpmemobj/obj.h	/^	char pmem_reserved[496]; \/* must be zeroed *\/$/;"	m	struct:pmemobjpool
pmem_root	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^struct pmem_root {$/;"	s	file:
pmem_unmap	deps/pmdk/src/libpmem/pmem.c	/^pmem_unmap(void *addr, size_t len)$/;"	f
pmembench	deps/pmdk/src/benchmarks/pmembench.cpp	/^struct pmembench {$/;"	s	file:
pmembench_clos	deps/pmdk/src/benchmarks/pmembench.cpp	/^static struct benchmark_clo pmembench_clos[13];$/;"	v	typeref:struct:benchmark_clo	file:
pmembench_constructor	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_constructor(void)$/;"	f
pmembench_free_benchmarks	deps/pmdk/src/benchmarks/pmembench.cpp	/^static void __attribute__((destructor)) pmembench_free_benchmarks(void)$/;"	f	file:
pmembench_get_bench	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_get_bench(const char *name)$/;"	f	file:
pmembench_get_info	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_get_info(struct benchmark *bench)$/;"	f
pmembench_get_priv	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_get_priv(struct benchmark *bench)$/;"	f
pmembench_init_workers	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_init_workers(struct benchmark_worker **workers,$/;"	f	file:
pmembench_lock_layout	deps/pmdk/src/benchmarks/obj_locks.cpp	/^POBJ_LAYOUT_BEGIN(pmembench_lock_layout);$/;"	v
pmembench_lock_layout	deps/pmdk/src/benchmarks/obj_locks.cpp	/^POBJ_LAYOUT_END(pmembench_lock_layout);$/;"	v
pmembench_merge_clos	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_merge_clos(struct benchmark *bench)$/;"	f	file:
pmembench_opts	deps/pmdk/src/benchmarks/pmembench.cpp	/^static struct benchmark_clo pmembench_opts[2];$/;"	v	typeref:struct:benchmark_clo	file:
pmembench_parse_affinity	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_parse_affinity(const char *list, char **saveptr)$/;"	f	file:
pmembench_parse_clo	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_parse_clo(struct pmembench *pb, struct benchmark *bench,$/;"	f	file:
pmembench_parse_opts	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_parse_opts(struct pmembench *pb)$/;"	f	file:
pmembench_print_args	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_print_args(struct benchmark_clo *clos, size_t nclos)$/;"	f	file:
pmembench_print_examples	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_print_examples()$/;"	f	file:
pmembench_print_header	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_print_header(struct pmembench *pb, struct benchmark *bench,$/;"	f	file:
pmembench_print_help	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_print_help()$/;"	f	file:
pmembench_print_help_single	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_print_help_single(struct benchmark *bench)$/;"	f	file:
pmembench_print_results	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_print_results(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
pmembench_print_usage	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_print_usage()$/;"	f	file:
pmembench_print_version	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_print_version()$/;"	f	file:
pmembench_register	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_register(struct benchmark_info *bench_info)$/;"	f
pmembench_release_clos	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_release_clos(struct benchmark *bench)$/;"	f	file:
pmembench_remove_file	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_remove_file(const char *path)$/;"	f	file:
pmembench_run	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_run(struct pmembench *pb, struct benchmark *bench)$/;"	f	file:
pmembench_run_config	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_run_config(struct pmembench *pb, const char *config)$/;"	f	file:
pmembench_run_scenario	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_run_scenario(struct pmembench *pb, struct scenario *scenario)$/;"	f	file:
pmembench_run_scenarios	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_run_scenarios(struct pmembench *pb, struct scenarios *ss)$/;"	f	file:
pmembench_run_worker	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_run_worker(struct benchmark *bench, struct worker_info *winfo)$/;"	f	file:
pmembench_set_priv	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_set_priv(struct benchmark *bench, void *priv)$/;"	f
pmembench_single_repeat	deps/pmdk/src/benchmarks/pmembench.cpp	/^pmembench_single_repeat(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
pmemblk	deps/pmdk/src/libpmemblk/blk.h	/^struct pmemblk {$/;"	s
pmemblk_bsize	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_bsize(PMEMblkpool *pbp)$/;"	f
pmemblk_check	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^pmemblk_check(const char *path, size_t bsize)$/;"	f
pmemblk_check	deps/pmdk/src/include/libpmemblk.h	54;"	d
pmemblk_check	deps/pmdk/src/include/libpmemblk.h	63;"	d
pmemblk_check	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_check(const char *path, size_t bsize)$/;"	f
pmemblk_checkU	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_checkU(const char *path, size_t bsize)$/;"	f	file:
pmemblk_checkW	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_checkW(const wchar_t *path, size_t bsize)$/;"	f
pmemblk_check_version	deps/pmdk/src/include/libpmemblk.h	55;"	d
pmemblk_check_version	deps/pmdk/src/include/libpmemblk.h	64;"	d
pmemblk_check_version	deps/pmdk/src/libpmemblk/libpmemblk.c	/^pmemblk_check_version(unsigned major_required, unsigned minor_required)$/;"	f
pmemblk_check_versionU	deps/pmdk/src/libpmemblk/libpmemblk.c	/^pmemblk_check_versionU(unsigned major_required, unsigned minor_required)$/;"	f	file:
pmemblk_check_versionW	deps/pmdk/src/libpmemblk/libpmemblk.c	/^pmemblk_check_versionW(unsigned major_required, unsigned minor_required)$/;"	f
pmemblk_close	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^pmemblk_close(PMEMblkpool *pbp)$/;"	f
pmemblk_close	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_close(PMEMblkpool *pbp)$/;"	f
pmemblk_create	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^pmemblk_create(const char *path, size_t bsize, size_t poolsize, mode_t mode)$/;"	f
pmemblk_create	deps/pmdk/src/include/libpmemblk.h	53;"	d
pmemblk_create	deps/pmdk/src/include/libpmemblk.h	62;"	d
pmemblk_create	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_create(const char *path, size_t bsize, size_t poolsize, mode_t mode)$/;"	f
pmemblk_createU	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_createU(const char *path, size_t bsize, size_t poolsize, mode_t mode)$/;"	f	file:
pmemblk_createW	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_createW(const wchar_t *path, size_t bsize, size_t poolsize,$/;"	f
pmemblk_ctl_exec	deps/pmdk/src/include/libpmemblk.h	59;"	d
pmemblk_ctl_exec	deps/pmdk/src/include/libpmemblk.h	68;"	d
pmemblk_ctl_exec	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_ctl_exec(PMEMblkpool *pbp, const char *name, void *arg)$/;"	f
pmemblk_ctl_execU	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_ctl_execU(PMEMblkpool *pbp, const char *name, void *arg)$/;"	f	file:
pmemblk_ctl_execW	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_ctl_execW(PMEMblkpool *pbp, const wchar_t *name, void *arg)$/;"	f
pmemblk_ctl_get	deps/pmdk/src/include/libpmemblk.h	57;"	d
pmemblk_ctl_get	deps/pmdk/src/include/libpmemblk.h	66;"	d
pmemblk_ctl_get	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_ctl_get(PMEMblkpool *pbp, const char *name, void *arg)$/;"	f
pmemblk_ctl_getU	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_ctl_getU(PMEMblkpool *pbp, const char *name, void *arg)$/;"	f	file:
pmemblk_ctl_getW	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_ctl_getW(PMEMblkpool *pbp, const wchar_t *name, void *arg)$/;"	f
pmemblk_ctl_set	deps/pmdk/src/include/libpmemblk.h	58;"	d
pmemblk_ctl_set	deps/pmdk/src/include/libpmemblk.h	67;"	d
pmemblk_ctl_set	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_ctl_set(PMEMblkpool *pbp, const char *name, void *arg)$/;"	f
pmemblk_ctl_setU	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_ctl_setU(PMEMblkpool *pbp, const char *name, void *arg)$/;"	f	file:
pmemblk_ctl_setW	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_ctl_setW(PMEMblkpool *pbp, const wchar_t *name, void *arg)$/;"	f
pmemblk_errormsg	deps/pmdk/src/include/libpmemblk.h	56;"	d
pmemblk_errormsg	deps/pmdk/src/include/libpmemblk.h	65;"	d
pmemblk_errormsg	deps/pmdk/src/libpmemblk/libpmemblk.c	/^pmemblk_errormsg(void)$/;"	f
pmemblk_errormsgU	deps/pmdk/src/libpmemblk/libpmemblk.c	/^pmemblk_errormsgU(void)$/;"	f	file:
pmemblk_errormsgW	deps/pmdk/src/libpmemblk/libpmemblk.c	/^pmemblk_errormsgW(void)$/;"	f
pmemblk_fault_injection_enabled	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_fault_injection_enabled(void)$/;"	f
pmemblk_fault_injection_enabled	deps/pmdk/src/libpmemblk/blk.h	/^pmemblk_fault_injection_enabled(void)$/;"	f
pmemblk_inject_fault_at	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_inject_fault_at(enum pmem_allocation_type type, int nth,$/;"	f
pmemblk_inject_fault_at	deps/pmdk/src/libpmemblk/blk.h	/^pmemblk_inject_fault_at(enum pmem_allocation_type type, int nth,$/;"	f
pmemblk_map	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^pmemblk_map(PMEMobjpool *pop, size_t bsize, size_t fsize)$/;"	f	file:
pmemblk_nblock	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^pmemblk_nblock(PMEMblkpool *pbp)$/;"	f
pmemblk_nblock	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_nblock(PMEMblkpool *pbp)$/;"	f
pmemblk_open	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^pmemblk_open(const char *path, size_t bsize)$/;"	f
pmemblk_open	deps/pmdk/src/include/libpmemblk.h	52;"	d
pmemblk_open	deps/pmdk/src/include/libpmemblk.h	61;"	d
pmemblk_open	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_open(const char *path, size_t bsize)$/;"	f
pmemblk_openU	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_openU(const char *path, size_t bsize)$/;"	f	file:
pmemblk_openW	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_openW(const wchar_t *path, size_t bsize)$/;"	f
pmemblk_read	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^pmemblk_read(PMEMblkpool *pbp, void *buf, long long blockno)$/;"	f
pmemblk_read	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_read(PMEMblkpool *pbp, void *buf, long long blockno)$/;"	f
pmemblk_set_error	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^pmemblk_set_error(PMEMblkpool *pbp, long long blockno)$/;"	f
pmemblk_set_error	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_set_error(PMEMblkpool *pbp, long long blockno)$/;"	f
pmemblk_set_funcs	deps/pmdk/src/libpmemblk/libpmemblk.c	/^pmemblk_set_funcs($/;"	f
pmemblk_set_zero	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^pmemblk_set_zero(PMEMblkpool *pbp, long long blockno)$/;"	f
pmemblk_set_zero	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_set_zero(PMEMblkpool *pbp, long long blockno)$/;"	f
pmemblk_write	deps/pmdk/src/examples/libpmemobj/pmemblk/obj_pmemblk.c	/^pmemblk_write(PMEMblkpool *pbp, const void *buf, long long blockno)$/;"	f
pmemblk_write	deps/pmdk/src/libpmemblk/blk.c	/^pmemblk_write(PMEMblkpool *pbp, const void *buf, long long blockno)$/;"	f
pmemcheck	deps/pmdk/src/test/obj_basic_integration/TESTS.py	/^    pmemcheck = t.ENABLE$/;"	v	class:TEST1
pmemcheck	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    pmemcheck = t.DISABLE$/;"	v	class:TEST5
pmemcheck	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    pmemcheck = t.DISABLE$/;"	v	class:BASE
pmemcheck	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    pmemcheck = vg.AUTO$/;"	v	class:TEST6
pmemcheck	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    pmemcheck = vg.AUTO$/;"	v	class:TEST8
pmemcheck	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    pmemcheck = t.DISABLE$/;"	v	class:TEST0
pmemcheck	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    pmemcheck = t.ENABLE$/;"	v	class:TEST1
pmemcheck	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^    pmemcheck = t.DISABLE$/;"	v	class:TEST0
pmemcheck	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^    pmemcheck = t.ENABLE$/;"	v	class:TEST1
pmemcheck	deps/pmdk/src/test/obj_ulog_size/TESTS.py	/^    pmemcheck = t.DISABLE$/;"	v	class:TEST0
pmemcheck	deps/pmdk/src/test/obj_ulog_size/TESTS.py	/^    pmemcheck = t.ENABLE$/;"	v	class:TEST2
pmemcond	deps/pmdk/src/libpmemobj/sync.h	/^	} pmemcond;$/;"	m	union:padded_pmemcond	typeref:struct:padded_pmemcond::__anon124
pmemdetect	deps/pmdk/src/test/RUNTESTS	/^pmemdetect() {$/;"	f
pmemdetect	deps/pmdk/src/test/unittest/tools.py	/^def pmemdetect(ctx, *args):$/;"	f
pmemlog	deps/pmdk/src/libpmemlog/log.h	/^struct pmemlog {$/;"	s
pmemlog_append	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^pmemlog_append(PMEMlogpool *plp, const void *buf, size_t count)$/;"	f
pmemlog_append	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^pmemlog_append(PMEMlogpool *plp, const void *buf, size_t count)$/;"	f
pmemlog_append	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^pmemlog_append(PMEMlogpool *plp, const void *buf, size_t count)$/;"	f
pmemlog_append	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^pmemlog_append(PMEMlogpool *plp, const void *buf, size_t count)$/;"	f
pmemlog_append	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_append(PMEMlogpool *plp, const void *buf, size_t count)$/;"	f
pmemlog_appendv	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^pmemlog_appendv(PMEMlogpool *plp, const struct iovec *iov, int iovcnt)$/;"	f
pmemlog_appendv	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^pmemlog_appendv(PMEMlogpool *plp, const struct iovec *iov, int iovcnt)$/;"	f
pmemlog_appendv	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^pmemlog_appendv(PMEMlogpool *plp, const struct iovec *iov, int iovcnt)$/;"	f
pmemlog_appendv	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^pmemlog_appendv(PMEMlogpool *plp, const struct iovec *iov, int iovcnt)$/;"	f
pmemlog_appendv	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_appendv(PMEMlogpool *plp, const struct iovec *iov, int iovcnt)$/;"	f
pmemlog_check	deps/pmdk/src/include/libpmemlog.h	54;"	d
pmemlog_check	deps/pmdk/src/include/libpmemlog.h	63;"	d
pmemlog_check	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_check(const char *path)$/;"	f
pmemlog_checkU	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_checkU(const char *path)$/;"	f	file:
pmemlog_checkW	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_checkW(const wchar_t *path)$/;"	f
pmemlog_check_version	deps/pmdk/src/include/libpmemlog.h	55;"	d
pmemlog_check_version	deps/pmdk/src/include/libpmemlog.h	64;"	d
pmemlog_check_version	deps/pmdk/src/libpmemlog/libpmemlog.c	/^pmemlog_check_version(unsigned major_required, unsigned minor_required)$/;"	f
pmemlog_check_versionU	deps/pmdk/src/libpmemlog/libpmemlog.c	/^pmemlog_check_versionU(unsigned major_required, unsigned minor_required)$/;"	f	file:
pmemlog_check_versionW	deps/pmdk/src/libpmemlog/libpmemlog.c	/^pmemlog_check_versionW(unsigned major_required, unsigned minor_required)$/;"	f
pmemlog_close	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^pmemlog_close(PMEMlogpool *plp)$/;"	f
pmemlog_close	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^pmemlog_close(PMEMlogpool *plp)$/;"	f
pmemlog_close	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^pmemlog_close(PMEMlogpool *plp)$/;"	f
pmemlog_close	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^pmemlog_close(PMEMlogpool *plp)$/;"	f
pmemlog_close	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_close(PMEMlogpool *plp)$/;"	f
pmemlog_create	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^pmemlog_create(const char *path, size_t poolsize, mode_t mode)$/;"	f
pmemlog_create	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^pmemlog_create(const char *path, size_t poolsize, mode_t mode)$/;"	f
pmemlog_create	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^pmemlog_create(const char *path, size_t poolsize, mode_t mode)$/;"	f
pmemlog_create	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^pmemlog_create(const char *path, size_t poolsize, mode_t mode)$/;"	f
pmemlog_create	deps/pmdk/src/include/libpmemlog.h	53;"	d
pmemlog_create	deps/pmdk/src/include/libpmemlog.h	62;"	d
pmemlog_create	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_create(const char *path, size_t poolsize, mode_t mode)$/;"	f
pmemlog_createU	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_createU(const char *path, size_t poolsize, mode_t mode)$/;"	f	file:
pmemlog_createW	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_createW(const wchar_t *path, size_t poolsize, mode_t mode)$/;"	f
pmemlog_ctl_exec	deps/pmdk/src/include/libpmemlog.h	59;"	d
pmemlog_ctl_exec	deps/pmdk/src/include/libpmemlog.h	68;"	d
pmemlog_ctl_exec	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_ctl_exec(PMEMlogpool *plp, const char *name, void *arg)$/;"	f
pmemlog_ctl_execU	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_ctl_execU(PMEMlogpool *plp, const char *name, void *arg)$/;"	f	file:
pmemlog_ctl_execW	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_ctl_execW(PMEMlogpool *plp, const wchar_t *name, void *arg)$/;"	f
pmemlog_ctl_get	deps/pmdk/src/include/libpmemlog.h	57;"	d
pmemlog_ctl_get	deps/pmdk/src/include/libpmemlog.h	66;"	d
pmemlog_ctl_get	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_ctl_get(PMEMlogpool *plp, const char *name, void *arg)$/;"	f
pmemlog_ctl_getU	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_ctl_getU(PMEMlogpool *plp, const char *name, void *arg)$/;"	f	file:
pmemlog_ctl_getW	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_ctl_getW(PMEMlogpool *plp, const wchar_t *name, void *arg)$/;"	f
pmemlog_ctl_set	deps/pmdk/src/include/libpmemlog.h	58;"	d
pmemlog_ctl_set	deps/pmdk/src/include/libpmemlog.h	67;"	d
pmemlog_ctl_set	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_ctl_set(PMEMlogpool *plp, const char *name, void *arg)$/;"	f
pmemlog_ctl_setU	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_ctl_setU(PMEMlogpool *plp, const char *name, void *arg)$/;"	f	file:
pmemlog_ctl_setW	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_ctl_setW(PMEMlogpool *plp, const wchar_t *name, void *arg)$/;"	f
pmemlog_errormsg	deps/pmdk/src/include/libpmemlog.h	56;"	d
pmemlog_errormsg	deps/pmdk/src/include/libpmemlog.h	65;"	d
pmemlog_errormsg	deps/pmdk/src/libpmemlog/libpmemlog.c	/^pmemlog_errormsg(void)$/;"	f
pmemlog_errormsgU	deps/pmdk/src/libpmemlog/libpmemlog.c	/^pmemlog_errormsgU(void)$/;"	f	file:
pmemlog_errormsgW	deps/pmdk/src/libpmemlog/libpmemlog.c	/^pmemlog_errormsgW(void)$/;"	f
pmemlog_fault_injection_enabled	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_fault_injection_enabled(void)$/;"	f
pmemlog_fault_injection_enabled	deps/pmdk/src/libpmemlog/log.h	/^pmemlog_fault_injection_enabled(void)$/;"	f
pmemlog_inject_fault_at	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_inject_fault_at(enum pmem_allocation_type type, int nth,$/;"	f
pmemlog_inject_fault_at	deps/pmdk/src/libpmemlog/log.h	/^pmemlog_inject_fault_at(enum pmem_allocation_type type, int nth,$/;"	f
pmemlog_map	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^pmemlog_map(PMEMobjpool *pop, size_t fsize)$/;"	f	file:
pmemlog_nbyte	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^pmemlog_nbyte(PMEMlogpool *plp)$/;"	f
pmemlog_nbyte	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^pmemlog_nbyte(PMEMlogpool *plp)$/;"	f
pmemlog_nbyte	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^pmemlog_nbyte(PMEMlogpool *plp)$/;"	f
pmemlog_nbyte	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^pmemlog_nbyte(PMEMlogpool *plp)$/;"	f
pmemlog_nbyte	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_nbyte(PMEMlogpool *plp)$/;"	f
pmemlog_open	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^pmemlog_open(const char *path)$/;"	f
pmemlog_open	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^pmemlog_open(const char *path)$/;"	f
pmemlog_open	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^pmemlog_open(const char *path)$/;"	f
pmemlog_open	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^pmemlog_open(const char *path)$/;"	f
pmemlog_open	deps/pmdk/src/include/libpmemlog.h	52;"	d
pmemlog_open	deps/pmdk/src/include/libpmemlog.h	61;"	d
pmemlog_open	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_open(const char *path)$/;"	f
pmemlog_openU	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_openU(const char *path)$/;"	f	file:
pmemlog_openW	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_openW(const wchar_t *path)$/;"	f
pmemlog_rewind	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^pmemlog_rewind(PMEMlogpool *plp)$/;"	f
pmemlog_rewind	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^pmemlog_rewind(PMEMlogpool *plp)$/;"	f
pmemlog_rewind	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^pmemlog_rewind(PMEMlogpool *plp)$/;"	f
pmemlog_rewind	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^pmemlog_rewind(PMEMlogpool *plp)$/;"	f
pmemlog_rewind	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_rewind(PMEMlogpool *plp)$/;"	f
pmemlog_set_funcs	deps/pmdk/src/libpmemlog/libpmemlog.c	/^pmemlog_set_funcs($/;"	f
pmemlog_tell	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^pmemlog_tell(PMEMlogpool *plp)$/;"	f
pmemlog_tell	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^pmemlog_tell(PMEMlogpool *plp)$/;"	f
pmemlog_tell	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^pmemlog_tell(PMEMlogpool *plp)$/;"	f
pmemlog_tell	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^pmemlog_tell(PMEMlogpool *plp)$/;"	f
pmemlog_tell	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_tell(PMEMlogpool *plp)$/;"	f
pmemlog_walk	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^pmemlog_walk(PMEMlogpool *plp, size_t chunksize,$/;"	f
pmemlog_walk	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^pmemlog_walk(PMEMlogpool *plp, size_t chunksize,$/;"	f
pmemlog_walk	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^pmemlog_walk(PMEMlogpool *plp, size_t chunksize,$/;"	f
pmemlog_walk	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^pmemlog_walk(PMEMlogpool *plp, size_t chunksize,$/;"	f
pmemlog_walk	deps/pmdk/src/libpmemlog/log.c	/^pmemlog_walk(PMEMlogpool *plp, size_t chunksize,$/;"	f
pmemmutex	deps/pmdk/src/libpmemobj/sync.h	/^	} pmemmutex;$/;"	m	union:padded_pmemmutex	typeref:struct:padded_pmemmutex::__anon118
pmemobj_alloc	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_alloc(PMEMobjpool *pop, PMEMoid *oidp, size_t size,$/;"	f
pmemobj_alloc	deps/pmdk/src/test/obj_list/mocks_windows.h	87;"	d
pmemobj_alloc_usable_size	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_alloc_usable_size(PMEMoid oid)$/;"	f
pmemobj_alloc_usable_size	deps/pmdk/src/test/obj_list/mocks_windows.h	88;"	d
pmemobj_cancel	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_cancel(PMEMobjpool *pop, struct pobj_action *actv, size_t actvcnt)$/;"	f
pmemobj_check	deps/pmdk/src/include/libpmemobj/pool_base.h	64;"	d
pmemobj_check	deps/pmdk/src/include/libpmemobj/pool_base.h	68;"	d
pmemobj_check	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_check(const char *path, const char *layout)$/;"	f
pmemobj_checkU	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_checkU(const char *path, const char *layout)$/;"	f	file:
pmemobj_checkW	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_checkW(const wchar_t *path, const wchar_t *layout)$/;"	f
pmemobj_check_version	deps/pmdk/src/include/libpmemobj/base.h	51;"	d
pmemobj_check_version	deps/pmdk/src/include/libpmemobj/base.h	54;"	d
pmemobj_check_version	deps/pmdk/src/libpmemobj/libpmemobj.c	/^pmemobj_check_version(unsigned major_required, unsigned minor_required)$/;"	f
pmemobj_check_versionU	deps/pmdk/src/libpmemobj/libpmemobj.c	/^pmemobj_check_versionU(unsigned major_required, unsigned minor_required)$/;"	f	file:
pmemobj_check_versionW	deps/pmdk/src/libpmemobj/libpmemobj.c	/^pmemobj_check_versionW(unsigned major_required, unsigned minor_required)$/;"	f
pmemobj_close	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_close(PMEMobjpool *pop)$/;"	f
pmemobj_close	deps/pmdk/src/test/obj_list/mocks_windows.h	90;"	d
pmemobj_cond_broadcast	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_cond_broadcast(PMEMobjpool *pop, PMEMcond *condp)$/;"	f
pmemobj_cond_signal	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_cond_signal(PMEMobjpool *pop, PMEMcond *condp)$/;"	f
pmemobj_cond_timedwait	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_cond_timedwait(PMEMobjpool *pop, PMEMcond *__restrict condp,$/;"	f
pmemobj_cond_wait	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_cond_wait(PMEMobjpool *pop, PMEMcond *condp,$/;"	f
pmemobj_cond_zero	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_cond_zero(PMEMobjpool *pop, PMEMcond *condp)$/;"	f
pmemobj_constr	deps/pmdk/src/include/libpmemobj/base.h	/^typedef int (*pmemobj_constr)(PMEMobjpool *pop, void *ptr, void *arg);$/;"	t
pmemobj_create	deps/pmdk/src/include/libpmemobj/pool_base.h	63;"	d
pmemobj_create	deps/pmdk/src/include/libpmemobj/pool_base.h	67;"	d
pmemobj_create	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_create(const char *path, const char *layout,$/;"	f
pmemobj_createU	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_createU(const char *path, const char *layout,$/;"	f	file:
pmemobj_createW	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_createW(const wchar_t *path, const wchar_t *layout, size_t poolsize,$/;"	f
pmemobj_ctl_exec	deps/pmdk/src/include/libpmemobj/ctl.h	192;"	d
pmemobj_ctl_exec	deps/pmdk/src/include/libpmemobj/ctl.h	196;"	d
pmemobj_ctl_exec	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_ctl_exec(PMEMobjpool *pop, const char *name, void *arg)$/;"	f
pmemobj_ctl_execU	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_ctl_execU(PMEMobjpool *pop, const char *name, void *arg)$/;"	f	file:
pmemobj_ctl_execW	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_ctl_execW(PMEMobjpool *pop, const wchar_t *name, void *arg)$/;"	f
pmemobj_ctl_get	deps/pmdk/src/include/libpmemobj/ctl.h	190;"	d
pmemobj_ctl_get	deps/pmdk/src/include/libpmemobj/ctl.h	194;"	d
pmemobj_ctl_get	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_ctl_get(PMEMobjpool *pop, const char *name, void *arg)$/;"	f
pmemobj_ctl_getU	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_ctl_getU(PMEMobjpool *pop, const char *name, void *arg)$/;"	f	file:
pmemobj_ctl_getW	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_ctl_getW(PMEMobjpool *pop, const wchar_t *name, void *arg)$/;"	f
pmemobj_ctl_set	deps/pmdk/src/include/libpmemobj/ctl.h	191;"	d
pmemobj_ctl_set	deps/pmdk/src/include/libpmemobj/ctl.h	195;"	d
pmemobj_ctl_set	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_ctl_set(PMEMobjpool *pop, const char *name, void *arg)$/;"	f
pmemobj_ctl_setU	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_ctl_setU(PMEMobjpool *pop, const char *name, void *arg)$/;"	f	file:
pmemobj_ctl_setW	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_ctl_setW(PMEMobjpool *pop, const wchar_t *name, void *arg)$/;"	f
pmemobj_defer_free	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_defer_free(PMEMobjpool *pop, PMEMoid oid, struct pobj_action *act)$/;"	f
pmemobj_defrag	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_defrag(PMEMobjpool *pop, PMEMoid **oidv, size_t oidcnt,$/;"	f
pmemobj_direct	deps/pmdk/src/include/libpmemobj/base.h	171;"	d
pmemobj_direct	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_direct(PMEMoid oid)$/;"	f
pmemobj_direct	deps/pmdk/src/test/obj_list/mocks_windows.h	91;"	d
pmemobj_direct_inline	deps/pmdk/src/include/libpmemobj/base.h	/^pmemobj_direct_inline(PMEMoid oid)$/;"	f
pmemobj_drain	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_drain(PMEMobjpool *pop)$/;"	f
pmemobj_ds_set_priv	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^pmemobj_ds_set_priv(struct datastore *ds, void *priv)$/;"	f
pmemobj_errormsg	deps/pmdk/src/include/libpmemobj/base.h	52;"	d
pmemobj_errormsg	deps/pmdk/src/include/libpmemobj/base.h	55;"	d
pmemobj_errormsg	deps/pmdk/src/libpmemobj/libpmemobj.c	/^pmemobj_errormsg(void)$/;"	f
pmemobj_errormsgU	deps/pmdk/src/libpmemobj/libpmemobj.c	/^pmemobj_errormsgU(void)$/;"	f	file:
pmemobj_errormsgW	deps/pmdk/src/libpmemobj/libpmemobj.c	/^pmemobj_errormsgW(void)$/;"	f
pmemobj_fault_injection_enabled	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_fault_injection_enabled(void)$/;"	f
pmemobj_fault_injection_enabled	deps/pmdk/src/libpmemobj/obj.h	/^pmemobj_fault_injection_enabled(void)$/;"	f
pmemobj_first	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_first(PMEMobjpool *pop)$/;"	f
pmemobj_flush	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_flush(PMEMobjpool *pop, const void *addr, size_t len)$/;"	f
pmemobj_free	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_free(PMEMoid *oidp)$/;"	f
pmemobj_gen_constructor	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^pmemobj_gen_constructor(void)$/;"	f
pmemobj_get_user_data	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_get_user_data(PMEMobjpool *pop)$/;"	f
pmemobj_get_uuid_lo	deps/pmdk/src/libpmemobj/obj.h	/^pmemobj_get_uuid_lo(PMEMobjpool *pop)$/;"	f
pmemobj_inject_fault_at	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_inject_fault_at(enum pmem_allocation_type type, int nth,$/;"	f
pmemobj_inject_fault_at	deps/pmdk/src/libpmemobj/obj.h	/^pmemobj_inject_fault_at(enum pmem_allocation_type type, int nth,$/;"	f
pmemobj_list_insert	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_list_insert(PMEMobjpool *pop, size_t pe_offset, void *head,$/;"	f
pmemobj_list_insert_new	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_list_insert_new(PMEMobjpool *pop, size_t pe_offset, void *head,$/;"	f
pmemobj_list_move	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_list_move(PMEMobjpool *pop, size_t pe_old_offset, void *head_old,$/;"	f
pmemobj_list_remove	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_list_remove(PMEMobjpool *pop, size_t pe_offset, void *head,$/;"	f
pmemobj_memcpy	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_memcpy(PMEMobjpool *pop, void *dest, const void *src, size_t len,$/;"	f
pmemobj_memcpy_persist	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_memcpy_persist(PMEMobjpool *pop, void *dest, const void *src,$/;"	f
pmemobj_memmove	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_memmove(PMEMobjpool *pop, void *dest, const void *src, size_t len,$/;"	f
pmemobj_memset	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_memset(PMEMobjpool *pop, void *dest, int c, size_t len, unsigned flags)$/;"	f
pmemobj_memset_persist	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_memset_persist(PMEMobjpool *pop, void *dest, int c, size_t len)$/;"	f
pmemobj_mutex_assert_locked	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_mutex_assert_locked(PMEMobjpool *pop, PMEMmutex *mutexp)$/;"	f
pmemobj_mutex_lock	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_mutex_lock(PMEMobjpool *pop, PMEMmutex *mutexp)$/;"	f
pmemobj_mutex_lock_nofail	deps/pmdk/src/libpmemobj/sync.h	/^pmemobj_mutex_lock_nofail(PMEMobjpool *pop, PMEMmutex *mutexp)$/;"	f
pmemobj_mutex_lock_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^pmemobj_mutex_lock_wrapper(PMEMobjpool *pop, void *lock)$/;"	f	file:
pmemobj_mutex_timedlock	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_mutex_timedlock(PMEMobjpool *pop, PMEMmutex *__restrict mutexp,$/;"	f
pmemobj_mutex_trylock	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_mutex_trylock(PMEMobjpool *pop, PMEMmutex *mutexp)$/;"	f
pmemobj_mutex_unlock	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_mutex_unlock(PMEMobjpool *pop, PMEMmutex *mutexp)$/;"	f
pmemobj_mutex_unlock_nofail	deps/pmdk/src/libpmemobj/sync.h	/^pmemobj_mutex_unlock_nofail(PMEMobjpool *pop, PMEMmutex *mutexp)$/;"	f
pmemobj_mutex_unlock_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^pmemobj_mutex_unlock_wrapper(PMEMobjpool *pop, void *lock)$/;"	f	file:
pmemobj_mutex_zero	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_mutex_zero(PMEMobjpool *pop, PMEMmutex *mutexp)$/;"	f
pmemobj_next	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_next(PMEMoid oid)$/;"	f
pmemobj_oid	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_oid(const void *addr)$/;"	f
pmemobj_open	deps/pmdk/src/include/libpmemobj/pool_base.h	62;"	d
pmemobj_open	deps/pmdk/src/include/libpmemobj/pool_base.h	66;"	d
pmemobj_open	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_open(const char *path, const char *layout)$/;"	f
pmemobj_openU	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_openU(const char *path, const char *layout)$/;"	f	file:
pmemobj_openU	deps/pmdk/src/test/obj_list/mocks_windows.h	89;"	d
pmemobj_openW	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_openW(const wchar_t *path, const wchar_t *layout)$/;"	f
pmemobj_persist	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_persist(PMEMobjpool *pop, const void *addr, size_t len)$/;"	f
pmemobj_persist_constructor	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^pmemobj_persist_constructor(void)$/;"	f
pmemobj_pool_by_oid	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_pool_by_oid(PMEMoid oid)$/;"	f
pmemobj_pool_by_oid	deps/pmdk/src/test/obj_list/mocks_windows.h	92;"	d
pmemobj_pool_by_ptr	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_pool_by_ptr(const void *addr)$/;"	f
pmemobj_pool_by_ptr	deps/pmdk/src/test/obj_list/mocks_windows.h	93;"	d
pmemobj_pool_by_ptr	deps/pmdk/src/test/obj_sync/obj_sync.c	/^pmemobj_pool_by_ptr(const void *arg)$/;"	f
pmemobj_publish	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_publish(PMEMobjpool *pop, struct pobj_action *actv, size_t actvcnt)$/;"	f
pmemobj_realloc	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_realloc(PMEMobjpool *pop, PMEMoid *oidp, size_t size,$/;"	f
pmemobj_reserve	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_reserve(PMEMobjpool *pop, struct pobj_action *act,$/;"	f
pmemobj_root	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_root(PMEMobjpool *pop, size_t size)$/;"	f
pmemobj_root_construct	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_root_construct(PMEMobjpool *pop, size_t size,$/;"	f
pmemobj_root_size	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_root_size(PMEMobjpool *pop)$/;"	f
pmemobj_rwlock_rdlock	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_rwlock_rdlock(PMEMobjpool *pop, PMEMrwlock *rwlockp)$/;"	f
pmemobj_rwlock_rdlock_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^pmemobj_rwlock_rdlock_wrapper(PMEMobjpool *pop, void *lock)$/;"	f	file:
pmemobj_rwlock_timedrdlock	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_rwlock_timedrdlock(PMEMobjpool *pop, PMEMrwlock *__restrict rwlockp,$/;"	f
pmemobj_rwlock_timedwrlock	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_rwlock_timedwrlock(PMEMobjpool *pop, PMEMrwlock *__restrict rwlockp,$/;"	f
pmemobj_rwlock_tryrdlock	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_rwlock_tryrdlock(PMEMobjpool *pop, PMEMrwlock *rwlockp)$/;"	f
pmemobj_rwlock_trywrlock	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_rwlock_trywrlock(PMEMobjpool *pop, PMEMrwlock *rwlockp)$/;"	f
pmemobj_rwlock_unlock	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_rwlock_unlock(PMEMobjpool *pop, PMEMrwlock *rwlockp)$/;"	f
pmemobj_rwlock_unlock_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^pmemobj_rwlock_unlock_wrapper(PMEMobjpool *pop, void *lock)$/;"	f	file:
pmemobj_rwlock_wrlock	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_rwlock_wrlock(PMEMobjpool *pop, PMEMrwlock *rwlockp)$/;"	f
pmemobj_rwlock_wrlock_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^pmemobj_rwlock_wrlock_wrapper(PMEMobjpool *pop, void *lock)$/;"	f	file:
pmemobj_rwlock_zero	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_rwlock_zero(PMEMobjpool *pop, PMEMrwlock *rwlockp)$/;"	f
pmemobj_set_funcs	deps/pmdk/src/libpmemobj/libpmemobj.c	/^pmemobj_set_funcs($/;"	f
pmemobj_set_user_data	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_set_user_data(PMEMobjpool *pop, void *data)$/;"	f
pmemobj_set_value	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_set_value(PMEMobjpool *pop, struct pobj_action *act,$/;"	f
pmemobj_strdup	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_strdup(PMEMobjpool *pop, PMEMoid *oidp, const char *s,$/;"	f
pmemobj_tx_abort	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_abort(int errnum)$/;"	f
pmemobj_tx_add_common	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_add_common(struct tx *tx, struct tx_range_def *args)$/;"	f	file:
pmemobj_tx_add_range	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_add_range(PMEMoid oid, uint64_t hoff, size_t size)$/;"	f
pmemobj_tx_add_range_direct	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_add_range_direct(const void *ptr, size_t size)$/;"	f
pmemobj_tx_add_snapshot	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_add_snapshot(struct tx *tx, struct tx_range_def *snapshot)$/;"	f	file:
pmemobj_tx_alloc	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_alloc(size_t size, uint64_t type_num)$/;"	f
pmemobj_tx_begin	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_begin(PMEMobjpool *pop, jmp_buf env, ...)$/;"	f
pmemobj_tx_callback	deps/pmdk/src/include/libpmemobj/tx_base.h	/^typedef void (*pmemobj_tx_callback)(PMEMobjpool *pop, enum pobj_tx_stage stage,$/;"	t
pmemobj_tx_commit	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_commit(void)$/;"	f
pmemobj_tx_constructor	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^pmemobj_tx_constructor(void)$/;"	f
pmemobj_tx_end	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_end(void)$/;"	f
pmemobj_tx_errno	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_errno(void)$/;"	f
pmemobj_tx_free	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_free(PMEMoid oid)$/;"	f
pmemobj_tx_get_user_data	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_get_user_data(void)$/;"	f
pmemobj_tx_lock	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_lock(enum pobj_tx_param type, void *lockp)$/;"	f
pmemobj_tx_log_append_buffer	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_log_append_buffer(enum pobj_log_type type, void *addr, size_t size)$/;"	f
pmemobj_tx_log_auto_alloc	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_log_auto_alloc(enum pobj_log_type type, int on_off)$/;"	f
pmemobj_tx_log_intents_max_size	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_log_intents_max_size(size_t nintents)$/;"	f
pmemobj_tx_log_snapshots_max_size	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_log_snapshots_max_size(size_t *sizes, size_t nsizes)$/;"	f
pmemobj_tx_merge_flags	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_merge_flags(struct tx_range_def *dest, struct tx_range_def *merged)$/;"	f	file:
pmemobj_tx_process	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_process(void)$/;"	f
pmemobj_tx_publish	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_publish(struct pobj_action *actv, size_t actvcnt)$/;"	f
pmemobj_tx_realloc	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_realloc(PMEMoid oid, size_t size, uint64_t type_num)$/;"	f
pmemobj_tx_set_user_data	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_set_user_data(void *data)$/;"	f
pmemobj_tx_stage	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_stage(void)$/;"	f
pmemobj_tx_strdup	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_strdup(const char *s, uint64_t type_num)$/;"	f
pmemobj_tx_wcsdup	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_wcsdup(const wchar_t *s, uint64_t type_num)$/;"	f
pmemobj_tx_xadd_range	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_xadd_range(PMEMoid oid, uint64_t hoff, size_t size, uint64_t flags)$/;"	f
pmemobj_tx_xadd_range_direct	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_xadd_range_direct(const void *ptr, size_t size, uint64_t flags)$/;"	f
pmemobj_tx_xalloc	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_xalloc(size_t size, uint64_t type_num, uint64_t flags)$/;"	f
pmemobj_tx_xfree	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_xfree(PMEMoid oid, uint64_t flags)$/;"	f
pmemobj_tx_xlock	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_xlock(enum pobj_tx_param type, void *lockp, uint64_t flags)$/;"	f
pmemobj_tx_xlog_append_buffer	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_xlog_append_buffer(enum pobj_log_type type, void *addr, size_t size,$/;"	f
pmemobj_tx_xpublish	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_xpublish(struct pobj_action *actv, size_t actvcnt, uint64_t flags)$/;"	f
pmemobj_tx_xstrdup	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_xstrdup(const char *s, uint64_t type_num, uint64_t flags)$/;"	f
pmemobj_tx_xwcsdup	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_xwcsdup(const wchar_t *s, uint64_t type_num, uint64_t flags)$/;"	f
pmemobj_tx_zalloc	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_zalloc(size_t size, uint64_t type_num)$/;"	f
pmemobj_tx_zrealloc	deps/pmdk/src/libpmemobj/tx.c	/^pmemobj_tx_zrealloc(PMEMoid oid, size_t size, uint64_t type_num)$/;"	f
pmemobj_type_num	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_type_num(PMEMoid oid)$/;"	f
pmemobj_volatile	deps/pmdk/src/libpmemobj/sync.c	/^pmemobj_volatile(PMEMobjpool *pop, struct pmemvlt *vlt,$/;"	f
pmemobj_wcsdup	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_wcsdup(PMEMobjpool *pop, PMEMoid *oidp, const wchar_t *s,$/;"	f
pmemobj_xalloc	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_xalloc(PMEMobjpool *pop, PMEMoid *oidp, size_t size,$/;"	f
pmemobj_xflush	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_xflush(PMEMobjpool *pop, const void *addr, size_t len, unsigned flags)$/;"	f
pmemobj_xpersist	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_xpersist(PMEMobjpool *pop, const void *addr, size_t len, unsigned flags)$/;"	f
pmemobj_xreserve	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_xreserve(PMEMobjpool *pop, struct pobj_action *act,$/;"	f
pmemobj_zalloc	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_zalloc(PMEMobjpool *pop, PMEMoid *oidp, size_t size,$/;"	f
pmemobj_zrealloc	deps/pmdk/src/libpmemobj/obj.c	/^pmemobj_zrealloc(PMEMobjpool *pop, PMEMoid *oidp, size_t size,$/;"	f
pmemobjfs	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^POBJ_LAYOUT_BEGIN(pmemobjfs);$/;"	v
pmemobjfs	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^POBJ_LAYOUT_END(pmemobjfs);$/;"	v
pmemobjfs	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^struct pmemobjfs {$/;"	s	file:
pmemobjfs_add_dir_entry	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_add_dir_entry(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_chmod	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_chmod(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode,$/;"	f	file:
pmemobjfs_chown	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_chown(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode,$/;"	f	file:
pmemobjfs_close	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_close(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_create	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_create(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode,$/;"	f	file:
pmemobjfs_dir_entry_alloc	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_dir_entry_alloc(struct pmemobjfs *objfs, const char *name,$/;"	f
pmemobjfs_dir_entry_free	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_dir_entry_free(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_fallocate	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fallocate(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_fuse_chmod	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_chmod(const char *path, mode_t mode)$/;"	f	file:
pmemobjfs_fuse_chown	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_chown(const char *path, uid_t uid, gid_t gid)$/;"	f	file:
pmemobjfs_fuse_create	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_create(const char *path, mode_t mode, struct fuse_file_info *fi)$/;"	f	file:
pmemobjfs_fuse_fallocate	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_fallocate(const char *path, int mode, off_t offset, off_t size,$/;"	f	file:
pmemobjfs_fuse_flush	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_flush(const char *path, struct fuse_file_info *fi)$/;"	f	file:
pmemobjfs_fuse_ftruncate	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_ftruncate(const char *path, off_t off, struct fuse_file_info *fi)$/;"	f	file:
pmemobjfs_fuse_getattr	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_getattr(const char *path, struct stat *statbuf)$/;"	f	file:
pmemobjfs_fuse_init	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_init(struct fuse_conn_info *conn)$/;"	f	file:
pmemobjfs_fuse_ioctl	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_ioctl(const char *path, int cmd, void *arg,$/;"	f	file:
pmemobjfs_fuse_mkdir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_mkdir(const char *path, mode_t mode)$/;"	f	file:
pmemobjfs_fuse_mknod	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_mknod(const char *path, mode_t mode, dev_t dev)$/;"	f	file:
pmemobjfs_fuse_open	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_open(const char *path, struct fuse_file_info *fi)$/;"	f	file:
pmemobjfs_fuse_opendir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_opendir(const char *path, struct fuse_file_info *fi)$/;"	f	file:
pmemobjfs_fuse_read	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_read(const char *path, char *buff, size_t size, off_t off,$/;"	f	file:
pmemobjfs_fuse_readdir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_readdir(const char *path, void *buff, fuse_fill_dir_t fill,$/;"	f	file:
pmemobjfs_fuse_readlink	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_readlink(const char *path, char *buff, size_t size)$/;"	f	file:
pmemobjfs_fuse_release	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_release(const char *path, struct fuse_file_info *fi)$/;"	f	file:
pmemobjfs_fuse_releasedir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_releasedir(const char *path, struct fuse_file_info *fi)$/;"	f	file:
pmemobjfs_fuse_rename	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_rename(const char *path, const char *dest)$/;"	f	file:
pmemobjfs_fuse_rmdir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_rmdir(const char *path)$/;"	f	file:
pmemobjfs_fuse_statvfs	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_statvfs(const char *path, struct statvfs *buff)$/;"	f	file:
pmemobjfs_fuse_symlink	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_symlink(const char *path, const char *link)$/;"	f	file:
pmemobjfs_fuse_truncate	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_truncate(const char *path, off_t off)$/;"	f	file:
pmemobjfs_fuse_unlink	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_unlink(const char *path)$/;"	f	file:
pmemobjfs_fuse_utimens	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_utimens(const char *path, const struct timespec tv[2])$/;"	f	file:
pmemobjfs_fuse_write	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_fuse_write(const char *path, const char *buff, size_t size,$/;"	f	file:
pmemobjfs_inode_alloc	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_inode_alloc(struct pmemobjfs *objfs, uint64_t flags,$/;"	f
pmemobjfs_inode_destroy_dir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_inode_destroy_dir(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_inode_destroy_file	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_inode_destroy_file(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_inode_destroy_symlink	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_inode_destroy_symlink(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_inode_free	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_inode_free(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode)$/;"	f	file:
pmemobjfs_inode_hold	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_inode_hold(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode)$/;"	f	file:
pmemobjfs_inode_init_dir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_inode_init_dir(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_inode_init_file	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_inode_init_file(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_inode_init_symlink	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_inode_init_symlink(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_inode_lookup	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_inode_lookup(struct pmemobjfs *objfs, const char *path,$/;"	f	file:
pmemobjfs_inode_lookup_parent	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_inode_lookup_parent(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_inode_put	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_inode_put(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode)$/;"	f	file:
pmemobjfs_ioctl	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_ioctl(struct pmemobjfs *objfs)$/;"	f	file:
pmemobjfs_mkdir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_mkdir(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode,$/;"	f	file:
pmemobjfs_mkfs	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_mkfs(const char *fname, size_t size, size_t bsize, mode_t mode)$/;"	f	file:
pmemobjfs_mkfs_main	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_mkfs_main(int argc, char *argv[])$/;"	f	file:
pmemobjfs_mknod	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_mknod(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode,$/;"	f	file:
pmemobjfs_new_dir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_new_dir(struct pmemobjfs *objfs, TOID(struct objfs_inode) parent,$/;"	f
pmemobjfs_open	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_open(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode)$/;"	f	file:
pmemobjfs_ops	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^static struct fuse_operations pmemobjfs_ops = {$/;"	v	typeref:struct:fuse_operations	file:
pmemobjfs_put_opened_cb	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_put_opened_cb(uint64_t key, PMEMoid value, void *arg)$/;"	f	file:
pmemobjfs_read	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_read(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode,$/;"	f	file:
pmemobjfs_remove_dir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_remove_dir(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_remove_dir_entry	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_remove_dir_entry(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_remove_dir_entry_name	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_remove_dir_entry_name(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_rename	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_rename(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_rmdir	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_rmdir(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode,$/;"	f	file:
pmemobjfs_symlink	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_symlink(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_truncate	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_truncate(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_tx_ioctl	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_tx_ioctl(const char *dir, int req)$/;"	f	file:
pmemobjfs_unlink	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_unlink(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode,$/;"	f	file:
pmemobjfs_unlink_dir_entry	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_unlink_dir_entry(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_utimens	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_utimens(struct pmemobjfs *objfs,$/;"	f	file:
pmemobjfs_write	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_write(struct pmemobjfs *objfs, TOID(struct objfs_inode) inode,$/;"	f	file:
pmemobjpool	deps/pmdk/src/libpmemobj/obj.h	/^struct pmemobjpool {$/;"	s
pmemoid	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^typedef struct pmemoid {$/;"	s
pmemoid	deps/pmdk/src/include/libpmemobj/base.h	/^typedef struct pmemoid {$/;"	s
pmemops_drain	deps/pmdk/src/libpmemobj/pmemops.h	/^pmemops_drain(const struct pmem_ops *p_ops)$/;"	f
pmemops_flush	deps/pmdk/src/libpmemobj/pmemops.h	/^pmemops_flush(const struct pmem_ops *p_ops, const void *d, size_t s)$/;"	f
pmemops_memcpy	deps/pmdk/src/libpmemobj/pmemops.h	/^pmemops_memcpy(const struct pmem_ops *p_ops, void *dest,$/;"	f
pmemops_memmove	deps/pmdk/src/libpmemobj/pmemops.h	/^pmemops_memmove(const struct pmem_ops *p_ops, void *dest,$/;"	f
pmemops_memset	deps/pmdk/src/libpmemobj/pmemops.h	/^pmemops_memset(const struct pmem_ops *p_ops, void *dest, int c,$/;"	f
pmemops_persist	deps/pmdk/src/libpmemobj/pmemops.h	/^pmemops_persist(const struct pmem_ops *p_ops, const void *d, size_t s)$/;"	f
pmemops_xflush	deps/pmdk/src/libpmemobj/pmemops.h	/^pmemops_xflush(const struct pmem_ops *p_ops, const void *d, size_t s,$/;"	f
pmemops_xpersist	deps/pmdk/src/libpmemobj/pmemops.h	/^pmemops_xpersist(const struct pmem_ops *p_ops, const void *d, size_t s,$/;"	f
pmempool_ask_yes_no	deps/pmdk/src/tools/pmempool/common.c	/^pmempool_ask_yes_no(char def_ans, const char *answers, const char *qbuff)$/;"	f	file:
pmempool_check	deps/pmdk/src/include/libpmempool.h	54;"	d
pmempool_check	deps/pmdk/src/include/libpmempool.h	68;"	d
pmempool_check	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_check(PMEMpoolcheck *ppc)$/;"	f
pmempool_checkU	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_checkU(PMEMpoolcheck *ppc)$/;"	f	file:
pmempool_checkW	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_checkW(PMEMpoolcheck *ppc)$/;"	f
pmempool_check_2_check_res_t	deps/pmdk/src/tools/pmempool/check.c	/^static check_result_t pmempool_check_2_check_res_t[] =$/;"	v	file:
pmempool_check_args	deps/pmdk/src/include/libpmempool.h	226;"	d
pmempool_check_args	deps/pmdk/src/include/libpmempool.h	51;"	d
pmempool_check_args	deps/pmdk/src/include/libpmempool.h	65;"	d
pmempool_check_argsU	deps/pmdk/src/include/libpmempool.h	/^struct pmempool_check_argsU {$/;"	s
pmempool_check_argsW	deps/pmdk/src/include/libpmempool.h	/^struct pmempool_check_argsW {$/;"	s
pmempool_check_args_1_0	deps/pmdk/src/test/libpmempool_api/libpmempool_test.c	/^struct pmempool_check_args_1_0 {$/;"	s	file:
pmempool_check_args_1_0	deps/pmdk/src/test/libpmempool_api_win/libpmempool_test_win.c	/^struct pmempool_check_args_1_0 {$/;"	s	file:
pmempool_check_context	deps/pmdk/src/tools/pmempool/check.c	/^struct pmempool_check_context {$/;"	s	file:
pmempool_check_ctx	deps/pmdk/src/libpmempool/pmempool.h	/^struct pmempool_check_ctx {$/;"	s
pmempool_check_default	deps/pmdk/src/tools/pmempool/check.c	/^static const struct pmempool_check_context pmempool_check_default = {$/;"	v	typeref:struct:pmempool_check_context	file:
pmempool_check_end	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_check_end(PMEMpoolcheck *ppc)$/;"	f
pmempool_check_func	deps/pmdk/src/tools/pmempool/check.c	/^pmempool_check_func(const char *appname, int argc, char *argv[])$/;"	f
pmempool_check_help	deps/pmdk/src/tools/pmempool/check.c	/^pmempool_check_help(const char *appname)$/;"	f
pmempool_check_init	deps/pmdk/src/include/libpmempool.h	53;"	d
pmempool_check_init	deps/pmdk/src/include/libpmempool.h	67;"	d
pmempool_check_init	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_check_init(struct pmempool_check_args *args, size_t args_size)$/;"	f
pmempool_check_initU	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_check_initU(struct pmempool_check_argsU *args, size_t args_size)$/;"	f	file:
pmempool_check_initW	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_check_initW(struct pmempool_check_argsW *args, size_t args_size)$/;"	f
pmempool_check_msg_type	deps/pmdk/src/include/libpmempool.h	/^enum pmempool_check_msg_type {$/;"	g
pmempool_check_parse_args	deps/pmdk/src/tools/pmempool/check.c	/^pmempool_check_parse_args(struct pmempool_check_context *pcp,$/;"	f	file:
pmempool_check_perform	deps/pmdk/src/tools/pmempool/check.c	/^pmempool_check_perform(struct pmempool_check_context *pc)$/;"	f	file:
pmempool_check_result	deps/pmdk/src/include/libpmempool.h	/^enum pmempool_check_result {$/;"	g
pmempool_check_sds	deps/pmdk/src/test/pmempool_check/common.sh	/^function pmempool_check_sds() {$/;"	f
pmempool_check_sds_init	deps/pmdk/src/test/pmempool_check/common.sh	/^function pmempool_check_sds_init() {$/;"	f
pmempool_check_status	deps/pmdk/src/include/libpmempool.h	204;"	d
pmempool_check_status	deps/pmdk/src/include/libpmempool.h	50;"	d
pmempool_check_status	deps/pmdk/src/include/libpmempool.h	64;"	d
pmempool_check_statusU	deps/pmdk/src/include/libpmempool.h	/^struct pmempool_check_statusU {$/;"	s
pmempool_check_statusW	deps/pmdk/src/include/libpmempool.h	/^struct pmempool_check_statusW {$/;"	s
pmempool_check_version	deps/pmdk/src/include/libpmempool.h	58;"	d
pmempool_check_version	deps/pmdk/src/include/libpmempool.h	72;"	d
pmempool_check_version	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_check_version(unsigned major_required, unsigned minor_required)$/;"	f
pmempool_check_versionU	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_check_versionU(unsigned major_required, unsigned minor_required)$/;"	f	file:
pmempool_check_versionW	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_check_versionW(unsigned major_required, unsigned minor_required)$/;"	f
pmempool_convert_func	deps/pmdk/src/tools/pmempool/convert.c	/^pmempool_convert_func(const char *appname, int argc, char *argv[])$/;"	f
pmempool_convert_get_path	deps/pmdk/src/tools/pmempool/convert.c	/^pmempool_convert_get_path(char *p, size_t max_len)$/;"	f	file:
pmempool_convert_help	deps/pmdk/src/tools/pmempool/convert.c	/^pmempool_convert_help(const char *appname)$/;"	f
pmempool_create	deps/pmdk/src/tools/pmempool/create.c	/^struct pmempool_create {$/;"	s	file:
pmempool_create_blk	deps/pmdk/src/tools/pmempool/create.c	/^pmempool_create_blk(struct pmempool_create *pcp)$/;"	f	file:
pmempool_create_default	deps/pmdk/src/tools/pmempool/create.c	/^static const struct pmempool_create pmempool_create_default = {$/;"	v	typeref:struct:pmempool_create	file:
pmempool_create_func	deps/pmdk/src/tools/pmempool/create.c	/^pmempool_create_func(const char *appname, int argc, char *argv[])$/;"	f
pmempool_create_help	deps/pmdk/src/tools/pmempool/create.c	/^pmempool_create_help(const char *appname)$/;"	f
pmempool_create_log	deps/pmdk/src/tools/pmempool/create.c	/^pmempool_create_log(struct pmempool_create *pcp)$/;"	f	file:
pmempool_create_obj	deps/pmdk/src/tools/pmempool/create.c	/^pmempool_create_obj(struct pmempool_create *pcp)$/;"	f	file:
pmempool_create_parse_args	deps/pmdk/src/tools/pmempool/create.c	/^pmempool_create_parse_args(struct pmempool_create *pcp, const char *appname,$/;"	f	file:
pmempool_dump	deps/pmdk/src/tools/pmempool/dump.c	/^struct pmempool_dump {$/;"	s	file:
pmempool_dump_blk	deps/pmdk/src/tools/pmempool/dump.c	/^pmempool_dump_blk(struct pmempool_dump *pdp)$/;"	f	file:
pmempool_dump_default	deps/pmdk/src/tools/pmempool/dump.c	/^static const struct pmempool_dump pmempool_dump_default = {$/;"	v	typeref:struct:pmempool_dump	file:
pmempool_dump_func	deps/pmdk/src/tools/pmempool/dump.c	/^pmempool_dump_func(const char *appname, int argc, char *argv[])$/;"	f
pmempool_dump_help	deps/pmdk/src/tools/pmempool/dump.c	/^pmempool_dump_help(const char *appname)$/;"	f
pmempool_dump_log	deps/pmdk/src/tools/pmempool/dump.c	/^pmempool_dump_log(struct pmempool_dump *pdp)$/;"	f	file:
pmempool_dump_log_process_chunk	deps/pmdk/src/tools/pmempool/dump.c	/^pmempool_dump_log_process_chunk(const void *buf, size_t len, void *arg)$/;"	f	file:
pmempool_dump_parse_range	deps/pmdk/src/tools/pmempool/dump.c	/^pmempool_dump_parse_range(struct pmempool_dump *pdp, size_t max)$/;"	f	file:
pmempool_errormsg	deps/pmdk/src/include/libpmempool.h	59;"	d
pmempool_errormsg	deps/pmdk/src/include/libpmempool.h	73;"	d
pmempool_errormsg	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_errormsg(void)$/;"	f
pmempool_errormsgU	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_errormsgU(void)$/;"	f	file:
pmempool_errormsgW	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_errormsgW(void)$/;"	f
pmempool_fault_injection_enabled	deps/pmdk/src/libpmempool/pool.c	/^pmempool_fault_injection_enabled(void)$/;"	f
pmempool_fault_injection_enabled	deps/pmdk/src/libpmempool/pool.h	/^pmempool_fault_injection_enabled(void)$/;"	f
pmempool_feature	deps/pmdk/src/include/libpmempool.h	/^enum pmempool_feature {$/;"	g
pmempool_feature_create_poolset	deps/pmdk/src/test/pmempool_feature/common.sh	/^function pmempool_feature_create_poolset() {$/;"	f
pmempool_feature_default	deps/pmdk/src/tools/pmempool/feature.c	/^static const struct feature_ctx pmempool_feature_default = {$/;"	v	typeref:struct:feature_ctx	file:
pmempool_feature_disable	deps/pmdk/src/include/libpmempool.h	61;"	d
pmempool_feature_disable	deps/pmdk/src/include/libpmempool.h	75;"	d
pmempool_feature_disable	deps/pmdk/src/libpmempool/feature.c	/^pmempool_feature_disable(const char *path, enum pmempool_feature feature,$/;"	f
pmempool_feature_disable	deps/pmdk/src/test/pmempool_feature/common.sh	/^function pmempool_feature_disable() {$/;"	f
pmempool_feature_disableU	deps/pmdk/src/libpmempool/feature.c	/^pmempool_feature_disableU(const char *path, enum pmempool_feature feature,$/;"	f	file:
pmempool_feature_disableW	deps/pmdk/src/libpmempool/feature.c	/^pmempool_feature_disableW(const wchar_t *path, enum pmempool_feature feature,$/;"	f
pmempool_feature_enable	deps/pmdk/src/include/libpmempool.h	60;"	d
pmempool_feature_enable	deps/pmdk/src/include/libpmempool.h	74;"	d
pmempool_feature_enable	deps/pmdk/src/libpmempool/feature.c	/^pmempool_feature_enable(const char *path, enum pmempool_feature feature,$/;"	f
pmempool_feature_enable	deps/pmdk/src/test/pmempool_feature/common.sh	/^function pmempool_feature_enable() {$/;"	f
pmempool_feature_enableU	deps/pmdk/src/libpmempool/feature.c	/^pmempool_feature_enableU(const char *path, enum pmempool_feature feature,$/;"	f	file:
pmempool_feature_enableW	deps/pmdk/src/libpmempool/feature.c	/^pmempool_feature_enableW(const wchar_t *path, enum pmempool_feature feature,$/;"	f
pmempool_feature_func	deps/pmdk/src/tools/pmempool/feature.c	/^pmempool_feature_func(const char *appname, int argc, char *argv[])$/;"	f
pmempool_feature_help	deps/pmdk/src/tools/pmempool/feature.c	/^pmempool_feature_help(const char *appname)$/;"	f
pmempool_feature_query	deps/pmdk/src/include/libpmempool.h	62;"	d
pmempool_feature_query	deps/pmdk/src/include/libpmempool.h	76;"	d
pmempool_feature_query	deps/pmdk/src/libpmempool/feature.c	/^pmempool_feature_query(const char *path, enum pmempool_feature feature,$/;"	f
pmempool_feature_query	deps/pmdk/src/test/pmempool_feature/common.sh	/^function pmempool_feature_query() {$/;"	f
pmempool_feature_queryU	deps/pmdk/src/libpmempool/feature.c	/^pmempool_feature_queryU(const char *path, enum pmempool_feature feature,$/;"	f	file:
pmempool_feature_queryW	deps/pmdk/src/libpmempool/feature.c	/^pmempool_feature_queryW(const wchar_t *path, enum pmempool_feature feature,$/;"	f
pmempool_feature_remote_init	deps/pmdk/src/test/pmempool_feature/common.sh	/^function pmempool_feature_remote_init() {$/;"	f
pmempool_feature_test_CHECK_BAD_BLOCKS	deps/pmdk/src/test/pmempool_feature/common.sh	/^function pmempool_feature_test_CHECK_BAD_BLOCKS() {$/;"	f
pmempool_feature_test_CKSUM_2K	deps/pmdk/src/test/pmempool_feature/common.sh	/^function pmempool_feature_test_CKSUM_2K() {$/;"	f
pmempool_feature_test_SHUTDOWN_STATE	deps/pmdk/src/test/pmempool_feature/common.sh	/^function pmempool_feature_test_SHUTDOWN_STATE() {$/;"	f
pmempool_feature_test_SINGLEHDR	deps/pmdk/src/test/pmempool_feature/common.sh	/^function pmempool_feature_test_SINGLEHDR() {$/;"	f
pmempool_feature_test_remote	deps/pmdk/src/test/pmempool_feature/common.sh	/^function pmempool_feature_test_remote() {$/;"	f
pmempool_get_max_size	deps/pmdk/src/tools/pmempool/create.c	/^pmempool_get_max_size(const char *fname, uint64_t *sizep)$/;"	f	file:
pmempool_info_alloc	deps/pmdk/src/tools/pmempool/info.c	/^pmempool_info_alloc(void)$/;"	f	file:
pmempool_info_args	deps/pmdk/src/tools/pmempool/info.h	/^struct pmempool_info_args {$/;"	s
pmempool_info_args_default	deps/pmdk/src/tools/pmempool/info.c	/^static const struct pmempool_info_args pmempool_info_args_default = {$/;"	v	typeref:struct:pmempool_info_args	file:
pmempool_info_badblocks	deps/pmdk/src/tools/pmempool/info.c	/^pmempool_info_badblocks(struct pmem_info *pip, const char *file_name, int v)$/;"	f	file:
pmempool_info_blk	deps/pmdk/src/tools/pmempool/info_blk.c	/^pmempool_info_blk(struct pmem_info *pip)$/;"	f
pmempool_info_btt	deps/pmdk/src/tools/pmempool/info_blk.c	/^pmempool_info_btt(struct pmem_info *pip)$/;"	f
pmempool_info_directory	deps/pmdk/src/tools/pmempool/info.c	/^pmempool_info_directory(struct pool_set_directory *d,$/;"	f	file:
pmempool_info_file	deps/pmdk/src/tools/pmempool/info.c	/^pmempool_info_file(struct pmem_info *pip, const char *file_name)$/;"	f	file:
pmempool_info_free	deps/pmdk/src/tools/pmempool/info.c	/^pmempool_info_free(struct pmem_info *pip)$/;"	f	file:
pmempool_info_func	deps/pmdk/src/tools/pmempool/info.c	/^pmempool_info_func(const char *appname, int argc, char *argv[])$/;"	f
pmempool_info_get_range	deps/pmdk/src/tools/pmempool/info_blk.c	/^pmempool_info_get_range(struct pmem_info *pip, struct range *rangep,$/;"	f	file:
pmempool_info_help	deps/pmdk/src/tools/pmempool/info.c	/^pmempool_info_help(const char *appname)$/;"	f
pmempool_info_log	deps/pmdk/src/tools/pmempool/info_log.c	/^pmempool_info_log(struct pmem_info *pip)$/;"	f
pmempool_info_obj	deps/pmdk/src/tools/pmempool/info_obj.c	/^pmempool_info_obj(struct pmem_info *pip)$/;"	f
pmempool_info_part	deps/pmdk/src/tools/pmempool/info.c	/^pmempool_info_part(struct pmem_info *pip, unsigned repn, unsigned partn, int v)$/;"	f	file:
pmempool_info_pool_hdr	deps/pmdk/src/tools/pmempool/info.c	/^pmempool_info_pool_hdr(struct pmem_info *pip, int v)$/;"	f	file:
pmempool_info_poolset	deps/pmdk/src/tools/pmempool/info.c	/^pmempool_info_poolset(struct pmem_info *pip, int v)$/;"	f	file:
pmempool_info_read	deps/pmdk/src/tools/pmempool/info.c	/^pmempool_info_read(struct pmem_info *pip, void *buff, size_t nbytes,$/;"	f
pmempool_info_replica	deps/pmdk/src/tools/pmempool/info.c	/^pmempool_info_replica(struct pmem_info *pip, unsigned repn, int v)$/;"	f	file:
pmempool_inject_fault_at	deps/pmdk/src/libpmempool/pool.c	/^pmempool_inject_fault_at(enum pmem_allocation_type type, int nth,$/;"	f
pmempool_inject_fault_at	deps/pmdk/src/libpmempool/pool.h	/^pmempool_inject_fault_at(enum pmem_allocation_type type, int nth,$/;"	f
pmempool_pool_type	deps/pmdk/src/include/libpmempool.h	/^enum pmempool_pool_type {$/;"	g
pmempool_ppc_set_default	deps/pmdk/src/libpmempool/libpmempool.c	/^pmempool_ppc_set_default(PMEMpoolcheck *ppc)$/;"	f	file:
pmempool_rm	deps/pmdk/src/include/libpmempool.h	57;"	d
pmempool_rm	deps/pmdk/src/include/libpmempool.h	71;"	d
pmempool_rm	deps/pmdk/src/libpmempool/rm.c	/^pmempool_rm(const char *path, unsigned flags)$/;"	f
pmempool_rmU	deps/pmdk/src/libpmempool/rm.c	/^pmempool_rmU(const char *path, unsigned flags)$/;"	f	file:
pmempool_rmW	deps/pmdk/src/libpmempool/rm.c	/^pmempool_rmW(const wchar_t *path, unsigned flags)$/;"	f
pmempool_rm_func	deps/pmdk/src/tools/pmempool/rm.c	/^pmempool_rm_func(const char *appname, int argc, char *argv[])$/;"	f
pmempool_rm_help	deps/pmdk/src/tools/pmempool/rm.c	/^pmempool_rm_help(const char *appname)$/;"	f
pmempool_sync	deps/pmdk/src/include/libpmempool.h	55;"	d
pmempool_sync	deps/pmdk/src/include/libpmempool.h	69;"	d
pmempool_sync	deps/pmdk/src/libpmempool/replica.c	/^pmempool_sync(const char *poolset, unsigned flags)$/;"	f
pmempool_syncU	deps/pmdk/src/libpmempool/replica.c	/^pmempool_syncU(const char *poolset, unsigned flags)$/;"	f	file:
pmempool_syncW	deps/pmdk/src/libpmempool/replica.c	/^pmempool_syncW(const wchar_t *poolset, unsigned flags)$/;"	f
pmempool_sync_context	deps/pmdk/src/tools/pmempool/synchronize.c	/^struct pmempool_sync_context {$/;"	s	file:
pmempool_sync_default	deps/pmdk/src/tools/pmempool/synchronize.c	/^static const struct pmempool_sync_context pmempool_sync_default = {$/;"	v	typeref:struct:pmempool_sync_context	file:
pmempool_sync_func	deps/pmdk/src/tools/pmempool/synchronize.c	/^pmempool_sync_func(const char *appname, int argc, char *argv[])$/;"	f
pmempool_sync_help	deps/pmdk/src/tools/pmempool/synchronize.c	/^pmempool_sync_help(const char *appname)$/;"	f
pmempool_sync_parse_args	deps/pmdk/src/tools/pmempool/synchronize.c	/^pmempool_sync_parse_args(struct pmempool_sync_context *ctx, const char *appname,$/;"	f	file:
pmempool_transform	deps/pmdk/src/include/libpmempool.h	56;"	d
pmempool_transform	deps/pmdk/src/include/libpmempool.h	70;"	d
pmempool_transform	deps/pmdk/src/libpmempool/replica.c	/^pmempool_transform(const char *poolset_src,$/;"	f
pmempool_transformU	deps/pmdk/src/libpmempool/replica.c	/^pmempool_transformU(const char *poolset_src,$/;"	f	file:
pmempool_transformW	deps/pmdk/src/libpmempool/replica.c	/^pmempool_transformW(const wchar_t *poolset_src,$/;"	f
pmempool_transform_context	deps/pmdk/src/tools/pmempool/transform.c	/^struct pmempool_transform_context {$/;"	s	file:
pmempool_transform_default	deps/pmdk/src/tools/pmempool/transform.c	/^static const struct pmempool_transform_context pmempool_transform_default = {$/;"	v	typeref:struct:pmempool_transform_context	file:
pmempool_transform_func	deps/pmdk/src/tools/pmempool/transform.c	/^pmempool_transform_func(const char *appname, int argc, char *argv[])$/;"	f
pmempool_transform_help	deps/pmdk/src/tools/pmempool/transform.c	/^pmempool_transform_help(const char *appname)$/;"	f
pmempool_transform_parse_args	deps/pmdk/src/tools/pmempool/transform.c	/^pmempool_transform_parse_args(struct pmempool_transform_context *ctx,$/;"	f	file:
pmemrwlock	deps/pmdk/src/libpmemobj/sync.h	/^	} pmemrwlock;$/;"	m	union:padded_pmemrwlock	typeref:struct:padded_pmemrwlock::__anon121
pmemspoil	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^struct pmemspoil {$/;"	s	file:
pmemspoil_check_field	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_check_field(struct pmemspoil_list *pfp, const char *fname)$/;"	f	file:
pmemspoil_corrupt_replica_sds	deps/pmdk/src/test/pmempool_check/common.sh	/^function pmemspoil_corrupt_replica_sds() {$/;"	f
pmemspoil_default	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^static const struct pmemspoil pmemspoil_default = {$/;"	v	typeref:struct:pmemspoil	file:
pmemspoil_free_fields	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_free_fields(struct pmemspoil_list *fieldp)$/;"	f	file:
pmemspoil_get_arena_offset	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_get_arena_offset(struct pmemspoil *psp, uint32_t id,$/;"	f	file:
pmemspoil_help	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_help(char *appname)$/;"	f	file:
pmemspoil_insert_field	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_insert_field(struct pmemspoil_list *listp, struct field *fieldp)$/;"	f	file:
pmemspoil_list	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^struct pmemspoil_list {$/;"	s	file:
pmemspoil_next_field	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_next_field(struct pmemspoil_list *pfp)$/;"	f	file:
pmemspoil_parse_args	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_parse_args(struct pmemspoil *psp, char *appname,$/;"	f	file:
pmemspoil_parse_field	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_parse_field(char *str, struct field *fieldp)$/;"	f	file:
pmemspoil_parse_fields	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_parse_fields(char *str, struct pmemspoil_list *listp)$/;"	f	file:
pmemspoil_persist	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_persist(void *addr, size_t size)$/;"	f	file:
pmemspoil_process	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_arena	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_arena(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_btt_flog	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_btt_flog(struct pmemspoil *psp, struct pmemspoil_list *pfp,$/;"	f	file:
pmemspoil_process_btt_flog_prime	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_btt_flog_prime(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_btt_info	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_btt_info(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_btt_info_backup	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_btt_info_backup(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_btt_info_struct	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_btt_info_struct(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_btt_map	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_btt_map(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_btt_nflog	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_btt_nflog(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_bttdevice	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_bttdevice(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_char	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_char(struct pmemspoil *psp, struct pmemspoil_list *pfp,$/;"	f	file:
pmemspoil_process_checksum_gen	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_checksum_gen(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_chunk	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_chunk(struct pmemspoil *psp, struct pmemspoil_list *pfp,$/;"	f	file:
pmemspoil_process_chunk_type_t	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_chunk_type_t(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_features	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_features(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_heap	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_heap(struct pmemspoil *psp, struct pmemspoil_list *pfp,$/;"	f	file:
pmemspoil_process_lane	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_lane(struct pmemspoil *psp, struct pmemspoil_list *pfp,$/;"	f	file:
pmemspoil_process_pmemblk	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_pmemblk(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_pmemlog	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_pmemlog(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_pmemobj	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_pmemobj(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_pool_hdr	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_pool_hdr(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_run	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_run(struct pmemspoil *psp, struct pmemspoil_list *pfp,$/;"	f	file:
pmemspoil_process_shutdown_state	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_shutdown_state(struct pmemspoil *psp,$/;"	f	file:
pmemspoil_process_uint16_t	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_uint16_t(struct pmemspoil *psp, struct pmemspoil_list *pfp,$/;"	f	file:
pmemspoil_process_uint32_t	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_uint32_t(struct pmemspoil *psp, struct pmemspoil_list *pfp,$/;"	f	file:
pmemspoil_process_uint64_t	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_uint64_t(struct pmemspoil *psp, struct pmemspoil_list *pfp,$/;"	f	file:
pmemspoil_process_uint8_t	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_uint8_t(struct pmemspoil *psp, struct pmemspoil_list *pfp,$/;"	f	file:
pmemspoil_process_zone	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_process_zone(struct pmemspoil *psp, struct pmemspoil_list *pfp,$/;"	f	file:
pmemspoil_read	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_read(struct pmemspoil *psp, void *buff, size_t nbytes, uint64_t off)$/;"	f	file:
pmemspoil_write	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^pmemspoil_write(struct pmemspoil *psp, void *buff, size_t nbytes, uint64_t off)$/;"	f	file:
pmemvlt	deps/pmdk/src/include/libpmemobj/base.h	/^struct pmemvlt {$/;"	s
pmemwrite	deps/pmdk/src/test/tools/pmemwrite/write.c	/^static struct pmemwrite pmemwrite = {$/;"	v	typeref:struct:pmemwrite	file:
pmemwrite	deps/pmdk/src/test/tools/pmemwrite/write.c	/^struct pmemwrite$/;"	s	file:
pmemwrite_blk	deps/pmdk/src/test/tools/pmemwrite/write.c	/^pmemwrite_blk(struct pmemwrite *pwp)$/;"	f	file:
pmemwrite_log	deps/pmdk/src/test/tools/pmemwrite/write.c	/^pmemwrite_log(struct pmemwrite *pwp)$/;"	f	file:
pmessagebulk	src/server.h	/^    *busykeyerr, *oomerr, *plus, *messagebulk, *pmessagebulk, *subscribebulk,$/;"	m	struct:sharedObjectsStruct
pminvaders	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^POBJ_LAYOUT_BEGIN(pminvaders);$/;"	v
pminvaders	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^POBJ_LAYOUT_END(pminvaders);$/;"	v
pminvaders2	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^POBJ_LAYOUT_BEGIN(pminvaders2);$/;"	v
pminvaders2	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^POBJ_LAYOUT_END(pminvaders2);$/;"	v
pmix_info	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^static struct benchmark_info pmix_info;$/;"	v	typeref:struct:benchmark_info	file:
pmix_op	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^pmix_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
pmix_worker	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^struct pmix_worker {$/;"	s	file:
pmix_worker_fini	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^pmix_worker_fini(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
pmix_worker_init	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^pmix_worker_init(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
pmreorder_create_store_log	deps/pmdk/src/test/unittest/unittest.sh	/^function pmreorder_create_store_log()$/;"	f
pmreorder_expect_failure	deps/pmdk/src/test/unittest/unittest.sh	/^function pmreorder_expect_failure()$/;"	f
pmreorder_expect_success	deps/pmdk/src/test/unittest/unittest.sh	/^function pmreorder_expect_success()$/;"	f
pmreorder_run_tool	deps/pmdk/src/test/unittest/unittest.sh	/^function pmreorder_run_tool()$/;"	f
pms	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^static const enum rpmem_persist_method pms[] =$/;"	v	typeref:enum:rpmem_persist_method	file:
pmsg	deps/pmdk/src/librpmem/rpmem_fip.c	/^	void *pmsg;	\/* persist message buffer *\/$/;"	m	struct:rpmem_fip	file:
pmsg	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	void *pmsg;			\/* persist message buffer *\/$/;"	m	struct:rpmemd_fip	file:
pmsg_mr	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct fid_mr *pmsg_mr;		\/* persist message memory region *\/$/;"	m	struct:rpmem_fip	typeref:struct:rpmem_fip::fid_mr	file:
pmsg_mr	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct fid_mr *pmsg_mr;		\/* persist message memory region *\/$/;"	m	struct:rpmemd_fip	typeref:struct:rpmemd_fip::fid_mr	file:
pmsg_mr_desc	deps/pmdk/src/librpmem/rpmem_fip.c	/^	void *pmsg_mr_desc;		\/* persist message memory descriptor *\/$/;"	m	struct:rpmem_fip	file:
pmsg_mr_desc	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	void *pmsg_mr_desc;		\/* persist message local descriptor *\/$/;"	m	struct:rpmemd_fip	file:
pmsg_size	deps/pmdk/src/librpmem/rpmem_fip.c	/^	size_t pmsg_size;$/;"	m	struct:rpmem_fip	file:
pmsg_size	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	size_t pmsg_size; \/* persist message buffer size including alignment *\/$/;"	m	struct:rpmemd_fip	file:
pnode_init	deps/pmdk/src/test/obj_defrag_advanced/pgraph.c	/^pnode_init(PMEMobjpool *pop, PMEMoid pnode_oid, struct vnode_t *vnode,$/;"	f	file:
pnode_size	deps/pmdk/src/test/obj_defrag_advanced/pgraph.c	/^pnode_size(unsigned edges_num, size_t pattern_size)$/;"	f	file:
pnode_t	deps/pmdk/src/test/obj_defrag_advanced/pgraph.h	/^struct pnode_t$/;"	s
pobj_action	deps/pmdk/src/include/libpmemobj/action_base.h	/^struct pobj_action {$/;"	s
pobj_action_heap	deps/pmdk/src/include/libpmemobj/action_base.h	/^struct pobj_action_heap {$/;"	s
pobj_action_internal	deps/pmdk/src/libpmemobj/palloc.c	/^struct pobj_action_internal {$/;"	s	file:
pobj_action_type	deps/pmdk/src/include/libpmemobj/action_base.h	/^enum pobj_action_type {$/;"	g
pobj_actions_add	deps/pmdk/src/libpmemobj/palloc.c	/^pobj_actions_add(struct pobj_actions *actv)$/;"	f	file:
pobj_alloc_class_desc	deps/pmdk/src/include/libpmemobj/ctl.h	/^struct pobj_alloc_class_desc {$/;"	s
pobj_args	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^struct pobj_args {$/;"	s	file:
pobj_bench	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^struct pobj_bench {$/;"	s	file:
pobj_defrag_result	deps/pmdk/src/include/libpmemobj/atomic_base.h	/^struct pobj_defrag_result {$/;"	s
pobj_direct_clo	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^static struct benchmark_clo pobj_direct_clo[4];$/;"	v	typeref:struct:benchmark_clo	file:
pobj_direct_init	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^pobj_direct_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
pobj_direct_op	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^pobj_direct_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
pobj_emit_log	deps/pmdk/src/libpmemobj/obj.c	/^pobj_emit_log(const char *func, int order)$/;"	f
pobj_exit	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^pobj_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
pobj_free_worker	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^pobj_free_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
pobj_header_type	deps/pmdk/src/include/libpmemobj/ctl.h	/^enum pobj_header_type {$/;"	g
pobj_init	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^pobj_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
pobj_init_worker	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^pobj_init_worker(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
pobj_log_type	deps/pmdk/src/include/libpmemobj/tx_base.h	/^enum pobj_log_type {$/;"	g
pobj_open_clo	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^static struct benchmark_clo pobj_open_clo[3];$/;"	v	typeref:struct:benchmark_clo	file:
pobj_open_op	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^pobj_open_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
pobj_stats_enabled	deps/pmdk/src/include/libpmemobj/ctl.h	/^enum pobj_stats_enabled {$/;"	g
pobj_tx_lock	deps/pmdk/src/include/libpmemobj/tx_base.h	/^enum tx_lock_deprecated pobj_tx_lock {$/;"	g
pobj_tx_param	deps/pmdk/src/include/libpmemobj/tx_base.h	/^enum pobj_tx_param {$/;"	g
pobj_tx_stage	deps/pmdk/src/include/libpmemobj/tx_base.h	/^enum pobj_tx_stage {$/;"	g
pobj_worker	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^struct pobj_worker {$/;"	s	file:
pocli	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	struct pocli *pocli;$/;"	m	struct:pocli_ctx	typeref:struct:pocli_ctx::pocli	file:
pocli	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^struct pocli {$/;"	s	file:
pocli_alloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_alloc(FILE *input, const char *fname, const struct pocli_cmd *cmds,$/;"	f	file:
pocli_args	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^struct pocli_args {$/;"	s	file:
pocli_args_alloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_args_alloc(char *cmdstr, char *argstr, char *delim)$/;"	f	file:
pocli_args_list_elm	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_args_list_elm(struct pocli_ctx *ctx, struct pocli_args *args,$/;"	f	file:
pocli_args_number	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_args_number(struct pocli_args *args, int arg, uint64_t *type_num)$/;"	f	file:
pocli_args_obj	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_args_obj(struct pocli_ctx *ctx, struct pocli_args *args,$/;"	f	file:
pocli_args_obj_root	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_args_obj_root(struct pocli_ctx *ctx, char *in, PMEMoid **oidp)$/;"	f	file:
pocli_args_size	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_args_size(struct pocli_args *args, int arg, size_t *sizep)$/;"	f	file:
pocli_cmd	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^struct pocli_cmd {$/;"	s	file:
pocli_cmd_fn	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^typedef enum pocli_ret (*pocli_cmd_fn)(struct pocli_ctx *ctx,$/;"	t	typeref:enum:pocli_cmd_fn	file:
pocli_commands	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^static struct pocli_cmd pocli_commands[] = {$/;"	v	typeref:struct:pocli_cmd	file:
pocli_ctx	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^struct pocli_ctx {$/;"	s	file:
pocli_do_process	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_do_process(struct pocli *pcli)$/;"	f	file:
pocli_env_parse_bool	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_env_parse_bool(const char *envname, bool *value)$/;"	f	file:
pocli_err	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_err(struct pocli_ctx *ctx, enum pocli_ret ret, const char *fmt, ...)$/;"	f	file:
pocli_free	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_free(struct pocli *pcli)$/;"	f	file:
pocli_get_cmd	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_get_cmd(struct pocli *pcli, const char *cmds)$/;"	f	file:
pocli_help	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_help(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_opts	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^struct pocli_opts {$/;"	s	file:
pocli_pmemobj_alloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_alloc(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_alloc_usable_size	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_alloc_usable_size(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_direct	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_direct(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_do_alloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_do_alloc(struct pocli_ctx *ctx, struct pocli_args *args,$/;"	f	file:
pocli_pmemobj_do_persist	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_do_persist(struct pocli_ctx *ctx, struct pocli_args *args,$/;"	f	file:
pocli_pmemobj_do_realloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_do_realloc(struct pocli_ctx *ctx, struct pocli_args *args,$/;"	f	file:
pocli_pmemobj_do_tx_alloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_do_tx_alloc(struct pocli_ctx *ctx, struct pocli_args *args,$/;"	f	file:
pocli_pmemobj_do_tx_realloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_do_tx_realloc(struct pocli_ctx *ctx, struct pocli_args *args,$/;"	f	file:
pocli_pmemobj_drain	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_drain(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_first	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_first(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_flush	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_flush(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_free	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_free(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_list_insert	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_list_insert(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_list_insert_new	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_list_insert_new(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_list_move	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_list_move(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_list_remove	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_list_remove(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_memcpy_persist	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_memcpy_persist(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_memset_persist	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_memset_persist(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_next	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_next(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_persist	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_persist(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_pool_by_oid	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_pool_by_oid(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_pool_by_ptr	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_pool_by_ptr(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_realloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_realloc(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_root	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_root(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_root_size	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_root_size(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_strdup	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_strdup(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_abort	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_abort(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_add_range	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_add_range(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_add_range_direct	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_add_range_direct(struct pocli_ctx *ctx,$/;"	f	file:
pocli_pmemobj_tx_alloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_alloc(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_begin	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_begin(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_commit	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_commit(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_end	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_end(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_errno	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_errno(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_free	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_free(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_process	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_process(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_realloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_realloc(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_stage	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_stage(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_strdup	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_strdup(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_zalloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_zalloc(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_tx_zrealloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_tx_zrealloc(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_type_num	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_type_num(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_zalloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_zalloc(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_pmemobj_zrealloc	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_pmemobj_zrealloc(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_print	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_print(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_print_cmd	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_print_cmd(struct pocli_ctx *ctx, const struct pocli_cmd *cmd)$/;"	f	file:
pocli_print_cmd_usage	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_print_cmd_usage(struct pocli_ctx *ctx, const struct pocli_cmd *cmd)$/;"	f	file:
pocli_printf	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_printf(struct pocli_ctx *ctx, const char *fmt, ...)$/;"	f	file:
pocli_process	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_process(struct pocli *pcli)$/;"	f
pocli_prompt	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_prompt(struct pocli *pcli)$/;"	f	file:
pocli_quit	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_quit(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_read_opts	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_read_opts(struct pocli_opts *opts)$/;"	f	file:
pocli_ret	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^enum pocli_ret {$/;"	g	file:
pocli_str_root_copy	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_str_root_copy(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pocli_str_root_print	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^pocli_str_root_print(struct pocli_ctx *ctx, struct pocli_args *args)$/;"	f	file:
pointer	src/server.h	/^    unsigned long pointer;$/;"	m	struct:redisFunctionSym
pointer_based	deps/pmdk/src/libpmemobj/ravl.c	/^	int32_t pointer_based;$/;"	m	struct:ravl_node	file:
pong	src/server.h	/^    robj *crlf, *ok, *err, *emptybulk, *czero, *cone, *cnegone, *pong, *space,$/;"	m	struct:sharedObjectsStruct
pong_received	src/cluster.h	/^    mstime_t pong_received;  \/* Unix time we received the pong *\/$/;"	m	struct:clusterNode
pong_received	src/cluster.h	/^    uint32_t pong_received;$/;"	m	struct:__anon169
pool	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	fn_num_t pool;$/;"	m	struct:pobj_bench	file:
pool	deps/pmdk/src/benchmarks/rpmem.cpp	/^	void *pool;		  \/* memory pool address *\/$/;"	m	struct:rpmem_bench	file:
pool	deps/pmdk/src/libpmempool/pmempool.h	/^	struct pool_data *pool;$/;"	m	struct:pmempool_check_ctx	typeref:struct:pmempool_check_ctx::pool_data
pool	deps/pmdk/src/libpmempool/pool.h	/^		struct pool_hdr pool;$/;"	m	union:pool_data::__anon93	typeref:struct:pool_data::__anon93::pool_hdr
pool	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	void *pool;$/;"	m	struct:pool_entry	file:
pool	deps/pmdk/src/test/util_ctl/util_ctl.c	/^struct pool {$/;"	s	file:
pool	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^	struct rpmemd_db_pool *pool; \/* pool handle *\/$/;"	m	struct:rpmemd	typeref:struct:rpmemd::rpmemd_db_pool	file:
pool_addr	deps/pmdk/src/tools/rpmemd/rpmemd_db.h	/^	void *pool_addr;$/;"	m	struct:rpmemd_db_pool
pool_attr	deps/pmdk/src/common/set.h	/^struct pool_attr {$/;"	s
pool_attr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_pool_attr_packed pool_attr;	\/* pool attributes *\/$/;"	m	struct:rpmem_msg_create	typeref:struct:rpmem_msg_create::rpmem_pool_attr_packed
pool_attr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_pool_attr_packed pool_attr;	\/* pool attributes *\/$/;"	m	struct:rpmem_msg_set_attr	typeref:struct:rpmem_msg_set_attr::rpmem_pool_attr_packed
pool_attr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_pool_attr_packed pool_attr; \/* pool attributes *\/$/;"	m	struct:rpmem_msg_open_resp	typeref:struct:rpmem_msg_open_resp::rpmem_pool_attr_packed
pool_attr	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^	struct rpmem_pool_attr pool_attr;$/;"	m	struct:req_arg	typeref:struct:req_arg::rpmem_pool_attr	file:
pool_attr_names	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^static const char *pool_attr_names[] = {$/;"	v	file:
pool_attrs	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^static const struct rpmem_pool_attr pool_attrs[] = {$/;"	v	typeref:struct:rpmem_pool_attr	file:
pool_blk_get_first_valid_arena	deps/pmdk/src/libpmempool/pool.c	/^pool_blk_get_first_valid_arena(struct pool_data *pool, struct arena *arenap)$/;"	f
pool_btt_info_valid	deps/pmdk/src/libpmempool/pool.c	/^pool_btt_info_valid(struct btt_info *infop)$/;"	f
pool_btt_lseek	deps/pmdk/src/libpmempool/pool.c	/^pool_btt_lseek(struct pool_data *pool, os_off_t offset, int whence)$/;"	f	file:
pool_btt_read	deps/pmdk/src/libpmempool/pool.c	/^pool_btt_read(struct pool_data *pool, void *dst, size_t count)$/;"	f	file:
pool_btt_write	deps/pmdk/src/libpmempool/pool.c	/^pool_btt_write(struct pool_data *pool, const void *src, size_t count)$/;"	f	file:
pool_check_type_to_pool_type	deps/pmdk/src/libpmempool/pool.c	/^pool_check_type_to_pool_type(enum pmempool_pool_type check_pool_type)$/;"	f	file:
pool_copy	deps/pmdk/src/libpmempool/pool.c	/^pool_copy(struct pool_data *pool, const char *dst_path, int overwrite)$/;"	f
pool_create	deps/pmdk/src/test/blk_pool/blk_pool.c	/^pool_create(const char *path, size_t bsize, size_t poolsize, unsigned mode)$/;"	f	file:
pool_create	deps/pmdk/src/test/blk_pool_win/blk_pool_win.c	/^pool_create(const wchar_t *path, size_t bsize, size_t poolsize, unsigned mode)$/;"	f	file:
pool_create	deps/pmdk/src/test/log_pool/log_pool.c	/^pool_create(const char *path, size_t poolsize, unsigned mode)$/;"	f	file:
pool_create	deps/pmdk/src/test/log_pool_win/log_pool_win.c	/^pool_create(const wchar_t *path, size_t poolsize, unsigned mode)$/;"	f	file:
pool_create	deps/pmdk/src/test/obj_pool/obj_pool.c	/^pool_create(const char *path, const char *layout, size_t poolsize,$/;"	f	file:
pool_create	deps/pmdk/src/test/obj_pool_win/obj_pool_win.c	/^pool_create(const wchar_t *path, const wchar_t *layout, size_t poolsize,$/;"	f	file:
pool_data	deps/pmdk/src/libpmempool/pool.h	/^struct pool_data {$/;"	s
pool_data_alloc	deps/pmdk/src/libpmempool/pool.c	/^pool_data_alloc(PMEMpoolcheck *ppc)$/;"	f
pool_data_free	deps/pmdk/src/libpmempool/pool.c	/^pool_data_free(struct pool_data *pool)$/;"	f
pool_desc	deps/pmdk/src/common/set.h	/^	char *pool_desc;	\/* descriptor of a poolset *\/$/;"	m	struct:remote_replica
pool_desc	deps/pmdk/src/libpmemobj/obj.h	/^	char *pool_desc;	\/* descriptor of a poolset *\/$/;"	m	struct:pmemobjpool
pool_desc	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	const char *pool_desc;$/;"	m	struct:rpmem_req_attr
pool_desc	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_pool_desc pool_desc;	\/* pool descriptor *\/$/;"	m	struct:rpmem_msg_create	typeref:struct:rpmem_msg_create::rpmem_msg_pool_desc
pool_desc	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	struct rpmem_msg_pool_desc pool_desc;	\/* pool descriptor *\/$/;"	m	struct:rpmem_msg_open	typeref:struct:rpmem_msg_open::rpmem_msg_pool_desc
pool_desc	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^static const char pool_desc[] = POOL_DESC;$/;"	v
pool_desc	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^	char *pool_desc;	\/* pool descriptor *\/$/;"	m	struct:rpmemd	file:
pool_desc	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^	char *pool_desc;$/;"	m	struct:rpmemd_db_entry	file:
pool_entry	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^struct pool_entry {$/;"	s	file:
pool_get_first_valid_btt	deps/pmdk/src/libpmempool/pool.c	/^pool_get_first_valid_btt(struct pool_data *pool, struct btt_info *infop,$/;"	f
pool_get_min_size	deps/pmdk/src/libpmempool/pool.c	/^pool_get_min_size(enum pool_type type)$/;"	f
pool_get_pool_type_str	deps/pmdk/src/libpmempool/pool.c	/^pool_get_pool_type_str(enum pool_type type)$/;"	f
pool_get_signature	deps/pmdk/src/libpmempool/pool.c	/^pool_get_signature(enum pool_type type)$/;"	f	file:
pool_hdr	deps/pmdk/src/common/pool_hdr.h	/^struct pool_hdr {$/;"	s
pool_hdr	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^	unsigned char pool_hdr[RPMEM_HDR_SIZE];$/;"	m	struct:pool_t	file:
pool_hdr_checksum	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_checksum(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
pool_hdr_checksum_fix	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_checksum_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question,$/;"	f	file:
pool_hdr_default	deps/pmdk/src/libpmempool/pool.c	/^pool_hdr_default(enum pool_type type, struct pool_hdr *hdrp)$/;"	f
pool_hdr_default_check	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_default_check(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
pool_hdr_default_fix	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_default_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question,$/;"	f	file:
pool_hdr_get_type	deps/pmdk/src/libpmempool/pool.c	/^pool_hdr_get_type(const struct pool_hdr *hdrp)$/;"	f
pool_hdr_modified	deps/pmdk/src/libpmempool/check_util.h	/^	int pool_hdr_modified;$/;"	m	struct:__anon87
pool_hdr_nondefault	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_nondefault(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
pool_hdr_nondefault_fix	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_nondefault_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question,$/;"	f	file:
pool_hdr_poolset_uuid_find	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_poolset_uuid_find(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
pool_hdr_poolset_uuid_fix	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_poolset_uuid_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question,$/;"	f	file:
pool_hdr_possible_type	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_possible_type(PMEMpoolcheck *ppc)$/;"	f	file:
pool_hdr_preliminary_check	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_preliminary_check(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
pool_hdr_quick_check	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_quick_check(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
pool_hdr_uuid_find	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_uuid_find(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
pool_hdr_uuid_fix	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_uuid_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question,$/;"	f	file:
pool_hdr_uuid_links	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_uuid_links(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
pool_hdr_uuid_links_fix	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_uuid_links_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question,$/;"	f	file:
pool_hdr_valid	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_hdr_valid(struct pool_hdr *hdrp)$/;"	f	file:
pool_memset	deps/pmdk/src/libpmempool/pool.c	/^pool_memset(struct pool_data *pool, uint64_t off, int c, size_t count)$/;"	f
pool_next_arena_offset	deps/pmdk/src/libpmempool/pool.c	/^pool_next_arena_offset(struct pool_data *pool, uint64_t offset)$/;"	f
pool_open	deps/pmdk/src/test/blk_pool/blk_pool.c	/^pool_open(const char *path, size_t bsize)$/;"	f	file:
pool_open	deps/pmdk/src/test/blk_pool_win/blk_pool_win.c	/^pool_open(const wchar_t *path, size_t bsize)$/;"	f	file:
pool_open	deps/pmdk/src/test/log_pool/log_pool.c	/^pool_open(const char *path)$/;"	f	file:
pool_open	deps/pmdk/src/test/log_pool_win/log_pool_win.c	/^pool_open(const wchar_t *path)$/;"	f	file:
pool_open	deps/pmdk/src/test/obj_pool/obj_pool.c	/^pool_open(const char *path, const char *layout)$/;"	f	file:
pool_open	deps/pmdk/src/test/obj_pool_win/obj_pool_win.c	/^pool_open(const wchar_t *path, const wchar_t *layout)$/;"	f	file:
pool_params	deps/pmdk/src/libpmempool/pool.h	/^struct pool_params {$/;"	s
pool_params_from_header	deps/pmdk/src/libpmempool/pool.c	/^pool_params_from_header(struct pool_params *params, const struct pool_hdr *hdr)$/;"	f
pool_params_parse	deps/pmdk/src/libpmempool/pool.c	/^pool_params_parse(const PMEMpoolcheck *ppc, struct pool_params *params,$/;"	f	file:
pool_read	deps/pmdk/src/libpmempool/pool.c	/^pool_read(struct pool_data *pool, void *buff, size_t nbytes, uint64_t off)$/;"	f
pool_replica	deps/pmdk/src/common/set.h	/^struct pool_replica {$/;"	s
pool_set	deps/pmdk/src/common/set.h	/^struct pool_set {$/;"	s
pool_set	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	/^	bool pool_set;$/;"	m	struct:rpmemd_config
pool_set_directory	deps/pmdk/src/common/set.h	/^struct pool_set_directory {$/;"	s
pool_set_file	deps/pmdk/src/libpmempool/pool.h	/^struct pool_set_file {$/;"	s
pool_set_file	deps/pmdk/src/tools/pmempool/common.h	/^struct pool_set_file {$/;"	s
pool_set_file_close	deps/pmdk/src/libpmempool/pool.c	/^pool_set_file_close(struct pool_set_file *file)$/;"	f	file:
pool_set_file_close	deps/pmdk/src/tools/pmempool/common.c	/^pool_set_file_close(struct pool_set_file *file)$/;"	f
pool_set_file_map	deps/pmdk/src/libpmempool/pool.c	/^pool_set_file_map(struct pool_set_file *file, uint64_t offset)$/;"	f
pool_set_file_map	deps/pmdk/src/tools/pmempool/common.c	/^pool_set_file_map(struct pool_set_file *file, uint64_t offset)$/;"	f
pool_set_file_map_headers	deps/pmdk/src/libpmempool/pool.c	/^pool_set_file_map_headers(struct pool_set_file *file, int rdonly, int prv)$/;"	f
pool_set_file_nreplicas	deps/pmdk/src/tools/pmempool/common.c	/^pool_set_file_nreplicas(struct pool_set_file *file)$/;"	f
pool_set_file_open	deps/pmdk/src/libpmempool/pool.c	/^pool_set_file_open(const char *fname, struct pool_params *params, int rdonly)$/;"	f	file:
pool_set_file_open	deps/pmdk/src/tools/pmempool/common.c	/^pool_set_file_open(const char *fname,$/;"	f
pool_set_file_persist	deps/pmdk/src/tools/pmempool/common.c	/^pool_set_file_persist(struct pool_set_file *file, const void *addr, size_t len)$/;"	f
pool_set_file_read	deps/pmdk/src/tools/pmempool/common.c	/^pool_set_file_read(struct pool_set_file *file, void *buff,$/;"	f
pool_set_file_set_replica	deps/pmdk/src/tools/pmempool/common.c	/^pool_set_file_set_replica(struct pool_set_file *file, size_t replica)$/;"	f
pool_set_file_unmap_headers	deps/pmdk/src/libpmempool/pool.c	/^pool_set_file_unmap_headers(struct pool_set_file *file)$/;"	f
pool_set_file_write	deps/pmdk/src/tools/pmempool/common.c	/^pool_set_file_write(struct pool_set_file *file, void *buff,$/;"	f
pool_set_files_count	deps/pmdk/src/libpmempool/pool.c	/^pool_set_files_count(struct pool_set_file *file)$/;"	f
pool_set_map	deps/pmdk/src/libpmempool/pool.c	/^pool_set_map(const char *fname, struct pool_set **poolset, unsigned flags)$/;"	f	file:
pool_set_option	deps/pmdk/src/common/set.h	/^struct pool_set_option {$/;"	s
pool_set_option_flag	deps/pmdk/src/common/set.h	/^enum pool_set_option_flag {$/;"	g
pool_set_parse	deps/pmdk/src/libpmempool/pool.c	/^pool_set_parse(struct pool_set **setp, const char *path)$/;"	f
pool_set_part	deps/pmdk/src/common/set.h	/^struct pool_set_part {$/;"	s
pool_set_part_copy	deps/pmdk/src/libpmempool/pool.c	/^pool_set_part_copy(struct pool_set_part *dpart, struct pool_set_part *spart,$/;"	f
pool_set_read_header	deps/pmdk/src/libpmempool/pool.c	/^pool_set_read_header(const char *fname, struct pool_hdr *hdr)$/;"	f	file:
pool_set_type	deps/pmdk/src/libpmempool/pool.c	/^pool_set_type(struct pool_set *set)$/;"	f
pool_size	deps/pmdk/src/benchmarks/map_bench.cpp	/^	size_t pool_size;$/;"	m	struct:map_bench	file:
pool_size	deps/pmdk/src/benchmarks/rpmem.cpp	/^	size_t pool_size;	 \/* size of memory pool *\/$/;"	m	struct:rpmem_bench	file:
pool_size	deps/pmdk/src/libpmempool/replica.h	/^	size_t pool_size;$/;"	m	struct:replica_health_status
pool_size	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	size_t pool_size;$/;"	m	struct:rpmem_req_attr
pool_size	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint64_t pool_size;		\/* minimum required size of a pool *\/$/;"	m	struct:rpmem_msg_common
pool_size	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    pool_size = 500 * t.MiB$/;"	v	class:ObjDefragAdvanced
pool_size	deps/pmdk/src/tools/rpmemd/rpmemd_db.h	/^	size_t pool_size;$/;"	m	struct:rpmemd_db_pool
pool_supported	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^pool_supported(enum pool_type type)$/;"	f	file:
pool_t	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^struct pool_t {$/;"	s	file:
pool_type	deps/pmdk/src/include/libpmempool.h	/^	enum pmempool_pool_type pool_type;$/;"	m	struct:pmempool_check_argsU	typeref:enum:pmempool_check_argsU::pmempool_pool_type
pool_type	deps/pmdk/src/include/libpmempool.h	/^	enum pmempool_pool_type pool_type;$/;"	m	struct:pmempool_check_argsW	typeref:enum:pmempool_check_argsW::pmempool_pool_type
pool_type	deps/pmdk/src/libpmempool/pool.h	/^enum pool_type {$/;"	g
pool_type	deps/pmdk/src/test/libpmempool_api/libpmempool_test.c	/^	enum pmempool_pool_type pool_type;$/;"	m	struct:pmempool_check_args_1_0	typeref:enum:pmempool_check_args_1_0::pmempool_pool_type	file:
pool_type	deps/pmdk/src/test/libpmempool_api_win/libpmempool_test_win.c	/^	enum pmempool_pool_type pool_type;$/;"	m	struct:pmempool_check_args_1_0	typeref:enum:pmempool_check_args_1_0::pmempool_pool_type	file:
pool_uuid_lo	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	uint64_t pool_uuid_lo;$/;"	m	struct:pmemoid
pool_uuid_lo	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint64_t pool_uuid_lo;$/;"	m	struct:pmemobjfs	file:
pool_uuid_lo	deps/pmdk/src/include/libpmemobj/base.h	/^	uint64_t pool_uuid_lo;$/;"	m	struct:pmemoid
pool_uuid_lo	src/server.h	/^    uint64_t pool_uuid_lo;          \/* PMEM pool UUID *\/$/;"	m	struct:redisServer
pool_valid	deps/pmdk/src/libpmempool/check_util.h	/^	} pool_valid;$/;"	m	struct:__anon87	typeref:struct:__anon87::__anon89
pool_write	deps/pmdk/src/libpmempool/pool.c	/^pool_write(struct pool_data *pool, const void *buff, size_t nbytes,$/;"	f
pools	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^static struct pool_entry pools[MAX_IDS];$/;"	v	typeref:struct:pool_entry	file:
pools_ht	deps/pmdk/src/libpmemobj/obj.c	/^static struct critnib *pools_ht; \/* hash table used for searching by UUID *\/$/;"	v	typeref:struct:critnib	file:
pools_tree	deps/pmdk/src/libpmemobj/obj.c	/^static struct critnib *pools_tree; \/* tree used for searching by address *\/$/;"	v	typeref:struct:critnib	file:
poolset	deps/pmdk/src/libpmempool/check_backup.c	/^	int poolset;$/;"	m	struct:step	file:
poolset	deps/pmdk/src/libpmempool/pool.h	/^	struct pool_set *poolset;$/;"	m	struct:pool_set_file	typeref:struct:pool_set_file::pool_set
poolset	deps/pmdk/src/tools/pmempool/common.h	/^	struct pool_set *poolset;$/;"	m	struct:pool_set_file	typeref:struct:pool_set_file::pool_set
poolset	deps/pmdk/src/tools/pmempool/info.h	/^	struct pool_set *poolset;$/;"	m	struct:pmem_info	typeref:struct:pmem_info::pool_set
poolset_close	deps/pmdk/src/libpmempool/feature.c	/^poolset_close(struct pool_set *set)$/;"	f	file:
poolset_compare_status	deps/pmdk/src/libpmempool/transform.c	/^struct poolset_compare_status$/;"	s	file:
poolset_dir	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	/^	char *poolset_dir;$/;"	m	struct:rpmemd_config
poolset_file	deps/pmdk/src/tools/pmempool/synchronize.c	/^	char *poolset_file;	\/* a path to a poolset file *\/$/;"	m	struct:pmempool_sync_context	file:
poolset_file_dst	deps/pmdk/src/tools/pmempool/transform.c	/^	char *poolset_file_dst;	\/* a path to a target poolset file *\/$/;"	m	struct:pmempool_transform_context	file:
poolset_file_src	deps/pmdk/src/tools/pmempool/transform.c	/^	char *poolset_file_src;	\/* a path to a source poolset file *\/$/;"	m	struct:pmempool_transform_context	file:
poolset_health_status	deps/pmdk/src/libpmempool/replica.h	/^struct poolset_health_status {$/;"	s
poolset_info	deps/pmdk/src/test/util_poolset/util_poolset.c	/^poolset_info(const char *fname, struct pool_set *set, int o)$/;"	f	file:
poolset_open	deps/pmdk/src/libpmempool/feature.c	/^poolset_open(const char *path, int rdonly)$/;"	f	file:
poolset_uuid	deps/pmdk/src/common/pool_hdr.h	/^	uuid_t poolset_uuid;		\/* pool set UUID *\/$/;"	m	struct:pool_hdr
poolset_uuid	deps/pmdk/src/common/set.h	/^	unsigned char poolset_uuid[POOL_HDR_UUID_LEN];		\/* pool uuid *\/$/;"	m	struct:pool_attr
poolset_uuid	deps/pmdk/src/include/librpmem.h	/^	unsigned char poolset_uuid[RPMEM_POOL_HDR_UUID_LEN]; \/* pool uuid *\/$/;"	m	struct:rpmem_pool_attr
poolset_uuid	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	unsigned char poolset_uuid[RPMEM_POOL_HDR_UUID_LEN]; \/* pool uuid *\/$/;"	m	struct:rpmem_pool_attr_packed
poolsize	deps/pmdk/src/common/set.h	/^	size_t poolsize;	\/* the smallest replica size *\/$/;"	m	struct:pool_set
poolsize	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^	size_t poolsize;$/;"	m	struct:bbtcreate_options	file:
pop	deps/pmdk/src/benchmarks/map_bench.cpp	/^	PMEMobjpool *pop;$/;"	m	struct:map_bench	file:
pop	deps/pmdk/src/benchmarks/obj_lanes.cpp	/^	PMEMobjpool *pop;     \/* persistent pool handle *\/$/;"	m	struct:obj_bench	file:
pop	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	PMEMobjpool *pop;	      \/* pointer to the persistent pool *\/$/;"	m	struct:mutex_bench	file:
pop	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^	PMEMobjpool *pop;	  \/* persistent pool handle *\/$/;"	m	struct:obj_bench	file:
pop	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	PMEMobjpool *pop;$/;"	m	struct:obj_bench	file:
pop	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	PMEMobjpool **pop;$/;"	m	struct:pobj_bench	file:
pop	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^	PMEMobjpool *pop;     \/* persistent pool handle *\/$/;"	m	struct:obj_bench	file:
pop	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	PMEMobjpool *pop;	     \/* handle to persistent pool *\/$/;"	m	struct:obj_tx_bench	file:
pop	deps/pmdk/src/examples/libpmemobj/array/array.c	/^static PMEMobjpool *pop;$/;"	v	file:
pop	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	PMEMobjpool *pop;	\/* pmemobj handle *\/$/;"	m	struct:ds_context	file:
pop	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^static PMEMobjpool *pop;$/;"	v	file:
pop	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	PMEMobjpool *pop;$/;"	m	struct:map_ctx
pop	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^static PMEMobjpool *pop;$/;"	v	file:
pop	deps/pmdk/src/examples/libpmemobj/pi.c	/^static PMEMobjpool *pop;$/;"	v	file:
pop	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	PMEMobjpool *pop;$/;"	m	struct:pmemobjfs	file:
pop	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^static PMEMobjpool *pop;$/;"	v	file:
pop	deps/pmdk/src/examples/libpmemobj/slab_allocator/slab_allocator.c	/^	PMEMobjpool *pop;$/;"	m	struct:slab_allocator	file:
pop	deps/pmdk/src/include/libpmemobj/base.h	/^	PMEMobjpool *pop;$/;"	m	struct:_pobj_pcache
pop	deps/pmdk/src/libpmemobj/obj.c	/^	PMEMobjpool *pop;$/;"	m	struct:_pobj_pcache	file:
pop	deps/pmdk/src/libpmemobj/tx.c	/^	PMEMobjpool *pop;$/;"	m	struct:tx	file:
pop	deps/pmdk/src/test/obj_ctl_alignment/obj_ctl_alignment.c	/^static PMEMobjpool *pop;$/;"	v	file:
pop	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^static PMEMobjpool *pop;$/;"	v	file:
pop	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	PMEMobjpool *pop;$/;"	m	struct:create_n_defrag_params_t	file:
pop	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	PMEMobjpool *pop;$/;"	m	struct:global_t	file:
pop	deps/pmdk/src/test/obj_direct_volatile/obj_direct_volatile.c	/^static PMEMobjpool *pop;$/;"	v	file:
pop	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^static PMEMobjpool *pop;$/;"	v	file:
pop	deps/pmdk/src/test/obj_locks/obj_locks.c	/^	PMEMobjpool *pop;$/;"	m	struct:locks	file:
pop	deps/pmdk/src/test/obj_memblock/obj_memblock.c	/^static PMEMobjpool *pop;$/;"	v	file:
pop	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^	PMEMobjpool *pop;$/;"	m	struct:worker_args	file:
pop	deps/pmdk/src/test/obj_pmalloc_oom_mt/obj_pmalloc_oom_mt.c	/^static PMEMobjpool *pop;$/;"	v	file:
pop	deps/pmdk/src/test/obj_tx_mt/obj_tx_mt.c	/^static PMEMobjpool *pop;$/;"	v	file:
pop	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	PMEMobjpool *pop;$/;"	m	struct:pocli_ctx	file:
pop	deps/pmdk/src/tools/pmempool/info.h	/^		struct pmemobjpool *pop;$/;"	m	struct:pmem_info::__anon111	typeref:struct:pmem_info::__anon111::pmemobjpool
pop	src/ziplist.c	/^static unsigned char *pop(unsigned char *zl, int where) {$/;"	f	file:
popGenericCommand	src/t_list.c	/^void popGenericCommand(client *c, int where) {$/;"	f
pop_answer	deps/pmdk/src/libpmempool/check_util.c	/^pop_answer(struct check_data *data)$/;"	f	file:
pop_status	deps/pmdk/src/libpmempool/check_util.c	/^pop_status(struct check_data *data, struct check_status_head *queue)$/;"	f	file:
pop_uuid_lo	deps/pmdk/src/libpmemobj/lane.h	/^	uint64_t pop_uuid_lo;$/;"	m	struct:lane_info
popen_readi	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^popen_readi(const char *cmd)$/;"	f	file:
populateCommandTable	src/server.c	/^void populateCommandTable(void) {$/;"	f
populate_nodes_replicas_info	src/redis-trib.rb	/^    def populate_nodes_replicas_info$/;"	f	class:RedisTrib.alloc_slots
port	deps/hiredis/test.c	/^        int port;$/;"	m	struct:config::__anon149	file:
port	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	unsigned short port;$/;"	m	struct:rpmem_resp_attr
port	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t port;			\/* RDMA connection port *\/$/;"	m	struct:rpmem_msg_ibc_attr
port	src/cluster.h	/^    int port;                   \/* Latest known port of this node *\/$/;"	m	struct:clusterNode
port	src/cluster.h	/^    uint16_t port;              \/* port last time it was seen *\/$/;"	m	struct:__anon169
port	src/cluster.h	/^    uint16_t port;      \/* Sender TCP base port *\/$/;"	m	struct:__anon177
port	src/sentinel.c	/^    int port;$/;"	m	struct:sentinelAddr	file:
port	src/server.h	/^    int port;                   \/* TCP listening port *\/$/;"	m	struct:redisServer
portfd	src/ae_evport.c	/^    int     portfd;                             \/* event port *\/$/;"	m	struct:aeApiState	file:
pos	deps/hiredis/hiredis.h	/^    size_t pos; \/* Buffer cursor *\/$/;"	m	struct:redisReader
pos	deps/linenoise/linenoise.c	/^    size_t pos;         \/* Current cursor position. *\/$/;"	m	struct:linenoiseState	file:
pos	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^	size_t pos;$/;"	m	struct:add_entry	file:
pos	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^btree_map_insert_item_at(TOID(struct tree_map_node) node, int pos,$/;"	v
pos	src/rio.h	/^            off_t pos;$/;"	m	struct:_rio::__anon179::__anon180
pos	src/rio.h	/^            off_t pos;$/;"	m	struct:_rio::__anon179::__anon182
position	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	char *position;    \/* position - head, tail, middle, rand *\/$/;"	m	struct:obj_list_args	file:
position_head	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^position_head(struct obj_worker *obj_worker, size_t op_idx)$/;"	f	file:
position_middle	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^position_middle(struct obj_worker *obj_worker, size_t op_idx)$/;"	f	file:
position_mode	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	int position_mode;   \/* list destination mode *\/$/;"	m	struct:obj_bench	file:
position_mode	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^enum position_mode {$/;"	g	file:
position_names	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^const char *position_names[] = {"head", "tail", "middle", "rand"};$/;"	v
position_rand	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^position_rand(struct obj_worker *obj_worker, size_t op_idx)$/;"	f	file:
position_tail	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^position_tail(struct obj_worker *obj_worker, size_t op_idx)$/;"	f	file:
positions	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^static fn_position_t positions[] = {position_head, position_tail,$/;"	v	file:
posix_fallocate	deps/pmdk/src/test/pmem_map_file/mocks_posix.c	/^posix_fallocate(int fd, os_off_t offset, off_t len)$/;"	f
posix_memalign	deps/jemalloc/include/jemalloc/jemalloc.h	327;"	d
posix_memalign	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	16;"	d
posix_memalign	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	16;"	d
posrelat	deps/lua/src/lstrlib.c	/^static ptrdiff_t posrelat (ptrdiff_t pos, size_t len) {$/;"	f	file:
postpone_init	deps/jemalloc/src/mutex.c	/^static bool		postpone_init = true;$/;"	v	file:
postponed_mutexes	deps/jemalloc/src/mutex.c	/^static malloc_mutex_t	*postponed_mutexes = NULL;$/;"	v	file:
pow2	deps/jemalloc/include/jemalloc/internal/size_classes.sh	/^pow2() {$/;"	f
pow2_ceil_u32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	410;"	d
pow2_ceil_u32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	410;"	d
pow2_ceil_u32	deps/jemalloc/include/jemalloc/internal/util.h	/^pow2_ceil_u32(uint32_t x)$/;"	f
pow2_ceil_u64	deps/jemalloc/include/jemalloc/internal/private_namespace.h	411;"	d
pow2_ceil_u64	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	411;"	d
pow2_ceil_u64	deps/jemalloc/include/jemalloc/internal/util.h	/^pow2_ceil_u64(uint64_t x)$/;"	f
pow2_ceil_zu	deps/jemalloc/include/jemalloc/internal/private_namespace.h	412;"	d
pow2_ceil_zu	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	412;"	d
pow2_ceil_zu	deps/jemalloc/include/jemalloc/internal/util.h	/^pow2_ceil_zu(size_t x)$/;"	f
powerLawRand	src/redis-cli.c	/^long long powerLawRand(long long min, long long max, double alpha) {$/;"	f
pparams	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	struct pgraph_params pparams;$/;"	m	struct:create_params_t	typeref:struct:create_params_t::pgraph_params	file:
ppc_flush	deps/pmdk/src/libpmem/ppc64/platform_generic.c	/^ppc_flush(const void *addr, size_t size)$/;"	f	file:
ppc_flush_empty	deps/pmdk/src/libpmem/ppc64/platform_generic.c	/^ppc_flush_empty(const void *addr, size_t size)$/;"	f	file:
ppc_pmem_funcs	deps/pmdk/src/libpmem/ppc64/platform_generic.c	/^static struct pmem_funcs ppc_pmem_funcs = {$/;"	v	typeref:struct:pmem_funcs	file:
ppc_predrain_fence	deps/pmdk/src/libpmem/ppc64/platform_generic.c	/^ppc_predrain_fence(void)$/;"	f	file:
pqsort	src/pqsort.c	/^pqsort(void *a, size_t n, size_t es,$/;"	f
pre_init	deps/pmdk/src/benchmarks/benchmark.hpp	/^	int (*pre_init)(struct benchmark *bench);$/;"	m	struct:benchmark_info
pread	deps/pmdk/src/windows/include/unistd.h	/^pread(int fd, void *buf, size_t count, os_off_t offset)$/;"	f
prealloc	deps/pmdk/src/libpmemobj/pmalloc.c	/^prealloc(PMEMobjpool *pop, uint64_t *off, size_t size,$/;"	f
prealloc	deps/pmdk/src/test/obj_list/mocks_windows.h	62;"	d
prealloc_construct	deps/pmdk/src/test/obj_list/mocks_windows.h	63;"	d
precheck	deps/lua/src/ldebug.c	/^static int precheck (const Proto *pt) {$/;"	f	file:
predrain_fence	deps/pmdk/src/libpmem/pmem.h	/^	predrain_fence_func predrain_fence;$/;"	m	struct:pmem_funcs
predrain_fence_empty	deps/pmdk/src/libpmem/x86_64/init.c	/^predrain_fence_empty(void)$/;"	f	file:
predrain_fence_func	deps/pmdk/src/libpmem/pmem.h	/^typedef void (*predrain_fence_func)(void);$/;"	t
predrain_memory_barrier	deps/pmdk/src/libpmem/aarch64/init.c	/^predrain_memory_barrier(void)$/;"	f	file:
predrain_memory_barrier	deps/pmdk/src/libpmem/x86_64/init.c	/^predrain_memory_barrier(void)$/;"	f	file:
pref	src/redis-cli.c	/^static struct pref {$/;"	s	file:
pref	src/redis-cli.c	/^} pref;$/;"	v	typeref:struct:pref	file:
prefault_fun	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	/^prefault_fun(int prefault, fun get_func, fun set_func)$/;"	f	file:
prefix	deps/pmdk/src/libpmempool/check_util.h	/^	char prefix[PREFIX_MAX_SIZE];$/;"	m	struct:__anon87
prefix	deps/pmdk/src/test/unittest/ut.c	/^prefix(const char *file, int line, const char *func, int flags)$/;"	f	file:
prefix_pending	src/redis-benchmark.c	/^    int prefix_pending;     \/* If non-zero, number of pending prefix commands. Commands$/;"	m	struct:_client	file:
prefixexp	deps/lua/src/lparser.c	/^static void prefixexp (LexState *ls, expdesc *v) {$/;"	f	file:
prefixlen	src/redis-benchmark.c	/^    int prefixlen;          \/* Size in bytes of the pending prefix commands *\/$/;"	m	struct:_client	file:
preinit_state	deps/lua/src/lstate.c	/^static void preinit_state (lua_State *L, global_State *g) {$/;"	f	file:
prep_hdr	deps/pmdk/src/libpmemobj/memblock.h	/^	void (*prep_hdr)(const struct memory_block *m,$/;"	m	struct:memory_block_ops
prep_todo_list	deps/pmdk/src/examples/libpmemobj/pi.c	/^prep_todo_list(int threads, int ops)$/;"	f	file:
prepareClientToWrite	src/networking.c	/^int prepareClientToWrite(client *c) {$/;"	f
prepareForShutdown	src/server.c	/^int prepareForShutdown(int flags) {$/;"	f
prepare_mount_dir	deps/pmdk/src/test/common_badblock.sh	/^function prepare_mount_dir() {$/;"	f
prepare_mount_dir_node	deps/pmdk/src/test/common_badblock.sh	/^function prepare_mount_dir_node() {$/;"	f
prepared	deps/jemalloc/include/jemalloc/internal/prof.h	/^	bool			prepared;$/;"	m	struct:prof_tctx_s
pres	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct rpmem_msg_persist_resp *pres; \/* persist response buffer *\/$/;"	m	struct:rpmem_fip	typeref:struct:rpmem_fip::rpmem_msg_persist_resp	file:
pres	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct rpmem_msg_persist_resp *pres; \/* persist response buffer *\/$/;"	m	struct:rpmemd_fip	typeref:struct:rpmemd_fip::rpmem_msg_persist_resp	file:
pres_mr	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct fid_mr *pres_mr;		\/* persist response memory region *\/$/;"	m	struct:rpmem_fip	typeref:struct:rpmem_fip::fid_mr	file:
pres_mr	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct fid_mr *pres_mr;		\/* persist response memory region *\/$/;"	m	struct:rpmemd_fip	typeref:struct:rpmemd_fip::fid_mr	file:
pres_mr_desc	deps/pmdk/src/librpmem/rpmem_fip.c	/^	void *pres_mr_desc;		\/* persist response memory descriptor *\/$/;"	m	struct:rpmem_fip	file:
pres_mr_desc	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	void *pres_mr_desc;		\/* persist response local descriptor *\/$/;"	m	struct:rpmemd_fip	file:
prev	deps/lua/src/lobject.h	/^      struct UpVal *prev;$/;"	m	struct:UpVal::__anon26::__anon27	typeref:struct:UpVal::__anon26::__anon27::UpVal
prev	deps/lua/src/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:
prev	deps/lua/src/lparser.h	/^  struct FuncState *prev;  \/* enclosing function *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::FuncState
prev	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	TOID(struct alien) prev;$/;"	m	struct:alien	file:
prev	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	TOID(struct bullet) prev;$/;"	m	struct:bullet	file:
prev	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	TOID(struct star) prev;$/;"	m	struct:star	file:
prev	deps/pmdk/src/libpmemobj/lane.h	/^	struct lane_info *prev, *next;$/;"	m	struct:lane_info	typeref:struct:lane_info::lane_info
prev	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	struct field *prev;$/;"	m	struct:field	typeref:struct:field::field	file:
prev	src/adlist.h	/^    struct listNode *prev;$/;"	m	struct:listNode	typeref:struct:listNode::listNode
prev	src/quicklist.h	/^    struct quicklistNode *prev;$/;"	m	struct:quicklistNode	typeref:struct:quicklistNode::quicklistNode
prev_part_hdr_valid	deps/pmdk/src/libpmempool/check_util.h	/^	int prev_part_hdr_valid;$/;"	m	struct:__anon87
prev_part_hdrp	deps/pmdk/src/libpmempool/check_util.h	/^	struct pool_hdr *prev_part_hdrp;$/;"	m	struct:__anon87	typeref:struct:__anon87::pool_hdr
prev_part_uuid	deps/pmdk/src/common/pool_hdr.h	/^	uuid_t prev_part_uuid;		\/* prev part *\/$/;"	m	struct:pool_hdr
prev_repl_hdr_valid	deps/pmdk/src/libpmempool/check_util.h	/^	int prev_repl_hdr_valid;$/;"	m	struct:__anon87
prev_repl_hdrp	deps/pmdk/src/libpmempool/check_util.h	/^	struct pool_hdr *prev_repl_hdrp;$/;"	m	struct:__anon87	typeref:struct:__anon87::pool_hdr
prev_repl_uuid	deps/pmdk/src/common/pool_hdr.h	/^	uuid_t prev_repl_uuid;		\/* prev replica *\/$/;"	m	struct:pool_hdr
prev_repl_uuid	deps/pmdk/src/common/set.h	/^	unsigned char prev_repl_uuid[POOL_HDR_UUID_LEN]; \/* prev replica uuid *\/$/;"	m	struct:pool_attr
prev_uuid	deps/pmdk/src/include/librpmem.h	/^	unsigned char prev_uuid[RPMEM_POOL_HDR_UUID_LEN]; \/* prev pool uuid *\/$/;"	m	struct:rpmem_pool_attr
prev_uuid	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	unsigned char prev_uuid[RPMEM_POOL_HDR_UUID_LEN]; \/* prev pool uuid *\/$/;"	m	struct:rpmem_pool_attr_packed
preventCommandAOF	src/server.c	/^void preventCommandAOF(client *c) {$/;"	f
preventCommandPropagation	src/server.c	/^void preventCommandPropagation(client *c) {$/;"	f
preventCommandReplication	src/server.c	/^void preventCommandReplication(client *c) {$/;"	f
previous	deps/lua/src/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:
previous	deps/lua/src/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:
previous_time	src/sentinel.c	/^    mstime_t previous_time;         \/* Last time we ran the time handler. *\/$/;"	m	struct:sentinelState	file:
prevrawlen	src/ziplist.c	/^    unsigned int prevrawlensize, prevrawlen;$/;"	m	struct:zlentry	file:
prevrawlensize	src/ziplist.c	/^    unsigned int prevrawlensize, prevrawlen;$/;"	m	struct:zlentry	file:
primary	deps/pmdk/src/libpmemobj/lane.h	/^	uint64_t primary;$/;"	m	struct:lane_info
primary_attempts	deps/pmdk/src/libpmemobj/lane.h	/^	int primary_attempts;$/;"	m	struct:lane_info
primaryexp	deps/lua/src/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:
print	deps/lua/etc/min.c	/^static int print(lua_State *L)$/;"	f	file:
print	deps/pmdk/src/test/unittest/futils.py	/^    def print(self, msg):$/;"	m	class:Message
printBits	src/bitops.c	/^void printBits(unsigned char *p, unsigned long count) {$/;"	f
print_all	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^print_all(void)$/;"	f	file:
print_array	deps/pmdk/src/examples/libpmemobj/array/array.c	/^static fn_print print_array[] = {NULL, print_int, print_pmemoid, print_toid};$/;"	v	file:
print_bad_blocks	deps/pmdk/src/test/common_badblock.sh	/^function print_bad_blocks {$/;"	f
print_bandwidth	deps/pmdk/src/benchmarks/benchmark.hpp	/^	bool print_bandwidth;$/;"	m	struct:benchmark_info
print_bb_e	deps/pmdk/src/tools/pmempool/info.h	/^enum print_bb_e {$/;"	g
print_cmd	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^static struct pocli_cmd print_cmd = {"", "", "", pocli_print};$/;"	v	typeref:struct:pocli_cmd	file:
print_custom_function	deps/pmdk/src/test/traces_custom_function/traces_custom_function.c	/^print_custom_function(const char *s)$/;"	f	file:
print_diff	deps/pmdk/utils/check_license/check-license.c	/^print_diff(char *license, char *pattern, size_t len)$/;"	f	file:
print_errors	deps/pmdk/src/test/out_err_mt/out_err_mt.c	/^print_errors(const char *msg)$/;"	f	file:
print_errors	deps/pmdk/src/test/out_err_mt_win/out_err_mt_win.c	/^print_errors(const wchar_t *msg)$/;"	f	file:
print_extra_headers	deps/pmdk/src/benchmarks/benchmark.hpp	/^	void (*print_extra_headers)();$/;"	m	struct:benchmark_info
print_extra_values	deps/pmdk/src/benchmarks/benchmark.hpp	/^	void (*print_extra_values)(struct benchmark *bench,$/;"	m	struct:benchmark_info
print_file_size	deps/pmdk/src/test/tools/sparsefile/sparsefile.c	/^print_file_size(const wchar_t *filename)$/;"	f	file:
print_filled_extents	deps/jemalloc/test/integration/xallocx.c	/^print_filled_extents(const void *p, uint8_t c, size_t len)$/;"	f	file:
print_help	deps/pmdk/src/benchmarks/benchmark.hpp	/^	void (*print_help)(struct benchmark *bench);$/;"	m	struct:benchmark_info
print_help	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^print_help(char *appname)$/;"	f	file:
print_help	deps/pmdk/src/examples/libpmemobj/linkedlist/fifo.c	/^print_help(void)$/;"	f	file:
print_help	deps/pmdk/src/tools/pmempool/pmempool.c	/^print_help(const char *appname)$/;"	f	file:
print_help	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^print_help(const char *name)$/;"	f	file:
print_help_screen	tests/test_helper.tcl	/^proc print_help_screen {} {$/;"	p
print_int	deps/pmdk/src/examples/libpmemobj/array/array.c	/^print_int(struct array_info *info)$/;"	f	file:
print_node_info	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^print_node_info(char *nodetype, uint64_t off, const art_node *an)$/;"	f	file:
print_only	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	bool print_only;		\/* don't execute, just print *\/$/;"	m	struct:pocli	file:
print_pmemoid	deps/pmdk/src/examples/libpmemobj/array/array.c	/^print_pmemoid(struct array_info *info)$/;"	f	file:
print_pool_params	deps/pmdk/src/tools/pmempool/create.c	/^print_pool_params(struct pmem_pool_params *params)$/;"	f	file:
print_reset_counters	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^print_reset_counters(const char *task, unsigned tx)$/;"	f	file:
print_result	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^print_result(struct bbtcreate_options *opts)$/;"	f	file:
print_toid	deps/pmdk/src/examples/libpmemobj/array/array.c	/^print_toid(struct array_info *info)$/;"	f	file:
print_usage	deps/lua/src/lua.c	/^static void print_usage (void) {$/;"	f	file:
print_usage	deps/pmdk/src/examples/libpmemobj/array/array.c	/^print_usage(void)$/;"	f	file:
print_usage	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^print_usage(char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^print_usage(char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^print_usage(char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/test/libpmempool_api/libpmempool_test.c	/^print_usage(char *name)$/;"	f	file:
print_usage	deps/pmdk/src/test/libpmempool_api_win/libpmempool_test_win.c	/^print_usage(wchar_t *name)$/;"	f	file:
print_usage	deps/pmdk/src/test/libpmempool_feature/libpmempool_feature.c	/^print_usage(const char *name)$/;"	f	file:
print_usage	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^print_usage(char *name)$/;"	f	file:
print_usage	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	/^print_usage(void)$/;"	f	file:
print_usage	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^print_usage(void)$/;"	f	file:
print_usage	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	/^print_usage(void)$/;"	f	file:
print_usage	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^print_usage(const char *name)$/;"	f	file:
print_usage	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^print_usage(char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/test/tools/pmemwrite/write.c	/^print_usage(char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/tools/daxio/daxio.c	/^print_usage(void)$/;"	f	file:
print_usage	deps/pmdk/src/tools/pmempool/check.c	/^print_usage(const char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/tools/pmempool/create.c	/^print_usage(const char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/tools/pmempool/dump.c	/^print_usage(const char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/tools/pmempool/feature.c	/^print_usage(const char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/tools/pmempool/info.c	/^print_usage(const char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/tools/pmempool/pmempool.c	/^print_usage(const char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/tools/pmempool/rm.c	/^print_usage(const char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/tools/pmempool/synchronize.c	/^print_usage(const char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/tools/pmempool/transform.c	/^print_usage(const char *appname)$/;"	f	file:
print_usage	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^print_usage(const char *name)$/;"	f	file:
print_uuid	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^print_uuid(uuid_t uuid)$/;"	f	file:
print_verbose	deps/pmdk/src/test/unittest/futils.py	/^    def print_verbose(self, msg):$/;"	m	class:Message
print_version	deps/lua/src/lua.c	/^static void print_version (void) {$/;"	f	file:
print_version	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^print_version(char *appname)$/;"	f	file:
print_version	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^print_version(char *appname)$/;"	f	file:
print_version	deps/pmdk/src/tools/daxio/daxio.c	/^print_version(void)$/;"	f	file:
print_version	deps/pmdk/src/tools/pmempool/check.c	/^print_version(const char *appname)$/;"	f	file:
print_version	deps/pmdk/src/tools/pmempool/create.c	/^print_version(const char *appname)$/;"	f	file:
print_version	deps/pmdk/src/tools/pmempool/dump.c	/^print_version(const char *appname)$/;"	f	file:
print_version	deps/pmdk/src/tools/pmempool/feature.c	/^print_version(const char *appname)$/;"	f	file:
print_version	deps/pmdk/src/tools/pmempool/info.c	/^print_version(const char *appname)$/;"	f	file:
print_version	deps/pmdk/src/tools/pmempool/pmempool.c	/^print_version(const char *appname)$/;"	f	file:
print_version	deps/pmdk/src/tools/pmempool/synchronize.c	/^print_version(const char *appname)$/;"	f	file:
print_version	deps/pmdk/src/tools/pmempool/transform.c	/^print_version(const char *appname)$/;"	f	file:
print_version	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^print_version(void)$/;"	f	file:
printf	deps/lua/test/printf.lua	/^function printf(...)$/;"	f
printit	deps/pmdk/src/examples/libpmemlog/manpage.c	/^printit(const void *buf, size_t len, void *arg)$/;"	f	file:
printit	deps/pmdk/src/test/log_basic/log_basic.c	/^printit(const void *buf, size_t len, void *arg)$/;"	f	file:
printit	deps/pmdk/src/test/log_recovery/log_recovery.c	/^printit(const void *buf, size_t len, void *arg)$/;"	f	file:
printlog	deps/pmdk/src/examples/libpmemlog/logfile/printlog.c	/^printlog(const void *buf, size_t len, void *arg)$/;"	f	file:
priority	deps/lua/src/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon36	file:
priv	deps/pmdk/src/benchmarks/benchmark.hpp	/^	void *priv;		       \/* worker's private data *\/$/;"	m	struct:worker_info
priv	deps/pmdk/src/benchmarks/pmembench.cpp	/^	void *priv;$/;"	m	struct:benchmark	file:
priv	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	void *priv;$/;"	m	struct:datastore	file:
privdata	deps/hiredis/async.h	/^    void *privdata;$/;"	m	struct:redisCallback
privdata	deps/hiredis/dict.h	/^    void *privdata;$/;"	m	struct:dict
privdata	deps/hiredis/hiredis.h	/^    void *privdata; \/* user-settable arbitrary field *\/$/;"	m	struct:redisReadTask
privdata	deps/hiredis/hiredis.h	/^    void *privdata;$/;"	m	struct:redisReader
privdata	src/dict.h	/^    void *privdata;$/;"	m	struct:dict
prng_lg_range_u32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	413;"	d
prng_lg_range_u32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	413;"	d
prng_lg_range_u32	deps/jemalloc/include/jemalloc/internal/prng.h	/^prng_lg_range_u32(uint32_t *state, unsigned lg_range, bool atomic)$/;"	f
prng_lg_range_u64	deps/jemalloc/include/jemalloc/internal/private_namespace.h	414;"	d
prng_lg_range_u64	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	414;"	d
prng_lg_range_u64	deps/jemalloc/include/jemalloc/internal/prng.h	/^prng_lg_range_u64(uint64_t *state, unsigned lg_range)$/;"	f
prng_lg_range_zu	deps/jemalloc/include/jemalloc/internal/private_namespace.h	415;"	d
prng_lg_range_zu	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	415;"	d
prng_lg_range_zu	deps/jemalloc/include/jemalloc/internal/prng.h	/^prng_lg_range_zu(size_t *state, unsigned lg_range, bool atomic)$/;"	f
prng_range_u32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	416;"	d
prng_range_u32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	416;"	d
prng_range_u32	deps/jemalloc/include/jemalloc/internal/prng.h	/^prng_range_u32(uint32_t *state, uint32_t range, bool atomic)$/;"	f
prng_range_u64	deps/jemalloc/include/jemalloc/internal/private_namespace.h	417;"	d
prng_range_u64	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	417;"	d
prng_range_u64	deps/jemalloc/include/jemalloc/internal/prng.h	/^prng_range_u64(uint64_t *state, uint64_t range)$/;"	f
prng_range_zu	deps/jemalloc/include/jemalloc/internal/private_namespace.h	418;"	d
prng_range_zu	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	418;"	d
prng_range_zu	deps/jemalloc/include/jemalloc/internal/prng.h	/^prng_range_zu(size_t *state, size_t range, bool atomic)$/;"	f
prng_state	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	uint64_t	prng_state;$/;"	m	struct:ckh_s
prng_state	deps/jemalloc/include/jemalloc/internal/prof.h	/^	uint64_t		prng_state;$/;"	m	struct:prof_tdata_s
prng_state_next_u32	deps/jemalloc/include/jemalloc/internal/private_namespace.h	419;"	d
prng_state_next_u32	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	419;"	d
prng_state_next_u32	deps/jemalloc/include/jemalloc/internal/prng.h	/^prng_state_next_u32(uint32_t state)$/;"	f
prng_state_next_u64	deps/jemalloc/include/jemalloc/internal/private_namespace.h	420;"	d
prng_state_next_u64	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	420;"	d
prng_state_next_u64	deps/jemalloc/include/jemalloc/internal/prng.h	/^prng_state_next_u64(uint64_t state)$/;"	f
prng_state_next_zu	deps/jemalloc/include/jemalloc/internal/private_namespace.h	421;"	d
prng_state_next_zu	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	421;"	d
prng_state_next_zu	deps/jemalloc/include/jemalloc/internal/prng.h	/^prng_state_next_zu(size_t state)$/;"	f
probe_distance	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^probe_distance(const struct hashmap_rp *hashmap, uint64_t hash_key,$/;"	f	file:
proc	src/server.h	/^    redisCommandProc *proc;$/;"	m	struct:redisCommand
process	src/redis-check-aof.c	/^off_t process(FILE *fp) {$/;"	f
processBulkItem	deps/hiredis/hiredis.c	/^static int processBulkItem(redisReader *r) {$/;"	f	file:
processClientsWaitingReplicas	src/replication.c	/^void processClientsWaitingReplicas(void) {$/;"	f
processCommand	src/server.c	/^int processCommand(client *c) {$/;"	f
processEventsWhileBlocked	src/networking.c	/^int processEventsWhileBlocked(void) {$/;"	f
processInlineBuffer	src/networking.c	/^int processInlineBuffer(client *c) {$/;"	f
processInputBuffer	src/networking.c	/^void processInputBuffer(client *c) {$/;"	f
processItem	deps/hiredis/hiredis.c	/^static int processItem(redisReader *r) {$/;"	f	file:
processLineItem	deps/hiredis/hiredis.c	/^static int processLineItem(redisReader *r) {$/;"	f	file:
processMultiBulkItem	deps/hiredis/hiredis.c	/^static int processMultiBulkItem(redisReader *r) {$/;"	f	file:
processMultibulkBuffer	src/networking.c	/^int processMultibulkBuffer(client *c) {$/;"	f
processTimeEvents	src/ae.c	/^static int processTimeEvents(aeEventLoop *eventLoop) {$/;"	f	file:
processUnblockedClients	src/blocked.c	/^void processUnblockedClients(void) {$/;"	f
process_aliens	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^process_aliens(void)$/;"	f	file:
process_aliens	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^process_aliens(PMEMobjpool *pop, TOID(struct root) r)$/;"	f	file:
process_bullets	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^process_bullets(void)$/;"	f	file:
process_bullets	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^process_bullets(PMEMobjpool *pop, TOID(struct root) r, struct state *sp)$/;"	f	file:
process_chunk	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^process_chunk(const void *buf, size_t len, void *arg)$/;"	f	file:
process_chunk	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^process_chunk(const void *buf, size_t len, void *arg)$/;"	f	file:
process_chunk	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^process_chunk(const void *buf, size_t len, void *arg)$/;"	f	file:
process_chunk	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^process_chunk(const void *buf, size_t len, void *arg)$/;"	f	file:
process_collision	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^process_collision(PMEMobjpool *pop, TOID(struct root) r,$/;"	f	file:
process_indent	deps/pmdk/utils/cstyle	/^process_indent($)$/;"	s
process_is_running	tests/cluster/tests/04-resharding.tcl	/^proc process_is_running {pid} {$/;"	p
process_player	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^process_player(int input)$/;"	f	file:
process_player	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^process_player(PMEMobjpool *pop, TOID(struct root) r, int input)$/;"	f	file:
process_stars	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^process_stars(PMEMobjpool *pop, TOID(struct root) r)$/;"	f	file:
process_state	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^enum process_state {$/;"	g	file:
processed_bytes	src/rio.h	/^    size_t processed_bytes;$/;"	m	struct:_rio
prof_accumbytes	deps/jemalloc/include/jemalloc/internal/arena.h	/^	uint64_t		prof_accumbytes;$/;"	m	struct:arena_s
prof_accumbytes	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	uint64_t	prof_accumbytes;\/* Cleared after arena_prof_accum(). *\/$/;"	m	struct:tcache_s
prof_active	deps/jemalloc/include/jemalloc/internal/private_namespace.h	422;"	d
prof_active	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	422;"	d
prof_active	deps/jemalloc/src/prof.c	/^bool			prof_active;$/;"	v
prof_active_ctl	deps/jemalloc/src/ctl.c	/^prof_active_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
prof_active_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	423;"	d
prof_active_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	423;"	d
prof_active_get	deps/jemalloc/src/prof.c	/^prof_active_get(tsdn_t *tsdn)$/;"	f
prof_active_get_unlocked	deps/jemalloc/include/jemalloc/internal/private_namespace.h	424;"	d
prof_active_get_unlocked	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	424;"	d
prof_active_get_unlocked	deps/jemalloc/include/jemalloc/internal/prof.h	/^prof_active_get_unlocked(void)$/;"	f
prof_active_mtx	deps/jemalloc/src/prof.c	/^static malloc_mutex_t	prof_active_mtx;$/;"	v	file:
prof_active_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	425;"	d
prof_active_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	425;"	d
prof_active_set	deps/jemalloc/src/prof.c	/^prof_active_set(tsdn_t *tsdn, bool active)$/;"	f
prof_alloc_prep	deps/jemalloc/include/jemalloc/internal/private_namespace.h	426;"	d
prof_alloc_prep	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	426;"	d
prof_alloc_prep	deps/jemalloc/include/jemalloc/internal/prof.h	/^prof_alloc_prep(tsd_t *tsd, size_t usize, bool prof_active, bool update)$/;"	f
prof_alloc_rollback	deps/jemalloc/include/jemalloc/internal/private_namespace.h	427;"	d
prof_alloc_rollback	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	427;"	d
prof_alloc_rollback	deps/jemalloc/src/prof.c	/^prof_alloc_rollback(tsd_t *tsd, prof_tctx_t *tctx, bool updated)$/;"	f
prof_backtrace	deps/jemalloc/include/jemalloc/internal/private_namespace.h	428;"	d
prof_backtrace	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	428;"	d
prof_backtrace	deps/jemalloc/src/prof.c	/^prof_backtrace(prof_bt_t *bt)$/;"	f
prof_boot0	deps/jemalloc/include/jemalloc/internal/private_namespace.h	429;"	d
prof_boot0	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	429;"	d
prof_boot0	deps/jemalloc/src/prof.c	/^prof_boot0(void)$/;"	f
prof_boot1	deps/jemalloc/include/jemalloc/internal/private_namespace.h	430;"	d
prof_boot1	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	430;"	d
prof_boot1	deps/jemalloc/src/prof.c	/^prof_boot1(void)$/;"	f
prof_boot2	deps/jemalloc/include/jemalloc/internal/private_namespace.h	431;"	d
prof_boot2	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	431;"	d
prof_boot2	deps/jemalloc/src/prof.c	/^prof_boot2(tsd_t *tsd)$/;"	f
prof_booted	deps/jemalloc/src/prof.c	/^static bool		prof_booted = false;$/;"	v	file:
prof_bt_count	deps/jemalloc/include/jemalloc/internal/private_namespace.h	432;"	d
prof_bt_count	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	432;"	d
prof_bt_count	deps/jemalloc/src/prof.c	/^prof_bt_count(void)$/;"	f
prof_bt_hash	deps/jemalloc/src/prof.c	/^prof_bt_hash(const void *key, size_t r_hash[2])$/;"	f	file:
prof_bt_keycomp	deps/jemalloc/src/prof.c	/^prof_bt_keycomp(const void *k1, const void *k2)$/;"	f	file:
prof_bt_s	deps/jemalloc/include/jemalloc/internal/prof.h	/^struct prof_bt_s {$/;"	s
prof_bt_t	deps/jemalloc/include/jemalloc/internal/prof.h	/^typedef struct prof_bt_s prof_bt_t;$/;"	t	typeref:struct:prof_bt_s
prof_cnt_s	deps/jemalloc/include/jemalloc/internal/prof.h	/^struct prof_cnt_s {$/;"	s
prof_cnt_t	deps/jemalloc/include/jemalloc/internal/prof.h	/^typedef struct prof_cnt_s prof_cnt_t;$/;"	t	typeref:struct:prof_cnt_s
prof_dump	deps/jemalloc/src/prof.c	/^prof_dump(tsd_t *tsd, bool propagate_err, const char *filename, bool leakcheck)$/;"	f	file:
prof_dump_buf	deps/jemalloc/src/prof.c	/^static char		prof_dump_buf[$/;"	v	file:
prof_dump_buf_end	deps/jemalloc/src/prof.c	/^static size_t		prof_dump_buf_end;$/;"	v	file:
prof_dump_close	deps/jemalloc/src/prof.c	/^prof_dump_close(bool propagate_err)$/;"	f	file:
prof_dump_ctl	deps/jemalloc/src/ctl.c	/^prof_dump_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
prof_dump_fd	deps/jemalloc/src/prof.c	/^static int		prof_dump_fd;$/;"	v	file:
prof_dump_filename	deps/jemalloc/src/prof.c	/^prof_dump_filename(char *filename, char v, uint64_t vseq)$/;"	f	file:
prof_dump_flush	deps/jemalloc/src/prof.c	/^prof_dump_flush(bool propagate_err)$/;"	f	file:
prof_dump_gctx	deps/jemalloc/src/prof.c	/^prof_dump_gctx(tsdn_t *tsdn, bool propagate_err, prof_gctx_t *gctx,$/;"	f	file:
prof_dump_gctx_prep	deps/jemalloc/src/prof.c	/^prof_dump_gctx_prep(tsdn_t *tsdn, prof_gctx_t *gctx, prof_gctx_tree_t *gctxs)$/;"	f	file:
prof_dump_header	deps/jemalloc/include/jemalloc/internal/private_namespace.h	433;"	d
prof_dump_header	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	433;"	d
prof_dump_header	deps/jemalloc/src/prof.c	/^prof_dump_header(tsdn_t *tsdn, bool propagate_err, const prof_cnt_t *cnt_all)$/;"	f	file:
prof_dump_header	deps/jemalloc/src/prof.c	/^prof_dump_header_t *prof_dump_header = JEMALLOC_N(prof_dump_header_impl);$/;"	v
prof_dump_header	deps/jemalloc/src/prof.c	1315;"	d	file:
prof_dump_header	deps/jemalloc/src/prof.c	1316;"	d	file:
prof_dump_header	deps/jemalloc/src/prof.c	1337;"	d	file:
prof_dump_header	deps/jemalloc/src/prof.c	1338;"	d	file:
prof_dump_header_intercept	deps/jemalloc/test/unit/prof_reset.c	/^prof_dump_header_intercept(tsdn_t *tsdn, bool propagate_err,$/;"	f	file:
prof_dump_header_intercepted	deps/jemalloc/test/unit/prof_reset.c	/^bool prof_dump_header_intercepted = false;$/;"	v
prof_dump_header_t	deps/jemalloc/include/jemalloc/internal/prof.h	/^typedef bool (prof_dump_header_t)(tsdn_t *, bool, const prof_cnt_t *);$/;"	t
prof_dump_iseq	deps/jemalloc/src/prof.c	/^static uint64_t		prof_dump_iseq;$/;"	v	file:
prof_dump_maps	deps/jemalloc/src/prof.c	/^prof_dump_maps(bool propagate_err)$/;"	f	file:
prof_dump_mseq	deps/jemalloc/src/prof.c	/^static uint64_t		prof_dump_mseq;$/;"	v	file:
prof_dump_mtx	deps/jemalloc/src/prof.c	/^static malloc_mutex_t	prof_dump_mtx;$/;"	v	file:
prof_dump_open	deps/jemalloc/include/jemalloc/internal/private_namespace.h	434;"	d
prof_dump_open	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	434;"	d
prof_dump_open	deps/jemalloc/src/prof.c	/^prof_dump_open(bool propagate_err, const char *filename)$/;"	f	file:
prof_dump_open	deps/jemalloc/src/prof.c	/^prof_dump_open_t *prof_dump_open = JEMALLOC_N(prof_dump_open_impl);$/;"	v
prof_dump_open	deps/jemalloc/src/prof.c	934;"	d	file:
prof_dump_open	deps/jemalloc/src/prof.c	935;"	d	file:
prof_dump_open	deps/jemalloc/src/prof.c	953;"	d	file:
prof_dump_open	deps/jemalloc/src/prof.c	954;"	d	file:
prof_dump_open_intercept	deps/jemalloc/test/unit/prof_accum.c	/^prof_dump_open_intercept(bool propagate_err, const char *filename)$/;"	f	file:
prof_dump_open_intercept	deps/jemalloc/test/unit/prof_gdump.c	/^prof_dump_open_intercept(bool propagate_err, const char *filename)$/;"	f	file:
prof_dump_open_intercept	deps/jemalloc/test/unit/prof_idump.c	/^prof_dump_open_intercept(bool propagate_err, const char *filename)$/;"	f	file:
prof_dump_open_intercept	deps/jemalloc/test/unit/prof_reset.c	/^prof_dump_open_intercept(bool propagate_err, const char *filename)$/;"	f	file:
prof_dump_open_t	deps/jemalloc/include/jemalloc/internal/prof.h	/^typedef int (prof_dump_open_t)(bool, const char *);$/;"	t
prof_dump_printf	deps/jemalloc/src/prof.c	/^prof_dump_printf(bool propagate_err, const char *format, ...)$/;"	f	file:
prof_dump_seq	deps/jemalloc/src/prof.c	/^static uint64_t		prof_dump_seq;$/;"	v	file:
prof_dump_seq_mtx	deps/jemalloc/src/prof.c	/^static malloc_mutex_t	prof_dump_seq_mtx;$/;"	v	file:
prof_dump_useq	deps/jemalloc/src/prof.c	/^static uint64_t		prof_dump_useq;$/;"	v	file:
prof_dump_write	deps/jemalloc/src/prof.c	/^prof_dump_write(bool propagate_err, const char *s)$/;"	f	file:
prof_enter	deps/jemalloc/src/prof.c	/^prof_enter(tsd_t *tsd, prof_tdata_t *tdata)$/;"	f
prof_fdump	deps/jemalloc/src/prof.c	/^prof_fdump(void)$/;"	f	file:
prof_free	deps/jemalloc/include/jemalloc/internal/private_namespace.h	435;"	d
prof_free	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	435;"	d
prof_free	deps/jemalloc/include/jemalloc/internal/prof.h	/^prof_free(tsd_t *tsd, const void *ptr, size_t usize)$/;"	f
prof_free_sampled_object	deps/jemalloc/include/jemalloc/internal/private_namespace.h	436;"	d
prof_free_sampled_object	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	436;"	d
prof_free_sampled_object	deps/jemalloc/src/prof.c	/^prof_free_sampled_object(tsd_t *tsd, size_t usize, prof_tctx_t *tctx)$/;"	f
prof_gctx_comp	deps/jemalloc/src/prof.c	/^prof_gctx_comp(const prof_gctx_t *a, const prof_gctx_t *b)$/;"	f
prof_gctx_create	deps/jemalloc/src/prof.c	/^prof_gctx_create(tsdn_t *tsdn, prof_bt_t *bt)$/;"	f	file:
prof_gctx_dump_iter	deps/jemalloc/src/prof.c	/^prof_gctx_dump_iter(prof_gctx_tree_t *gctxs, prof_gctx_t *gctx, void *opaque)$/;"	f	file:
prof_gctx_dump_iter_arg_s	deps/jemalloc/src/prof.c	/^struct prof_gctx_dump_iter_arg_s {$/;"	s	file:
prof_gctx_finish	deps/jemalloc/src/prof.c	/^prof_gctx_finish(tsd_t *tsd, prof_gctx_tree_t *gctxs)$/;"	f	file:
prof_gctx_merge_iter	deps/jemalloc/src/prof.c	/^prof_gctx_merge_iter(prof_gctx_tree_t *gctxs, prof_gctx_t *gctx, void *opaque)$/;"	f	file:
prof_gctx_merge_iter_arg_s	deps/jemalloc/src/prof.c	/^struct prof_gctx_merge_iter_arg_s {$/;"	s	file:
prof_gctx_mutex_choose	deps/jemalloc/src/prof.c	/^prof_gctx_mutex_choose(void)$/;"	f	file:
prof_gctx_s	deps/jemalloc/include/jemalloc/internal/prof.h	/^struct prof_gctx_s {$/;"	s
prof_gctx_should_destroy	deps/jemalloc/src/prof.c	/^prof_gctx_should_destroy(prof_gctx_t *gctx)$/;"	f	file:
prof_gctx_t	deps/jemalloc/include/jemalloc/internal/prof.h	/^typedef struct prof_gctx_s prof_gctx_t;$/;"	t	typeref:struct:prof_gctx_s
prof_gctx_tree_t	deps/jemalloc/include/jemalloc/internal/prof.h	/^typedef rb_tree(prof_gctx_t) prof_gctx_tree_t;$/;"	t
prof_gctx_try_destroy	deps/jemalloc/src/prof.c	/^prof_gctx_try_destroy(tsd_t *tsd, prof_tdata_t *tdata_self, prof_gctx_t *gctx,$/;"	f	file:
prof_gdump	deps/jemalloc/include/jemalloc/internal/private_namespace.h	437;"	d
prof_gdump	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	437;"	d
prof_gdump	deps/jemalloc/src/prof.c	/^prof_gdump(tsdn_t *tsdn)$/;"	f
prof_gdump_ctl	deps/jemalloc/src/ctl.c	/^prof_gdump_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
prof_gdump_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	438;"	d
prof_gdump_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	438;"	d
prof_gdump_get	deps/jemalloc/src/prof.c	/^prof_gdump_get(tsdn_t *tsdn)$/;"	f
prof_gdump_get_unlocked	deps/jemalloc/include/jemalloc/internal/private_namespace.h	439;"	d
prof_gdump_get_unlocked	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	439;"	d
prof_gdump_get_unlocked	deps/jemalloc/include/jemalloc/internal/prof.h	/^prof_gdump_get_unlocked(void)$/;"	f
prof_gdump_mtx	deps/jemalloc/src/prof.c	/^static malloc_mutex_t	prof_gdump_mtx;$/;"	v	file:
prof_gdump_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	440;"	d
prof_gdump_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	440;"	d
prof_gdump_set	deps/jemalloc/src/prof.c	/^prof_gdump_set(tsdn_t *tsdn, bool gdump)$/;"	f
prof_gdump_val	deps/jemalloc/include/jemalloc/internal/private_namespace.h	441;"	d
prof_gdump_val	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	441;"	d
prof_gdump_val	deps/jemalloc/src/prof.c	/^bool			prof_gdump_val;$/;"	v
prof_getpid	deps/jemalloc/src/prof.c	/^prof_getpid(void)$/;"	f	file:
prof_idump	deps/jemalloc/include/jemalloc/internal/private_namespace.h	442;"	d
prof_idump	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	442;"	d
prof_idump	deps/jemalloc/src/prof.c	/^prof_idump(tsdn_t *tsdn)$/;"	f
prof_interval	deps/jemalloc/include/jemalloc/internal/private_namespace.h	443;"	d
prof_interval	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	443;"	d
prof_interval	deps/jemalloc/src/prof.c	/^uint64_t	prof_interval = 0;$/;"	v
prof_leakcheck	deps/jemalloc/src/prof.c	/^prof_leakcheck(const prof_cnt_t *cnt_all, size_t leak_ngctx,$/;"	f	file:
prof_leave	deps/jemalloc/src/prof.c	/^prof_leave(tsd_t *tsd, prof_tdata_t *tdata)$/;"	f
prof_lookup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	444;"	d
prof_lookup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	444;"	d
prof_lookup	deps/jemalloc/src/prof.c	/^prof_lookup(tsd_t *tsd, prof_bt_t *bt)$/;"	f
prof_lookup_global	deps/jemalloc/src/prof.c	/^prof_lookup_global(tsd_t *tsd, prof_bt_t *bt, prof_tdata_t *tdata,$/;"	f	file:
prof_malloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	445;"	d
prof_malloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	445;"	d
prof_malloc	deps/jemalloc/include/jemalloc/internal/prof.h	/^prof_malloc(tsdn_t *tsdn, const void *ptr, size_t usize, prof_tctx_t *tctx)$/;"	f
prof_malloc_sample_object	deps/jemalloc/include/jemalloc/internal/private_namespace.h	446;"	d
prof_malloc_sample_object	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	446;"	d
prof_malloc_sample_object	deps/jemalloc/src/prof.c	/^prof_malloc_sample_object(tsdn_t *tsdn, const void *ptr, size_t usize,$/;"	f
prof_mdump	deps/jemalloc/include/jemalloc/internal/private_namespace.h	447;"	d
prof_mdump	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	447;"	d
prof_mdump	deps/jemalloc/src/prof.c	/^prof_mdump(tsd_t *tsd, const char *filename)$/;"	f
prof_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t	prof_node[] = {$/;"	v	file:
prof_open_maps	deps/jemalloc/src/prof.c	/^prof_open_maps(const char *format, ...)$/;"	f	file:
prof_postfork_child	deps/jemalloc/include/jemalloc/internal/private_namespace.h	448;"	d
prof_postfork_child	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	448;"	d
prof_postfork_child	deps/jemalloc/src/prof.c	/^prof_postfork_child(tsdn_t *tsdn)$/;"	f
prof_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_namespace.h	449;"	d
prof_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	449;"	d
prof_postfork_parent	deps/jemalloc/src/prof.c	/^prof_postfork_parent(tsdn_t *tsdn)$/;"	f
prof_prefork0	deps/jemalloc/include/jemalloc/internal/private_namespace.h	450;"	d
prof_prefork0	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	450;"	d
prof_prefork0	deps/jemalloc/src/prof.c	/^prof_prefork0(tsdn_t *tsdn)$/;"	f
prof_prefork1	deps/jemalloc/include/jemalloc/internal/private_namespace.h	451;"	d
prof_prefork1	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	451;"	d
prof_prefork1	deps/jemalloc/src/prof.c	/^prof_prefork1(tsdn_t *tsdn)$/;"	f
prof_realloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	452;"	d
prof_realloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	452;"	d
prof_realloc	deps/jemalloc/include/jemalloc/internal/prof.h	/^prof_realloc(tsd_t *tsd, const void *ptr, size_t usize, prof_tctx_t *tctx,$/;"	f
prof_reset	deps/jemalloc/include/jemalloc/internal/private_namespace.h	453;"	d
prof_reset	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	453;"	d
prof_reset	deps/jemalloc/src/prof.c	/^prof_reset(tsd_t *tsd, size_t lg_sample)$/;"	f
prof_reset_ctl	deps/jemalloc/src/ctl.c	/^prof_reset_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
prof_sample_accum_update	deps/jemalloc/include/jemalloc/internal/private_namespace.h	454;"	d
prof_sample_accum_update	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	454;"	d
prof_sample_accum_update	deps/jemalloc/include/jemalloc/internal/prof.h	/^prof_sample_accum_update(tsd_t *tsd, size_t usize, bool update,$/;"	f
prof_sample_threshold_update	deps/jemalloc/include/jemalloc/internal/private_namespace.h	455;"	d
prof_sample_threshold_update	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	455;"	d
prof_sample_threshold_update	deps/jemalloc/src/prof.c	/^prof_sample_threshold_update(prof_tdata_t *tdata)$/;"	f
prof_sampling_probe	deps/jemalloc/test/unit/prof_active.c	94;"	d	file:
prof_sampling_probe_impl	deps/jemalloc/test/unit/prof_active.c	/^prof_sampling_probe_impl(bool expect_sample, const char *func, int line)$/;"	f	file:
prof_tctx	deps/jemalloc/include/jemalloc/internal/arena.h	/^			prof_tctx_t		*prof_tctx;$/;"	m	union:arena_chunk_map_misc_s::__anon5::__anon6
prof_tctx_comp	deps/jemalloc/src/prof.c	/^prof_tctx_comp(const prof_tctx_t *a, const prof_tctx_t *b)$/;"	f
prof_tctx_destroy	deps/jemalloc/src/prof.c	/^prof_tctx_destroy(tsd_t *tsd, prof_tctx_t *tctx)$/;"	f	file:
prof_tctx_dump_iter	deps/jemalloc/src/prof.c	/^prof_tctx_dump_iter(prof_tctx_tree_t *tctxs, prof_tctx_t *tctx, void *opaque)$/;"	f	file:
prof_tctx_dump_iter_arg_s	deps/jemalloc/src/prof.c	/^struct prof_tctx_dump_iter_arg_s {$/;"	s	file:
prof_tctx_finish_iter	deps/jemalloc/src/prof.c	/^prof_tctx_finish_iter(prof_tctx_tree_t *tctxs, prof_tctx_t *tctx, void *arg)$/;"	f	file:
prof_tctx_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	456;"	d
prof_tctx_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	456;"	d
prof_tctx_get	deps/jemalloc/include/jemalloc/internal/prof.h	/^prof_tctx_get(tsdn_t *tsdn, const void *ptr)$/;"	f
prof_tctx_merge_gctx	deps/jemalloc/src/prof.c	/^prof_tctx_merge_gctx(tsdn_t *tsdn, prof_tctx_t *tctx, prof_gctx_t *gctx)$/;"	f	file:
prof_tctx_merge_iter	deps/jemalloc/src/prof.c	/^prof_tctx_merge_iter(prof_tctx_tree_t *tctxs, prof_tctx_t *tctx, void *arg)$/;"	f	file:
prof_tctx_merge_tdata	deps/jemalloc/src/prof.c	/^prof_tctx_merge_tdata(tsdn_t *tsdn, prof_tctx_t *tctx, prof_tdata_t *tdata)$/;"	f	file:
prof_tctx_pun	deps/jemalloc/include/jemalloc/internal/arena.h	/^			void			*prof_tctx_pun;$/;"	m	union:arena_chunk_map_misc_s::__anon5::__anon6
prof_tctx_reset	deps/jemalloc/include/jemalloc/internal/private_namespace.h	457;"	d
prof_tctx_reset	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	457;"	d
prof_tctx_reset	deps/jemalloc/include/jemalloc/internal/prof.h	/^prof_tctx_reset(tsdn_t *tsdn, const void *ptr, size_t usize, const void *old_ptr,$/;"	f
prof_tctx_s	deps/jemalloc/include/jemalloc/internal/prof.h	/^struct prof_tctx_s {$/;"	s
prof_tctx_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	458;"	d
prof_tctx_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	458;"	d
prof_tctx_set	deps/jemalloc/include/jemalloc/internal/prof.h	/^prof_tctx_set(tsdn_t *tsdn, const void *ptr, size_t usize, prof_tctx_t *tctx)$/;"	f
prof_tctx_should_destroy	deps/jemalloc/src/prof.c	/^prof_tctx_should_destroy(tsdn_t *tsdn, prof_tctx_t *tctx)$/;"	f	file:
prof_tctx_state_dumping	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_tctx_state_dumping,$/;"	e	enum:__anon12
prof_tctx_state_initializing	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_tctx_state_initializing,$/;"	e	enum:__anon12
prof_tctx_state_nominal	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_tctx_state_nominal,$/;"	e	enum:__anon12
prof_tctx_state_purgatory	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_tctx_state_purgatory \/* Dumper must finish destroying. *\/$/;"	e	enum:__anon12
prof_tctx_state_t	deps/jemalloc/include/jemalloc/internal/prof.h	/^} prof_tctx_state_t;$/;"	t	typeref:enum:__anon12
prof_tctx_t	deps/jemalloc/include/jemalloc/internal/prof.h	/^typedef struct prof_tctx_s prof_tctx_t;$/;"	t	typeref:struct:prof_tctx_s
prof_tctx_tree_t	deps/jemalloc/include/jemalloc/internal/prof.h	/^typedef rb_tree(prof_tctx_t) prof_tctx_tree_t;$/;"	t
prof_tdata_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	459;"	d
prof_tdata_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	459;"	d
prof_tdata_cleanup	deps/jemalloc/src/prof.c	/^prof_tdata_cleanup(tsd_t *tsd)$/;"	f
prof_tdata_comp	deps/jemalloc/src/prof.c	/^prof_tdata_comp(const prof_tdata_t *a, const prof_tdata_t *b)$/;"	f
prof_tdata_count	deps/jemalloc/include/jemalloc/internal/private_namespace.h	460;"	d
prof_tdata_count	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	460;"	d
prof_tdata_count	deps/jemalloc/src/prof.c	/^prof_tdata_count(void)$/;"	f
prof_tdata_count_iter	deps/jemalloc/src/prof.c	/^prof_tdata_count_iter(prof_tdata_tree_t *tdatas, prof_tdata_t *tdata, void *arg)$/;"	f	file:
prof_tdata_destroy	deps/jemalloc/src/prof.c	/^prof_tdata_destroy(tsd_t *tsd, prof_tdata_t *tdata, bool even_if_attached)$/;"	f	file:
prof_tdata_destroy_locked	deps/jemalloc/src/prof.c	/^prof_tdata_destroy_locked(tsd_t *tsd, prof_tdata_t *tdata,$/;"	f	file:
prof_tdata_detach	deps/jemalloc/src/prof.c	/^prof_tdata_detach(tsd_t *tsd, prof_tdata_t *tdata)$/;"	f	file:
prof_tdata_dump_iter	deps/jemalloc/src/prof.c	/^prof_tdata_dump_iter(prof_tdata_tree_t *tdatas, prof_tdata_t *tdata, void *arg)$/;"	f	file:
prof_tdata_expire	deps/jemalloc/src/prof.c	/^prof_tdata_expire(tsdn_t *tsdn, prof_tdata_t *tdata)$/;"	f	file:
prof_tdata_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	461;"	d
prof_tdata_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	461;"	d
prof_tdata_get	deps/jemalloc/include/jemalloc/internal/prof.h	/^prof_tdata_get(tsd_t *tsd, bool create)$/;"	f
prof_tdata_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	462;"	d
prof_tdata_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	462;"	d
prof_tdata_init	deps/jemalloc/src/prof.c	/^prof_tdata_init(tsd_t *tsd)$/;"	f
prof_tdata_init_impl	deps/jemalloc/src/prof.c	/^prof_tdata_init_impl(tsd_t *tsd, uint64_t thr_uid, uint64_t thr_discrim,$/;"	f	file:
prof_tdata_merge_iter	deps/jemalloc/src/prof.c	/^prof_tdata_merge_iter(prof_tdata_tree_t *tdatas, prof_tdata_t *tdata,$/;"	f	file:
prof_tdata_merge_iter_arg_s	deps/jemalloc/src/prof.c	/^struct prof_tdata_merge_iter_arg_s {$/;"	s	file:
prof_tdata_mutex_choose	deps/jemalloc/src/prof.c	/^prof_tdata_mutex_choose(uint64_t thr_uid)$/;"	f	file:
prof_tdata_reinit	deps/jemalloc/include/jemalloc/internal/private_namespace.h	463;"	d
prof_tdata_reinit	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	463;"	d
prof_tdata_reinit	deps/jemalloc/src/prof.c	/^prof_tdata_reinit(tsd_t *tsd, prof_tdata_t *tdata)$/;"	f
prof_tdata_reset_iter	deps/jemalloc/src/prof.c	/^prof_tdata_reset_iter(prof_tdata_tree_t *tdatas, prof_tdata_t *tdata, void *arg)$/;"	f	file:
prof_tdata_s	deps/jemalloc/include/jemalloc/internal/prof.h	/^struct prof_tdata_s {$/;"	s
prof_tdata_should_destroy	deps/jemalloc/src/prof.c	/^prof_tdata_should_destroy(tsdn_t *tsdn, prof_tdata_t *tdata,$/;"	f	file:
prof_tdata_should_destroy_unlocked	deps/jemalloc/src/prof.c	/^prof_tdata_should_destroy_unlocked(prof_tdata_t *tdata, bool even_if_attached)$/;"	f	file:
prof_tdata_t	deps/jemalloc/include/jemalloc/internal/prof.h	/^typedef struct prof_tdata_s prof_tdata_t;$/;"	t	typeref:struct:prof_tdata_s
prof_tdata_tree_t	deps/jemalloc/include/jemalloc/internal/prof.h	/^typedef rb_tree(prof_tdata_t) prof_tdata_tree_t;$/;"	t
prof_thr_uid_alloc	deps/jemalloc/src/prof.c	/^prof_thr_uid_alloc(tsdn_t *tsdn)$/;"	f
prof_thread_active_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	464;"	d
prof_thread_active_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	464;"	d
prof_thread_active_get	deps/jemalloc/src/prof.c	/^prof_thread_active_get(tsd_t *tsd)$/;"	f
prof_thread_active_init	deps/jemalloc/src/prof.c	/^static bool		prof_thread_active_init;$/;"	v	file:
prof_thread_active_init_ctl	deps/jemalloc/src/ctl.c	/^prof_thread_active_init_ctl(tsd_t *tsd, const size_t *mib, size_t miblen,$/;"	f	file:
prof_thread_active_init_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	465;"	d
prof_thread_active_init_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	465;"	d
prof_thread_active_init_get	deps/jemalloc/src/prof.c	/^prof_thread_active_init_get(tsdn_t *tsdn)$/;"	f
prof_thread_active_init_mtx	deps/jemalloc/src/prof.c	/^static malloc_mutex_t	prof_thread_active_init_mtx;$/;"	v	file:
prof_thread_active_init_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	466;"	d
prof_thread_active_init_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	466;"	d
prof_thread_active_init_set	deps/jemalloc/src/prof.c	/^prof_thread_active_init_set(tsdn_t *tsdn, bool active_init)$/;"	f
prof_thread_active_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	467;"	d
prof_thread_active_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	467;"	d
prof_thread_active_set	deps/jemalloc/src/prof.c	/^prof_thread_active_set(tsd_t *tsd, bool active)$/;"	f
prof_thread_name_alloc	deps/jemalloc/src/prof.c	/^prof_thread_name_alloc(tsdn_t *tsdn, const char *thread_name)$/;"	f	file:
prof_thread_name_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	468;"	d
prof_thread_name_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	468;"	d
prof_thread_name_get	deps/jemalloc/src/prof.c	/^prof_thread_name_get(tsd_t *tsd)$/;"	f
prof_thread_name_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	469;"	d
prof_thread_name_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	469;"	d
prof_thread_name_set	deps/jemalloc/src/prof.c	/^prof_thread_name_set(tsd_t *tsd, const char *thread_name)$/;"	f
prof_unwind_callback	deps/jemalloc/src/prof.c	/^prof_unwind_callback(struct _Unwind_Context *context, void *arg)$/;"	f	file:
prof_unwind_data_t	deps/jemalloc/include/jemalloc/internal/prof.h	/^} prof_unwind_data_t;$/;"	t	typeref:struct:__anon11
prof_unwind_init_callback	deps/jemalloc/src/prof.c	/^prof_unwind_init_callback(struct _Unwind_Context *context, void *arg)$/;"	f	file:
prog_args	deps/pmdk/src/benchmarks/log.cpp	/^struct prog_args {$/;"	s	file:
prog_args	deps/pmdk/src/benchmarks/obj_locks.cpp	/^struct prog_args {$/;"	s	file:
prog_args	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^struct prog_args {$/;"	s	file:
prog_args	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^struct prog_args {$/;"	s	file:
progname	deps/lua/src/lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	file:
progname	deps/lua/src/luac.c	/^static const char* progname=PROGNAME;	\/* actual program name *\/$/;"	v	file:
progress_full	src/memtest.c	/^size_t progress_full; \/* How many chars to write to fill the progress bar. *\/$/;"	v
progress_printed	src/memtest.c	/^size_t progress_printed; \/* Printed chars in screen-wide progress bar. *\/$/;"	v
promoted_slave	src/sentinel.c	/^    struct sentinelRedisInstance *promoted_slave; \/* Promoted slave instance. *\/$/;"	m	struct:sentinelRedisInstance	typeref:struct:sentinelRedisInstance::sentinelRedisInstance	file:
prompt	deps/linenoise/linenoise.c	/^    const char *prompt; \/* Prompt to display. *\/$/;"	m	struct:linenoiseState	file:
prompt	src/redis-cli.c	/^    char prompt[128];$/;"	m	struct:config	file:
propagate	src/server.c	/^void propagate(struct redisCommand *cmd, int dbid, robj **argv, int argc,$/;"	f
propagateExpire	src/db.c	/^void propagateExpire(redisDb *db, robj *key) {$/;"	f
propagate_err	deps/jemalloc/src/prof.c	/^	bool	propagate_err;$/;"	m	struct:prof_gctx_dump_iter_arg_s	file:
propagate_err	deps/jemalloc/src/prof.c	/^	bool	propagate_err;$/;"	m	struct:prof_tctx_dump_iter_arg_s	file:
propagateall	deps/lua/src/lgc.c	/^static size_t propagateall (global_State *g) {$/;"	f	file:
propagatemark	deps/lua/src/lgc.c	/^static l_mem propagatemark (global_State *g) {$/;"	f	file:
protected_mode	src/server.h	/^    int protected_mode;         \/* Don't accept external connections. *\/$/;"	m	struct:redisServer
proto	deps/pmdk/src/examples/libpmemobj/pi.c	/^	struct pi_task_proto proto;$/;"	m	struct:pi_task	typeref:struct:pi_task::pi_task_proto	file:
protocol_impl	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^static msg_handler protocol_impl[MAX_CMSG] = {$/;"	v	file:
prototypes	deps/jemalloc/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
provider	deps/pmdk/src/librpmem/rpmem.c	/^	enum rpmem_provider provider;$/;"	m	struct:rpmem_pool	typeref:enum:rpmem_pool::rpmem_provider	file:
provider	deps/pmdk/src/librpmem/rpmem_fip.h	/^	enum rpmem_provider provider;$/;"	m	struct:rpmem_fip_attr	typeref:enum:rpmem_fip_attr::rpmem_provider
provider	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	enum rpmem_provider provider;$/;"	m	struct:rpmem_req_attr	typeref:enum:rpmem_req_attr::rpmem_provider
provider	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t provider;		\/* provider *\/$/;"	m	struct:rpmem_msg_common
provider	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^	enum rpmem_provider provider;$/;"	m	struct:fip_client	typeref:enum:fip_client::rpmem_provider	file:
provider	deps/pmdk/src/tools/rpmemd/rpmemd_fip.h	/^	enum rpmem_provider provider;$/;"	m	struct:rpmemd_fip_attr	typeref:enum:rpmemd_fip_attr::rpmem_provider
provider2str	deps/pmdk/src/rpmem_common/rpmem_common.c	/^static const char *provider2str[MAX_RPMEM_PROV] = {$/;"	v	file:
providers	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	/^	unsigned providers;$/;"	m	struct:rpmem_fip_probe
psetexCommand	src/t_string.c	/^void psetexCommand(client *c) {$/;"	f
pshadow_ops	deps/pmdk/src/libpmemobj/memops.c	/^	struct operation_log pshadow_ops; \/* shadow copy of persistent ulog *\/$/;"	m	struct:operation_context	typeref:struct:operation_context::operation_log	file:
psize	deps/pmdk/src/benchmarks/log.cpp	/^	size_t psize;		\/* size of pool *\/$/;"	m	struct:log_bench	file:
psize	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	size_t psize;		\/* size of pool *\/$/;"	m	struct:ds_context	file:
psize	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^    size_t psize;$/;"	m	struct:pmem_context
psize	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	size_t psize; \/* the total size of the node *\/$/;"	m	struct:vnode_t
psubscribe	tests/unit/pubsub.tcl	/^    proc psubscribe {client channels} {$/;"	p
psubscribeCommand	src/pubsub.c	/^void psubscribeCommand(client *c) {$/;"	f
psubscribebulk	src/server.h	/^    *unsubscribebulk, *psubscribebulk, *punsubscribebulk, *del, *rpop, *lpop,$/;"	m	struct:sharedObjectsStruct
psync_initial_offset	src/server.h	/^    long long psync_initial_offset; \/* FULLRESYNC reply offset other slaves$/;"	m	struct:client
psz2ind	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^psz2ind(size_t psz)$/;"	f
psz2ind	deps/jemalloc/include/jemalloc/internal/private_namespace.h	470;"	d
psz2ind	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	470;"	d
psz2u	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^psz2u(size_t psz)$/;"	f
psz2u	deps/jemalloc/include/jemalloc/internal/private_namespace.h	471;"	d
psz2u	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	471;"	d
pszind_t	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^typedef unsigned pszind_t;$/;"	t
pt_chi2	deps/jemalloc/test/include/test/math.h	/^pt_chi2(double p, double df, double ln_gamma_df_2)$/;"	f
pt_chi2_df	deps/jemalloc/test/unit/math.c	/^static const double pt_chi2_df[] = {0.1, 1.1, 10.1, 100.1, 1000.1};$/;"	v	file:
pt_chi2_expected	deps/jemalloc/test/unit/math.c	/^static const double pt_chi2_expected[] = {$/;"	v	file:
pt_gamma	deps/jemalloc/test/include/test/math.h	/^pt_gamma(double p, double shape, double scale, double ln_gamma_shape)$/;"	f
pt_gamma_expected	deps/jemalloc/test/unit/math.c	/^static const double pt_gamma_expected[] = {$/;"	v	file:
pt_gamma_shape	deps/jemalloc/test/unit/math.c	/^static const double pt_gamma_shape[] = {0.5, 1.0, 1.5, 2.0, 2.5, 3.0};$/;"	v	file:
pt_mutex	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	os_mutex_t pt_mutex;$/;"	m	union:lock_union	file:
pt_norm	deps/jemalloc/test/include/test/math.h	/^pt_norm(double p)$/;"	f
pt_norm_expected	deps/jemalloc/test/unit/math.c	/^static const double pt_norm_expected[] = {$/;"	v	file:
pt_rwlock	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	os_rwlock_t pt_rwlock;$/;"	m	union:lock_union	file:
pthread_create	deps/jemalloc/src/mutex.c	/^pthread_create(pthread_t *__restrict thread,$/;"	f
pthread_create_fptr	deps/jemalloc/src/mutex.c	/^static int (*pthread_create_fptr)(pthread_t *__restrict, const pthread_attr_t *,$/;"	v	file:
pthread_create_once	deps/jemalloc/src/mutex.c	/^pthread_create_once(void)$/;"	f	file:
ptr	deps/jemalloc/include/jemalloc/internal/quarantine.h	/^	void	*ptr;$/;"	m	struct:quarantine_obj_s
ptr	deps/lua/src/lua_cjson.c	/^    const char *ptr;$/;"	m	struct:__anon44	file:
ptr	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	void *ptr;$/;"	m	struct:clo_vec_alloc
ptr	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	void *ptr;$/;"	m	struct:clo_vec_value
ptr	deps/pmdk/src/libpmemobj/obj.c	/^	void *ptr;$/;"	m	struct:carg_realloc	file:
ptr	deps/pmdk/src/libpmemobj/palloc.c	/^			uint64_t *ptr;$/;"	m	struct:pobj_action_internal::__anon127::__anon129	file:
ptr	deps/pmdk/src/test/obj_list/obj_list.c	/^	void *ptr;$/;"	m	struct:realloc_arg	file:
ptr	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^	uint64_t ptr;$/;"	m	struct:mock_pop	file:
ptr	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	void *ptr;$/;"	m	struct:checksum_args	file:
ptr	src/rio.h	/^            sds ptr;$/;"	m	struct:_rio::__anon179::__anon180
ptr	src/server.h	/^    void *ptr;$/;"	m	struct:redisObject
ptrs	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^	void **ptrs;	  \/* pointers to allocated objects *\/$/;"	m	struct:obj_bench	file:
pttlCommand	src/db.c	/^void pttlCommand(client *c) {$/;"	f
publish	src/cluster.h	/^    } publish;$/;"	m	union:clusterMsgData	typeref:struct:clusterMsgData::__anon175
publishCommand	src/pubsub.c	/^void publishCommand(client *c) {$/;"	f
published	deps/pmdk/src/test/obj_action/obj_action.c	/^	} published;$/;"	m	struct:root	typeref:struct:root::__anon136	file:
pubsubCommand	src/pubsub.c	/^void pubsubCommand(client *c) {$/;"	f
pubsubPattern	src/server.h	/^typedef struct pubsubPattern {$/;"	s
pubsubPattern	src/server.h	/^} pubsubPattern;$/;"	t	typeref:struct:pubsubPattern
pubsubPublishMessage	src/pubsub.c	/^int pubsubPublishMessage(robj *channel, robj *message) {$/;"	f
pubsubSubscribeChannel	src/pubsub.c	/^int pubsubSubscribeChannel(client *c, robj *channel) {$/;"	f
pubsubSubscribePattern	src/pubsub.c	/^int pubsubSubscribePattern(client *c, robj *pattern) {$/;"	f
pubsubUnsubscribeAllChannels	src/pubsub.c	/^int pubsubUnsubscribeAllChannels(client *c, int notify) {$/;"	f
pubsubUnsubscribeAllPatterns	src/pubsub.c	/^int pubsubUnsubscribeAllPatterns(client *c, int notify) {$/;"	f
pubsubUnsubscribeChannel	src/pubsub.c	/^int pubsubUnsubscribeChannel(client *c, robj *channel, int notify) {$/;"	f
pubsubUnsubscribePattern	src/pubsub.c	/^int pubsubUnsubscribePattern(client *c, robj *pattern, int notify) {$/;"	f
pubsub_channels	src/server.h	/^    dict *pubsub_channels;  \/* Map channels to list of subscribed clients *\/$/;"	m	struct:redisServer
pubsub_channels	src/server.h	/^    dict *pubsub_channels;  \/* channels a client is interested in (SUBSCRIBE) *\/$/;"	m	struct:client
pubsub_mode	src/redis-cli.c	/^    int pubsub_mode;$/;"	m	struct:config	file:
pubsub_patterns	src/server.h	/^    list *pubsub_patterns;  \/* A list of pubsub_patterns *\/$/;"	m	struct:redisServer
pubsub_patterns	src/server.h	/^    list *pubsub_patterns;  \/* patterns a client is interested in (SUBSCRIBE) *\/$/;"	m	struct:client
pun	deps/jemalloc/include/jemalloc/internal/rtree.h	/^		void			*pun;$/;"	m	union:rtree_node_elm_s::__anon8
punsubscribe	tests/unit/pubsub.tcl	/^    proc punsubscribe {client {channels {}}} {$/;"	p
punsubscribeCommand	src/pubsub.c	/^void punsubscribeCommand(client *c) {$/;"	f
punsubscribebulk	src/server.h	/^    *unsubscribebulk, *psubscribebulk, *punsubscribebulk, *del, *rpop, *lpop,$/;"	m	struct:sharedObjectsStruct
pure	deps/jemalloc/include/jemalloc/jemalloc.h	/^    JEMALLOC_ATTR(pure);$/;"	v
pure	deps/jemalloc/include/jemalloc/jemalloc.h	/^    int flags) JEMALLOC_ATTR(pure);$/;"	v
pure	deps/jemalloc/include/jemalloc/jemalloc_protos.h	/^    JEMALLOC_ATTR(pure);$/;"	v
pure	deps/jemalloc/include/jemalloc/jemalloc_protos.h	/^    int flags) JEMALLOC_ATTR(pure);$/;"	v
pure	deps/jemalloc/include/jemalloc/jemalloc_protos_jet.h	/^    JEMALLOC_ATTR(pure);$/;"	v
pure	deps/jemalloc/include/jemalloc/jemalloc_protos_jet.h	/^    int flags) JEMALLOC_ATTR(pure);$/;"	v
purge	deps/jemalloc/include/jemalloc/jemalloc.h	/^	chunk_purge_t		*purge;$/;"	m	struct:__anon14
purge	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^	chunk_purge_t		*purge;$/;"	m	struct:__anon1
purge	deps/jemalloc/test/integration/aligned_alloc.c	/^purge(void)$/;"	f	file:
purge	deps/jemalloc/test/integration/mallocx.c	/^purge(void)$/;"	f	file:
purge	deps/jemalloc/test/integration/posix_memalign.c	/^purge(void)$/;"	f	file:
purge_mode_decay	deps/jemalloc/include/jemalloc/internal/arena.h	/^	purge_mode_decay = 1,$/;"	e	enum:__anon4
purge_mode_limit	deps/jemalloc/include/jemalloc/internal/arena.h	/^	purge_mode_limit = 2$/;"	e	enum:__anon4
purge_mode_names	deps/jemalloc/include/jemalloc/internal/private_namespace.h	472;"	d
purge_mode_names	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	472;"	d
purge_mode_names	deps/jemalloc/src/arena.c	/^const char	*purge_mode_names[] = {$/;"	v
purge_mode_ratio	deps/jemalloc/include/jemalloc/internal/arena.h	/^	purge_mode_ratio = 0,$/;"	e	enum:__anon4
purge_mode_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^} purge_mode_t;$/;"	t	typeref:enum:__anon4
purgeable_zone	deps/jemalloc/src/zone.c	/^static malloc_zone_t *default_zone, *purgeable_zone;$/;"	v	file:
purged	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	purged;$/;"	m	struct:arena_stats_s
purging	deps/jemalloc/include/jemalloc/internal/arena.h	/^	bool			purging;$/;"	m	struct:arena_s
pushGenericCommand	src/t_list.c	/^void pushGenericCommand(client *c, int where) {$/;"	f
push_captures	deps/lua/src/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:
push_onecapture	deps/lua/src/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
pushclosure	deps/lua/src/lparser.c	/^static void pushclosure (LexState *ls, FuncState *func, expdesc *v) {$/;"	f	file:
pusherror	deps/lua/src/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:
pushline	deps/lua/src/lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	file:
pushnexttemplate	deps/lua/src/loadlib.c	/^static const char *pushnexttemplate (lua_State *L, const char *path) {$/;"	f	file:
pushresult	deps/lua/src/liolib.c	/^static int pushresult (lua_State *L, int i, const char *filename) {$/;"	f	file:
pushstr	deps/lua/src/lobject.c	/^static void pushstr (lua_State *L, const char *str) {$/;"	f	file:
pushxGenericCommand	src/t_list.c	/^void pushxGenericCommand(client *c, robj *refval, robj *val, int where) {$/;"	f
putSlaveOnline	src/replication.c	/^void putSlaveOnline(client *slave) {$/;"	f
putinteger	deps/lua/src/lua_struct.c	/^static void putinteger (lua_State *L, luaL_Buffer *b, int arg, int endian,$/;"	f	file:
pvalue	deps/lua/src/lobject.h	92;"	d
pwrite	deps/pmdk/src/windows/include/unistd.h	/^pwrite(int fd, const void *buf, size_t count, os_off_t offset)$/;"	f
ql_after_insert	deps/jemalloc/include/jemalloc/internal/ql.h	39;"	d
ql_before_insert	deps/jemalloc/include/jemalloc/internal/ql.h	32;"	d
ql_elm	deps/jemalloc/include/jemalloc/internal/ql.h	9;"	d
ql_elm_new	deps/jemalloc/include/jemalloc/internal/ql.h	16;"	d
ql_first	deps/jemalloc/include/jemalloc/internal/ql.h	18;"	d
ql_foreach	deps/jemalloc/include/jemalloc/internal/ql.h	77;"	d
ql_head	deps/jemalloc/include/jemalloc/internal/ql.h	2;"	d
ql_head_initializer	deps/jemalloc/include/jemalloc/internal/ql.h	7;"	d
ql_head_insert	deps/jemalloc/include/jemalloc/internal/ql.h	42;"	d
ql_head_remove	deps/jemalloc/include/jemalloc/internal/ql.h	67;"	d
ql_info	src/quicklist.c	/^static void ql_info(quicklist *ql) {$/;"	f	file:
ql_last	deps/jemalloc/include/jemalloc/internal/ql.h	20;"	d
ql_link	deps/jemalloc/include/jemalloc/internal/extent.h	/^		ql_elm(extent_node_t)	ql_link;$/;"	m	union:extent_node_s::__anon10
ql_new	deps/jemalloc/include/jemalloc/internal/ql.h	12;"	d
ql_next	deps/jemalloc/include/jemalloc/internal/ql.h	24;"	d
ql_prev	deps/jemalloc/include/jemalloc/internal/ql.h	28;"	d
ql_remove	deps/jemalloc/include/jemalloc/internal/ql.h	56;"	d
ql_reverse_foreach	deps/jemalloc/include/jemalloc/internal/ql.h	80;"	d
ql_tail_insert	deps/jemalloc/include/jemalloc/internal/ql.h	49;"	d
ql_tail_remove	deps/jemalloc/include/jemalloc/internal/ql.h	72;"	d
ql_verify	src/quicklist.c	1512;"	d	file:
qr	deps/jemalloc/include/jemalloc/internal/qr.h	2;"	d
qr_after_insert	deps/jemalloc/include/jemalloc/internal/qr.h	25;"	d
qr_before_insert	deps/jemalloc/include/jemalloc/internal/qr.h	18;"	d
qr_foreach	deps/jemalloc/include/jemalloc/internal/qr.h	59;"	d
qr_meld	deps/jemalloc/include/jemalloc/internal/qr.h	34;"	d
qr_new	deps/jemalloc/include/jemalloc/internal/qr.h	9;"	d
qr_next	deps/jemalloc/include/jemalloc/internal/qr.h	14;"	d
qr_prev	deps/jemalloc/include/jemalloc/internal/qr.h	16;"	d
qr_remove	deps/jemalloc/include/jemalloc/internal/qr.h	50;"	d
qr_reverse_foreach	deps/jemalloc/include/jemalloc/internal/qr.h	65;"	d
qr_split	deps/jemalloc/include/jemalloc/internal/qr.h	47;"	d
qsort	deps/lua/test/sort.lua	/^function qsort(x,l,u,f)$/;"	f
qsortCompareSetsByCardinality	src/t_set.c	/^int qsortCompareSetsByCardinality(const void *s1, const void *s2) {$/;"	f
qsortCompareSetsByRevCardinality	src/t_set.c	/^int qsortCompareSetsByRevCardinality(const void *s1, const void *s2) {$/;"	f
quarantine	deps/jemalloc/include/jemalloc/internal/private_namespace.h	473;"	d
quarantine	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	473;"	d
quarantine	deps/jemalloc/src/quarantine.c	/^quarantine(tsd_t *tsd, void *ptr)$/;"	f
quarantine_alloc_hook	deps/jemalloc/include/jemalloc/internal/private_namespace.h	474;"	d
quarantine_alloc_hook	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	474;"	d
quarantine_alloc_hook	deps/jemalloc/include/jemalloc/internal/quarantine.h	/^quarantine_alloc_hook(void)$/;"	f
quarantine_alloc_hook_work	deps/jemalloc/include/jemalloc/internal/private_namespace.h	475;"	d
quarantine_alloc_hook_work	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	475;"	d
quarantine_alloc_hook_work	deps/jemalloc/src/quarantine.c	/^quarantine_alloc_hook_work(tsd_t *tsd)$/;"	f
quarantine_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	476;"	d
quarantine_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	476;"	d
quarantine_cleanup	deps/jemalloc/src/quarantine.c	/^quarantine_cleanup(tsd_t *tsd)$/;"	f
quarantine_clear	deps/jemalloc/test/unit/quarantine.c	/^quarantine_clear(void)$/;"	f
quarantine_drain	deps/jemalloc/src/quarantine.c	/^quarantine_drain(tsdn_t *tsdn, quarantine_t *quarantine, size_t upper_bound)$/;"	f	file:
quarantine_drain_one	deps/jemalloc/src/quarantine.c	/^quarantine_drain_one(tsdn_t *tsdn, quarantine_t *quarantine)$/;"	f	file:
quarantine_grow	deps/jemalloc/src/quarantine.c	/^quarantine_grow(tsd_t *tsd, quarantine_t *quarantine)$/;"	f	file:
quarantine_init	deps/jemalloc/src/quarantine.c	/^quarantine_init(tsdn_t *tsdn, size_t lg_maxobjs)$/;"	f	file:
quarantine_obj_s	deps/jemalloc/include/jemalloc/internal/quarantine.h	/^struct quarantine_obj_s {$/;"	s
quarantine_obj_t	deps/jemalloc/include/jemalloc/internal/quarantine.h	/^typedef struct quarantine_obj_s quarantine_obj_t;$/;"	t	typeref:struct:quarantine_obj_s
quarantine_s	deps/jemalloc/include/jemalloc/internal/quarantine.h	/^struct quarantine_s {$/;"	s
quarantine_t	deps/jemalloc/include/jemalloc/internal/quarantine.h	/^typedef struct quarantine_s quarantine_t;$/;"	t	typeref:struct:quarantine_s
query	deps/pmdk/src/libpmempool/feature.c	/^	int (*query)(const char *);$/;"	m	struct:feature_funcs	file:
query	deps/pmdk/src/tools/pmempool/feature.c	/^	query$/;"	e	enum:feature_op	file:
query_badblocks_checking	deps/pmdk/src/libpmempool/feature.c	/^query_badblocks_checking(const char *path)$/;"	f	file:
query_checksum_2k	deps/pmdk/src/libpmempool/feature.c	/^query_checksum_2k(const char *path)$/;"	f	file:
query_feature	deps/pmdk/src/libpmempool/feature.c	/^query_feature(const char *path, features_t feature)$/;"	f	file:
query_shutdown_state	deps/pmdk/src/libpmempool/feature.c	/^query_shutdown_state(const char *path)$/;"	f	file:
query_singlehdr	deps/pmdk/src/libpmempool/feature.c	/^query_singlehdr(const char *path)$/;"	f	file:
querybuf	src/server.h	/^    sds querybuf;           \/* Buffer we use to accumulate client queries. *\/$/;"	m	struct:client
querybuf_peak	src/server.h	/^    size_t querybuf_peak;   \/* Recent (100ms or more) peak of querybuf size. *\/$/;"	m	struct:client
question	deps/pmdk/src/libpmempool/check_backup.c	/^enum question {$/;"	g	file:
question	deps/pmdk/src/libpmempool/check_blk.c	/^enum question {$/;"	g	file:
question	deps/pmdk/src/libpmempool/check_btt_info.c	/^enum question {$/;"	g	file:
question	deps/pmdk/src/libpmempool/check_log.c	/^enum question {$/;"	g	file:
question	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^enum question {$/;"	g	file:
question	deps/pmdk/src/libpmempool/check_sds.c	/^enum question {$/;"	g	file:
question	deps/pmdk/src/libpmempool/check_util.c	/^	unsigned question;$/;"	m	struct:check_status	file:
questions	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^enum questions {$/;"	g	file:
questions	deps/pmdk/src/libpmempool/check_util.c	/^	struct check_status_head questions;$/;"	m	struct:check_data	typeref:struct:check_data::check_status_head	file:
questions	deps/pmdk/src/libpmempool/check_write.c	/^enum questions {$/;"	g	file:
queue	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	bool queue;	\/* use circle queue from <sys\/queue.h> *\/$/;"	m	struct:obj_list_args	file:
queue	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^	TOID(struct queue) queue;$/;"	m	struct:root	file:
queue	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^POBJ_LAYOUT_BEGIN(queue);$/;"	v
queue	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^POBJ_LAYOUT_END(queue);$/;"	v
queue	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^struct queue { \/* array-based queue container *\/$/;"	s	file:
queueMultiCommand	src/multi.c	/^void queueMultiCommand(client *c) {$/;"	f
queue_constructor	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^queue_constructor(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
queue_depth	deps/pmdk/src/libpmemobj/tx.c	/^CTL_READ_HANDLER(queue_depth)(void *ctx, enum ctl_query_source source,$/;"	f	file:
queue_depth	deps/pmdk/src/libpmemobj/tx.c	/^CTL_WRITE_HANDLER(queue_depth)(void *ctx, enum ctl_query_source source,$/;"	f	file:
queue_depth	deps/pmdk/src/libpmemobj/tx.c	/^static const struct ctl_argument CTL_ARG(queue_depth) = CTL_ARG_INT;$/;"	v	typeref:struct:CTL_ARG	file:
queue_dequeue	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^queue_dequeue(PMEMobjpool *pop, struct queue *queue)$/;"	f	file:
queue_enqueue	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^queue_enqueue(PMEMobjpool *pop, struct queue *queue,$/;"	f	file:
queue_free_worker_items	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^queue_free_worker_items(struct obj_worker *obj_worker)$/;"	f	file:
queue_free_worker_list	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^queue_free_worker_list(struct obj_worker *obj_worker)$/;"	f	file:
queue_init_list	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^queue_init_list(struct worker_info *worker, size_t n_items, size_t list_len)$/;"	f	file:
queue_insert_op	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^queue_insert_op(struct operation_info *info)$/;"	f	file:
queue_nentries	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^queue_nentries(struct queue *queue)$/;"	f	file:
queue_new	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^queue_new(PMEMobjpool *pop, TOID(struct queue) *q, size_t nentries)$/;"	f	file:
queue_op	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^enum queue_op {$/;"	g	file:
queue_op_parse	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^queue_op_parse(const char *str)$/;"	f	file:
queue_remove_op	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^queue_remove_op(struct operation_info *info)$/;"	f	file:
queue_show	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^queue_show(PMEMobjpool *pop, struct queue *queue)$/;"	f	file:
queued	src/server.h	/^    *colon, *nullbulk, *nullmultibulk, *queued,$/;"	m	struct:sharedObjectsStruct
quicklist	src/quicklist.h	/^    const quicklist *quicklist;$/;"	m	struct:quicklistEntry
quicklist	src/quicklist.h	/^    const quicklist *quicklist;$/;"	m	struct:quicklistIter
quicklist	src/quicklist.h	/^typedef struct quicklist {$/;"	s
quicklist	src/quicklist.h	/^} quicklist;$/;"	t	typeref:struct:quicklist
quicklistAllowsCompression	src/quicklist.c	259;"	d	file:
quicklistAppendValuesFromZiplist	src/quicklist.c	/^quicklist *quicklistAppendValuesFromZiplist(quicklist *quicklist,$/;"	f
quicklistAppendZiplist	src/quicklist.c	/^void quicklistAppendZiplist(quicklist *quicklist, unsigned char *zl) {$/;"	f
quicklistCompare	src/quicklist.c	/^int quicklistCompare(unsigned char *p1, unsigned char *p2, int p2_len) {$/;"	f
quicklistCompress	src/quicklist.c	333;"	d	file:
quicklistCompressNode	src/quicklist.c	206;"	d	file:
quicklistCount	src/quicklist.c	/^unsigned int quicklistCount(quicklist *ql) { return ql->count; }$/;"	f
quicklistCreate	src/quicklist.c	/^quicklist *quicklistCreate(void) {$/;"	f
quicklistCreateFromZiplist	src/quicklist.c	/^quicklist *quicklistCreateFromZiplist(int fill, int compress,$/;"	f
quicklistCreateNode	src/quicklist.c	/^REDIS_STATIC quicklistNode *quicklistCreateNode(void) {$/;"	f
quicklistDecompressNode	src/quicklist.c	234;"	d	file:
quicklistDecompressNodeForUse	src/quicklist.c	242;"	d	file:
quicklistDelEntry	src/quicklist.c	/^void quicklistDelEntry(quicklistIter *iter, quicklistEntry *entry) {$/;"	f
quicklistDelIndex	src/quicklist.c	/^REDIS_STATIC int quicklistDelIndex(quicklist *quicklist, quicklistNode *node,$/;"	f
quicklistDelRange	src/quicklist.c	/^int quicklistDelRange(quicklist *quicklist, const long start,$/;"	f
quicklistDeleteIfEmpty	src/quicklist.c	571;"	d	file:
quicklistDup	src/quicklist.c	/^quicklist *quicklistDup(quicklist *orig) {$/;"	f
quicklistEntry	src/quicklist.h	/^typedef struct quicklistEntry {$/;"	s
quicklistEntry	src/quicklist.h	/^} quicklistEntry;$/;"	t	typeref:struct:quicklistEntry
quicklistGetIterator	src/quicklist.c	/^quicklistIter *quicklistGetIterator(const quicklist *quicklist, int direction) {$/;"	f
quicklistGetIteratorAtIdx	src/quicklist.c	/^quicklistIter *quicklistGetIteratorAtIdx(const quicklist *quicklist,$/;"	f
quicklistGetLzf	src/quicklist.c	/^size_t quicklistGetLzf(const quicklistNode *node, void **data) {$/;"	f
quicklistIndex	src/quicklist.c	/^int quicklistIndex(const quicklist *quicklist, const long long idx,$/;"	f
quicklistInsertAfter	src/quicklist.c	/^void quicklistInsertAfter(quicklist *quicklist, quicklistEntry *entry,$/;"	f
quicklistInsertBefore	src/quicklist.c	/^void quicklistInsertBefore(quicklist *quicklist, quicklistEntry *entry,$/;"	f
quicklistIter	src/quicklist.h	/^typedef struct quicklistIter {$/;"	s
quicklistIter	src/quicklist.h	/^} quicklistIter;$/;"	t	typeref:struct:quicklistIter
quicklistLZF	src/quicklist.h	/^typedef struct quicklistLZF {$/;"	s
quicklistLZF	src/quicklist.h	/^} quicklistLZF;$/;"	t	typeref:struct:quicklistLZF
quicklistNew	src/quicklist.c	/^quicklist *quicklistNew(int fill, int compress) {$/;"	f
quicklistNext	src/quicklist.c	/^int quicklistNext(quicklistIter *iter, quicklistEntry *entry) {$/;"	f
quicklistNode	src/quicklist.h	/^typedef struct quicklistNode {$/;"	s
quicklistNode	src/quicklist.h	/^} quicklistNode;$/;"	t	typeref:struct:quicklistNode
quicklistNodeIsCompressed	src/quicklist.h	114;"	d
quicklistNodeUpdateSz	src/quicklist.c	471;"	d	file:
quicklistPop	src/quicklist.c	/^int quicklistPop(quicklist *quicklist, int where, unsigned char **data,$/;"	f
quicklistPopCustom	src/quicklist.c	/^int quicklistPopCustom(quicklist *quicklist, int where, unsigned char **data,$/;"	f
quicklistPush	src/quicklist.c	/^void quicklistPush(quicklist *quicklist, void *value, const size_t sz,$/;"	f
quicklistPushHead	src/quicklist.c	/^int quicklistPushHead(quicklist *quicklist, void *value, size_t sz) {$/;"	f
quicklistPushTail	src/quicklist.c	/^int quicklistPushTail(quicklist *quicklist, void *value, size_t sz) {$/;"	f
quicklistRecompressOnly	src/quicklist.c	342;"	d	file:
quicklistRelease	src/quicklist.c	/^void quicklistRelease(quicklist *quicklist) {$/;"	f
quicklistReleaseIterator	src/quicklist.c	/^void quicklistReleaseIterator(quicklistIter *iter) {$/;"	f
quicklistReplaceAtIndex	src/quicklist.c	/^int quicklistReplaceAtIndex(quicklist *quicklist, long index, void *data,$/;"	f
quicklistRotate	src/quicklist.c	/^void quicklistRotate(quicklist *quicklist) {$/;"	f
quicklistSetCompressDepth	src/quicklist.c	/^void quicklistSetCompressDepth(quicklist *quicklist, int compress) {$/;"	f
quicklistSetFill	src/quicklist.c	/^void quicklistSetFill(quicklist *quicklist, int fill) {$/;"	f
quicklistSetOptions	src/quicklist.c	/^void quicklistSetOptions(quicklist *quicklist, int fill, int depth) {$/;"	f
quicklistTest	src/quicklist.c	/^int quicklistTest(int argc, char *argv[]) {$/;"	f
quiet	src/redis-benchmark.c	/^    int quiet;$/;"	m	struct:config	file:
quit_func	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^quit_func(char *appname, struct pmem_context *ctx, int argc, char *argv[])$/;"	f	file:
quit_help	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^quit_help(char *appname)$/;"	f	file:
quorum	src/sentinel.c	/^    unsigned int quorum;\/* Number of sentinels that need to agree on failure. *\/$/;"	m	struct:sentinelRedisInstance	file:
r	deps/jemalloc/src/jemalloc.c	/^	void	*r;	\/* Result pointer. *\/$/;"	m	struct:__anon17	file:
r	deps/lua/doc/manual.html	/^     function r() return 1,2,3 end$/;"	f
r	deps/lua/src/llex.h	/^  lua_Number r;$/;"	m	union:__anon33
r	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^	struct root *r;$/;"	m	struct:worker_args	typeref:struct:worker_args::root	file:
r	src/redis-trib.rb	/^    def r$/;"	f	class:ClusterNode
r	tests/test_helper.tcl	/^proc r {args} {$/;"	p
r2	deps/pmdk/src/common/valgrind/valgrind.h	/^      unsigned long int r2;     \/* what tocptr do we need? *\/$/;"	m	struct:__anon59
r2	deps/pmdk/src/common/valgrind/valgrind.h	/^      unsigned long int r2;  \/* what tocptr do we need? *\/$/;"	m	struct:__anon58
rad_deg	deps/geohash-int/geohash_helper.c	/^static inline double rad_deg(double ang) { return ang \/ D_R; }$/;"	f	file:
raddr	deps/pmdk/src/librpmem/rpmem_fip.c	/^	uint64_t raddr;	\/* remote memory base address *\/$/;"	m	struct:rpmem_fip	file:
raddr	deps/pmdk/src/librpmem/rpmem_fip.h	/^	void *raddr;$/;"	m	struct:rpmem_fip_attr
raddr	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	uint64_t raddr;$/;"	m	struct:rpmem_resp_attr
raddr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint64_t raddr;			\/* remote address *\/$/;"	m	struct:rpmem_msg_ibc_attr
rallocx	deps/jemalloc/include/jemalloc/jemalloc.h	332;"	d
rallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	21;"	d
rallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	21;"	d
rand	deps/pmdk/src/benchmarks/log.cpp	/^	bool rand;       \/* use random numbers *\/$/;"	m	struct:prog_args	file:
rand_offsets	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	unsigned *rand_offsets;$/;"	m	struct:pmem_bench	file:
rand_positions	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^static fn_position_t rand_positions[] = {position_head, position_tail,$/;"	v	file:
rand_range	deps/pmdk/src/test/obj_defrag_advanced/vgraph.c	/^rand_range(unsigned min, unsigned max, rng_t *rngp)$/;"	f
rand_sizes	deps/pmdk/src/benchmarks/log.cpp	/^	size_t *rand_sizes;$/;"	m	struct:log_worker_info	file:
rand_sizes	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	size_t *rand_sizes;$/;"	m	struct:pobj_bench	file:
rand_sizes	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^rand_sizes(size_t min, size_t max, size_t n_ops)$/;"	f	file:
rand_values	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^rand_values(size_t min, size_t max, size_t n_ops)$/;"	f	file:
randfree	src/redis-benchmark.c	/^    size_t randfree;        \/* Number of unused pointers in client->randptr *\/$/;"	m	struct:_client	file:
randlen	src/redis-benchmark.c	/^    size_t randlen;         \/* Number of pointers in client->randptr *\/$/;"	m	struct:_client	file:
randomInt	tests/support/util.tcl	/^proc randomInt {max} {$/;"	p
randomKey	tests/support/util.tcl	/^proc randomKey {} {$/;"	p
randomSignedInt	tests/support/util.tcl	/^proc randomSignedInt {max} {$/;"	p
randomValue	tests/support/util.tcl	/^proc randomValue {} {$/;"	p
random_positions	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^random_positions(void)$/;"	f	file:
random_types	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	size_t *random_types;$/;"	m	struct:obj_bench	file:
random_types	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	size_t *random_types;$/;"	m	struct:pobj_bench	file:
random_types	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^random_types(struct pobj_bench *bench_priv, struct benchmark_args *args)$/;"	f	file:
random_types	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	size_t *random_types;	 \/* array to store random type numbers *\/$/;"	m	struct:obj_tx_bench	file:
random_values	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^random_values(size_t min, size_t max, size_t n_ops, size_t min_range)$/;"	f	file:
randomize	deps/pmdk/src/common/rand.c	/^randomize(uint64_t seed)$/;"	f
randomizeClientKey	src/redis-benchmark.c	/^static void randomizeClientKey(client c) {$/;"	f	file:
randomize_r	deps/pmdk/src/common/rand.c	/^randomize_r(rng_t *state, uint64_t seed)$/;"	f
randomkeyCommand	src/db.c	/^void randomkeyCommand(client *c) {$/;"	f
randomkeys	src/redis-benchmark.c	/^    int randomkeys;$/;"	m	struct:config	file:
randomkeys_keyspacelen	src/redis-benchmark.c	/^    int randomkeys_keyspacelen;$/;"	m	struct:config	file:
randpath	tests/support/util.tcl	/^proc randpath args {$/;"	p
randptr	src/redis-benchmark.c	/^    char **randptr;         \/* Pointers to :rand: strings inside the command buf *\/$/;"	m	struct:_client	file:
randstring	src/ziplist.c	/^static int randstring(char *target, unsigned int min, unsigned int max) {$/;"	f	file:
randstring	tests/support/util.tcl	/^proc randstring {min max {type binary}} {$/;"	p
range	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	bool range;	\/* use random allocation size *\/$/;"	m	struct:obj_list_args	file:
range	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	bool range;$/;"	m	struct:pobj_args	file:
range	deps/pmdk/src/tools/pmempool/common.h	/^struct range {$/;"	s
range	deps/pmdk/src/tools/pmempool/dump.c	/^	char *range;$/;"	m	struct:pmempool_dump	file:
range_cmp	deps/pmdk/src/tools/pmreorder/utils.py	/^def range_cmp(lhs, rhs):$/;"	f
range_edges	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	unsigned range_edges;$/;"	m	struct:vgraph_params
range_nodes	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^	unsigned range_nodes;$/;"	m	struct:vgraph_params
range_size	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^range_size(struct pobj_bench *bench_priv, size_t idx)$/;"	f	file:
ranges	deps/pmdk/src/libpmemobj/tx.c	/^	struct ravl *ranges;$/;"	m	struct:tx	typeref:struct:tx::ravl	file:
ranges	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^static const int ranges[2][2][2] = {$/;"	v	file:
ranges	deps/pmdk/src/tools/pmempool/common.h	/^struct ranges {$/;"	s
ranges	deps/pmdk/src/tools/pmempool/dump.c	/^	struct ranges ranges;$/;"	m	struct:pmempool_dump	typeref:struct:pmempool_dump::ranges	file:
ranges	deps/pmdk/src/tools/pmempool/info.h	/^	struct ranges ranges;	\/* range of block\/chunks to dump *\/$/;"	m	struct:pmempool_info_args	typeref:struct:pmempool_info_args::ranges
rank	deps/jemalloc/include/jemalloc/internal/witness.h	/^	witness_rank_t		rank;$/;"	m	struct:witness_s
rank	deps/pmdk/src/libpmemobj/ravl.c	/^	int32_t rank; \/* cannot be greater than height of the subtree *\/$/;"	m	struct:ravl_node	file:
ravl	deps/pmdk/src/libpmemobj/ravl.c	/^struct ravl {$/;"	s	file:
ravl_balance	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_balance(struct ravl *ravl, struct ravl_node *n)$/;"	f	file:
ravl_cb	deps/pmdk/src/libpmemobj/ravl.h	/^typedef void ravl_cb(void *data, void *arg);$/;"	t
ravl_clear	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_clear(struct ravl *ravl)$/;"	f
ravl_compare	deps/pmdk/src/libpmemobj/ravl.h	/^typedef int ravl_compare(const void *lhs, const void *rhs);$/;"	t
ravl_constr	deps/pmdk/src/libpmemobj/ravl.h	/^typedef void ravl_constr(void *data, size_t data_size, const void *arg);$/;"	t
ravl_data	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_data(struct ravl_node *node)$/;"	f
ravl_delete	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_delete(struct ravl *ravl)$/;"	f
ravl_delete_cb	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_delete_cb(struct ravl *ravl, ravl_cb cb, void *arg)$/;"	f
ravl_emplace	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_emplace(struct ravl *ravl, ravl_constr constr, const void *arg)$/;"	f
ravl_emplace_copy	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_emplace_copy(struct ravl *ravl, const void *data)$/;"	f
ravl_empty	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_empty(struct ravl *ravl)$/;"	f
ravl_find	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_find(struct ravl *ravl, const void *data, enum ravl_predicate flags)$/;"	f
ravl_foreach	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_foreach(struct ravl *ravl, ravl_cb cb, void *arg)$/;"	f
ravl_foreach_node	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_foreach_node(struct ravl_node *n, ravl_cb cb, void *arg, int free_node)$/;"	f	file:
ravl_insert	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_insert(struct ravl *ravl, const void *data)$/;"	f
ravl_new	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_new(ravl_compare *compare)$/;"	f
ravl_new_node	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_new_node(struct ravl *ravl, ravl_constr constr, const void *arg)$/;"	f	file:
ravl_new_sized	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_new_sized(ravl_compare *compare, size_t data_size)$/;"	f
ravl_node	deps/pmdk/src/libpmemobj/ravl.c	/^struct ravl_node {$/;"	s	file:
ravl_node_cessor	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_cessor(struct ravl_node *n, enum ravl_slot_type t)$/;"	f	file:
ravl_node_copy_constructor	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_copy_constructor(void *data, size_t data_size, const void *arg)$/;"	f	file:
ravl_node_demote	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_demote(struct ravl_node *n)$/;"	f	file:
ravl_node_insert_constructor	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_insert_constructor(void *data, size_t data_size, const void *arg)$/;"	f	file:
ravl_node_is	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_is(struct ravl_node *n, int i, int j)$/;"	f	file:
ravl_node_is_i_j	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_is_i_j(struct ravl_node *n, int i, int j)$/;"	f	file:
ravl_node_predecessor	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_predecessor(struct ravl_node *n)$/;"	f	file:
ravl_node_promote	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_promote(struct ravl_node *n)$/;"	f	file:
ravl_node_rank	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_rank(struct ravl_node *n)$/;"	f	file:
ravl_node_rank_difference	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_rank_difference(struct ravl_node *n)$/;"	f	file:
ravl_node_rank_difference_parent	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_rank_difference_parent(struct ravl_node *p, struct ravl_node *n)$/;"	f	file:
ravl_node_ref	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_ref(struct ravl *ravl, struct ravl_node *n)$/;"	f	file:
ravl_node_sibling	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_sibling(struct ravl_node *n)$/;"	f	file:
ravl_node_slot_type	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_slot_type(struct ravl_node *n)$/;"	f	file:
ravl_node_successor	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_successor(struct ravl_node *n)$/;"	f	file:
ravl_node_type_most	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_node_type_most(struct ravl_node *n, enum ravl_slot_type t)$/;"	f	file:
ravl_predicate	deps/pmdk/src/libpmemobj/ravl.h	/^enum ravl_predicate {$/;"	g
ravl_predicate_holds	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_predicate_holds(struct ravl *ravl, int result, struct ravl_node **ret,$/;"	f	file:
ravl_remove	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_remove(struct ravl *ravl, struct ravl_node *n)$/;"	f
ravl_rotate	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_rotate(struct ravl *ravl, struct ravl_node *n)$/;"	f	file:
ravl_slot_opposite	deps/pmdk/src/libpmemobj/ravl.c	/^ravl_slot_opposite(enum ravl_slot_type t)$/;"	f	file:
ravl_slot_type	deps/pmdk/src/libpmemobj/ravl.c	/^enum ravl_slot_type {$/;"	g	file:
raw_buff	deps/pmdk/src/librpmem/rpmem_fip.c	/^	void *raw_buff;			\/* READ-after-WRITE buffer *\/$/;"	m	struct:rpmem_fip	file:
raw_mr	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct fid_mr *raw_mr;		\/* RAW memory region *\/$/;"	m	struct:rpmem_fip	typeref:struct:rpmem_fip::fid_mr	file:
raw_mr_desc	deps/pmdk/src/librpmem/rpmem_fip.c	/^	void *raw_mr_desc;		\/* RAW memory descriptor *\/$/;"	m	struct:rpmem_fip	file:
rawgco2ts	deps/lua/src/lstate.h	149;"	d
rawgco2u	deps/lua/src/lstate.h	151;"	d
rawmode	deps/linenoise/linenoise.c	/^static int rawmode = 0; \/* For atexit() function to check if restore is needed*\/$/;"	v	file:
rawsize	deps/pmdk/src/libpmemblk/btt.c	/^	uint64_t rawsize;		\/* size of containing namespace *\/$/;"	m	struct:btt	file:
rawtsvalue	deps/lua/src/lobject.h	94;"	d
rawuvalue	deps/lua/src/lobject.h	96;"	d
rb_children	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^enum rb_children {$/;"	g	file:
rb_color	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^enum rb_color {$/;"	g	file:
rb_gen	deps/jemalloc/include/jemalloc/internal/rb.h	338;"	d
rb_new	deps/jemalloc/include/jemalloc/internal/rb.h	120;"	d
rb_node	deps/jemalloc/include/jemalloc/internal/rb.h	27;"	d
rb_node	deps/jemalloc/include/jemalloc/internal/rb.h	33;"	d
rb_proto	deps/jemalloc/include/jemalloc/internal/rb.h	163;"	d
rb_tree	deps/jemalloc/include/jemalloc/internal/rb.h	42;"	d
rbt_node_new	deps/jemalloc/include/jemalloc/internal/rb.h	112;"	d
rbt_node_new	deps/jemalloc/include/jemalloc/internal/rb.h	83;"	d
rbtn_black_height	deps/jemalloc/test/unit/rb.c	3;"	d	file:
rbtn_black_set	deps/jemalloc/include/jemalloc/internal/rb.h	107;"	d
rbtn_black_set	deps/jemalloc/include/jemalloc/internal/rb.h	77;"	d
rbtn_color_set	deps/jemalloc/include/jemalloc/internal/rb.h	101;"	d
rbtn_color_set	deps/jemalloc/include/jemalloc/internal/rb.h	68;"	d
rbtn_first	deps/jemalloc/include/jemalloc/internal/rb.h	125;"	d
rbtn_last	deps/jemalloc/include/jemalloc/internal/rb.h	135;"	d
rbtn_left_get	deps/jemalloc/include/jemalloc/internal/rb.h	48;"	d
rbtn_left_set	deps/jemalloc/include/jemalloc/internal/rb.h	50;"	d
rbtn_red_get	deps/jemalloc/include/jemalloc/internal/rb.h	65;"	d
rbtn_red_get	deps/jemalloc/include/jemalloc/internal/rb.h	99;"	d
rbtn_red_set	deps/jemalloc/include/jemalloc/internal/rb.h	104;"	d
rbtn_red_set	deps/jemalloc/include/jemalloc/internal/rb.h	73;"	d
rbtn_right_get	deps/jemalloc/include/jemalloc/internal/rb.h	56;"	d
rbtn_right_get	deps/jemalloc/include/jemalloc/internal/rb.h	92;"	d
rbtn_right_set	deps/jemalloc/include/jemalloc/internal/rb.h	59;"	d
rbtn_right_set	deps/jemalloc/include/jemalloc/internal/rb.h	94;"	d
rbtn_rotate_left	deps/jemalloc/include/jemalloc/internal/rb.h	144;"	d
rbtn_rotate_right	deps/jemalloc/include/jemalloc/internal/rb.h	151;"	d
rbtree_map	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^struct rbtree_map {$/;"	s	file:
rbtree_map_check	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^rbtree_map_check(PMEMobjpool *pop, TOID(struct rbtree_map) map)$/;"	f
rbtree_map_clear	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^rbtree_map_clear(PMEMobjpool *pop, TOID(struct rbtree_map) map)$/;"	f
rbtree_map_create	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^rbtree_map_create(PMEMobjpool *pop, TOID(struct rbtree_map) *map, void *arg)$/;"	f
rbtree_map_destroy	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^rbtree_map_destroy(PMEMobjpool *pop, TOID(struct rbtree_map) *map)$/;"	f
rbtree_map_foreach	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^rbtree_map_foreach(PMEMobjpool *pop, TOID(struct rbtree_map) map,$/;"	f
rbtree_map_get	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^rbtree_map_get(PMEMobjpool *pop, TOID(struct rbtree_map) map, uint64_t key)$/;"	f
rbtree_map_insert	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^rbtree_map_insert(PMEMobjpool *pop, TOID(struct rbtree_map) map,$/;"	f
rbtree_map_insert_new	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^rbtree_map_insert_new(PMEMobjpool *pop, TOID(struct rbtree_map) map,$/;"	f
rbtree_map_is_empty	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^rbtree_map_is_empty(PMEMobjpool *pop, TOID(struct rbtree_map) map)$/;"	f
rbtree_map_lookup	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^rbtree_map_lookup(PMEMobjpool *pop, TOID(struct rbtree_map) map, uint64_t key)$/;"	f
rbtree_map_ops	deps/pmdk/src/examples/libpmemobj/map/map_rbtree.c	/^struct map_ops rbtree_map_ops = {$/;"	v	typeref:struct:map_ops
rbtree_map_remove	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^rbtree_map_remove(PMEMobjpool *pop, TOID(struct rbtree_map) map, uint64_t key)$/;"	f
rbtree_map_remove_free	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^rbtree_map_remove_free(PMEMobjpool *pop, TOID(struct rbtree_map) map,$/;"	f
rcvbuf	src/cluster.h	/^    sds rcvbuf;                 \/* Packet reception buffer *\/$/;"	m	struct:clusterLink
rd	deps/jemalloc/include/jemalloc/internal/arena.h	/^		arena_runs_dirty_link_t		rd;$/;"	m	union:arena_chunk_map_misc_s::__anon5
rd	deps/jemalloc/include/jemalloc/internal/extent.h	/^	arena_runs_dirty_link_t	rd;$/;"	m	struct:extent_node_s
rd_lane	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct rpmem_fip_lane rd_lane; \/* lane for read operation *\/$/;"	m	struct:rpmemd_fip	typeref:struct:rpmemd_fip::rpmem_fip_lane	file:
rd_link	deps/jemalloc/include/jemalloc/internal/arena.h	/^	qr(arena_runs_dirty_link_t)	rd_link;$/;"	m	struct:arena_runs_dirty_link_s
rdbCheckError	src/redis-check-rdb.c	/^void rdbCheckError(const char *fmt, ...) {$/;"	f
rdbCheckHandleCrash	src/redis-check-rdb.c	/^void rdbCheckHandleCrash(int sig, siginfo_t *info, void *secret) {$/;"	f
rdbCheckInfo	src/redis-check-rdb.c	/^void rdbCheckInfo(const char *fmt, ...) {$/;"	f
rdbCheckMode	src/redis-check-rdb.c	/^int rdbCheckMode = 0;$/;"	v
rdbCheckSetError	src/redis-check-rdb.c	/^void rdbCheckSetError(const char *fmt, ...) {$/;"	f
rdbCheckSetupSignals	src/redis-check-rdb.c	/^void rdbCheckSetupSignals(void) {$/;"	f
rdbCheckThenExit	src/rdb.c	/^void rdbCheckThenExit(int linenum, char *reason, ...) {$/;"	f
rdbEncodeInteger	src/rdb.c	/^int rdbEncodeInteger(long long value, unsigned char *enc) {$/;"	f
rdbExitReportCorruptRDB	src/rdb.c	48;"	d	file:
rdbGenericLoadStringObject	src/rdb.c	/^void *rdbGenericLoadStringObject(rio *rdb, int flags) {$/;"	f
rdbIsObjectType	src/rdb.h	89;"	d
rdbLoad	src/rdb.c	/^int rdbLoad(char *filename) {$/;"	f
rdbLoadDoubleValue	src/rdb.c	/^int rdbLoadDoubleValue(rio *rdb, double *val) {$/;"	f
rdbLoadEncodedStringObject	src/rdb.c	/^robj *rdbLoadEncodedStringObject(rio *rdb) {$/;"	f
rdbLoadIntegerObject	src/rdb.c	/^void *rdbLoadIntegerObject(rio *rdb, int enctype, int flags) {$/;"	f
rdbLoadLen	src/rdb.c	/^uint32_t rdbLoadLen(rio *rdb, int *isencoded) {$/;"	f
rdbLoadLzfStringObject	src/rdb.c	/^void *rdbLoadLzfStringObject(rio *rdb, int flags) {$/;"	f
rdbLoadMillisecondTime	src/rdb.c	/^long long rdbLoadMillisecondTime(rio *rdb) {$/;"	f
rdbLoadObject	src/rdb.c	/^robj *rdbLoadObject(int rdbtype, rio *rdb) {$/;"	f
rdbLoadObjectType	src/rdb.c	/^int rdbLoadObjectType(rio *rdb) {$/;"	f
rdbLoadProgressCallback	src/rdb.c	/^void rdbLoadProgressCallback(rio *r, const void *buf, size_t len) {$/;"	f
rdbLoadStringObject	src/rdb.c	/^robj *rdbLoadStringObject(rio *rdb) {$/;"	f
rdbLoadTime	src/rdb.c	/^time_t rdbLoadTime(rio *rdb) {$/;"	f
rdbLoadType	src/rdb.c	/^int rdbLoadType(rio *rdb) {$/;"	f
rdbRemoveTempFile	src/rdb.c	/^void rdbRemoveTempFile(pid_t childpid) {$/;"	f
rdbSave	src/rdb.c	/^int rdbSave(char *filename) {$/;"	f
rdbSaveAuxField	src/rdb.c	/^int rdbSaveAuxField(rio *rdb, void *key, size_t keylen, void *val, size_t vallen) {$/;"	f
rdbSaveAuxFieldStrInt	src/rdb.c	/^int rdbSaveAuxFieldStrInt(rio *rdb, char *key, long long val) {$/;"	f
rdbSaveAuxFieldStrStr	src/rdb.c	/^int rdbSaveAuxFieldStrStr(rio *rdb, char *key, char *val) {$/;"	f
rdbSaveBackground	src/rdb.c	/^int rdbSaveBackground(char *filename) {$/;"	f
rdbSaveDoubleValue	src/rdb.c	/^int rdbSaveDoubleValue(rio *rdb, double val) {$/;"	f
rdbSaveInfoAuxFields	src/rdb.c	/^int rdbSaveInfoAuxFields(rio *rdb) {$/;"	f
rdbSaveKeyValuePair	src/rdb.c	/^int rdbSaveKeyValuePair(rio *rdb, robj *key, robj *val,$/;"	f
rdbSaveLen	src/rdb.c	/^int rdbSaveLen(rio *rdb, uint32_t len) {$/;"	f
rdbSaveLongLongAsStringObject	src/rdb.c	/^ssize_t rdbSaveLongLongAsStringObject(rio *rdb, long long value) {$/;"	f
rdbSaveLzfBlob	src/rdb.c	/^ssize_t rdbSaveLzfBlob(rio *rdb, void *data, size_t compress_len,$/;"	f
rdbSaveLzfStringObject	src/rdb.c	/^ssize_t rdbSaveLzfStringObject(rio *rdb, unsigned char *s, size_t len) {$/;"	f
rdbSaveMillisecondTime	src/rdb.c	/^int rdbSaveMillisecondTime(rio *rdb, long long t) {$/;"	f
rdbSaveObject	src/rdb.c	/^ssize_t rdbSaveObject(rio *rdb, robj *o) {$/;"	f
rdbSaveObjectType	src/rdb.c	/^int rdbSaveObjectType(rio *rdb, robj *o) {$/;"	f
rdbSaveRawString	src/rdb.c	/^ssize_t rdbSaveRawString(rio *rdb, unsigned char *s, size_t len) {$/;"	f
rdbSaveRio	src/rdb.c	/^int rdbSaveRio(rio *rdb, int *error) {$/;"	f
rdbSaveRioWithEOFMark	src/rdb.c	/^int rdbSaveRioWithEOFMark(rio *rdb, int *error) {$/;"	f
rdbSaveStringObject	src/rdb.c	/^int rdbSaveStringObject(rio *rdb, robj *obj) {$/;"	f
rdbSaveToSlavesSockets	src/rdb.c	/^int rdbSaveToSlavesSockets(void) {$/;"	f
rdbSaveType	src/rdb.c	/^int rdbSaveType(rio *rdb, unsigned char type) {$/;"	f
rdbSavedObjectLen	src/rdb.c	/^size_t rdbSavedObjectLen(robj *o) {$/;"	f
rdbShowGenericInfo	src/redis-check-rdb.c	/^void rdbShowGenericInfo(void) {$/;"	f
rdbTryIntegerEncoding	src/rdb.c	/^int rdbTryIntegerEncoding(char *s, size_t len, unsigned char *enc) {$/;"	f
rdbWriteRaw	src/rdb.c	/^static int rdbWriteRaw(rio *rdb, void *p, size_t len) {$/;"	f	file:
rdb_bgsave_scheduled	src/server.h	/^    int rdb_bgsave_scheduled;       \/* BGSAVE when possible if true. *\/$/;"	m	struct:redisServer
rdb_check_doing_string	src/redis-check-rdb.c	/^char *rdb_check_doing_string[] = {$/;"	v
rdb_checksum	src/server.h	/^    int rdb_checksum;               \/* Use RDB checksum? *\/$/;"	m	struct:redisServer
rdb_child_pid	src/server.h	/^    pid_t rdb_child_pid;            \/* PID of RDB saving child *\/$/;"	m	struct:redisServer
rdb_child_type	src/server.h	/^    int rdb_child_type;             \/* Type of save by active child. *\/$/;"	m	struct:redisServer
rdb_compression	src/server.h	/^    int rdb_compression;            \/* Use compression in RDB? *\/$/;"	m	struct:redisServer
rdb_filename	src/redis-cli.c	/^    char *rdb_filename;$/;"	m	struct:config	file:
rdb_filename	src/server.h	/^    char *rdb_filename;             \/* Name of RDB file *\/$/;"	m	struct:redisServer
rdb_fsync_range	src/config.h	112;"	d
rdb_fsync_range	src/config.h	114;"	d
rdb_pipe_read_result_from_child	src/server.h	/^    int rdb_pipe_read_result_from_child; \/* of each slave in diskless SYNC. *\/$/;"	m	struct:redisServer
rdb_pipe_write_result_to_parent	src/server.h	/^    int rdb_pipe_write_result_to_parent; \/* RDB pipes used to return the state *\/$/;"	m	struct:redisServer
rdb_save_time_last	src/server.h	/^    time_t rdb_save_time_last;      \/* Time used by last RDB save run. *\/$/;"	m	struct:redisServer
rdb_save_time_start	src/server.h	/^    time_t rdb_save_time_start;     \/* Current RDB save start time. *\/$/;"	m	struct:redisServer
rdb_type_string	src/redis-check-rdb.c	/^char *rdb_type_string[] = {$/;"	v
rdbstate	src/redis-check-rdb.c	/^} rdbstate;$/;"	v	typeref:struct:__anon151
rdonly	deps/pmdk/src/common/set.h	/^	int rdonly;		\/* is set based on compat features, affects *\/$/;"	m	struct:pool_set_part
rdonly	deps/pmdk/src/common/set.h	/^	int rdonly;$/;"	m	struct:pool_set
rdonly	deps/pmdk/src/libpmemblk/blk.h	/^	int rdonly;		\/* true if pool is opened read-only *\/$/;"	m	struct:pmemblk
rdonly	deps/pmdk/src/libpmemlog/log.h	/^	int rdonly;		\/* true if pool is opened read-only *\/$/;"	m	struct:pmemlog
rdonly	deps/pmdk/src/libpmemobj/obj.h	/^	int rdonly;		\/* true if pool is opened read-only *\/$/;"	m	struct:pmemobjpool
read	deps/pmdk/src/libpmemobj/pmemops.h	/^		remote_read_fn read;$/;"	m	struct:pmem_ops::remote_ops
read	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct rpmem_fip_rma read;	\/* READ message *\/$/;"	m	struct:rpmem_fip_plane	typeref:struct:rpmem_fip_plane::rpmem_fip_rma	file:
read	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct rpmem_fip_rma read;	\/* READ message *\/$/;"	m	struct:rpmem_fip_rlane	typeref:struct:rpmem_fip_rlane::rpmem_fip_rma	file:
read	src/rio.h	/^    size_t (*read)(struct _rio *, void *buf, size_t len);$/;"	m	struct:_rio
readArgFromStdin	src/redis-cli.c	/^static sds readArgFromStdin(void) {$/;"	f	file:
readArgc	src/redis-check-aof.c	/^int readArgc(FILE *fp, long *target) {$/;"	f
readBytes	deps/hiredis/hiredis.c	/^static char *readBytes(redisReader *r, unsigned int bytes) {$/;"	f	file:
readBytes	src/redis-check-aof.c	/^int readBytes(FILE *fp, char *target, long length) {$/;"	f
readHandler	src/redis-benchmark.c	/^static void readHandler(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f	file:
readLine	deps/hiredis/hiredis.c	/^static char *readLine(redisReader *r, int *_len) {$/;"	f	file:
readLong	src/redis-check-aof.c	/^int readLong(FILE *fp, char prefix, long *target) {$/;"	f
readLongLong	deps/hiredis/hiredis.c	/^static long long readLongLong(char *s) {$/;"	f	file:
readQueryFromClient	src/networking.c	/^void readQueryFromClient(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
readString	src/redis-check-aof.c	/^int readString(FILE *fp, char** target) {$/;"	f
readSyncBulkPayload	src/replication.c	/^void readSyncBulkPayload(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
read_arch_flags	deps/pmdk/src/test/arch_flags/arch_flags.c	/^read_arch_flags(char *opts, struct arch_flags *arch_flags)$/;"	f	file:
read_arena	deps/pmdk/src/libpmemblk/btt.c	/^read_arena(struct btt *bttp, unsigned lane, uint64_t arena_off,$/;"	f	file:
read_arenas	deps/pmdk/src/libpmemblk/btt.c	/^read_arenas(struct btt *bttp, unsigned lane, unsigned narena)$/;"	f	file:
read_cb	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^read_cb(uv_stream_t *client, ssize_t nread, const uv_buf_t *buf)$/;"	f	file:
read_chars	deps/lua/src/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:
read_cli	tests/integration/redis-cli.tcl	/^    proc read_cli {fd} {$/;"	p
read_flog_pair	deps/pmdk/src/libpmemblk/btt.c	/^read_flog_pair(struct btt *bttp, unsigned lane, struct arena *arenap,$/;"	f	file:
read_flogs	deps/pmdk/src/libpmemblk/btt.c	/^read_flogs(struct btt *bttp, unsigned lane, struct arena *arenap)$/;"	f	file:
read_from_replication_stream	tests/test_helper.tcl	/^proc read_from_replication_stream {s} {$/;"	p
read_from_test_client	tests/test_helper.tcl	/^proc read_from_test_client fd {$/;"	p
read_global_test_configuration	deps/pmdk/src/test/RUNTESTS	/^read_global_test_configuration() {$/;"	f
read_info	deps/pmdk/src/libpmemblk/btt.c	/^read_info(struct btt *bttp, struct btt_info *infop)$/;"	f	file:
read_key	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	113;"	d	file:
read_layout	deps/pmdk/src/libpmemblk/btt.c	/^read_layout(struct btt *bttp, unsigned lane)$/;"	f	file:
read_line	deps/lua/src/liolib.c	/^static int read_line (lua_State *L, FILE *f) {$/;"	f	file:
read_line	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^read_line(unsigned char **line)$/;"	f
read_long_string	deps/lua/src/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, int sep) {$/;"	f	file:
read_number	deps/lua/src/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:
read_numeral	deps/lua/src/llex.c	/^static void read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
read_pattern	deps/pmdk/utils/check_license/check-license.c	/^read_pattern(const char *path_pattern, char *pattern)$/;"	f	file:
read_string	deps/lua/src/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:
read_test_configuration	deps/pmdk/src/test/RUNTESTS	/^read_test_configuration() {$/;"	f
read_value	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	114;"	d	file:
readable	deps/lua/src/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:
reader	deps/hiredis/hiredis.h	/^    redisReader *reader; \/* Protocol reader *\/$/;"	m	struct:redisContext
reader	deps/lua/src/lzio.h	/^  lua_Reader reader;$/;"	m	struct:Zio
reading	deps/hiredis/adapters/ae.h	/^    int reading, writing;$/;"	m	struct:redisAeEvents
reading	deps/hiredis/adapters/libev.h	/^    int reading, writing;$/;"	m	struct:redisLibevEvents
reading	src/sentinel.c	/^    int reading, writing;$/;"	m	struct:redisAeEvents	file:
readonlyCommand	src/cluster.c	/^void readonlyCommand(client *c) {$/;"	f
readwriteCommand	src/cluster.c	/^void readwriteCommand(client *c) {$/;"	f
readyList	src/server.h	/^typedef struct readyList {$/;"	s
readyList	src/server.h	/^} readyList;$/;"	t	typeref:struct:readyList
ready_keys	src/server.h	/^    dict *ready_keys;           \/* Blocked keys that received a PUSH *\/$/;"	m	struct:redisDb
ready_keys	src/server.h	/^    list *ready_keys;        \/* List of readyList structures for BLPOP & co *\/$/;"	m	struct:redisServer
real_pmem_get_block_device	deps/pmdk/src/test/common_badblock.sh	/^function real_pmem_get_block_device() {$/;"	f
real_pmem_get_block_device_node	deps/pmdk/src/test/common_badblock.sh	/^function real_pmem_get_block_device_node() {$/;"	f
real_pmem_get_dax_device	deps/pmdk/src/test/common_badblock.sh	/^function real_pmem_get_dax_device() {$/;"	f
real_pmem_get_dax_device_node	deps/pmdk/src/test/common_badblock.sh	/^function real_pmem_get_dax_device_node() {$/;"	f
realloc	deps/jemalloc/include/jemalloc/jemalloc.h	329;"	d
realloc	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	18;"	d
realloc	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	18;"	d
realloc	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^POBJ_LAYOUT_BEGIN(realloc);$/;"	v
realloc	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^POBJ_LAYOUT_END(realloc);$/;"	v
realloc	src/zmalloc.c	61;"	d	file:
realloc	src/zmalloc.c	66;"	d	file:
realloc_arg	deps/pmdk/src/test/obj_list/obj_list.c	/^struct realloc_arg {$/;"	s	file:
realloc_array	deps/pmdk/src/examples/libpmemobj/array/array.c	/^static fn_realloc realloc_array[] =$/;"	v	file:
realloc_dram	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^realloc_dram(struct obj_tx_bench *obj_bench, struct worker_info *worker,$/;"	f	file:
realloc_int	deps/pmdk/src/examples/libpmemobj/array/array.c	/^realloc_int(PMEMoid *info, size_t prev_size, size_t size)$/;"	f	file:
realloc_num	deps/pmdk/src/common/alloc.c	/^static __thread int realloc_num;$/;"	v	file:
realloc_op	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static fn_op_t realloc_op[] = {realloc_dram, realloc_tx, realloc_pmem};$/;"	v	file:
realloc_pmem	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^realloc_pmem(struct obj_tx_bench *obj_bench, struct worker_info *worker,$/;"	f	file:
realloc_pmemoid	deps/pmdk/src/examples/libpmemobj/array/array.c	/^realloc_pmemoid(PMEMoid *info, size_t prev_size, size_t size)$/;"	f	file:
realloc_set	deps/pmdk/src/common/vecq.h	/^realloc_set(void **buf, size_t s)$/;"	f
realloc_toid	deps/pmdk/src/examples/libpmemobj/array/array.c	/^realloc_toid(PMEMoid *info, size_t prev_size, size_t size)$/;"	f	file:
realloc_tx	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^realloc_tx(struct obj_tx_bench *obj_bench, struct worker_info *worker,$/;"	f	file:
realloc_worker	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^realloc_worker(void *arg)$/;"	f	file:
reallocs	deps/lua/src/strbuf.h	/^    int reallocs;$/;"	m	struct:__anon29
reallocs	deps/pmdk/src/test/set_funcs/set_funcs.c	/^	int reallocs;$/;"	m	struct:counters	file:
reallocs_null	deps/pmdk/src/test/set_funcs/set_funcs.c	/^	int reallocs_null;$/;"	m	struct:counters	file:
reallymarkobject	deps/lua/src/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:
rebalance_cluster_cmd	src/redis-trib.rb	/^    def rebalance_cluster_cmd(argv,opt)$/;"	f	class:RedisTrib.alloc_slots
rebuild	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^rebuild(void)$/;"	f	file:
recalc	deps/pmdk/src/libpmemobj/recycler.c	/^	VEC(, struct recycler_element) recalc;$/;"	m	struct:recycler	file:
recfield	deps/lua/src/lparser.c	/^static void recfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
recompress	src/quicklist.h	/^    unsigned int recompress : 1; \/* was this node previous compressed? *\/$/;"	m	struct:quicklistNode
reconnect	tests/test_helper.tcl	/^proc reconnect {args} {$/;"	p
reconnectingRedisCommand	src/redis-cli.c	/^static redisReply *reconnectingRedisCommand(redisContext *c, const char *fmt, ...) {$/;"	f	file:
record_open_files	deps/pmdk/src/test/unittest/ut.c	/^record_open_files()$/;"	f	file:
record_open_files	deps/pmdk/src/test/unittest/ut.c	/^record_open_files(void)$/;"	f	file:
recover	deps/pmdk/src/libpmemobj/lane.h	/^	section_layout_op recover;$/;"	m	struct:section_operations
recovery	deps/pmdk/src/test/obj_recovery/obj_recovery.c	/^POBJ_LAYOUT_BEGIN(recovery);$/;"	v
recovery	deps/pmdk/src/test/obj_recovery/obj_recovery.c	/^POBJ_LAYOUT_END(recovery);$/;"	v
recovery_file_exists	deps/pmdk/src/libpmempool/replica.h	/^	int recovery_file_exists;	\/* bad block recovery file exists *\/$/;"	m	struct:part_health_status
recovery_file_name	deps/pmdk/src/libpmempool/replica.h	/^	char *recovery_file_name;	\/* name of bad block recovery file *\/$/;"	m	struct:part_health_status
recreate	deps/pmdk/src/test/obj_recreate/obj_recreate.c	/^POBJ_LAYOUT_BEGIN(recreate);$/;"	v
recreate	deps/pmdk/src/test/obj_recreate/obj_recreate.c	/^POBJ_LAYOUT_END(recreate);$/;"	v
recreate_broken_parts	deps/pmdk/src/libpmempool/sync.c	/^recreate_broken_parts(struct pool_set *set,$/;"	f	file:
recv	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct rpmem_fip_msg recv;	\/* RECV message *\/$/;"	m	struct:rpmem_fip_plane	typeref:struct:rpmem_fip_plane::rpmem_fip_msg	file:
recv	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct rpmem_fip_msg recv;	\/* RECV message *\/$/;"	m	struct:rpmemd_fip_lane	typeref:struct:rpmemd_fip_lane::rpmem_fip_msg	file:
recv_posted	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	int recv_posted;		\/* recv buffer has been posted *\/$/;"	m	struct:rpmemd_fip_lane	file:
recycler	deps/pmdk/src/libpmemobj/recycler.c	/^struct recycler {$/;"	s	file:
recycler_delete	deps/pmdk/src/libpmemobj/recycler.c	/^recycler_delete(struct recycler *r)$/;"	f
recycler_element	deps/pmdk/src/libpmemobj/recycler.h	/^struct recycler_element {$/;"	s
recycler_element_cmp	deps/pmdk/src/libpmemobj/recycler.c	/^recycler_element_cmp(const void *lhs, const void *rhs)$/;"	f	file:
recycler_element_new	deps/pmdk/src/libpmemobj/recycler.c	/^recycler_element_new(struct palloc_heap *heap, const struct memory_block *m)$/;"	f
recycler_get	deps/pmdk/src/libpmemobj/recycler.c	/^recycler_get(struct recycler *r, struct memory_block *m)$/;"	f
recycler_inc_unaccounted	deps/pmdk/src/libpmemobj/recycler.c	/^recycler_inc_unaccounted(struct recycler *r, const struct memory_block *m)$/;"	f
recycler_new	deps/pmdk/src/libpmemobj/recycler.c	/^recycler_new(struct palloc_heap *heap, size_t nallocs, size_t *peak_arenas)$/;"	f
recycler_put	deps/pmdk/src/libpmemobj/recycler.c	/^recycler_put(struct recycler *r, const struct memory_block *m,$/;"	f
recycler_recalc	deps/pmdk/src/libpmemobj/recycler.c	/^recycler_recalc(struct recycler *r, int force)$/;"	f
recyclers	deps/pmdk/src/libpmemobj/heap.c	/^	struct recycler *recyclers[MAX_ALLOCATION_CLASSES];$/;"	m	struct:heap_rt	typeref:struct:heap_rt::recycler	file:
redis	tests/support/redis.tcl	/^proc redis {{server 127.0.0.1} {port 6379} {defer 0}} {$/;"	p
redisAeAddRead	deps/hiredis/adapters/ae.h	/^static void redisAeAddRead(void *privdata) {$/;"	f
redisAeAddRead	src/sentinel.c	/^static void redisAeAddRead(void *privdata) {$/;"	f	file:
redisAeAddWrite	deps/hiredis/adapters/ae.h	/^static void redisAeAddWrite(void *privdata) {$/;"	f
redisAeAddWrite	src/sentinel.c	/^static void redisAeAddWrite(void *privdata) {$/;"	f	file:
redisAeAttach	deps/hiredis/adapters/ae.h	/^static int redisAeAttach(aeEventLoop *loop, redisAsyncContext *ac) {$/;"	f
redisAeAttach	src/sentinel.c	/^static int redisAeAttach(aeEventLoop *loop, redisAsyncContext *ac) {$/;"	f	file:
redisAeCleanup	deps/hiredis/adapters/ae.h	/^static void redisAeCleanup(void *privdata) {$/;"	f
redisAeCleanup	src/sentinel.c	/^static void redisAeCleanup(void *privdata) {$/;"	f	file:
redisAeDelRead	deps/hiredis/adapters/ae.h	/^static void redisAeDelRead(void *privdata) {$/;"	f
redisAeDelRead	src/sentinel.c	/^static void redisAeDelRead(void *privdata) {$/;"	f	file:
redisAeDelWrite	deps/hiredis/adapters/ae.h	/^static void redisAeDelWrite(void *privdata) {$/;"	f
redisAeDelWrite	src/sentinel.c	/^static void redisAeDelWrite(void *privdata) {$/;"	f	file:
redisAeEvents	deps/hiredis/adapters/ae.h	/^typedef struct redisAeEvents {$/;"	s
redisAeEvents	deps/hiredis/adapters/ae.h	/^} redisAeEvents;$/;"	t	typeref:struct:redisAeEvents
redisAeEvents	src/sentinel.c	/^typedef struct redisAeEvents {$/;"	s	file:
redisAeEvents	src/sentinel.c	/^} redisAeEvents;$/;"	t	typeref:struct:redisAeEvents	file:
redisAeReadEvent	deps/hiredis/adapters/ae.h	/^static void redisAeReadEvent(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
redisAeReadEvent	src/sentinel.c	/^static void redisAeReadEvent(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f	file:
redisAeWriteEvent	deps/hiredis/adapters/ae.h	/^static void redisAeWriteEvent(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
redisAeWriteEvent	src/sentinel.c	/^static void redisAeWriteEvent(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f	file:
redisAppendCommand	deps/hiredis/hiredis.c	/^int redisAppendCommand(redisContext *c, const char *format, ...) {$/;"	f
redisAppendCommandArgv	deps/hiredis/hiredis.c	/^int redisAppendCommandArgv(redisContext *c, int argc, const char **argv, const size_t *argvlen) {$/;"	f
redisAppendFormattedCommand	deps/hiredis/hiredis.c	/^int redisAppendFormattedCommand(redisContext *c, const char *cmd, size_t len) {$/;"	f
redisAsciiArt	src/server.c	/^void redisAsciiArt(void) {$/;"	f
redisAsyncCommand	deps/hiredis/async.c	/^int redisAsyncCommand(redisAsyncContext *ac, redisCallbackFn *fn, void *privdata, const char *format, ...) {$/;"	f
redisAsyncCommandArgv	deps/hiredis/async.c	/^int redisAsyncCommandArgv(redisAsyncContext *ac, redisCallbackFn *fn, void *privdata, int argc, const char **argv, const size_t *argvlen) {$/;"	f
redisAsyncConnect	deps/hiredis/async.c	/^redisAsyncContext *redisAsyncConnect(const char *ip, int port) {$/;"	f
redisAsyncConnectBind	deps/hiredis/async.c	/^redisAsyncContext *redisAsyncConnectBind(const char *ip, int port,$/;"	f
redisAsyncConnectUnix	deps/hiredis/async.c	/^redisAsyncContext *redisAsyncConnectUnix(const char *path) {$/;"	f
redisAsyncContext	deps/hiredis/async.h	/^typedef struct redisAsyncContext {$/;"	s
redisAsyncContext	deps/hiredis/async.h	/^} redisAsyncContext;$/;"	t	typeref:struct:redisAsyncContext
redisAsyncDisconnect	deps/hiredis/async.c	/^void redisAsyncDisconnect(redisAsyncContext *ac) {$/;"	f
redisAsyncFree	deps/hiredis/async.c	/^void redisAsyncFree(redisAsyncContext *ac) {$/;"	f
redisAsyncHandleRead	deps/hiredis/async.c	/^void redisAsyncHandleRead(redisAsyncContext *ac) {$/;"	f
redisAsyncHandleWrite	deps/hiredis/async.c	/^void redisAsyncHandleWrite(redisAsyncContext *ac) {$/;"	f
redisAsyncInitialize	deps/hiredis/async.c	/^static redisAsyncContext *redisAsyncInitialize(redisContext *c) {$/;"	f	file:
redisAsyncSetConnectCallback	deps/hiredis/async.c	/^int redisAsyncSetConnectCallback(redisAsyncContext *ac, redisConnectCallback *fn) {$/;"	f
redisAsyncSetDisconnectCallback	deps/hiredis/async.c	/^int redisAsyncSetDisconnectCallback(redisAsyncContext *ac, redisDisconnectCallback *fn) {$/;"	f
redisBitpos	src/bitops.c	/^long redisBitpos(void *s, unsigned long count, int bit) {$/;"	f
redisBufferRead	deps/hiredis/hiredis.c	/^int redisBufferRead(redisContext *c) {$/;"	f
redisBufferWrite	deps/hiredis/hiredis.c	/^int redisBufferWrite(redisContext *c, int *done) {$/;"	f
redisBuildId	src/release.c	/^uint64_t redisBuildId(void) {$/;"	f
redisCallback	deps/hiredis/async.h	/^typedef struct redisCallback {$/;"	s
redisCallback	deps/hiredis/async.h	/^} redisCallback;$/;"	t	typeref:struct:redisCallback
redisCallbackFn	deps/hiredis/async.h	/^typedef void (redisCallbackFn)(struct redisAsyncContext*, void*, void*);$/;"	t
redisCallbackList	deps/hiredis/async.h	/^typedef struct redisCallbackList {$/;"	s
redisCallbackList	deps/hiredis/async.h	/^} redisCallbackList;$/;"	t	typeref:struct:redisCallbackList
redisCheckSocketError	deps/hiredis/net.c	/^int redisCheckSocketError(redisContext *c) {$/;"	f
redisCommand	deps/hiredis/hiredis.c	/^void *redisCommand(redisContext *c, const char *format, ...) {$/;"	f
redisCommand	src/server.h	/^struct redisCommand {$/;"	s
redisCommandArgv	deps/hiredis/hiredis.c	/^void *redisCommandArgv(redisContext *c, int argc, const char **argv, const size_t *argvlen) {$/;"	f
redisCommandProc	src/server.h	/^typedef void redisCommandProc(client *c);$/;"	t
redisCommandTable	src/server.c	/^struct redisCommand redisCommandTable[] = {$/;"	v	typeref:struct:redisCommand
redisConnect	deps/hiredis/hiredis.c	/^redisContext *redisConnect(const char *ip, int port) {$/;"	f
redisConnectBindNonBlock	deps/hiredis/hiredis.c	/^redisContext *redisConnectBindNonBlock(const char *ip, int port,$/;"	f
redisConnectCallback	deps/hiredis/async.h	/^typedef void (redisConnectCallback)(const struct redisAsyncContext*, int status);$/;"	t
redisConnectFd	deps/hiredis/hiredis.c	/^redisContext *redisConnectFd(int fd) {$/;"	f
redisConnectNonBlock	deps/hiredis/hiredis.c	/^redisContext *redisConnectNonBlock(const char *ip, int port) {$/;"	f
redisConnectUnix	deps/hiredis/hiredis.c	/^redisContext *redisConnectUnix(const char *path) {$/;"	f
redisConnectUnixNonBlock	deps/hiredis/hiredis.c	/^redisContext *redisConnectUnixNonBlock(const char *path) {$/;"	f
redisConnectUnixWithTimeout	deps/hiredis/hiredis.c	/^redisContext *redisConnectUnixWithTimeout(const char *path, const struct timeval tv) {$/;"	f
redisConnectWithTimeout	deps/hiredis/hiredis.c	/^redisContext *redisConnectWithTimeout(const char *ip, int port, const struct timeval tv) {$/;"	f
redisContext	deps/hiredis/hiredis.h	/^typedef struct redisContext {$/;"	s
redisContext	deps/hiredis/hiredis.h	/^} redisContext;$/;"	t	typeref:struct:redisContext
redisContextCloseFd	deps/hiredis/net.c	/^static void redisContextCloseFd(redisContext *c) {$/;"	f	file:
redisContextConnectBindTcp	deps/hiredis/net.c	/^int redisContextConnectBindTcp(redisContext *c, const char *addr, int port,$/;"	f
redisContextConnectTcp	deps/hiredis/net.c	/^int redisContextConnectTcp(redisContext *c, const char *addr, int port,$/;"	f
redisContextConnectUnix	deps/hiredis/net.c	/^int redisContextConnectUnix(redisContext *c, const char *path, const struct timeval *timeout) {$/;"	f
redisContextInit	deps/hiredis/hiredis.c	/^static redisContext *redisContextInit(void) {$/;"	f	file:
redisContextSetTimeout	deps/hiredis/net.c	/^int redisContextSetTimeout(redisContext *c, const struct timeval tv) {$/;"	f
redisContextWaitReady	deps/hiredis/net.c	/^static int redisContextWaitReady(redisContext *c, const struct timeval *timeout) {$/;"	f	file:
redisCopy	utils/redis-copy.rb	/^def redisCopy(opts={})$/;"	f
redisCreateSocket	deps/hiredis/net.c	/^static int redisCreateSocket(redisContext *c, int type) {$/;"	f	file:
redisDb	src/server.h	/^typedef struct redisDb {$/;"	s
redisDb	src/server.h	/^} redisDb;$/;"	t	typeref:struct:redisDb
redisDebug	src/server.h	1732;"	d
redisDebugMark	src/server.h	1734;"	d
redisDisconnectCallback	deps/hiredis/async.h	/^typedef void (redisDisconnectCallback)(const struct redisAsyncContext*, int status);$/;"	t
redisEnableKeepAlive	deps/hiredis/hiredis.c	/^int redisEnableKeepAlive(redisContext *c) {$/;"	f
redisFormatCommand	deps/hiredis/hiredis.c	/^int redisFormatCommand(char **target, const char *format, ...) {$/;"	f
redisFormatCommandArgv	deps/hiredis/hiredis.c	/^int redisFormatCommandArgv(char **target, int argc, const char **argv, const size_t *argvlen) {$/;"	f
redisFree	deps/hiredis/hiredis.c	/^void redisFree(redisContext *c) {$/;"	f
redisFreeKeepFd	deps/hiredis/hiredis.c	/^int redisFreeKeepFd(redisContext *c) {$/;"	f
redisFunctionSym	src/server.h	/^struct redisFunctionSym {$/;"	s
redisGetKeysProc	src/server.h	/^typedef int *redisGetKeysProc(struct redisCommand *cmd, robj **argv, int argc, int *numkeys);$/;"	t
redisGetReply	deps/hiredis/hiredis.c	/^int redisGetReply(redisContext *c, void **reply) {$/;"	f
redisGetReplyFromReader	deps/hiredis/hiredis.c	/^int redisGetReplyFromReader(redisContext *c, void **reply) {$/;"	f
redisGitDirty	src/release.c	/^char *redisGitDirty(void) {$/;"	f
redisGitSHA1	src/release.c	/^char *redisGitSHA1(void) {$/;"	f
redisIsSupervised	src/server.c	/^int redisIsSupervised(int mode) {$/;"	f
redisKeepAlive	deps/hiredis/net.c	/^int redisKeepAlive(redisContext *c, int interval) {$/;"	f
redisLibevAddRead	deps/hiredis/adapters/libev.h	/^static void redisLibevAddRead(void *privdata) {$/;"	f
redisLibevAddWrite	deps/hiredis/adapters/libev.h	/^static void redisLibevAddWrite(void *privdata) {$/;"	f
redisLibevAttach	deps/hiredis/adapters/libev.h	/^static int redisLibevAttach(EV_P_ redisAsyncContext *ac) {$/;"	f
redisLibevCleanup	deps/hiredis/adapters/libev.h	/^static void redisLibevCleanup(void *privdata) {$/;"	f
redisLibevDelRead	deps/hiredis/adapters/libev.h	/^static void redisLibevDelRead(void *privdata) {$/;"	f
redisLibevDelWrite	deps/hiredis/adapters/libev.h	/^static void redisLibevDelWrite(void *privdata) {$/;"	f
redisLibevEvents	deps/hiredis/adapters/libev.h	/^typedef struct redisLibevEvents {$/;"	s
redisLibevEvents	deps/hiredis/adapters/libev.h	/^} redisLibevEvents;$/;"	t	typeref:struct:redisLibevEvents
redisLibevReadEvent	deps/hiredis/adapters/libev.h	/^static void redisLibevReadEvent(EV_P_ ev_io *watcher, int revents) {$/;"	f
redisLibevWriteEvent	deps/hiredis/adapters/libev.h	/^static void redisLibevWriteEvent(EV_P_ ev_io *watcher, int revents) {$/;"	f
redisLibeventAddRead	deps/hiredis/adapters/libevent.h	/^static void redisLibeventAddRead(void *privdata) {$/;"	f
redisLibeventAddWrite	deps/hiredis/adapters/libevent.h	/^static void redisLibeventAddWrite(void *privdata) {$/;"	f
redisLibeventAttach	deps/hiredis/adapters/libevent.h	/^static int redisLibeventAttach(redisAsyncContext *ac, struct event_base *base) {$/;"	f
redisLibeventCleanup	deps/hiredis/adapters/libevent.h	/^static void redisLibeventCleanup(void *privdata) {$/;"	f
redisLibeventDelRead	deps/hiredis/adapters/libevent.h	/^static void redisLibeventDelRead(void *privdata) {$/;"	f
redisLibeventDelWrite	deps/hiredis/adapters/libevent.h	/^static void redisLibeventDelWrite(void *privdata) {$/;"	f
redisLibeventEvents	deps/hiredis/adapters/libevent.h	/^typedef struct redisLibeventEvents {$/;"	s
redisLibeventEvents	deps/hiredis/adapters/libevent.h	/^} redisLibeventEvents;$/;"	t	typeref:struct:redisLibeventEvents
redisLibeventReadEvent	deps/hiredis/adapters/libevent.h	/^static void redisLibeventReadEvent(int fd, short event, void *arg) {$/;"	f
redisLibeventWriteEvent	deps/hiredis/adapters/libevent.h	/^static void redisLibeventWriteEvent(int fd, short event, void *arg) {$/;"	f
redisLibuvAddRead	deps/hiredis/adapters/libuv.h	/^static void redisLibuvAddRead(void *privdata) {$/;"	f
redisLibuvAddWrite	deps/hiredis/adapters/libuv.h	/^static void redisLibuvAddWrite(void *privdata) {$/;"	f
redisLibuvAttach	deps/hiredis/adapters/libuv.h	/^static int redisLibuvAttach(redisAsyncContext* ac, uv_loop_t* loop) {$/;"	f
redisLibuvCleanup	deps/hiredis/adapters/libuv.h	/^static void redisLibuvCleanup(void *privdata) {$/;"	f
redisLibuvDelRead	deps/hiredis/adapters/libuv.h	/^static void redisLibuvDelRead(void *privdata) {$/;"	f
redisLibuvDelWrite	deps/hiredis/adapters/libuv.h	/^static void redisLibuvDelWrite(void *privdata) {$/;"	f
redisLibuvEvents	deps/hiredis/adapters/libuv.h	/^typedef struct redisLibuvEvents {$/;"	s
redisLibuvEvents	deps/hiredis/adapters/libuv.h	/^} redisLibuvEvents;$/;"	t	typeref:struct:redisLibuvEvents
redisLibuvPoll	deps/hiredis/adapters/libuv.h	/^static void redisLibuvPoll(uv_poll_t* handle, int status, int events) {$/;"	f
redisLrand48	src/rand.c	/^int32_t redisLrand48() {$/;"	f
redisNodeFlags	src/cluster.c	/^struct redisNodeFlags {$/;"	s	file:
redisNodeFlagsTable	src/cluster.c	/^static struct redisNodeFlags redisNodeFlagsTable[] = {$/;"	v	typeref:struct:redisNodeFlags	file:
redisObject	src/server.h	/^typedef struct redisObject {$/;"	s
redisOp	src/server.h	/^typedef struct redisOp {$/;"	s
redisOp	src/server.h	/^} redisOp;$/;"	t	typeref:struct:redisOp
redisOpArray	src/server.h	/^typedef struct redisOpArray {$/;"	s
redisOpArray	src/server.h	/^} redisOpArray;$/;"	t	typeref:struct:redisOpArray
redisOpArrayAppend	src/server.c	/^int redisOpArrayAppend(redisOpArray *oa, struct redisCommand *cmd, int dbid,$/;"	f
redisOpArrayFree	src/server.c	/^void redisOpArrayFree(redisOpArray *oa) {$/;"	f
redisOpArrayInit	src/server.c	/^void redisOpArrayInit(redisOpArray *oa) {$/;"	f
redisOutOfMemoryHandler	src/server.c	/^void redisOutOfMemoryHandler(size_t allocation_size) {$/;"	f
redisPopcount	src/bitops.c	/^size_t redisPopcount(void *s, long count) {$/;"	f
redisProcessCallbacks	deps/hiredis/async.c	/^void redisProcessCallbacks(redisAsyncContext *ac) {$/;"	f
redisProtocolToLuaType	src/scripting.c	/^char *redisProtocolToLuaType(lua_State *lua, char* reply) {$/;"	f
redisProtocolToLuaType_Bulk	src/scripting.c	/^char *redisProtocolToLuaType_Bulk(lua_State *lua, char *reply) {$/;"	f
redisProtocolToLuaType_Error	src/scripting.c	/^char *redisProtocolToLuaType_Error(lua_State *lua, char *reply) {$/;"	f
redisProtocolToLuaType_Int	src/scripting.c	/^char *redisProtocolToLuaType_Int(lua_State *lua, char *reply) {$/;"	f
redisProtocolToLuaType_MultiBulk	src/scripting.c	/^char *redisProtocolToLuaType_MultiBulk(lua_State *lua, char *reply) {$/;"	f
redisProtocolToLuaType_Status	src/scripting.c	/^char *redisProtocolToLuaType_Status(lua_State *lua, char *reply) {$/;"	f
redisReadTask	deps/hiredis/hiredis.h	/^typedef struct redisReadTask {$/;"	s
redisReadTask	deps/hiredis/hiredis.h	/^} redisReadTask;$/;"	t	typeref:struct:redisReadTask
redisReader	deps/hiredis/hiredis.h	/^typedef struct redisReader {$/;"	s
redisReader	deps/hiredis/hiredis.h	/^} redisReader;$/;"	t	typeref:struct:redisReader
redisReaderCreate	deps/hiredis/hiredis.c	/^redisReader *redisReaderCreate(void) {$/;"	f
redisReaderFeed	deps/hiredis/hiredis.c	/^int redisReaderFeed(redisReader *r, const char *buf, size_t len) {$/;"	f
redisReaderFree	deps/hiredis/hiredis.c	/^void redisReaderFree(redisReader *r) {$/;"	f
redisReaderGetReply	deps/hiredis/hiredis.c	/^int redisReaderGetReply(redisReader *r, void **reply) {$/;"	f
redisReply	deps/hiredis/hiredis.h	/^typedef struct redisReply {$/;"	s
redisReply	deps/hiredis/hiredis.h	/^} redisReply;$/;"	t	typeref:struct:redisReply
redisReplyObjectFunctions	deps/hiredis/hiredis.h	/^typedef struct redisReplyObjectFunctions {$/;"	s
redisReplyObjectFunctions	deps/hiredis/hiredis.h	/^} redisReplyObjectFunctions;$/;"	t	typeref:struct:redisReplyObjectFunctions
redisReplyReaderCreate	deps/hiredis/hiredis.h	149;"	d
redisReplyReaderFeed	deps/hiredis/hiredis.h	151;"	d
redisReplyReaderFree	deps/hiredis/hiredis.h	150;"	d
redisReplyReaderGetError	deps/hiredis/hiredis.h	155;"	d
redisReplyReaderGetObject	deps/hiredis/hiredis.h	154;"	d
redisReplyReaderGetReply	deps/hiredis/hiredis.h	152;"	d
redisReplyReaderSetPrivdata	deps/hiredis/hiredis.h	153;"	d
redisServer	src/server.h	/^struct redisServer {$/;"	s
redisSetBlocking	deps/hiredis/net.c	/^static int redisSetBlocking(redisContext *c, int blocking) {$/;"	f	file:
redisSetProcTitle	src/server.c	/^void redisSetProcTitle(char *title) {$/;"	f
redisSetReuseAddr	deps/hiredis/net.c	/^static int redisSetReuseAddr(redisContext *c) {$/;"	f	file:
redisSetTcpNoDelay	deps/hiredis/net.c	/^static int redisSetTcpNoDelay(redisContext *c) {$/;"	f	file:
redisSetTimeout	deps/hiredis/hiredis.c	/^int redisSetTimeout(redisContext *c, const struct timeval tv) {$/;"	f
redisSha1	utils/redis-sha1.rb	/^def redisSha1(opts={})$/;"	f
redisSortObject	src/server.h	/^} redisSortObject;$/;"	t	typeref:struct:_redisSortObject
redisSortOperation	src/server.h	/^} redisSortOperation;$/;"	t	typeref:struct:_redisSortOperation
redisSrand48	src/rand.c	/^void redisSrand48(int32_t seedval) {$/;"	f
redisSupervisedSystemd	src/server.c	/^int redisSupervisedSystemd(void) {$/;"	f
redisSupervisedUpstart	src/server.c	/^int redisSupervisedUpstart(void) {$/;"	f
redis_check_rdb	src/redis-check-rdb.c	/^int redis_check_rdb(char *rdbfilename) {$/;"	f
redis_check_rdb_main	src/redis-check-rdb.c	/^int redis_check_rdb_main(int argc, char **argv) {$/;"	f
redis_cluster	tests/support/cluster.tcl	/^proc redis_cluster {nodes} {$/;"	p
redis_deferring_client	tests/test_helper.tcl	/^proc redis_deferring_client {args} {$/;"	p
redis_fstat	src/config.h	44;"	d
redis_fstat	src/config.h	47;"	d
redis_math_random	src/scripting.c	/^int redis_math_random (lua_State *L) {$/;"	f
redis_math_randomseed	src/scripting.c	/^int redis_math_randomseed (lua_State *L) {$/;"	f
redis_pmem_root	src/server.h	/^struct redis_pmem_root {$/;"	s
redis_stat	src/config.h	45;"	d
redis_stat	src/config.h	48;"	d
redisvAppendCommand	deps/hiredis/hiredis.c	/^int redisvAppendCommand(redisContext *c, const char *format, va_list ap) {$/;"	f
redisvAsyncCommand	deps/hiredis/async.c	/^int redisvAsyncCommand(redisAsyncContext *ac, redisCallbackFn *fn, void *privdata, const char *format, va_list ap) {$/;"	f
redisvCommand	deps/hiredis/hiredis.c	/^void *redisvCommand(redisContext *c, const char *format, va_list ap) {$/;"	f
redisvFormatCommand	deps/hiredis/hiredis.c	/^int redisvFormatCommand(char **target, const char *format, va_list ap) {$/;"	f
redo_log_constructor	deps/pmdk/src/test/obj_memops/obj_memops.c	/^redo_log_constructor(void *ctx, void *ptr, size_t usable_size, void *arg)$/;"	f	file:
redo_userbufs	deps/pmdk/src/libpmemobj/tx.c	/^	VEC(, struct user_buffer_def) redo_userbufs;$/;"	m	struct:tx	file:
redo_userbufs_capacity	deps/pmdk/src/libpmemobj/tx.c	/^	size_t redo_userbufs_capacity;$/;"	m	struct:tx	file:
redzone_size	deps/jemalloc/include/jemalloc/internal/arena.h	/^	size_t			redzone_size;$/;"	m	struct:arena_bin_info_s
ref	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint32_t ref;	\/* reference counter *\/$/;"	m	struct:objfs_inode	file:
ref	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^static struct arena_alloc ref;$/;"	v	typeref:struct:arena_alloc	file:
refcount	src/sentinel.c	/^    int refcount;          \/* Number of sentinelRedisInstance owners. *\/$/;"	m	struct:instanceLink	file:
refcount	src/server.h	/^    int refcount;$/;"	m	struct:redisObject
refix	deps/pmdk/Makefile	/^rpm dpkg: override prefix=\/usr$/;"	m
refreshGoodSlavesCount	src/replication.c	/^void refreshGoodSlavesCount(void) {$/;"	f
refreshLine	deps/linenoise/linenoise.c	/^static void refreshLine(struct linenoiseState *l) {$/;"	f	file:
refreshMultiLine	deps/linenoise/linenoise.c	/^static void refreshMultiLine(struct linenoiseState *l) {$/;"	f	file:
refreshShowHints	deps/linenoise/linenoise.c	/^void refreshShowHints(struct abuf *ab, struct linenoiseState *l, int plen) {$/;"	f
refreshSingleLine	deps/linenoise/linenoise.c	/^static void refreshSingleLine(struct linenoiseState *l) {$/;"	f	file:
reg0_offset	deps/jemalloc/include/jemalloc/internal/arena.h	/^	uint32_t		reg0_offset;$/;"	m	struct:arena_bin_info_s
reg_file	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def reg_file(self, file_op):$/;"	m	class:CollectingState
reg_interval	deps/jemalloc/include/jemalloc/internal/arena.h	/^	size_t			reg_interval;$/;"	m	struct:arena_bin_info_s
reg_size	deps/jemalloc/include/jemalloc/internal/arena.h	/^	size_t			reg_size;$/;"	m	struct:arena_bin_info_s
region	deps/pmdk/src/tools/daxio/daxio.c	/^	struct ndctl_region *region;	\/* parent region *\/$/;"	m	struct:daxio_device	typeref:struct:daxio_device::ndctl_region	file:
region_id	deps/pmdk/src/common/mmap.h	/^	int region_id;$/;"	m	struct:map_tracker
registerlocalvar	deps/lua/src/lparser.c	/^static int registerlocalvar (LexState *ls, TString *varname) {$/;"	f	file:
registers	src/hyperloglog.c	/^    uint8_t registers[]; \/* Data bytes. *\/$/;"	m	struct:hllhdr	file:
registry	deps/lua/src/lstate.h	25;"	d
rehash	deps/lua/src/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:
rehashidx	src/dict.h	/^    long rehashidx; \/* rehashing not in progress if rehashidx == -1 *\/$/;"	m	struct:dict
reinit	deps/pmdk/src/libpmemobj/memblock.c	/^	void (*reinit)(const struct memory_block *m);$/;"	m	struct:__anon133	file:
reinit_chunk	deps/pmdk/src/libpmemobj/memblock.h	/^	void (*reinit_chunk)(const struct memory_block *m);$/;"	m	struct:memory_block_ops
reinit_header	deps/pmdk/src/libpmemobj/memblock.h	/^	void (*reinit_header)(const struct memory_block *m);$/;"	m	struct:memory_block_ops
relaxed	deps/pmdk/src/benchmarks/rpmem.cpp	/^	bool relaxed; \/* use RPMEM_PERSIST_RELAXED \/ RPMEM_FLUSH_RELAXED flag *\/$/;"	m	struct:rpmem_args	file:
releaseInstanceLink	src/sentinel.c	/^instanceLink *releaseInstanceLink(instanceLink *link, sentinelRedisInstance *ri)$/;"	f
releaseSentinelAddr	src/sentinel.c	/^void releaseSentinelAddr(sentinelAddr *sa) {$/;"	f
releaseSentinelRedisInstance	src/sentinel.c	/^void releaseSentinelRedisInstance(sentinelRedisInstance *ri) {$/;"	f
release_and_free_tx_locks	deps/pmdk/src/libpmemobj/tx.c	/^release_and_free_tx_locks(struct tx *tx)$/;"	f	file:
release_hdr	src/Makefile	/^release_hdr := $(shell sh -c '.\/mkreleasehdr.sh')$/;"	m
relocated	deps/pmdk/src/include/libpmemobj/atomic_base.h	/^	size_t relocated; \/* number of relocated objects *\/$/;"	m	struct:pobj_defrag_result
remarkupvals	deps/lua/src/lgc.c	/^static void remarkupvals (global_State *g) {$/;"	f	file:
remote	deps/pmdk/src/common/set.h	/^	int remote;		\/* true if contains a remote replica *\/$/;"	m	struct:pool_set
remote	deps/pmdk/src/common/set.h	/^	struct remote_replica *remote;	\/* not NULL if the replica *\/$/;"	m	struct:pool_replica	typeref:struct:pool_replica::remote_replica
remote	deps/pmdk/src/common/set.h	/^	struct remote_replica *remote;$/;"	m	struct:part_file	typeref:struct:part_file::remote_replica
remote	deps/pmdk/src/libpmemobj/pmemops.h	/^	} remote;$/;"	m	struct:pmem_ops	typeref:struct:pmem_ops::remote_ops
remote_base	deps/pmdk/src/libpmemobj/obj.h	/^	uintptr_t remote_base;	\/* beginning of the remote pool *\/$/;"	m	struct:pmemobjpool
remote_create_or_open	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^remote_create_or_open(const char *target, const char *poolset,$/;"	f	file:
remote_hdr	deps/pmdk/src/common/set.h	/^	void *remote_hdr;	\/* allocated header for remote replica *\/$/;"	m	struct:pool_set_part
remote_open	deps/pmdk/src/examples/librpmem/hello.c	/^remote_open(const char *target, const char *poolset, void *pool,$/;"	f	file:
remote_ops	deps/pmdk/src/libpmemobj/pmemops.h	/^	struct remote_ops {$/;"	s	struct:pmem_ops
remote_read	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^remote_read(RPMEMpool *rpp, void *buff)$/;"	f	file:
remote_read	deps/pmdk/src/examples/librpmem/hello.c	/^remote_read(RPMEMpool *rpp, void *buff)$/;"	f	file:
remote_read_fn	deps/pmdk/src/libpmemobj/pmemops.h	/^typedef int (*remote_read_fn)(void *ctx, uintptr_t base, void *dest, void *addr,$/;"	t
remote_replica	deps/pmdk/src/common/set.h	/^struct remote_replica {$/;"	s
remote_write	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^remote_write(RPMEMpool *rpp)$/;"	f	file:
remote_write	deps/pmdk/src/examples/librpmem/hello.c	/^remote_write(RPMEMpool *rpp)$/;"	f	file:
remove	deps/pmdk/src/benchmarks/map_bench.cpp	/^	int (*remove)(struct map_bench *, uint64_t);$/;"	m	struct:map_bench	file:
remove	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	PMEMoid(*remove)(PMEMobjpool *pop, TOID(struct map) map,$/;"	m	struct:map_ops
removeExpire	src/db.c	/^int removeExpire(redisDb *db, robj *key) {$/;"	f
removeMatchingSentinelFromMaster	src/sentinel.c	/^int removeMatchingSentinelFromMaster(sentinelRedisInstance *master, char *runid) {$/;"	f
remove_child	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^remove_child(PMEMobjpool *pop,$/;"	f	file:
remove_child16	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^remove_child16(PMEMobjpool *pop,$/;"	f	file:
remove_child256	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^remove_child256(PMEMobjpool *pop,$/;"	f	file:
remove_child4	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^remove_child4(PMEMobjpool *pop,$/;"	f	file:
remove_child48	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^remove_child48(PMEMobjpool *pop,$/;"	f	file:
remove_count	deps/pmdk/src/libpmemobj/critnib.c	/^	uint64_t remove_count;$/;"	m	struct:critnib	file:
remove_file	deps/pmdk/src/tools/pmreorder/binaryoutputhandler.py	/^    def remove_file(self, file):$/;"	m	class:BinaryOutputHandler
remove_free	deps/pmdk/src/examples/libpmemobj/map/map.h	/^	int(*remove_free)(PMEMobjpool *pop, TOID(struct map) map,$/;"	m	struct:map_ops
remove_hdrs	deps/pmdk/src/libpmempool/transform.c	/^remove_hdrs(struct pool_set *set_in, struct pool_set *set_out,$/;"	f	file:
remove_hdrs_replica	deps/pmdk/src/libpmempool/transform.c	/^remove_hdrs_replica(struct pool_set *set_in, struct pool_set *set_out,$/;"	f	file:
remove_iterate_cb	deps/jemalloc/test/unit/rb.c	/^remove_iterate_cb(tree_t *tree, node_t *node, void *data)$/;"	f	file:
remove_last	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^remove_last()$/;"	f	file:
remove_log_files	deps/pmdk/src/test/unittest/basetest.py	/^    def remove_log_files(self):$/;"	m	class:BaseTest
remove_op	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^remove_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
remove_remote	deps/pmdk/src/libpmempool/sync.c	/^remove_remote(const char *target, const char *pool_set)$/;"	f	file:
remove_remote	deps/pmdk/src/tools/pmempool/rm.c	/^remove_remote(const char *target, const char *pool_set)$/;"	f	file:
remove_reverse_iterate_cb	deps/jemalloc/test/unit/rb.c	/^remove_reverse_iterate_cb(tree_t *tree, node_t *node, void *data)$/;"	f	file:
removeentry	deps/lua/src/lgc.c	/^static void removeentry (Node *n) {$/;"	f	file:
removevalues	deps/lua/src/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:
removevars	deps/lua/src/lparser.c	/^static void removevars (LexState *ls, int tolevel) {$/;"	f	file:
remrangebyrank	tests/unit/type/zset.tcl	/^            proc remrangebyrank {min max} {$/;"	p
remrangebyscore	tests/unit/type/zset.tcl	/^            proc remrangebyscore {min max} {$/;"	p
renameCommand	src/db.c	/^void renameCommand(client *c) {$/;"	f
renameGenericCommand	src/db.c	/^void renameGenericCommand(client *c, int nx) {$/;"	f
renamenxCommand	src/db.c	/^void renamenxCommand(client *c) {$/;"	f
repair	deps/pmdk/src/tools/pmempool/check.c	/^	bool repair;		\/* do repair *\/$/;"	m	struct:pmempool_check_context	file:
repeat	src/redis-cli.c	/^    long repeat;$/;"	m	struct:config	file:
repeats	deps/pmdk/src/benchmarks/benchmark.hpp	/^	unsigned repeats;	\/* number of repeats of one scenario *\/$/;"	m	struct:benchmark_args
repeatstat	deps/lua/src/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:
repl	src/redis-cli.c	/^static void repl(void) {$/;"	f	file:
replScriptCacheDictType	src/server.c	/^dictType replScriptCacheDictType = {$/;"	v
repl_ack_off	src/server.h	/^    long long repl_ack_off; \/* Replication ack offset, if this is a slave. *\/$/;"	m	struct:client
repl_ack_time	src/server.h	/^    long long repl_ack_time;\/* Replication ack time, if this is a slave. *\/$/;"	m	struct:client
repl_backlog	src/server.h	/^    char *repl_backlog;             \/* Replication backlog for partial syncs *\/$/;"	m	struct:redisServer
repl_backlog_histlen	src/server.h	/^    long long repl_backlog_histlen; \/* Backlog actual data length *\/$/;"	m	struct:redisServer
repl_backlog_idx	src/server.h	/^    long long repl_backlog_idx;     \/* Backlog circular buffer current offset *\/$/;"	m	struct:redisServer
repl_backlog_off	src/server.h	/^    long long repl_backlog_off;     \/* Replication offset of first byte in the$/;"	m	struct:redisServer
repl_backlog_size	src/server.h	/^    long long repl_backlog_size;    \/* Backlog circular buffer size *\/$/;"	m	struct:redisServer
repl_backlog_time_limit	src/server.h	/^    time_t repl_backlog_time_limit; \/* Time without slaves after the backlog$/;"	m	struct:redisServer
repl_disable_tcp_nodelay	src/server.h	/^    int repl_disable_tcp_nodelay;   \/* Disable TCP_NODELAY after SYNC? *\/$/;"	m	struct:redisServer
repl_diskless_sync	src/server.h	/^    int repl_diskless_sync;         \/* Send RDB to slaves sockets directly. *\/$/;"	m	struct:redisServer
repl_diskless_sync_delay	src/server.h	/^    int repl_diskless_sync_delay;   \/* Delay to start a diskless repl BGSAVE. *\/$/;"	m	struct:redisServer
repl_down_since	src/server.h	/^    time_t repl_down_since; \/* Unix time at which link with master went down *\/$/;"	m	struct:redisServer
repl_good_slaves_count	src/server.h	/^    int repl_good_slaves_count;     \/* Number of slaves with lag <= max_lag. *\/$/;"	m	struct:redisServer
repl_master_initial_offset	src/server.h	/^    long long repl_master_initial_offset;         \/* Master PSYNC offset. *\/$/;"	m	struct:redisServer
repl_master_runid	src/server.h	/^    char repl_master_runid[CONFIG_RUN_ID_SIZE+1];  \/* Master run id for PSYNC.*\/$/;"	m	struct:redisServer
repl_min_slaves_max_lag	src/server.h	/^    int repl_min_slaves_max_lag;    \/* Max lag of <count> slaves to write. *\/$/;"	m	struct:redisServer
repl_min_slaves_to_write	src/server.h	/^    int repl_min_slaves_to_write;   \/* Min number of slaves to write. *\/$/;"	m	struct:redisServer
repl_no_slaves_since	src/server.h	/^    time_t repl_no_slaves_since;    \/* We have no slaves since that time.$/;"	m	struct:redisServer
repl_offset	src/cluster.h	/^    long long repl_offset;      \/* Last known repl offset for this node. *\/$/;"	m	struct:clusterNode
repl_offset_time	src/cluster.h	/^    mstime_t repl_offset_time;  \/* Unix time we received offset for this node *\/$/;"	m	struct:clusterNode
repl_ping_slave_period	src/server.h	/^    int repl_ping_slave_period;     \/* Master pings the slave every N seconds *\/$/;"	m	struct:redisServer
repl_put_online_on_ack	src/server.h	/^    int repl_put_online_on_ack; \/* Install slave write handler on ACK. *\/$/;"	m	struct:client
repl_scriptcache_dict	src/server.h	/^    dict *repl_scriptcache_dict;        \/* SHA1 all slaves are aware of. *\/$/;"	m	struct:redisServer
repl_scriptcache_fifo	src/server.h	/^    list *repl_scriptcache_fifo;        \/* First in, first out LRU eviction. *\/$/;"	m	struct:redisServer
repl_scriptcache_size	src/server.h	/^    unsigned int repl_scriptcache_size; \/* Max number of elements. *\/$/;"	m	struct:redisServer
repl_serve_stale_data	src/server.h	/^    int repl_serve_stale_data; \/* Serve stale data when link is down? *\/$/;"	m	struct:redisServer
repl_slave_ro	src/server.h	/^    int repl_slave_ro;          \/* Slave is read only? *\/$/;"	m	struct:redisServer
repl_state	src/server.h	/^    int repl_state;          \/* Replication status if the instance is a slave *\/$/;"	m	struct:redisServer
repl_syncio_timeout	src/server.h	/^    int repl_syncio_timeout; \/* Timeout for synchronous I\/O calls *\/$/;"	m	struct:redisServer
repl_timeout	src/server.h	/^    int repl_timeout;               \/* Timeout after N seconds of master idle *\/$/;"	m	struct:redisServer
repl_transfer_fd	src/server.h	/^    int repl_transfer_fd;    \/* Slave -> Master SYNC temp file descriptor *\/$/;"	m	struct:redisServer
repl_transfer_last_fsync_off	src/server.h	/^    off_t repl_transfer_last_fsync_off; \/* Offset when we fsync-ed last time. *\/$/;"	m	struct:redisServer
repl_transfer_lastio	src/server.h	/^    time_t repl_transfer_lastio; \/* Unix time of the latest read, for timeout *\/$/;"	m	struct:redisServer
repl_transfer_read	src/server.h	/^    off_t repl_transfer_read; \/* Amount of RDB read from master during sync. *\/$/;"	m	struct:redisServer
repl_transfer_s	src/server.h	/^    int repl_transfer_s;     \/* Slave -> Master SYNC socket *\/$/;"	m	struct:redisServer
repl_transfer_size	src/server.h	/^    off_t repl_transfer_size; \/* Size of RDB to read from master during sync. *\/$/;"	m	struct:redisServer
repl_transfer_tmpfile	src/server.h	/^    char *repl_transfer_tmpfile; \/* Slave-> master SYNC temp file name *\/$/;"	m	struct:redisServer
replaceClientCommandVector	src/networking.c	/^void replaceClientCommandVector(client *c, int argc, robj **argv) {$/;"	f
replconfCommand	src/replication.c	/^void replconfCommand(client *c) {$/;"	f
repldbfd	src/server.h	/^    int repldbfd;           \/* Replication DB file descriptor. *\/$/;"	m	struct:client
repldboff	src/server.h	/^    off_t repldboff;        \/* Replication DB file offset. *\/$/;"	m	struct:client
repldbsize	src/server.h	/^    off_t repldbsize;       \/* Replication DB file size. *\/$/;"	m	struct:client
replica	deps/pmdk/src/common/set.h	/^	struct pool_replica *replica[];$/;"	m	struct:pool_set	typeref:struct:pool_set::pool_replica
replica	deps/pmdk/src/libpmemobj/obj.h	/^	struct pmemobjpool *replica;	\/* next replica *\/$/;"	m	struct:pmemobjpool	typeref:struct:pmemobjpool::pmemobjpool
replica	deps/pmdk/src/libpmempool/check_util.h	/^	unsigned replica;$/;"	m	struct:__anon87
replica	deps/pmdk/src/libpmempool/replica.h	/^	struct replica_health_status *replica[];$/;"	m	struct:poolset_health_status	typeref:struct:poolset_health_status::replica_health_status
replica	deps/pmdk/src/libpmempool/transform.c	/^	unsigned replica[];$/;"	m	struct:poolset_compare_status	file:
replica	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	unsigned replica;$/;"	m	struct:pmemspoil	file:
replica	deps/pmdk/src/tools/pmempool/common.h	/^	size_t replica;$/;"	m	struct:pool_set_file
replica	deps/pmdk/src/tools/pmempool/info.h	/^		size_t replica;$/;"	m	struct:pmempool_info_args::__anon109
replica_align_badblock_offset_length	deps/pmdk/src/libpmempool/replica.c	/^replica_align_badblock_offset_length(size_t *offset, size_t *length,$/;"	f
replica_badblocks_check_or_clear	deps/pmdk/src/libpmempool/replica.c	/^replica_badblocks_check_or_clear(struct pool_set *set,$/;"	f	file:
replica_badblocks_clear	deps/pmdk/src/libpmempool/replica.c	/^replica_badblocks_clear(struct pool_set *set,$/;"	f	file:
replica_badblocks_get	deps/pmdk/src/libpmempool/replica.c	/^replica_badblocks_get(struct pool_set *set,$/;"	f	file:
replica_badblocks_recovery_file_save	deps/pmdk/src/libpmempool/replica.c	/^replica_badblocks_recovery_file_save(struct part_health_status *part_hs)$/;"	f	file:
replica_badblocks_recovery_files_check	deps/pmdk/src/libpmempool/replica.c	/^replica_badblocks_recovery_files_check(struct pool_set *set,$/;"	f	file:
replica_badblocks_recovery_files_create_empty	deps/pmdk/src/libpmempool/replica.c	/^replica_badblocks_recovery_files_create_empty(struct pool_set *set,$/;"	f	file:
replica_badblocks_recovery_files_read	deps/pmdk/src/libpmempool/replica.c	/^replica_badblocks_recovery_files_read(struct pool_set *set,$/;"	f	file:
replica_badblocks_recovery_files_save	deps/pmdk/src/libpmempool/replica.c	/^replica_badblocks_recovery_files_save(struct pool_set *set,$/;"	f	file:
replica_check_local_part_dir	deps/pmdk/src/libpmempool/replica.c	/^replica_check_local_part_dir(struct pool_set *set, unsigned repn,$/;"	f
replica_check_part_dirs	deps/pmdk/src/libpmempool/replica.c	/^replica_check_part_dirs(struct pool_set *set)$/;"	f
replica_check_part_sizes	deps/pmdk/src/libpmempool/replica.c	/^replica_check_part_sizes(struct pool_set *set, size_t min_size)$/;"	f
replica_check_poolset_health	deps/pmdk/src/libpmempool/replica.c	/^replica_check_poolset_health(struct pool_set *set,$/;"	f
replica_check_store_size	deps/pmdk/src/libpmempool/replica.c	/^replica_check_store_size(struct pool_set *set,$/;"	f	file:
replica_counterpart	deps/pmdk/src/libpmempool/transform.c	/^replica_counterpart(unsigned repn,$/;"	f	file:
replica_create_poolset_health_status	deps/pmdk/src/libpmempool/replica.c	/^replica_create_poolset_health_status(struct pool_set *set,$/;"	f
replica_find_healthy_replica	deps/pmdk/src/libpmempool/replica.c	/^replica_find_healthy_replica(struct poolset_health_status *set_hs)$/;"	f
replica_find_replica_healthy_header	deps/pmdk/src/libpmempool/replica.c	/^replica_find_replica_healthy_header(struct poolset_health_status *set_hs)$/;"	f
replica_find_unbroken_part	deps/pmdk/src/libpmempool/replica.c	/^replica_find_unbroken_part(unsigned repn, struct poolset_health_status *set_hs)$/;"	f
replica_free_poolset_health_status	deps/pmdk/src/libpmempool/replica.c	/^replica_free_poolset_health_status(struct poolset_health_status *set_hs)$/;"	f
replica_get_part_data_len	deps/pmdk/src/libpmempool/replica.c	/^replica_get_part_data_len(struct pool_set *set_in, unsigned repn,$/;"	f
replica_get_part_data_offset	deps/pmdk/src/libpmempool/replica.c	/^replica_get_part_data_offset(struct pool_set *set, unsigned repn,$/;"	f
replica_get_part_offset	deps/pmdk/src/libpmempool/replica.c	/^replica_get_part_offset(struct pool_set *set, unsigned repn, unsigned partn)$/;"	f
replica_get_pool_size	deps/pmdk/src/libpmempool/replica.c	/^replica_get_pool_size(struct pool_set *set, unsigned repn)$/;"	f
replica_has_bad_blocks	deps/pmdk/src/libpmempool/replica.c	/^replica_has_bad_blocks(unsigned repn, struct poolset_health_status *set_hs)$/;"	f
replica_has_corrupted_header	deps/pmdk/src/libpmempool/replica.c	/^replica_has_corrupted_header(unsigned repn,$/;"	f	file:
replica_has_healthy_header	deps/pmdk/src/libpmempool/replica.c	/^replica_has_healthy_header(unsigned repn, struct poolset_health_status *set_hs)$/;"	f	file:
replica_health_status	deps/pmdk/src/libpmempool/replica.h	/^struct replica_health_status {$/;"	s
replica_is_part_broken	deps/pmdk/src/libpmempool/replica.c	/^replica_is_part_broken(unsigned repn, unsigned partn,$/;"	f
replica_is_poolset_healthy	deps/pmdk/src/libpmempool/replica.c	/^replica_is_poolset_healthy(struct poolset_health_status *set_hs)$/;"	f
replica_is_poolset_transformed	deps/pmdk/src/libpmempool/replica.c	/^replica_is_poolset_transformed(unsigned flags)$/;"	f
replica_is_replica_broken	deps/pmdk/src/libpmempool/replica.c	/^replica_is_replica_broken(unsigned repn, struct poolset_health_status *set_hs)$/;"	f
replica_is_replica_consistent	deps/pmdk/src/libpmempool/replica.c	/^replica_is_replica_consistent(unsigned repn,$/;"	f
replica_is_replica_healthy	deps/pmdk/src/libpmempool/replica.c	/^replica_is_replica_healthy(unsigned repn, struct poolset_health_status *set_hs)$/;"	f
replica_open_poolset_part_files	deps/pmdk/src/libpmempool/replica.c	/^replica_open_poolset_part_files(struct pool_set *set)$/;"	f
replica_open_replica_part_files	deps/pmdk/src/libpmempool/replica.c	/^replica_open_replica_part_files(struct pool_set *set, unsigned repn)$/;"	f
replica_part_badblocks_recovery_file_read	deps/pmdk/src/libpmempool/replica.c	/^replica_part_badblocks_recovery_file_read(struct part_health_status *part_hs)$/;"	f	file:
replica_part_has_bad_blocks	deps/pmdk/src/libpmempool/replica.c	/^replica_part_has_bad_blocks(struct part_health_status *phs)$/;"	f
replica_part_has_corrupted_header	deps/pmdk/src/libpmempool/replica.c	/^replica_part_has_corrupted_header(unsigned repn, unsigned partn,$/;"	f
replica_part_remove_recovery_file	deps/pmdk/src/libpmempool/replica.c	/^replica_part_remove_recovery_file(struct part_health_status *phs)$/;"	f	file:
replica_read_features	deps/pmdk/src/libpmempool/replica.c	/^replica_read_features(struct pool_set *set,$/;"	f	file:
replica_remove_all_recovery_files	deps/pmdk/src/libpmempool/replica.c	/^replica_remove_all_recovery_files(struct poolset_health_status *set_hs)$/;"	f
replica_remove_part	deps/pmdk/src/libpmempool/replica.c	/^replica_remove_part(struct pool_set *set, unsigned repn, unsigned partn,$/;"	f
replica_sync	deps/pmdk/src/libpmempool/sync.c	/^replica_sync(struct pool_set *set, struct poolset_health_status *s_hs,$/;"	f
replica_transform	deps/pmdk/src/libpmempool/transform.c	/^replica_transform(struct pool_set *set_in, struct pool_set *set_out,$/;"	f
replicationAbortSyncTransfer	src/replication.c	/^void replicationAbortSyncTransfer(void) {$/;"	f
replicationCacheMaster	src/replication.c	/^void replicationCacheMaster(client *c) {$/;"	f
replicationCountAcksByOffset	src/replication.c	/^int replicationCountAcksByOffset(long long offset) {$/;"	f
replicationCreateMasterClient	src/replication.c	/^void replicationCreateMasterClient(int fd) {$/;"	f
replicationCron	src/replication.c	/^void replicationCron(void) {$/;"	f
replicationDiscardCachedMaster	src/replication.c	/^void replicationDiscardCachedMaster(void) {$/;"	f
replicationEmptyDbCallback	src/replication.c	/^void replicationEmptyDbCallback(void *privdata) {$/;"	f
replicationFeedMonitors	src/replication.c	/^void replicationFeedMonitors(client *c, list *monitors, int dictid, robj **argv, int argc) {$/;"	f
replicationFeedSlaves	src/replication.c	/^void replicationFeedSlaves(list *slaves, int dictid, robj **argv, int argc) {$/;"	f
replicationGetSlaveName	src/replication.c	/^char *replicationGetSlaveName(client *c) {$/;"	f
replicationGetSlaveOffset	src/replication.c	/^long long replicationGetSlaveOffset(void) {$/;"	f
replicationHandleMasterDisconnection	src/replication.c	/^void replicationHandleMasterDisconnection(void) {$/;"	f
replicationRequestAckFromSlaves	src/replication.c	/^void replicationRequestAckFromSlaves(void) {$/;"	f
replicationResurrectCachedMaster	src/replication.c	/^void replicationResurrectCachedMaster(int newfd) {$/;"	f
replicationScriptCacheAdd	src/replication.c	/^void replicationScriptCacheAdd(sds sha1) {$/;"	f
replicationScriptCacheExists	src/replication.c	/^int replicationScriptCacheExists(sds sha1) {$/;"	f
replicationScriptCacheFlush	src/replication.c	/^void replicationScriptCacheFlush(void) {$/;"	f
replicationScriptCacheInit	src/replication.c	/^void replicationScriptCacheInit(void) {$/;"	f
replicationSendAck	src/replication.c	/^void replicationSendAck(void) {$/;"	f
replicationSendNewlineToMaster	src/replication.c	/^void replicationSendNewlineToMaster(void) {$/;"	f
replicationSetMaster	src/replication.c	/^void replicationSetMaster(char *ip, int port) {$/;"	f
replicationSetupSlaveForFullResync	src/replication.c	/^int replicationSetupSlaveForFullResync(client *slave, long long offset) {$/;"	f
replicationUnsetMaster	src/replication.c	/^void replicationUnsetMaster(void) {$/;"	f
replies	deps/hiredis/async.h	/^    redisCallbackList replies;$/;"	m	struct:redisAsyncContext
reploff	src/server.h	/^    long long reploff;      \/* Replication offset if this is our master. *\/$/;"	m	struct:client
reploffset	src/server.h	/^    long long reploffset;   \/* Replication offset to reach. *\/$/;"	m	struct:blockingState
replpreamble	src/server.h	/^    sds replpreamble;       \/* Replication DB preamble. *\/$/;"	m	struct:client
replrunid	src/server.h	/^    char replrunid[CONFIG_RUN_ID_SIZE+1]; \/* Master run id if is a master. *\/$/;"	m	struct:client
replstate	src/server.h	/^    int replstate;          \/* Replication state if this is a slave. *\/$/;"	m	struct:client
reply	deps/hiredis/hiredis.h	/^    void *reply; \/* Temporary reply pointer *\/$/;"	m	struct:redisReader
reply	src/server.h	/^    list *reply;            \/* List of reply objects to send to the client. *\/$/;"	m	struct:client
replyToBlockedClientTimedOut	src/blocked.c	/^void replyToBlockedClientTimedOut(client *c) {$/;"	f
reply_bytes	src/server.h	/^    unsigned long long reply_bytes; \/* Tot bytes of objects in reply list. *\/$/;"	m	struct:client
report	deps/lua/src/lua.c	/^static int report (lua_State *L, int status) {$/;"	f	file:
representClusterNodeFlags	src/cluster.c	/^sds representClusterNodeFlags(sds ci, uint16_t flags) {$/;"	f
repsize	deps/pmdk/src/common/set.h	/^	size_t repsize;		\/* total size of all the parts (mappings) *\/$/;"	m	struct:pool_replica
req	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^	uv_write_t req;$/;"	m	struct:write_req	file:
req	deps/pmdk/src/tools/pmempool/common.h	/^	const struct option_requirement *req;$/;"	m	struct:options	typeref:struct:options::option_requirement
req	deps/pmdk/src/tools/pmempool/common.h	/^	uint64_t req;$/;"	m	struct:option_requirement
req_arg	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^struct req_arg {$/;"	s	file:
req_cb_arg	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^struct req_cb_arg {$/;"	s
req_cb_check_pool_attr	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^req_cb_check_pool_attr(const struct rpmem_pool_attr *pool_attr)$/;"	f	file:
req_cb_check_req	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^req_cb_check_req(const struct rpmem_req_attr *req)$/;"	f	file:
req_cb_close	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^req_cb_close(struct rpmemd_obc *obc, void *arg, int flags)$/;"	f	file:
req_cb_create	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^req_cb_create(struct rpmemd_obc *obc, void *arg,$/;"	f	file:
req_cb_open	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^req_cb_open(struct rpmemd_obc *obc, void *arg,$/;"	f	file:
req_cb_set_attr	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^req_cb_set_attr(struct rpmemd_obc *obc, void *arg,$/;"	f	file:
req_close	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^req_close(struct rpmemd_obc *obc, void *arg, int flags)$/;"	f	file:
req_create	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^req_create(struct rpmemd_obc *obc, void *arg,$/;"	f	file:
req_open	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^req_open(struct rpmemd_obc *obc, void *arg,$/;"	f	file:
req_set_attr	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^req_set_attr(struct rpmemd_obc *obc, void *arg,$/;"	f	file:
reqtype	src/server.h	/^    int reqtype;            \/* Request protocol type: PROTO_REQ_* *\/$/;"	m	struct:client
requests	src/redis-benchmark.c	/^    int requests;$/;"	m	struct:config	file:
requests_finished	src/redis-benchmark.c	/^    int requests_finished;$/;"	m	struct:config	file:
requests_issued	src/redis-benchmark.c	/^    int requests_issued;$/;"	m	struct:config	file:
require_arch	deps/pmdk/src/test/unittest/unittest.sh	/^function require_arch() {$/;"	f
require_badblock_tests_enabled	deps/pmdk/src/test/unittest/unittest.sh	/^function require_badblock_tests_enabled() {$/;"	f
require_badblock_tests_enabled_node	deps/pmdk/src/test/unittest/unittest.sh	/^function require_badblock_tests_enabled_node() {$/;"	f
require_bb_disabled_by_default	deps/pmdk/src/test/unittest/unittest.sh	/^function require_bb_disabled_by_default() {$/;"	f
require_bb_enabled_by_default	deps/pmdk/src/test/unittest/unittest.sh	/^function require_bb_enabled_by_default() {$/;"	f
require_binary	deps/pmdk/src/test/unittest/unittest.sh	/^function require_binary() {$/;"	f
require_build_type	deps/pmdk/src/test/unittest/unittest.sh	/^function require_build_type() {$/;"	f
require_command	deps/pmdk/src/test/unittest/unittest.sh	/^function require_command() {$/;"	f
require_command_node	deps/pmdk/src/test/unittest/unittest.sh	/^function require_command_node() {$/;"	f
require_ctrld_err	deps/pmdk/src/test/unittest/unittest.sh	/^function require_ctrld_err() {$/;"	f
require_cxx11	deps/pmdk/src/test/unittest/unittest.sh	/^function require_cxx11() {$/;"	f
require_dax_device_alignments	deps/pmdk/src/test/unittest/unittest.sh	/^require_dax_device_alignments() {$/;"	f
require_dax_devices	deps/pmdk/src/test/unittest/unittest.sh	/^function require_dax_devices() {$/;"	f
require_dev_dax_node	deps/pmdk/src/test/unittest/unittest.sh	/^function require_dev_dax_node() {$/;"	f
require_dev_dax_region	deps/pmdk/src/test/unittest/unittest.sh	/^function require_dev_dax_region() {$/;"	f
require_feature_is	deps/pmdk/src/libpmempool/feature.c	/^require_feature_is(struct pool_set *set, features_t feature, fstate_t req_state)$/;"	f	file:
require_free_space	deps/pmdk/src/test/unittest/unittest.sh	/^function require_free_space() {$/;"	f
require_fs_name	deps/pmdk/src/test/unittest/unittest.sh	/^function require_fs_name() {$/;"	f
require_fs_type	deps/pmdk/src/test/unittest/unittest.sh	/^function require_fs_type() {$/;"	f
require_kernel_module	deps/pmdk/src/test/unittest/unittest.sh	/^function require_kernel_module() {$/;"	f
require_kernel_module_node	deps/pmdk/src/test/unittest/unittest.sh	/^function require_kernel_module_node() {$/;"	f
require_linked_with_ndctl	deps/pmdk/src/test/unittest/unittest.sh	/^function require_linked_with_ndctl() {$/;"	f
require_max_block_size	deps/pmdk/src/test/unittest/unittest.sh	/^function require_max_block_size() {$/;"	f
require_max_devdax_size	deps/pmdk/src/test/unittest/unittest.sh	/^function require_max_devdax_size() {$/;"	f
require_mmap_under_valgrind	deps/pmdk/src/test/unittest/unittest.sh	/^function require_mmap_under_valgrind() {$/;"	f
require_native_fallocate	deps/pmdk/src/test/unittest/unittest.sh	/^function require_native_fallocate() {$/;"	f
require_no_asan	deps/pmdk/src/test/unittest/unittest.sh	/^function require_no_asan() {$/;"	f
require_no_asan_for	deps/pmdk/src/test/unittest/unittest.sh	/^function require_no_asan_for() {$/;"	f
require_no_freebsd	deps/pmdk/src/test/unittest/unittest.sh	/^function require_no_freebsd() {$/;"	f
require_no_sds	deps/pmdk/src/test/unittest/unittest.sh	/^function require_no_sds() {$/;"	f
require_no_superuser	deps/pmdk/src/test/unittest/unittest.sh	/^function require_no_superuser() {$/;"	f
require_no_unicode	deps/pmdk/src/test/unittest/unittest.sh	/^function require_no_unicode() {$/;"	f
require_node_dax_device	deps/pmdk/src/test/unittest/unittest.sh	/^function require_node_dax_device() {$/;"	f
require_node_dax_device_alignments	deps/pmdk/src/test/unittest/unittest.sh	/^function require_node_dax_device_alignments() {$/;"	f
require_node_libfabric	deps/pmdk/src/test/unittest/unittest.sh	/^function require_node_libfabric() {$/;"	f
require_node_log_files	deps/pmdk/src/test/unittest/unittest.sh	/^function require_node_log_files() {$/;"	f
require_node_pkg	deps/pmdk/src/test/unittest/unittest.sh	/^function require_node_pkg() {$/;"	f
require_nodes	deps/pmdk/src/test/unittest/unittest.sh	/^function require_nodes() {$/;"	f
require_other_feature_is	deps/pmdk/src/libpmempool/feature.c	/^require_other_feature_is(struct pool_set *set, features_t other,$/;"	f	file:
require_pkg	deps/pmdk/src/test/unittest/unittest.sh	/^function require_pkg() {$/;"	f
require_pmemcheck_version_ge	deps/pmdk/src/test/unittest/unittest.sh	/^function require_pmemcheck_version_ge()$/;"	f
require_pmemcheck_version_lt	deps/pmdk/src/test/unittest/unittest.sh	/^function require_pmemcheck_version_lt()$/;"	f
require_pmreorder	deps/pmdk/src/test/unittest/unittest.sh	/^function require_pmreorder()$/;"	f
require_ppc64	deps/pmdk/src/test/unittest/unittest.sh	/^function require_ppc64() {$/;"	f
require_procfs	deps/pmdk/src/test/unittest/unittest.sh	/^function require_procfs() {$/;"	f
require_python3	deps/pmdk/src/test/unittest/unittest.sh	/^function require_python3()$/;"	f
require_sds	deps/pmdk/src/test/unittest/unittest.sh	/^function require_sds() {$/;"	f
require_sudo_allowed	deps/pmdk/src/test/unittest/unittest.sh	/^function require_sudo_allowed() {$/;"	f
require_sudo_allowed_node	deps/pmdk/src/test/unittest/unittest.sh	/^function require_sudo_allowed_node() {$/;"	f
require_test_type	deps/pmdk/src/test/unittest/unittest.sh	/^function require_test_type() {$/;"	f
require_tty	deps/pmdk/src/test/unittest/unittest.sh	/^function require_tty() {$/;"	f
require_unlimited_vm	deps/pmdk/src/test/unittest/unittest.sh	/^function require_unlimited_vm() {$/;"	f
require_usc_permission	deps/pmdk/src/test/unittest/unittest.sh	/^function require_usc_permission() {$/;"	f
require_valgrind	deps/pmdk/src/test/unittest/unittest.sh	/^function require_valgrind() {$/;"	f
require_valgrind_tool	deps/pmdk/src/test/unittest/unittest.sh	/^function require_valgrind_tool() {$/;"	f
require_x86_64	deps/pmdk/src/test/unittest/unittest.sh	/^function require_x86_64() {$/;"	f
required_argument	deps/pmdk/src/windows/getopt/getopt.h	36;"	d
requirepass	src/server.h	/^    char *requirepass;          \/* Pass for AUTH command, or NULL *\/$/;"	m	struct:redisServer
reruns	deps/jemalloc/include/jemalloc/internal/stats.h	/^	uint64_t	reruns;$/;"	m	struct:malloc_bin_stats_s
res	deps/pmdk/src/benchmarks/benchmark.hpp	/^	struct bench_results *res;$/;"	m	struct:total_results	typeref:struct:total_results::bench_results
reserved	deps/lua/src/lobject.h	/^    lu_byte reserved;$/;"	m	struct:TString::__anon24
reserved	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint32_t reserved;$/;"	m	struct:nfit_header
reserved	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint8_t reserved[PCS_RESERVED];$/;"	m	struct:platform_capabilities
reserved	deps/pmdk/src/common/pool_hdr.h	/^	uint8_t reserved[4];$/;"	m	struct:arch_flags
reserved	deps/pmdk/src/common/shutdown_state.h	/^	uint8_t reserved[39];$/;"	m	struct:shutdown_state
reserved	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^	unsigned char reserved[RESERVED_SIZE];$/;"	m	struct:pool_t	file:
reserved	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint8_t reserved[56];$/;"	m	struct:zone_header
reserved	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint8_t reserved[960];$/;"	m	struct:heap_header
reserved	deps/pmdk/src/test/obj_action/obj_action.c	/^	} reserved;$/;"	m	struct:root	typeref:struct:root::__anon135	file:
reserved2	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint8_t reserved2[PCS_RESERVED_2];$/;"	m	struct:platform_capabilities
reset	src/setproctitle.c	/^	_Bool reset;$/;"	m	struct:__anon183	file:
reset2bits	deps/lua/src/lgc.h	36;"	d
resetClient	src/networking.c	/^void resetClient(client *c) {$/;"	f
resetClient	src/redis-benchmark.c	/^static void resetClient(client c) {$/;"	f	file:
resetCommandTableStats	src/server.c	/^void resetCommandTableStats(void) {$/;"	f
resetManualFailover	src/cluster.c	/^void resetManualFailover(void) {$/;"	f
resetRefCount	src/object.c	/^robj *resetRefCount(robj *obj) {$/;"	f
resetServerSaveParams	src/config.c	/^void resetServerSaveParams(void) {$/;"	f
resetServerStats	src/server.c	/^void resetServerStats(void) {$/;"	f
reset_counters	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^reset_counters(void)$/;"	f	file:
reset_indent	deps/pmdk/utils/cstyle	/^reset_indent()$/;"	s
reset_nodes	src/redis-trib.rb	/^    def reset_nodes$/;"	f	class:RedisTrib
reset_shutdown_state	deps/pmdk/src/libpmempool/feature.c	/^reset_shutdown_state(struct pool_set *set)$/;"	f	file:
resetbit	deps/lua/src/lgc.h	33;"	d
resetbits	deps/lua/src/lgc.h	27;"	d
resethookcount	deps/lua/src/ldebug.h	18;"	d
resetstack	deps/lua/src/ldo.c	/^static void resetstack (lua_State *L, int status) {$/;"	f	file:
reshard_cluster_cmd	src/redis-trib.rb	/^    def reshard_cluster_cmd(argv,opt)$/;"	f	class:RedisTrib.alloc_slots
resident	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	size_t			resident;$/;"	m	struct:ctl_stats_s
resident_set_size	src/server.h	/^    size_t resident_set_size;       \/* RSS sampled in serverCron(). *\/$/;"	m	struct:redisServer
resize	deps/lua/src/ltable.c	/^static void resize (lua_State *L, Table *t, int nasize, int nhsize) {$/;"	f	file:
resizeReplicationBacklog	src/replication.c	/^void resizeReplicationBacklog(long long newsize) {$/;"	f
resize_threshold	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^	uint64_t resize_threshold;$/;"	m	struct:hashmap_rp	file:
resizes	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	size_t *resizes;    \/* array to store size of each reallocation *\/$/;"	m	struct:obj_tx_bench	file:
resp	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^	struct rpmem_resp_attr resp;$/;"	m	struct:req_arg	typeref:struct:req_arg::rpmem_resp_attr	file:
resp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^	int resp;$/;"	m	struct:req_cb_arg
resp	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct rpmem_msg_persist_resp resp; \/* persist response msg buffer *\/$/;"	m	struct:rpmemd_fip_lane	typeref:struct:rpmemd_fip_lane::rpmem_msg_persist_resp	file:
resp_messages	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^enum resp_messages {$/;"	g
resp_msg	deps/pmdk/src/examples/libpmemobj/map/kv_protocol.h	/^static const char *resp_msg[MAX_RESP_MSG] = {$/;"	v
response_msg	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^response_msg(uv_stream_t *client, enum resp_messages msg)$/;"	f	file:
response_write	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^response_write(uv_stream_t *client, char *resp, size_t len)$/;"	f	file:
restartServer	src/server.c	/^int restartServer(int flags, mstime_t delay) {$/;"	f
restart_instance	tests/instances.tcl	/^proc restart_instance {type id} {$/;"	p
restoreCommand	src/cluster.c	/^void restoreCommand(client *c) {$/;"	f
restore_exit_on_error	deps/pmdk/src/test/unittest/unittest.sh	/^function restore_exit_on_error() {$/;"	f
restore_stack_limit	deps/lua/src/ldo.c	/^static void restore_stack_limit (lua_State *L) {$/;"	f	file:
restoreci	deps/lua/src/ldo.h	28;"	d
restorestack	deps/lua/src/ldo.h	25;"	d
restrict	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h	58;"	d
restrict	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_macros.h	56;"	d
result	deps/pmdk/src/common/os_thread_windows.c	/^	void *result;$/;"	m	struct:__anon84	file:
result	deps/pmdk/src/examples/libpmemobj/pi.c	/^	long double result;$/;"	m	struct:pi_task_proto	file:
result	deps/pmdk/src/libpmempool/pmempool.h	/^	enum check_result result;$/;"	m	struct:pmempool_check_ctx	typeref:enum:pmempool_check_ctx::check_result
result	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^struct result {$/;"	s	file:
results	deps/pmdk/src/benchmarks/benchmark.hpp	/^struct results {$/;"	s
results_alloc	deps/pmdk/src/benchmarks/pmembench.cpp	/^results_alloc(struct benchmark_args *args)$/;"	f	file:
results_free	deps/pmdk/src/benchmarks/pmembench.cpp	/^results_free(struct total_results *total)$/;"	f	file:
results_store	deps/pmdk/src/benchmarks/pmembench.cpp	/^results_store(struct bench_results *res, struct benchmark_worker **workers,$/;"	f	file:
resume	deps/lua/src/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:
resume_error	deps/lua/src/ldo.c	/^static int resume_error (lua_State *L, const char *msg) {$/;"	f	file:
resvsize	deps/pmdk/src/common/set.h	/^	size_t resvsize;	\/* min size of the address space reservation *\/$/;"	m	struct:pool_replica
resvsize	deps/pmdk/src/common/set.h	/^	size_t resvsize; \/* size of the address space reservation *\/$/;"	m	struct:pool_set_directory
resvsize	deps/pmdk/src/common/set.h	/^	size_t resvsize;$/;"	m	struct:pool_set
ret	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	int ret;$/;"	m	struct:benchmark_worker
ret	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^	int ret;$/;"	m	struct:rpmem_fip_lane
ret	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^	int ret;$/;"	m	struct:req_cb_arg
ret	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^	int ret;$/;"	m	struct:result	file:
ret	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^	int ret;$/;"	m	struct:rm_cb_args	file:
ret_init	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	int ret_init;$/;"	m	struct:benchmark_worker
retained	deps/jemalloc/include/jemalloc/internal/ctl.h	/^	size_t			retained;$/;"	m	struct:ctl_stats_s
retained	deps/jemalloc/include/jemalloc/internal/stats.h	/^	size_t		retained;$/;"	m	struct:arena_stats_s
retry_num	src/sentinel.c	/^    int retry_num;          \/* Number of times we tried to execute it. *\/$/;"	m	struct:sentinelScriptJob	file:
retstat	deps/lua/src/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:
rev	deps/hiredis/adapters/libev.h	/^    ev_io rev, wev;$/;"	m	struct:redisLibevEvents
rev	deps/hiredis/adapters/libevent.h	/^    struct event rev, wev;$/;"	m	struct:redisLibeventEvents	typeref:struct:redisLibeventEvents::event
rev	src/dict.c	/^static unsigned long rev(unsigned long v) {$/;"	f	file:
revbits	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^revbits(uint64_t x)$/;"	f	file:
revision	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint8_t revision;$/;"	m	struct:nfit_header
rewriteAppendOnlyFile	src/aof.c	/^int rewriteAppendOnlyFile(char *filename) {$/;"	f
rewriteAppendOnlyFileBackground	src/aof.c	/^int rewriteAppendOnlyFileBackground(void) {$/;"	f
rewriteClientCommandArgument	src/networking.c	/^void rewriteClientCommandArgument(client *c, int i, robj *newval) {$/;"	f
rewriteClientCommandVector	src/networking.c	/^void rewriteClientCommandVector(client *c, int argc, ...) {$/;"	f
rewriteConfigSentinelOption	src/sentinel.c	/^void rewriteConfigSentinelOption(struct rewriteConfigState *state) {$/;"	f
rewriteHashObject	src/aof.c	/^int rewriteHashObject(rio *r, robj *key, robj *o) {$/;"	f
rewriteListObject	src/aof.c	/^int rewriteListObject(rio *r, robj *key, robj *o) {$/;"	f
rewriteSetObject	src/aof.c	/^int rewriteSetObject(rio *r, robj *key, robj *o) {$/;"	f
rewriteSortedSetObject	src/aof.c	/^int rewriteSortedSetObject(rio *r, robj *key, robj *o) {$/;"	f
rfds	src/ae_select.c	/^    fd_set rfds, wfds;$/;"	m	struct:aeApiState	file:
rfileProc	src/ae.h	/^    aeFileProc *rfileProc;$/;"	m	struct:aeFileEvent
ridx	deps/hiredis/hiredis.h	/^    int ridx; \/* Index of current read task *\/$/;"	m	struct:redisReader
right	deps/lua/src/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon36	file:
right	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	TOID(struct tree_map_node) right = TX_ZNEW(struct tree_map_node);$/;"	m	struct:m	file:
right	deps/pmdk/src/test/unittest/ut.c	/^	struct fd_lut *right;$/;"	m	struct:fd_lut	typeref:struct:fd_lut::fd_lut	file:
ring_s	deps/jemalloc/test/unit/qr.c	/^struct ring_s {$/;"	s	file:
ring_t	deps/jemalloc/test/unit/qr.c	/^typedef struct ring_s ring_t;$/;"	t	typeref:struct:ring_s	file:
rio	src/redis-check-rdb.c	/^    rio *rio;$/;"	m	struct:__anon151	file:
rio	src/rio.h	/^typedef struct _rio rio;$/;"	t	typeref:struct:_rio
rioBufferFlush	src/rio.c	/^static int rioBufferFlush(rio *r) {$/;"	f	file:
rioBufferIO	src/rio.c	/^static const rio rioBufferIO = {$/;"	v	file:
rioBufferRead	src/rio.c	/^static size_t rioBufferRead(rio *r, void *buf, size_t len) {$/;"	f	file:
rioBufferTell	src/rio.c	/^static off_t rioBufferTell(rio *r) {$/;"	f	file:
rioBufferWrite	src/rio.c	/^static size_t rioBufferWrite(rio *r, const void *buf, size_t len) {$/;"	f	file:
rioFdsetFlush	src/rio.c	/^static int rioFdsetFlush(rio *r) {$/;"	f	file:
rioFdsetIO	src/rio.c	/^static const rio rioFdsetIO = {$/;"	v	file:
rioFdsetRead	src/rio.c	/^static size_t rioFdsetRead(rio *r, void *buf, size_t len) {$/;"	f	file:
rioFdsetTell	src/rio.c	/^static off_t rioFdsetTell(rio *r) {$/;"	f	file:
rioFdsetWrite	src/rio.c	/^static size_t rioFdsetWrite(rio *r, const void *buf, size_t len) {$/;"	f	file:
rioFileFlush	src/rio.c	/^static int rioFileFlush(rio *r) {$/;"	f	file:
rioFileIO	src/rio.c	/^static const rio rioFileIO = {$/;"	v	file:
rioFileRead	src/rio.c	/^static size_t rioFileRead(rio *r, void *buf, size_t len) {$/;"	f	file:
rioFileTell	src/rio.c	/^static off_t rioFileTell(rio *r) {$/;"	f	file:
rioFileWrite	src/rio.c	/^static size_t rioFileWrite(rio *r, const void *buf, size_t len) {$/;"	f	file:
rioFlush	src/rio.h	/^static inline int rioFlush(rio *r) {$/;"	f
rioFreeFdset	src/rio.c	/^void rioFreeFdset(rio *r) {$/;"	f
rioGenericUpdateChecksum	src/rio.c	/^void rioGenericUpdateChecksum(rio *r, const void *buf, size_t len) {$/;"	f
rioInitWithBuffer	src/rio.c	/^void rioInitWithBuffer(rio *r, sds s) {$/;"	f
rioInitWithFdset	src/rio.c	/^void rioInitWithFdset(rio *r, int *fds, int numfds) {$/;"	f
rioInitWithFile	src/rio.c	/^void rioInitWithFile(rio *r, FILE *fp) {$/;"	f
rioRead	src/rio.h	/^static inline size_t rioRead(rio *r, void *buf, size_t len) {$/;"	f
rioSetAutoSync	src/rio.c	/^void rioSetAutoSync(rio *r, off_t bytes) {$/;"	f
rioTell	src/rio.h	/^static inline off_t rioTell(rio *r) {$/;"	f
rioWrite	src/rio.h	/^static inline size_t rioWrite(rio *r, const void *buf, size_t len) {$/;"	f
rioWriteBulkCount	src/rio.c	/^size_t rioWriteBulkCount(rio *r, char prefix, int count) {$/;"	f
rioWriteBulkDouble	src/rio.c	/^size_t rioWriteBulkDouble(rio *r, double d) {$/;"	f
rioWriteBulkLongLong	src/rio.c	/^size_t rioWriteBulkLongLong(rio *r, long long l) {$/;"	f
rioWriteBulkObject	src/aof.c	/^int rioWriteBulkObject(rio *r, robj *obj) {$/;"	f
rioWriteBulkString	src/rio.c	/^size_t rioWriteBulkString(rio *r, const char *buf, size_t len) {$/;"	f
rioWriteHashIteratorCursor	src/aof.c	/^static int rioWriteHashIteratorCursor(rio *r, hashTypeIterator *hi, int what) {$/;"	f	file:
rkey	deps/pmdk/src/librpmem/rpmem_fip.c	/^	uint64_t rkey;	\/* remote memory protection key *\/$/;"	m	struct:rpmem_fip	file:
rkey	deps/pmdk/src/librpmem/rpmem_fip.h	/^	uint64_t rkey;$/;"	m	struct:rpmem_fip_attr
rkey	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	uint64_t rkey;$/;"	m	struct:rpmem_resp_attr
rkey	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint64_t rkey;			\/* remote key *\/$/;"	m	struct:rpmem_msg_ibc_attr
rm_all	deps/pmdk/src/libpmemobj/container.h	/^	void (*rm_all)(struct block_container *c);$/;"	m	struct:block_container_ops
rm_cb	deps/pmdk/src/libpmempool/rm.c	/^rm_cb(struct part_file *pf, void *arg)$/;"	f	file:
rm_cb_args	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^struct rm_cb_args {$/;"	s	file:
rm_file	deps/pmdk/src/benchmarks/benchmark.hpp	/^	bool rm_file;$/;"	m	struct:benchmark_info
rm_file	deps/pmdk/src/tools/pmempool/rm.c	/^rm_file(const char *file)$/;"	f	file:
rm_files_from_node	deps/pmdk/src/test/unittest/unittest.sh	/^function rm_files_from_node() {$/;"	f
rm_local	deps/pmdk/src/libpmempool/rm.c	/^rm_local(const char *path, unsigned flags, int is_part_file)$/;"	f	file:
rm_poolset	deps/pmdk/src/tools/pmempool/rm.c	/^rm_poolset(const char *file)$/;"	f	file:
rm_poolset	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	/^	const char *rm_poolset;$/;"	m	struct:rpmemd_config
rm_poolset_cb	deps/pmdk/src/tools/pmempool/rm.c	/^rm_poolset_cb(struct part_file *pf, void *arg)$/;"	f	file:
rm_poolset_cb	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rm_poolset_cb(struct part_file *pf, void *arg)$/;"	f	file:
rm_poolset_mode	deps/pmdk/src/tools/pmempool/rm.c	/^static int rm_poolset_mode;$/;"	v	file:
rm_remote	deps/pmdk/src/libpmempool/rm.c	/^rm_remote(const char *node, const char *path, unsigned flags)$/;"	f	file:
rma_iov	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^	struct fi_rma_iov rma_iov; \/* RMA IO vector buffer *\/$/;"	m	struct:rpmem_fip_rma	typeref:struct:rpmem_fip_rma::fi_rma_iov
rnd15	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^rnd15()$/;"	f	file:
rnd64	deps/pmdk/src/common/rand.c	/^rnd64(void)$/;"	f
rnd64	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^rnd64()$/;"	f	file:
rnd64_r	deps/pmdk/src/common/rand.c	/^rnd64_r(rng_t *state)$/;"	f
rnd_thid_r64	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^rnd_thid_r64(rng_t *seedp, uint16_t thid)$/;"	f	file:
rng	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	rng_t rng;$/;"	m	struct:create_params_t	file:
rng_t	deps/pmdk/src/common/rand.h	/^typedef uint64_t rng_t[4];$/;"	t
ro_compat	deps/pmdk/src/common/pool_hdr.h	/^	uint32_t ro_compat;	\/* mask: force RO if unsupported *\/$/;"	m	struct:__anon70
ro_compat_features	deps/pmdk/src/include/librpmem.h	/^	uint32_t ro_compat_features; \/* mask: force RO if unsupported *\/$/;"	m	struct:rpmem_pool_attr
ro_compat_features	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t ro_compat_features; \/* mask: force RO if unsupported *\/$/;"	m	struct:rpmem_pool_attr_packed
robj	src/server.h	/^} robj;$/;"	t	typeref:struct:redisObject
rol	src/sha1.c	31;"	d	file:
roleCommand	src/replication.c	/^void roleCommand(client *c) {$/;"	f
role_reported	src/sentinel.c	/^    int role_reported;$/;"	m	struct:sentinelRedisInstance	file:
role_reported_time	src/sentinel.c	/^    mstime_t role_reported_time;$/;"	m	struct:sentinelRedisInstance	file:
root	deps/pmdk/src/benchmarks/map_bench.cpp	/^	TOID(struct root) root;$/;"	m	struct:map_bench	file:
root	deps/pmdk/src/benchmarks/map_bench.cpp	/^struct root {$/;"	s	file:
root	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	TOID(struct my_root) root;     \/* OID of the root object *\/$/;"	m	struct:mutex_bench	file:
root	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^	TOID(struct my_root) root; \/* root object's OID *\/$/;"	m	struct:obj_bench	file:
root	deps/pmdk/src/common/ctl.c	/^	struct ctl_node root[CTL_MAX_ENTRIES];$/;"	m	struct:ctl	typeref:struct:ctl::ctl_node	file:
root	deps/pmdk/src/examples/libpmemobj/btree.c	/^	TOID(struct btree_node) root;$/;"	m	struct:btree	file:
root	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	TOID(art_node_u) root;$/;"	m	struct:art_tree_root
root	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	union _toid_art_node_u_toid root;$/;"	m	struct:_art_tree_root	typeref:union:_art_tree_root::_toid_art_node_u_toid
root	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/examples/libpmemobj/queue/queue.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/examples/libpmemobj/slab_allocator/main.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	TOID(struct tree_map_node) root;$/;"	m	struct:btree_map	file:
root	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^	struct tree_map_entry root;$/;"	m	struct:ctree_map	typeref:struct:ctree_map::tree_map_entry	file:
root	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) root;$/;"	m	struct:rbtree_map	file:
root	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^	TOID(struct tree_map_node) root;$/;"	m	struct:rtree_map	file:
root	deps/pmdk/src/libpmemobj/critnib.c	/^	struct critnib_node *root;$/;"	m	struct:critnib	typeref:struct:critnib::critnib_node	file:
root	deps/pmdk/src/libpmemobj/ravl.c	/^	struct ravl_node *root;$/;"	m	struct:ravl	typeref:struct:ravl::ravl_node	file:
root	deps/pmdk/src/test/obj_action/obj_action.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/test/obj_alloc/obj_alloc.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/test/obj_debug/obj_debug.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/test/obj_recovery/obj_recovery.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/test/obj_recreate/obj_recreate.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^struct root {$/;"	s	file:
root	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	PMEMoid root;$/;"	m	struct:pocli_ctx	file:
root_constr_cancel	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^root_constr_cancel(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
root_dir	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^	char *root_dir;$/;"	m	struct:rpmemd_db	file:
root_inode	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	TOID(struct objfs_inode) root_inode;	\/* root dir inode *\/$/;"	m	struct:objfs_super	file:
root_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t	root_node[] = {$/;"	v	file:
root_obj	deps/pmdk/src/test/obj_tx_locks_abort/obj_tx_locks_abort.c	/^struct root_obj {$/;"	s	file:
root_offset	deps/pmdk/src/libpmemobj/obj.h	/^	uint64_t root_offset;$/;"	m	struct:pmemobjpool
root_oid	deps/pmdk/src/benchmarks/map_bench.cpp	/^	PMEMoid root_oid;$/;"	m	struct:map_bench	file:
root_s	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^struct root_s {$/;"	s	file:
root_size	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t root_size;$/;"	m	struct:allocation_header_legacy
root_size	deps/pmdk/src/libpmemobj/obj.h	/^	uint64_t root_size;$/;"	m	struct:pmemobjpool
root_size	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^root_size(unsigned graph_num, size_t min_root_size)$/;"	f	file:
root_t	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^struct root_t {$/;"	s	file:
rootgc	deps/lua/src/lstate.h	/^  GCObject *rootgc;  \/* list of all collectable objects *\/$/;"	m	struct:global_State
rootlock	deps/pmdk/src/libpmemobj/obj.h	/^	PMEMmutex rootlock;	\/* root object lock *\/$/;"	m	struct:pmemobjpool
roslaveerr	src/server.h	/^    *masterdownerr, *roslaveerr, *execaborterr, *noautherr, *noreplicaserr,$/;"	m	struct:sharedObjectsStruct
rotate	deps/pmdk/src/windows/getopt/getopt.c	/^static void rotate(char **argv, int argc) {$/;"	f	file:
rotl	deps/pmdk/src/common/rand.c	/^static inline uint64_t rotl(const uint64_t x, int k)$/;"	f	file:
roundFloat	tests/support/util.tcl	/^proc roundFloat f {$/;"	p
rounddown	deps/pmdk/src/windows/include/win_mmap.h	44;"	d
roundup	deps/pmdk/src/windows/include/sys/param.h	40;"	d
roundup	deps/pmdk/src/windows/include/win_mmap.h	43;"	d
roundup_len	deps/pmdk/src/benchmarks/pmem_flush.cpp	/^roundup_len(size_t len, void *addr, uintptr_t align)$/;"	f	file:
rpmem_args	deps/pmdk/src/benchmarks/rpmem.cpp	/^struct rpmem_args {$/;"	s	file:
rpmem_avail	deps/pmdk/src/tools/pmempool/rm.c	/^static int rpmem_avail;$/;"	v	file:
rpmem_bench	deps/pmdk/src/benchmarks/rpmem.cpp	/^struct rpmem_bench {$/;"	s	file:
rpmem_check_args	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_check_args(void *pool_addr, size_t pool_size, unsigned *nlanes)$/;"	f	file:
rpmem_check_version	deps/pmdk/src/librpmem/librpmem.c	/^rpmem_check_version(unsigned major_required, unsigned minor_required)$/;"	f
rpmem_close	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_close(RPMEMpool *rpp)$/;"	f
rpmem_cmd	deps/pmdk/src/librpmem/rpmem_cmd.h	/^struct rpmem_cmd {$/;"	s
rpmem_cmd	deps/pmdk/src/test/rpmem_fip/rpmem_fip_oob.c	/^static const char *rpmem_cmd;$/;"	v	file:
rpmem_cmd	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.c	/^static const char *rpmem_cmd;$/;"	v	file:
rpmem_cmd	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^static const char *rpmem_cmd;$/;"	v	file:
rpmem_cmd_fini	deps/pmdk/src/librpmem/rpmem_cmd.c	/^rpmem_cmd_fini(struct rpmem_cmd *cmd)$/;"	f
rpmem_cmd_init	deps/pmdk/src/librpmem/rpmem_cmd.c	/^rpmem_cmd_init(void)$/;"	f
rpmem_cmd_log	deps/pmdk/src/librpmem/rpmem_cmd.c	/^rpmem_cmd_log(struct rpmem_cmd *cmd)$/;"	f	file:
rpmem_cmd_push	deps/pmdk/src/librpmem/rpmem_cmd.c	/^rpmem_cmd_push(struct rpmem_cmd *cmd, const char *arg)$/;"	f
rpmem_cmd_run	deps/pmdk/src/librpmem/rpmem_cmd.c	/^rpmem_cmd_run(struct rpmem_cmd *cmd)$/;"	f
rpmem_cmd_term	deps/pmdk/src/librpmem/rpmem_cmd.c	/^rpmem_cmd_term(struct rpmem_cmd *cmd)$/;"	f
rpmem_cmd_wait	deps/pmdk/src/librpmem/rpmem_cmd.c	/^rpmem_cmd_wait(struct rpmem_cmd *cmd, int *status)$/;"	f
rpmem_common_fini	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_common_fini(RPMEMpool *rpp, int join)$/;"	f	file:
rpmem_common_fip_fini	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_common_fip_fini(RPMEMpool *rpp)$/;"	f	file:
rpmem_common_fip_init	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_common_fip_init(RPMEMpool *rpp, struct rpmem_req_attr *req,$/;"	f	file:
rpmem_common_init	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_common_init(const char *target)$/;"	f	file:
rpmem_constructor	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_constructor(void)$/;"	f
rpmem_create	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_create(const char *target, const char *pool_set_name,$/;"	f
rpmem_deep_persist	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_deep_persist(RPMEMpool *rpp, size_t offset, size_t length, unsigned lane)$/;"	f
rpmem_drain	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_drain(RPMEMpool *rpp, unsigned lane, unsigned flags)$/;"	f
rpmem_err	deps/pmdk/src/rpmem_common/rpmem_common.h	/^enum rpmem_err {$/;"	g
rpmem_err_str_errno	deps/pmdk/src/librpmem/rpmem_util.c	/^static const struct rpmem_err_str_errno {$/;"	s	file:
rpmem_err_str_errno	deps/pmdk/src/librpmem/rpmem_util.c	/^} rpmem_err_str_errno[MAX_RPMEM_ERR] = {$/;"	v	typeref:struct:rpmem_err_str_errno	file:
rpmem_errormsg	deps/pmdk/src/librpmem/librpmem.c	/^rpmem_errormsg(void)$/;"	f
rpmem_exit	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_exit(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
rpmem_fault_injection_enabled	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_fault_injection_enabled(void)$/;"	f
rpmem_fault_injection_enabled	deps/pmdk/src/librpmem/rpmem.h	/^rpmem_fault_injection_enabled(void)$/;"	f
rpmem_fip	deps/pmdk/src/librpmem/rpmem_fip.c	/^struct rpmem_fip {$/;"	s	file:
rpmem_fip_attr	deps/pmdk/src/librpmem/rpmem_fip.h	/^struct rpmem_fip_attr {$/;"	s
rpmem_fip_close	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_close(struct rpmem_fip *fip)$/;"	f
rpmem_fip_connect	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_connect(struct rpmem_fip *fip)$/;"	f
rpmem_fip_cq_size	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^rpmem_fip_cq_size(enum rpmem_persist_method pm, enum rpmem_fip_node node)$/;"	f
rpmem_fip_drain	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_drain(struct rpmem_fip *fip, unsigned lane)$/;"	f
rpmem_fip_drain_apm	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_drain_apm(struct rpmem_fip *fip, unsigned lane)$/;"	f	file:
rpmem_fip_drain_fn	deps/pmdk/src/librpmem/rpmem_fip.c	/^typedef int (*rpmem_fip_drain_fn)(struct rpmem_fip *fip, unsigned lane);$/;"	t	file:
rpmem_fip_drain_nop	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_drain_nop(struct rpmem_fip *fip, unsigned lane)$/;"	f	file:
rpmem_fip_drain_raw	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_drain_raw(struct rpmem_fip *fip, unsigned lane)$/;"	f	file:
rpmem_fip_fini	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_fini(struct rpmem_fip *fip)$/;"	f
rpmem_fip_fini_fabric_res	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_fini_fabric_res(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_fini_fn	deps/pmdk/src/librpmem/rpmem_fip.c	/^typedef void (*rpmem_fip_fini_fn)(struct rpmem_fip *fip);$/;"	t	file:
rpmem_fip_fini_lanes_apm	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_fini_lanes_apm(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_fini_lanes_common	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_fini_lanes_common(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_fini_memory	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_fini_memory(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_flush	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_flush(struct rpmem_fip *fip, size_t offset, size_t len,$/;"	f
rpmem_fip_flush_apm	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_flush_apm(struct rpmem_fip *fip, size_t offset,$/;"	f	file:
rpmem_fip_flush_fn	deps/pmdk/src/librpmem/rpmem_fip.c	/^typedef ssize_t (*rpmem_fip_flush_fn)(struct rpmem_fip *fip, size_t offset,$/;"	t	file:
rpmem_fip_flush_raw	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_flush_raw(struct rpmem_fip *fip, size_t offset, size_t len,$/;"	f	file:
rpmem_fip_get_hints	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^rpmem_fip_get_hints(enum rpmem_provider provider)$/;"	f
rpmem_fip_get_pmsg	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_get_pmsg(struct rpmem_fip *fip, size_t idx)$/;"	f	file:
rpmem_fip_get_wq_size	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_get_wq_size(struct rpmem_fip *fip)$/;"	f
rpmem_fip_getinfo	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_getinfo(struct rpmem_fip *fip, const char *node, const char *service,$/;"	f	file:
rpmem_fip_init	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_init(const char *node, const char *service,$/;"	f
rpmem_fip_init_fabric_res	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_init_fabric_res(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_init_fn	deps/pmdk/src/librpmem/rpmem_fip.c	/^typedef int (*rpmem_fip_init_fn)(struct rpmem_fip *fip);$/;"	t	file:
rpmem_fip_init_lanes_apm	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_init_lanes_apm(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_init_lanes_common	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_init_lanes_common(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_init_mem_lanes_apm	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_init_mem_lanes_apm(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_init_mem_lanes_gpspm	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_init_mem_lanes_gpspm(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_init_memory	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_init_memory(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_is_closing	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_is_closing(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_lane	deps/pmdk/src/librpmem/rpmem_fip.c	/^struct rpmem_fip_lane {$/;"	s	file:
rpmem_fip_lane	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^struct rpmem_fip_lane {$/;"	s
rpmem_fip_lane	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^struct rpmem_fip_lane {$/;"	s	file:
rpmem_fip_lane_attr	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^struct rpmem_fip_lane_attr {$/;"	s	file:
rpmem_fip_lane_attrs	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^rpmem_fip_lane_attrs[MAX_RPMEM_FIP_NODE][MAX_RPMEM_PM] = {$/;"	v	typeref:struct:rpmem_fip_lane_attr	file:
rpmem_fip_lane_begin	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_lane_begin(struct rpmem_fip_lane *lanep, uint64_t event)$/;"	f	file:
rpmem_fip_lane_begin	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^rpmem_fip_lane_begin(struct rpmem_fip_lane *lanep, uint64_t sig)$/;"	f
rpmem_fip_lane_busy	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^rpmem_fip_lane_busy(struct rpmem_fip_lane *lanep)$/;"	f
rpmem_fip_lane_connect	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_lane_connect(struct rpmem_fip *fip, struct rpmem_fip_lane *lanep)$/;"	f	file:
rpmem_fip_lane_fini	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_lane_fini(struct rpmem_fip_lane *lanep)$/;"	f	file:
rpmem_fip_lane_fini	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^rpmem_fip_lane_fini(struct rpmem_fip_lane *lanep)$/;"	f
rpmem_fip_lane_init	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_lane_init(struct rpmem_fip *fip, struct rpmem_fip_lane *lanep)$/;"	f	file:
rpmem_fip_lane_init	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^rpmem_fip_lane_init(struct rpmem_fip_lane *lanep)$/;"	f
rpmem_fip_lane_is_busy	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^rpmem_fip_lane_is_busy(struct rpmem_fip_lane *lanep, uint64_t sig)$/;"	f
rpmem_fip_lane_prep_write	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_lane_prep_write(struct rpmem_fip_plane *lanep, unsigned flags)$/;"	f	file:
rpmem_fip_lane_ret	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^rpmem_fip_lane_ret(struct rpmem_fip_lane *lanep)$/;"	f
rpmem_fip_lane_signal	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^rpmem_fip_lane_signal(struct rpmem_fip_lane *lanep, uint64_t sig)$/;"	f
rpmem_fip_lane_sigret	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^rpmem_fip_lane_sigret(struct rpmem_fip_lane *lanep, uint64_t sig, int ret)$/;"	f
rpmem_fip_lane_wait	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_lane_wait(struct rpmem_fip *fip, struct rpmem_fip_lane *lanep,$/;"	f	file:
rpmem_fip_lane_wait	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^rpmem_fip_lane_wait(struct rpmem_fip_lane *lanep, uint64_t sig)$/;"	f
rpmem_fip_lanes_connect	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_lanes_connect(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_lanes_fini_common	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_lanes_fini_common(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_lanes_init	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_lanes_init(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_lanes_init_common	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_lanes_init_common(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_lanes_shutdown	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_lanes_shutdown(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_max_nlanes	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^rpmem_fip_max_nlanes(struct fi_info *fi)$/;"	f
rpmem_fip_monitor_fini	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_monitor_fini(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_monitor_init	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_monitor_init(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_monitor_thread	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_monitor_thread(void *arg)$/;"	f	file:
rpmem_fip_msg	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^struct rpmem_fip_msg {$/;"	s
rpmem_fip_msg_get_pmsg	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^rpmem_fip_msg_get_pmsg(struct rpmem_fip_msg *msg)$/;"	f
rpmem_fip_msg_get_pres	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^rpmem_fip_msg_get_pres(struct rpmem_fip_msg *msg)$/;"	f
rpmem_fip_msg_init	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^rpmem_fip_msg_init(struct rpmem_fip_msg *msg, void *desc, fi_addr_t addr,$/;"	f
rpmem_fip_node	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	/^enum rpmem_fip_node {$/;"	g
rpmem_fip_ops	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_ops[MAX_RPMEM_PROV][MAX_RPMEM_PM] = {$/;"	v	typeref:struct:rpmem_fip_ops	file:
rpmem_fip_ops	deps/pmdk/src/librpmem/rpmem_fip.c	/^struct rpmem_fip_ops {$/;"	s	file:
rpmem_fip_param_get	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_param_get(const char *var_name, int *value)$/;"	f	file:
rpmem_fip_persist	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_persist(struct rpmem_fip *fip, size_t offset, size_t len,$/;"	f
rpmem_fip_persist_apm	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_persist_apm(struct rpmem_fip *fip, size_t offset,$/;"	f	file:
rpmem_fip_persist_apm_sockets	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_persist_apm_sockets(struct rpmem_fip *fip, size_t offset,$/;"	f	file:
rpmem_fip_persist_fn	deps/pmdk/src/librpmem/rpmem_fip.c	/^typedef ssize_t (*rpmem_fip_persist_fn)(struct rpmem_fip *fip, size_t offset,$/;"	t	file:
rpmem_fip_persist_gpspm	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_persist_gpspm(struct rpmem_fip *fip, size_t offset,$/;"	f	file:
rpmem_fip_persist_gpspm_sockets	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_persist_gpspm_sockets(struct rpmem_fip *fip, size_t offset,$/;"	f	file:
rpmem_fip_persist_raw	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_persist_raw(struct rpmem_fip *fip, size_t offset,$/;"	f	file:
rpmem_fip_persist_saw	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_persist_saw(struct rpmem_fip *fip, size_t offset,$/;"	f	file:
rpmem_fip_persist_send	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_persist_send(struct rpmem_fip *fip, size_t offset,$/;"	f	file:
rpmem_fip_plane	deps/pmdk/src/librpmem/rpmem_fip.c	/^struct rpmem_fip_plane {$/;"	s	file:
rpmem_fip_post_lanes_common	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_post_lanes_common(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_post_resp	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_post_resp(struct rpmem_fip *fip,$/;"	f	file:
rpmem_fip_print_info	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^rpmem_fip_print_info(struct fi_info *fi)$/;"	f
rpmem_fip_probe	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	/^rpmem_fip_probe(struct rpmem_fip_probe probe, enum rpmem_provider provider)$/;"	f
rpmem_fip_probe	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	/^struct rpmem_fip_probe {$/;"	s
rpmem_fip_probe_any	deps/pmdk/src/rpmem_common/rpmem_fip_common.h	/^rpmem_fip_probe_any(struct rpmem_fip_probe probe)$/;"	f
rpmem_fip_probe_fork_safety	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_probe_fork_safety(void)$/;"	f
rpmem_fip_probe_get	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^rpmem_fip_probe_get(const char *target, struct rpmem_fip_probe *probe)$/;"	f
rpmem_fip_read	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_read(struct rpmem_fip *fip, void *buff, size_t len,$/;"	f
rpmem_fip_read_eq	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^rpmem_fip_read_eq(struct fid_eq *eq, struct fi_eq_cm_entry *entry,$/;"	f
rpmem_fip_read_eq_check	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^rpmem_fip_read_eq_check(struct fid_eq *eq, struct fi_eq_cm_entry *entry,$/;"	f
rpmem_fip_readmsg	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^rpmem_fip_readmsg(struct fid_ep *ep, struct rpmem_fip_rma *rma,$/;"	f
rpmem_fip_recvmsg	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^rpmem_fip_recvmsg(struct fid_ep *ep, struct rpmem_fip_msg *msg)$/;"	f
rpmem_fip_rlane	deps/pmdk/src/librpmem/rpmem_fip.c	/^struct rpmem_fip_rlane {$/;"	s	file:
rpmem_fip_rma	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^struct rpmem_fip_rma {$/;"	s
rpmem_fip_rma_init	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^rpmem_fip_rma_init(struct rpmem_fip_rma *rma, void *desc,$/;"	f
rpmem_fip_rx_size	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^rpmem_fip_rx_size(enum rpmem_persist_method pm, enum rpmem_fip_node node)$/;"	f
rpmem_fip_sendmsg	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^rpmem_fip_sendmsg(struct fid_ep *ep, struct rpmem_fip_msg *msg, size_t len)$/;"	f
rpmem_fip_set_attr	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_set_attr(struct rpmem_fip *fip, struct rpmem_fip_attr *attr)$/;"	f	file:
rpmem_fip_set_closing	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_set_closing(struct rpmem_fip *fip)$/;"	f	file:
rpmem_fip_set_nlanes	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_set_nlanes(struct rpmem_fip *fip, unsigned nlanes)$/;"	f	file:
rpmem_fip_test	deps/pmdk/src/test/rpmem_fip/TEST5	/^function rpmem_fip_test()$/;"	f
rpmem_fip_wq_flush_check	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_wq_flush_check(struct rpmem_fip *fip, struct rpmem_fip_plane *lanep,$/;"	f	file:
rpmem_fip_wq_flush_wait	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_wq_flush_wait(struct rpmem_fip *fip, struct rpmem_fip_plane *lanep)$/;"	f	file:
rpmem_fip_wq_inc	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_wq_inc(struct rpmem_fip_plane *lanep)$/;"	f	file:
rpmem_fip_wq_inc_and_flush	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_wq_inc_and_flush(struct rpmem_fip *fip, struct rpmem_fip_plane *lanep)$/;"	f	file:
rpmem_fip_wq_is_flushing	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_wq_is_flushing(struct rpmem_fip_plane *lanep)$/;"	f	file:
rpmem_fip_wq_require_flush	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_wq_require_flush(struct rpmem_fip *fip, struct rpmem_fip_plane *lanep)$/;"	f	file:
rpmem_fip_wq_set_empty	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_wq_set_empty(struct rpmem_fip_plane *lanep)$/;"	f	file:
rpmem_fip_wq_set_flushing	deps/pmdk/src/librpmem/rpmem_fip.c	/^rpmem_fip_wq_set_flushing(struct rpmem_fip_plane *lanep)$/;"	f	file:
rpmem_fip_wq_size	deps/pmdk/src/rpmem_common/rpmem_fip_common.c	/^rpmem_fip_wq_size(enum rpmem_persist_method pm, enum rpmem_fip_node node)$/;"	f
rpmem_fip_writemsg	deps/pmdk/src/rpmem_common/rpmem_fip_msg.h	/^rpmem_fip_writemsg(struct fid_ep *ep, struct rpmem_fip_rma *rma,$/;"	f
rpmem_flags_init	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_flags_init(struct benchmark *bench, struct benchmark_args *args,$/;"	f	file:
rpmem_flush	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_flush(RPMEMpool *rpp, size_t offset, size_t length,$/;"	f
rpmem_flush_clo	deps/pmdk/src/benchmarks/rpmem.cpp	/^static struct benchmark_clo rpmem_flush_clo[6];$/;"	v	typeref:struct:benchmark_clo	file:
rpmem_flush_drain_op	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_flush_drain_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
rpmem_flush_info	deps/pmdk/src/benchmarks/rpmem.cpp	/^static struct benchmark_info rpmem_flush_info;$/;"	v	typeref:struct:benchmark_info	file:
rpmem_get_ip_str	deps/pmdk/src/rpmem_common/rpmem_common.c	/^rpmem_get_ip_str(const struct sockaddr *addr)$/;"	f
rpmem_get_ssh_conn_addr	deps/pmdk/src/rpmem_common/rpmem_common.c	/^rpmem_get_ssh_conn_addr(void)$/;"	f
rpmem_hton_msg_close	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_hton_msg_close(struct rpmem_msg_close *msg)$/;"	f
rpmem_hton_msg_close_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_hton_msg_close_resp(struct rpmem_msg_close_resp *msg)$/;"	f
rpmem_hton_msg_common	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_hton_msg_common(struct rpmem_msg_common *msg)$/;"	f
rpmem_hton_msg_create	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_hton_msg_create(struct rpmem_msg_create *msg)$/;"	f
rpmem_hton_msg_create_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_hton_msg_create_resp(struct rpmem_msg_create_resp *msg)$/;"	f
rpmem_hton_msg_hdr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_hton_msg_hdr(struct rpmem_msg_hdr *hdrp)$/;"	f
rpmem_hton_msg_hdr_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_hton_msg_hdr_resp(struct rpmem_msg_hdr_resp *hdrp)$/;"	f
rpmem_hton_msg_open	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_hton_msg_open(struct rpmem_msg_open *msg)$/;"	f
rpmem_hton_msg_open_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_hton_msg_open_resp(struct rpmem_msg_open_resp *msg)$/;"	f
rpmem_hton_msg_set_attr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_hton_msg_set_attr(struct rpmem_msg_set_attr *msg)$/;"	f
rpmem_hton_msg_set_attr_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_hton_msg_set_attr_resp(struct rpmem_msg_set_attr_resp *msg)$/;"	f
rpmem_init	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_init(struct benchmark *bench, struct benchmark_args *args)$/;"	f	file:
rpmem_inject_fault_at	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_inject_fault_at(enum pmem_allocation_type type, int nth,$/;"	f
rpmem_inject_fault_at	deps/pmdk/src/librpmem/rpmem.h	/^rpmem_inject_fault_at(enum pmem_allocation_type type, int nth,$/;"	f
rpmem_install_triggers_overrides	deps/pmdk/utils/build-dpkg.sh	/^function rpmem_install_triggers_overrides() {$/;"	f
rpmem_log_args	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_log_args(const char *req, const char *target, const char *pool_set_name,$/;"	f	file:
rpmem_log_resp	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_log_resp(const char *req, const struct rpmem_resp_attr *resp)$/;"	f	file:
rpmem_map_file	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_map_file(const char *path, struct rpmem_bench *mb, size_t size)$/;"	f	file:
rpmem_memcpy_msync	deps/pmdk/src/tools/rpmemd/rpmemd_util.c	/^rpmem_memcpy_msync(void *pmemdest, const void *src, size_t len)$/;"	f	file:
rpmem_mixed_clo	deps/pmdk/src/benchmarks/rpmem.cpp	/^static struct benchmark_clo rpmem_mixed_clo[5];$/;"	v	typeref:struct:benchmark_clo	file:
rpmem_mixed_info	deps/pmdk/src/benchmarks/rpmem.cpp	/^static struct benchmark_info rpmem_mixed_info;$/;"	v	typeref:struct:benchmark_info	file:
rpmem_mixed_op	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_mixed_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
rpmem_mixed_op_drain	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_mixed_op_drain(struct rpmem_bench *mb, struct operation_info *info)$/;"	f	file:
rpmem_mixed_op_flush	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_mixed_op_flush(struct rpmem_bench *mb, struct operation_info *info)$/;"	f	file:
rpmem_monitor_thread	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_monitor_thread(void *arg)$/;"	f	file:
rpmem_msg_close	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_close {$/;"	s
rpmem_msg_close_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_close_resp {$/;"	s
rpmem_msg_common	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_common {$/;"	s
rpmem_msg_create	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_create {$/;"	s
rpmem_msg_create_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_create_resp {$/;"	s
rpmem_msg_hdr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_hdr {$/;"	s
rpmem_msg_hdr_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_hdr_resp {$/;"	s
rpmem_msg_ibc_attr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_ibc_attr {$/;"	s
rpmem_msg_open	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_open {$/;"	s
rpmem_msg_open_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_open_resp {$/;"	s
rpmem_msg_persist	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_persist {$/;"	s
rpmem_msg_persist_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_persist_resp {$/;"	s
rpmem_msg_pool_desc	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_pool_desc {$/;"	s
rpmem_msg_set_attr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_set_attr {$/;"	s
rpmem_msg_set_attr_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_msg_set_attr_resp {$/;"	s
rpmem_msg_type	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^enum rpmem_msg_type {$/;"	g
rpmem_ntoh_msg_close	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_close(struct rpmem_msg_close *msg)$/;"	f
rpmem_ntoh_msg_close_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_close_resp(struct rpmem_msg_close_resp *msg)$/;"	f
rpmem_ntoh_msg_common	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_common(struct rpmem_msg_common *msg)$/;"	f
rpmem_ntoh_msg_create	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_create(struct rpmem_msg_create *msg)$/;"	f
rpmem_ntoh_msg_create_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_create_resp(struct rpmem_msg_create_resp *msg)$/;"	f
rpmem_ntoh_msg_hdr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_hdr(struct rpmem_msg_hdr *hdrp)$/;"	f
rpmem_ntoh_msg_hdr_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_hdr_resp(struct rpmem_msg_hdr_resp *hdrp)$/;"	f
rpmem_ntoh_msg_ibc_attr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_ibc_attr(struct rpmem_msg_ibc_attr *ibc)$/;"	f
rpmem_ntoh_msg_open	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_open(struct rpmem_msg_open *msg)$/;"	f
rpmem_ntoh_msg_open_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_open_resp(struct rpmem_msg_open_resp *msg)$/;"	f
rpmem_ntoh_msg_pool_desc	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_pool_desc(struct rpmem_msg_pool_desc *pool_desc)$/;"	f
rpmem_ntoh_msg_set_attr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_set_attr(struct rpmem_msg_set_attr *msg)$/;"	f
rpmem_ntoh_msg_set_attr_resp	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_msg_set_attr_resp(struct rpmem_msg_set_attr_resp *msg)$/;"	f
rpmem_ntoh_pool_attr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^rpmem_ntoh_pool_attr(struct rpmem_pool_attr_packed *attr)$/;"	f
rpmem_obc	deps/pmdk/src/librpmem/rpmem_obc.c	/^struct rpmem_obc {$/;"	s	file:
rpmem_obc_alloc_create_msg	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_alloc_create_msg(const struct rpmem_req_attr *req,$/;"	f	file:
rpmem_obc_alloc_open_msg	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_alloc_open_msg(const struct rpmem_req_attr *req,$/;"	f	file:
rpmem_obc_check_close_resp	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_check_close_resp(struct rpmem_msg_close_resp *resp)$/;"	f	file:
rpmem_obc_check_create_resp	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_check_create_resp(struct rpmem_msg_create_resp *resp)$/;"	f	file:
rpmem_obc_check_hdr_resp	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_check_hdr_resp(struct rpmem_msg_hdr_resp *resp,$/;"	f	file:
rpmem_obc_check_ibc_attr	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_check_ibc_attr(struct rpmem_msg_ibc_attr *ibc)$/;"	f	file:
rpmem_obc_check_open_resp	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_check_open_resp(struct rpmem_msg_open_resp *resp)$/;"	f	file:
rpmem_obc_check_port	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_check_port(const struct rpmem_target_info *info)$/;"	f	file:
rpmem_obc_check_req	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_check_req(const struct rpmem_req_attr *req)$/;"	f	file:
rpmem_obc_check_set_attr_resp	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_check_set_attr_resp(struct rpmem_msg_set_attr_resp *resp)$/;"	f	file:
rpmem_obc_close	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_close(struct rpmem_obc *rpc, int flags)$/;"	f
rpmem_obc_close_conn	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_close_conn(struct rpmem_obc *rpc)$/;"	f	file:
rpmem_obc_connect	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_connect(struct rpmem_obc *rpc, const struct rpmem_target_info *info)$/;"	f
rpmem_obc_create	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_create(struct rpmem_obc *rpc,$/;"	f
rpmem_obc_disconnect	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_disconnect(struct rpmem_obc *rpc)$/;"	f
rpmem_obc_fini	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_fini(struct rpmem_obc *rpc)$/;"	f
rpmem_obc_get_res	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_get_res(struct rpmem_resp_attr *res,$/;"	f	file:
rpmem_obc_init	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_init(void)$/;"	f
rpmem_obc_is_connected	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_is_connected(struct rpmem_obc *rpc)$/;"	f	file:
rpmem_obc_monitor	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_monitor(struct rpmem_obc *rpc, int nonblock)$/;"	f
rpmem_obc_open	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_open(struct rpmem_obc *rpc,$/;"	f
rpmem_obc_set_attr	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_set_attr(struct rpmem_obc *rpc,$/;"	f
rpmem_obc_set_msg_hdr	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_set_msg_hdr(struct rpmem_msg_hdr *hdrp,$/;"	f	file:
rpmem_obc_set_pool_desc	deps/pmdk/src/librpmem/rpmem_obc.c	/^rpmem_obc_set_pool_desc(struct rpmem_msg_pool_desc *pool_desc,$/;"	f	file:
rpmem_open	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_open(const char *target, const char *pool_set_name,$/;"	f
rpmem_persist	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_persist(RPMEMpool *rpp, size_t offset, size_t length,$/;"	f
rpmem_persist_clo	deps/pmdk/src/benchmarks/rpmem.cpp	/^static struct benchmark_clo rpmem_persist_clo[5];$/;"	v	typeref:struct:benchmark_clo	file:
rpmem_persist_info	deps/pmdk/src/benchmarks/rpmem.cpp	/^static struct benchmark_info rpmem_persist_info;$/;"	v	typeref:struct:benchmark_info	file:
rpmem_persist_method	deps/pmdk/src/rpmem_common/rpmem_common.h	/^enum rpmem_persist_method {$/;"	g
rpmem_persist_method_to_str	deps/pmdk/src/rpmem_common/rpmem_common.c	/^rpmem_persist_method_to_str(enum rpmem_persist_method pm)$/;"	f
rpmem_persist_op	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_persist_op(struct benchmark *bench, struct operation_info *info)$/;"	f	file:
rpmem_pool	deps/pmdk/src/librpmem/rpmem.c	/^struct rpmem_pool {$/;"	s	file:
rpmem_pool_attr	deps/pmdk/src/include/librpmem.h	/^struct rpmem_pool_attr {$/;"	s
rpmem_pool_attr_packed	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^struct rpmem_pool_attr_packed {$/;"	s
rpmem_poolset_fini	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_poolset_fini(struct rpmem_bench *mb)$/;"	f	file:
rpmem_poolset_init	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_poolset_init(const char *path, struct rpmem_bench *mb,$/;"	f	file:
rpmem_print_pm_policy	deps/pmdk/src/tools/rpmemd/rpmemd_util.c	/^rpmem_print_pm_policy(enum rpmem_persist_method persist_method,$/;"	f	file:
rpmem_provider	deps/pmdk/src/rpmem_common/rpmem_common.h	/^enum rpmem_provider {$/;"	g
rpmem_provider_from_str	deps/pmdk/src/rpmem_common/rpmem_common.c	/^rpmem_provider_from_str(const char *str)$/;"	f
rpmem_provider_to_str	deps/pmdk/src/rpmem_common/rpmem_common.c	/^rpmem_provider_to_str(enum rpmem_provider provider)$/;"	f
rpmem_read	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_read(RPMEMpool *rpp, void *buff, size_t offset,$/;"	f
rpmem_remove	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_remove(const char *target, const char *pool_set, int flags)$/;"	f
rpmem_req_attr	deps/pmdk/src/rpmem_common/rpmem_common.h	/^struct rpmem_req_attr {$/;"	s
rpmem_resp_attr	deps/pmdk/src/rpmem_common/rpmem_common.h	/^struct rpmem_resp_attr {$/;"	s
rpmem_set_attr	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_set_attr(RPMEMpool *rpp, const struct rpmem_pool_attr *attr)$/;"	f
rpmem_set_min_size	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_set_min_size(struct rpmem_bench *mb, enum operation_mode op_mode,$/;"	f	file:
rpmem_set_provider	deps/pmdk/src/librpmem/rpmem.c	/^rpmem_set_provider(RPMEMpool *rpp, const char *node)$/;"	f	file:
rpmem_ssh	deps/pmdk/src/librpmem/rpmem_ssh.c	/^struct rpmem_ssh {$/;"	s	file:
rpmem_ssh_close	deps/pmdk/src/librpmem/rpmem_ssh.c	/^rpmem_ssh_close(struct rpmem_ssh *rps)$/;"	f
rpmem_ssh_exec	deps/pmdk/src/librpmem/rpmem_ssh.c	/^rpmem_ssh_exec(const struct rpmem_target_info *info, ...)$/;"	f
rpmem_ssh_execv	deps/pmdk/src/librpmem/rpmem_ssh.c	/^rpmem_ssh_execv(const struct rpmem_target_info *info, const char **argv)$/;"	f
rpmem_ssh_monitor	deps/pmdk/src/librpmem/rpmem_ssh.c	/^rpmem_ssh_monitor(struct rpmem_ssh *rps, int nonblock)$/;"	f
rpmem_ssh_open	deps/pmdk/src/librpmem/rpmem_ssh.c	/^rpmem_ssh_open(const struct rpmem_target_info *info)$/;"	f
rpmem_ssh_recv	deps/pmdk/src/librpmem/rpmem_ssh.c	/^rpmem_ssh_recv(struct rpmem_ssh *rps, void *buff, size_t len)$/;"	f
rpmem_ssh_send	deps/pmdk/src/librpmem/rpmem_ssh.c	/^rpmem_ssh_send(struct rpmem_ssh *rps, const void *buff, size_t len)$/;"	f
rpmem_ssh_strerror	deps/pmdk/src/librpmem/rpmem_ssh.c	/^rpmem_ssh_strerror(struct rpmem_ssh *rps, int oerrno)$/;"	f
rpmem_target_free	deps/pmdk/src/rpmem_common/rpmem_common.c	/^rpmem_target_free(struct rpmem_target_info *info)$/;"	f
rpmem_target_info	deps/pmdk/src/rpmem_common/rpmem_common.h	/^struct rpmem_target_info {$/;"	s
rpmem_target_parse	deps/pmdk/src/rpmem_common/rpmem_common.c	/^rpmem_target_parse(const char *target)$/;"	f
rpmem_unmap_file	deps/pmdk/src/benchmarks/rpmem.cpp	/^rpmem_unmap_file(struct rpmem_bench *mb)$/;"	f	file:
rpmem_util_cmd_get	deps/pmdk/src/librpmem/rpmem_util.c	/^rpmem_util_cmd_get(void)$/;"	f
rpmem_util_cmds_fini	deps/pmdk/src/librpmem/rpmem_util.c	/^rpmem_util_cmds_fini(void)$/;"	f
rpmem_util_cmds_inc	deps/pmdk/src/librpmem/rpmem_util.c	/^rpmem_util_cmds_inc(void)$/;"	f	file:
rpmem_util_cmds_init	deps/pmdk/src/librpmem/rpmem_util.c	/^rpmem_util_cmds_init(void)$/;"	f
rpmem_util_get_env_max_nlanes	deps/pmdk/src/librpmem/rpmem_util.c	/^rpmem_util_get_env_max_nlanes(unsigned *max_nlanes)$/;"	f
rpmem_util_get_env_uint	deps/pmdk/src/librpmem/rpmem_util.c	/^rpmem_util_get_env_uint(const char *env, unsigned *pval)$/;"	f	file:
rpmem_util_get_env_wq_size	deps/pmdk/src/librpmem/rpmem_util.c	/^rpmem_util_get_env_wq_size(unsigned *wq_size)$/;"	f
rpmem_util_proto_errno	deps/pmdk/src/librpmem/rpmem_util.c	/^rpmem_util_proto_errno(enum rpmem_err err)$/;"	f
rpmem_util_proto_errstr	deps/pmdk/src/librpmem/rpmem_util.c	/^rpmem_util_proto_errstr(enum rpmem_err err)$/;"	f
rpmem_xread	deps/pmdk/src/rpmem_common/rpmem_common.c	/^rpmem_xread(int fd, void *buf, size_t len, int flags)$/;"	f
rpmem_xwrite	deps/pmdk/src/rpmem_common/rpmem_common.c	/^rpmem_xwrite(int fd, const void *buf, size_t len, int flags)$/;"	f
rpmemd	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^struct rpmemd {$/;"	s	file:
rpmemd_apply_pm_policy	deps/pmdk/src/tools/rpmemd/rpmemd_util.c	/^rpmemd_apply_pm_policy(enum rpmem_persist_method *persist_method,$/;"	f
rpmemd_check_pool	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_check_pool(struct rpmemd *rpmemd, const struct rpmem_req_attr *req,$/;"	f	file:
rpmemd_close_pool	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_close_pool(struct rpmemd *rpmemd, int remove)$/;"	f	file:
rpmemd_common_fip_init	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_common_fip_init(struct rpmemd *rpmemd, const struct rpmem_req_attr *req,$/;"	f	file:
rpmemd_config	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	/^struct rpmemd_config {$/;"	s
rpmemd_config_free	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^rpmemd_config_free(struct rpmemd_config *config)$/;"	f
rpmemd_config_read	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^rpmemd_config_read(struct rpmemd_config *config, int argc, char *argv[])$/;"	f
rpmemd_db	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^struct rpmemd_db {$/;"	s	file:
rpmemd_db_add	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_add(struct list_head *head, struct rpmemd_db *db,$/;"	f	file:
rpmemd_db_check_dir	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_check_dir(struct rpmemd_db *db)$/;"	f
rpmemd_db_check_dir_r	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_check_dir_r(struct list_head *head, struct rpmemd_db *db,$/;"	f	file:
rpmemd_db_check_dups	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_check_dups(struct list_head *head, struct rpmemd_db *db,$/;"	f	file:
rpmemd_db_check_dups_set	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_check_dups_set(struct pool_set *set, const char *path)$/;"	f	file:
rpmemd_db_concat	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_concat(const char *path1, const char *path2)$/;"	f	file:
rpmemd_db_entry	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^struct rpmemd_db_entry {$/;"	s	file:
rpmemd_db_fini	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_fini(struct rpmemd_db *db)$/;"	f
rpmemd_db_get_path	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_get_path(struct rpmemd_db *db, const char *pool_desc)$/;"	f	file:
rpmemd_db_get_status	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_db_get_status(int err)$/;"	f	file:
rpmemd_db_init	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_init(const char *root_dir, mode_t mode)$/;"	f
rpmemd_db_pool	deps/pmdk/src/tools/rpmemd/rpmemd_db.h	/^struct rpmemd_db_pool {$/;"	s
rpmemd_db_pool_close	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_pool_close(struct rpmemd_db *db, struct rpmemd_db_pool *prp)$/;"	f
rpmemd_db_pool_create	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_pool_create(struct rpmemd_db *db, const char *pool_desc,$/;"	f
rpmemd_db_pool_is_pmem	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_pool_is_pmem(struct rpmemd_db_pool *pool)$/;"	f
rpmemd_db_pool_madvise	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_pool_madvise(struct pool_set *set)$/;"	f	file:
rpmemd_db_pool_open	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_pool_open(struct rpmemd_db *db, const char *pool_desc,$/;"	f
rpmemd_db_pool_remove	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_pool_remove(struct rpmemd_db *db, const char *pool_desc,$/;"	f
rpmemd_db_pool_set_attr	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_db_pool_set_attr(struct rpmemd_db_pool *prp,$/;"	f
rpmemd_deep_persist	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_deep_persist(const void *addr, size_t size, void *ctx)$/;"	f	file:
rpmemd_fip	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^struct rpmemd_fip {$/;"	s	file:
rpmemd_fip_accept	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_accept(struct rpmemd_fip *fip, int timeout)$/;"	f
rpmemd_fip_accept_one	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_accept_one(struct rpmemd_fip *fip,$/;"	f	file:
rpmemd_fip_attr	deps/pmdk/src/tools/rpmemd/rpmemd_fip.h	/^struct rpmemd_fip_attr {$/;"	s
rpmemd_fip_check_pmsg	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_check_pmsg(struct rpmemd_fip *fip, struct rpmem_msg_persist *pmsg)$/;"	f	file:
rpmemd_fip_close	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_close(struct rpmemd_fip *fip)$/;"	f
rpmemd_fip_cq_read	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_cq_read(struct rpmemd_fip *fip, struct fid_cq *cq,$/;"	f	file:
rpmemd_fip_fini	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_fini(struct rpmemd_fip *fip)$/;"	f
rpmemd_fip_fini_common	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_fini_common(struct rpmemd_fip *fip)$/;"	f	file:
rpmemd_fip_fini_ep	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_fini_ep(struct rpmem_fip_lane *lanep)$/;"	f	file:
rpmemd_fip_fini_fabric_res	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_fini_fabric_res(struct rpmemd_fip *fip)$/;"	f	file:
rpmemd_fip_fini_lanes	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_fini_lanes(struct rpmemd_fip *fip)$/;"	f	file:
rpmemd_fip_fini_memory	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_fini_memory(struct rpmemd_fip *fip)$/;"	f	file:
rpmemd_fip_fini_thread	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_fini_thread(struct rpmemd_fip *fip, struct rpmemd_fip_thread *thread)$/;"	f	file:
rpmemd_fip_fini_threads	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_fini_threads(struct rpmemd_fip *fip)$/;"	f	file:
rpmemd_fip_get_def_nthreads	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_get_def_nthreads(struct rpmemd_fip *fip)$/;"	f	file:
rpmemd_fip_get_pmsg	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_get_pmsg(struct rpmemd_fip *fip, size_t idx)$/;"	f	file:
rpmemd_fip_getinfo	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_getinfo(struct rpmemd_fip *fip, const char *service,$/;"	f	file:
rpmemd_fip_init	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_init(const char *node, const char *service,$/;"	f
rpmemd_fip_init_common	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_init_common(struct rpmemd_fip *fip)$/;"	f	file:
rpmemd_fip_init_ep	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_init_ep(struct rpmemd_fip *fip, struct fi_info *info,$/;"	f	file:
rpmemd_fip_init_fabric_res	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_init_fabric_res(struct rpmemd_fip *fip)$/;"	f	file:
rpmemd_fip_init_memory	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_init_memory(struct rpmemd_fip *fip)$/;"	f	file:
rpmemd_fip_init_thread	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_init_thread(struct rpmemd_fip *fip, struct rpmemd_fip_thread *thread)$/;"	f	file:
rpmemd_fip_init_threads	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_init_threads(struct rpmemd_fip *fip)$/;"	f	file:
rpmemd_fip_lane	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^struct rpmemd_fip_lane {$/;"	s	file:
rpmemd_fip_lanes_init	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_lanes_init(struct rpmemd_fip *fip)$/;"	f	file:
rpmemd_fip_post_common	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_post_common(struct rpmemd_fip *fip, struct rpmemd_fip_lane *lanep)$/;"	f	file:
rpmemd_fip_post_msg	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_post_msg(struct rpmemd_fip_lane *lanep)$/;"	f	file:
rpmemd_fip_post_resp	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_post_resp(struct rpmemd_fip_lane *lanep)$/;"	f	file:
rpmemd_fip_process_recv	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_process_recv(struct rpmemd_fip *fip, struct rpmemd_fip_lane *lanep)$/;"	f	file:
rpmemd_fip_process_send	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_process_send(struct rpmemd_fip *fip, struct rpmemd_fip_lane *lanep)$/;"	f	file:
rpmemd_fip_process_start	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_process_start(struct rpmemd_fip *fip)$/;"	f
rpmemd_fip_process_stop	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_process_stop(struct rpmemd_fip *fip)$/;"	f
rpmemd_fip_set_attr	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_set_attr(struct rpmemd_fip *fip, struct rpmemd_fip_attr *attr)$/;"	f	file:
rpmemd_fip_set_resp	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_set_resp(struct rpmemd_fip *fip, struct rpmem_resp_attr *resp)$/;"	f	file:
rpmemd_fip_start_thread	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_fip_start_thread(struct rpmemd *rpmemd)$/;"	f	file:
rpmemd_fip_stop	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_fip_stop(struct rpmemd *rpmemd)$/;"	f	file:
rpmemd_fip_stop_thread	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_fip_stop_thread(struct rpmemd *rpmemd)$/;"	f	file:
rpmemd_fip_thread	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_fip_thread(void *arg)$/;"	f	file:
rpmemd_fip_thread	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_thread(void *arg)$/;"	f	file:
rpmemd_fip_thread	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^struct rpmemd_fip_thread {$/;"	s	file:
rpmemd_fip_wait_close	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^rpmemd_fip_wait_close(struct rpmemd_fip *fip, int timeout)$/;"	f
rpmemd_flush_fatal	deps/pmdk/src/tools/rpmemd/rpmemd_util.c	/^rpmemd_flush_fatal(const void *addr, size_t len)$/;"	f
rpmemd_get_attr	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^rpmemd_get_attr(struct pool_attr *attr, const struct rpmem_pool_attr *rattr)$/;"	f	file:
rpmemd_get_pid	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^rpmemd_get_pid(const char *target, const char *pid_file)$/;"	f	file:
rpmemd_get_pm	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_get_pm(struct rpmemd_config *config)$/;"	f	file:
rpmemd_ident	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^static char *rpmemd_ident;$/;"	v	file:
rpmemd_is_running	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^rpmemd_is_running(const char *target, int pid)$/;"	f	file:
rpmemd_kill	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^rpmemd_kill(const char *target, int pid)$/;"	f	file:
rpmemd_kill_wait	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^rpmemd_kill_wait(const char *target, const char *pid_file, enum wait_type wait)$/;"	f	file:
rpmemd_level2prio	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^static int rpmemd_level2prio[MAX_RPD_LOG] = {$/;"	v	file:
rpmemd_log	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^rpmemd_log(enum rpmemd_log_level level, const char *fname, int lineno,$/;"	f
rpmemd_log_basename	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^rpmemd_log_basename(const char *fname)$/;"	f	file:
rpmemd_log_close	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^rpmemd_log_close(void)$/;"	f
rpmemd_log_file	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^static FILE *rpmemd_log_file;$/;"	v	file:
rpmemd_log_init	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^rpmemd_log_init(const char *ident, const char *fname, int use_syslog)$/;"	f
rpmemd_log_level	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^enum rpmemd_log_level rpmemd_log_level;$/;"	v	typeref:enum:rpmemd_log_level
rpmemd_log_level	deps/pmdk/src/tools/rpmemd/rpmemd_log.h	/^enum rpmemd_log_level {$/;"	g
rpmemd_log_level_from_str	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^rpmemd_log_level_from_str(const char *str)$/;"	f
rpmemd_log_level_str	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^static const char *rpmemd_log_level_str[MAX_RPD_LOG] = {$/;"	v	file:
rpmemd_log_level_to_str	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^rpmemd_log_level_to_str(enum rpmemd_log_level level)$/;"	f
rpmemd_obc	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^struct rpmemd_obc {$/;"	s	file:
rpmemd_obc_check_msg_hdr	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_check_msg_hdr(struct rpmem_msg_hdr *hdrp)$/;"	f	file:
rpmemd_obc_check_pool_desc	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_check_pool_desc(struct rpmem_msg_hdr *hdrp, size_t msg_size,$/;"	f	file:
rpmemd_obc_check_proto_ver	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_check_proto_ver(unsigned major, unsigned minor)$/;"	f	file:
rpmemd_obc_check_provider	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_check_provider(uint32_t provider)$/;"	f	file:
rpmemd_obc_close_resp	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_close_resp(struct rpmemd_obc *obc,$/;"	f
rpmemd_obc_create_resp	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_create_resp(struct rpmemd_obc *obc,$/;"	f
rpmemd_obc_fini	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_fini(struct rpmemd_obc *obc)$/;"	f
rpmemd_obc_init	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_init(int fd_in, int fd_out)$/;"	f
rpmemd_obc_msg_recv	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_msg_recv(struct rpmemd_obc *obc,$/;"	f	file:
rpmemd_obc_ntoh_check_msg	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^static rpmemd_obc_ntoh_check_msg_fn rpmemd_obc_ntoh_check_msg[] = {$/;"	v	file:
rpmemd_obc_ntoh_check_msg_close	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_ntoh_check_msg_close(struct rpmem_msg_hdr *hdrp)$/;"	f	file:
rpmemd_obc_ntoh_check_msg_create	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_ntoh_check_msg_create(struct rpmem_msg_hdr *hdrp)$/;"	f	file:
rpmemd_obc_ntoh_check_msg_fn	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^typedef int (*rpmemd_obc_ntoh_check_msg_fn)(struct rpmem_msg_hdr *hdrp);$/;"	t	file:
rpmemd_obc_ntoh_check_msg_open	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_ntoh_check_msg_open(struct rpmem_msg_hdr *hdrp)$/;"	f	file:
rpmemd_obc_ntoh_check_msg_set_attr	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_ntoh_check_msg_set_attr(struct rpmem_msg_hdr *hdrp)$/;"	f	file:
rpmemd_obc_open_resp	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_open_resp(struct rpmemd_obc *obc,$/;"	f
rpmemd_obc_process	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_process(struct rpmemd_obc *obc,$/;"	f
rpmemd_obc_process_cb	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^static rpmemd_obc_process_fn rpmemd_obc_process_cb[] = {$/;"	v	file:
rpmemd_obc_process_close	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_process_close(struct rpmemd_obc *obc,$/;"	f	file:
rpmemd_obc_process_create	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_process_create(struct rpmemd_obc *obc,$/;"	f	file:
rpmemd_obc_process_fn	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^typedef int (*rpmemd_obc_process_fn)(struct rpmemd_obc *obc,$/;"	t	file:
rpmemd_obc_process_open	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_process_open(struct rpmemd_obc *obc,$/;"	f	file:
rpmemd_obc_process_set_attr	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_process_set_attr(struct rpmemd_obc *obc,$/;"	f	file:
rpmemd_obc_recv	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_recv(struct rpmemd_obc *obc, void *buff, size_t len)$/;"	f	file:
rpmemd_obc_requests	deps/pmdk/src/tools/rpmemd/rpmemd_obc.h	/^struct rpmemd_obc_requests {$/;"	s
rpmemd_obc_send	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_send(struct rpmemd_obc *obc, const void *buff, size_t len)$/;"	f	file:
rpmemd_obc_set_attr_resp	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_set_attr_resp(struct rpmemd_obc *obc, int status)$/;"	f
rpmemd_obc_status	deps/pmdk/src/tools/rpmemd/rpmemd_obc.c	/^rpmemd_obc_status(struct rpmemd_obc *obc, uint32_t status)$/;"	f
rpmemd_option	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^enum rpmemd_option {$/;"	g	file:
rpmemd_persist_to_str	deps/pmdk/src/tools/rpmemd/rpmemd_util.c	/^rpmemd_persist_to_str(int (*persist)(const void *addr, size_t len))$/;"	f	file:
rpmemd_pmem_persist	deps/pmdk/src/tools/rpmemd/rpmemd_util.c	/^rpmemd_pmem_persist(const void *addr, size_t len)$/;"	f
rpmemd_prefix	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^rpmemd_prefix(const char *fmt, ...)$/;"	f
rpmemd_prefix_buff	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^static char rpmemd_prefix_buff[RPMEMD_MAX_PREFIX];$/;"	v	file:
rpmemd_print_info	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_print_info(struct rpmemd *rpmemd)$/;"	f	file:
rpmemd_print_pool_attr	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_print_pool_attr(const struct rpmem_pool_attr *attr)$/;"	f	file:
rpmemd_print_req_attr	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_print_req_attr(const struct rpmem_req_attr *req)$/;"	f	file:
rpmemd_print_resp_attr	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_print_resp_attr(const struct rpmem_resp_attr *attr)$/;"	f	file:
rpmemd_req	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^static struct rpmemd_obc_requests rpmemd_req = {$/;"	v	typeref:struct:rpmemd_obc_requests	file:
rpmemd_req_cleanup	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_req_cleanup(struct rpmemd *rpmemd)$/;"	f	file:
rpmemd_req_close	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_req_close(struct rpmemd_obc *obc, void *arg, int flags)$/;"	f	file:
rpmemd_req_create	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_req_create(struct rpmemd_obc *obc, void *arg,$/;"	f	file:
rpmemd_req_open	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_req_open(struct rpmemd_obc *obc, void *arg,$/;"	f	file:
rpmemd_req_set_attr	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^rpmemd_req_set_attr(struct rpmemd_obc *obc, void *arg,$/;"	f	file:
rpmemd_special_chars_pos	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^struct rpmemd_special_chars_pos {$/;"	s	file:
rpmemd_terminate	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^rpmemd_terminate(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
rpmemd_use_syslog	deps/pmdk/src/tools/rpmemd/rpmemd_log.c	/^static int rpmemd_use_syslog;$/;"	v	file:
rpool	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^static uint8_t rpool[POOL_SIZE];$/;"	v	file:
rpop	src/server.h	/^    *unsubscribebulk, *psubscribebulk, *punsubscribebulk, *del, *rpop, *lpop,$/;"	m	struct:sharedObjectsStruct
rpopCommand	src/server.h	/^                        *rpopCommand, *sremCommand, *execCommand;$/;"	m	struct:redisServer	typeref:struct:redisServer::
rpopCommand	src/t_list.c	/^void rpopCommand(client *c) {$/;"	f
rpoplpushCommand	src/t_list.c	/^void rpoplpushCommand(client *c) {$/;"	f
rpoplpushHandlePush	src/t_list.c	/^void rpoplpushHandlePush(client *c, robj *dstkey, robj *dstobj, robj *value) {$/;"	f
rpp	deps/pmdk/src/benchmarks/rpmem.cpp	/^	RPMEMpool **rpp;	  \/* rpmem pool pointers *\/$/;"	m	struct:rpmem_bench	file:
rpp	deps/pmdk/src/common/set.h	/^	void *rpp;		\/* RPMEMpool opaque handle *\/$/;"	m	struct:remote_replica
rpp	deps/pmdk/src/libpmemobj/obj.h	/^	void *rpp;	\/* RPMEMpool opaque handle if it is a remote replica *\/$/;"	m	struct:pmemobjpool
rpp	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	RPMEMpool *rpp;$/;"	m	struct:drain_thread_arg	file:
rpp	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	RPMEMpool *rpp;$/;"	m	struct:flush_thread_arg	file:
rpp	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	RPMEMpool *rpp;$/;"	m	struct:pool_entry	file:
rpushCommand	src/t_list.c	/^void rpushCommand(client *c) {$/;"	f
rpushxCommand	src/t_list.c	/^void rpushxCommand(client *c) {$/;"	f
rshift128	deps/jemalloc/test/src/SFMT.c	/^JEMALLOC_INLINE_C void rshift128(w128_t *out, w128_t const *in, int shift) {$/;"	f
rsize	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	unsigned rsize;     \/* reallocation size *\/$/;"	m	struct:obj_tx_args	file:
rstack	deps/hiredis/hiredis.h	/^    redisReadTask rstack[9];$/;"	m	struct:redisReader
rt	deps/pmdk/src/libpmemobj/palloc.h	/^	struct heap_rt *rt;$/;"	m	struct:palloc_heap	typeref:struct:palloc_heap::heap_rt
rt	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^	struct runtime_info *rt;$/;"	m	struct:pmem_obj	typeref:struct:pmem_obj::runtime_info	file:
rtree_child_read	deps/jemalloc/include/jemalloc/internal/private_namespace.h	477;"	d
rtree_child_read	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	477;"	d
rtree_child_read	deps/jemalloc/include/jemalloc/internal/rtree.h	/^rtree_child_read(rtree_t *rtree, rtree_node_elm_t *elm, unsigned level,$/;"	f
rtree_child_read_hard	deps/jemalloc/include/jemalloc/internal/private_namespace.h	478;"	d
rtree_child_read_hard	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	478;"	d
rtree_child_read_hard	deps/jemalloc/src/rtree.c	/^rtree_child_read_hard(rtree_t *rtree, rtree_node_elm_t *elm, unsigned level)$/;"	f
rtree_child_tryread	deps/jemalloc/include/jemalloc/internal/private_namespace.h	479;"	d
rtree_child_tryread	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	479;"	d
rtree_child_tryread	deps/jemalloc/include/jemalloc/internal/rtree.h	/^rtree_child_tryread(rtree_node_elm_t *elm, bool dependent)$/;"	f
rtree_delete	deps/jemalloc/include/jemalloc/internal/private_namespace.h	480;"	d
rtree_delete	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	480;"	d
rtree_delete	deps/jemalloc/src/rtree.c	/^rtree_delete(rtree_t *rtree)$/;"	f
rtree_delete_subtree	deps/jemalloc/src/rtree.c	/^rtree_delete_subtree(rtree_t *rtree, rtree_node_elm_t *node, unsigned level)$/;"	f	file:
rtree_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	481;"	d
rtree_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	481;"	d
rtree_get	deps/jemalloc/include/jemalloc/internal/rtree.h	/^rtree_get(rtree_t *rtree, uintptr_t key, bool dependent)$/;"	f
rtree_level_s	deps/jemalloc/include/jemalloc/internal/rtree.h	/^struct rtree_level_s {$/;"	s
rtree_level_t	deps/jemalloc/include/jemalloc/internal/rtree.h	/^typedef struct rtree_level_s rtree_level_t;$/;"	t	typeref:struct:rtree_level_s
rtree_map	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^struct rtree_map {$/;"	s	file:
rtree_map_check	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_map_check(PMEMobjpool *pop, TOID(struct rtree_map) map)$/;"	f
rtree_map_clear	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_map_clear(PMEMobjpool *pop, TOID(struct rtree_map) map)$/;"	f
rtree_map_create	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_map_create(PMEMobjpool *pop, TOID(struct rtree_map) *map, void *arg)$/;"	f
rtree_map_destroy	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_map_destroy(PMEMobjpool *pop, TOID(struct rtree_map) *map)$/;"	f
rtree_map_foreach	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_map_foreach(PMEMobjpool *pop, TOID(struct rtree_map) map,$/;"	f
rtree_map_get	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_map_get(PMEMobjpool *pop, TOID(struct rtree_map) map,$/;"	f
rtree_map_insert	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_map_insert(PMEMobjpool *pop, TOID(struct rtree_map) map,$/;"	f
rtree_map_insert_new	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_map_insert_new(PMEMobjpool *pop, TOID(struct rtree_map) map,$/;"	f
rtree_map_is_empty	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_map_is_empty(PMEMobjpool *pop, TOID(struct rtree_map) map)$/;"	f
rtree_map_lookup	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_map_lookup(PMEMobjpool *pop, TOID(struct rtree_map) map,$/;"	f
rtree_map_ops	deps/pmdk/src/examples/libpmemobj/map/map_rtree.c	/^struct map_ops rtree_map_ops = {$/;"	v	typeref:struct:map_ops
rtree_map_remove	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_map_remove(PMEMobjpool *pop, TOID(struct rtree_map) map,$/;"	f
rtree_map_remove_free	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_map_remove_free(PMEMobjpool *pop, TOID(struct rtree_map) map,$/;"	f
rtree_new	deps/jemalloc/include/jemalloc/internal/private_namespace.h	482;"	d
rtree_new	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	482;"	d
rtree_new	deps/jemalloc/src/rtree.c	/^rtree_new(rtree_t *rtree, unsigned bits, rtree_node_alloc_t *alloc,$/;"	f
rtree_new_node	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^rtree_new_node(const unsigned char *key, uint64_t key_size,$/;"	f
rtree_node_alloc_t	deps/jemalloc/include/jemalloc/internal/rtree.h	/^typedef rtree_node_elm_t *(rtree_node_alloc_t)(size_t);$/;"	t
rtree_node_dalloc_t	deps/jemalloc/include/jemalloc/internal/rtree.h	/^typedef void (rtree_node_dalloc_t)(rtree_node_elm_t *);$/;"	t
rtree_node_elm_s	deps/jemalloc/include/jemalloc/internal/rtree.h	/^struct rtree_node_elm_s {$/;"	s
rtree_node_elm_t	deps/jemalloc/include/jemalloc/internal/rtree.h	/^typedef struct rtree_node_elm_s rtree_node_elm_t;$/;"	t	typeref:struct:rtree_node_elm_s
rtree_node_init	deps/jemalloc/src/rtree.c	/^rtree_node_init(rtree_t *rtree, unsigned level, rtree_node_elm_t **elmp)$/;"	f	file:
rtree_node_valid	deps/jemalloc/include/jemalloc/internal/private_namespace.h	483;"	d
rtree_node_valid	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	483;"	d
rtree_node_valid	deps/jemalloc/include/jemalloc/internal/rtree.h	/^rtree_node_valid(rtree_node_elm_t *node)$/;"	f
rtree_s	deps/jemalloc/include/jemalloc/internal/rtree.h	/^struct rtree_s {$/;"	s
rtree_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	484;"	d
rtree_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	484;"	d
rtree_set	deps/jemalloc/include/jemalloc/internal/rtree.h	/^rtree_set(rtree_t *rtree, uintptr_t key, const extent_node_t *val)$/;"	f
rtree_start_level	deps/jemalloc/include/jemalloc/internal/private_namespace.h	485;"	d
rtree_start_level	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	485;"	d
rtree_start_level	deps/jemalloc/include/jemalloc/internal/rtree.h	/^rtree_start_level(rtree_t *rtree, uintptr_t key)$/;"	f
rtree_subkey	deps/jemalloc/include/jemalloc/internal/private_namespace.h	486;"	d
rtree_subkey	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	486;"	d
rtree_subkey	deps/jemalloc/include/jemalloc/internal/rtree.h	/^rtree_subkey(rtree_t *rtree, uintptr_t key, unsigned level)$/;"	f
rtree_subtree_read	deps/jemalloc/include/jemalloc/internal/private_namespace.h	487;"	d
rtree_subtree_read	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	487;"	d
rtree_subtree_read	deps/jemalloc/include/jemalloc/internal/rtree.h	/^rtree_subtree_read(rtree_t *rtree, unsigned level, bool dependent)$/;"	f
rtree_subtree_read_hard	deps/jemalloc/include/jemalloc/internal/private_namespace.h	488;"	d
rtree_subtree_read_hard	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	488;"	d
rtree_subtree_read_hard	deps/jemalloc/src/rtree.c	/^rtree_subtree_read_hard(rtree_t *rtree, unsigned level)$/;"	f
rtree_subtree_tryread	deps/jemalloc/include/jemalloc/internal/private_namespace.h	489;"	d
rtree_subtree_tryread	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	489;"	d
rtree_subtree_tryread	deps/jemalloc/include/jemalloc/internal/rtree.h	/^rtree_subtree_tryread(rtree_t *rtree, unsigned level, bool dependent)$/;"	f
rtree_t	deps/jemalloc/include/jemalloc/internal/rtree.h	/^typedef struct rtree_s rtree_t;$/;"	t	typeref:struct:rtree_s
rtree_val_read	deps/jemalloc/include/jemalloc/internal/private_namespace.h	490;"	d
rtree_val_read	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	490;"	d
rtree_val_read	deps/jemalloc/include/jemalloc/internal/rtree.h	/^rtree_val_read(rtree_t *rtree, rtree_node_elm_t *elm, bool dependent)$/;"	f
rtree_val_write	deps/jemalloc/include/jemalloc/internal/private_namespace.h	491;"	d
rtree_val_write	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	491;"	d
rtree_val_write	deps/jemalloc/include/jemalloc/internal/rtree.h	/^rtree_val_write(rtree_t *rtree, rtree_node_elm_t *elm, const extent_node_t *val)$/;"	f
rtt	deps/pmdk/src/libpmemblk/btt.c	/^		uint32_t volatile *rtt;$/;"	m	struct:btt::arena	file:
run	deps/jemalloc/include/jemalloc/internal/arena.h	/^		arena_run_t			run;$/;"	m	union:arena_chunk_map_misc_s::__anon5
run	deps/pmdk/src/libpmemobj/alloc_class.h	/^	} run;$/;"	m	struct:alloc_class	typeref:struct:alloc_class::__anon131
run	deps/pmdk/src/test/obj_basic_integration/TESTS.py	/^    def run(self, ctx):$/;"	m	class:BASIC
run	deps/pmdk/src/test/obj_defrag/TESTS.py	/^    def run(self, ctx):$/;"	m	class:BASE
run	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    def run(self, ctx):$/;"	m	class:ObjDefragAdvanced
run	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    def run(self, ctx):$/;"	m	class:ObjDefragAdvancedMt
run	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    def run(self, ctx):$/;"	m	class:BASE
run	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    def run(self, ctx):$/;"	m	class:TEST0
run	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    def run(self, ctx):$/;"	m	class:TEST1
run	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    def run(self, ctx):$/;"	m	class:TEST2
run	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    def run(self, ctx):$/;"	m	class:TEST3
run	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^    def run(self, ctx):$/;"	m	class:TEST0
run	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^    def run(self, ctx):$/;"	m	class:TEST1
run	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^    def run(self, ctx):$/;"	m	class:TEST2
run	deps/pmdk/src/test/obj_tx_user_data/TESTS.py	/^    def run(self, ctx):$/;"	m	class:TEST0
run	deps/pmdk/src/test/obj_ulog_size/TESTS.py	/^    def run(self, ctx):$/;"	m	class:BASE
run	deps/pmdk/src/test/pmem2_config/TESTS.py	/^    def run(self, ctx):$/;"	m	class:PMEM2_CONFIG
run	deps/pmdk/src/test/pmem2_map/TESTS.py	/^    def run(self, ctx):$/;"	m	class:PMEM2_MAP
run	deps/pmdk/src/test/pmem_map_file_trunc/TESTS.py	/^    def run(self, ctx):$/;"	m	class:TEST0
run	deps/pmdk/src/test/scope/TESTS.py	/^    def run(self, ctx):$/;"	m	class:Common
run	deps/pmdk/src/test/unittest/basetest.py	/^    def run(self, ctx):$/;"	m	class:BaseTest
run	deps/pmdk/src/test/win_common/TESTS.py	/^    def run(self, ctx):$/;"	m	class:TEST0
run	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def run(self, in_op):$/;"	m	class:CollectingState
run	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def run(self, in_op):$/;"	m	class:InitState
run	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def run(self, in_op):$/;"	m	class:ReplayingState
run	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def run(self, in_op):$/;"	m	class:State
run-tests	utils/speed-regression.tcl	/^proc run-tests branches {$/;"	p
run_all	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def run_all(self, operations):$/;"	m	class:StateMachine
run_bitmap	deps/pmdk/src/libpmemobj/memblock.h	/^struct run_bitmap {$/;"	s
run_block_size	deps/pmdk/src/libpmemobj/memblock.c	/^run_block_size(const struct memory_block *m)$/;"	f	file:
run_calc_free	deps/pmdk/src/libpmemobj/memblock.c	/^run_calc_free(const struct memory_block *m,$/;"	f	file:
run_clang_check	deps/pmdk/utils/style_check.sh	/^function run_clang_check() {$/;"	f
run_clang_format	deps/pmdk/utils/style_check.sh	/^function run_clang_format() {$/;"	f
run_cli	tests/integration/redis-cli.tcl	/^    proc run_cli {args} {$/;"	p
run_cli_with_input_file	tests/integration/redis-cli.tcl	/^    proc run_cli_with_input_file {path args} {$/;"	p
run_cli_with_input_pipe	tests/integration/redis-cli.tcl	/^    proc run_cli_with_input_pipe {cmd args} {$/;"	p
run_command	deps/pmdk/src/test/unittest/unittest.sh	/^function run_command()$/;"	f
run_command	tests/integration/redis-cli.tcl	/^    proc run_command {fd cmd} {$/;"	p
run_cstyle	deps/pmdk/utils/style_check.sh	/^function run_cstyle() {$/;"	f
run_ensure_header_type	deps/pmdk/src/libpmemobj/memblock.c	/^run_ensure_header_type(const struct memory_block *m,$/;"	f	file:
run_experiment	utils/hyperloglog/hll-gnuplot-graph.rb	/^def run_experiment(r,seed,max,step)$/;"	f
run_fill_pct	deps/pmdk/src/libpmemobj/memblock.c	/^run_fill_pct(const struct memory_block *m)$/;"	f	file:
run_get_bitmap	deps/pmdk/src/libpmemobj/memblock.c	/^run_get_bitmap(const struct memory_block *m, struct run_bitmap *b)$/;"	f	file:
run_get_data_offset	deps/pmdk/src/libpmemobj/memblock.c	/^run_get_data_offset(const struct memory_block *m)$/;"	f	file:
run_get_data_start	deps/pmdk/src/libpmemobj/memblock.c	/^run_get_data_start(const struct memory_block *m)$/;"	f	file:
run_get_lock	deps/pmdk/src/libpmemobj/memblock.c	/^run_get_lock(const struct memory_block *m)$/;"	f	file:
run_get_real_data	deps/pmdk/src/libpmemobj/memblock.c	/^run_get_real_data(const struct memory_block *m)$/;"	f	file:
run_get_state	deps/pmdk/src/libpmemobj/memblock.c	/^run_get_state(const struct memory_block *m)$/;"	f	file:
run_id	deps/pmdk/src/libpmemobj/obj.h	/^	uint64_t run_id;$/;"	m	struct:pmemobjpool
run_id_increment	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	bool run_id_increment;   \/* increment run_id after each lock\/unlock *\/$/;"	m	struct:prog_args	file:
run_iterate_free	deps/pmdk/src/libpmemobj/memblock.c	/^run_iterate_free(const struct memory_block *m, object_callback cb, void *arg)$/;"	f	file:
run_iterate_used	deps/pmdk/src/libpmemobj/memblock.c	/^run_iterate_used(const struct memory_block *m, object_callback cb, void *arg)$/;"	f	file:
run_locks	deps/pmdk/src/libpmemobj/heap.c	/^	os_mutex_t run_locks[MAX_RUN_LOCKS];$/;"	m	struct:heap_rt	file:
run_mt_test	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^run_mt_test(void *(*worker)(void *), void *arg)$/;"	f	file:
run_mt_test	deps/pmdk/src/test/out_err_mt/out_err_mt.c	/^run_mt_test(void *(*worker)(void *))$/;"	f	file:
run_mt_test	deps/pmdk/src/test/out_err_mt_win/out_err_mt_win.c	/^run_mt_test(void *(*worker)(void *))$/;"	f	file:
run_on_node	deps/pmdk/src/test/unittest/unittest.sh	/^function run_on_node() {$/;"	f
run_on_node_background	deps/pmdk/src/test/unittest/unittest.sh	/^function run_on_node_background() {$/;"	f
run_prep_operation_hdr	deps/pmdk/src/libpmemobj/memblock.c	/^run_prep_operation_hdr(const struct memory_block *m, enum memblock_state op,$/;"	f	file:
run_process_bitmap_value	deps/pmdk/src/libpmemobj/memblock.c	/^run_process_bitmap_value(const struct memory_block *m,$/;"	f	file:
run_quantize_ceil	deps/jemalloc/include/jemalloc/internal/private_namespace.h	492;"	d
run_quantize_ceil	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	492;"	d
run_quantize_ceil	deps/jemalloc/src/arena.c	/^run_quantize_ceil(size_t size)$/;"	f	file:
run_quantize_ceil	deps/jemalloc/src/arena.c	/^run_quantize_t *run_quantize_ceil = JEMALLOC_N(n_run_quantize_ceil);$/;"	v
run_quantize_ceil	deps/jemalloc/src/arena.c	153;"	d	file:
run_quantize_ceil	deps/jemalloc/src/arena.c	154;"	d	file:
run_quantize_ceil	deps/jemalloc/src/arena.c	180;"	d	file:
run_quantize_ceil	deps/jemalloc/src/arena.c	181;"	d	file:
run_quantize_floor	deps/jemalloc/include/jemalloc/internal/private_namespace.h	493;"	d
run_quantize_floor	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	493;"	d
run_quantize_floor	deps/jemalloc/src/arena.c	/^run_quantize_floor(size_t size)$/;"	f	file:
run_quantize_floor	deps/jemalloc/src/arena.c	/^run_quantize_t *run_quantize_floor = JEMALLOC_N(n_run_quantize_floor);$/;"	v
run_quantize_floor	deps/jemalloc/src/arena.c	116;"	d	file:
run_quantize_floor	deps/jemalloc/src/arena.c	117;"	d	file:
run_quantize_floor	deps/jemalloc/src/arena.c	147;"	d	file:
run_quantize_floor	deps/jemalloc/src/arena.c	148;"	d	file:
run_quantize_t	deps/jemalloc/include/jemalloc/internal/arena.h	/^typedef size_t (run_quantize_t)(size_t);$/;"	t
run_reinit_chunk	deps/pmdk/src/libpmemobj/memblock.c	/^run_reinit_chunk(const struct memory_block *m)$/;"	f	file:
run_size	deps/jemalloc/include/jemalloc/internal/arena.h	/^	size_t			run_size;$/;"	m	struct:arena_bin_info_s
run_testcases	deps/pmdk/src/test/env.py	/^def run_testcases():$/;"	f
run_tests	tests/instances.tcl	/^proc run_tests {} {$/;"	p
run_tests_common	deps/pmdk/src/test/unittest/futils.py	/^def run_tests_common(testcases, config):$/;"	f
run_vg_init	deps/pmdk/src/libpmemobj/memblock.c	/^run_vg_init(const struct memory_block *m, int objects,$/;"	f	file:
run_with_period	src/server.h	485;"	d
run_worker	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^run_worker(void *(worker_func)(void *arg), struct worker_args args[])$/;"	f	file:
runargs	deps/lua/src/lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	file:
runcur	deps/jemalloc/include/jemalloc/internal/arena.h	/^	arena_run_t		*runcur;$/;"	m	struct:arena_bin_s
runid	deps/pmdk/src/benchmarks/obj_locks.cpp	/^		uint64_t runid;$/;"	m	struct:padded_volatile_pmemmutex::__anon116	file:
runid	deps/pmdk/src/include/libpmemobj/base.h	/^	uint64_t runid;$/;"	m	struct:pmemvlt
runid	deps/pmdk/src/libpmemobj/sync.h	/^		uint64_t runid;$/;"	m	struct:padded_pmemcond::__anon124
runid	deps/pmdk/src/libpmemobj/sync.h	/^		uint64_t runid;$/;"	m	struct:padded_pmemmutex::__anon118
runid	deps/pmdk/src/libpmemobj/sync.h	/^		uint64_t runid;$/;"	m	struct:padded_pmemrwlock::__anon121
runid	src/sentinel.c	/^    char *runid;    \/* Run ID of this instance, or unique ID if is a Sentinel.*\/$/;"	m	struct:sentinelRedisInstance	file:
runid	src/sentinel.c	/^    char *runid;$/;"	m	struct:sentinelLeader	file:
runid	src/server.h	/^    char runid[CONFIG_RUN_ID_SIZE+1];  \/* ID always different at every exec. *\/$/;"	m	struct:redisServer
runid_initial_value	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	uint64_t runid_initial_value; \/* initial value of run_id *\/$/;"	m	struct:prog_args	file:
runlen	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^	int runlen;	\/* print bytes as runlen\/char sequence *\/$/;"	m	struct:ddmap_context	file:
running_scripts	src/sentinel.c	/^    int running_scripts;    \/* Number of scripts in execution right now. *\/$/;"	m	struct:sentinelState	file:
runs	deps/jemalloc/include/jemalloc/internal/arena.h	/^	arena_run_heap_t	runs;$/;"	m	struct:arena_bin_s
runs	deps/pmdk/src/libpmemobj/recycler.c	/^	struct ravl *runs;$/;"	m	struct:recycler	typeref:struct:recycler::ravl	file:
runs_avail	deps/jemalloc/include/jemalloc/internal/arena.h	/^	arena_run_heap_t	runs_avail[NPSIZES];$/;"	m	struct:arena_s
runs_dirty	deps/jemalloc/include/jemalloc/internal/arena.h	/^	arena_runs_dirty_link_t	runs_dirty;$/;"	m	struct:arena_s
runtest	deps/pmdk/src/test/RUNTESTS	/^runtest() {$/;"	f
runtest_local	deps/pmdk/src/test/RUNTESTS	/^runtest_local() {$/;"	f
runtest_remote	deps/pmdk/src/test/RUNTESTS	/^runtest_remote() {$/;"	f
runtime_check	deps/lua/src/lvm.c	345;"	d	file:
runtime_info	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^struct runtime_info {$/;"	s	file:
runtime_nlanes	deps/pmdk/src/libpmemobj/lane.h	/^	unsigned runtime_nlanes;$/;"	m	struct:lane_descriptor
rwildcard	deps/pmdk/src/Makefile	/^rwildcard=$(strip $(foreach d,$(wildcard $1*),$(call rwildcard,$d\/,$2)\\$/;"	m
rwildcard	deps/pmdk/utils/Makefile	/^rwildcard=$(strip $(foreach d,$(wildcard $1*),$(call rwildcard,$d\/,$2)\\$/;"	m
rwlk	deps/pmdk/src/test/obj_locks/obj_locks.c	/^	PMEMrwlock rwlk;$/;"	m	struct:locks	file:
rwlock	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^	PMEMrwlock rwlock;	\/* lock covering entire log *\/$/;"	m	struct:base	file:
rwlock	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^	PMEMrwlock rwlock;		\/* lock covering entire log *\/$/;"	m	struct:base	file:
rwlock	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^	PMEMrwlock rwlock;	\/* lock covering entire log *\/$/;"	m	struct:base	file:
rwlock	deps/pmdk/src/libpmemobj/sync.h	/^			os_rwlock_t rwlock;$/;"	m	union:padded_pmemrwlock::__anon121::__anon122
rwlock	deps/pmdk/src/libpmemobj/tx.c	/^		PMEMrwlock *rwlock;$/;"	m	union:tx_lock_data::__anon132	file:
rwlock	deps/pmdk/src/test/obj_sync/obj_sync.c	/^	PMEMrwlock rwlock;$/;"	m	struct:mock_obj	file:
rwlock_check_worker	deps/pmdk/src/test/obj_sync/obj_sync.c	/^rwlock_check_worker(void *arg)$/;"	f	file:
rwlock_head	deps/pmdk/src/libpmemobj/obj.h	/^	PMEMrwlock_internal *rwlock_head;$/;"	m	struct:pmemobjpool
rwlock_u	deps/pmdk/src/libpmemobj/sync.h	/^		} rwlock_u;$/;"	m	struct:padded_pmemrwlock::__anon121	typeref:union:padded_pmemrwlock::__anon121::__anon122
rwlock_write_worker	deps/pmdk/src/test/obj_sync/obj_sync.c	/^rwlock_write_worker(void *arg)$/;"	f	file:
rwlockp	deps/pmdk/src/libpmemlog/log.h	/^	os_rwlock_t *rwlockp;	\/* pointer to RW lock *\/$/;"	m	struct:pmemlog
rwlocks	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	/^	PMEMrwlock rwlocks[NUM_LOCKS];$/;"	m	struct:transaction_data	file:
rwlocks	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^	PMEMrwlock rwlocks[NUM_LOCKS];$/;"	m	struct:transaction_data	file:
s	deps/jemalloc/src/jemalloc.c	/^	size_t	s;	\/* Request size. *\/$/;"	m	struct:__anon17	file:
s	deps/jemalloc/test/src/SFMT.c	/^    vector unsigned int s;$/;"	m	union:W128_T	file:
s	deps/lua/src/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:
s	deps/lua/src/lparser.h	/^    struct { int info, aux; } s;$/;"	m	union:expdesc::__anon31	typeref:struct:expdesc::__anon31::__anon32
s	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	unsigned char s[];$/;"	m	struct:_var_string
s	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	unsigned char s[];$/;"	m	struct:_var_string
s	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) s = D_RO(map)->sentinel;$/;"	e	enum:c	file:
s	deps/pmdk/src/libpmemobj/obj.c	/^	const char *s;$/;"	m	struct:carg_strdup	file:
s	deps/pmdk/src/libpmemobj/obj.c	/^	const wchar_t *s;$/;"	m	struct:carg_wcsdup	file:
s	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^tx_strdup(TOID(char) *str, const char *s, unsigned type_num)$/;"	v
s	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^tx_strdup_macro(TOID(char) *str, const char *s, unsigned type_num)$/;"	v
s	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^tx_wcsdup(TOID(wchar_t) *wcs, const wchar_t *s, unsigned type_num)$/;"	v
s	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^tx_wcsdup_macro(TOID(wchar_t) *wcs, const wchar_t *s, unsigned type_num)$/;"	v
s	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^typedef void (*fn_tx_strdup)(TOID(char) *str, const char *s,$/;"	t	file:
s	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^typedef void (*fn_tx_wcsdup)(TOID(wchar_t) *wcs, const wchar_t *s,$/;"	t	file:
s	tests/test_helper.tcl	/^proc s {args} {$/;"	p
s1	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^	TOID(struct struct1) s1;$/;"	m	struct:root	file:
s2	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^	TOID(struct struct1) s2;$/;"	m	struct:root	file:
s2u	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^s2u(size_t size)$/;"	f
s2u	deps/jemalloc/include/jemalloc/internal/private_namespace.h	494;"	d
s2u	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	494;"	d
s2u_compute	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^s2u_compute(size_t size)$/;"	f
s2u_compute	deps/jemalloc/include/jemalloc/internal/private_namespace.h	495;"	d
s2u_compute	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	495;"	d
s2u_lookup	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^s2u_lookup(size_t size)$/;"	f
s2u_lookup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	496;"	d
s2u_lookup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	496;"	d
s64	src/dict.h	/^        int64_t s64;$/;"	m	union:dictEntry::__anon167
s_ctx	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^static struct search_ctx *s_ctx = NULL;$/;"	v	typeref:struct:search_ctx	file:
s_down_since_time	src/sentinel.c	/^    mstime_t s_down_since_time; \/* Subjectively down since time. *\/$/;"	m	struct:sentinelRedisInstance	file:
s_free	deps/hiredis/sdsalloc.h	42;"	d
s_free	src/sdsalloc.h	42;"	d
s_funcs	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^static struct search s_funcs[] = {$/;"	v	typeref:struct:search	file:
s_malloc	deps/hiredis/sdsalloc.h	40;"	d
s_malloc	src/sdsalloc.h	40;"	d
s_ops	deps/pmdk/src/libpmemobj/memops.c	/^	struct pmem_ops s_ops; \/* used for shadow copy data processing *\/$/;"	m	struct:operation_context	typeref:struct:operation_context::pmem_ops	file:
s_realloc	deps/hiredis/sdsalloc.h	41;"	d
s_realloc	src/sdsalloc.h	41;"	d
sa2u	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^sa2u(size_t size, size_t alignment)$/;"	f
sa2u	deps/jemalloc/include/jemalloc/internal/private_namespace.h	497;"	d
sa2u	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	497;"	d
sa_flags	deps/pmdk/src/windows/include/platform.h	/^	int sa_flags;$/;"	m	struct:sigaction
sa_handler	deps/pmdk/src/windows/include/platform.h	/^	void (*sa_handler) (int signum);$/;"	m	struct:sigaction
sa_mask	deps/pmdk/src/windows/include/platform.h	/^	sigset_t sa_mask;$/;"	m	struct:sigaction
sa_restorer	deps/pmdk/src/windows/include/platform.h	/^	void (*sa_restorer) (void);$/;"	m	struct:sigaction
saddCommand	src/t_set.c	/^void saddCommand(client *c) {$/;"	f
safe	src/dict.h	/^    int table, safe;$/;"	m	struct:dictIterator
sallocx	deps/jemalloc/include/jemalloc/jemalloc.h	334;"	d
sallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	23;"	d
sallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	23;"	d
sameobjecterr	src/server.h	/^    *emptymultibulk, *wrongtypeerr, *nokeyerr, *syntaxerr, *sameobjecterr,$/;"	m	struct:sharedObjectsStruct
sample	src/sparkline.h	/^struct sample {$/;"	s
samples	src/latency.h	/^    struct latencySample samples[LATENCY_TS_LEN]; \/* Latest history. *\/$/;"	m	struct:latencyTimeSeries	typeref:struct:latencyTimeSeries::latencySample
samples	src/latency.h	/^    uint32_t samples;       \/* Number of non-zero samples. *\/$/;"	m	struct:latencyStats
samples	src/server.h	/^        long long samples[STATS_METRIC_SAMPLES];$/;"	m	struct:redisServer::__anon159
samples	src/sparkline.h	/^    struct sample *samples;$/;"	m	struct:sequence	typeref:struct:sequence::sample
sanitize_flags	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^sanitize_flags(unsigned flags)$/;"	f	file:
save	deps/lua/src/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:
saveCommand	src/rdb.c	/^void saveCommand(client *c) {$/;"	f
save_and_next	deps/lua/src/llex.c	48;"	d	file:
saveci	deps/lua/src/ldo.h	27;"	d
savedpc	deps/lua/src/lstate.h	/^  const Instruction *savedpc;  \/* `savedpc' of current function *\/$/;"	m	struct:lua_State
savedpc	deps/lua/src/lstate.h	/^  const Instruction *savedpc;$/;"	m	struct:CallInfo
saveparam	src/server.h	/^struct saveparam {$/;"	s
saveparams	src/server.h	/^    struct saveparam *saveparams;   \/* Save points array for RDB *\/$/;"	m	struct:redisServer	typeref:struct:redisServer::saveparam
saveparamslen	src/server.h	/^    int saveparamslen;              \/* Number of saving points *\/$/;"	m	struct:redisServer
savestack	deps/lua/src/ldo.h	24;"	d
saw_junking	deps/jemalloc/test/unit/junk.c	/^static bool saw_junking;$/;"	v	file:
saw_lock_error	deps/jemalloc/test/unit/witness.c	/^static bool saw_lock_error;$/;"	v	file:
saw_lockless_error	deps/jemalloc/test/unit/witness.c	/^static bool saw_lockless_error;$/;"	v	file:
saw_not_owner_error	deps/jemalloc/test/unit/witness.c	/^static bool saw_not_owner_error;$/;"	v	file:
saw_owner_error	deps/jemalloc/test/unit/witness.c	/^static bool saw_owner_error;$/;"	v	file:
sb	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) sb = NODE_PARENT_AT(n, !c); \/* sibling *\/$/;"	e	enum:c	file:
sc0_create	deps/pmdk/src/test/obj_heap_interrupt/obj_heap_interrupt.c	/^sc0_create(PMEMobjpool *pop)$/;"	f	file:
scale_up_min_exe_time	deps/pmdk/src/benchmarks/pmembench.cpp	/^scale_up_min_exe_time(struct benchmark *bench, struct benchmark_args *args,$/;"	f
scanCallback	src/db.c	/^void scanCallback(void *privdata, const dictEntry *de) {$/;"	f
scanCommand	src/db.c	/^void scanCommand(client *c) {$/;"	f
scanGenericCommand	src/db.c	/^void scanGenericCommand(client *c, robj *o, unsigned long cursor) {$/;"	f
scanMode	src/redis-cli.c	/^static void scanMode(void) {$/;"	f	file:
scan_mode	src/redis-cli.c	/^    int scan_mode;$/;"	m	struct:config	file:
scanformat	deps/lua/src/lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	file:
scardCommand	src/t_set.c	/^void scardCommand(client *c) {$/;"	f
scenario	deps/pmdk/src/benchmarks/pmembench.cpp	/^	struct scenario *scenario;$/;"	m	struct:pmembench	typeref:struct:pmembench::scenario	file:
scenario	deps/pmdk/src/benchmarks/scenario.hpp	/^struct scenario {$/;"	s
scenario_alloc	deps/pmdk/src/benchmarks/scenario.cpp	/^scenario_alloc(const char *name, const char *bench)$/;"	f
scenario_free	deps/pmdk/src/benchmarks/scenario.cpp	/^scenario_free(struct scenario *s)$/;"	f
scenario_func	deps/pmdk/src/test/obj_heap_interrupt/obj_heap_interrupt.c	/^typedef void (*scenario_func)(PMEMobjpool *pop);$/;"	t	file:
scenario_set_group	deps/pmdk/src/benchmarks/scenario.cpp	/^scenario_set_group(struct scenario *s, const char *group)$/;"	f
scenarios	deps/pmdk/src/benchmarks/scenario.hpp	/^struct scenarios {$/;"	s
scenarios	deps/pmdk/src/test/obj_heap_interrupt/obj_heap_interrupt.c	/^} scenarios[] = {$/;"	v	typeref:struct:__anon140	file:
scenarios_alloc	deps/pmdk/src/benchmarks/scenario.cpp	/^scenarios_alloc(void)$/;"	f
scenarios_free	deps/pmdk/src/benchmarks/scenario.cpp	/^scenarios_free(struct scenarios *scenarios)$/;"	f
scenarios_get_scenario	deps/pmdk/src/benchmarks/scenario.cpp	/^scenarios_get_scenario(struct scenarios *ss, const char *name)$/;"	f
sched_yield	deps/pmdk/src/windows/include/platform.h	/^sched_yield(void)$/;"	f
score	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	uint16_t score;$/;"	m	struct:game_state	file:
score	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	int score;$/;"	m	struct:state	file:
score	src/geo.h	/^    double score;$/;"	m	struct:geoPoint
score	src/server.h	/^        double score;$/;"	m	union:_redisSortObject::__anon160
score	src/server.h	/^    double score;$/;"	m	struct:zskiplistNode
score	src/t_zset.c	/^    double score;$/;"	m	struct:__anon158	file:
scoresOfGeoHashBox	src/geo.c	/^void scoresOfGeoHashBox(GeoHashBits hash, GeoHashFix52Bits *min, GeoHashFix52Bits *max) {$/;"	f
scriptCommand	src/scripting.c	/^void scriptCommand(client *c) {$/;"	f
scriptingEnableGlobalsProtection	src/scripting.c	/^void scriptingEnableGlobalsProtection(lua_State *lua) {$/;"	f
scriptingInit	src/scripting.c	/^void scriptingInit(int setup) {$/;"	f
scriptingRelease	src/scripting.c	/^void scriptingRelease(void) {$/;"	f
scriptingReset	src/scripting.c	/^void scriptingReset(void) {$/;"	f
scripts_queue	src/sentinel.c	/^    list *scripts_queue;            \/* Queue of user scripts to execute. *\/$/;"	m	struct:sentinelState	file:
sdallocx	deps/jemalloc/include/jemalloc/jemalloc.h	336;"	d
sdallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	25;"	d
sdallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	25;"	d
sdiffCommand	src/t_set.c	/^void sdiffCommand(client *c) {$/;"	f
sdiffstoreCommand	src/t_set.c	/^void sdiffstoreCommand(client *c) {$/;"	f
sdigits10	src/util.c	/^uint32_t sdigits10(int64_t v) {$/;"	f
sds	deps/hiredis/sds.h	/^typedef char *sds;$/;"	t
sds	deps/pmdk/src/common/pool_hdr.h	/^	struct shutdown_state sds;	\/* shutdown status *\/$/;"	m	struct:pool_hdr	typeref:struct:pool_hdr::shutdown_state
sds	src/sds.h	/^typedef char *sds;$/;"	t
sdsAllocPtr	deps/hiredis/sds.c	/^void *sdsAllocPtr(sds s) {$/;"	f
sdsAllocPtr	src/sds.c	/^void *sdsAllocPtr(sds s) {$/;"	f
sdsAllocSize	deps/hiredis/sds.c	/^size_t sdsAllocSize(sds s) {$/;"	f
sdsAllocSize	src/sds.c	/^size_t sdsAllocSize(sds s) {$/;"	f
sdsCatColorizedLdbReply	src/redis-cli.c	/^sds sdsCatColorizedLdbReply(sds o, char *s, size_t len) {$/;"	f
sdsEncodedObject	src/server.h	1273;"	d
sdsHdrSize	deps/hiredis/sds.c	/^static inline int sdsHdrSize(char type) {$/;"	f	file:
sdsHdrSize	src/sds.c	/^static inline int sdsHdrSize(char type) {$/;"	f	file:
sdsIncrLen	deps/hiredis/sds.c	/^void sdsIncrLen(sds s, int incr) {$/;"	f
sdsIncrLen	src/sds.c	/^void sdsIncrLen(sds s, int incr) {$/;"	f
sdsMakeRoomFor	deps/hiredis/sds.c	/^sds sdsMakeRoomFor(sds s, size_t addlen) {$/;"	f
sdsMakeRoomFor	src/sds.c	/^sds sdsMakeRoomFor(sds s, size_t addlen) {$/;"	f
sdsPMEMoidBackReference	src/sds.c	/^PMEMoid *sdsPMEMoidBackReference(sds s)$/;"	f
sdsRemoveFreeSpace	deps/hiredis/sds.c	/^sds sdsRemoveFreeSpace(sds s) {$/;"	f
sdsRemoveFreeSpace	src/sds.c	/^sds sdsRemoveFreeSpace(sds s) {$/;"	f
sdsReqType	deps/hiredis/sds.c	/^static inline char sdsReqType(size_t string_size) {$/;"	f	file:
sdsReqType	src/sds.c	/^static inline char sdsReqType(size_t string_size) {$/;"	f	file:
sdsTest	deps/hiredis/sds.c	/^int sdsTest(void) {$/;"	f
sdsTest	src/sds.c	/^int sdsTest(void) {$/;"	f
sdsZmallocSize	src/networking.c	/^size_t sdsZmallocSize(sds s) {$/;"	f
sds_check	deps/pmdk/src/libpmempool/check_sds.c	/^sds_check(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
sds_check_replica	deps/pmdk/src/libpmempool/check_sds.c	/^sds_check_replica(location *loc)$/;"	f	file:
sds_dirty_modified	deps/pmdk/src/common/set.h	/^	int sds_dirty_modified;	\/* sds dirty flag was set *\/$/;"	m	struct:pool_set_part
sds_fix	deps/pmdk/src/libpmempool/check_sds.c	/^sds_fix(PMEMpoolcheck *ppc, location *loc, uint32_t question,$/;"	f	file:
sds_free	deps/hiredis/sds.c	/^void sds_free(void *ptr) { s_free(ptr); }$/;"	f
sds_free	src/sds.c	/^void sds_free(void *ptr) { s_free(ptr); }$/;"	f
sds_get_healthy_replicas_num	deps/pmdk/src/libpmempool/check_sds.c	/^sds_get_healthy_replicas_num(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
sds_malloc	deps/hiredis/sds.c	/^void *sds_malloc(size_t size) { return s_malloc(size); }$/;"	f
sds_malloc	src/sds.c	/^void *sds_malloc(size_t size) { return s_malloc(size); }$/;"	f
sds_realloc	deps/hiredis/sds.c	/^void *sds_realloc(void *ptr, size_t size) { return s_realloc(ptr,size); }$/;"	f
sds_realloc	src/sds.c	/^void *sds_realloc(void *ptr, size_t size) { return s_realloc(ptr,size); }$/;"	f
sdsalloc	deps/hiredis/sds.h	/^static inline size_t sdsalloc(const sds s) {$/;"	f
sdsalloc	src/sds.h	/^static inline size_t sdsalloc(const sds s) {$/;"	f
sdsavail	deps/hiredis/sds.h	/^static inline size_t sdsavail(const sds s) {$/;"	f
sdsavail	src/sds.h	/^static inline size_t sdsavail(const sds s) {$/;"	f
sdscat	deps/hiredis/sds.c	/^sds sdscat(sds s, const char *t) {$/;"	f
sdscat	src/sds.c	/^sds sdscat(sds s, const char *t) {$/;"	f
sdscatcolor	src/redis-cli.c	/^sds sdscatcolor(sds o, char *s, size_t len, char *color) {$/;"	f
sdscatfmt	deps/hiredis/sds.c	/^sds sdscatfmt(sds s, char const *fmt, ...) {$/;"	f
sdscatfmt	src/sds.c	/^sds sdscatfmt(sds s, char const *fmt, ...) {$/;"	f
sdscatlen	deps/hiredis/sds.c	/^sds sdscatlen(sds s, const void *t, size_t len) {$/;"	f
sdscatlen	src/sds.c	/^sds sdscatlen(sds s, const void *t, size_t len) {$/;"	f
sdscatprintf	deps/hiredis/sds.c	/^sds sdscatprintf(sds s, const char *fmt, ...) {$/;"	f
sdscatprintf	src/sds.c	/^sds sdscatprintf(sds s, const char *fmt, ...) {$/;"	f
sdscatrepr	deps/hiredis/sds.c	/^sds sdscatrepr(sds s, const char *p, size_t len) {$/;"	f
sdscatrepr	src/sds.c	/^sds sdscatrepr(sds s, const char *p, size_t len) {$/;"	f
sdscatsds	deps/hiredis/sds.c	/^sds sdscatsds(sds s, const sds t) {$/;"	f
sdscatsds	src/sds.c	/^sds sdscatsds(sds s, const sds t) {$/;"	f
sdscatvprintf	deps/hiredis/sds.c	/^sds sdscatvprintf(sds s, const char *fmt, va_list ap) {$/;"	f
sdscatvprintf	src/sds.c	/^sds sdscatvprintf(sds s, const char *fmt, va_list ap) {$/;"	f
sdsclear	deps/hiredis/sds.c	/^void sdsclear(sds s) {$/;"	f
sdsclear	src/sds.c	/^void sdsclear(sds s) {$/;"	f
sdscmp	deps/hiredis/sds.c	/^int sdscmp(const sds s1, const sds s2) {$/;"	f
sdscmp	src/sds.c	/^int sdscmp(const sds s1, const sds s2) {$/;"	f
sdscpy	deps/hiredis/sds.c	/^sds sdscpy(sds s, const char *t) {$/;"	f
sdscpy	src/sds.c	/^sds sdscpy(sds s, const char *t) {$/;"	f
sdscpylen	deps/hiredis/sds.c	/^sds sdscpylen(sds s, const char *t, size_t len) {$/;"	f
sdscpylen	src/sds.c	/^sds sdscpylen(sds s, const char *t, size_t len) {$/;"	f
sdsdup	deps/hiredis/sds.c	/^sds sdsdup(const sds s) {$/;"	f
sdsdup	src/sds.c	/^sds sdsdup(const sds s) {$/;"	f
sdsdupPM	src/sds.c	/^sds sdsdupPM(const sds s, void **oid_reference) {$/;"	f
sdsempty	deps/hiredis/sds.c	/^sds sdsempty(void) {$/;"	f
sdsempty	src/sds.c	/^sds sdsempty(void) {$/;"	f
sdsfree	deps/hiredis/sds.c	/^void sdsfree(sds s) {$/;"	f
sdsfree	src/sds.c	/^void sdsfree(sds s) {$/;"	f
sdsfreePM	src/sds.c	/^void sdsfreePM(sds s) {$/;"	f
sdsfreesplitres	deps/hiredis/sds.c	/^void sdsfreesplitres(sds *tokens, int count) {$/;"	f
sdsfreesplitres	src/sds.c	/^void sdsfreesplitres(sds *tokens, int count) {$/;"	f
sdsfromlonglong	deps/hiredis/sds.c	/^sds sdsfromlonglong(long long value) {$/;"	f
sdsfromlonglong	src/sds.c	/^sds sdsfromlonglong(long long value) {$/;"	f
sdsgrowzero	deps/hiredis/sds.c	/^sds sdsgrowzero(sds s, size_t len) {$/;"	f
sdsgrowzero	src/sds.c	/^sds sdsgrowzero(sds s, size_t len) {$/;"	f
sdshdr16	deps/hiredis/sds.h	/^struct __attribute__ ((__packed__)) sdshdr16 {$/;"	s
sdshdr16	src/sds.h	/^struct __attribute__ ((__packed__)) sdshdr16 {$/;"	s
sdshdr32	deps/hiredis/sds.h	/^struct __attribute__ ((__packed__)) sdshdr32 {$/;"	s
sdshdr32	src/sds.h	/^struct __attribute__ ((__packed__)) sdshdr32 {$/;"	s
sdshdr5	deps/hiredis/sds.h	/^struct __attribute__ ((__packed__)) sdshdr5 {$/;"	s
sdshdr5	src/sds.h	/^struct __attribute__ ((__packed__)) sdshdr5 {$/;"	s
sdshdr64	deps/hiredis/sds.h	/^struct __attribute__ ((__packed__)) sdshdr64 {$/;"	s
sdshdr64	src/sds.h	/^struct __attribute__ ((__packed__)) sdshdr64 {$/;"	s
sdshdr8	deps/hiredis/sds.h	/^struct __attribute__ ((__packed__)) sdshdr8 {$/;"	s
sdshdr8	src/sds.h	/^struct __attribute__ ((__packed__)) sdshdr8 {$/;"	s
sdsinclen	deps/hiredis/sds.h	/^static inline void sdsinclen(sds s, size_t inc) {$/;"	f
sdsinclen	src/sds.h	/^static inline void sdsinclen(sds s, size_t inc) {$/;"	f
sdsjoin	deps/hiredis/sds.c	/^sds sdsjoin(char **argv, int argc, char *sep) {$/;"	f
sdsjoin	src/sds.c	/^sds sdsjoin(char **argv, int argc, char *sep) {$/;"	f
sdsjoinsds	deps/hiredis/sds.c	/^sds sdsjoinsds(sds *argv, int argc, const char *sep, size_t seplen) {$/;"	f
sdsjoinsds	src/sds.c	/^sds sdsjoinsds(sds *argv, int argc, const char *sep, size_t seplen) {$/;"	f
sdslen	deps/hiredis/sds.h	/^static inline size_t sdslen(const sds s) {$/;"	f
sdslen	src/sds.h	/^static inline size_t sdslen(const sds s) {$/;"	f
sdsll2str	deps/hiredis/sds.c	/^int sdsll2str(char *s, long long value) {$/;"	f
sdsll2str	src/sds.c	/^int sdsll2str(char *s, long long value) {$/;"	f
sdsmapchars	deps/hiredis/sds.c	/^sds sdsmapchars(sds s, const char *from, const char *to, size_t setlen) {$/;"	f
sdsmapchars	src/sds.c	/^sds sdsmapchars(sds s, const char *from, const char *to, size_t setlen) {$/;"	f
sdsnew	deps/hiredis/sds.c	/^sds sdsnew(const char *init) {$/;"	f
sdsnew	src/sds.c	/^sds sdsnew(const char *init) {$/;"	f
sdsnewlen	deps/hiredis/sds.c	/^sds sdsnewlen(const void *init, size_t initlen) {$/;"	f
sdsnewlen	src/sds.c	/^sds sdsnewlen(const void *init, size_t initlen) {$/;"	f
sdsnewlenPM	src/sds.c	/^sds sdsnewlenPM(const void *init, size_t initlen) {$/;"	f
sdsrange	deps/hiredis/sds.c	/^void sdsrange(sds s, int start, int end) {$/;"	f
sdsrange	src/sds.c	/^void sdsrange(sds s, int start, int end) {$/;"	f
sdssetalloc	deps/hiredis/sds.h	/^static inline void sdssetalloc(sds s, size_t newlen) {$/;"	f
sdssetalloc	src/sds.h	/^static inline void sdssetalloc(sds s, size_t newlen) {$/;"	f
sdssetlen	deps/hiredis/sds.h	/^static inline void sdssetlen(sds s, size_t newlen) {$/;"	f
sdssetlen	src/sds.h	/^static inline void sdssetlen(sds s, size_t newlen) {$/;"	f
sdssplitargs	deps/hiredis/sds.c	/^sds *sdssplitargs(const char *line, int *argc) {$/;"	f
sdssplitargs	src/sds.c	/^sds *sdssplitargs(const char *line, int *argc) {$/;"	f
sdssplitlen	deps/hiredis/sds.c	/^sds *sdssplitlen(const char *s, int len, const char *sep, int seplen, int *count) {$/;"	f
sdssplitlen	src/sds.c	/^sds *sdssplitlen(const char *s, int len, const char *sep, int seplen, int *count) {$/;"	f
sdstolower	deps/hiredis/sds.c	/^void sdstolower(sds s) {$/;"	f
sdstolower	src/sds.c	/^void sdstolower(sds s) {$/;"	f
sdstoupper	deps/hiredis/sds.c	/^void sdstoupper(sds s) {$/;"	f
sdstoupper	src/sds.c	/^void sdstoupper(sds s) {$/;"	f
sdstrim	deps/hiredis/sds.c	/^sds sdstrim(sds s, const char *cset) {$/;"	f
sdstrim	src/sds.c	/^sds sdstrim(sds s, const char *cset) {$/;"	f
sdsull2str	deps/hiredis/sds.c	/^int sdsull2str(char *s, unsigned long long v) {$/;"	f
sdsull2str	src/sds.c	/^int sdsull2str(char *s, unsigned long long v) {$/;"	f
sdsupdatelen	deps/hiredis/sds.c	/^void sdsupdatelen(sds s) {$/;"	f
sdsupdatelen	src/sds.c	/^void sdsupdatelen(sds s) {$/;"	f
search	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^struct search {$/;"	s	file:
search_aliases	deps/pmdk/utils/get_aliases.sh	/^function search_aliases {$/;"	f
search_ctx	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^struct search_ctx {$/;"	s	file:
search_element	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^search_element(struct ds_context *ctx)$/;"	f
search_key	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^    unsigned char *search_key;$/;"	m	struct:search_ctx	file:
search_key	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^search_key(char *appname, struct search_ctx *ctx)$/;"	f	file:
search_parse_args	deps/pmdk/src/examples/libpmemobj/libart/arttree_search.c	/^search_parse_args(char *appname, int ac, char *av[], struct search_ctx *s_ctx)$/;"	f	file:
searchvar	deps/lua/src/lparser.c	/^static int searchvar (FuncState *fs, TString *n) {$/;"	f	file:
second_field	deps/pmdk/src/test/pmreorder_simple/pmreorder_simple.c	/^	int second_field;$/;"	m	struct:three_field	file:
seconds	src/server.h	/^    time_t seconds;$/;"	m	struct:saveparam
section_constr	deps/pmdk/src/libpmemobj/lane.h	/^typedef void *(*section_constr)(PMEMobjpool *pop, void *data);$/;"	t
section_destr	deps/pmdk/src/libpmemobj/lane.h	/^typedef void (*section_destr)(PMEMobjpool *pop, void *rt);$/;"	t
section_ended	deps/pmdk/utils/cstyle	/^section_ended:$/;"	l
section_global_op	deps/pmdk/src/libpmemobj/lane.h	/^typedef int (*section_global_op)(PMEMobjpool *pop);$/;"	t
section_layout_op	deps/pmdk/src/libpmemobj/lane.h	/^typedef int (*section_layout_op)(PMEMobjpool *pop, void *data, unsigned length);$/;"	t
section_operations	deps/pmdk/src/libpmemobj/lane.h	/^struct section_operations {$/;"	s
secure_getenv	deps/jemalloc/src/jemalloc.c	/^secure_getenv(const char *name)$/;"	f	file:
secure_getenv	deps/pmdk/src/common/os_posix.c	/^secure_getenv(const char *name)$/;"	f	file:
securityWarningCommand	src/networking.c	/^void securityWarningCommand(client *c) {$/;"	f
seed	deps/pmdk/src/benchmarks/benchmark.hpp	/^	unsigned seed;		 \/* PRNG seed *\/$/;"	m	struct:benchmark_args
seed	deps/pmdk/src/benchmarks/blk.cpp	/^	unsigned seed;    \/* worker seed *\/$/;"	m	struct:blk_worker	file:
seed	deps/pmdk/src/benchmarks/blk.cpp	/^	unsigned seed;  \/* seed for randomization *\/$/;"	m	struct:blk_args	file:
seed	deps/pmdk/src/benchmarks/log.cpp	/^	unsigned seed;   \/* seed for pseudo-random generator *\/$/;"	m	struct:prog_args	file:
seed	deps/pmdk/src/benchmarks/log.cpp	/^	unsigned seed;$/;"	m	struct:log_bench	file:
seed	deps/pmdk/src/benchmarks/log.cpp	/^	unsigned seed;$/;"	m	struct:log_worker_info	file:
seed	deps/pmdk/src/benchmarks/map_bench.cpp	/^	unsigned seed;$/;"	m	struct:map_bench_args	file:
seed	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^	unsigned seed;	\/* PRNG seed *\/$/;"	m	struct:prog_args	file:
seed	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^	unsigned seed;$/;"	m	struct:pmix_worker	file:
seed	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^	unsigned seed;     \/* seed for random numbers *\/$/;"	m	struct:memset_args	file:
seed	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	unsigned seed;     \/* seed value *\/$/;"	m	struct:obj_list_args	file:
seed	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^	unsigned seed;	\/* seed for random numbers *\/$/;"	m	struct:prog_args	file:
seed	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap.h	/^	uint32_t seed;$/;"	m	struct:hashmap_args
seed	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	uint32_t seed;$/;"	m	struct:hashmap_atomic	file:
seed	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^	uint32_t seed;$/;"	m	struct:hashmap_tx	file:
seed	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	uint64_t seed;$/;"	m	struct:create_params_t	file:
seed	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    seed = '12345'$/;"	v	class:BASE
seed	deps/pmdk/src/test/obj_pmalloc_rand_mt/obj_pmalloc_rand_mt.c	/^static unsigned seed;$/;"	v	file:
seekNewline	deps/hiredis/hiredis.c	/^static char *seekNewline(char *s, size_t len) {$/;"	f	file:
select	src/server.h	/^    *select[PROTO_SHARED_SELECT_CMDS],$/;"	m	struct:sharedObjectsStruct
selectCommand	src/db.c	/^void selectCommand(client *c) {$/;"	f
selectDb	src/db.c	/^int selectDb(client *c, int id) {$/;"	f
select_database	deps/hiredis/test.c	/^static redisContext *select_database(redisContext *c) {$/;"	f	file:
selectionsort	deps/lua/test/sort.lua	/^function selectionsort(x,n,f)$/;"	f
seminfo	deps/lua/src/llex.h	/^  SemInfo seminfo;$/;"	m	struct:Token
send	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct rpmem_fip_msg send;	\/* SEND message *\/$/;"	m	struct:rpmem_fip_plane	typeref:struct:rpmem_fip_plane::rpmem_fip_msg	file:
send	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct rpmem_fip_msg send;	\/* SEND message *\/$/;"	m	struct:rpmemd_fip_lane	typeref:struct:rpmemd_fip_lane::rpmem_fip_msg	file:
sendBulkToSlave	src/replication.c	/^void sendBulkToSlave(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
sendReplyToClient	src/networking.c	/^void sendReplyToClient(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
sendScan	src/redis-cli.c	/^static redisReply *sendScan(unsigned long long *it) {$/;"	f	file:
sendSync	src/redis-cli.c	/^unsigned long long sendSync(int fd) {$/;"	f
sendSynchronousCommand	src/replication.c	/^char *sendSynchronousCommand(int flags, int fd, ...) {$/;"	f
send_data_packet	tests/test_helper.tcl	/^proc send_data_packet {fd status data} {$/;"	p
send_posted	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	int send_posted;		\/* send buffer has been posted *\/$/;"	m	struct:rpmemd_fip_lane	file:
sender	src/cluster.h	/^    char sender[CLUSTER_NAMELEN]; \/* Name of the sender node *\/$/;"	m	struct:__anon177
sentinel	deps/lua/src/loadlib.c	448;"	d	file:
sentinel	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) sentinel;$/;"	m	struct:rbtree_map	file:
sentinel	src/sentinel.c	/^} sentinel;$/;"	v	typeref:struct:sentinelState
sentinelAbortFailover	src/sentinel.c	/^void sentinelAbortFailover(sentinelRedisInstance *ri) {$/;"	f
sentinelAddFlagsToDictOfRedisInstances	src/sentinel.c	/^void sentinelAddFlagsToDictOfRedisInstances(dict *instances, int flags) {$/;"	f
sentinelAddr	src/sentinel.c	/^typedef struct sentinelAddr {$/;"	s	file:
sentinelAddr	src/sentinel.c	/^} sentinelAddr;$/;"	t	typeref:struct:sentinelAddr	file:
sentinelAddrIsEqual	src/sentinel.c	/^int sentinelAddrIsEqual(sentinelAddr *a, sentinelAddr *b) {$/;"	f
sentinelAskMasterStateToOtherSentinels	src/sentinel.c	/^void sentinelAskMasterStateToOtherSentinels(sentinelRedisInstance *master, int flags) {$/;"	f
sentinelCallClientReconfScript	src/sentinel.c	/^void sentinelCallClientReconfScript(sentinelRedisInstance *master, int role, char *state, sentinelAddr *from, sentinelAddr *to) {$/;"	f
sentinelCheckObjectivelyDown	src/sentinel.c	/^void sentinelCheckObjectivelyDown(sentinelRedisInstance *master) {$/;"	f
sentinelCheckSubjectivelyDown	src/sentinel.c	/^void sentinelCheckSubjectivelyDown(sentinelRedisInstance *ri) {$/;"	f
sentinelCheckTiltCondition	src/sentinel.c	/^void sentinelCheckTiltCondition(void) {$/;"	f
sentinelCollectTerminatedScripts	src/sentinel.c	/^void sentinelCollectTerminatedScripts(void) {$/;"	f
sentinelCommand	src/sentinel.c	/^void sentinelCommand(client *c) {$/;"	f
sentinelDelFlagsToDictOfRedisInstances	src/sentinel.c	/^void sentinelDelFlagsToDictOfRedisInstances(dict *instances, int flags) {$/;"	f
sentinelDiscardReplyCallback	src/sentinel.c	/^void sentinelDiscardReplyCallback(redisAsyncContext *c, void *reply, void *privdata) {$/;"	f
sentinelDisconnectCallback	src/sentinel.c	/^void sentinelDisconnectCallback(const redisAsyncContext *c, int status) {$/;"	f
sentinelEvent	src/sentinel.c	/^void sentinelEvent(int level, char *type, sentinelRedisInstance *ri,$/;"	f
sentinelFailoverDetectEnd	src/sentinel.c	/^void sentinelFailoverDetectEnd(sentinelRedisInstance *master) {$/;"	f
sentinelFailoverReconfNextSlave	src/sentinel.c	/^void sentinelFailoverReconfNextSlave(sentinelRedisInstance *master) {$/;"	f
sentinelFailoverSelectSlave	src/sentinel.c	/^void sentinelFailoverSelectSlave(sentinelRedisInstance *ri) {$/;"	f
sentinelFailoverSendSlaveOfNoOne	src/sentinel.c	/^void sentinelFailoverSendSlaveOfNoOne(sentinelRedisInstance *ri) {$/;"	f
sentinelFailoverStateMachine	src/sentinel.c	/^void sentinelFailoverStateMachine(sentinelRedisInstance *ri) {$/;"	f
sentinelFailoverStateStr	src/sentinel.c	/^const char *sentinelFailoverStateStr(int state) {$/;"	f
sentinelFailoverSwitchToPromotedSlave	src/sentinel.c	/^void sentinelFailoverSwitchToPromotedSlave(sentinelRedisInstance *master) {$/;"	f
sentinelFailoverWaitPromotion	src/sentinel.c	/^void sentinelFailoverWaitPromotion(sentinelRedisInstance *ri) {$/;"	f
sentinelFailoverWaitStart	src/sentinel.c	/^void sentinelFailoverWaitStart(sentinelRedisInstance *ri) {$/;"	f
sentinelFlushConfig	src/sentinel.c	/^void sentinelFlushConfig(void) {$/;"	f
sentinelForceHelloUpdateDictOfRedisInstances	src/sentinel.c	/^void sentinelForceHelloUpdateDictOfRedisInstances(dict *instances) {$/;"	f
sentinelForceHelloUpdateForMaster	src/sentinel.c	/^int sentinelForceHelloUpdateForMaster(sentinelRedisInstance *master) {$/;"	f
sentinelGenerateInitialMonitorEvents	src/sentinel.c	/^void sentinelGenerateInitialMonitorEvents(void) {$/;"	f
sentinelGetCurrentMasterAddress	src/sentinel.c	/^sentinelAddr *sentinelGetCurrentMasterAddress(sentinelRedisInstance *master) {$/;"	f
sentinelGetInstanceTypeString	src/sentinel.c	/^char *sentinelGetInstanceTypeString(sentinelRedisInstance *ri) {$/;"	f
sentinelGetLeader	src/sentinel.c	/^char *sentinelGetLeader(sentinelRedisInstance *master, uint64_t epoch) {$/;"	f
sentinelGetMasterByName	src/sentinel.c	/^sentinelRedisInstance *sentinelGetMasterByName(char *name) {$/;"	f
sentinelGetMasterByNameOrReplyError	src/sentinel.c	/^sentinelRedisInstance *sentinelGetMasterByNameOrReplyError(client *c,$/;"	f
sentinelGetScriptListNodeByPid	src/sentinel.c	/^listNode *sentinelGetScriptListNodeByPid(pid_t pid) {$/;"	f
sentinelHandleConfiguration	src/sentinel.c	/^char *sentinelHandleConfiguration(char **argv, int argc) {$/;"	f
sentinelHandleDictOfRedisInstances	src/sentinel.c	/^void sentinelHandleDictOfRedisInstances(dict *instances) {$/;"	f
sentinelHandleRedisInstance	src/sentinel.c	/^void sentinelHandleRedisInstance(sentinelRedisInstance *ri) {$/;"	f
sentinelInfoCommand	src/sentinel.c	/^void sentinelInfoCommand(client *c) {$/;"	f
sentinelInfoReplyCallback	src/sentinel.c	/^void sentinelInfoReplyCallback(redisAsyncContext *c, void *reply, void *privdata) {$/;"	f
sentinelIsQuorumReachable	src/sentinel.c	/^int sentinelIsQuorumReachable(sentinelRedisInstance *master, int *usableptr) {$/;"	f
sentinelIsRunning	src/sentinel.c	/^void sentinelIsRunning(void) {$/;"	f
sentinelKillTimedoutScripts	src/sentinel.c	/^void sentinelKillTimedoutScripts(void) {$/;"	f
sentinelLeader	src/sentinel.c	/^struct sentinelLeader {$/;"	s	file:
sentinelLeaderIncr	src/sentinel.c	/^int sentinelLeaderIncr(dict *counters, char *runid) {$/;"	f
sentinelLinkEstablishedCallback	src/sentinel.c	/^void sentinelLinkEstablishedCallback(const redisAsyncContext *c, int status) {$/;"	f
sentinelMasterLooksSane	src/sentinel.c	/^int sentinelMasterLooksSane(sentinelRedisInstance *master) {$/;"	f
sentinelPendingScriptsCommand	src/sentinel.c	/^void sentinelPendingScriptsCommand(client *c) {$/;"	f
sentinelPingReplyCallback	src/sentinel.c	/^void sentinelPingReplyCallback(redisAsyncContext *c, void *reply, void *privdata) {$/;"	f
sentinelProcessHelloMessage	src/sentinel.c	/^void sentinelProcessHelloMessage(char *hello, int hello_len) {$/;"	f
sentinelPropagateDownAfterPeriod	src/sentinel.c	/^void sentinelPropagateDownAfterPeriod(sentinelRedisInstance *master) {$/;"	f
sentinelPublishCommand	src/sentinel.c	/^void sentinelPublishCommand(client *c) {$/;"	f
sentinelPublishReplyCallback	src/sentinel.c	/^void sentinelPublishReplyCallback(redisAsyncContext *c, void *reply, void *privdata) {$/;"	f
sentinelReceiveHelloMessages	src/sentinel.c	/^void sentinelReceiveHelloMessages(redisAsyncContext *c, void *reply, void *privdata) {$/;"	f
sentinelReceiveIsMasterDownReply	src/sentinel.c	/^void sentinelReceiveIsMasterDownReply(redisAsyncContext *c, void *reply, void *privdata) {$/;"	f
sentinelReconnectInstance	src/sentinel.c	/^void sentinelReconnectInstance(sentinelRedisInstance *ri) {$/;"	f
sentinelRedisInstance	src/sentinel.c	/^typedef struct sentinelRedisInstance {$/;"	s	file:
sentinelRedisInstance	src/sentinel.c	/^} sentinelRedisInstance;$/;"	t	typeref:struct:sentinelRedisInstance	file:
sentinelRedisInstanceLookupSlave	src/sentinel.c	/^sentinelRedisInstance *sentinelRedisInstanceLookupSlave($/;"	f
sentinelRedisInstanceNoDownFor	src/sentinel.c	/^int sentinelRedisInstanceNoDownFor(sentinelRedisInstance *ri, mstime_t ms) {$/;"	f
sentinelRedisInstanceTypeStr	src/sentinel.c	/^const char *sentinelRedisInstanceTypeStr(sentinelRedisInstance *ri) {$/;"	f
sentinelRefreshInstanceInfo	src/sentinel.c	/^void sentinelRefreshInstanceInfo(sentinelRedisInstance *ri, const char *info) {$/;"	f
sentinelReleaseScriptJob	src/sentinel.c	/^void sentinelReleaseScriptJob(sentinelScriptJob *sj) {$/;"	f
sentinelResetMaster	src/sentinel.c	/^void sentinelResetMaster(sentinelRedisInstance *ri, int flags) {$/;"	f
sentinelResetMasterAndChangeAddress	src/sentinel.c	/^int sentinelResetMasterAndChangeAddress(sentinelRedisInstance *master, char *ip, int port) {$/;"	f
sentinelResetMastersByPattern	src/sentinel.c	/^int sentinelResetMastersByPattern(char *pattern, int flags) {$/;"	f
sentinelRoleCommand	src/sentinel.c	/^void sentinelRoleCommand(client *c) {$/;"	f
sentinelRunPendingScripts	src/sentinel.c	/^void sentinelRunPendingScripts(void) {$/;"	f
sentinelScheduleScriptExecution	src/sentinel.c	/^void sentinelScheduleScriptExecution(char *path, ...) {$/;"	f
sentinelScriptJob	src/sentinel.c	/^typedef struct sentinelScriptJob {$/;"	s	file:
sentinelScriptJob	src/sentinel.c	/^} sentinelScriptJob;$/;"	t	typeref:struct:sentinelScriptJob	file:
sentinelScriptRetryDelay	src/sentinel.c	/^mstime_t sentinelScriptRetryDelay(int retry_num) {$/;"	f
sentinelSelectSlave	src/sentinel.c	/^sentinelRedisInstance *sentinelSelectSlave(sentinelRedisInstance *master) {$/;"	f
sentinelSendAuthIfNeeded	src/sentinel.c	/^void sentinelSendAuthIfNeeded(sentinelRedisInstance *ri, redisAsyncContext *c) {$/;"	f
sentinelSendHello	src/sentinel.c	/^int sentinelSendHello(sentinelRedisInstance *ri) {$/;"	f
sentinelSendPeriodicCommands	src/sentinel.c	/^void sentinelSendPeriodicCommands(sentinelRedisInstance *ri) {$/;"	f
sentinelSendPing	src/sentinel.c	/^int sentinelSendPing(sentinelRedisInstance *ri) {$/;"	f
sentinelSendSlaveOf	src/sentinel.c	/^int sentinelSendSlaveOf(sentinelRedisInstance *ri, char *host, int port) {$/;"	f
sentinelSetClientName	src/sentinel.c	/^void sentinelSetClientName(sentinelRedisInstance *ri, redisAsyncContext *c, char *type) {$/;"	f
sentinelSetCommand	src/sentinel.c	/^void sentinelSetCommand(client *c) {$/;"	f
sentinelSimFailureCrash	src/sentinel.c	/^void sentinelSimFailureCrash(void) {$/;"	f
sentinelStartFailover	src/sentinel.c	/^void sentinelStartFailover(sentinelRedisInstance *master) {$/;"	f
sentinelStartFailoverIfNeeded	src/sentinel.c	/^int sentinelStartFailoverIfNeeded(sentinelRedisInstance *master) {$/;"	f
sentinelState	src/sentinel.c	/^struct sentinelState {$/;"	s	file:
sentinelTimer	src/sentinel.c	/^void sentinelTimer(void) {$/;"	f
sentinelTryConnectionSharing	src/sentinel.c	/^int sentinelTryConnectionSharing(sentinelRedisInstance *ri) {$/;"	f
sentinelUpdateSentinelAddressInAllMasters	src/sentinel.c	/^int sentinelUpdateSentinelAddressInAllMasters(sentinelRedisInstance *ri) {$/;"	f
sentinelVoteLeader	src/sentinel.c	/^char *sentinelVoteLeader(sentinelRedisInstance *master, uint64_t req_epoch, char *req_runid, uint64_t *leader_epoch) {$/;"	f
sentinel_	deps/lua/src/loadlib.c	/^static const int sentinel_ = 0;$/;"	v	file:
sentinel_mode	src/server.h	/^    int sentinel_mode;          \/* True if this instance is a Sentinel. *\/$/;"	m	struct:redisServer
sentinelcmds	src/sentinel.c	/^struct redisCommand sentinelcmds[] = {$/;"	v	typeref:struct:redisCommand
sentinels	src/sentinel.c	/^    dict *sentinels;    \/* Other sentinels monitoring the same master. *\/$/;"	m	struct:sentinelRedisInstance	file:
sentlen	src/server.h	/^    size_t sentlen;         \/* Amount of bytes already sent in the current$/;"	m	struct:client
sep_line	deps/jemalloc/include/jemalloc/internal/size_classes.sh	/^sep_line() {$/;"	f
seq	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint32_t seq;		\/* sequence number (01, 10, 11) *\/$/;"	m	struct:btt_flog
sequence	src/sparkline.h	/^struct sequence {$/;"	s
serveClientBlockedOnList	src/t_list.c	/^int serveClientBlockedOnList(client *receiver, robj *key, robj *dstkey, redisDb *db, robj *value, int where)$/;"	f
server	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^static uv_tcp_t server;$/;"	v	file:
server	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^struct server {$/;"	s
server	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^TEST_CASE_DECLARE(server);$/;"	v
server	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^server(const struct test_case *tc, int argc, char *argv[])$/;"	f
server	src/server.c	/^struct redisServer server; \/* server global state *\/$/;"	v	typeref:struct:redisServer
serverAssert	src/server.h	489;"	d
serverAssertWithInfo	src/server.h	488;"	d
serverCron	src/server.c	/^int serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {$/;"	f
serverLog	src/server.c	/^void serverLog(int level, const char *fmt, ...) {$/;"	f
serverLogFromHandler	src/server.c	/^void serverLogFromHandler(int level, const char *msg) {$/;"	f
serverLogHexDump	src/debug.c	/^void serverLogHexDump(int level, char *descr, void *value, size_t len) {$/;"	f
serverLogObjectDebugInfo	src/debug.c	/^void serverLogObjectDebugInfo(robj *o) {$/;"	f
serverLogRaw	src/server.c	/^void serverLogRaw(int level, const char *msg) {$/;"	f
serverPanic	src/server.h	490;"	d
server_accept_seq	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(server_accept_seq);$/;"	v
server_accept_seq_fork	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(server_accept_seq_fork);$/;"	v
server_accept_sim	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(server_accept_sim);$/;"	v
server_accept_sim_fork	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(server_accept_sim_fork);$/;"	v
server_bad_msg	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^server_bad_msg(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_bad_msg	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(server_bad_msg);$/;"	v
server_close	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_close.c	/^server_close(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_close	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_close);$/;"	v
server_close	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(server_close);$/;"	v
server_close_begin	deps/pmdk/src/test/rpmem_fip/rpmem_fip_oob.c	/^server_close_begin(void)$/;"	f
server_close_econnreset	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_close.c	/^server_close_econnreset(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_close_econnreset	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_close_econnreset);$/;"	v
server_close_end	deps/pmdk/src/test/rpmem_fip/rpmem_fip_oob.c	/^server_close_end(void)$/;"	f
server_close_eproto	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_close.c	/^server_close_eproto(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_close_eproto	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_close_eproto);$/;"	v
server_close_error	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_close.c	/^server_close_error(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_close_error	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_close_error);$/;"	v
server_close_handle	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_close.c	/^server_close_handle(struct server *s, const struct rpmem_msg_close_resp *resp)$/;"	f	file:
server_connect	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^TEST_CASE_DECLARE(server_connect);$/;"	v
server_connect	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^server_connect(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_create	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_create);$/;"	v
server_create	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_create.c	/^server_create(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_create_econnreset	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_create_econnreset);$/;"	v
server_create_econnreset	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_create.c	/^server_create_econnreset(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_create_eproto	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_create_eproto);$/;"	v
server_create_eproto	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_create.c	/^server_create_eproto(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_create_error	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_create_error);$/;"	v
server_create_error	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_create.c	/^server_create_error(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_create_handle	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_create.c	/^server_create_handle(struct server *s, const struct rpmem_msg_create_resp *resp)$/;"	f	file:
server_econnreset	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.c	/^server_econnreset(struct server *s, const void *msg, size_t len)$/;"	f
server_econnreset	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(server_econnreset);$/;"	v
server_econnreset	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_misc.c	/^server_econnreset(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_exchange_begin	deps/pmdk/src/test/rpmem_fip/rpmem_fip_oob.c	/^server_exchange_begin(unsigned *lanes, enum rpmem_provider *provider,$/;"	f
server_exchange_end	deps/pmdk/src/test/rpmem_fip/rpmem_fip_oob.c	/^server_exchange_end(struct rpmem_resp_attr resp)$/;"	f
server_init	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^TEST_CASE_DECLARE(server_init);$/;"	v
server_init	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^server_init(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_is_up	tests/support/server.tcl	/^proc server_is_up {host port retrynum} {$/;"	p
server_monitor	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_monitor);$/;"	v
server_monitor	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_misc.c	/^server_monitor(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_msg_args	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^server_msg_args(struct rpmemd_obc *rpdc, enum conn_wait_close conn,$/;"	f	file:
server_msg_noresp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^server_msg_noresp(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_msg_noresp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(server_msg_noresp);$/;"	v
server_msg_resp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^server_msg_resp(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_msg_resp	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(server_msg_resp);$/;"	v
server_open	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_open);$/;"	v
server_open	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_open.c	/^server_open(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_open	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^TEST_CASE_DECLARE(server_open);$/;"	v
server_open_econnreset	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_open_econnreset);$/;"	v
server_open_econnreset	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_open.c	/^server_open_econnreset(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_open_eproto	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_open_eproto);$/;"	v
server_open_eproto	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_open.c	/^server_open_eproto(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_open_error	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_open_error);$/;"	v
server_open_error	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_open.c	/^server_open_error(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_open_handle	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_open.c	/^server_open_handle(struct server *s, const struct rpmem_msg_open_resp *resp)$/;"	f	file:
server_process	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^TEST_CASE_DECLARE(server_process);$/;"	v
server_process	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^server_process(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_set_attr	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_set_attr);$/;"	v
server_set_attr	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	/^server_set_attr(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_set_attr_econnreset	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_set_attr_econnreset);$/;"	v
server_set_attr_econnreset	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	/^server_set_attr_econnreset(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_set_attr_eproto	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_set_attr_eproto);$/;"	v
server_set_attr_eproto	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	/^server_set_attr_eproto(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_set_attr_error	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_set_attr_error);$/;"	v
server_set_attr_error	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	/^server_set_attr_error(const struct test_case *tc, int argc, char *argv[])$/;"	f
server_set_attr_handle	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_set_attr.c	/^server_set_attr_handle(struct server *s,$/;"	f	file:
server_wait	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.h	/^TEST_CASE_DECLARE(server_wait);$/;"	v
service	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	char service[RPMEM_MAX_SERVICE];$/;"	m	struct:rpmem_target_info
set	deps/pmdk/src/libpmemblk/blk.h	/^	struct pool_set *set;	\/* pool set info *\/$/;"	m	struct:pmemblk	typeref:struct:pmemblk::pool_set
set	deps/pmdk/src/libpmemlog/log.h	/^	struct pool_set *set;	\/* pool set info *\/$/;"	m	struct:pmemlog	typeref:struct:pmemlog::pool_set
set	deps/pmdk/src/libpmemobj/obj.h	/^	struct pool_set *set;		\/* pool set info *\/$/;"	m	struct:pmemobjpool	typeref:struct:pmemobjpool::pool_set
set	deps/pmdk/src/libpmemobj/palloc.h	/^	struct pool_set *set;$/;"	m	struct:palloc_heap	typeref:struct:palloc_heap::pool_set
set	deps/pmdk/src/libpmempool/check_util.h	/^	struct pool_set *set;$/;"	m	struct:__anon87	typeref:struct:__anon87::pool_set
set	deps/pmdk/src/tools/rpmemd/rpmemd_db.c	/^	struct pool_set *set;$/;"	m	struct:rpmemd_db_entry	typeref:struct:rpmemd_db_entry::pool_set	file:
set	deps/pmdk/src/tools/rpmemd/rpmemd_db.h	/^	struct pool_set *set;$/;"	m	struct:rpmemd_db_pool	typeref:struct:rpmemd_db_pool::pool_set
set	src/t_zset.c	/^        } set;$/;"	m	union:__anon152::__anon153	typeref:union:__anon152::__anon153::_iterset	file:
set2	deps/lua/src/ltablib.c	/^static void set2 (lua_State *L, int i, int j) {$/;"	f	file:
set2bits	deps/lua/src/lgc.h	35;"	d
setCommand	src/t_string.c	/^void setCommand(client *c) {$/;"	f
setDeferredMultiBulkLength	src/networking.c	/^void setDeferredMultiBulkLength(client *c, void *node, long length) {$/;"	f
setDictType	src/server.c	/^dictType setDictType = {$/;"	v
setExpire	src/db.c	/^void setExpire(redisDb *db, robj *key, long long when) {$/;"	f
setGenericCommand	src/t_string.c	/^void setGenericCommand(client *c, int flags, robj *key, robj *val, robj *expire, int unit, robj *ok_reply, robj *abort_reply) {$/;"	f
setKey	src/db.c	/^void setKey(redisDb *db, robj *key, robj *val) {$/;"	f
setKeyPM	src/db.c	/^void setKeyPM(redisDb *db, robj *key, robj *val) {$/;"	f
setProtocolError	src/networking.c	/^static void setProtocolError(client *c, int pos) {$/;"	f	file:
setSignedBitfield	src/bitops.c	/^void setSignedBitfield(unsigned char *p, uint64_t offset, uint64_t bits, int64_t value) {$/;"	f
setTypeAdd	src/t_set.c	/^int setTypeAdd(robj *subject, robj *value) {$/;"	f
setTypeConvert	src/t_set.c	/^void setTypeConvert(robj *setobj, int enc) {$/;"	f
setTypeCreate	src/t_set.c	/^robj *setTypeCreate(robj *value) {$/;"	f
setTypeInitIterator	src/t_set.c	/^setTypeIterator *setTypeInitIterator(robj *subject) {$/;"	f
setTypeIsMember	src/t_set.c	/^int setTypeIsMember(robj *subject, robj *value) {$/;"	f
setTypeIterator	src/server.h	/^} setTypeIterator;$/;"	t	typeref:struct:__anon163
setTypeNext	src/t_set.c	/^int setTypeNext(setTypeIterator *si, robj **objele, int64_t *llele) {$/;"	f
setTypeNextObject	src/t_set.c	/^robj *setTypeNextObject(setTypeIterator *si) {$/;"	f
setTypeRandomElement	src/t_set.c	/^int setTypeRandomElement(robj *setobj, robj **objele, int64_t *llele) {$/;"	f
setTypeReleaseIterator	src/t_set.c	/^void setTypeReleaseIterator(setTypeIterator *si) {$/;"	f
setTypeRemove	src/t_set.c	/^int setTypeRemove(robj *setobj, robj *value) {$/;"	f
setTypeSize	src/t_set.c	/^unsigned long setTypeSize(robj *subject) {$/;"	f
setUnsignedBitfield	src/bitops.c	/^void setUnsignedBitfield(unsigned char *p, uint64_t offset, uint64_t bits, uint64_t value) {$/;"	f
set_arena_error	deps/pmdk/src/libpmemblk/btt.c	/^set_arena_error(struct btt *bttp, struct arena *arenap, unsigned lane)$/;"	f	file:
set_as_replica	src/redis-trib.rb	/^    def set_as_replica(node_id)$/;"	f	class:ClusterNode
set_attr	deps/pmdk/src/tools/rpmemd/rpmemd_obc.h	/^	int (*set_attr)(struct rpmemd_obc *obc, void *arg,$/;"	m	struct:rpmemd_obc_requests
set_cluster_node_timeout	tests/cluster/cluster.tcl	/^proc set_cluster_node_timeout {to} {$/;"	p
set_compat	deps/pmdk/src/test/compat_incompat_features/common.sh	/^set_compat() {$/;"	f
set_empty_item	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^set_empty_item(struct tree_map_node_item *item)$/;"	f	file:
set_errno	deps/jemalloc/include/jemalloc/internal/private_namespace.h	498;"	d
set_errno	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	498;"	d
set_errno	deps/jemalloc/include/jemalloc/internal/util.h	/^set_errno(int errnum)$/;"	f
set_file	deps/pmdk/src/libpmempool/pool.h	/^	struct pool_set_file *set_file;$/;"	m	struct:pool_data	typeref:struct:pool_data::pool_set_file
set_flag	deps/pmdk/src/test/libpmempool_api/libpmempool_test.c	/^set_flag(const char *value, int *flags, int flag)$/;"	f	file:
set_flag	deps/pmdk/src/test/libpmempool_api_win/libpmempool_test_win.c	/^set_flag(const wchar_t *value, int *flags, int flag)$/;"	f	file:
set_func_malloc	deps/pmdk/src/common/alloc.c	/^void set_func_malloc(void *(*malloc_func)(size_t size)) {$/;"	f
set_func_realloc	deps/pmdk/src/common/alloc.c	/^void set_func_realloc(void *(*realloc_func)(void *ptr, size_t size)) {$/;"	f
set_hdr	deps/pmdk/src/libpmempool/feature.c	/^set_hdr(struct pool_set *set, unsigned rep, unsigned part, struct pool_hdr *src)$/;"	f	file:
set_incompat	deps/pmdk/src/test/compat_incompat_features/common.sh	/^set_incompat() {$/;"	f
set_instance_attrib	tests/instances.tcl	/^proc set_instance_attrib {type id attrib newval} {$/;"	p
set_max_intset_entries	src/server.h	/^    size_t set_max_intset_entries;$/;"	m	struct:redisServer
set_nohdrs	deps/pmdk/src/test/unittest/poolset.py	/^    def set_nohdrs(self):$/;"	m	class:_Poolset
set_number_format	deps/lua/src/fpconv.c	/^static void set_number_format(char *fmt, int precision)$/;"	f	file:
set_op	deps/pmdk/src/tools/pmempool/feature.c	/^set_op(const char *appname, struct feature_ctx *pfp, enum feature_op op,$/;"	f	file:
set_option	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^set_option(enum rpmemd_option option, const char *value,$/;"	f	file:
set_parts	deps/pmdk/src/test/unittest/poolset.py	/^    def set_parts(self, *parts):$/;"	m	class:_Poolset
set_pool_data	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^set_pool_data(uint8_t *pool, int inverse)$/;"	f	file:
set_prof_active	deps/jemalloc/test/unit/prof_reset.c	/^set_prof_active(bool active)$/;"	f	file:
set_root_func	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^set_root_func(char *appname, struct pmem_context *ctx, int argc, char *argv[])$/;"	f	file:
set_root_help	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.c	/^set_root_help(char *appname)$/;"	f	file:
set_rpmem_cmd	deps/pmdk/src/test/rpmem_fip/rpmem_fip_oob.c	/^set_rpmem_cmd(const char *fmt, ...)$/;"	f
set_rpmem_cmd	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.c	/^set_rpmem_cmd(const char *fmt, ...)$/;"	f
set_rpmem_cmd	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.c	/^set_rpmem_cmd(const char *fmt, ...)$/;"	f
set_singlehdr	deps/pmdk/src/test/unittest/poolset.py	/^    def set_singlehdr(self):$/;"	m	class:_Poolset
set_timeout_cluster_cmd	src/redis-trib.rb	/^    def set_timeout_cluster_cmd(argv,opt)$/;"	f	class:RedisTrib.alloc_slots
set_valgrind_exe_name	deps/pmdk/src/test/unittest/unittest.sh	/^function set_valgrind_exe_name() {$/;"	f
setarrayvector	deps/lua/src/ltable.c	/^static void setarrayvector (lua_State *L, Table *t, int size) {$/;"	f	file:
setbit	deps/pmdk/src/windows/include/sys/param.h	45;"	d
setbitCommand	src/bitops.c	/^void setbitCommand(client *c) {$/;"	f
setbits	deps/lua/src/lgc.h	28;"	d
setboolfield	deps/lua/src/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setbvalue	deps/lua/src/lobject.h	125;"	d
setclvalue	deps/lua/src/lobject.h	143;"	d
setexCommand	src/t_string.c	/^void setexCommand(client *c) {$/;"	f
setfenv	deps/lua/src/loadlib.c	/^static void setfenv (lua_State *L) {$/;"	f	file:
setfield	deps/lua/src/loslib.c	/^static void setfield (lua_State *L, const char *key, int value) {$/;"	f	file:
sethvalue	deps/lua/src/lobject.h	148;"	d
sethvalue2s	deps/lua/src/lobject.h	176;"	d
setlinebuf	deps/pmdk/src/windows/include/platform.h	115;"	d
setn	deps/lua/src/ltablib.c	/^static int setn (lua_State *L) {$/;"	f	file:
setnilvalue	deps/lua/src/lobject.h	117;"	d
setnodevector	deps/lua/src/ltable.c	/^static void setnodevector (lua_State *L, Table *t, int size) {$/;"	f	file:
setnvalue	deps/lua/src/lobject.h	119;"	d
setnxCommand	src/t_string.c	/^void setnxCommand(client *c) {$/;"	f
setobj	deps/lua/src/lobject.h	161;"	d
setobj2n	deps/lua/src/lobject.h	183;"	d
setobj2s	deps/lua/src/lobject.h	174;"	d
setobj2t	deps/lua/src/lobject.h	181;"	d
setobjs2s	deps/lua/src/lobject.h	172;"	d
setobjt2t	deps/lua/src/lobject.h	179;"	d
setpath	deps/lua/src/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname, const char *envname,$/;"	f	file:
setproctitle	src/setproctitle.c	/^void setproctitle(const char *fmt, ...) {$/;"	f
setprogdir	deps/lua/src/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:
setprogdir	deps/lua/src/loadlib.c	42;"	d	file:
setprogdir	deps/lua/src/loadlib.c	95;"	d	file:
setptvalue	deps/lua/src/lobject.h	153;"	d
setptvalue2s	deps/lua/src/lobject.h	177;"	d
setpvalue	deps/lua/src/lobject.h	122;"	d
setrangeCommand	src/t_string.c	/^void setrangeCommand(client *c) {$/;"	f
sets	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	const char **sets;$/;"	m	struct:pobj_bench	file:
setsize	src/ae.h	/^    int setsize; \/* max number of file descriptors tracked *\/$/;"	m	struct:aeEventLoop
setsvalue	deps/lua/src/lobject.h	128;"	d
setsvalue2n	deps/lua/src/lobject.h	184;"	d
setsvalue2s	deps/lua/src/lobject.h	175;"	d
settable_event	deps/lua/doc/manual.html	/^     function settable_event (table, key, value)$/;"	f
settabsi	deps/lua/src/ldblib.c	/^static void settabsi (lua_State *L, const char *i, int v) {$/;"	f	file:
settabss	deps/lua/src/ldblib.c	/^static void settabss (lua_State *L, const char *i, const char *v) {$/;"	f	file:
setthreshold	deps/lua/src/lgc.c	59;"	d	file:
setthvalue	deps/lua/src/lobject.h	138;"	d
setttype	deps/lua/src/lobject.h	186;"	d
setup	deps/pmdk/src/test/scope/TESTS.py	/^    def setup(self, ctx):$/;"	m	class:Common
setup	deps/pmdk/src/test/unittest/basetest.py	/^    def setup(self, ctx):$/;"	m	class:BaseTest
setup	deps/pmdk/src/test/unittest/unittest.sh	/^function setup() {$/;"	f
setupSignalHandlers	src/server.c	/^void setupSignalHandlers(void) {$/;"	f
setup_device	deps/pmdk/src/tools/daxio/daxio.c	/^setup_device(struct ndctl_ctx *ndctl_ctx, struct daxio_device *dev, int is_dst,$/;"	f	file:
setup_devices	deps/pmdk/src/tools/daxio/daxio.c	/^setup_devices(struct ndctl_ctx *ndctl_ctx, struct daxio_context *ctx)$/;"	f	file:
setup_move	tests/unit/type/set.tcl	/^    proc setup_move {} {$/;"	p
setuvalue	deps/lua/src/lobject.h	133;"	d
sflags	src/server.h	/^    char *sflags; \/* Flags as string representation, one char per flag. *\/$/;"	m	struct:redisCommand
sfmt	deps/jemalloc/test/src/SFMT.c	/^    w128_t sfmt[N];$/;"	m	struct:sfmt_s	file:
sfmt_s	deps/jemalloc/test/src/SFMT.c	/^struct sfmt_s {$/;"	s	file:
sfmt_t	deps/jemalloc/test/include/test/SFMT.h	/^typedef struct sfmt_s sfmt_t;$/;"	t	typeref:struct:sfmt_s
sh_t	deps/pmdk/src/libpmemobj/critnib.c	/^typedef unsigned char sh_t;$/;"	t	file:
sha1Test	src/sha1.c	/^int sha1Test(int argc, char **argv)$/;"	f
sha1hex	src/scripting.c	/^void sha1hex(char *digest, char *script, size_t len) {$/;"	f
shaScriptObjectDictType	src/server.c	/^dictType shaScriptObjectDictType = {$/;"	v
shared	src/server.c	/^struct sharedObjectsStruct shared;$/;"	v	typeref:struct:sharedObjectsStruct
sharedObjectsStruct	src/server.h	/^struct sharedObjectsStruct {$/;"	s
shift	deps/pmdk/src/libpmemobj/critnib.c	/^	sh_t shift;$/;"	m	struct:critnib_node	file:
short_src	deps/lua/src/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug
show	deps/lua/test/sort.lua	/^function show(m,x)$/;"	f
show	utils/hashtable/rehashing.c	/^void show(dict *d) {$/;"	f
showBuckets	utils/hashtable/rehashing.c	/^void showBuckets(dictht ht) {$/;"	f
showLatencyDistLegend	src/redis-cli.c	/^void showLatencyDistLegend(void) {$/;"	f
showLatencyDistSamples	src/redis-cli.c	/^void showLatencyDistSamples(struct distsamples *samples, long long tot) {$/;"	f
showLatencyReport	src/redis-benchmark.c	/^static void showLatencyReport(void) {$/;"	f	file:
showThroughput	src/redis-benchmark.c	/^int showThroughput(struct aeEventLoop *eventLoop, long long id, void *clientData) {$/;"	f
show_clients_state	tests/test_helper.tcl	/^proc show_clients_state {} {$/;"	p
show_cluster_info	src/redis-trib.rb	/^    def show_cluster_info$/;"	f	class:RedisTrib
show_help	src/redis-trib.rb	/^def show_help$/;"	f	class:RedisTrib
show_nodes	src/redis-trib.rb	/^    def show_nodes$/;"	f	class:RedisTrib.alloc_slots
show_reshard_table	src/redis-trib.rb	/^    def show_reshard_table(table)$/;"	f	class:RedisTrib.alloc_slots
showerrors	src/redis-benchmark.c	/^    int showerrors;$/;"	m	struct:config	file:
shrink_size	deps/jemalloc/test/unit/junk.c	/^shrink_size(size_t size)$/;"	f	file:
shuffle_objects	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^shuffle_objects(uint64_t *objects, size_t start, size_t nobjects,$/;"	f	file:
shuffle_objects	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^shuffle_objects(size_t start, size_t end)$/;"	f	file:
shuffle_start	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^	size_t shuffle_start;$/;"	m	struct:pmix_worker	file:
shutdown	src/redis-cli.c	/^    int shutdown;$/;"	m	struct:config	file:
shutdownCommand	src/db.c	/^void shutdownCommand(client *c) {$/;"	f
shutdown_asap	src/server.h	/^    int shutdown_asap;          \/* SHUTDOWN needed ASAP *\/$/;"	m	struct:redisServer
shutdown_state	deps/pmdk/src/common/shutdown_state.h	/^struct shutdown_state {$/;"	s
shutdown_state_add_part	deps/pmdk/src/common/shutdown_state.c	/^shutdown_state_add_part(struct shutdown_state *sds, const char *path,$/;"	f
shutdown_state_check	deps/pmdk/src/common/shutdown_state.c	/^shutdown_state_check(struct shutdown_state *curr_sds,$/;"	f
shutdown_state_checksum	deps/pmdk/src/common/shutdown_state.c	/^shutdown_state_checksum(struct shutdown_state *sds, struct pool_replica *rep)$/;"	f	file:
shutdown_state_clear_dirty	deps/pmdk/src/common/shutdown_state.c	/^shutdown_state_clear_dirty(struct shutdown_state *sds, struct pool_replica *rep)$/;"	f
shutdown_state_init	deps/pmdk/src/common/shutdown_state.c	/^shutdown_state_init(struct shutdown_state *sds, struct pool_replica *rep)$/;"	f
shutdown_state_reinit	deps/pmdk/src/common/shutdown_state.c	/^shutdown_state_reinit(struct shutdown_state *curr_sds,$/;"	f	file:
shutdown_state_set_dirty	deps/pmdk/src/common/shutdown_state.c	/^shutdown_state_set_dirty(struct shutdown_state *sds, struct pool_replica *rep)$/;"	f
si	deps/jemalloc/test/src/SFMT.c	/^    __m128i si;$/;"	m	union:W128_T	file:
sig	deps/pmdk/src/libpmemblk/btt_layout.h	/^	char sig[BTTINFO_SIG_LEN];	\/* must be "BTT_ARENA_INFO\\0\\0" *\/$/;"	m	struct:btt_info
sig	src/cluster.h	/^    char sig[4];        \/* Siganture "RCmb" (Redis Cluster message bus). *\/$/;"	m	struct:__anon177
sigShutdownHandler	src/server.c	/^static void sigShutdownHandler(int sig) {$/;"	f	file:
sigaction	deps/pmdk/src/windows/include/platform.h	/^struct sigaction {$/;"	s
sigaddset	deps/pmdk/src/windows/include/platform.h	/^sigaddset(sigset_t *set, int signum)$/;"	f
sigdelset	deps/pmdk/src/windows/include/platform.h	/^sigdelset(sigset_t *set, int signum)$/;"	f
sigemptyset	deps/pmdk/src/windows/include/platform.h	/^sigemptyset(sigset_t *set)$/;"	f
sigfillset	deps/pmdk/src/windows/include/platform.h	/^sigfillset(sigset_t *set)$/;"	f
sigismember	deps/pmdk/src/windows/include/platform.h	/^sigismember(const sigset_t *set, int signum)$/;"	f
sign	src/bitops.c	/^    int sign;           \/* True if signed, otherwise unsigned op. *\/$/;"	m	struct:bitfieldOp	file:
signal2str	deps/pmdk/src/test/tools/ctrld/signals_freebsd.h	/^static const char *signal2str[] = {$/;"	v
signal2str	deps/pmdk/src/test/tools/ctrld/signals_linux.h	/^static const char *signal2str[] = {$/;"	v
signalFlushedDb	src/db.c	/^void signalFlushedDb(int dbid) {$/;"	f
signalListAsReady	src/t_list.c	/^void signalListAsReady(redisDb *db, robj *key) {$/;"	f
signalModifiedKey	src/db.c	/^void signalModifiedKey(redisDb *db, robj *key) {$/;"	f
signal_handler	deps/pmdk/src/test/log_recovery/log_recovery.c	/^signal_handler(int sig)$/;"	f	file:
signal_handler	deps/pmdk/src/test/log_walker/log_walker.c	/^signal_handler(int sig)$/;"	f	file:
signal_handler	deps/pmdk/src/test/mmap/mmap.c	/^signal_handler(int sig)$/;"	f	file:
signal_handler	deps/pmdk/src/test/obj_lane/obj_lane.c	/^signal_handler(int sig)$/;"	f	file:
signal_handler	deps/pmdk/src/test/pmem_map_file/pmem_map_file.c	/^signal_handler(int sig)$/;"	f	file:
signal_handler	deps/pmdk/src/test/pmem_map_file_win/pmem_map_file_win.c	/^signal_handler(int sig)$/;"	f	file:
signal_handler_1	deps/pmdk/src/test/signal_handle/signal_handle.c	/^signal_handler_1(int sig)$/;"	f	file:
signal_handler_2	deps/pmdk/src/test/signal_handle/signal_handle.c	/^signal_handler_2(int sig)$/;"	f	file:
signal_handler_3	deps/pmdk/src/test/signal_handle/signal_handle.c	/^signal_handler_3(int sig)$/;"	f	file:
signal_handler_wrapper	deps/pmdk/src/test/unittest/ut_signal.c	/^signal_handler_wrapper(int signum)$/;"	f	file:
signal_idle_client	tests/test_helper.tcl	/^proc signal_idle_client fd {$/;"	p
signature	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint8_t signature[NFIT_SIGNATURE_LEN];$/;"	m	struct:nfit_header
signature	deps/pmdk/src/common/pool_hdr.h	/^	char signature[POOL_HDR_SIG_LEN];$/;"	m	struct:pool_hdr
signature	deps/pmdk/src/common/set.h	/^	char signature[POOL_HDR_SIG_LEN]; \/* pool signature *\/$/;"	m	struct:pool_attr
signature	deps/pmdk/src/examples/librpmem/fibonacci/fibonacci.c	/^	char signature[FIBO_SIG_LEN];$/;"	m	struct:fibo_t	file:
signature	deps/pmdk/src/include/librpmem.h	/^	char signature[RPMEM_POOL_HDR_SIG_LEN]; \/* pool signature *\/$/;"	m	struct:rpmem_pool_attr
signature	deps/pmdk/src/libpmemobj/heap_layout.h	/^	char signature[HEAP_SIGNATURE_LEN];$/;"	m	struct:heap_header
signature	deps/pmdk/src/libpmempool/pool.h	/^	char signature[POOL_HDR_SIG_LEN];$/;"	m	struct:pool_params
signature	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	char signature[RPMEM_POOL_HDR_SIG_LEN]; \/* pool signature *\/$/;"	m	struct:rpmem_pool_attr_packed
signature	deps/pmdk/src/test/tools/obj_verify/obj_verify.c	/^	char signature[SIGNATURE_LEN];$/;"	m	struct:data_s	file:
signature	deps/pmdk/src/tools/pmempool/common.h	/^	char signature[POOL_HDR_SIG_LEN];$/;"	m	struct:pmem_pool_params
sigsegvHandler	src/debug.c	/^void sigsegvHandler(int sig, siginfo_t *info, void *secret) {$/;"	f
sigset_t	deps/pmdk/src/windows/include/platform.h	/^typedef unsigned long long sigset_t; \/* one bit for each signal *\/$/;"	t
simfailure_flags	src/sentinel.c	/^    unsigned long simfailure_flags; \/* Failures simulation. *\/$/;"	m	struct:sentinelState	file:
simpleexp	deps/lua/src/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:
simulate_bit_op	tests/unit/bitops.tcl	/^proc simulate_bit_op {op args} {$/;"	p
since	src/help.h	/^  char *since;$/;"	m	struct:commandHelp
single_part	deps/pmdk/src/libpmempool/check_util.h	/^	int single_part;$/;"	m	struct:__anon87
single_repl	deps/pmdk/src/libpmempool/check_util.h	/^	int single_repl;$/;"	m	struct:__anon87
singlematch	deps/lua/src/lstrlib.c	/^static int singlematch (int c, const char *p, const char *ep) {$/;"	f	file:
singlestep	deps/lua/src/lgc.c	/^static l_mem singlestep (lua_State *L) {$/;"	f	file:
singlevar	deps/lua/src/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:
singlevaraux	deps/lua/src/lparser.c	/^static int singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:
sinterCommand	src/t_set.c	/^void sinterCommand(client *c) {$/;"	f
sinterGenericCommand	src/t_set.c	/^void sinterGenericCommand(client *c, robj **setkeys,$/;"	f
sinterstoreCommand	src/t_set.c	/^void sinterstoreCommand(client *c) {$/;"	f
sismemberCommand	src/t_set.c	/^void sismemberCommand(client *c) {$/;"	f
size	deps/hiredis/dict.h	/^    unsigned long size;$/;"	m	struct:dict
size	deps/lua/src/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:
size	deps/lua/src/lstate.h	/^  int size;$/;"	m	struct:stringtable
size	deps/lua/src/strbuf.h	/^    int size;$/;"	m	struct:__anon29
size	deps/pmdk/src/benchmarks/benchmark.hpp	/^		size_t size;$/;"	m	struct:benchmark_clo::__anon113
size	deps/pmdk/src/benchmarks/benchmark.hpp	/^		size_t size;$/;"	m	struct:benchmark_clo::__anon114
size	deps/pmdk/src/benchmarks/clo_vec.hpp	/^	size_t size;$/;"	m	struct:clo_vec
size	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	size_t size;$/;"	m	struct:offset	file:
size	deps/pmdk/src/common/set.h	/^	size_t size;		\/* size of the mapping - page aligned *\/$/;"	m	struct:pool_set_part
size	deps/pmdk/src/examples/libpmemobj/array/array.c	/^	size_t size;$/;"	m	struct:array_info	file:
size	deps/pmdk/src/examples/libpmemobj/btree.c	/^	size_t size;$/;"	m	struct:btree_node_arg	file:
size	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	int size;$/;"	m	struct:art_tree_root
size	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	int size;$/;"	m	struct:_art_tree_root
size	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^	size_t size;		\/* size of this log buffer *\/$/;"	m	struct:log_hdr	file:
size	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^	size_t size;			\/* size of this log buffer *\/$/;"	m	struct:log_hdr	file:
size	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^	size_t size;$/;"	m	struct:create_args	file:
size	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^	size_t size;$/;"	m	struct:log	file:
size	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint64_t size;	\/* size of file *\/$/;"	m	struct:objfs_inode	file:
size	deps/pmdk/src/libpmemblk/blk.h	/^	size_t size;		\/* size of mapped region *\/$/;"	m	struct:pmemblk
size	deps/pmdk/src/libpmemlog/log.h	/^	size_t size;		\/* size of mapped region *\/$/;"	m	struct:pmemlog
size	deps/pmdk/src/libpmemobj/alloc_class.c	/^	size_t size;$/;"	m	struct:__anon134	file:
size	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t size;$/;"	m	struct:allocation_header_compact
size	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t size;$/;"	m	struct:allocation_header_legacy
size	deps/pmdk/src/libpmemobj/memblock.h	/^	size_t size; \/* total size of the bitmap in bytes *\/$/;"	m	struct:run_bitmap
size	deps/pmdk/src/libpmemobj/memops.h	/^	size_t size;$/;"	m	struct:user_buffer_def
size	deps/pmdk/src/libpmemobj/obj.c	/^	size_t size;$/;"	m	struct:carg_root	file:
size	deps/pmdk/src/libpmemobj/obj.c	/^	size_t size;$/;"	m	struct:carg_strdup	file:
size	deps/pmdk/src/libpmemobj/obj.c	/^	size_t size;$/;"	m	struct:carg_wcsdup	file:
size	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_READ_HANDLER(size)(void *ctx,$/;"	f	file:
size	deps/pmdk/src/libpmemobj/tx.c	/^	uint64_t size;$/;"	m	struct:tx_range_def	file:
size	deps/pmdk/src/libpmemobj/tx.c	/^CTL_READ_HANDLER(size)(void *ctx,$/;"	f	file:
size	deps/pmdk/src/libpmemobj/tx.c	/^CTL_WRITE_HANDLER(size)(void *ctx,$/;"	f	file:
size	deps/pmdk/src/libpmemobj/tx.c	/^static const struct ctl_argument CTL_ARG(size) = CTL_ARG_LONG_LONG;$/;"	v	typeref:struct:CTL_ARG	file:
size	deps/pmdk/src/libpmemobj/ulog.h	/^	uint64_t size; \/* size of the buffer to be modified *\/$/;"	m	struct:ulog_entry_buf
size	deps/pmdk/src/libpmempool/pool.h	/^	size_t size;$/;"	m	struct:pool_params
size	deps/pmdk/src/libpmempool/pool.h	/^	size_t size;$/;"	m	struct:pool_set_file
size	deps/pmdk/src/librpmem/rpmem_fip.c	/^	size_t size;	\/* memory size *\/$/;"	m	struct:rpmem_fip	file:
size	deps/pmdk/src/librpmem/rpmem_fip.h	/^	size_t size;$/;"	m	struct:rpmem_fip_attr
size	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t size;		\/* size of pool descriptor *\/$/;"	m	struct:rpmem_msg_pool_desc
size	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint64_t size;			\/* size of message *\/$/;"	m	struct:rpmem_msg_hdr
size	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint64_t size;			\/* size of message *\/$/;"	m	struct:rpmem_msg_hdr_resp
size	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint64_t size;	\/* remote memory size *\/$/;"	m	struct:rpmem_msg_persist
size	deps/pmdk/src/test/obj_defrag_advanced/pgraph.h	/^	size_t size;$/;"	m	struct:pnode_t
size	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	/^	size_t size;$/;"	m	struct:cargs	file:
size	deps/pmdk/src/test/obj_out_of_memory/obj_out_of_memory.c	/^	size_t size;$/;"	m	struct:cargs	file:
size	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	size_t size;$/;"	m	struct:flush_thread_arg	file:
size	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	size_t size;$/;"	m	struct:pool_entry	file:
size	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	size_t size;$/;"	m	struct:pmemspoil	file:
size	deps/pmdk/src/tools/daxio/daxio.c	/^	size_t size;		\/* actual file\/device size *\/$/;"	m	struct:daxio_device	file:
size	deps/pmdk/src/tools/pmempool/common.h	/^	size_t size;$/;"	m	struct:pool_set_file
size	deps/pmdk/src/tools/pmempool/common.h	/^	uint64_t size;$/;"	m	struct:pmem_pool_params
size	deps/pmdk/src/tools/pmempool/info.h	/^		size_t size;$/;"	m	struct:pmem_info::__anon111
size	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	size_t size;			\/* size of the pool *\/$/;"	m	struct:rpmemd_fip	file:
size	deps/pmdk/src/tools/rpmemd/rpmemd_fip.h	/^	size_t size;$/;"	m	struct:rpmemd_fip_attr
size	src/cluster.h	/^    int size;             \/* Num of master nodes with at least one slot *\/$/;"	m	struct:clusterState
size	src/dict.h	/^    unsigned long size;$/;"	m	struct:dictht
size2index	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^size2index(size_t size)$/;"	f
size2index	deps/jemalloc/include/jemalloc/internal/private_namespace.h	499;"	d
size2index	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	499;"	d
size2index_compute	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^size2index_compute(size_t size)$/;"	f
size2index_compute	deps/jemalloc/include/jemalloc/internal/private_namespace.h	500;"	d
size2index_compute	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	500;"	d
size2index_lookup	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^size2index_lookup(size_t size)$/;"	f
size2index_lookup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	501;"	d
size2index_lookup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	501;"	d
size2index_tab	deps/jemalloc/include/jemalloc/internal/private_namespace.h	502;"	d
size2index_tab	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	502;"	d
sizeCclosure	deps/lua/src/lfunc.h	14;"	d
sizeLclosure	deps/lua/src/lfunc.h	17;"	d
sizeMeetsSafetyLimit	src/quicklist.c	418;"	d	file:
size_chunks	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t size_chunks;$/;"	m	struct:pmem_obj_zone_stats
size_chunks_type	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t size_chunks_type[MAX_CHUNK_TYPE];$/;"	m	struct:pmem_obj_zone_stats
size_ci	deps/lua/src/lstate.h	/^  int size_ci;  \/* size of array `base_ci' *\/$/;"	m	struct:lua_State
size_class	deps/jemalloc/include/jemalloc/internal/size_classes.sh	/^size_class() {$/;"	f
size_classes	deps/jemalloc/include/jemalloc/internal/size_classes.sh	/^size_classes() {$/;"	f
size_idx	deps/pmdk/src/libpmemobj/alloc_class.h	/^		uint32_t size_idx; \/* size index of a single run instance *\/$/;"	m	struct:alloc_class::__anon131
size_idx	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint32_t size_idx;$/;"	m	struct:chunk_header
size_idx	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint32_t size_idx;$/;"	m	struct:zone_header
size_idx	deps/pmdk/src/libpmemobj/memblock.h	/^	uint32_t size_idx;$/;"	m	struct:memory_block
sizearray	deps/lua/src/lobject.h	/^  int sizearray;  \/* size of `array' array *\/$/;"	m	struct:Table
sizecode	deps/lua/src/lobject.h	/^  int sizecode;$/;"	m	struct:Proto
sizek	deps/lua/src/lobject.h	/^  int sizek;  \/* size of `k' *\/$/;"	m	struct:Proto
sizelineinfo	deps/lua/src/lobject.h	/^  int sizelineinfo;$/;"	m	struct:Proto
sizelocvars	deps/lua/src/lobject.h	/^  int sizelocvars;$/;"	m	struct:Proto
sizemask	deps/hiredis/dict.h	/^    unsigned long sizemask;$/;"	m	struct:dict
sizemask	src/dict.h	/^    unsigned long sizemask;$/;"	m	struct:dictht
sizenode	deps/lua/src/lobject.h	360;"	d
sizeof_member	deps/pmdk/src/common/ctl.h	101;"	d
sizep	deps/lua/src/lobject.h	/^  int sizep;  \/* size of `p' *\/$/;"	m	struct:Proto
sizep	deps/pmdk/src/libpmemobj/palloc.h	/^	uint64_t *sizep;$/;"	m	struct:palloc_heap
sizes	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^	size_t *sizes;		   \/* sizes for allocations *\/$/;"	m	struct:obj_bench	file:
sizes	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	size_t *sizes;      \/* array to store size of each allocation *\/$/;"	m	struct:obj_tx_bench	file:
sizestring	deps/lua/src/lstring.h	16;"	d
sizeudata	deps/lua/src/lstring.h	18;"	d
sizeupvalues	deps/lua/src/lobject.h	/^  int sizeupvalues;$/;"	m	struct:Proto
skip	deps/pmdk/src/test/unittest/futils.py	/^def skip(msg):$/;"	f
skip_error	deps/pmdk/src/tools/pmempool/info.h	/^		bool skip_error; \/* skip blocks marked with error flag *\/$/;"	m	struct:pmempool_info_args::__anon108
skip_expensive_checks	deps/pmdk/src/libpmemobj/tx.c	/^CTL_READ_HANDLER(skip_expensive_checks)(void *ctx,$/;"	f	file:
skip_expensive_checks	deps/pmdk/src/libpmemobj/tx.c	/^CTL_WRITE_HANDLER(skip_expensive_checks)(void *ctx,$/;"	f	file:
skip_expensive_checks	deps/pmdk/src/libpmemobj/tx.c	/^static const struct ctl_argument CTL_ARG(skip_expensive_checks) =$/;"	v	typeref:struct:CTL_ARG	file:
skip_no_flag	deps/pmdk/src/tools/pmempool/info.h	/^		bool skip_no_flag; \/* skip blocks not marked with any flag *\/$/;"	m	struct:pmempool_info_args::__anon108
skip_off	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	size_t skip_off;$/;"	m	struct:checksum_args	file:
skip_sep	deps/lua/src/llex.c	/^static int skip_sep (LexState *ls) {$/;"	f	file:
skip_zeros	deps/pmdk/src/tools/pmempool/info.h	/^		bool skip_zeros; \/* skip blocks marked with zero flag *\/$/;"	m	struct:pmempool_info_args::__anon108
skiplist_map_check	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_check(PMEMobjpool *pop, TOID(struct skiplist_map_node) map)$/;"	f
skiplist_map_clear	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_clear(PMEMobjpool *pop, TOID(struct skiplist_map_node) map)$/;"	f
skiplist_map_create	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_create(PMEMobjpool *pop, TOID(struct skiplist_map_node) *map,$/;"	f
skiplist_map_destroy	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_destroy(PMEMobjpool *pop, TOID(struct skiplist_map_node) *map)$/;"	f
skiplist_map_entry	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^struct skiplist_map_entry {$/;"	s	file:
skiplist_map_find	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_find(uint64_t key, TOID(struct skiplist_map_node) map,$/;"	f	file:
skiplist_map_foreach	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_foreach(PMEMobjpool *pop, TOID(struct skiplist_map_node) map,$/;"	f
skiplist_map_get	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_get(PMEMobjpool *pop, TOID(struct skiplist_map_node) map,$/;"	f
skiplist_map_insert	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_insert(PMEMobjpool *pop, TOID(struct skiplist_map_node) map,$/;"	f
skiplist_map_insert_new	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_insert_new(PMEMobjpool *pop, TOID(struct skiplist_map_node) map,$/;"	f
skiplist_map_is_empty	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_is_empty(PMEMobjpool *pop, TOID(struct skiplist_map_node) map)$/;"	f
skiplist_map_lookup	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_lookup(PMEMobjpool *pop, TOID(struct skiplist_map_node) map,$/;"	f
skiplist_map_node	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^struct skiplist_map_node {$/;"	s	file:
skiplist_map_ops	deps/pmdk/src/examples/libpmemobj/map/map_skiplist.c	/^struct map_ops skiplist_map_ops = {$/;"	v	typeref:struct:map_ops
skiplist_map_remove	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_remove(PMEMobjpool *pop, TOID(struct skiplist_map_node) map,$/;"	f
skiplist_map_remove_free	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^skiplist_map_remove_free(PMEMobjpool *pop, TOID(struct skiplist_map_node) map,$/;"	f
sl	src/t_zset.c	/^            } sl;$/;"	m	union:__anon152::__anon153::_iterzset	typeref:struct:__anon152::__anon153::_iterzset::__anon157	file:
slab_alloc	deps/pmdk/src/examples/libpmemobj/slab_allocator/slab_allocator.c	/^slab_alloc(struct slab_allocator *slab, PMEMoid *oid,$/;"	f
slab_allocator	deps/pmdk/src/examples/libpmemobj/slab_allocator/main.c	/^POBJ_LAYOUT_BEGIN(slab_allocator);$/;"	v
slab_allocator	deps/pmdk/src/examples/libpmemobj/slab_allocator/main.c	/^POBJ_LAYOUT_END(slab_allocator);$/;"	v
slab_allocator	deps/pmdk/src/examples/libpmemobj/slab_allocator/slab_allocator.c	/^struct slab_allocator {$/;"	s	file:
slab_delete	deps/pmdk/src/examples/libpmemobj/slab_allocator/slab_allocator.c	/^slab_delete(struct slab_allocator *slab)$/;"	f
slab_new	deps/pmdk/src/examples/libpmemobj/slab_allocator/slab_allocator.c	/^slab_new(PMEMobjpool *pop, size_t size)$/;"	f
slab_tx_alloc	deps/pmdk/src/examples/libpmemobj/slab_allocator/slab_allocator.c	/^slab_tx_alloc(struct slab_allocator *slab)$/;"	f
slaveIsInHandshakeState	src/replication.c	/^int slaveIsInHandshakeState(void) {$/;"	f
slaveMode	src/redis-cli.c	/^static void slaveMode(void) {$/;"	f	file:
slaveTryPartialResynchronization	src/replication.c	/^int slaveTryPartialResynchronization(int fd, int read_reply) {$/;"	f
slave_announce_ip	src/server.h	/^    char *slave_announce_ip;        \/* Give the master this ip address. *\/$/;"	m	struct:redisServer
slave_announce_port	src/server.h	/^    int slave_announce_port;        \/* Give the master this listening port. *\/$/;"	m	struct:redisServer
slave_capa	src/server.h	/^    int slave_capa;         \/* Slave capabilities: SLAVE_CAPA_* bitwise OR. *\/$/;"	m	struct:client
slave_conf_change_time	src/sentinel.c	/^    mstime_t slave_conf_change_time; \/* Last time slave master addr changed. *\/$/;"	m	struct:sentinelRedisInstance	file:
slave_ip	src/server.h	/^    char slave_ip[NET_IP_STR_LEN]; \/* Optionally given by REPLCONF ip-address *\/$/;"	m	struct:client
slave_listening_port	src/server.h	/^    int slave_listening_port; \/* As configured with: REPLCONF listening-port *\/$/;"	m	struct:client
slave_master_host	src/sentinel.c	/^    char *slave_master_host;    \/* Master host as reported by INFO *\/$/;"	m	struct:sentinelRedisInstance	file:
slave_master_link_status	src/sentinel.c	/^    int slave_master_link_status; \/* Master link status as reported by INFO *\/$/;"	m	struct:sentinelRedisInstance	file:
slave_master_port	src/sentinel.c	/^    int slave_master_port;      \/* Master port as reported by INFO *\/$/;"	m	struct:sentinelRedisInstance	file:
slave_mode	src/redis-cli.c	/^    int slave_mode;$/;"	m	struct:config	file:
slave_priority	src/sentinel.c	/^    int slave_priority; \/* Slave priority according to its INFO output. *\/$/;"	m	struct:sentinelRedisInstance	file:
slave_priority	src/server.h	/^    int slave_priority;             \/* Reported in INFO and used by Sentinel. *\/$/;"	m	struct:redisServer
slave_reconf_sent_time	src/sentinel.c	/^    mstime_t slave_reconf_sent_time; \/* Time at which we sent SLAVE OF <new> *\/$/;"	m	struct:sentinelRedisInstance	file:
slave_repl_offset	src/sentinel.c	/^    unsigned long long slave_repl_offset; \/* Slave replication offset. *\/$/;"	m	struct:sentinelRedisInstance	file:
slaveof	src/cluster.h	/^    char slaveof[CLUSTER_NAMELEN];$/;"	m	struct:__anon177
slaveof	src/cluster.h	/^    struct clusterNode *slaveof; \/* pointer to the master node. Note that it$/;"	m	struct:clusterNode	typeref:struct:clusterNode::clusterNode
slaveofCommand	src/replication.c	/^void slaveofCommand(client *c) {$/;"	f
slaves	src/cluster.h	/^    struct clusterNode **slaves; \/* pointers to slave nodes *\/$/;"	m	struct:clusterNode	typeref:struct:clusterNode::clusterNode
slaves	src/sentinel.c	/^    dict *slaves;       \/* Slaves for this master instance. *\/$/;"	m	struct:sentinelRedisInstance	file:
slaves	src/server.h	/^    list *slaves, *monitors;    \/* List of slaves and MONITORs *\/$/;"	m	struct:redisServer
slaveseldb	src/server.h	/^    int slaveseldb;                 \/* Last SELECTed DB in replication output *\/$/;"	m	struct:redisServer
slice_index	deps/pmdk/src/libpmemobj/critnib.c	/^slice_index(uint64_t key, sh_t shift)$/;"	f	file:
slist	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^	struct slisthead slist;$/;"	m	struct:base	typeref:struct:base::slisthead	file:
slot	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^	PMEMoid slot;$/;"	m	struct:tree_map_entry	file:
slotToKeyAdd	src/db.c	/^void slotToKeyAdd(robj *key) {$/;"	f
slotToKeyDel	src/db.c	/^void slotToKeyDel(robj *key) {$/;"	f
slotToKeyFlush	src/db.c	/^void slotToKeyFlush(void) {$/;"	f
slots	deps/pmdk/src/examples/libpmemobj/btree.c	/^	TOID(struct btree_node) slots[2];$/;"	m	struct:btree_node	file:
slots	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	TOID(struct tree_map_node) slots[BTREE_ORDER];$/;"	m	struct:tree_map_node	file:
slots	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) slots[MAX_RB];$/;"	m	struct:tree_map_node	file:
slots	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TX_SET(NODE_P(node), slots[NODE_LOCATION(node)], child);$/;"	e	enum:c	file:
slots	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^	TOID(struct tree_map_node) slots[ALPHABET_SIZE];$/;"	m	struct:tree_map_node	file:
slots	deps/pmdk/src/libpmemobj/ravl.c	/^	struct ravl_node *slots[MAX_SLOTS];$/;"	m	struct:ravl_node	typeref:struct:ravl_node::ravl_node	file:
slots	src/cluster.h	/^    clusterNode *slots[CLUSTER_SLOTS];$/;"	m	struct:clusterState
slots	src/cluster.h	/^    unsigned char slots[CLUSTER_SLOTS\/8]; \/* Slots bitmap. *\/$/;"	m	struct:__anon172
slots	src/cluster.h	/^    unsigned char slots[CLUSTER_SLOTS\/8]; \/* slots handled by this node *\/$/;"	m	struct:clusterNode
slots	src/redis-trib.rb	/^    def slots$/;"	f	class:ClusterNode
slots_to_keys	src/cluster.h	/^    zskiplist *slots_to_keys;$/;"	m	struct:clusterState
slowlog	src/server.h	/^    list *slowlog;                  \/* SLOWLOG list of commands *\/$/;"	m	struct:redisServer
slowlogCommand	src/slowlog.c	/^void slowlogCommand(client *c) {$/;"	f
slowlogCreateEntry	src/slowlog.c	/^slowlogEntry *slowlogCreateEntry(robj **argv, int argc, long long duration) {$/;"	f
slowlogEntry	src/slowlog.h	/^typedef struct slowlogEntry {$/;"	s
slowlogEntry	src/slowlog.h	/^} slowlogEntry;$/;"	t	typeref:struct:slowlogEntry
slowlogFreeEntry	src/slowlog.c	/^void slowlogFreeEntry(void *septr) {$/;"	f
slowlogInit	src/slowlog.c	/^void slowlogInit(void) {$/;"	f
slowlogPushEntryIfNeeded	src/slowlog.c	/^void slowlogPushEntryIfNeeded(robj **argv, int argc, long long duration) {$/;"	f
slowlogReset	src/slowlog.c	/^void slowlogReset(void) {$/;"	f
slowlog_entry_id	src/server.h	/^    long long slowlog_entry_id;     \/* SLOWLOG current entry ID *\/$/;"	m	struct:redisServer
slowlog_log_slower_than	src/server.h	/^    long long slowlog_log_slower_than; \/* SLOWLOG time limit (to get logged) *\/$/;"	m	struct:redisServer
slowlog_max_len	src/server.h	/^    unsigned long slowlog_max_len;     \/* SLOWLOG max number of items logged *\/$/;"	m	struct:redisServer
slowscripterr	src/server.h	/^    *outofrangeerr, *noscripterr, *loadingerr, *slowscripterr, *bgsaveerr,$/;"	m	struct:sharedObjectsStruct
smooth	deps/jemalloc/include/jemalloc/internal/smoothstep.sh	/^smooth() {$/;"	f
smoother	deps/jemalloc/include/jemalloc/internal/smoothstep.sh	/^smoother() {$/;"	f
smoothest	deps/jemalloc/include/jemalloc/internal/smoothstep.sh	/^smoothest() {$/;"	f
smoothstep_tab	deps/jemalloc/test/unit/smoothstep.c	/^static const uint64_t smoothstep_tab[] = {$/;"	v	file:
smoveCommand	src/t_set.c	/^void smoveCommand(client *c) {$/;"	f
snapshot	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	uint8_t snapshot[LARGE_SNAPSHOT];$/;"	m	struct:foo_large	file:
snarf	deps/pmdk/src/test/match	/^sub snarf {$/;"	s
snd	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^	POBJ_SLIST_ENTRY(struct snode) snd;$/;"	m	struct:snode	file:
sndbuf	src/cluster.h	/^    sds sndbuf;                 \/* Packet send buffer *\/$/;"	m	struct:clusterLink
snode	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^struct snode {$/;"	s	file:
sofd	src/server.h	/^    int sofd;                   \/* Unix socket file descriptor *\/$/;"	m	struct:redisServer
soft_limit_bytes	src/server.h	/^    unsigned long long soft_limit_bytes;$/;"	m	struct:clientBufferLimitsConfig
soft_limit_seconds	src/server.h	/^    time_t soft_limit_seconds;$/;"	m	struct:clientBufferLimitsConfig
solve	deps/lua/test/bisect.lua	/^function solve(f,a,b)$/;"	f
something	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^	int something;$/;"	m	struct:runtime_info	file:
sort	deps/lua/src/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:
sortCommand	src/sort.c	/^void sortCommand(client *c) {$/;"	f
sortCompare	src/sort.c	/^int sortCompare(const void *s1, const void *s2) {$/;"	f
sortGetKeys	src/db.c	/^int *sortGetKeys(struct redisCommand *cmd, robj **argv, int argc, int *numkeys) {$/;"	f
sortPointers	utils/hashtable/rehashing.c	/^int sortPointers(const void *a, const void *b) {$/;"	f
sort_alpha	src/server.h	/^    int sort_alpha;$/;"	m	struct:redisServer
sort_bypattern	src/server.h	/^    int sort_bypattern;$/;"	m	struct:redisServer
sort_comp	deps/lua/src/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:
sort_desc	src/server.h	/^    int sort_desc;$/;"	m	struct:redisServer
sort_global_section	deps/pmdk/utils/sort_solution	/^sub sort_global_section {$/;"	s
sort_gp_asc	src/geo.c	/^static int sort_gp_asc(const void *a, const void *b) {$/;"	f	file:
sort_gp_desc	src/geo.c	/^static int sort_gp_desc(const void *a, const void *b) {$/;"	f	file:
sort_store	src/server.h	/^    int sort_store;$/;"	m	struct:redisServer
sortedq_node_comparer	deps/pmdk/src/test/win_lists/win_lists.c	/^sortedq_node_comparer(TEST_SORTEDQ_NODE *a, TEST_SORTEDQ_NODE *b)$/;"	f	file:
source	deps/lua/src/llex.h	/^  TString *source;  \/* current source name *\/$/;"	m	struct:LexState
source	deps/lua/src/lobject.h	/^  TString  *source;$/;"	m	struct:Proto
source	deps/lua/src/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug
south	deps/geohash-int/geohash.h	/^    GeoHashBits south;$/;"	m	struct:__anon146
south_east	deps/geohash-int/geohash.h	/^    GeoHashBits south_east;$/;"	m	struct:__anon146
south_west	deps/geohash-int/geohash.h	/^    GeoHashBits south_west;$/;"	m	struct:__anon146
space	src/server.h	/^    robj *crlf, *ok, *err, *emptybulk, *czero, *cone, *cnegone, *pong, *space,$/;"	m	struct:sharedObjectsStruct
span	src/server.h	/^        unsigned int span;$/;"	m	struct:zskiplistNode::zskiplistLevel
spare	deps/jemalloc/include/jemalloc/internal/arena.h	/^	arena_chunk_t		*spare;$/;"	m	struct:arena_s
sparklineRender	src/sparkline.c	/^sds sparklineRender(sds output, struct sequence *seq, int columns, int rows, int flags) {$/;"	f
sparklineRenderRange	src/sparkline.c	/^sds sparklineRenderRange(sds output, struct sequence *seq, int rows, int offset, int len, int flags) {$/;"	f
sparklineSequenceAddSample	src/sparkline.c	/^void sparklineSequenceAddSample(struct sequence *seq, double value, char *label) {$/;"	f
spawn_instance	tests/instances.tcl	/^proc spawn_instance {type base_port count {conf {}}} {$/;"	p
spectrum_palette	src/redis-cli.c	/^int *spectrum_palette;$/;"	v
spectrum_palette_color	src/redis-cli.c	/^int spectrum_palette_color[] = {0,233,234,235,237,239,241,243,245,247,144,143,142,184,226,214,208,202,196};$/;"	v
spectrum_palette_color_size	src/redis-cli.c	/^int spectrum_palette_color_size = 19;$/;"	v
spectrum_palette_mono	src/redis-cli.c	/^int spectrum_palette_mono[] = {0,233,234,235,237,239,241,243,245,247,249,251,253};$/;"	v
spectrum_palette_mono_size	src/redis-cli.c	/^int spectrum_palette_mono_size = 13;$/;"	v
spectrum_palette_size	src/redis-cli.c	/^int spectrum_palette_size;$/;"	v
spin_adaptive	deps/jemalloc/include/jemalloc/internal/private_namespace.h	503;"	d
spin_adaptive	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	503;"	d
spin_adaptive	deps/jemalloc/include/jemalloc/internal/spin.h	/^spin_adaptive(spin_t *spin)$/;"	f
spin_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	504;"	d
spin_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	504;"	d
spin_init	deps/jemalloc/include/jemalloc/internal/spin.h	/^spin_init(spin_t *spin)$/;"	f
spin_s	deps/jemalloc/include/jemalloc/internal/spin.h	/^struct spin_s {$/;"	s
spin_t	deps/jemalloc/include/jemalloc/internal/spin.h	/^typedef struct spin_s spin_t;$/;"	t	typeref:struct:spin_s
split	deps/jemalloc/include/jemalloc/jemalloc.h	/^	chunk_split_t		*split;$/;"	m	struct:__anon14
split	deps/jemalloc/include/jemalloc/jemalloc_typedefs.h	/^	chunk_split_t		*split;$/;"	m	struct:__anon1
spopCommand	src/t_set.c	/^void spopCommand(client *c) {$/;"	f
spopWithCountCommand	src/t_set.c	/^void spopWithCountCommand(client *c) {$/;"	f
spt_clearenv	src/setproctitle.c	/^static int spt_clearenv(void) {$/;"	f	file:
spt_copyargs	src/setproctitle.c	/^static int spt_copyargs(int argc, char *argv[]) {$/;"	f	file:
spt_copyenv	src/setproctitle.c	/^static int spt_copyenv(char *oldenv[]) {$/;"	f	file:
spt_init	src/setproctitle.c	/^void spt_init(int argc, char *argv[]) {$/;"	f
spt_min	src/setproctitle.c	/^static inline size_t spt_min(size_t a, size_t b) {$/;"	f	file:
sptr	src/t_zset.c	/^                unsigned char *eptr, *sptr;$/;"	m	struct:__anon152::__anon153::_iterzset::__anon156	file:
srandmemberCommand	src/t_set.c	/^void srandmemberCommand(client *c) {$/;"	f
srandmemberWithCountCommand	src/t_set.c	/^void srandmemberWithCountCommand(client *c) {$/;"	f
src	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_minimal.c	/^	const void *src;$/;"	m	struct:create_args	file:
src	deps/pmdk/src/tools/daxio/daxio.c	/^	struct daxio_device src;$/;"	m	struct:daxio_context	typeref:struct:daxio_context::daxio_device	file:
src	src/scripting.c	/^    sds *src;   \/* Lua script source code split by line. *\/$/;"	m	struct:ldbState	file:
src_addr	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	unsigned char *src_addr;$/;"	m	struct:pmem_bench	file:
src_end	deps/lua/src/lstrlib.c	/^  const char *src_end;  \/* end (`\\0') of source string *\/$/;"	m	struct:MatchState	file:
src_init	deps/lua/src/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:
src_mode	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	char *src_mode;$/;"	m	struct:pmem_args	file:
src_off	deps/pmdk/src/benchmarks/pmem_memcpy.cpp	/^	size_t src_off;$/;"	m	struct:pmem_args	file:
srcroot	deps/jemalloc/Makefile	/^srcroot := $/;"	m
sremCommand	src/server.h	/^                        *rpopCommand, *sremCommand, *execCommand;$/;"	m	struct:redisServer	typeref:struct:redisServer::
sremCommand	src/t_set.c	/^void sremCommand(client *c) {$/;"	f
srv	tests/test_helper.tcl	/^proc srv {args} {$/;"	p
srv_fini	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.c	/^srv_fini(struct server *s)$/;"	f
srv_init	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.c	/^srv_init(void)$/;"	f
srv_recv	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.c	/^srv_recv(struct server *s, void *buff, size_t len)$/;"	f
srv_send	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test_common.c	/^srv_send(struct server *s, const void *buff, size_t len)$/;"	f
sscanCommand	src/t_set.c	/^void sscanCommand(client *c) {$/;"	f
sscanf_os	deps/pmdk/src/common/mmap_posix.c	/^static const char * const sscanf_os = "%p %p";$/;"	v	file:
sscanf_os	deps/pmdk/src/common/mmap_posix.c	/^static const char * const sscanf_os = "%p-%p";$/;"	v	file:
ssh	deps/pmdk/src/librpmem/rpmem_obc.c	/^	struct rpmem_ssh *ssh;$/;"	m	struct:rpmem_obc	typeref:struct:rpmem_obc::rpmem_ssh	file:
ssize_t	deps/jemalloc/include/jemalloc/internal/jemalloc_internal_decls.h	/^typedef intptr_t ssize_t;$/;"	t
ssize_t	deps/pmdk/src/windows/include/platform.h	/^typedef long long ssize_t;$/;"	t
stack	deps/lua/src/lstate.h	/^  StkId stack;  \/* stack base *\/$/;"	m	struct:lua_State
stack_init	deps/lua/src/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:
stack_last	deps/lua/src/lstate.h	/^  StkId stack_last;  \/* last free slot in the stack *\/$/;"	m	struct:lua_State
stack_nelms	deps/jemalloc/src/tcache.c	/^static unsigned		stack_nelms; \/* Total stack elms per tcache. *\/$/;"	v	file:
stacksize	deps/lua/src/lstate.h	/^  int stacksize;$/;"	m	struct:lua_State
stage	deps/pmdk/src/libpmemobj/tx.c	/^	enum pobj_tx_stage stage;$/;"	m	struct:tx	typeref:enum:tx::pobj_tx_stage	file:
stage_callback	deps/pmdk/src/libpmemobj/tx.c	/^	pmemobj_tx_callback stage_callback;$/;"	m	struct:tx	file:
stage_callback_arg	deps/pmdk/src/libpmemobj/tx.c	/^	void *stage_callback_arg;$/;"	m	struct:tx	file:
star	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^struct star {$/;"	s	file:
stars	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	TOID(struct star) stars;$/;"	m	struct:root	file:
start	deps/pmdk/src/examples/libpmemobj/pi.c	/^	uint64_t start;$/;"	m	struct:pi_task_proto	file:
start	src/redis-benchmark.c	/^    long long start;        \/* Start time of a request *\/$/;"	m	struct:_client	file:
start	src/redis-benchmark.c	/^    long long start;$/;"	m	struct:config	file:
startAppendOnly	src/aof.c	/^int startAppendOnly(void) {$/;"	f
startBgsaveForReplication	src/replication.c	/^int startBgsaveForReplication(int mincapa) {$/;"	f
startLoading	src/rdb.c	/^void startLoading(FILE *fp) {$/;"	f
start_bg_complex_data	tests/integration/replication-4.tcl	/^proc start_bg_complex_data {host port db ops} {$/;"	p
start_bg_complex_data	tests/integration/replication-psync.tcl	/^proc start_bg_complex_data {host port db ops} {$/;"	p
start_capture	deps/lua/src/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:
start_level	deps/jemalloc/include/jemalloc/internal/rtree.h	/^	unsigned		start_level[RTREE_HEIGHT_MAX];$/;"	m	struct:rtree_s
start_offset	deps/pmdk/src/libpmemlog/log.h	/^	uint64_t start_offset;	\/* start offset of the usable log space *\/$/;"	m	struct:pmemlog
start_routine	deps/pmdk/src/common/os_thread_windows.c	/^	void *(*start_routine)(void *);$/;"	m	struct:__anon84	file:
start_server	tests/support/server.tcl	/^proc start_server {options {code undefined}} {$/;"	p
start_server_and_kill_it	tests/integration/rdb.tcl	/^proc start_server_and_kill_it {overrides code} {$/;"	p
start_server_aof	tests/integration/aof-race.tcl	/^proc start_server_aof {overrides code} {$/;"	p
start_server_aof	tests/integration/aof.tcl	/^proc start_server_aof {overrides code} {$/;"	p
start_server_error	tests/support/server.tcl	/^proc start_server_error {config_file error} {$/;"	p
start_time	src/sentinel.c	/^    mstime_t start_time;    \/* Script execution time if the script is running,$/;"	m	struct:sentinelScriptJob	file:
start_write_load	tests/support/util.tcl	/^proc start_write_load {host port seconds} {$/;"	p
startoff	deps/pmdk/src/libpmemblk/btt.c	/^		uint64_t startoff;	\/* offset to start of arena *\/$/;"	m	struct:btt::arena	file:
startpc	deps/lua/src/lobject.h	/^  int startpc;  \/* first point where variable is active *\/$/;"	m	struct:LocVar
statMode	src/redis-cli.c	/^static void statMode(void) {$/;"	f	file:
stat_evictedkeys	src/server.h	/^    long long stat_evictedkeys;     \/* Number of evicted keys (maxmemory) *\/$/;"	m	struct:redisServer
stat_expiredkeys	src/server.h	/^    long long stat_expiredkeys;     \/* Number of expired keys *\/$/;"	m	struct:redisServer
stat_fork_rate	src/server.h	/^    double stat_fork_rate;          \/* Fork rate in GB\/sec. *\/$/;"	m	struct:redisServer
stat_fork_time	src/server.h	/^    long long stat_fork_time;       \/* Time needed to perform latest fork() *\/$/;"	m	struct:redisServer
stat_keyspace_hits	src/server.h	/^    long long stat_keyspace_hits;   \/* Number of successful lookups of keys *\/$/;"	m	struct:redisServer
stat_keyspace_misses	src/server.h	/^    long long stat_keyspace_misses; \/* Number of failed lookups of keys *\/$/;"	m	struct:redisServer
stat_mode	src/redis-cli.c	/^    int stat_mode;$/;"	m	struct:config	file:
stat_net_input_bytes	src/server.h	/^    long long stat_net_input_bytes; \/* Bytes read from network. *\/$/;"	m	struct:redisServer
stat_net_output_bytes	src/server.h	/^    long long stat_net_output_bytes; \/* Bytes written to network. *\/$/;"	m	struct:redisServer
stat_numcommands	src/server.h	/^    long long stat_numcommands;     \/* Number of processed commands *\/$/;"	m	struct:redisServer
stat_numconnections	src/server.h	/^    long long stat_numconnections;  \/* Number of connections received *\/$/;"	m	struct:redisServer
stat_peak_memory	src/server.h	/^    size_t stat_peak_memory;        \/* Max used memory record *\/$/;"	m	struct:redisServer
stat_rejected_conn	src/server.h	/^    long long stat_rejected_conn;   \/* Clients rejected because of maxclients *\/$/;"	m	struct:redisServer
stat_starttime	src/server.h	/^    time_t stat_starttime;          \/* Server start time *\/$/;"	m	struct:redisServer
stat_sync_full	src/server.h	/^    long long stat_sync_full;       \/* Number of full resyncs with slaves. *\/$/;"	m	struct:redisServer
stat_sync_partial_err	src/server.h	/^    long long stat_sync_partial_err;\/* Number of unaccepted PSYNC requests. *\/$/;"	m	struct:redisServer
stat_sync_partial_ok	src/server.h	/^    long long stat_sync_partial_ok; \/* Number of accepted PSYNC requests. *\/$/;"	m	struct:redisServer
statbuf	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^pmemobjfs_getattr(TOID(struct objfs_inode) inode, struct stat *statbuf)$/;"	s	file:
state	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_tctx_state_t	state;$/;"	m	struct:prof_tctx_s
state	deps/jemalloc/include/jemalloc/internal/tsd.h	/^	tsd_state_t	state;$/;"	m	struct:tsd_s
state	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	enum benchmark_worker_state state;$/;"	m	struct:benchmark_worker	typeref:enum:benchmark_worker::benchmark_worker_state
state	deps/pmdk/src/examples/libpmemblk/assetdb/asset.h	/^	int state;$/;"	m	struct:asset
state	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	TOID(struct state) state;$/;"	m	struct:root	file:
state	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^struct state {$/;"	s	file:
state	deps/pmdk/src/libpmemobj/memops.c	/^	enum operation_state state; \/* operation sanity check *\/$/;"	m	struct:operation_context	typeref:enum:operation_context::operation_state	file:
state	src/cluster.h	/^    int state;            \/* CLUSTER_OK, CLUSTER_FAIL, ... *\/$/;"	m	struct:clusterState
state	src/cluster.h	/^    unsigned char state; \/* Cluster state from the POV of the sender *\/$/;"	m	struct:__anon177
state	src/rio.h	/^            int *state;     \/* Error state of each fd. 0 (if ok) or errno. *\/$/;"	m	struct:_rio::__anon179::__anon182
state	src/sha1.h	/^    uint32_t state[5];$/;"	m	struct:__anon178
state_size	deps/lua/src/lstate.c	27;"	d	file:
statement	deps/lua/src/lparser.c	/^static int statement (LexState *ls) {$/;"	f	file:
static_size	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^static_size(struct pobj_bench *bench_priv, size_t idx)$/;"	f	file:
statnames	deps/lua/src/lbaselib.c	/^static const char *const statnames[] =$/;"	v	file:
stats	deps/jemalloc/include/jemalloc/internal/arena.h	/^	arena_stats_t		stats;$/;"	m	struct:arena_s
stats	deps/jemalloc/include/jemalloc/internal/arena.h	/^	malloc_bin_stats_t	stats;$/;"	m	struct:arena_bin_s
stats	deps/pmdk/src/libpmemobj/obj.h	/^	struct stats *stats;$/;"	m	struct:pmemobjpool	typeref:struct:pmemobjpool::stats
stats	deps/pmdk/src/libpmemobj/palloc.h	/^	struct stats *stats;$/;"	m	struct:palloc_heap	typeref:struct:palloc_heap::stats
stats	deps/pmdk/src/libpmemobj/stats.h	/^struct stats {$/;"	s
stats	deps/pmdk/src/tools/pmempool/info.h	/^		struct pmem_blk_stats stats;$/;"	m	struct:pmem_info::__anon110	typeref:struct:pmem_info::__anon110::pmem_blk_stats
stats	deps/pmdk/src/tools/pmempool/info.h	/^		struct pmem_obj_stats stats;$/;"	m	struct:pmem_info::__anon111	typeref:struct:pmem_info::__anon111::pmem_obj_stats
stats_arena_bins_print	deps/jemalloc/src/stats.c	/^stats_arena_bins_print(void (*write_cb)(void *, const char *), void *cbopaque,$/;"	f	file:
stats_arena_hchunks_print	deps/jemalloc/src/stats.c	/^stats_arena_hchunks_print(void (*write_cb)(void *, const char *),$/;"	f	file:
stats_arena_lruns_print	deps/jemalloc/src/stats.c	/^stats_arena_lruns_print(void (*write_cb)(void *, const char *), void *cbopaque,$/;"	f	file:
stats_arena_print	deps/jemalloc/src/stats.c	/^stats_arena_print(void (*write_cb)(void *, const char *), void *cbopaque,$/;"	f	file:
stats_arenas_i_bins_j_index	deps/jemalloc/src/ctl.c	/^stats_arenas_i_bins_j_index(tsdn_t *tsdn, const size_t *mib, size_t miblen,$/;"	f	file:
stats_arenas_i_bins_j_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t stats_arenas_i_bins_j_node[] = {$/;"	v	file:
stats_arenas_i_bins_node	deps/jemalloc/src/ctl.c	/^static const ctl_indexed_node_t stats_arenas_i_bins_node[] = {$/;"	v	file:
stats_arenas_i_hchunks_j_index	deps/jemalloc/src/ctl.c	/^stats_arenas_i_hchunks_j_index(tsdn_t *tsdn, const size_t *mib, size_t miblen,$/;"	f	file:
stats_arenas_i_hchunks_j_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t stats_arenas_i_hchunks_j_node[] = {$/;"	v	file:
stats_arenas_i_hchunks_node	deps/jemalloc/src/ctl.c	/^static const ctl_indexed_node_t stats_arenas_i_hchunks_node[] = {$/;"	v	file:
stats_arenas_i_huge_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t stats_arenas_i_huge_node[] = {$/;"	v	file:
stats_arenas_i_index	deps/jemalloc/src/ctl.c	/^stats_arenas_i_index(tsdn_t *tsdn, const size_t *mib, size_t miblen, size_t i)$/;"	f	file:
stats_arenas_i_large_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t stats_arenas_i_large_node[] = {$/;"	v	file:
stats_arenas_i_lruns_j_index	deps/jemalloc/src/ctl.c	/^stats_arenas_i_lruns_j_index(tsdn_t *tsdn, const size_t *mib, size_t miblen,$/;"	f	file:
stats_arenas_i_lruns_j_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t stats_arenas_i_lruns_j_node[] = {$/;"	v	file:
stats_arenas_i_lruns_node	deps/jemalloc/src/ctl.c	/^static const ctl_indexed_node_t stats_arenas_i_lruns_node[] = {$/;"	v	file:
stats_arenas_i_metadata_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t stats_arenas_i_metadata_node[] = {$/;"	v	file:
stats_arenas_i_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t stats_arenas_i_node[] = {$/;"	v	file:
stats_arenas_i_small_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t stats_arenas_i_small_node[] = {$/;"	v	file:
stats_arenas_node	deps/jemalloc/src/ctl.c	/^static const ctl_indexed_node_t stats_arenas_node[] = {$/;"	v	file:
stats_bus_messages_received	src/cluster.h	/^    long long stats_bus_messages_received; \/* Num of msg rcvd via cluster bus.*\/$/;"	m	struct:clusterState
stats_bus_messages_sent	src/cluster.h	/^    long long stats_bus_messages_sent;  \/* Num of msg sent via cluster bus. *\/$/;"	m	struct:clusterState
stats_cactive	deps/jemalloc/include/jemalloc/internal/private_namespace.h	505;"	d
stats_cactive	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	505;"	d
stats_cactive	deps/jemalloc/src/stats.c	/^size_t	stats_cactive = 0;$/;"	v
stats_cactive_add	deps/jemalloc/include/jemalloc/internal/private_namespace.h	506;"	d
stats_cactive_add	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	506;"	d
stats_cactive_add	deps/jemalloc/include/jemalloc/internal/stats.h	/^stats_cactive_add(size_t size)$/;"	f
stats_cactive_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	507;"	d
stats_cactive_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	507;"	d
stats_cactive_get	deps/jemalloc/include/jemalloc/internal/stats.h	/^stats_cactive_get(void)$/;"	f
stats_cactive_sub	deps/jemalloc/include/jemalloc/internal/private_namespace.h	508;"	d
stats_cactive_sub	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	508;"	d
stats_cactive_sub	deps/jemalloc/include/jemalloc/internal/stats.h	/^stats_cactive_sub(size_t size)$/;"	f
stats_ctl_register	deps/pmdk/src/libpmemobj/stats.c	/^stats_ctl_register(PMEMobjpool *pop)$/;"	f
stats_delete	deps/pmdk/src/libpmemobj/stats.c	/^stats_delete(PMEMobjpool *pop, struct stats *s)$/;"	f
stats_enabled_parser	deps/pmdk/src/libpmemobj/stats.c	/^stats_enabled_parser(const void *arg, void *dest, size_t dest_size)$/;"	f	file:
stats_general_print	deps/jemalloc/src/stats.c	/^stats_general_print(void (*write_cb)(void *, const char *), void *cbopaque,$/;"	f	file:
stats_new	deps/pmdk/src/libpmemobj/stats.c	/^stats_new(PMEMobjpool *pop)$/;"	f
stats_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t stats_node[] = {$/;"	v	file:
stats_persistent	deps/pmdk/src/libpmemobj/obj.h	/^	struct stats_persistent stats_persistent;$/;"	m	struct:pmemobjpool	typeref:struct:pmemobjpool::stats_persistent
stats_persistent	deps/pmdk/src/libpmemobj/stats.h	/^struct stats_persistent {$/;"	s
stats_print	deps/jemalloc/include/jemalloc/internal/private_namespace.h	509;"	d
stats_print	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	509;"	d
stats_print	deps/jemalloc/src/stats.c	/^stats_print(void (*write_cb)(void *, const char *), void *cbopaque,$/;"	f
stats_print_atexit	deps/jemalloc/src/jemalloc.c	/^stats_print_atexit(void)$/;"	f	file:
stats_print_helper	deps/jemalloc/src/stats.c	/^stats_print_helper(void (*write_cb)(void *, const char *), void *cbopaque,$/;"	f	file:
stats_transient	deps/pmdk/src/libpmemobj/stats.h	/^struct stats_transient {$/;"	s
status	deps/lua/src/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:
status	deps/lua/src/ldump.c	/^ int status;$/;"	m	struct:__anon34	file:
status	deps/lua/src/lstate.h	/^  lu_byte status;$/;"	m	struct:lua_State
status	deps/lua/src/lua.c	/^  int status;$/;"	m	struct:Smain	file:
status	deps/pmdk/src/libpmempool/check_util.c	/^	struct pmempool_check_status status;$/;"	m	struct:check_status	typeref:struct:check_status::pmempool_check_status	file:
status	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t status;		\/* response status *\/$/;"	m	struct:rpmem_msg_hdr_resp
status	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^	int status;$/;"	m	struct:req_cb_arg
status	tests/support/util.tcl	/^proc status {r property} {$/;"	p
status_alloc	deps/pmdk/src/libpmempool/check_util.c	/^status_alloc(void)$/;"	f	file:
status_answer_push	deps/pmdk/src/libpmempool/check_util.c	/^status_answer_push(struct check_data *data, struct check_status *st)$/;"	f	file:
status_get	deps/pmdk/src/libpmempool/check.c	/^status_get(PMEMpoolcheck *ppc)$/;"	f	file:
status_msg_info_and_question	deps/pmdk/src/libpmempool/check_util.c	/^status_msg_info_and_question(const char *msg)$/;"	f	file:
status_msg_info_only	deps/pmdk/src/libpmempool/check_util.c	/^status_msg_info_only(const char *msg)$/;"	f	file:
status_push	deps/pmdk/src/libpmempool/check_util.c	/^status_push(PMEMpoolcheck *ppc, struct check_status *st, uint32_t question)$/;"	f	file:
status_release	deps/pmdk/src/libpmempool/check_util.c	/^status_release(struct check_status *status)$/;"	f	file:
std_dev	deps/pmdk/src/benchmarks/benchmark.hpp	/^	double std_dev;$/;"	m	struct:latency
std_dev	deps/pmdk/src/benchmarks/benchmark.hpp	/^	double std_dev;$/;"	m	struct:results
stdbool_h	deps/jemalloc/include/msvc_compat/C99/stdbool.h	2;"	d
stdinarg	src/redis-cli.c	/^    int stdinarg; \/* get last arg from stdin. (-x option) *\/$/;"	m	struct:config	file:
step	deps/geohash-int/geohash.h	/^    uint8_t step;$/;"	m	struct:__anon143
step	deps/pmdk/src/libpmemobj/alloc_class.c	/^	float step;$/;"	m	struct:__anon134	file:
step	deps/pmdk/src/libpmempool/check.c	/^struct step {$/;"	s	file:
step	deps/pmdk/src/libpmempool/check_backup.c	/^struct step {$/;"	s	file:
step	deps/pmdk/src/libpmempool/check_blk.c	/^struct step {$/;"	s	file:
step	deps/pmdk/src/libpmempool/check_btt_info.c	/^struct step {$/;"	s	file:
step	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^struct step {$/;"	s	file:
step	deps/pmdk/src/libpmempool/check_log.c	/^struct step {$/;"	s	file:
step	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^struct step {$/;"	s	file:
step	deps/pmdk/src/libpmempool/check_sds.c	/^struct step {$/;"	s	file:
step	deps/pmdk/src/libpmempool/check_util.c	/^	unsigned step;$/;"	m	struct:check_data	file:
step	deps/pmdk/src/libpmempool/check_util.h	/^	unsigned step;$/;"	m	struct:__anon87
step	deps/pmdk/src/libpmempool/check_write.c	/^struct step {$/;"	s	file:
step	src/scripting.c	/^    int step;   \/* Stop at next line ragardless of breakpoints. *\/$/;"	m	struct:ldbState	file:
step_data	deps/pmdk/src/libpmempool/check_util.c	/^	location step_data;$/;"	m	struct:check_data	file:
step_exe	deps/pmdk/src/libpmempool/check_backup.c	/^step_exe(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
step_exe	deps/pmdk/src/libpmempool/check_blk.c	/^step_exe(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
step_exe	deps/pmdk/src/libpmempool/check_btt_info.c	/^step_exe(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
step_exe	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^step_exe(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
step_exe	deps/pmdk/src/libpmempool/check_log.c	/^step_exe(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
step_exe	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^step_exe(PMEMpoolcheck *ppc, const struct step *steps, location *loc,$/;"	f	file:
step_exe	deps/pmdk/src/libpmempool/check_sds.c	/^step_exe(PMEMpoolcheck *ppc, const struct step *steps, location *loc)$/;"	f	file:
step_exe	deps/pmdk/src/libpmempool/check_write.c	/^step_exe(PMEMpoolcheck *ppc, location *loc)$/;"	f	file:
steps	deps/pmdk/src/libpmempool/check.c	/^static const struct step steps[] = {$/;"	v	typeref:struct:step	file:
steps	deps/pmdk/src/libpmempool/check_backup.c	/^static const struct step steps[] = {$/;"	v	typeref:struct:step	file:
steps	deps/pmdk/src/libpmempool/check_blk.c	/^static const struct step steps[] = {$/;"	v	typeref:struct:step	file:
steps	deps/pmdk/src/libpmempool/check_btt_info.c	/^static const struct step steps[] = {$/;"	v	typeref:struct:step	file:
steps	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^static const struct step steps[] = {$/;"	v	typeref:struct:step	file:
steps	deps/pmdk/src/libpmempool/check_log.c	/^static const struct step steps[] = {$/;"	v	typeref:struct:step	file:
steps	deps/pmdk/src/libpmempool/check_sds.c	/^static const struct step steps[] = {$/;"	v	typeref:struct:step	file:
steps	deps/pmdk/src/libpmempool/check_write.c	/^static const struct step steps[] = {$/;"	v	typeref:struct:step	file:
steps_initial	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^static const struct step steps_initial[] = {$/;"	v	typeref:struct:step	file:
steps_uuids	deps/pmdk/src/libpmempool/check_pool_hdr.c	/^static const struct step steps_uuids[] = {$/;"	v	typeref:struct:step	file:
stop	deps/pmdk/src/examples/libpmemobj/pi.c	/^	uint64_t stop;$/;"	m	struct:pi_task_proto	file:
stop	deps/pmdk/src/libpmemobj/tx.c	/^CTL_READ_HANDLER(stop)(void *ctx, enum ctl_query_source source,$/;"	f	file:
stop	src/ae.h	/^    int stop;$/;"	m	struct:aeEventLoop
stopAppendOnly	src/aof.c	/^void stopAppendOnly(void) {$/;"	f
stopLoading	src/rdb.c	/^void stopLoading(void) {$/;"	f
stop_bg_complex_data	tests/integration/replication-4.tcl	/^proc stop_bg_complex_data {handle} {$/;"	p
stop_bg_complex_data	tests/integration/replication-psync.tcl	/^proc stop_bg_complex_data {handle} {$/;"	p
stop_write_load	tests/support/util.tcl	/^proc stop_write_load {handle} {$/;"	p
stop_writes_on_bgsave_err	src/server.h	/^    int stop_writes_on_bgsave_err;  \/* Don't allow writes if can't BGSAVE *\/$/;"	m	struct:redisServer
store	deps/pmdk/src/libpmemobj/critnib.c	/^store(void *dst, void *src)$/;"	f	file:
store8	deps/pmdk/src/libpmem/memops_generic.c	/^store8(uint64_t *dst, uint64_t c)$/;"	f	file:
store_db	src/server.h	/^POBJ_LAYOUT_BEGIN(store_db);$/;"	v
store_db	src/server.h	/^POBJ_LAYOUT_END(store_db);$/;"	v
store_exit_on_error	deps/pmdk/src/test/unittest/unittest.sh	/^function store_exit_on_error() {$/;"	f
store_item	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^struct store_item {$/;"	s	file:
store_root	deps/pmdk/src/examples/libpmemobj/map/data_store.c	/^struct store_root {$/;"	s	file:
stores_fields	deps/pmdk/src/test/pmreorder_flushes/pmreorder_flushes.c	/^struct stores_fields {$/;"	s	file:
str	deps/hiredis/hiredis.h	/^    char *str; \/* Used for both REDIS_REPLY_ERROR and REDIS_REPLY_STRING *\/$/;"	m	struct:redisReply
str	deps/pmdk/src/benchmarks/map_bench.cpp	/^	const char *str;$/;"	m	struct:__anon115	file:
str	deps/pmdk/src/examples/librpmem/hello.c	/^	char str[STR_SIZE];$/;"	m	struct:hello_t	file:
str	deps/pmdk/src/include/libpmempool.h	/^	} str;$/;"	m	struct:pmempool_check_statusU	typeref:struct:pmempool_check_statusU::__anon47
str	deps/pmdk/src/include/libpmempool.h	/^	} str;$/;"	m	struct:pmempool_check_statusW	typeref:struct:pmempool_check_statusW::__anon48
str	deps/pmdk/src/librpmem/rpmem_util.c	/^	const char *str;$/;"	m	struct:rpmem_err_str_errno	file:
str	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^typedef void (*fn_tx_strdup)(TOID(char) *str, const char *s,$/;"	t	file:
str	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^	char *str;	\/* string data to write *\/$/;"	m	struct:ddmap_context	file:
str	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	char *str;$/;"	m	struct:pmemspoil_list	file:
str2op	deps/pmdk/src/examples/librpmem/basic.c	/^static const char *str2op[] = {$/;"	v	file:
str2pmempool_feature	deps/pmdk/src/test/libpmempool_feature/libpmempool_feature.c	/^str2pmempool_feature(const char *app, const char *str)$/;"	f	file:
str2type	deps/pmdk/src/test/pmem_is_pmem_posix/pmem_is_pmem_posix.c	/^str2type(char *str)$/;"	f	file:
str2wait	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^str2wait(const char *str)$/;"	f	file:
strEncoding	src/object.c	/^char *strEncoding(int encoding) {$/;"	f
str_2_pmempool_feature_map	deps/pmdk/src/common/pool_hdr.c	/^static const char *str_2_pmempool_feature_map[] = {$/;"	v	file:
str_2_pool_attr_index	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^str_2_pool_attr_index(const char *str)$/;"	f	file:
str_bsize	deps/pmdk/src/tools/pmempool/create.c	/^	char *str_bsize;$/;"	m	struct:pmempool_create	file:
str_buff	deps/pmdk/src/benchmarks/clo.cpp	/^static char str_buff[STR_BUFF_SIZE];$/;"	v	file:
str_byte	deps/lua/src/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:
str_char	deps/lua/src/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:
str_check	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^str_check(const char *str)$/;"	f	file:
str_checkname	deps/lua/src/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:
str_dump	deps/lua/src/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:
str_find	deps/lua/src/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:
str_find_aux	deps/lua/src/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:
str_format	deps/lua/src/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:
str_gsub	deps/lua/src/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:
str_insert	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^str_insert(const char *str)$/;"	f	file:
str_insert_random	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^str_insert_random(const char *str)$/;"	f	file:
str_len	deps/lua/src/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:
str_lower	deps/lua/src/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:
str_match	deps/lua/src/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:
str_mode	deps/pmdk/src/tools/pmempool/create.c	/^	char *str_mode;$/;"	m	struct:pmempool_create	file:
str_rebuild	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^str_rebuild(const char *str)$/;"	f	file:
str_remove	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^str_remove(const char *str)$/;"	f	file:
str_rep	deps/lua/src/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:
str_replace_home	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^str_replace_home(char *haystack, const char *home_dir)$/;"	f	file:
str_reverse	deps/lua/src/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:
str_size	deps/pmdk/src/tools/pmempool/create.c	/^	char *str_size;$/;"	m	struct:pmempool_create	file:
str_sub	deps/lua/src/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:
str_type	deps/pmdk/src/tools/pmempool/create.c	/^	char *str_type;$/;"	m	struct:pmempool_create	file:
str_upper	deps/lua/src/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:
strbuf_allocated	deps/lua/src/strbuf.h	/^static inline int strbuf_allocated(strbuf_t *s)$/;"	f
strbuf_append_char	deps/lua/src/strbuf.h	/^static inline void strbuf_append_char(strbuf_t *s, const char c)$/;"	f
strbuf_append_char_unsafe	deps/lua/src/strbuf.h	/^static inline void strbuf_append_char_unsafe(strbuf_t *s, const char c)$/;"	f
strbuf_append_fmt	deps/lua/src/strbuf.c	/^void strbuf_append_fmt(strbuf_t *s, int len, const char *fmt, ...)$/;"	f
strbuf_append_fmt_retry	deps/lua/src/strbuf.c	/^void strbuf_append_fmt_retry(strbuf_t *s, const char *fmt, ...)$/;"	f
strbuf_append_mem	deps/lua/src/strbuf.h	/^static inline void strbuf_append_mem(strbuf_t *s, const char *c, int len)$/;"	f
strbuf_append_mem_unsafe	deps/lua/src/strbuf.h	/^static inline void strbuf_append_mem_unsafe(strbuf_t *s, const char *c, int len)$/;"	f
strbuf_append_string	deps/lua/src/strbuf.c	/^void strbuf_append_string(strbuf_t *s, const char *str)$/;"	f
strbuf_empty_length	deps/lua/src/strbuf.h	/^static inline int strbuf_empty_length(strbuf_t *s)$/;"	f
strbuf_empty_ptr	deps/lua/src/strbuf.h	/^static inline char *strbuf_empty_ptr(strbuf_t *s)$/;"	f
strbuf_ensure_empty_length	deps/lua/src/strbuf.h	/^static inline void strbuf_ensure_empty_length(strbuf_t *s, int len)$/;"	f
strbuf_ensure_null	deps/lua/src/strbuf.h	/^static inline void strbuf_ensure_null(strbuf_t *s)$/;"	f
strbuf_extend_length	deps/lua/src/strbuf.h	/^static inline void strbuf_extend_length(strbuf_t *s, int len)$/;"	f
strbuf_free	deps/lua/src/strbuf.c	/^void strbuf_free(strbuf_t *s)$/;"	f
strbuf_free_to_string	deps/lua/src/strbuf.c	/^char *strbuf_free_to_string(strbuf_t *s, int *len)$/;"	f
strbuf_init	deps/lua/src/strbuf.c	/^void strbuf_init(strbuf_t *s, int len)$/;"	f
strbuf_length	deps/lua/src/strbuf.h	/^static inline int strbuf_length(strbuf_t *s)$/;"	f
strbuf_new	deps/lua/src/strbuf.c	/^strbuf_t *strbuf_new(int len)$/;"	f
strbuf_reset	deps/lua/src/strbuf.h	/^static inline void strbuf_reset(strbuf_t *s)$/;"	f
strbuf_resize	deps/lua/src/strbuf.c	/^void strbuf_resize(strbuf_t *s, int len)$/;"	f
strbuf_set_increment	deps/lua/src/strbuf.c	/^void strbuf_set_increment(strbuf_t *s, int increment)$/;"	f
strbuf_string	deps/lua/src/strbuf.h	/^static inline char *strbuf_string(strbuf_t *s, int *len)$/;"	f
strbuf_t	deps/lua/src/strbuf.h	/^} strbuf_t;$/;"	t	typeref:struct:__anon29
strdups	deps/pmdk/src/test/set_funcs/set_funcs.c	/^	int strdups;$/;"	m	struct:counters	file:
stress	src/ziplist.c	/^static void stress(int pos, int num, int maxsize, int dnum) {$/;"	f	file:
stressGetKeys	utils/hashtable/rehashing.c	/^void stressGetKeys(dict *d, int times, int *perfect_run, int *approx_run) {$/;"	f
stressers	tests/unit/type/zset.tcl	/^    proc stressers {encoding} {$/;"	p
string	deps/lua/src/lua_cjson.c	/^        const char *string;$/;"	m	union:__anon45::__anon46	file:
string2l	src/util.c	/^int string2l(const char *s, size_t slen, long *lval) {$/;"	f
string2ll	src/util.c	/^int string2ll(const char *s, size_t slen, long long *value) {$/;"	f
stringObjectLen	src/object.c	/^size_t stringObjectLen(robj *o) {$/;"	f
string_len	deps/lua/src/lua_cjson.c	/^    int string_len;$/;"	m	struct:__anon45	file:
string_store	deps/pmdk/src/examples/libpmemobj/string_store_tx_type/layout.h	/^POBJ_LAYOUT_BEGIN(string_store);$/;"	v
string_store	deps/pmdk/src/examples/libpmemobj/string_store_tx_type/layout.h	/^POBJ_LAYOUT_END(string_store);$/;"	v
stringmark	deps/lua/src/lgc.c	40;"	d	file:
stringmatch	src/util.c	/^int stringmatch(const char *pattern, const char *string, int nocase) {$/;"	f
stringmatchlen	src/util.c	/^int stringmatchlen(const char *pattern, int patternLen,$/;"	f
strings_h	deps/jemalloc/include/msvc_compat/strings.h	2;"	d
stringtable	deps/lua/src/lstate.h	/^typedef struct stringtable {$/;"	s
stringtable	deps/lua/src/lstate.h	/^} stringtable;$/;"	t	typeref:struct:stringtable
strip	deps/lua/src/ldump.c	/^ int strip;$/;"	m	struct:__anon34	file:
strip_it	deps/pmdk/src/test/match	/^sub strip_it {$/;"	s
stripping	deps/lua/src/luac.c	/^static int stripping=0;			\/* strip debug information? *\/$/;"	v	file:
strlenCommand	src/t_string.c	/^void strlenCommand(client *c) {$/;"	f
strlib	deps/lua/src/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
strstr2	deps/pmdk/utils/check_license/check-license.c	/^strstr2(const char *str, const char *sub1, const char *sub2,$/;"	f	file:
strt	deps/lua/src/lstate.h	/^  stringtable strt;  \/* hash table for strings *\/$/;"	m	struct:global_State
strtod_buffer_size	deps/lua/src/fpconv.c	/^static int strtod_buffer_size(const char *s)$/;"	f	file:
strtok_r	deps/pmdk/src/windows/include/platform.h	128;"	d
strtold	src/object.c	42;"	d	file:
struct1	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^struct struct1 {$/;"	s	file:
sub	deps/hiredis/async.h	/^    } sub;$/;"	m	struct:redisAsyncContext	typeref:struct:redisAsyncContext::__anon148
subexpr	deps/lua/src/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, unsigned int limit) {$/;"	f	file:
subject	src/server.h	/^    robj *subject;$/;"	m	struct:__anon161
subject	src/server.h	/^    robj *subject;$/;"	m	struct:__anon163
subject	src/server.h	/^    robj *subject;$/;"	m	struct:__anon164
subject	src/t_zset.c	/^    robj *subject;$/;"	m	struct:__anon152	file:
subscribe	tests/unit/pubsub.tcl	/^    proc subscribe {client channels} {$/;"	p
subscribeCommand	src/pubsub.c	/^void subscribeCommand(client *c) {$/;"	f
subscribebulk	src/server.h	/^    *busykeyerr, *oomerr, *plus, *messagebulk, *pmessagebulk, *subscribebulk,$/;"	m	struct:sharedObjectsStruct
substitute_reorder	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    def substitute_reorder(self, order_ops):$/;"	m	class:CollectingState
subtree	deps/jemalloc/include/jemalloc/internal/rtree.h	/^		rtree_node_elm_t	*subtree;$/;"	m	union:rtree_level_s::__anon9
subtree_pun	deps/jemalloc/include/jemalloc/internal/rtree.h	/^		void			*subtree_pun;$/;"	m	union:rtree_level_s::__anon9
suff	deps/pmdk/src/common/util.c	/^	const char *suff;$/;"	m	struct:suff	file:
suff	deps/pmdk/src/common/util.c	/^struct suff {$/;"	s	file:
summary	src/help.h	/^  char *summary;$/;"	m	struct:commandHelp
sunionCommand	src/t_set.c	/^void sunionCommand(client *c) {$/;"	f
sunionDiffGenericCommand	src/t_set.c	/^void sunionDiffGenericCommand(client *c, robj **setkeys, int setnum,$/;"	f
sunionstoreCommand	src/t_set.c	/^void sunionstoreCommand(client *c) {$/;"	f
super	deps/pmdk/src/libpmemobj/container_ravl.c	/^	struct block_container super;$/;"	m	struct:block_container_ravl	typeref:struct:block_container_ravl::block_container	file:
super	deps/pmdk/src/libpmemobj/container_seglists.c	/^	struct block_container super;$/;"	m	struct:block_container_seglists	typeref:struct:block_container_seglists::block_container	file:
super	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^	struct block_container super;$/;"	m	struct:container_test	typeref:struct:container_test::block_container	file:
super_arena_i_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t super_arena_i_node[] = {$/;"	v	file:
super_arenas_bin_i_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t super_arenas_bin_i_node[] = {$/;"	v	file:
super_arenas_hchunk_i_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t super_arenas_hchunk_i_node[] = {$/;"	v	file:
super_arenas_lrun_i_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t super_arenas_lrun_i_node[] = {$/;"	v	file:
super_root_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t super_root_node[] = {$/;"	v	file:
super_stats_arenas_i_bins_j_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t super_stats_arenas_i_bins_j_node[] = {$/;"	v	file:
super_stats_arenas_i_hchunks_j_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t super_stats_arenas_i_hchunks_j_node[] = {$/;"	v	file:
super_stats_arenas_i_lruns_j_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t super_stats_arenas_i_lruns_j_node[] = {$/;"	v	file:
super_stats_arenas_i_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t super_stats_arenas_i_node[] = {$/;"	v	file:
supervised	src/server.h	/^    int supervised;                 \/* 1 if supervised, 0 otherwise. *\/$/;"	m	struct:redisServer
supervised_mode	src/server.h	/^    int supervised_mode;            \/* See SUPERVISED_* *\/$/;"	m	struct:redisServer
supervised_mode_enum	src/config.c	/^configEnum supervised_mode_enum[] = {$/;"	v
supports_map_sync	deps/pmdk/src/test/tools/pmemdetect/pmemdetect.c	/^supports_map_sync(const char *path)$/;"	f	file:
supports_map_sync	deps/pmdk/src/test/unittest/context.py	/^    def supports_map_sync(self, path):$/;"	m	class:ContextBase
svalue	deps/lua/src/lobject.h	211;"	d
swap	deps/jemalloc/test/include/test/SFMT-alti.h	/^JEMALLOC_INLINE void swap(w128_t *array, int size) {$/;"	f
swap	deps/jemalloc/test/src/SFMT.c	/^JEMALLOC_INLINE_C void swap(w128_t *array, int size) {$/;"	f
swap	deps/pmdk/src/benchmarks/map_bench.cpp	69;"	d	file:
swap	src/pqsort.c	78;"	d	file:
swap_mappings	deps/pmdk/src/test/pmem_memcpy/pmem_memcpy.c	/^swap_mappings(char **dest, char **src, size_t size, int fd)$/;"	f	file:
swap_mappings	deps/pmdk/src/test/pmem_memmove/pmem_memmove.c	/^swap_mappings(char **dest, char **src, size_t size, int fd)$/;"	f	file:
swapcode	src/pqsort.c	54;"	d	file:
swapfunc	src/pqsort.c	/^swapfunc(char *a, char *b, size_t n, int swaptype)$/;"	f	file:
swaps	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^	int swaps;$/;"	m	struct:add_entry	file:
swaps_array	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^int *swaps_array = NULL;$/;"	v
sweepgc	deps/lua/src/lstate.h	/^  GCObject **sweepgc;  \/* position of sweep in `rootgc' *\/$/;"	m	struct:global_State
sweeplist	deps/lua/src/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count) {$/;"	f	file:
sweepstrgc	deps/lua/src/lstate.h	/^  int sweepstrgc;  \/* position of sweep in `strt' *\/$/;"	m	struct:global_State
sweepwholelist	deps/lua/src/lgc.c	404;"	d	file:
switch_hyphen	deps/pmdk/src/test/RUNTESTS	/^switch_hyphen() {$/;"	f
symbexec	deps/lua/src/ldebug.c	/^static Instruction symbexec (const Proto *pt, int lastpc, int reg) {$/;"	f	file:
symlink	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	struct objfs_symlink symlink; \/* symlink specific data *\/$/;"	m	struct:objfs_inode	typeref:struct:objfs_inode::objfs_symlink	file:
sync	deps/pmdk/src/rpmem_common/rpmem_fip_lane.h	/^	uint64_t sync;$/;"	m	struct:rpmem_fip_lane
syncCommand	src/replication.c	/^void syncCommand(client *c) {$/;"	f
syncRead	src/syncio.c	/^ssize_t syncRead(int fd, char *ptr, ssize_t size, long long timeout) {$/;"	f
syncReadLine	src/syncio.c	/^ssize_t syncReadLine(int fd, char *ptr, ssize_t size, long long timeout) {$/;"	f
syncWithMaster	src/replication.c	/^void syncWithMaster(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f
syncWrite	src/syncio.c	/^ssize_t syncWrite(int fd, char *ptr, ssize_t size, long long timeout) {$/;"	f
sync_badblocks_assign_healthy_replica	deps/pmdk/src/libpmempool/sync.c	/^sync_badblocks_assign_healthy_replica(struct part_health_status *phs,$/;"	f	file:
sync_badblocks_data	deps/pmdk/src/libpmempool/sync.c	/^sync_badblocks_data(struct pool_set *set, struct poolset_health_status *set_hs)$/;"	f	file:
sync_badblocks_find_healthy_replica	deps/pmdk/src/libpmempool/sync.c	/^sync_badblocks_find_healthy_replica(struct part_health_status *phs,$/;"	f	file:
sync_badblocks_move_vec	deps/pmdk/src/libpmempool/sync.c	/^sync_badblocks_move_vec(struct bb_vec *pbbv_all,$/;"	f	file:
sync_check_bad_blocks_overlap	deps/pmdk/src/libpmempool/sync.c	/^sync_check_bad_blocks_overlap(struct pool_set *set,$/;"	f	file:
sync_cond1	deps/pmdk/src/test/obj_direct/obj_direct.c	/^static os_cond_t sync_cond1;$/;"	v	file:
sync_cond2	deps/pmdk/src/test/obj_direct/obj_direct.c	/^static os_cond_t sync_cond2;$/;"	v	file:
sync_copy_data	deps/pmdk/src/libpmempool/sync.c	/^sync_copy_data(void *src_addr, void *dst_addr, size_t off, size_t len,$/;"	f	file:
sync_mark_part_no_badblocks	deps/pmdk/src/libpmempool/sync.c	/^sync_mark_part_no_badblocks(unsigned repn, unsigned partn,$/;"	f	file:
sync_mark_replica_no_badblocks	deps/pmdk/src/libpmempool/sync.c	/^sync_mark_replica_no_badblocks(unsigned repn,$/;"	f	file:
sync_recalc_badblocks	deps/pmdk/src/libpmempool/sync.c	/^sync_recalc_badblocks(struct pool_set *set,$/;"	f	file:
sync_recreate_header	deps/pmdk/src/libpmempool/sync.c	/^sync_recreate_header(struct pool_set *set, unsigned r, unsigned p,$/;"	f	file:
sync_required	deps/pmdk/src/libpmempool/pmempool.h	/^	unsigned sync_required;$/;"	m	struct:pmempool_check_ctx
syntaxerr	src/server.h	/^    *emptymultibulk, *wrongtypeerr, *nokeyerr, *syntaxerr, *sameobjecterr,$/;"	m	struct:sharedObjectsStruct
sys_siglist	deps/pmdk/src/common/os_windows.c	/^const char * const sys_siglist[] = {$/;"	v
sys_siglist_size	deps/pmdk/src/common/os_windows.c	/^int sys_siglist_size = ARRAYSIZE(sys_siglist);$/;"	v
sysconf	deps/pmdk/src/windows/include/unistd.h	/^sysconf(int p)$/;"	f
syslib	deps/lua/src/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
syslog_enabled	src/server.h	/^    int syslog_enabled;             \/* Is syslog enabled? *\/$/;"	m	struct:redisServer
syslog_facility	src/server.h	/^    int syslog_facility;            \/* Syslog facility *\/$/;"	m	struct:redisServer
syslog_facility_enum	src/config.c	/^configEnum syslog_facility_enum[] = {$/;"	v
syslog_fh	deps/pmdk/src/test/rpmemd_log/rpmemd_log_test.c	/^static FILE *syslog_fh;$/;"	v	file:
syslog_ident	src/server.h	/^    char *syslog_ident;             \/* Syslog ident *\/$/;"	m	struct:redisServer
system_memory_size	src/server.h	/^    size_t system_memory_size;  \/* Total memory in system as reported by OS *\/$/;"	m	struct:redisServer
sz	src/quicklist.h	/^    unsigned int sz;             \/* ziplist size in bytes *\/$/;"	m	struct:quicklistNode
sz	src/quicklist.h	/^    unsigned int sz; \/* LZF size in bytes*\/$/;"	m	struct:quicklistLZF
sz	src/quicklist.h	/^    unsigned int sz;$/;"	m	struct:quicklistEntry
szind_t	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^typedef unsigned szind_t;$/;"	t
szsnad_link	deps/jemalloc/include/jemalloc/internal/extent.h	/^		rb_node(extent_node_t)	szsnad_link;$/;"	m	union:extent_node_s::__anon10
t	deps/lua/src/llex.h	/^  Token t;  \/* current token *\/$/;"	m	struct:LexState
t	deps/lua/src/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:
t	deps/lua/src/lparser.h	/^  int t;  \/* patch list of `exit when true' *\/$/;"	m	struct:expdesc
t	deps/pmdk/src/examples/libpmemobj/libart/art.c	/^TOID(art_leaf) art_minimum(TOID(struct art_tree_root) t);$/;"	v	file:
t	deps/pmdk/src/test/obj_locks/obj_locks.c	/^	os_thread_t t;$/;"	m	struct:thread_args	file:
t0	deps/jemalloc/test/include/test/timer.h	/^	nstime_t t0;$/;"	m	struct:__anon18
t1	deps/jemalloc/test/include/test/timer.h	/^	nstime_t t1;$/;"	m	struct:__anon18
t_id	deps/pmdk/src/test/obj_locks/obj_locks.c	/^	int t_id;$/;"	m	struct:thread_args	file:
t_ops	deps/pmdk/src/libpmemobj/memops.c	/^	struct pmem_ops t_ops; \/* used for transient data processing *\/$/;"	m	struct:operation_context	typeref:struct:operation_context::pmem_ops	file:
tab	deps/jemalloc/include/jemalloc/internal/ckh.h	/^	ckhc_t		*tab;$/;"	m	struct:ckh_s
tab	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^	int tab[ROOT_TAB_SIZE];$/;"	m	struct:root	file:
tab	deps/pmdk/src/test/obj_tx_mt/obj_tx_mt.c	/^static PMEMoid tab;$/;"	v	file:
tab_funcs	deps/lua/src/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
table	deps/hiredis/dict.h	/^    dictEntry **table;$/;"	m	struct:dict
table	src/dict.h	/^    dictEntry **table;$/;"	m	struct:dictht
table	src/dict.h	/^    int table, safe;$/;"	m	struct:dictIterator
table_is_an_array	deps/lua/src/lua_cmsgpack.c	/^int table_is_an_array(lua_State *L) {$/;"	f
tag_error	deps/lua/src/lauxlib.c	/^static void tag_error (lua_State *L, int narg, int tag) {$/;"	f	file:
tags	tests/support/server.tcl	/^proc tags {tags code} {$/;"	p
tail	deps/hiredis/async.h	/^    redisCallback *head, *tail;$/;"	m	struct:redisCallbackList
tail	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^	PMEMoid tail;		\/* object ID of the last log buffer *\/$/;"	m	struct:base	file:
tail	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_macros.c	/^	TOID(struct log) tail;	\/* object ID of the last log buffer *\/$/;"	m	struct:base	file:
tail	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	struct field *tail;$/;"	m	struct:pmemspoil_list	typeref:struct:pmemspoil_list::field	file:
tail	src/adlist.h	/^    listNode *tail;$/;"	m	struct:list
tail	src/quicklist.h	/^    quicklistNode *tail;$/;"	m	struct:quicklist
tail	src/server.h	/^    struct zskiplistNode *header, *tail;$/;"	m	struct:zskiplist	typeref:struct:zskiplist::
tailcalls	deps/lua/src/lstate.h	/^  int tailcalls;  \/* number of tail calls lost under this entry *\/$/;"	m	struct:CallInfo
target	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^	const char *target;$/;"	m	struct:pool_entry	file:
target	src/server.h	/^    int argc, dbid, target;$/;"	m	struct:redisOp
target	src/server.h	/^    robj *target;           \/* The key that should receive the element,$/;"	m	struct:blockingState
tbins	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	tcache_bin_t	tbins[1];	\/* Dynamically sized. *\/$/;"	m	struct:tcache_s
tcache	deps/jemalloc/include/jemalloc/internal/tcache.h	/^		tcache_t	*tcache;$/;"	m	union:tcaches_s::__anon3
tcache_alloc_easy	deps/jemalloc/include/jemalloc/internal/private_namespace.h	510;"	d
tcache_alloc_easy	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	510;"	d
tcache_alloc_easy	deps/jemalloc/include/jemalloc/internal/tcache.h	/^tcache_alloc_easy(tcache_bin_t *tbin, bool *tcache_success)$/;"	f
tcache_alloc_large	deps/jemalloc/include/jemalloc/internal/private_namespace.h	511;"	d
tcache_alloc_large	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	511;"	d
tcache_alloc_large	deps/jemalloc/include/jemalloc/internal/tcache.h	/^tcache_alloc_large(tsd_t *tsd, arena_t *arena, tcache_t *tcache, size_t size,$/;"	f
tcache_alloc_small	deps/jemalloc/include/jemalloc/internal/private_namespace.h	512;"	d
tcache_alloc_small	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	512;"	d
tcache_alloc_small	deps/jemalloc/include/jemalloc/internal/tcache.h	/^tcache_alloc_small(tsd_t *tsd, arena_t *arena, tcache_t *tcache, size_t size,$/;"	f
tcache_alloc_small_hard	deps/jemalloc/include/jemalloc/internal/private_namespace.h	513;"	d
tcache_alloc_small_hard	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	513;"	d
tcache_alloc_small_hard	deps/jemalloc/src/tcache.c	/^tcache_alloc_small_hard(tsdn_t *tsdn, arena_t *arena, tcache_t *tcache,$/;"	f
tcache_arena_associate	deps/jemalloc/src/tcache.c	/^tcache_arena_associate(tsdn_t *tsdn, tcache_t *tcache, arena_t *arena)$/;"	f	file:
tcache_arena_dissociate	deps/jemalloc/src/tcache.c	/^tcache_arena_dissociate(tsdn_t *tsdn, tcache_t *tcache, arena_t *arena)$/;"	f	file:
tcache_arena_reassociate	deps/jemalloc/include/jemalloc/internal/private_namespace.h	514;"	d
tcache_arena_reassociate	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	514;"	d
tcache_arena_reassociate	deps/jemalloc/src/tcache.c	/^tcache_arena_reassociate(tsdn_t *tsdn, tcache_t *tcache, arena_t *oldarena,$/;"	f
tcache_bin_flush_large	deps/jemalloc/include/jemalloc/internal/private_namespace.h	515;"	d
tcache_bin_flush_large	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	515;"	d
tcache_bin_flush_large	deps/jemalloc/src/tcache.c	/^tcache_bin_flush_large(tsd_t *tsd, tcache_bin_t *tbin, szind_t binind,$/;"	f
tcache_bin_flush_small	deps/jemalloc/include/jemalloc/internal/private_namespace.h	516;"	d
tcache_bin_flush_small	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	516;"	d
tcache_bin_flush_small	deps/jemalloc/src/tcache.c	/^tcache_bin_flush_small(tsd_t *tsd, tcache_t *tcache, tcache_bin_t *tbin,$/;"	f
tcache_bin_info	deps/jemalloc/include/jemalloc/internal/private_namespace.h	517;"	d
tcache_bin_info	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	517;"	d
tcache_bin_info	deps/jemalloc/src/tcache.c	/^tcache_bin_info_t	*tcache_bin_info;$/;"	v
tcache_bin_info_s	deps/jemalloc/include/jemalloc/internal/tcache.h	/^struct tcache_bin_info_s {$/;"	s
tcache_bin_info_t	deps/jemalloc/include/jemalloc/internal/tcache.h	/^typedef struct tcache_bin_info_s tcache_bin_info_t;$/;"	t	typeref:struct:tcache_bin_info_s
tcache_bin_s	deps/jemalloc/include/jemalloc/internal/tcache.h	/^struct tcache_bin_s {$/;"	s
tcache_bin_stats_s	deps/jemalloc/include/jemalloc/internal/stats.h	/^struct tcache_bin_stats_s {$/;"	s
tcache_bin_stats_t	deps/jemalloc/include/jemalloc/internal/stats.h	/^typedef struct tcache_bin_stats_s tcache_bin_stats_t;$/;"	t	typeref:struct:tcache_bin_stats_s
tcache_bin_t	deps/jemalloc/include/jemalloc/internal/tcache.h	/^typedef struct tcache_bin_s tcache_bin_t;$/;"	t	typeref:struct:tcache_bin_s
tcache_boot	deps/jemalloc/include/jemalloc/internal/private_namespace.h	518;"	d
tcache_boot	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	518;"	d
tcache_boot	deps/jemalloc/src/tcache.c	/^tcache_boot(tsdn_t *tsdn)$/;"	f
tcache_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	519;"	d
tcache_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	519;"	d
tcache_cleanup	deps/jemalloc/src/tcache.c	/^tcache_cleanup(tsd_t *tsd)$/;"	f
tcache_create	deps/jemalloc/include/jemalloc/internal/private_namespace.h	520;"	d
tcache_create	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	520;"	d
tcache_create	deps/jemalloc/src/tcache.c	/^tcache_create(tsdn_t *tsdn, arena_t *arena)$/;"	f
tcache_create_ctl	deps/jemalloc/src/ctl.c	/^tcache_create_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
tcache_dalloc_large	deps/jemalloc/include/jemalloc/internal/private_namespace.h	521;"	d
tcache_dalloc_large	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	521;"	d
tcache_dalloc_large	deps/jemalloc/include/jemalloc/internal/tcache.h	/^tcache_dalloc_large(tsd_t *tsd, tcache_t *tcache, void *ptr, size_t size,$/;"	f
tcache_dalloc_small	deps/jemalloc/include/jemalloc/internal/private_namespace.h	522;"	d
tcache_dalloc_small	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	522;"	d
tcache_dalloc_small	deps/jemalloc/include/jemalloc/internal/tcache.h	/^tcache_dalloc_small(tsd_t *tsd, tcache_t *tcache, void *ptr, szind_t binind,$/;"	f
tcache_destroy	deps/jemalloc/src/tcache.c	/^tcache_destroy(tsd_t *tsd, tcache_t *tcache)$/;"	f	file:
tcache_destroy_ctl	deps/jemalloc/src/ctl.c	/^tcache_destroy_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
tcache_enabled_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	523;"	d
tcache_enabled_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	523;"	d
tcache_enabled_cleanup	deps/jemalloc/src/tcache.c	/^tcache_enabled_cleanup(tsd_t *tsd)$/;"	f
tcache_enabled_default	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	tcache_enabled_default = 2$/;"	e	enum:__anon2
tcache_enabled_false	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	tcache_enabled_false   = 0, \/* Enable cast to\/from bool. *\/$/;"	e	enum:__anon2
tcache_enabled_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	524;"	d
tcache_enabled_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	524;"	d
tcache_enabled_get	deps/jemalloc/include/jemalloc/internal/tcache.h	/^tcache_enabled_get(void)$/;"	f
tcache_enabled_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	525;"	d
tcache_enabled_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	525;"	d
tcache_enabled_set	deps/jemalloc/include/jemalloc/internal/tcache.h	/^tcache_enabled_set(bool enabled)$/;"	f
tcache_enabled_t	deps/jemalloc/include/jemalloc/internal/tcache.h	/^} tcache_enabled_t;$/;"	t	typeref:enum:__anon2
tcache_enabled_true	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	tcache_enabled_true    = 1,$/;"	e	enum:__anon2
tcache_event	deps/jemalloc/include/jemalloc/internal/private_namespace.h	526;"	d
tcache_event	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	526;"	d
tcache_event	deps/jemalloc/include/jemalloc/internal/tcache.h	/^tcache_event(tsd_t *tsd, tcache_t *tcache)$/;"	f
tcache_event_hard	deps/jemalloc/include/jemalloc/internal/private_namespace.h	527;"	d
tcache_event_hard	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	527;"	d
tcache_event_hard	deps/jemalloc/src/tcache.c	/^tcache_event_hard(tsd_t *tsd, tcache_t *tcache)$/;"	f
tcache_flush	deps/jemalloc/include/jemalloc/internal/private_namespace.h	528;"	d
tcache_flush	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	528;"	d
tcache_flush	deps/jemalloc/include/jemalloc/internal/tcache.h	/^tcache_flush(void)$/;"	f
tcache_flush_ctl	deps/jemalloc/src/ctl.c	/^tcache_flush_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
tcache_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	529;"	d
tcache_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	529;"	d
tcache_get	deps/jemalloc/include/jemalloc/internal/tcache.h	/^tcache_get(tsd_t *tsd, bool create)$/;"	f
tcache_get_hard	deps/jemalloc/include/jemalloc/internal/private_namespace.h	530;"	d
tcache_get_hard	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	530;"	d
tcache_get_hard	deps/jemalloc/src/tcache.c	/^tcache_get_hard(tsd_t *tsd)$/;"	f
tcache_maxclass	deps/jemalloc/include/jemalloc/internal/private_namespace.h	531;"	d
tcache_maxclass	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	531;"	d
tcache_maxclass	deps/jemalloc/src/tcache.c	/^size_t			tcache_maxclass;$/;"	v
tcache_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t	tcache_node[] = {$/;"	v	file:
tcache_ql	deps/jemalloc/include/jemalloc/internal/arena.h	/^	ql_head(tcache_t)	tcache_ql;$/;"	m	struct:arena_s
tcache_s	deps/jemalloc/include/jemalloc/internal/tcache.h	/^struct tcache_s {$/;"	s
tcache_salloc	deps/jemalloc/include/jemalloc/internal/private_namespace.h	532;"	d
tcache_salloc	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	532;"	d
tcache_salloc	deps/jemalloc/src/tcache.c	/^tcache_salloc(tsdn_t *tsdn, const void *ptr)$/;"	f
tcache_stats_merge	deps/jemalloc/include/jemalloc/internal/private_namespace.h	533;"	d
tcache_stats_merge	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	533;"	d
tcache_stats_merge	deps/jemalloc/src/tcache.c	/^tcache_stats_merge(tsdn_t *tsdn, tcache_t *tcache, arena_t *arena)$/;"	f
tcache_t	deps/jemalloc/include/jemalloc/internal/tcache.h	/^typedef struct tcache_s tcache_t;$/;"	t	typeref:struct:tcache_s
tcaches	deps/jemalloc/include/jemalloc/internal/private_namespace.h	534;"	d
tcaches	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	534;"	d
tcaches	deps/jemalloc/src/tcache.c	/^tcaches_t		*tcaches;$/;"	v
tcaches_avail	deps/jemalloc/src/tcache.c	/^static tcaches_t	*tcaches_avail;$/;"	v	file:
tcaches_create	deps/jemalloc/include/jemalloc/internal/private_namespace.h	535;"	d
tcaches_create	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	535;"	d
tcaches_create	deps/jemalloc/src/tcache.c	/^tcaches_create(tsd_t *tsd, unsigned *r_ind)$/;"	f
tcaches_destroy	deps/jemalloc/include/jemalloc/internal/private_namespace.h	536;"	d
tcaches_destroy	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	536;"	d
tcaches_destroy	deps/jemalloc/src/tcache.c	/^tcaches_destroy(tsd_t *tsd, unsigned ind)$/;"	f
tcaches_elm_flush	deps/jemalloc/src/tcache.c	/^tcaches_elm_flush(tsd_t *tsd, tcaches_t *elm)$/;"	f	file:
tcaches_flush	deps/jemalloc/include/jemalloc/internal/private_namespace.h	537;"	d
tcaches_flush	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	537;"	d
tcaches_flush	deps/jemalloc/src/tcache.c	/^tcaches_flush(tsd_t *tsd, unsigned ind)$/;"	f
tcaches_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	538;"	d
tcaches_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	538;"	d
tcaches_get	deps/jemalloc/include/jemalloc/internal/tcache.h	/^tcaches_get(tsd_t *tsd, unsigned ind)$/;"	f
tcaches_past	deps/jemalloc/src/tcache.c	/^static unsigned		tcaches_past;$/;"	v	file:
tcaches_s	deps/jemalloc/include/jemalloc/internal/tcache.h	/^struct tcaches_s {$/;"	s
tcaches_t	deps/jemalloc/include/jemalloc/internal/tcache.h	/^typedef struct tcaches_s tcaches_t;$/;"	t	typeref:struct:tcaches_s
tconcat	deps/lua/src/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:
tcp	deps/hiredis/test.c	/^    } tcp;$/;"	m	struct:config	typeref:struct:config::__anon149	file:
tcp_backlog	src/server.h	/^    int tcp_backlog;            \/* TCP listen() backlog *\/$/;"	m	struct:redisServer
tcpkeepalive	src/server.h	/^    int tcpkeepalive;               \/* Set SO_KEEPALIVE if non-zero. *\/$/;"	m	struct:redisServer
tctx_link	deps/jemalloc/include/jemalloc/internal/prof.h	/^	rb_node(prof_tctx_t)	tctx_link;$/;"	m	struct:prof_tctx_s
tctx_uid	deps/jemalloc/include/jemalloc/internal/prof.h	/^	uint64_t		tctx_uid;$/;"	m	struct:prof_tctx_s
tctx_uid_next	deps/jemalloc/include/jemalloc/internal/prof.h	/^	uint64_t		tctx_uid_next;$/;"	m	struct:prof_tdata_s
tctxs	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_tctx_tree_t	tctxs;$/;"	m	struct:prof_gctx_s
tdata	deps/jemalloc/include/jemalloc/internal/prof.h	/^	prof_tdata_t		*tdata;$/;"	m	struct:prof_tctx_s
tdata_link	deps/jemalloc/include/jemalloc/internal/prof.h	/^	rb_node(prof_tdata_t)	tdata_link;$/;"	m	struct:prof_tdata_s
tdata_locks	deps/jemalloc/src/prof.c	/^static malloc_mutex_t	*tdata_locks;$/;"	v	file:
tdatas	deps/jemalloc/src/prof.c	/^static prof_tdata_tree_t	tdatas;$/;"	v	file:
tdatas_mtx	deps/jemalloc/src/prof.c	/^static malloc_mutex_t	tdatas_mtx;$/;"	v	file:
tell	src/rio.h	/^    off_t (*tell)(struct _rio *);$/;"	m	struct:_rio
test	deps/hiredis/test.c	37;"	d	file:
test	deps/jemalloc/test/include/test/test.h	311;"	d
test	deps/lua/test/factorial.lua	/^function test(x)$/;"	f
test	deps/lua/test/fib.lua	/^function test(s,f)$/;"	f
test	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^test(int fixed_preload, int random_preload, thread_func_t rthread,$/;"	f	file:
test	deps/pmdk/src/test/obj_direct_volatile/obj_direct_volatile.c	/^struct test {$/;"	s	file:
test	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^test(PMEMobjpool *pop, TOID(struct pmem_root) root)$/;"	f	file:
test	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^	test_fun test;$/;"	m	struct:test_list	file:
test	deps/pmdk/src/test/pmem_memcpy/TEST0	/^function test() {$/;"	f
test	deps/pmdk/src/test/pmem_memmove/TEST0	/^function test() {$/;"	f
test	deps/pmdk/src/test/pmem_memset/TEST0	/^function test() {$/;"	f
test	deps/pmdk/src/test/pmem_movnt/TEST0	/^function test() {$/;"	f
test	deps/pmdk/src/test/pmem_movnt_align/TEST0	/^function test() {$/;"	f
test	deps/pmdk/src/test/pmem_movnt_align/TEST1	/^function test() {$/;"	f
test	deps/pmdk/src/test/pmem_movnt_align/TEST2	/^function test() {$/;"	f
test	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^test(const int pm_range[2], const int is_pmem_range[2])$/;"	f	file:
test	deps/pmdk/src/test/util_vec/util_vec.c	/^struct test {$/;"	s	file:
test	deps/pmdk/src/test/util_vecq/util_vecq.c	/^struct test {$/;"	s	file:
test	tests/instances.tcl	/^proc test {descr code} {$/;"	p
test	tests/support/test.tcl	/^proc test {name code {okpattern undefined}} {$/;"	p
test2bits	deps/lua/src/lgc.h	37;"	d
testAMode	deps/lua/src/lopcodes.h	257;"	d
testTMode	deps/lua/src/lopcodes.h	258;"	d
test_1to1000	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_1to1000()$/;"	f	file:
test_FOREACH	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_FOREACH(const char *path)$/;"	f	file:
test_action_api	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^test_action_api(PMEMobjpool *pop)$/;"	f	file:
test_add_direct_macros	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^test_add_direct_macros(PMEMobjpool *pop)$/;"	f	file:
test_aligned_allocs	deps/pmdk/src/test/obj_ctl_alignment/obj_ctl_alignment.c	/^test_aligned_allocs(size_t size, size_t alignment, enum pobj_header_type htype)$/;"	f	file:
test_all	deps/pmdk/src/test/pmem_memcpy/TEST0	/^function test_all() {$/;"	f
test_all	deps/pmdk/src/test/pmem_memmove/TEST0	/^function test_all() {$/;"	f
test_all	deps/pmdk/src/test/pmem_memset/TEST0	/^function test_all() {$/;"	f
test_all	deps/pmdk/src/test/pmem_movnt/TEST0	/^function test_all() {$/;"	f
test_all	deps/pmdk/src/test/pmem_movnt_align/TEST0	/^function test_all() {$/;"	f
test_all	deps/pmdk/src/test/pmem_movnt_align/TEST1	/^function test_all() {$/;"	f
test_all_classes	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	/^test_all_classes(PMEMobjpool *pop)$/;"	f	file:
test_all_log_messages	deps/pmdk/src/test/rpmemd_log/rpmemd_log_test.c	/^test_all_log_messages(void)$/;"	f	file:
test_alloc	deps/pmdk/src/test/obj_out_of_memory/obj_out_of_memory.c	/^test_alloc(PMEMobjpool *pop, size_t size)$/;"	f	file:
test_alloc	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^test_alloc(PMEMobjpool *pop, size_t size)$/;"	f	file:
test_alloc_api	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^test_alloc_api(PMEMobjpool *pop)$/;"	f	file:
test_alloc_cfg_enomem	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^test_alloc_cfg_enomem(const char *unused)$/;"	f	file:
test_alloc_construct	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_alloc_construct(const char *path)$/;"	f	file:
test_alloc_in_constructor	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_alloc_in_constructor(const char *path)$/;"	f	file:
test_alloc_pattern	deps/pmdk/src/test/obj_ctl_debug/obj_ctl_debug.c	/^test_alloc_pattern(PMEMobjpool *pop)$/;"	f	file:
test_allocs	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	/^test_allocs(PMEMobjpool *pop, const char *path)$/;"	f	file:
test_api_macros	deps/pmdk/src/test/obj_action/obj_action.c	/^test_api_macros(PMEMobjpool *pop)$/;"	f	file:
test_append_formatted_commands	deps/hiredis/test.c	/^static void test_append_formatted_commands(struct config config) {$/;"	f	file:
test_apply_pm_policy	deps/pmdk/src/test/rpmemd_util/rpmemd_util_test.c	/^test_apply_pm_policy(struct result *result, int is_pmem)$/;"	f	file:
test_blk	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^test_blk(const char *path)$/;"	f	file:
test_blk	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	/^test_blk(const char *path, int open)$/;"	f	file:
test_blk	deps/pmdk/src/test/set_funcs/set_funcs.c	/^test_blk(const char *path)$/;"	f	file:
test_block_size	deps/pmdk/src/test/obj_memblock/obj_memblock.c	/^test_block_size(void)$/;"	f	file:
test_blocking_connection	deps/hiredis/test.c	/^static void test_blocking_connection(struct config config) {$/;"	f	file:
test_blocking_connection_errors	deps/hiredis/test.c	/^static void test_blocking_connection_errors(void) {$/;"	f	file:
test_blocking_io_errors	deps/hiredis/test.c	/^static void test_blocking_io_errors(struct config config) {$/;"	f	file:
test_bucket_insert_get	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^test_bucket_insert_get(void)$/;"	f	file:
test_bucket_remove	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^test_bucket_remove(void)$/;"	f	file:
test_case	deps/pmdk/src/test/pmem2_config/TESTS.py	/^    test_case = "alloc_cfg_enomem"$/;"	v	class:TEST6
test_case	deps/pmdk/src/test/pmem2_config/TESTS.py	/^    test_case = "cfg_create_and_delete_valid"$/;"	v	class:TEST0
test_case	deps/pmdk/src/test/pmem2_config/TESTS.py	/^    test_case = "delete_null_config"$/;"	v	class:TEST7
test_case	deps/pmdk/src/test/pmem2_config/TESTS.py	/^    test_case = "set_invalid_fd"$/;"	v	class:TEST4
test_case	deps/pmdk/src/test/pmem2_config/TESTS.py	/^    test_case = "set_negative_fd"$/;"	v	class:TEST3
test_case	deps/pmdk/src/test/pmem2_config/TESTS.py	/^    test_case = "set_ro_fd"$/;"	v	class:TEST2
test_case	deps/pmdk/src/test/pmem2_config/TESTS.py	/^    test_case = "set_rw_fd"$/;"	v	class:TEST1
test_case	deps/pmdk/src/test/pmem2_config/TESTS.py	/^    test_case = "set_wronly_fd"$/;"	v	class:TEST5
test_case	deps/pmdk/src/test/pmem2_map/TESTS.py	/^    test_case = "test_empty"$/;"	v	class:TEST0
test_case	deps/pmdk/src/test/unittest/unittest.h	/^struct test_case {$/;"	s
test_cases	deps/pmdk/src/test/pmem2_map/pmem2_map.c	/^static struct test_case test_cases[] = {$/;"	v	typeref:struct:test_case	file:
test_cases	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^static struct test_case test_cases[] = {$/;"	v	typeref:struct:test_case	file:
test_cases	deps/pmdk/src/test/rpmem_fip/rpmem_fip_test.c	/^static struct test_case test_cases[] = {$/;"	v	typeref:struct:test_case	file:
test_cases	deps/pmdk/src/test/rpmem_obc/rpmem_obc_test.c	/^static struct test_case test_cases[] = {$/;"	v	typeref:struct:test_case	file:
test_cases	deps/pmdk/src/test/rpmem_obc_int/rpmem_obc_int.c	/^static struct test_case test_cases[] = {$/;"	v	typeref:struct:test_case	file:
test_cases	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test.c	/^static struct test_case test_cases[] = {$/;"	v	typeref:struct:test_case	file:
test_cfg_create_and_delete_valid	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^test_cfg_create_and_delete_valid(const char *unused)$/;"	f	file:
test_check_dir	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^test_check_dir(const char *root_dir)$/;"	f	file:
test_client_main	tests/test_helper.tcl	/^proc test_client_main server_port {$/;"	p
test_close	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_close(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
test_cluster_publish	tests/cluster/tests/09-pubsub.tcl	/^proc test_cluster_publish {instance instances} {$/;"	p
test_cond	deps/hiredis/test.c	38;"	d	file:
test_cond	src/testhelp.h	44;"	d
test_cond_broadcast	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_cond_broadcast(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_cond_signal	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_cond_signal(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_cond_timedwait	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_cond_timedwait(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_cond_wait	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_cond_wait(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_cond_zero	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_cond_zero(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_config	deps/pmdk/src/test/util_ctl/util_ctl.c	/^CTL_WRITE_HANDLER(test_config)(void *ctx, enum ctl_query_source source,$/;"	f	file:
test_config	deps/pmdk/src/test/util_ctl/util_ctl.c	/^static struct ctl_argument CTL_ARG(test_config) = CTL_ARG_STRING(8);$/;"	v	typeref:struct:CTL_ARG	file:
test_config_complex_arg	deps/pmdk/src/test/util_ctl/util_ctl.c	/^CTL_WRITE_HANDLER(test_config_complex_arg)(void *ctx,$/;"	f	file:
test_config_complex_arg	deps/pmdk/src/test/util_ctl/util_ctl.c	/^static struct ctl_argument CTL_ARG(test_config_complex_arg) = {$/;"	v	typeref:struct:CTL_ARG	file:
test_config_written	deps/pmdk/src/test/util_ctl/util_ctl.c	/^static int test_config_written;$/;"	v	file:
test_constr	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_constr(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
test_constructor	deps/pmdk/src/test/obj_direct_volatile/obj_direct_volatile.c	/^test_constructor(void *ptr, void *arg)$/;"	f	file:
test_constructor	deps/pmdk/src/test/obj_heap_state/obj_heap_state.c	/^test_constructor(PMEMobjpool *pop, void *addr, void *args)$/;"	f	file:
test_constructor	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	/^test_constructor(PMEMobjpool *pop, void *addr, void *args)$/;"	f	file:
test_constructor	deps/pmdk/src/test/obj_out_of_memory/obj_out_of_memory.c	/^test_constructor(PMEMobjpool *pop, void *addr, void *args)$/;"	f	file:
test_container	deps/pmdk/src/test/obj_heap/obj_heap.c	/^test_container(struct block_container *bc, struct palloc_heap *heap)$/;"	f	file:
test_count	deps/jemalloc/test/src/test.c	/^static unsigned		test_count = 0;$/;"	v	file:
test_counts	deps/jemalloc/test/src/test.c	/^static test_status_t	test_counts[test_status_count] = {0, 0, 0};$/;"	v	file:
test_create	deps/pmdk/src/test/obj_memcheck_register/obj_memcheck_register.c	/^test_create(const char *path)$/;"	f	file:
test_create	deps/pmdk/src/test/obj_zones/obj_zones.c	/^test_create(const char *path)$/;"	f	file:
test_create	deps/pmdk/src/test/rpmem_addr_ext/rpmem_addr_ext.c	/^test_create(const char *target, void *pool)$/;"	f	file:
test_create	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_create(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
test_create	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^test_create(const char *root_dir, const char *pool_desc)$/;"	f	file:
test_create_dual	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^test_create_dual(const char *root_dir, const char *pool_desc_1,$/;"	f	file:
test_critnib_new_delete	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_critnib_new_delete(void)$/;"	f	file:
test_ctl_arg_parsers	deps/pmdk/src/test/util_ctl/util_ctl.c	/^test_ctl_arg_parsers()$/;"	f	file:
test_ctl_global_namespace	deps/pmdk/src/test/util_ctl/util_ctl.c	/^test_ctl_global_namespace(struct pool *pop)$/;"	f	file:
test_ctl_parser	deps/pmdk/src/test/util_ctl/util_ctl.c	/^test_ctl_parser(struct pool *pop)$/;"	f	file:
test_dax	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^test_dax(const char *path)$/;"	f	file:
test_deep_persist	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_deep_persist(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
test_default_values	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	/^test_default_values()$/;"	f	file:
test_defer_free	deps/pmdk/src/test/obj_action/obj_action.c	/^test_defer_free(PMEMobjpool *pop)$/;"	f	file:
test_delete_null_config	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^test_delete_null_config(const char *unused)$/;"	f	file:
test_detect	deps/pmdk/src/test/obj_memblock/obj_memblock.c	/^test_detect(void)$/;"	f	file:
test_double_free	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_double_free(const char *path)$/;"	f	file:
test_drain	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_drain(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
test_drain_imp	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_drain_imp(unsigned id, unsigned nthreads)$/;"	f	file:
test_duplicate	deps/pmdk/src/test/obj_action/obj_action.c	/^test_duplicate(PMEMobjpool *pop)$/;"	f	file:
test_emplace	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^test_emplace(void)$/;"	f	file:
test_empty	deps/pmdk/src/test/pmem2_map/pmem2_map.c	/^test_empty(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
test_empty_list	deps/jemalloc/test/unit/ql.c	/^test_empty_list(list_head_t *head)$/;"	f	file:
test_entries_list	deps/jemalloc/test/unit/ql.c	/^test_entries_list(list_head_t *head, list_t *entries, unsigned nentries)$/;"	f	file:
test_entries_ring	deps/jemalloc/test/unit/qr.c	/^test_entries_ring(ring_t *entries)$/;"	f	file:
test_eof	deps/lua/src/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:
test_everything	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^test_everything(const char *path)$/;"	f	file:
test_fail	deps/jemalloc/test/src/test.c	/^test_fail(const char *format, ...)$/;"	f
test_fail	deps/pmdk/src/test/obj_ctl_alignment/obj_ctl_alignment.c	/^test_fail(void)$/;"	f	file:
test_fault_injection	deps/pmdk/src/test/obj_bucket/obj_bucket.c	/^test_fault_injection()$/;"	f	file:
test_fault_injection	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_fault_injection()$/;"	f	file:
test_fault_injection	deps/pmdk/src/test/obj_lane/obj_lane.c	/^test_fault_injection()$/;"	f	file:
test_fault_injection	deps/pmdk/src/test/obj_pool/obj_pool.c	/^test_fault_injection(const char *path, const char *layout, size_t poolsize,$/;"	f	file:
test_fault_injection	deps/pmdk/src/test/util_ctl/util_ctl.c	/^test_fault_injection(struct pool *pop)$/;"	f	file:
test_fault_injection_ravl_node	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^test_fault_injection_ravl_node()$/;"	f	file:
test_fault_injection_ravl_sized	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^test_fault_injection_ravl_sized()$/;"	f	file:
test_ffffffff_and_friends	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_ffffffff_and_friends()$/;"	f	file:
test_file_config	deps/pmdk/src/test/util_ctl/util_ctl.c	/^test_file_config(struct pool *pop)$/;"	f	file:
test_flush	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_flush(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
test_flush_imp	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_flush_imp(unsigned id, unsigned seed, unsigned nthreads, unsigned nops,$/;"	f	file:
test_format_commands	deps/hiredis/test.c	/^static void test_format_commands(void) {$/;"	f	file:
test_free	deps/pmdk/src/test/obj_out_of_memory/obj_out_of_memory.c	/^test_free(PMEMobjpool *pop)$/;"	f	file:
test_free	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^test_free(PMEMobjpool *pop)$/;"	f	file:
test_free	deps/pmdk/src/test/set_funcs/set_funcs.c	/^test_free(void *ptr)$/;"	f	file:
test_free_entry	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_free_entry(void *base, uint64_t *next)$/;"	f	file:
test_fun	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^typedef void (*test_fun)(const char *file);$/;"	t	file:
test_heap	deps/pmdk/src/test/obj_heap/obj_heap.c	/^test_heap(void)$/;"	f	file:
test_heap_with_size	deps/pmdk/src/test/obj_heap/obj_heap.c	/^test_heap_with_size()$/;"	f	file:
test_huge_size	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^test_huge_size(PMEMobjpool *pop)$/;"	f	file:
test_independent_entries	deps/jemalloc/test/unit/qr.c	/^test_independent_entries(ring_t *entries)$/;"	f	file:
test_init	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^test_init(const char *root_dir)$/;"	f	file:
test_insert_bulk_delete	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_insert_bulk_delete()$/;"	f	file:
test_insert_delete	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_insert_delete()$/;"	f	file:
test_insert_delete_random	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_insert_delete_random()$/;"	f	file:
test_insert_get_remove	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_insert_get_remove(void)$/;"	f	file:
test_interactive_cli	tests/integration/redis-cli.tcl	/^    proc test_interactive_cli {name code} {$/;"	p
test_internal_object_mask	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^test_internal_object_mask(PMEMobjpool *pop)$/;"	f	file:
test_invalid_timeout_errors	deps/hiredis/test.c	/^static void test_invalid_timeout_errors(struct config config) {$/;"	f	file:
test_is_selected	src/redis-benchmark.c	/^int test_is_selected(char *name) {$/;"	f
test_junk	deps/jemalloc/test/unit/junk.c	/^test_junk(size_t sz_min, size_t sz_max)$/;"	f	file:
test_key0	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_key0()$/;"	f	file:
test_lane_boot_cleanup_ok	deps/pmdk/src/test/obj_lane/obj_lane.c	/^test_lane_boot_cleanup_ok(void)$/;"	f	file:
test_lane_cleanup_in_separate_thread	deps/pmdk/src/test/obj_lane/obj_lane.c	/^test_lane_cleanup_in_separate_thread(void)$/;"	f	file:
test_lane_hold_release	deps/pmdk/src/test/obj_lane/obj_lane.c	/^test_lane_hold_release(void)$/;"	f	file:
test_lane_info_destroy_in_separate_thread	deps/pmdk/src/test/obj_lane/obj_lane.c	/^test_lane_info_destroy_in_separate_thread(void)$/;"	f	file:
test_lane_sizes	deps/pmdk/src/test/obj_lane/obj_lane.c	/^test_lane_sizes(void)$/;"	f	file:
test_layout	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^POBJ_LAYOUT_BEGIN(test_layout);$/;"	v
test_layout	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^POBJ_LAYOUT_END(test_layout);$/;"	v
test_layout	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^test_layout(void)$/;"	f	file:
test_layout	deps/pmdk/src/test/util_pool_hdr/util_pool_hdr.c	/^test_layout()$/;"	f	file:
test_lazy_load	deps/pmdk/src/test/obj_many_size_allocs/obj_many_size_allocs.c	/^test_lazy_load(PMEMobjpool *pop, const char *path)$/;"	f	file:
test_le_basic	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_le_basic()$/;"	f	file:
test_le_brute	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_le_brute()$/;"	f	file:
test_list	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^static struct test_list {$/;"	s	file:
test_list	deps/pmdk/src/test/win_lists/win_lists.c	/^test_list(void)$/;"	f	file:
test_list_api	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^test_list_api(PMEMobjpool *pop)$/;"	f	file:
test_lists	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_lists(const char *path)$/;"	f	file:
test_ll2string	src/util.c	/^static void test_ll2string(void) {$/;"	f	file:
test_log	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^test_log(const char *path)$/;"	f	file:
test_log	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	/^test_log(const char *path, int open)$/;"	f	file:
test_log	deps/pmdk/src/test/set_funcs/set_funcs.c	/^test_log(const char *path)$/;"	f	file:
test_log_messages	deps/pmdk/src/test/rpmemd_log/rpmemd_log_test.c	/^test_log_messages(enum rpmemd_log_level level)$/;"	f	file:
test_log_type	deps/pmdk/src/test/rpmemd_log/rpmemd_log_test.c	/^enum test_log_type {$/;"	g	file:
test_malloc	deps/pmdk/src/test/set_funcs/set_funcs.c	/^test_malloc(size_t size)$/;"	f	file:
test_malloc_free	deps/pmdk/src/test/obj_zones/obj_zones.c	/^test_malloc_free(const char *path)$/;"	f	file:
test_malloc_free_loop	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^test_malloc_free_loop(size_t size)$/;"	f	file:
test_many	deps/pmdk/src/test/obj_action/obj_action.c	/^test_many(PMEMobjpool *pop, size_t n)$/;"	f	file:
test_many_sets	deps/pmdk/src/test/obj_action/obj_action.c	/^test_many_sets(PMEMobjpool *pop, size_t n)$/;"	f	file:
test_memcheck_bug	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^test_memcheck_bug(void)$/;"	f	file:
test_memcheck_bug2	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^test_memcheck_bug2(void)$/;"	f	file:
test_memory_efficiency	tests/unit/memefficiency.tcl	/^proc test_memory_efficiency {range} {$/;"	p
test_merge_op	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_merge_op(struct operation_context *ctx, struct test_object *object)$/;"	f	file:
test_misc	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^test_misc(void)$/;"	f	file:
test_mmap_anon	deps/pmdk/src/test/mmap/mmap.c	/^test_mmap_anon(int fd)$/;"	f	file:
test_mmap_fixed	deps/pmdk/src/test/mmap/mmap.c	/^test_mmap_fixed(int fd)$/;"	f	file:
test_mmap_fixed	deps/pmdk/src/test/mmap_fixed/mmap_fixed.c	/^test_mmap_fixed(const char *name1, const char *name2, size_t len1, size_t len2)$/;"	f	file:
test_mmap_flags	deps/pmdk/src/test/mmap/mmap.c	/^test_mmap_flags(int fd)$/;"	f	file:
test_mmap_hint	deps/pmdk/src/test/mmap/mmap.c	/^test_mmap_hint(int fd)$/;"	f	file:
test_mmap_len	deps/pmdk/src/test/mmap/mmap.c	/^test_mmap_len(int fd)$/;"	f	file:
test_mmap_prot	deps/pmdk/src/test/mmap/mmap.c	/^test_mmap_prot(int fd, int fd_ro)$/;"	f	file:
test_mmap_prot_anon	deps/pmdk/src/test/mmap/mmap.c	/^test_mmap_prot_anon(void)$/;"	f	file:
test_mmap_scenarios	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^enum test_mmap_scenarios {$/;"	g	file:
test_mmap_shared	deps/pmdk/src/test/mmap/mmap.c	/^test_mmap_shared(int fd)$/;"	f	file:
test_mock_pool_allocs	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^test_mock_pool_allocs(void)$/;"	f	file:
test_mprotect	deps/pmdk/src/test/mmap/mmap.c	/^test_mprotect(int fd, int fd_ro)$/;"	f	file:
test_mprotect_anon	deps/pmdk/src/test/mmap/mmap.c	/^test_mprotect_anon(void)$/;"	f	file:
test_msync	deps/pmdk/src/test/mmap/mmap.c	/^test_msync(int fd)$/;"	f	file:
test_munmap	deps/pmdk/src/test/mmap/mmap.c	/^test_munmap(int fd)$/;"	f	file:
test_mutex_lock	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_mutex_lock(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_mutex_pmem_mapping_register	deps/pmdk/src/test/obj_pmemcheck/obj_pmemcheck.c	/^test_mutex_pmem_mapping_register(PMEMobjpool *pop)$/;"	f	file:
test_mutex_timedlock	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_mutex_timedlock(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_mutex_trylock	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_mutex_trylock(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_mutex_unlock	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_mutex_unlock(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_mutex_zero	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_mutex_zero(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_name	deps/jemalloc/test/src/test.c	/^static const char *	test_name = "";$/;"	v	file:
test_no_malloc_init	deps/jemalloc/test/include/test/test.h	314;"	d
test_nontty_cli	tests/integration/redis-cli.tcl	/^    proc test_nontty_cli {name code} {$/;"	p
test_null_oid	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^test_null_oid(PMEMobjpool *pop)$/;"	f	file:
test_obj	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^test_obj(const char *path)$/;"	f	file:
test_obj	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	/^test_obj(const char *path, int open)$/;"	f	file:
test_obj	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^struct test_obj {$/;"	s	file:
test_obj	deps/pmdk/src/test/set_funcs/set_funcs.c	/^test_obj(const char *path)$/;"	f	file:
test_object	deps/pmdk/src/test/obj_defrag/obj_defrag.c	/^struct test_object$/;"	s	file:
test_object	deps/pmdk/src/test/obj_memops/obj_memops.c	/^struct test_object {$/;"	s	file:
test_offsetof	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^test_offsetof(void)$/;"	f	file:
test_oom_allocs	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^test_oom_allocs(size_t size)$/;"	f	file:
test_oom_resrv	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^test_oom_resrv(size_t size)$/;"	f	file:
test_open	deps/pmdk/src/test/obj_memcheck_register/obj_memcheck_register.c	/^test_open(const char *path)$/;"	f	file:
test_open	deps/pmdk/src/test/obj_zones/obj_zones.c	/^test_open(const char *path)$/;"	f	file:
test_open	deps/pmdk/src/test/rpmem_addr_ext/rpmem_addr_ext.c	/^test_open(const char *target, void *pool)$/;"	f	file:
test_open	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_open(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
test_open	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^test_open(const char *root_dir, const char *pool_desc)$/;"	f	file:
test_open_dual	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^test_open_dual(const char *root_dir, const char *pool_desc_1,$/;"	f	file:
test_open_in_different_process	deps/pmdk/src/test/blk_pool_lock/blk_pool_lock.c	/^test_open_in_different_process(int argc, char **argv, unsigned sleep)$/;"	f	file:
test_open_in_different_process	deps/pmdk/src/test/log_pool_lock/log_pool_lock.c	/^test_open_in_different_process(int argc, char **argv, unsigned sleep)$/;"	f	file:
test_open_in_different_process	deps/pmdk/src/test/obj_pool_lock/obj_pool_lock.c	/^test_open_in_different_process(int argc, char **argv, unsigned sleep)$/;"	f	file:
test_persist	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_persist(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
test_persist_header	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_persist_header(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
test_pm_policy	deps/pmdk/src/test/rpmem_basic/common_pm_policy.sh	/^function test_pm_policy()$/;"	f
test_pmalloc_extras	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^test_pmalloc_extras(PMEMobjpool *pop)$/;"	f	file:
test_pmalloc_first_next	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^test_pmalloc_first_next(PMEMobjpool *pop)$/;"	f	file:
test_predicate	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^test_predicate(void)$/;"	f	file:
test_prep_hdr	deps/pmdk/src/test/obj_memblock/obj_memblock.c	/^test_prep_hdr(void)$/;"	f	file:
test_prepare	deps/pmdk/src/test/rpmem_addr_ext/rpmem_addr_ext.c	/^test_prepare()$/;"	f	file:
test_prng_lg_range_u32	deps/jemalloc/test/unit/prng.c	/^test_prng_lg_range_u32(bool atomic)$/;"	f	file:
test_prng_lg_range_u64	deps/jemalloc/test/unit/prng.c	/^test_prng_lg_range_u64(void)$/;"	f	file:
test_prng_lg_range_zu	deps/jemalloc/test/unit/prng.c	/^test_prng_lg_range_zu(bool atomic)$/;"	f	file:
test_prng_range_u32	deps/jemalloc/test/unit/prng.c	/^test_prng_range_u32(bool atomic)$/;"	f	file:
test_prng_range_u64	deps/jemalloc/test/unit/prng.c	/^test_prng_range_u64(void)$/;"	f	file:
test_prng_range_zu	deps/jemalloc/test/unit/prng.c	/^test_prng_range_zu(bool atomic)$/;"	f	file:
test_psync	tests/integration/replication-psync.tcl	/^proc test_psync {descr duration backlog_size backlog_ttl delay cond diskless reconnect} {$/;"	p
test_read	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_read(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
test_realloc	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^test_realloc(size_t org, size_t dest)$/;"	f	file:
test_realloc	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^test_realloc(PMEMobjpool *pop, size_t size_from, size_t size_to,$/;"	f	file:
test_realloc	deps/pmdk/src/test/set_funcs/set_funcs.c	/^test_realloc(void *ptr, size_t size)$/;"	f	file:
test_realloc_api	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^test_realloc_api(PMEMobjpool *pop)$/;"	f	file:
test_realloc_sizes	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^test_realloc_sizes(PMEMobjpool *pop, uint64_t type_from,$/;"	f	file:
test_recycler	deps/pmdk/src/test/obj_heap/obj_heap.c	/^test_recycler(void)$/;"	f	file:
test_redo	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_redo(PMEMobjpool *pop, struct test_object *object)$/;"	f	file:
test_redo_cleanup_same_size	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_redo_cleanup_same_size(PMEMobjpool *pop, struct test_object *object)$/;"	f	file:
test_remove	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_remove(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
test_remove	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^test_remove(const char *root_dir, const char *pool_desc)$/;"	f	file:
test_remove_nonexist	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_remove_nonexist()$/;"	f	file:
test_reopen	deps/pmdk/src/test/blk_pool_lock/blk_pool_lock.c	/^test_reopen(const char *path)$/;"	f	file:
test_reopen	deps/pmdk/src/test/log_pool_lock/log_pool_lock.c	/^test_reopen(const char *path)$/;"	f	file:
test_reopen	deps/pmdk/src/test/obj_pool_lock/obj_pool_lock.c	/^test_reopen(const char *path)$/;"	f	file:
test_reply_reader	deps/hiredis/test.c	/^static void test_reply_reader(void) {$/;"	f	file:
test_report	src/testhelp.h	48;"	d
test_resv_cancel_huge	deps/pmdk/src/test/obj_action/obj_action.c	/^test_resv_cancel_huge(PMEMobjpool *pop)$/;"	f	file:
test_ro	deps/pmdk/src/test/util_ctl/util_ctl.c	/^CTL_READ_HANDLER(test_ro)(void *ctx, enum ctl_query_source source,$/;"	f	file:
test_root_size	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^test_root_size(PMEMobjpool *pop)$/;"	f	file:
test_runnable	deps/pmdk/src/test/util_ctl/util_ctl.c	/^CTL_RUNNABLE_HANDLER(test_runnable)(void *ctx,$/;"	f	file:
test_rw	deps/pmdk/src/test/util_ctl/util_ctl.c	/^CTL_READ_HANDLER(test_rw)(void *ctx, enum ctl_query_source source,$/;"	f	file:
test_rw	deps/pmdk/src/test/util_ctl/util_ctl.c	/^CTL_WRITE_HANDLER(test_rw)(void *ctx, enum ctl_query_source source,$/;"	f	file:
test_rw	deps/pmdk/src/test/util_ctl/util_ctl.c	/^static struct ctl_argument CTL_ARG(test_rw) = CTL_ARG_INT;$/;"	v	typeref:struct:CTL_ARG	file:
test_rwlock_rdlock	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_rwlock_rdlock(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_rwlock_timedrdlock	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_rwlock_timedrdlock(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_rwlock_timedwrlock	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_rwlock_timedwrlock(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_rwlock_tryrdlock	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_rwlock_tryrdlock(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_rwlock_trywrlock	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_rwlock_trywrlock(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_rwlock_unlock	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_rwlock_unlock(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_rwlock_wrlock	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_rwlock_wrlock(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_rwlock_zero	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_rwlock_zero(PMEMobjpool *pop, void *sync, void *cond)$/;"	f	file:
test_same_only	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_same_only()$/;"	f	file:
test_same_twice	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_same_twice(struct operation_context *ctx, struct test_object *object)$/;"	f	file:
test_same_two	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_same_two()$/;"	f	file:
test_separate_thread	deps/pmdk/src/test/obj_lane/obj_lane.c	/^test_separate_thread(void *arg)$/;"	f	file:
test_server_cron	tests/test_helper.tcl	/^proc test_server_cron {} {$/;"	p
test_server_main	tests/test_helper.tcl	/^proc test_server_main {} {$/;"	p
test_set_attr	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^test_set_attr(const struct test_case *tc, int argc, char *argv[])$/;"	f	file:
test_set_attr	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^test_set_attr(const char *root_dir, const char *pool_desc)$/;"	f	file:
test_set_attr_dual	deps/pmdk/src/test/rpmemd_db/rpmemd_db_test.c	/^test_set_attr_dual(const char *root_dir, const char *pool_desc_1,$/;"	f	file:
test_set_entries	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_set_entries(PMEMobjpool *pop,$/;"	f	file:
test_set_invalid_fd	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^test_set_invalid_fd(const char *file)$/;"	f	file:
test_set_negative_fd	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^test_set_negative_fd(const char *unused)$/;"	f	file:
test_set_ro_fd	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^test_set_ro_fd(const char *file)$/;"	f	file:
test_set_rw_fd	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^test_set_rw_fd(const char *file)$/;"	f	file:
test_set_wronly_fd	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^test_set_wronly_fd(const char *file)$/;"	f	file:
test_setunsetenv	deps/pmdk/src/test/win_common/win_common.c	/^test_setunsetenv(void)$/;"	f	file:
test_size	deps/pmdk/src/test/util_extent/util_extent.c	/^test_size(const char *path, size_t size)$/;"	f	file:
test_skip	deps/jemalloc/test/src/test.c	/^test_skip(const char *format, ...)$/;"	f
test_skip_if	deps/jemalloc/test/include/test/test.h	317;"	d
test_smoke	deps/pmdk/src/test/obj_critnib/obj_critnib.c	/^test_smoke()$/;"	f	file:
test_sortedq	deps/pmdk/src/test/win_lists/win_lists.c	/^test_sortedq(void)$/;"	f
test_spec_compliance	deps/pmdk/src/test/obj_pmalloc_basic/obj_pmalloc_basic.c	/^test_spec_compliance(void)$/;"	f	file:
test_split_entries	deps/jemalloc/test/unit/qr.c	/^test_split_entries(ring_t *entries)$/;"	f	file:
test_st	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^struct test_st {$/;"	s	file:
test_status	deps/jemalloc/test/src/test.c	/^static test_status_t	test_status = test_status_pass;$/;"	v	file:
test_status_count	deps/jemalloc/test/include/test/test.h	/^	test_status_count = 3$/;"	e	enum:__anon20
test_status_fail	deps/jemalloc/test/include/test/test.h	/^	test_status_fail = 2,$/;"	e	enum:__anon20
test_status_pass	deps/jemalloc/test/include/test/test.h	/^	test_status_pass = 0,$/;"	e	enum:__anon20
test_status_skip	deps/jemalloc/test/include/test/test.h	/^	test_status_skip = 1,$/;"	e	enum:__anon20
test_status_string	deps/jemalloc/test/src/test.c	/^test_status_string(test_status_t test_status)$/;"	f	file:
test_status_t	deps/jemalloc/test/include/test/test.h	/^} test_status_t;$/;"	t	typeref:enum:__anon20
test_strdup	deps/pmdk/src/test/set_funcs/set_funcs.c	/^test_strdup(const char *s)$/;"	f	file:
test_stress	deps/pmdk/src/test/obj_ravl/obj_ravl.c	/^test_stress(void)$/;"	f	file:
test_string2l	src/util.c	/^static void test_string2l(void) {$/;"	f	file:
test_string2ll	src/util.c	/^static void test_string2ll(void) {$/;"	f	file:
test_string_config	deps/pmdk/src/test/util_ctl/util_ctl.c	/^test_string_config(struct pool *pop)$/;"	f	file:
test_sync_pop_check	deps/pmdk/src/test/obj_debug/obj_debug.c	/^test_sync_pop_check(unsigned long op_index)$/;"	f	file:
test_t	deps/jemalloc/test/include/test/test.h	/^typedef void (test_t)(void);$/;"	t
test_then_block	deps/lua/src/lparser.c	/^static int test_then_block (LexState *ls) {$/;"	f	file:
test_threads	deps/jemalloc/msvc/projects/vc2015/test_threads/test_threads.cpp	/^int test_threads()$/;"	f
test_throughput	deps/hiredis/test.c	/^static void test_throughput(struct config config) {$/;"	f	file:
test_too_large_file	deps/pmdk/src/test/util_ctl/util_ctl.c	/^test_too_large_file(struct pool *pop)$/;"	f	file:
test_tty_cli	tests/integration/redis-cli.tcl	/^    proc test_tty_cli {name code} {$/;"	p
test_tx_api	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^test_tx_api(PMEMobjpool *pop)$/;"	f	file:
test_tx_corruption_bug	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^test_tx_corruption_bug(PMEMobjpool *pop)$/;"	f	file:
test_type	deps/pmdk/src/test/obj_basic_integration/TESTS.py	/^    test_type = t.Medium$/;"	v	class:BASIC
test_type	deps/pmdk/src/test/obj_defrag/TESTS.py	/^    test_type = t.Medium$/;"	v	class:BASE
test_type	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    test_type = t.Medium$/;"	v	class:ObjDefragAdvancedMt
test_type	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    test_type = t.Medium$/;"	v	class:TEST2
test_type	deps/pmdk/src/test/obj_defrag_advanced/TESTS.py	/^    test_type = t.Short$/;"	v	class:ObjDefragAdvanced
test_type	deps/pmdk/src/test/obj_fragmentation2/TESTS.py	/^    test_type = t.Long$/;"	v	class:BASE
test_type	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    test_type = t.Medium$/;"	v	class:TEST0
test_type	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    test_type = t.Medium$/;"	v	class:TEST1
test_type	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    test_type = t.Medium$/;"	v	class:TEST2
test_type	deps/pmdk/src/test/obj_tx_add_range/TESTS.py	/^    test_type = t.Medium$/;"	v	class:TEST3
test_type	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^    test_type = t.Medium$/;"	v	class:TEST0
test_type	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^    test_type = t.Medium$/;"	v	class:TEST1
test_type	deps/pmdk/src/test/obj_tx_add_range_direct/TESTS.py	/^    test_type = t.Medium$/;"	v	class:TEST2
test_type	deps/pmdk/src/test/obj_tx_user_data/TESTS.py	/^    test_type = t.Short$/;"	v	class:TEST0
test_type	deps/pmdk/src/test/obj_ulog_size/TESTS.py	/^    test_type = t.Medium$/;"	v	class:BASE
test_type	deps/pmdk/src/test/pmem2_config/TESTS.py	/^    test_type = t.Short$/;"	v	class:PMEM2_CONFIG
test_type	deps/pmdk/src/test/pmem2_map/TESTS.py	/^    test_type = t.Short$/;"	v	class:PMEM2_MAP
test_type	deps/pmdk/src/test/pmem_map_file_trunc/TESTS.py	/^    test_type = t.Short$/;"	v	class:TEST0
test_type	deps/pmdk/src/test/scope/TESTS.py	/^    test_type = t.Medium$/;"	v	class:Common
test_type	deps/pmdk/src/test/unittest/basetest.py	/^    test_type = ctx.Medium$/;"	v	class:BaseTest
test_type	deps/pmdk/src/test/win_common/TESTS.py	/^    test_type = t.Medium$/;"	v	class:TEST0
test_undo	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_undo(PMEMobjpool *pop, struct test_object *object)$/;"	f	file:
test_undo_checksum_mismatch	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_undo_checksum_mismatch(PMEMobjpool *pop, struct operation_context *ctx,$/;"	f	file:
test_undo_foreach	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_undo_foreach(struct ulog_entry_base *e, void *arg,$/;"	f	file:
test_undo_large_copy	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_undo_large_copy(PMEMobjpool *pop, struct operation_context *ctx,$/;"	f	file:
test_undo_large_single_copy	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_undo_large_single_copy(struct operation_context *ctx,$/;"	f	file:
test_undo_log_reuse	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_undo_log_reuse()$/;"	f	file:
test_undo_small_multiple_set	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_undo_small_multiple_set(struct operation_context *ctx,$/;"	f	file:
test_undo_small_single_copy	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_undo_small_single_copy(struct operation_context *ctx,$/;"	f	file:
test_undo_small_single_set	deps/pmdk/src/test/obj_memops/obj_memops.c	/^test_undo_small_single_set(struct operation_context *ctx,$/;"	f	file:
test_wo	deps/pmdk/src/test/util_ctl/util_ctl.c	/^CTL_WRITE_HANDLER(test_wo)(void *ctx, enum ctl_query_source source,$/;"	f	file:
test_wo	deps/pmdk/src/test/util_ctl/util_ctl.c	/^static struct ctl_argument CTL_ARG(test_wo) = CTL_ARG_INT;$/;"	v	typeref:struct:CTL_ARG	file:
test_worker	deps/pmdk/src/test/obj_direct/obj_direct.c	/^test_worker(void *arg)$/;"	f	file:
test_worker	deps/pmdk/src/test/obj_direct_volatile/obj_direct_volatile.c	/^test_worker(void *arg)$/;"	f	file:
test_worker	deps/pmdk/src/test/obj_oid_thread/obj_oid_thread.c	/^test_worker(void *arg)$/;"	f	file:
test_worker	deps/pmdk/src/test/obj_pmalloc_rand_mt/obj_pmalloc_rand_mt.c	/^test_worker(void *arg)$/;"	f	file:
test_zero	deps/jemalloc/test/integration/xallocx.c	/^test_zero(size_t szmin, size_t szmax)$/;"	f	file:
test_zero	deps/jemalloc/test/unit/zero.c	/^test_zero(size_t sz_min, size_t sz_max)$/;"	f	file:
testbit	deps/lua/src/lgc.h	34;"	d
testbits	deps/lua/src/lgc.h	29;"	d
testconfig_path	deps/pmdk/src/test/util_ctl/util_ctl.c	/^static char *testconfig_path;$/;"	v	file:
testdir	deps/pmdk/src/test/unittest/context.py	/^    def testdir(self):$/;"	m	class:Context
testnext	deps/lua/src/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:
tests	deps/hiredis/test.c	/^static int tests = 0, fails = 0;$/;"	v	file:
tests	deps/pmdk/src/test/obj_direct_volatile/obj_direct_volatile.c	/^static struct test *tests[TEST_OBJECTS];$/;"	v	typeref:struct:test	file:
tests	src/redis-benchmark.c	/^    char *tests;$/;"	m	struct:config	file:
testsorts	deps/lua/test/sort.lua	/^function testsorts(x)$/;"	f
teststr	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	char teststr[TEST_STR_LEN];$/;"	m	struct:dummy_node	file:
teststr	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	char teststr[TEST_STR_LEN];$/;"	m	struct:dummy_node_c	file:
th	deps/lua/src/lstate.h	/^  struct lua_State th;  \/* thread *\/$/;"	m	union:GCObject	typeref:struct:GCObject::lua_State
thd_create	deps/jemalloc/test/src/thd.c	/^thd_create(thd_t *thd, void *(*proc)(void *), void *arg)$/;"	f
thd_join	deps/jemalloc/test/src/thd.c	/^thd_join(thd_t thd, void **ret)$/;"	f
thd_receiver_start	deps/jemalloc/test/unit/mq.c	/^thd_receiver_start(void *arg)$/;"	f	file:
thd_sender_start	deps/jemalloc/test/unit/mq.c	/^thd_sender_start(void *arg)$/;"	f	file:
thd_start	deps/jemalloc/test/integration/MALLOCX_ARENA.c	/^thd_start(void *arg)$/;"	f
thd_start	deps/jemalloc/test/integration/allocated.c	/^thd_start(void *arg)$/;"	f
thd_start	deps/jemalloc/test/integration/thread_arena.c	/^thd_start(void *arg)$/;"	f
thd_start	deps/jemalloc/test/integration/thread_tcache_enabled.c	/^thd_start(void *arg)$/;"	f
thd_start	deps/jemalloc/test/unit/mtx.c	/^thd_start(void *varg)$/;"	f	file:
thd_start	deps/jemalloc/test/unit/prof_accum.c	/^thd_start(void *varg)$/;"	f	file:
thd_start	deps/jemalloc/test/unit/prof_reset.c	/^thd_start(void *varg)$/;"	f	file:
thd_start	deps/jemalloc/test/unit/prof_thread_name.c	/^thd_start(void *varg)$/;"	f	file:
thd_start	deps/jemalloc/test/unit/stats.c	/^thd_start(void *arg)$/;"	f
thd_start	deps/jemalloc/test/unit/tsd.c	/^thd_start(void *arg)$/;"	f	file:
thd_start_arg_t	deps/jemalloc/test/unit/mtx.c	/^} thd_start_arg_t;$/;"	t	typeref:struct:__anon21	file:
thd_t	deps/jemalloc/test/include/test/thd.h	/^typedef HANDLE thd_t;$/;"	t
thd_t	deps/jemalloc/test/include/test/thd.h	/^typedef pthread_t thd_t;$/;"	t
the1024	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^static uint64_t the1024[1024];$/;"	v	file:
the_end	tests/test_helper.tcl	/^proc the_end {} {$/;"	p
third_field	deps/pmdk/src/test/pmreorder_simple/pmreorder_simple.c	/^	int third_field;$/;"	m	struct:three_field	file:
thislib	deps/lua/src/lua_struct.c	/^static const struct luaL_Reg thislib[] = {$/;"	v	typeref:struct:luaL_Reg	file:
thr_discrim	deps/jemalloc/include/jemalloc/internal/prof.h	/^	uint64_t		thr_discrim;$/;"	m	struct:prof_tctx_s
thr_discrim	deps/jemalloc/include/jemalloc/internal/prof.h	/^	uint64_t		thr_discrim;$/;"	m	struct:prof_tdata_s
thr_uid	deps/jemalloc/include/jemalloc/internal/prof.h	/^	uint64_t		thr_uid;$/;"	m	struct:prof_tctx_s
thr_uid	deps/jemalloc/include/jemalloc/internal/prof.h	/^	uint64_t		thr_uid;$/;"	m	struct:prof_tdata_s
thread	deps/jemalloc/include/jemalloc/internal/tsd.h	/^	pthread_t			thread;$/;"	m	struct:tsd_init_block_s
thread	deps/pmdk/src/benchmarks/benchmark_worker.hpp	/^	os_thread_t thread;$/;"	m	struct:benchmark_worker
thread	deps/pmdk/src/common/os_thread_posix.c	/^	pthread_t thread;$/;"	m	struct:__anon69	file:
thread	deps/pmdk/src/libpmemobj/heap.c	/^	os_tls_key_t thread;$/;"	m	struct:arenas	file:
thread	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	os_thread_t thread;		\/* thread structure *\/$/;"	m	struct:rpmemd_fip_thread	file:
thread_affinity	deps/pmdk/src/benchmarks/benchmark.hpp	/^	bool thread_affinity;    \/* set worker threads CPU affinity mask *\/$/;"	m	struct:benchmark_args
thread_allocated_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	539;"	d
thread_allocated_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	539;"	d
thread_allocated_cleanup	deps/jemalloc/src/jemalloc.c	/^thread_allocated_cleanup(tsd_t *tsd)$/;"	f
thread_arena_ctl	deps/jemalloc/src/ctl.c	/^thread_arena_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
thread_args	deps/pmdk/src/test/obj_locks/obj_locks.c	/^struct thread_args {$/;"	s	file:
thread_data	deps/pmdk/src/test/obj_lane/obj_lane.c	/^struct thread_data {$/;"	s	file:
thread_deallocated_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	540;"	d
thread_deallocated_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	540;"	d
thread_deallocated_cleanup	deps/jemalloc/src/jemalloc.c	/^thread_deallocated_cleanup(tsd_t *tsd)$/;"	f
thread_func	deps/pmdk/src/benchmarks/benchmark_worker.cpp	/^thread_func(void *arg)$/;"	f	file:
thread_func_t	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^typedef void *(*thread_func_t)(void *);$/;"	t	file:
thread_handle	deps/pmdk/src/common/os_thread_windows.c	/^	HANDLE thread_handle;$/;"	m	struct:__anon84	file:
thread_id	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	unsigned thread_id;$/;"	m	struct:create_n_defrag_params_t	file:
thread_le1	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^thread_le1(void *arg)$/;"	f	file:
thread_le1024	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^thread_le1024(void *arg)$/;"	f	file:
thread_name	deps/jemalloc/include/jemalloc/internal/prof.h	/^	char			*thread_name;$/;"	m	struct:prof_tdata_s
thread_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t	thread_node[] = {$/;"	v	file:
thread_oid	deps/pmdk/src/test/obj_direct/obj_direct.c	/^static PMEMoid thread_oid;$/;"	v	file:
thread_oid	deps/pmdk/src/test/obj_oid_thread/obj_oid_thread.c	/^static PMEMoid thread_oid;$/;"	v	file:
thread_prof_active_ctl	deps/jemalloc/src/ctl.c	/^thread_prof_active_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
thread_prof_name_ctl	deps/jemalloc/src/ctl.c	/^thread_prof_name_ctl(tsd_t *tsd, const size_t *mib, size_t miblen, void *oldp,$/;"	f	file:
thread_prof_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t	thread_prof_node[] = {$/;"	v	file:
thread_read1	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^thread_read1(void *arg)$/;"	f	file:
thread_read1024	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^thread_read1024(void *arg)$/;"	f	file:
thread_read_write_remove	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^thread_read_write_remove(void *arg)$/;"	f	file:
thread_results	deps/pmdk/src/benchmarks/benchmark.hpp	/^struct thread_results {$/;"	s
thread_tcache_enabled_ctl	deps/jemalloc/src/ctl.c	/^thread_tcache_enabled_ctl(tsd_t *tsd, const size_t *mib, size_t miblen,$/;"	f	file:
thread_tcache_flush_ctl	deps/jemalloc/src/ctl.c	/^thread_tcache_flush_ctl(tsd_t *tsd, const size_t *mib, size_t miblen,$/;"	f	file:
thread_tcache_node	deps/jemalloc/src/ctl.c	/^static const ctl_named_node_t	thread_tcache_node[] = {$/;"	v	file:
thread_work_type	deps/pmdk/src/test/obj_lane/obj_lane.c	/^enum thread_work_type {$/;"	g	file:
thread_write1024	deps/pmdk/src/test/obj_critnib_mt/obj_critnib_mt.c	/^thread_write1024(void *arg)$/;"	f	file:
threads	deps/pmdk/src/test/obj_locks/obj_locks.c	/^static struct thread_args threads[NUM_THREADS];$/;"	v	typeref:struct:thread_args	file:
threads	deps/pmdk/src/tools/rpmemd/rpmemd_fip.c	/^	struct rpmemd_fip_thread *threads;$/;"	m	struct:rpmemd_fip	typeref:struct:rpmemd_fip::rpmemd_fip_thread	file:
three_field	deps/pmdk/src/test/pmreorder_simple/pmreorder_simple.c	/^struct three_field {$/;"	s	file:
thres	deps/pmdk/src/benchmarks/benchmark.hpp	/^	struct thread_results **thres;$/;"	m	struct:bench_results	typeref:struct:bench_results::thread_results
threshold	deps/pmdk/src/libpmemobj/tx.c	/^CTL_READ_HANDLER(threshold)(void *ctx,$/;"	f	file:
threshold	deps/pmdk/src/libpmemobj/tx.c	/^CTL_WRITE_HANDLER(threshold)(void *ctx,$/;"	f	file:
threshold	deps/pmdk/src/libpmemobj/tx.c	/^static const struct ctl_argument CTL_ARG(threshold) = CTL_ARG_LONG_LONG;$/;"	v	typeref:struct:CTL_ARG	file:
thvalue	deps/lua/src/lobject.h	101;"	d
tick	deps/jemalloc/include/jemalloc/internal/ticker.h	/^	int32_t	tick;$/;"	m	struct:ticker_s
ticker_copy	deps/jemalloc/include/jemalloc/internal/private_namespace.h	541;"	d
ticker_copy	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	541;"	d
ticker_copy	deps/jemalloc/include/jemalloc/internal/ticker.h	/^ticker_copy(ticker_t *ticker, const ticker_t *other)$/;"	f
ticker_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	542;"	d
ticker_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	542;"	d
ticker_init	deps/jemalloc/include/jemalloc/internal/ticker.h	/^ticker_init(ticker_t *ticker, int32_t nticks)$/;"	f
ticker_read	deps/jemalloc/include/jemalloc/internal/private_namespace.h	543;"	d
ticker_read	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	543;"	d
ticker_read	deps/jemalloc/include/jemalloc/internal/ticker.h	/^ticker_read(const ticker_t *ticker)$/;"	f
ticker_s	deps/jemalloc/include/jemalloc/internal/ticker.h	/^struct ticker_s {$/;"	s
ticker_t	deps/jemalloc/include/jemalloc/internal/ticker.h	/^typedef struct ticker_s ticker_t;$/;"	t	typeref:struct:ticker_s
ticker_tick	deps/jemalloc/include/jemalloc/internal/private_namespace.h	544;"	d
ticker_tick	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	544;"	d
ticker_tick	deps/jemalloc/include/jemalloc/internal/ticker.h	/^ticker_tick(ticker_t *ticker)$/;"	f
ticker_ticks	deps/jemalloc/include/jemalloc/internal/private_namespace.h	545;"	d
ticker_ticks	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	545;"	d
ticker_ticks	deps/jemalloc/include/jemalloc/internal/ticker.h	/^ticker_ticks(ticker_t *ticker, int32_t nticks)$/;"	f
tilt	src/sentinel.c	/^    int tilt;           \/* Are we in TILT mode? *\/$/;"	m	struct:sentinelState	file:
tilt_start_time	src/sentinel.c	/^    mstime_t tilt_start_time;       \/* When TITL started. *\/$/;"	m	struct:sentinelState	file:
time	deps/jemalloc/include/jemalloc/internal/arena.h	/^	ssize_t			time;$/;"	m	struct:arena_decay_s
time	deps/pmdk/src/benchmarks/benchmark.hpp	/^	benchmark_time_t time; \/* total execution time *\/$/;"	m	struct:benchmark_results
time	deps/pmdk/src/examples/libpmemblk/assetdb/asset.h	/^	time_t time;$/;"	m	struct:asset
time	src/bio.c	/^    time_t time; \/* Time at which the job was created. *\/$/;"	m	struct:bio_job	file:
time	src/cluster.h	/^    mstime_t time;             \/* Time of the last report from this node. *\/$/;"	m	struct:clusterNodeFailReport
time	src/latency.h	/^    int32_t time; \/* We don't use time_t to force 4 bytes usage everywhere. *\/$/;"	m	struct:latencySample
time	src/slowlog.h	/^    time_t time;        \/* Unix time at which the query was executed. *\/$/;"	m	struct:slowlogEntry
timeCommand	src/server.c	/^void timeCommand(client *c) {$/;"	f
timeEventHead	src/ae.h	/^    aeTimeEvent *timeEventHead;$/;"	m	struct:aeEventLoop
timeEventNextId	src/ae.h	/^    long long timeEventNextId;$/;"	m	struct:aeEventLoop
timeInMilliseconds	src/dict.c	/^long long timeInMilliseconds(void) {$/;"	f
timeProc	src/ae.h	/^    aeTimeProc *timeProc;$/;"	m	struct:aeTimeEvent
time_func	deps/jemalloc/test/stress/microbench.c	/^time_func(timedelta_t *timer, uint64_t nwarmup, uint64_t niter,$/;"	f
time_hi_and_ver	deps/pmdk/src/common/uuid.h	/^	uint16_t time_hi_and_ver;$/;"	m	struct:uuid
time_independent_strcmp	src/server.c	/^int time_independent_strcmp(char *a, char *b) {$/;"	f
time_low	deps/pmdk/src/common/uuid.h	/^	uint32_t time_low;$/;"	m	struct:uuid
time_mid	deps/pmdk/src/common/uuid.h	/^	uint16_t time_mid;$/;"	m	struct:uuid
time_mock	deps/jemalloc/test/unit/decay.c	/^static nstime_t time_mock;$/;"	v	file:
timed_check_worker	deps/pmdk/src/test/obj_sync/obj_sync.c	/^timed_check_worker(void *arg)$/;"	f	file:
timed_write_worker	deps/pmdk/src/test/obj_sync/obj_sync.c	/^timed_write_worker(void *arg)$/;"	f	file:
timedelta_t	deps/jemalloc/test/include/test/timer.h	/^} timedelta_t;$/;"	t	typeref:struct:__anon18
timeout	deps/hiredis/test.c	/^        struct timeval timeout;$/;"	m	struct:config::__anon149	typeref:struct:config::__anon149::timeval	file:
timeout	src/server.h	/^    mstime_t timeout;       \/* Blocking operation timeout. If UNIX current time$/;"	m	struct:blockingState
timer	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	uint32_t timer; \/* alien spawn timer *\/$/;"	m	struct:game_state	file:
timer	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	uint32_t timer; \/* movement timer *\/$/;"	m	struct:alien	file:
timer	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	uint32_t timer; \/* movement timer *\/$/;"	m	struct:bullet	file:
timer	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	uint32_t timer; \/* weapon cooldown *\/$/;"	m	struct:player	file:
timer	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	unsigned timer;$/;"	m	struct:bullet	file:
timer	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	unsigned timer;$/;"	m	struct:player	file:
timer	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	unsigned timer;$/;"	m	struct:star	file:
timer	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	unsigned timer;$/;"	m	struct:state	file:
timer_ratio	deps/jemalloc/test/src/timer.c	/^timer_ratio(timedelta_t *a, timedelta_t *b, char *buf, size_t buflen)$/;"	f
timer_start	deps/jemalloc/test/src/timer.c	/^timer_start(timedelta_t *timer)$/;"	f
timer_stop	deps/jemalloc/test/src/timer.c	/^timer_stop(timedelta_t *timer)$/;"	f
timer_tick	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^timer_tick(uint32_t *timer)$/;"	f	file:
timer_tick	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^timer_tick(unsigned *timer)$/;"	f	file:
timer_usec	deps/jemalloc/test/src/timer.c	/^timer_usec(const timedelta_t *timer)$/;"	f
timestamp	deps/pmdk/src/examples/libpmemlog/logfile/logentry.h	/^	time_t timestamp;$/;"	m	struct:logentry
tinsert	deps/lua/src/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:
title	src/redis-benchmark.c	/^    const char *title;$/;"	m	struct:config	file:
tmname	deps/lua/src/lstate.h	/^  TString *tmname[TM_N];  \/* array with tag-method names *\/$/;"	m	struct:global_State
tmp	deps/lua/src/lua_cjson.c	/^    strbuf_t *tmp;    \/* Temporary storage for strings *\/$/;"	m	struct:__anon44	file:
tmpdir	tests/support/tmpfile.tcl	/^proc tmpdir {basename} {$/;"	p
tmpfile	tests/support/tmpfile.tcl	/^proc tmpfile {basename} {$/;"	p
tmudata	deps/lua/src/lstate.h	/^  GCObject *tmudata;  \/* last element of list of userdata to be GC *\/$/;"	m	struct:global_State
tnd	deps/pmdk/src/examples/libpmemobj/linkedlist/fifo.c	/^	POBJ_TAILQ_ENTRY(struct tqnode) tnd;$/;"	m	struct:tqnode	file:
tnd	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^	POBJ_TAILQ_ENTRY(struct tqnode) tnd;$/;"	m	struct:tqnode	file:
toIntType	src/redis-cli.c	/^static int toIntType(char *key, char *type) {$/;"	f	file:
to_free	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^	void *to_free;$/;"	m	struct:free_info	file:
to_leaf	deps/pmdk/src/libpmemobj/critnib.c	/^to_leaf(struct critnib_node *n)$/;"	f	file:
to_real1	deps/jemalloc/test/include/test/SFMT.h	/^JEMALLOC_INLINE double to_real1(uint32_t v)$/;"	f
to_real2	deps/jemalloc/test/include/test/SFMT.h	/^JEMALLOC_INLINE double to_real2(uint32_t v)$/;"	f
to_real3	deps/jemalloc/test/include/test/SFMT.h	/^JEMALLOC_INLINE double to_real3(uint32_t v)$/;"	f
to_res53	deps/jemalloc/test/include/test/SFMT.h	/^JEMALLOC_INLINE double to_res53(uint64_t v) $/;"	f
to_res53_mix	deps/jemalloc/test/include/test/SFMT.h	/^JEMALLOC_INLINE double to_res53_mix(uint32_t x, uint32_t y) $/;"	f
to_s	src/redis-trib.rb	/^    def to_s$/;"	f	class:ClusterNode
tobj	deps/pmdk/src/test/obj_debug/obj_debug.c	/^struct tobj {$/;"	s	file:
todo	deps/pmdk/src/examples/libpmemobj/pi.c	/^	POBJ_LIST_ENTRY(struct pi_task) todo;$/;"	m	struct:pi_task	file:
todo	deps/pmdk/src/examples/libpmemobj/pi.c	/^	POBJ_LIST_HEAD(todo, struct pi_task) todo;$/;"	m	struct:pi	file:
todo_before_sleep	src/cluster.h	/^    int todo_before_sleep; \/* Things to do in clusterBeforeSleep(). *\/$/;"	m	struct:clusterState
tofile	deps/lua/src/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:
tofilep	deps/lua/src/liolib.c	54;"	d	file:
token	deps/lua/src/llex.h	/^  int token;$/;"	m	struct:Token
tonumber	deps/lua/src/lvm.h	18;"	d
top	deps/lua/src/lstate.h	/^  StkId	top;  \/* top for this function *\/$/;"	m	struct:CallInfo
top	deps/lua/src/lstate.h	/^  StkId top;  \/* first free slot in the stack *\/$/;"	m	struct:lua_State
toproto	deps/lua/src/luac.c	117;"	d	file:
tostate	deps/lua/src/lstate.c	29;"	d	file:
tostore	deps/lua/src/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:
tostring	deps/lua/src/lvm.h	16;"	d
total	deps/pmdk/src/benchmarks/benchmark.hpp	/^	struct results total;$/;"	m	struct:total_results	typeref:struct:total_results::results
total	deps/pmdk/src/include/libpmemobj/atomic_base.h	/^	size_t total; \/* number of processed objects *\/$/;"	m	struct:pobj_defrag_result
total	deps/pmdk/src/libpmemobj/pmalloc.c	/^CTL_READ_HANDLER(total)(void *ctx,$/;"	f	file:
total	deps/pmdk/src/tools/pmempool/info.h	/^	uint32_t total;		\/* number of processed blocks *\/$/;"	m	struct:pmem_blk_stats
total_logged	deps/pmdk/src/libpmemobj/memops.c	/^	size_t total_logged; \/* total amount of buffer stores in the logs *\/$/;"	m	struct:operation_context	file:
total_results	deps/pmdk/src/benchmarks/benchmark.hpp	/^struct total_results {$/;"	s
totalbytes	deps/lua/src/lstate.h	/^  lu_mem totalbytes;  \/* number of bytes currently allocated *\/$/;"	m	struct:global_State
totlatency	src/redis-benchmark.c	/^    long long totlatency;$/;"	m	struct:config	file:
totlen	src/cluster.h	/^    uint32_t totlen;    \/* Total length of this message *\/$/;"	m	struct:__anon177
touchCommand	src/db.c	/^void touchCommand(client *c) {$/;"	f
touchWatchedKey	src/multi.c	/^void touchWatchedKey(redisDb *db, robj *key) {$/;"	f
touchWatchedKeysOnFlush	src/multi.c	/^void touchWatchedKeysOnFlush(int dbid) {$/;"	f
tqnode	deps/pmdk/src/examples/libpmemobj/linkedlist/fifo.c	/^struct tqnode {$/;"	s	file:
tqnode	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^struct tqnode {$/;"	s	file:
tqueue	deps/pmdk/src/test/ex_linkedlist/ex_linkedlist.c	/^	struct tqueuehead tqueue;$/;"	m	struct:base	typeref:struct:base::tqueuehead	file:
traceback	deps/lua/src/lua.c	/^static int traceback (lua_State *L) {$/;"	f	file:
traceexec	deps/lua/src/lvm.c	/^static void traceexec (lua_State *L, const Instruction *pc) {$/;"	f	file:
traces	src/scripting.c	/^    list *traces; \/* Messages about Redis commands executed since last stop.*\/$/;"	m	struct:ldbState	file:
trackInstantaneousMetric	src/server.c	/^void trackInstantaneousMetric(int metric, long long current_reading) {$/;"	f
trans_stores	deps/pmdk/src/tools/pmreorder/statemachine.py	/^    trans_stores = []$/;"	v	class:State
transaction_data	deps/pmdk/src/test/obj_tx_lock/obj_tx_lock.c	/^struct transaction_data {$/;"	s	file:
transaction_data	deps/pmdk/src/test/obj_tx_locks/obj_tx_locks.c	/^struct transaction_data {$/;"	s	file:
transform_op	deps/pmdk/src/libpmempool/transform.c	/^enum transform_op {$/;"	g	file:
transient	deps/pmdk/src/libpmemobj/stats.h	/^	struct stats_transient *transient;$/;"	m	struct:stats	typeref:struct:stats::stats_transient
transient_ops	deps/pmdk/src/libpmemobj/memops.c	/^	struct operation_log transient_ops; \/* log of transient changes *\/$/;"	m	struct:operation_context	typeref:struct:operation_context::operation_log	file:
translate	deps/pmdk/src/examples/librpmem/hello.c	/^translate(struct hello_t *hello)$/;"	f	file:
traverseclosure	deps/lua/src/lgc.c	/^static void traverseclosure (global_State *g, Closure *cl) {$/;"	f	file:
traverseproto	deps/lua/src/lgc.c	/^static void traverseproto (global_State *g, Proto *f) {$/;"	f	file:
traversestack	deps/lua/src/lgc.c	/^static void traversestack (global_State *g, lua_State *l) {$/;"	f	file:
traversetable	deps/lua/src/lgc.c	/^static int traversetable (global_State *g, Table *h) {$/;"	f	file:
treatstackoption	deps/lua/src/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:
tree	deps/pmdk/src/libpmemobj/container_ravl.c	/^	struct ravl *tree;$/;"	m	struct:block_container_ravl	typeref:struct:block_container_ravl::ravl	file:
tree_iterate	deps/jemalloc/test/unit/rb.c	/^tree_iterate(tree_t *tree)$/;"	f	file:
tree_iterate_cb	deps/jemalloc/test/unit/rb.c	/^tree_iterate_cb(tree_t *tree, node_t *node, void *data)$/;"	f	file:
tree_iterate_reverse	deps/jemalloc/test/unit/rb.c	/^tree_iterate_reverse(tree_t *tree)$/;"	f	file:
tree_map_entry	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^struct tree_map_entry {$/;"	s	file:
tree_map_node	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^struct tree_map_node {$/;"	s	file:
tree_map_node	deps/pmdk/src/examples/libpmemobj/tree_map/ctree_map.c	/^struct tree_map_node {$/;"	s	file:
tree_map_node	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^struct tree_map_node {$/;"	s	file:
tree_map_node	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^struct tree_map_node {$/;"	s	file:
tree_map_node_item	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^struct tree_map_node_item {$/;"	s	file:
tree_recurse	deps/jemalloc/test/unit/rb.c	/^tree_recurse(node_t *node, unsigned black_height, unsigned black_depth)$/;"	f	file:
tree_t	deps/jemalloc/test/unit/rb.c	/^typedef rb_tree(node_t) tree_t;$/;"	t	file:
tremove	deps/lua/src/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:
trim_line_element	deps/pmdk/src/tools/rpmemd/rpmemd_config.c	/^trim_line_element(char *line, uint64_t start, uint64_t end)$/;"	f	file:
trim_list	tests/unit/type/list.tcl	/^        proc trim_list {type min max} {$/;"	p
true	deps/jemalloc/include/msvc_compat/C99/stdbool.h	15;"	d
trunc	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^	bool trunc;$/;"	m	struct:bbtcreate_options	file:
tryObjectEncoding	src/object.c	/^robj *tryObjectEncoding(robj *o) {$/;"	f
tryResizeHashTables	src/server.c	/^void tryResizeHashTables(int dbid) {$/;"	f
try_to_store	deps/pmdk/src/test/log_walker/log_walker.c	/^try_to_store(const void *buf, size_t len, void *arg)$/;"	f	file:
trydecpoint	deps/lua/src/llex.c	/^static void trydecpoint (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
tryfuncTM	deps/lua/src/ldo.c	/^static StkId tryfuncTM (lua_State *L, StkId func) {$/;"	f	file:
ts	deps/lua/src/llex.h	/^  TString *ts;$/;"	m	union:__anon33
ts	deps/lua/src/lstate.h	/^  union TString ts;$/;"	m	union:GCObject	typeref:union:GCObject::TString
tsd	deps/jemalloc/include/jemalloc/internal/tsd.h	/^	tsd_t	tsd;$/;"	m	struct:tsdn_s
tsd_arena_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	546;"	d
tsd_arena_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	546;"	d
tsd_arena_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	547;"	d
tsd_arena_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	547;"	d
tsd_arenap_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	548;"	d
tsd_arenap_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	548;"	d
tsd_arenas_tdata_bypass_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	549;"	d
tsd_arenas_tdata_bypass_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	549;"	d
tsd_arenas_tdata_bypass_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	550;"	d
tsd_arenas_tdata_bypass_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	550;"	d
tsd_arenas_tdata_bypassp_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	551;"	d
tsd_arenas_tdata_bypassp_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	551;"	d
tsd_arenas_tdata_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	552;"	d
tsd_arenas_tdata_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	552;"	d
tsd_arenas_tdata_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	553;"	d
tsd_arenas_tdata_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	553;"	d
tsd_arenas_tdatap_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	554;"	d
tsd_arenas_tdatap_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	554;"	d
tsd_boot	deps/jemalloc/include/jemalloc/internal/private_namespace.h	555;"	d
tsd_boot	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	555;"	d
tsd_boot0	deps/jemalloc/include/jemalloc/internal/private_namespace.h	556;"	d
tsd_boot0	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	556;"	d
tsd_boot1	deps/jemalloc/include/jemalloc/internal/private_namespace.h	557;"	d
tsd_boot1	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	557;"	d
tsd_booted	deps/jemalloc/include/jemalloc/internal/private_namespace.h	558;"	d
tsd_booted	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	558;"	d
tsd_booted_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	559;"	d
tsd_booted_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	559;"	d
tsd_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	560;"	d
tsd_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	560;"	d
tsd_cleanup	deps/jemalloc/src/tsd.c	/^tsd_cleanup(void *arg)$/;"	f
tsd_cleanup_wrapper	deps/jemalloc/include/jemalloc/internal/private_namespace.h	561;"	d
tsd_cleanup_wrapper	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	561;"	d
tsd_fetch	deps/jemalloc/include/jemalloc/internal/private_namespace.h	562;"	d
tsd_fetch	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	562;"	d
tsd_fetch	deps/jemalloc/include/jemalloc/internal/tsd.h	/^tsd_fetch(void)$/;"	f
tsd_fetch_impl	deps/jemalloc/include/jemalloc/internal/private_namespace.h	563;"	d
tsd_fetch_impl	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	563;"	d
tsd_fetch_impl	deps/jemalloc/include/jemalloc/internal/tsd.h	/^tsd_fetch_impl(bool init)$/;"	f
tsd_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	564;"	d
tsd_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	564;"	d
tsd_get_allocates	deps/jemalloc/include/jemalloc/internal/private_namespace.h	565;"	d
tsd_get_allocates	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	565;"	d
tsd_iarena_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	566;"	d
tsd_iarena_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	566;"	d
tsd_iarena_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	567;"	d
tsd_iarena_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	567;"	d
tsd_iarenap_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	568;"	d
tsd_iarenap_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	568;"	d
tsd_init_block_s	deps/jemalloc/include/jemalloc/internal/tsd.h	/^struct tsd_init_block_s {$/;"	s
tsd_init_block_t	deps/jemalloc/include/jemalloc/internal/tsd.h	/^typedef struct tsd_init_block_s tsd_init_block_t;$/;"	t	typeref:struct:tsd_init_block_s
tsd_init_check_recursion	deps/jemalloc/include/jemalloc/internal/private_namespace.h	570;"	d
tsd_init_check_recursion	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	570;"	d
tsd_init_check_recursion	deps/jemalloc/src/tsd.c	/^tsd_init_check_recursion(tsd_init_head_t *head, tsd_init_block_t *block)$/;"	f
tsd_init_finish	deps/jemalloc/include/jemalloc/internal/private_namespace.h	571;"	d
tsd_init_finish	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	571;"	d
tsd_init_finish	deps/jemalloc/src/tsd.c	/^tsd_init_finish(tsd_init_head_t *head, tsd_init_block_t *block)$/;"	f
tsd_init_head	deps/jemalloc/include/jemalloc/internal/private_namespace.h	572;"	d
tsd_init_head	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	572;"	d
tsd_init_head_s	deps/jemalloc/include/jemalloc/internal/tsd.h	/^struct tsd_init_head_s {$/;"	s
tsd_init_head_t	deps/jemalloc/include/jemalloc/internal/tsd.h	/^typedef struct tsd_init_head_s tsd_init_head_t;$/;"	t	typeref:struct:tsd_init_head_s
tsd_initialized	deps/jemalloc/include/jemalloc/internal/private_namespace.h	569;"	d
tsd_initialized	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	569;"	d
tsd_initializer	deps/jemalloc/include/jemalloc/internal/tsd.h	/^static const tsd_t tsd_initializer = TSD_INITIALIZER;$/;"	v
tsd_narenas_tdata_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	573;"	d
tsd_narenas_tdata_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	573;"	d
tsd_narenas_tdata_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	574;"	d
tsd_narenas_tdata_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	574;"	d
tsd_narenas_tdatap_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	575;"	d
tsd_narenas_tdatap_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	575;"	d
tsd_nominal	deps/jemalloc/include/jemalloc/internal/private_namespace.h	578;"	d
tsd_nominal	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	578;"	d
tsd_nominal	deps/jemalloc/include/jemalloc/internal/tsd.h	/^tsd_nominal(tsd_t *tsd)$/;"	f
tsd_prof_tdata_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	579;"	d
tsd_prof_tdata_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	579;"	d
tsd_prof_tdata_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	580;"	d
tsd_prof_tdata_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	580;"	d
tsd_prof_tdatap_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	581;"	d
tsd_prof_tdatap_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	581;"	d
tsd_quarantine_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	582;"	d
tsd_quarantine_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	582;"	d
tsd_quarantine_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	583;"	d
tsd_quarantine_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	583;"	d
tsd_quarantinep_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	584;"	d
tsd_quarantinep_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	584;"	d
tsd_s	deps/jemalloc/include/jemalloc/internal/tsd.h	/^struct tsd_s {$/;"	s
tsd_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	585;"	d
tsd_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	585;"	d
tsd_state_nominal	deps/jemalloc/include/jemalloc/internal/tsd.h	/^	tsd_state_nominal,$/;"	e	enum:__anon13
tsd_state_purgatory	deps/jemalloc/include/jemalloc/internal/tsd.h	/^	tsd_state_purgatory,$/;"	e	enum:__anon13
tsd_state_reincarnated	deps/jemalloc/include/jemalloc/internal/tsd.h	/^	tsd_state_reincarnated$/;"	e	enum:__anon13
tsd_state_t	deps/jemalloc/include/jemalloc/internal/tsd.h	/^} tsd_state_t;$/;"	t	typeref:enum:__anon13
tsd_state_uninitialized	deps/jemalloc/include/jemalloc/internal/tsd.h	/^	tsd_state_uninitialized,$/;"	e	enum:__anon13
tsd_t	deps/jemalloc/include/jemalloc/internal/tsd.h	/^typedef struct tsd_s tsd_t;$/;"	t	typeref:struct:tsd_s
tsd_tcache_enabled_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	586;"	d
tsd_tcache_enabled_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	586;"	d
tsd_tcache_enabled_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	587;"	d
tsd_tcache_enabled_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	587;"	d
tsd_tcache_enabledp_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	588;"	d
tsd_tcache_enabledp_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	588;"	d
tsd_tcache_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	589;"	d
tsd_tcache_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	589;"	d
tsd_tcache_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	590;"	d
tsd_tcache_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	590;"	d
tsd_tcachep_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	591;"	d
tsd_tcachep_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	591;"	d
tsd_thread_allocated_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	592;"	d
tsd_thread_allocated_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	592;"	d
tsd_thread_allocated_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	593;"	d
tsd_thread_allocated_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	593;"	d
tsd_thread_allocatedp_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	594;"	d
tsd_thread_allocatedp_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	594;"	d
tsd_thread_deallocated_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	595;"	d
tsd_thread_deallocated_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	595;"	d
tsd_thread_deallocated_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	596;"	d
tsd_thread_deallocated_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	596;"	d
tsd_thread_deallocatedp_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	597;"	d
tsd_thread_deallocatedp_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	597;"	d
tsd_tls	deps/jemalloc/include/jemalloc/internal/private_namespace.h	598;"	d
tsd_tls	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	598;"	d
tsd_tsd	deps/jemalloc/include/jemalloc/internal/private_namespace.h	599;"	d
tsd_tsd	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	599;"	d
tsd_tsdn	deps/jemalloc/include/jemalloc/internal/private_namespace.h	600;"	d
tsd_tsdn	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	600;"	d
tsd_tsdn	deps/jemalloc/include/jemalloc/internal/tsd.h	/^tsd_tsdn(tsd_t *tsd)$/;"	f
tsd_witness_fork_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	601;"	d
tsd_witness_fork_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	601;"	d
tsd_witness_fork_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	602;"	d
tsd_witness_fork_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	602;"	d
tsd_witness_forkp_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	603;"	d
tsd_witness_forkp_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	603;"	d
tsd_witnesses_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	604;"	d
tsd_witnesses_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	604;"	d
tsd_witnesses_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	605;"	d
tsd_witnesses_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	605;"	d
tsd_witnessesp_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	606;"	d
tsd_witnessesp_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	606;"	d
tsd_wrapper_get	deps/jemalloc/include/jemalloc/internal/private_namespace.h	576;"	d
tsd_wrapper_get	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	576;"	d
tsd_wrapper_set	deps/jemalloc/include/jemalloc/internal/private_namespace.h	577;"	d
tsd_wrapper_set	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	577;"	d
tsdn	deps/jemalloc/src/prof.c	/^	tsdn_t		*tsdn;$/;"	m	struct:prof_tdata_merge_iter_arg_s	file:
tsdn	deps/jemalloc/src/prof.c	/^	tsdn_t	*tsdn;$/;"	m	struct:prof_gctx_dump_iter_arg_s	file:
tsdn	deps/jemalloc/src/prof.c	/^	tsdn_t	*tsdn;$/;"	m	struct:prof_gctx_merge_iter_arg_s	file:
tsdn	deps/jemalloc/src/prof.c	/^	tsdn_t	*tsdn;$/;"	m	struct:prof_tctx_dump_iter_arg_s	file:
tsdn_fetch	deps/jemalloc/include/jemalloc/internal/private_namespace.h	607;"	d
tsdn_fetch	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	607;"	d
tsdn_fetch	deps/jemalloc/include/jemalloc/internal/tsd.h	/^tsdn_fetch(void)$/;"	f
tsdn_null	deps/jemalloc/include/jemalloc/internal/private_namespace.h	608;"	d
tsdn_null	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	608;"	d
tsdn_null	deps/jemalloc/include/jemalloc/internal/tsd.h	/^tsdn_null(const tsdn_t *tsdn)$/;"	f
tsdn_s	deps/jemalloc/include/jemalloc/internal/tsd.h	/^struct tsdn_s {$/;"	s
tsdn_t	deps/jemalloc/include/jemalloc/internal/tsd.h	/^typedef struct tsdn_s tsdn_t;$/;"	t	typeref:struct:tsdn_s
tsdn_tsd	deps/jemalloc/include/jemalloc/internal/private_namespace.h	609;"	d
tsdn_tsd	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	609;"	d
tsdn_tsd	deps/jemalloc/include/jemalloc/internal/tsd.h	/^tsdn_tsd(tsdn_t *tsdn)$/;"	f
tstats	deps/jemalloc/include/jemalloc/internal/tcache.h	/^	tcache_bin_stats_t tstats;$/;"	m	struct:tcache_bin_s
tsv	deps/lua/src/lobject.h	/^  } tsv;$/;"	m	union:TString	typeref:struct:TString::__anon24
tsvalue	deps/lua/src/lobject.h	95;"	d
ttisboolean	deps/lua/src/lobject.h	84;"	d
ttisfunction	deps/lua/src/lobject.h	83;"	d
ttislightuserdata	deps/lua/src/lobject.h	87;"	d
ttisnil	deps/lua/src/lobject.h	79;"	d
ttisnumber	deps/lua/src/lobject.h	80;"	d
ttisstring	deps/lua/src/lobject.h	81;"	d
ttistable	deps/lua/src/lobject.h	82;"	d
ttisthread	deps/lua/src/lobject.h	86;"	d
ttisuserdata	deps/lua/src/lobject.h	85;"	d
ttlCommand	src/db.c	/^void ttlCommand(client *c) {$/;"	f
ttlGenericCommand	src/db.c	/^void ttlGenericCommand(client *c, int output_ms) {$/;"	f
ttype	deps/lua/src/lobject.h	90;"	d
turn_on_checking_bad_blocks	deps/pmdk/src/test/unittest/unittest.sh	/^function turn_on_checking_bad_blocks()$/;"	f
turn_on_checking_bad_blocks_node	deps/pmdk/src/test/unittest/unittest.sh	/^function turn_on_checking_bad_blocks_node()$/;"	f
tvk	deps/lua/src/lobject.h	/^  TValue tvk;$/;"	m	union:TKey
two_lists	deps/pmdk/src/examples/libpmemobj/lists.c	/^POBJ_LAYOUT_BEGIN(two_lists);$/;"	v
two_lists	deps/pmdk/src/examples/libpmemobj/lists.c	/^POBJ_LAYOUT_END(two_lists);$/;"	v
twoto	deps/lua/src/lobject.h	359;"	d
tx	deps/pmdk/src/libpmemobj/tx.c	/^struct tx {$/;"	s	file:
tx2_worker	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^tx2_worker(void *arg)$/;"	f	file:
tx3_worker	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^tx3_worker(void *arg)$/;"	f	file:
tx_abort	deps/pmdk/src/libpmemobj/tx.c	/^tx_abort(PMEMobjpool *pop, struct lane *lane)$/;"	f	file:
tx_abort_set	deps/pmdk/src/libpmemobj/tx.c	/^tx_abort_set(PMEMobjpool *pop, struct lane *lane)$/;"	f	file:
tx_aborted	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	bool tx_aborted;$/;"	m	struct:pocli_ctx	file:
tx_action_add	deps/pmdk/src/libpmemobj/tx.c	/^tx_action_add(struct tx *tx)$/;"	f	file:
tx_action_remove	deps/pmdk/src/libpmemobj/tx.c	/^tx_action_remove(struct tx *tx)$/;"	f	file:
tx_action_reserve	deps/pmdk/src/libpmemobj/tx.c	/^tx_action_reserve(struct tx *tx, size_t n)$/;"	f	file:
tx_alloc_args	deps/pmdk/src/libpmemobj/tx.c	/^struct tx_alloc_args {$/;"	s	file:
tx_alloc_common	deps/pmdk/src/libpmemobj/tx.c	/^tx_alloc_common(struct tx *tx, size_t size, type_num_t type_num,$/;"	f	file:
tx_alloc_free	deps/pmdk/src/test/obj_tx_mt/obj_tx_mt.c	/^tx_alloc_free(void *arg)$/;"	f	file:
tx_callback	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^POBJ_LAYOUT_BEGIN(tx_callback);$/;"	v
tx_callback	deps/pmdk/src/test/obj_tx_callbacks/obj_tx_callbacks.c	/^POBJ_LAYOUT_END(tx_callback);$/;"	v
tx_clean_range	deps/pmdk/src/libpmemobj/tx.c	/^tx_clean_range(void *data, void *ctx)$/;"	f	file:
tx_construct_user_buffer	deps/pmdk/src/libpmemobj/tx.c	/^tx_construct_user_buffer(struct tx *tx, void *addr, size_t size,$/;"	f	file:
tx_counter	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^static struct ops_counter tx_counter;$/;"	v	typeref:struct:ops_counter	file:
tx_ctl_register	deps/pmdk/src/libpmemobj/tx.c	/^tx_ctl_register(PMEMobjpool *pop)$/;"	f
tx_data	deps/pmdk/src/libpmemobj/tx.c	/^struct tx_data {$/;"	s	file:
tx_debug_skip_expensive_checks	deps/pmdk/src/libpmemobj/obj.h	/^	int tx_debug_skip_expensive_checks;$/;"	m	struct:pmemobjpool
tx_flush_range	deps/pmdk/src/libpmemobj/tx.c	/^tx_flush_range(void *data, void *ctx)$/;"	f	file:
tx_get_pop	deps/pmdk/src/libpmemobj/tx.c	/^tx_get_pop(void)$/;"	f
tx_invalid	deps/pmdk/src/test/obj_tx_invalid/obj_tx_invalid.c	/^POBJ_LAYOUT_BEGIN(tx_invalid);$/;"	v
tx_invalid	deps/pmdk/src/test/obj_tx_invalid/obj_tx_invalid.c	/^POBJ_LAYOUT_END(tx_invalid);$/;"	v
tx_lane_ranges_insert_def	deps/pmdk/src/libpmemobj/tx.c	/^tx_lane_ranges_insert_def(PMEMobjpool *pop, struct tx *tx,$/;"	f	file:
tx_level	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	unsigned tx_level;$/;"	m	struct:obj_tx_worker	file:
tx_lock_data	deps/pmdk/src/libpmemobj/tx.c	/^struct tx_lock_data {$/;"	s	file:
tx_lock_deprecated	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_LOCK_MUTEX  tx_lock_deprecated = TX_PARAM_MUTEX,$/;"	e	enum:pobj_tx_lock
tx_lock_deprecated	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_LOCK_NONE   tx_lock_deprecated = TX_PARAM_NONE,$/;"	e	enum:pobj_tx_lock
tx_lock_deprecated	deps/pmdk/src/include/libpmemobj/tx_base.h	/^	TX_LOCK_RWLOCK tx_lock_deprecated = TX_PARAM_RWLOCK,$/;"	e	enum:pobj_tx_lock
tx_lock_deprecated	deps/pmdk/src/include/libpmemobj/tx_base.h	108;"	d
tx_lock_deprecated	deps/pmdk/src/include/libpmemobj/tx_base.h	111;"	d
tx_op	deps/pmdk/src/test/obj_tx_flow/obj_tx_flow.c	/^static fn_op tx_op[OPS_NUM] = {do_tx_macro_commit, do_tx_macro_abort,$/;"	v	file:
tx_parameters	deps/pmdk/src/libpmemobj/tx.h	/^struct tx_parameters {$/;"	s
tx_params	deps/pmdk/src/libpmemobj/obj.h	/^	struct tx_parameters *tx_params;$/;"	m	struct:pmemobjpool	typeref:struct:pmemobjpool::tx_parameters
tx_params_delete	deps/pmdk/src/libpmemobj/tx.c	/^tx_params_delete(struct tx_parameters *tx_params)$/;"	f
tx_params_new	deps/pmdk/src/libpmemobj/tx.c	/^tx_params_new(void)$/;"	f
tx_post_commit	deps/pmdk/src/libpmemobj/tx.c	/^tx_post_commit(struct tx *tx)$/;"	f	file:
tx_pre_commit	deps/pmdk/src/libpmemobj/tx.c	/^tx_pre_commit(struct tx *tx)$/;"	f	file:
tx_published	deps/pmdk/src/test/obj_action/obj_action.c	/^	} tx_published;$/;"	m	struct:root	typeref:struct:root::__anon139	file:
tx_range_data	deps/pmdk/src/libpmemobj/tx.c	/^struct tx_range_data {$/;"	s	file:
tx_range_def	deps/pmdk/src/libpmemobj/tx.c	/^struct tx_range_def {$/;"	s	file:
tx_range_def_cmp	deps/pmdk/src/libpmemobj/tx.c	/^tx_range_def_cmp(const void *lhs, const void *rhs)$/;"	f	file:
tx_realloc_common	deps/pmdk/src/libpmemobj/tx.c	/^tx_realloc_common(struct tx *tx, PMEMoid oid, size_t size, uint64_t type_num,$/;"	f	file:
tx_remove_range	deps/pmdk/src/libpmemobj/tx.c	/^tx_remove_range(struct txr *tx_ranges, void *begin, void *end)$/;"	f	file:
tx_reserved	deps/pmdk/src/test/obj_action/obj_action.c	/^	} tx_reserved;$/;"	m	struct:root	typeref:struct:root::__anon137	file:
tx_reserved_fulfilled	deps/pmdk/src/test/obj_action/obj_action.c	/^	} tx_reserved_fulfilled;$/;"	m	struct:root	typeref:struct:root::__anon138	file:
tx_restore_range	deps/pmdk/src/libpmemobj/tx.c	/^tx_restore_range(PMEMobjpool *pop, struct tx *tx, struct ulog_entry_buf *range)$/;"	f	file:
tx_snap	deps/pmdk/src/test/obj_tx_mt/obj_tx_mt.c	/^tx_snap(void *arg)$/;"	f	file:
tx_undo_entry_apply	deps/pmdk/src/libpmemobj/tx.c	/^tx_undo_entry_apply(struct ulog_entry_base *e, void *arg,$/;"	f	file:
tx_worker	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^tx_worker(void *arg)$/;"	f	file:
txtToken	deps/lua/src/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:
type	deps/hiredis/dict.h	/^    dictType *type;$/;"	m	struct:dict
type	deps/hiredis/hiredis.h	/^    int type; \/* REDIS_REPLY_* *\/$/;"	m	struct:redisReply
type	deps/hiredis/hiredis.h	/^    int type;$/;"	m	struct:redisReadTask
type	deps/hiredis/test.c	/^    enum connection_type type;$/;"	m	struct:config	typeref:enum:config::connection_type	file:
type	deps/lua/src/lua_cjson.c	/^    json_token_type_t type;$/;"	m	struct:__anon45	file:
type	deps/pmdk/src/benchmarks/benchmark.hpp	/^	enum clo_type type;$/;"	m	struct:benchmark_clo	typeref:enum:benchmark_clo::clo_type
type	deps/pmdk/src/benchmarks/blk.cpp	/^	enum op_type type;$/;"	m	struct:blk_bench	typeref:enum:blk_bench::op_type	file:
type	deps/pmdk/src/benchmarks/map_bench.cpp	/^	char *type;$/;"	m	struct:map_bench_args	file:
type	deps/pmdk/src/common/ctl.h	/^	enum ctl_node_type type;$/;"	m	struct:ctl_node	typeref:enum:ctl_node::ctl_node_type
type	deps/pmdk/src/common/fs.h	/^	enum fs_entry_type type;$/;"	m	struct:fs_entry	typeref:enum:fs_entry::fs_entry_type
type	deps/pmdk/src/common/mmap.h	/^	enum pmem_map_type type;$/;"	m	struct:map_tracker	typeref:enum:map_tracker::pmem_map_type
type	deps/pmdk/src/common/os_auto_flush_windows.h	/^	uint16_t type;$/;"	m	struct:platform_capabilities
type	deps/pmdk/src/examples/libpmemobj/array/array.c	/^	enum array_types type;$/;"	m	struct:array_info	typeref:enum:array_info::array_types	file:
type	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^    int32_t  type;$/;"	m	struct:examine_ctx	file:
type	deps/pmdk/src/examples/libpmemobj/lists.c	/^	enum list_type type;$/;"	m	struct:list_constr_args	typeref:enum:list_constr_args::list_type	file:
type	deps/pmdk/src/include/libpmemobj/action_base.h	/^	enum pobj_action_type type;$/;"	m	struct:pobj_action	typeref:enum:pobj_action::pobj_action_type
type	deps/pmdk/src/include/libpmempool.h	/^	enum pmempool_check_msg_type type;$/;"	m	struct:pmempool_check_statusU	typeref:enum:pmempool_check_statusU::pmempool_check_msg_type
type	deps/pmdk/src/include/libpmempool.h	/^	enum pmempool_check_msg_type type;$/;"	m	struct:pmempool_check_statusW	typeref:enum:pmempool_check_statusW::pmempool_check_msg_type
type	deps/pmdk/src/libpmemobj/alloc_class.h	/^	enum alloc_class_type type;$/;"	m	struct:alloc_class	typeref:enum:alloc_class::alloc_class_type
type	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint16_t type;$/;"	m	struct:chunk_header
type	deps/pmdk/src/libpmemobj/memblock.h	/^	enum memory_block_type type;$/;"	m	struct:memory_block	typeref:enum:memory_block::memory_block_type
type	deps/pmdk/src/libpmemobj/memops.c	/^	enum log_type type;$/;"	m	struct:operation_context	typeref:enum:operation_context::log_type	file:
type	deps/pmdk/src/libpmemobj/palloc.c	/^	enum pobj_action_type type;$/;"	m	struct:pobj_action_internal	typeref:enum:pobj_action_internal::pobj_action_type	file:
type	deps/pmdk/src/libpmempool/check.c	/^	enum pool_type type;$/;"	m	struct:step	typeref:enum:step::pool_type	file:
type	deps/pmdk/src/libpmempool/check_blk.c	/^	enum pool_type type;$/;"	m	struct:step	typeref:enum:step::pool_type	file:
type	deps/pmdk/src/libpmempool/check_log.c	/^	enum pool_type type;$/;"	m	struct:step	typeref:enum:step::pool_type	file:
type	deps/pmdk/src/libpmempool/check_write.c	/^	enum pool_type type;$/;"	m	struct:step	typeref:enum:step::pool_type	file:
type	deps/pmdk/src/libpmempool/pool.h	/^	enum pool_type type;$/;"	m	struct:pool_params	typeref:enum:pool_params::pool_type
type	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t type;			\/* type of message *\/$/;"	m	struct:rpmem_msg_hdr
type	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	uint32_t type;			\/* type of message *\/$/;"	m	struct:rpmem_msg_hdr_resp
type	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^struct type {$/;"	s	file:
type	deps/pmdk/src/tools/pmempool/common.h	/^	pmem_pool_type_t type;$/;"	m	struct:option_requirement
type	deps/pmdk/src/tools/pmempool/common.h	/^	pmem_pool_type_t type;$/;"	m	struct:pmem_pool_params
type	deps/pmdk/src/tools/pmempool/info.h	/^	pmem_pool_type_t type;	\/* forced pool type *\/$/;"	m	struct:pmempool_info_args
type	deps/pmdk/src/tools/pmempool/info.h	/^	pmem_pool_type_t type;$/;"	m	struct:pmem_info
type	src/cluster.h	/^    uint16_t type;      \/* Message type *\/$/;"	m	struct:__anon177
type	src/dict.h	/^    dictType *type;$/;"	m	struct:dict
type	src/redis-cli.c	/^    int type;$/;"	m	struct:__anon168	file:
type	src/server.h	/^    int type;$/;"	m	struct:_redisSortOperation
type	src/server.h	/^    unsigned type:4;$/;"	m	struct:redisObject
type	src/t_zset.c	/^    int type; \/* Set, sorted set *\/$/;"	m	struct:__anon152	file:
typeCommand	src/db.c	/^void typeCommand(client *c) {$/;"	f
type_constructor	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^type_constructor(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
type_int	deps/pmdk/src/benchmarks/benchmark.hpp	/^	} type_int;$/;"	m	struct:benchmark_clo	typeref:struct:benchmark_clo::__anon113
type_mode	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	int type_mode;       \/* type_number mode *\/$/;"	m	struct:obj_bench	file:
type_mode	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^enum type_mode {$/;"	g	file:
type_mode	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	int type_mode;$/;"	m	struct:pobj_bench	file:
type_mode	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^enum type_mode {$/;"	g	file:
type_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	int type_mode;      \/* type number mode *\/$/;"	m	struct:obj_tx_bench	file:
type_mode_func	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^static fn_type_num_t type_mode_func[MAX_TYPE_MODE] = {$/;"	v	file:
type_mode_names	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^const char *type_mode_names[MAX_TYPE_MODE] = {"one", "per-thread", "rand"};$/;"	v
type_mode_one	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^type_mode_one(size_t worker_idx, size_t op_idx)$/;"	f	file:
type_mode_one	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^type_mode_one(struct pobj_bench *bench_priv, size_t worker_idx, size_t op_idx)$/;"	f	file:
type_mode_one	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^type_mode_one(struct obj_tx_bench *obj_bench, size_t worker_idx, size_t op_idx)$/;"	f	file:
type_mode_per_thread	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^type_mode_per_thread(size_t worker_idx, size_t op_idx)$/;"	f	file:
type_mode_per_thread	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^type_mode_per_thread(struct pobj_bench *bench_priv, size_t worker_idx,$/;"	f	file:
type_mode_per_thread	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^type_mode_per_thread(struct obj_tx_bench *obj_bench, size_t worker_idx,$/;"	f	file:
type_mode_rand	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^type_mode_rand(size_t worker_idx, size_t op_idx)$/;"	f	file:
type_mode_rand	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^type_mode_rand(struct pobj_bench *bench_priv, size_t worker_idx, size_t op_idx)$/;"	f	file:
type_mode_rand	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^type_mode_rand(struct obj_tx_bench *obj_bench, size_t worker_idx, size_t op_idx)$/;"	f	file:
type_name	deps/pmdk/src/examples/libpmemobj/libart/arttree_examine.c	/^    char *type_name;$/;"	m	struct:examine_ctx	file:
type_num	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^	char *type_num;    \/* type_number mode - one, per-thread, rand *\/$/;"	m	struct:obj_list_args	file:
type_num	deps/pmdk/src/benchmarks/pmemobj_gen.cpp	/^	char *type_num;$/;"	m	struct:pobj_args	file:
type_num	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^	char *type_num;$/;"	m	struct:obj_tx_args	file:
type_num	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t type_num;$/;"	m	struct:allocation_header_legacy
type_num	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^						unsigned type_num);$/;"	t	file:
type_num	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t type_num;$/;"	m	struct:pmem_obj_type_stats
type_num_fn	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^static fn_type_num_t type_num_fn[] = {type_mode_one, type_mode_per_thread,$/;"	v	file:
type_num_mode	deps/pmdk/src/benchmarks/pmemobj_tx.cpp	/^enum type_num_mode {$/;"	g	file:
type_num_modes	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^static fn_type_num_t type_num_modes[] = {type_mode_one, type_mode_per_thread,$/;"	v	file:
type_num_names	deps/pmdk/src/benchmarks/pmemobj_atomic_lists.cpp	/^const char *type_num_names[] = {"one", "per-thread", "rand"};$/;"	v
type_num_t	deps/pmdk/src/libpmemobj/obj.h	/^typedef uint64_t type_num_t;$/;"	t
type_number	deps/pmdk/src/test/obj_strdup/obj_strdup.c	/^enum type_number {$/;"	g	file:
type_number	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^enum type_number {$/;"	g	file:
type_number	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^enum type_number {$/;"	g	file:
type_number	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^enum type_number {$/;"	g	file:
type_number	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^enum type_number {$/;"	g	file:
type_number	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^enum type_number {$/;"	g	file:
type_number	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^enum type_number {$/;"	g	file:
type_ranges	deps/pmdk/src/tools/pmempool/info.h	/^		struct ranges type_ranges;$/;"	m	struct:pmempool_info_args::__anon109	typeref:struct:pmempool_info_args::__anon109::ranges
type_sec	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^struct type_sec {$/;"	s	file:
type_sec_constructor	deps/pmdk/src/test/obj_first_next/obj_first_next.c	/^type_sec_constructor(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
type_stats	deps/pmdk/src/tools/pmempool/info.h	/^	PMDK_TAILQ_HEAD(obj_type_stats_head, pmem_obj_type_stats) type_stats;$/;"	m	struct:pmem_obj_stats
type_str	deps/pmdk/src/benchmarks/blk.cpp	/^	char *type_str; \/* type: blk, file, memcpy *\/$/;"	m	struct:blk_args	file:
type_uint	deps/pmdk/src/benchmarks/benchmark.hpp	/^	} type_uint;$/;"	m	struct:benchmark_clo	typeref:struct:benchmark_clo::__anon114
types	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog.c	/^enum types {$/;"	g	file:
types	deps/pmdk/src/test/rpmemd_obc/rpmemd_obc_test_common.h	/^	unsigned long long types;$/;"	m	struct:req_cb_arg
u	deps/jemalloc/test/src/SFMT.c	/^    uint32_t u[4];$/;"	m	struct:W128_T	file:
u	deps/jemalloc/test/src/SFMT.c	/^    uint32_t u[4];$/;"	m	union:W128_T	file:
u	deps/lua/src/lobject.h	/^  } u;$/;"	m	struct:UpVal	typeref:union:UpVal::__anon26
u	deps/lua/src/lparser.h	/^  } u;$/;"	m	struct:expdesc	typeref:union:expdesc::__anon31
u	deps/lua/src/lstate.h	/^  union Udata u;$/;"	m	union:GCObject	typeref:union:GCObject::Udata
u	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	} u;$/;"	m	struct:_art_node_u	typeref:union:_art_node_u::__anon100
u	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	} u;$/;"	m	struct:_art_node_u	typeref:union:_art_node_u::__anon101
u	src/server.h	/^    } u;$/;"	m	struct:_redisSortObject	typeref:union:_redisSortObject::__anon160
u16	src/lzfP.h	/^    typedef unsigned int u16;$/;"	t
u16	src/lzfP.h	/^    typedef unsigned short u16;$/;"	t
u2rz	deps/jemalloc/include/jemalloc/internal/jemalloc_internal.h	/^u2rz(size_t usize)$/;"	f
u2rz	deps/jemalloc/include/jemalloc/internal/private_namespace.h	610;"	d
u2rz	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	610;"	d
u2s	deps/jemalloc/src/util.c	/^u2s(uintmax_t x, unsigned base, bool uppercase, char *s, size_t *slen_p)$/;"	f	file:
u64	src/dict.h	/^        uint64_t u64;$/;"	m	union:dictEntry::__anon167
u64_add_offset	deps/pmdk/src/libpmemobj/list.c	/^u64_add_offset(uint64_t *value, ssize_t off)$/;"	f	file:
u8	src/lzfP.h	/^typedef unsigned char u8;$/;"	t
u_int	src/solarisfixes.h	50;"	d
u_int32_t	src/solarisfixes.h	51;"	d
uchar	deps/lua/src/lstrlib.c	24;"	d	file:
ud	deps/lua/src/lapi.c	/^  void *ud;$/;"	m	struct:CCallS	file:
ud	deps/lua/src/lstate.h	/^  void *ud;         \/* auxiliary data to `frealloc' *\/$/;"	m	struct:global_State
uid	deps/pmdk/src/examples/libpmemobj/pmemobjfs/pmemobjfs.c	/^	uint32_t uid;	\/* user ID *\/$/;"	m	struct:objfs_inode	file:
uid_it	deps/pmdk/src/test/obj_sds/obj_sds.c	/^static size_t uid_it;$/;"	v	file:
uid_it	deps/pmdk/src/test/util_sds/util_sds.c	/^static size_t uid_it;$/;"	v	file:
uids	deps/pmdk/src/test/obj_sds/obj_sds.c	/^static char **uids;$/;"	v	file:
uids	deps/pmdk/src/test/util_sds/util_sds.c	/^static char **uids;$/;"	v	file:
uids_size	deps/pmdk/src/test/obj_sds/obj_sds.c	/^static size_t uids_size;$/;"	v	file:
uids_size	deps/pmdk/src/test/util_sds/util_sds.c	/^static size_t uids_size;$/;"	v	file:
uint16_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t
uint16_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t
uint32_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t
uint32_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t
uint32_t	deps/lua/src/lua_bit.c	/^typedef unsigned __int32 uint32_t;$/;"	t	file:
uint64_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t
uint64_t	deps/lua/src/lua_bit.c	/^typedef unsigned __int64 uint64_t;$/;"	t	file:
uint8_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t
uint8_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t
uint_fast16_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t
uint_fast32_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t
uint_fast64_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t
uint_fast8_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t
uint_least16_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t
uint_least32_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t
uint_least64_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t
uint_least8_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t
uintmax_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t
uintptr_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t
uintptr_t	deps/jemalloc/include/msvc_compat/C99/stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t
ulog	deps/pmdk/src/libpmemobj/memops.c	/^	struct ulog *ulog; \/* DRAM allocated log of modifications *\/$/;"	m	struct:operation_log	typeref:struct:operation_log::ulog	file:
ulog	deps/pmdk/src/libpmemobj/memops.c	/^	struct ulog *ulog; \/* pointer to the persistent ulog log *\/$/;"	m	struct:operation_context	typeref:struct:operation_context::ulog	file:
ulog_any_user_buffer	deps/pmdk/src/libpmemobj/memops.c	/^	int ulog_any_user_buffer; \/* set if any user buffer is added *\/$/;"	m	struct:operation_context	file:
ulog_auto_reserve	deps/pmdk/src/libpmemobj/memops.c	/^	int ulog_auto_reserve; \/* allow or do not to auto ulog reservation *\/$/;"	m	struct:operation_context	file:
ulog_base_nbytes	deps/pmdk/src/libpmemobj/memops.c	/^	size_t ulog_base_nbytes; \/* available bytes in initial ulog log *\/$/;"	m	struct:operation_context	file:
ulog_base_nbytes	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_base_nbytes(struct ulog *ulog)$/;"	f
ulog_by_offset	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_by_offset(size_t offset, const struct pmem_ops *p_ops)$/;"	f
ulog_capacity	deps/pmdk/src/libpmemobj/memops.c	/^	size_t ulog_capacity; \/* sum of capacity, incl all next ulog logs *\/$/;"	m	struct:operation_context	file:
ulog_capacity	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_capacity(struct ulog *ulog, size_t ulog_base_bytes,$/;"	f
ulog_check	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_check(struct ulog *ulog, ulog_check_offset_fn check,$/;"	f
ulog_check_entry	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_check_entry(struct ulog_entry_base *e,$/;"	f	file:
ulog_check_offset_fn	deps/pmdk/src/libpmemobj/ulog.h	/^typedef int (*ulog_check_offset_fn)(void *ctx, uint64_t offset);$/;"	t
ulog_checksum	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_checksum(struct ulog *ulog, size_t ulog_base_bytes, int insert)$/;"	f	file:
ulog_clobber	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_clobber(struct ulog *dest, struct ulog_next *next,$/;"	f
ulog_clobber_data	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_clobber_data(struct ulog *ulog_first,$/;"	f
ulog_clobber_entry	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_clobber_entry(const struct ulog_entry_base *e,$/;"	f
ulog_construct	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_construct(uint64_t offset, size_t capacity, uint64_t gen_num,$/;"	f
ulog_curr	deps/pmdk/src/libpmemobj/memops.c	/^	struct ulog *ulog_curr; \/* current persistent log *\/$/;"	m	struct:operation_context	typeref:struct:operation_context::ulog	file:
ulog_curr_capacity	deps/pmdk/src/libpmemobj/memops.c	/^	size_t ulog_curr_capacity; \/* capacity of the current log *\/$/;"	m	struct:operation_context	file:
ulog_curr_gen_num	deps/pmdk/src/libpmemobj/memops.c	/^	size_t ulog_curr_gen_num; \/* transaction counter in the current log *\/$/;"	m	struct:operation_context	file:
ulog_curr_offset	deps/pmdk/src/libpmemobj/memops.c	/^	size_t ulog_curr_offset; \/* offset in the log for buffer stores *\/$/;"	m	struct:operation_context	file:
ulog_entry_apply	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_entry_apply(const struct ulog_entry_base *e, int persist,$/;"	f
ulog_entry_base	deps/pmdk/src/libpmemobj/ulog.h	/^struct ulog_entry_base {$/;"	s
ulog_entry_buf	deps/pmdk/src/libpmemobj/ulog.h	/^struct ulog_entry_buf {$/;"	s
ulog_entry_buf_create	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_entry_buf_create(struct ulog *ulog, size_t offset, uint64_t gen_num,$/;"	f
ulog_entry_cb	deps/pmdk/src/libpmemobj/ulog.h	/^typedef int (*ulog_entry_cb)(struct ulog_entry_base *e, void *arg,$/;"	t
ulog_entry_offset	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_entry_offset(const struct ulog_entry_base *entry)$/;"	f
ulog_entry_size	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_entry_size(const struct ulog_entry_base *entry)$/;"	f
ulog_entry_type	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_entry_type(const struct ulog_entry_base *entry)$/;"	f
ulog_entry_val	deps/pmdk/src/libpmemobj/ulog.h	/^struct ulog_entry_val {$/;"	s
ulog_entry_val_create	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_entry_val_create(struct ulog *ulog, size_t offset, uint64_t *dest,$/;"	f
ulog_entry_valid	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_entry_valid(struct ulog *ulog, const struct ulog_entry_base *entry)$/;"	f	file:
ulog_extend_fn	deps/pmdk/src/libpmemobj/ulog.h	/^typedef int (*ulog_extend_fn)(void *, uint64_t *, uint64_t);$/;"	t
ulog_fail	deps/pmdk/src/test/obj_list/obj_list.h	/^enum ulog_fail$/;"	g
ulog_foreach_entry	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_foreach_entry(struct ulog *ulog,$/;"	f
ulog_free	deps/pmdk/src/libpmemobj/memops.c	/^	ulog_free_fn ulog_free; \/* function to free next ulogs *\/$/;"	m	struct:operation_context	file:
ulog_free_fn	deps/pmdk/src/libpmemobj/ulog.h	/^typedef void (*ulog_free_fn)(void *base, uint64_t *next);$/;"	t
ulog_free_next	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_free_next(struct ulog *u, const struct pmem_ops *p_ops,$/;"	f
ulog_inc_gen_num	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_inc_gen_num(struct ulog *ulog, const struct pmem_ops *p_ops)$/;"	f	file:
ulog_next	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_next(struct ulog *ulog, const struct pmem_ops *p_ops)$/;"	f
ulog_operation_type	deps/pmdk/src/libpmemobj/ulog.h	/^typedef uint64_t ulog_operation_type;$/;"	t
ulog_process	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_process(struct ulog *ulog, ulog_check_offset_fn check,$/;"	f
ulog_process	deps/pmdk/src/test/obj_list/mocks_windows.h	72;"	d
ulog_process_entry	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_process_entry(struct ulog_entry_base *e, void *arg,$/;"	f	file:
ulog_rebuild_next_vec	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_rebuild_next_vec(struct ulog *ulog, struct ulog_next *next,$/;"	f
ulog_recover	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_recover(struct ulog *ulog, ulog_check_offset_fn check,$/;"	f
ulog_recovery_needed	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_recovery_needed(struct ulog *ulog, int verify_checksum)$/;"	f
ulog_reserve	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_reserve(struct ulog *ulog,$/;"	f
ulog_rm_user_buffer_fn	deps/pmdk/src/libpmemobj/ulog.h	/^typedef int (*ulog_rm_user_buffer_fn)(void *, void *addr);$/;"	t
ulog_store	deps/pmdk/src/libpmemobj/ulog.c	/^ulog_store(struct ulog *dest, struct ulog *src, size_t nbytes,$/;"	f
ulog_store	deps/pmdk/src/test/obj_list/mocks_windows.h	71;"	d
ulog_user_buffers	deps/pmdk/src/libpmemobj/obj.h	/^	} ulog_user_buffers;$/;"	m	struct:pmemobjpool	typeref:struct:pmemobjpool::__anon117
unaccounted_total	deps/pmdk/src/libpmemobj/recycler.c	/^	size_t unaccounted_total;$/;"	m	struct:recycler	file:
unaccounted_units	deps/pmdk/src/libpmemobj/recycler.c	/^	size_t unaccounted_units[MAX_CHUNK];$/;"	m	struct:recycler	file:
uname_S	deps/Makefile	/^uname_S:= $(shell sh -c 'uname -s 2>\/dev\/null || echo not')$/;"	m
uname_S	deps/hiredis/Makefile	/^uname_S := $(shell sh -c 'uname -s 2>\/dev\/null || echo not')$/;"	m
uname_S	src/Makefile	/^uname_S := $(shell sh -c 'uname -s 2>\/dev\/null || echo not')$/;"	m
unblockClient	src/blocked.c	/^void unblockClient(client *c) {$/;"	f
unblockClientWaitingData	src/t_list.c	/^void unblockClientWaitingData(client *c) {$/;"	f
unblockClientWaitingReplicas	src/replication.c	/^void unblockClientWaitingReplicas(client *c) {$/;"	f
unblocked_clients	src/server.h	/^    list *unblocked_clients; \/* list of clients to unblock before next loop *\/$/;"	m	struct:redisServer
unbound_search	deps/lua/src/ltable.c	/^static int unbound_search (Table *t, unsigned int j) {$/;"	f	file:
uncle	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	TOID(struct tree_map_node) uncle = D_RO(NODE_GRANDP(n))->slots[!c];$/;"	e	enum:c	file:
undefined	deps/pmdk/src/tools/pmempool/feature.c	/^	undefined,$/;"	e	enum:feature_op	file:
undo	deps/pmdk/src/libpmemobj/lane.h	/^	struct ULOG(LANE_UNDO_SIZE) undo;$/;"	m	struct:lane_layout
undo	deps/pmdk/src/libpmemobj/lane.h	/^	struct operation_context *undo; \/* context for undo ulog *\/$/;"	m	struct:lane	typeref:struct:lane::operation_context
undoConnectWithMaster	src/replication.c	/^void undoConnectWithMaster(void) {$/;"	f
unit_size	deps/pmdk/src/include/libpmemobj/ctl.h	/^	size_t unit_size;$/;"	m	struct:pobj_alloc_class_desc
unit_size	deps/pmdk/src/libpmemobj/alloc_class.h	/^	size_t unit_size;$/;"	m	struct:alloc_class
unit_size	deps/pmdk/src/tools/pmempool/info.h	/^	uint64_t unit_size;$/;"	m	struct:pmem_obj_class_stats
units_per_block	deps/pmdk/src/include/libpmemobj/ctl.h	/^	unsigned units_per_block;$/;"	m	struct:pobj_alloc_class_desc
unix	deps/hiredis/test.c	/^    } unix;$/;"	m	struct:config	typeref:struct:config::__anon150	file:
unixsocket	src/server.h	/^    char *unixsocket;           \/* UNIX socket path *\/$/;"	m	struct:redisServer
unixsocketperm	src/server.h	/^    mode_t unixsocketperm;      \/* UNIX socket permission *\/$/;"	m	struct:redisServer
unixtime	src/server.h	/^    time_t unixtime;        \/* Unix time sampled every cron cycle. *\/$/;"	m	struct:redisServer
unknown_command	deps/pmdk/src/examples/libpmemobj/map/mapcli.c	/^unknown_command(const char *str)$/;"	f	file:
unlikely	deps/jemalloc/include/jemalloc/internal/util.h	70;"	d
unlikely	deps/jemalloc/include/jemalloc/internal/util.h	73;"	d
unlikely	deps/pmdk/src/common/util.h	466;"	d
unlikely	deps/pmdk/src/common/util.h	469;"	d
unlikely	src/quicklist.c	86;"	d	file:
unlikely	src/quicklist.c	89;"	d	file:
unlinkClient	src/networking.c	/^void unlinkClient(client *c) {$/;"	f
unlink_remote_replicas	deps/pmdk/src/common/set.c	/^unlink_remote_replicas(struct pool_set *set)$/;"	f	file:
unlinkupval	deps/lua/src/lfunc.c	/^static void unlinkupval (UpVal *uv) {$/;"	f	file:
unlock_devdax	deps/pmdk/src/test/unittest/unittest.sh	/^unlock_devdax() {$/;"	f
unm_event	deps/lua/doc/manual.html	/^     function unm_event (op)$/;"	f
unmakemask	deps/lua/src/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:
unmap_all_headers	deps/pmdk/src/libpmempool/replica.c	/^unmap_all_headers(struct pool_set *set)$/;"	f	file:
unpack_rpmem_pool_attr	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^unpack_rpmem_pool_attr(const struct rpmem_pool_attr_packed *src,$/;"	f
unreachable	deps/jemalloc/include/jemalloc/internal/util.h	80;"	d
unsubscribe	tests/unit/pubsub.tcl	/^    proc unsubscribe {client {channels {}}} {$/;"	p
unsubscribeCommand	src/pubsub.c	/^void unsubscribeCommand(client *c) {$/;"	f
unsubscribebulk	src/server.h	/^    *unsubscribebulk, *psubscribebulk, *punsubscribebulk, *del, *rpop, *lpop,$/;"	m	struct:sharedObjectsStruct
unsupported_feature	deps/pmdk/src/libpmempool/feature.c	/^unsupported_feature(features_t feature)$/;"	f	file:
unsupported_term	deps/linenoise/linenoise.c	/^static char *unsupported_term[] = {"dumb","cons25","emacs",NULL};$/;"	v	file:
unused	deps/pmdk/src/common/pool_hdr.h	/^	unsigned char unused[POOL_HDR_UNUSED_SIZE];	\/* must be zero *\/$/;"	m	struct:pool_hdr
unused	deps/pmdk/src/libpmemblk/btt_layout.h	/^	char unused[BTTINFO_UNUSED_LEN];	\/* must be zero *\/$/;"	m	struct:btt_info
unused	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint64_t unused; \/* might be garbage *\/$/;"	m	struct:heap_header
unused	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint8_t unused[8];$/;"	m	struct:allocation_header_legacy
unused	deps/pmdk/src/libpmemobj/obj.h	/^	unsigned char unused[OBJ_DSC_P_UNUSED]; \/* must be zero *\/$/;"	m	struct:pmemobjpool
unused2	deps/pmdk/src/common/pool_hdr.h	/^	unsigned char unused2[POOL_HDR_UNUSED2_SIZE];	\/* must be zero *\/$/;"	m	struct:pool_hdr
unused2	deps/pmdk/src/libpmemobj/heap_layout.h	/^	uint8_t unused2[32];$/;"	m	struct:allocation_header_legacy
unused2	deps/pmdk/src/libpmemobj/obj.h	/^	char unused2[PMEM_OBJ_POOL_UNUSED2_SIZE];$/;"	m	struct:pmemobjpool
unused3	deps/pmdk/src/libpmemobj/obj.h	/^	uint64_t unused3;$/;"	m	struct:pmemobjpool
unwatchAllKeys	src/multi.c	/^void unwatchAllKeys(client *c) {$/;"	f
unwatchCommand	src/multi.c	/^void unwatchCommand(client *c) {$/;"	f
update	src/cluster.h	/^    } update;$/;"	m	union:clusterMsgData	typeref:struct:clusterMsgData::__anon176
updateCachedTime	src/server.c	/^void updateCachedTime(void) {$/;"	f
updateDictResizePolicy	src/server.c	/^void updateDictResizePolicy(void) {$/;"	f
updateSlavesWaitingBgsave	src/replication.c	/^void updateSlavesWaitingBgsave(int bgsaveerr, int type) {$/;"	f
update_cksum	src/rio.h	/^    void (*update_cksum)(struct _rio *, const void *buf, size_t len);$/;"	m	struct:_rio
update_parts_linkage	deps/pmdk/src/libpmempool/sync.c	/^update_parts_linkage(struct pool_set *set, unsigned repn,$/;"	f	file:
update_poolset_uuids	deps/pmdk/src/libpmempool/sync.c	/^update_poolset_uuids(struct pool_set *set, unsigned repn,$/;"	f	file:
update_remote_headers	deps/pmdk/src/libpmempool/sync.c	/^update_remote_headers(struct pool_set *set)$/;"	f	file:
update_replica_header	deps/pmdk/src/libpmempool/transform.c	/^update_replica_header(struct pool_set *set, unsigned repn)$/;"	f	file:
update_replicas_linkage	deps/pmdk/src/libpmempool/sync.c	/^update_replicas_linkage(struct pool_set *set, unsigned repn)$/;"	f	file:
update_score	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^update_score(int m)$/;"	f	file:
update_score	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^update_score(struct state *sp, int m)$/;"	f	file:
update_uuids	deps/pmdk/src/libpmempool/sync.c	/^update_uuids(struct pool_set *set, struct poolset_health_status *set_hs)$/;"	f	file:
update_uuids	deps/pmdk/src/libpmempool/transform.c	/^update_uuids(struct pool_set *set, unsigned repn)$/;"	f	file:
update_zmalloc_stat_add	src/zmalloc.c	71;"	d	file:
update_zmalloc_stat_add	src/zmalloc.c	74;"	d	file:
update_zmalloc_stat_add	src/zmalloc.c	77;"	d	file:
update_zmalloc_stat_alloc	src/zmalloc.c	91;"	d	file:
update_zmalloc_stat_free	src/zmalloc.c	101;"	d	file:
update_zmalloc_stat_sub	src/zmalloc.c	72;"	d	file:
update_zmalloc_stat_sub	src/zmalloc.c	75;"	d	file:
update_zmalloc_stat_sub	src/zmalloc.c	83;"	d	file:
upval	deps/lua/src/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:
upvaldesc	deps/lua/src/lparser.h	/^typedef struct upvaldesc {$/;"	s
upvaldesc	deps/lua/src/lparser.h	/^} upvaldesc;$/;"	t	typeref:struct:upvaldesc
upvals	deps/lua/src/lobject.h	/^  UpVal *upvals[1];$/;"	m	struct:LClosure
upvalue	deps/lua/src/lobject.h	/^  TValue upvalue[1];$/;"	m	struct:CClosure
upvalues	deps/lua/src/lobject.h	/^  TString **upvalues;  \/* upvalue names *\/$/;"	m	struct:Proto
upvalues	deps/lua/src/lparser.h	/^  upvaldesc upvalues[LUAI_MAXUPVALUES];  \/* upvalues *\/$/;"	m	struct:FuncState
usage	deps/lua/src/luac.c	/^static void usage(const char* message)$/;"	f	file:
usage	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^usage(char *progname)$/;"	f	file:
usage	deps/pmdk/src/test/RUNTESTS	/^usage()$/;"	f
usage	deps/pmdk/src/test/match	/^sub usage {$/;"	s
usage	deps/pmdk/src/test/obj_lane/obj_lane.c	/^usage(const char *app)$/;"	f	file:
usage	deps/pmdk/src/test/obj_memcheck/obj_memcheck.c	/^static void usage(const char *a)$/;"	f	file:
usage	deps/pmdk/src/test/tools/ctrld/ctrld.c	/^usage(void)$/;"	f	file:
usage	deps/pmdk/src/test/tools/pmemobjcli/pmemobjcli.c	/^	const char *usage;	\/* usage string *\/$/;"	m	struct:pocli_cmd	file:
usage	deps/pmdk/utils/build-dpkg.sh	/^usage()$/;"	f
usage	deps/pmdk/utils/build-rpm.sh	/^usage()$/;"	f
usage	deps/pmdk/utils/check_license/check-headers.sh	/^function usage() {$/;"	f
usage	deps/pmdk/utils/docker/images/build-image.sh	/^function usage {$/;"	f
usage	deps/pmdk/utils/docker/images/push-image.sh	/^function usage {$/;"	f
usage	deps/pmdk/utils/style_check.sh	/^function usage() {$/;"	f
usage	src/redis-cli.c	/^static void usage(void) {$/;"	f	file:
usage	src/server.c	/^void usage(void) {$/;"	f
usage_str	deps/pmdk/src/test/tools/extents/extents.c	/^static const char *usage_str =$/;"	v	file:
usc	deps/pmdk/src/common/shutdown_state.h	/^	uint64_t usc;$/;"	m	struct:shutdown_state
usc_it	deps/pmdk/src/test/obj_sds/obj_sds.c	/^static size_t usc_it;$/;"	v	file:
usc_it	deps/pmdk/src/test/util_sds/util_sds.c	/^static size_t usc_it;$/;"	v	file:
uscs	deps/pmdk/src/test/obj_sds/obj_sds.c	/^static uint64_t *uscs;$/;"	v	file:
uscs	deps/pmdk/src/test/util_sds/util_sds.c	/^static uint64_t *uscs;$/;"	v	file:
uscs_size	deps/pmdk/src/test/obj_sds/obj_sds.c	/^static size_t uscs_size;$/;"	v	file:
uscs_size	deps/pmdk/src/test/util_sds/util_sds.c	/^static size_t uscs_size;$/;"	v	file:
use_avx512f_memcpy_memset	deps/pmdk/src/libpmem/x86_64/init.c	/^use_avx512f_memcpy_memset(struct pmem_funcs *funcs, enum memcpy_impl *impl)$/;"	f	file:
use_avx_memcpy_memset	deps/pmdk/src/libpmem/x86_64/init.c	/^use_avx_memcpy_memset(struct pmem_funcs *funcs, enum memcpy_impl *impl)$/;"	f	file:
use_random_size	deps/pmdk/src/benchmarks/obj_pmalloc.cpp	/^	bool use_random_size; \/* if set, use random size allocations *\/$/;"	m	struct:prog_args	file:
use_random_size	deps/pmdk/src/benchmarks/pmemobj_persist.cpp	/^	bool use_random_size; \/* if set, use random size allocations *\/$/;"	m	struct:prog_args	file:
use_range	deps/pmdk/src/tools/pmempool/info.h	/^	bool use_range;		\/* use range for blocks *\/$/;"	m	struct:pmempool_info_args
use_rdlock	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	bool use_rdlock;	      \/* use read lock, instead of write lock *\/$/;"	m	struct:prog_args	file:
use_sse2_memcpy_memset	deps/pmdk/src/libpmem/x86_64/init.c	/^use_sse2_memcpy_memset(struct pmem_funcs *funcs, enum memcpy_impl *impl)$/;"	f	file:
use_syslog	deps/pmdk/src/tools/rpmemd/rpmemd_config.h	/^	bool use_syslog;$/;"	m	struct:rpmemd_config
use_system_threads	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	bool use_system_threads; \/* use system locks instead of PMEM locks *\/$/;"	m	struct:prog_args	file:
usec	deps/hiredis/test.c	/^static long long usec(void) {$/;"	f	file:
usec	src/intset.c	/^static long long usec(void) {$/;"	f	file:
usec	src/ziplist.c	/^static long long usec(void) {$/;"	f	file:
used	deps/hiredis/dict.h	/^    unsigned long used;$/;"	m	struct:dict
used	deps/pmdk/src/benchmarks/benchmark.hpp	/^	int used;$/;"	m	struct:benchmark_clo
used	src/aof.c	/^    unsigned long used, free;$/;"	m	struct:aofrwblock	file:
used	src/dict.h	/^    unsigned long used;$/;"	m	struct:dictht
used	src/geo.h	/^    size_t used;$/;"	m	struct:geoArray
used_memory	src/zmalloc.c	/^static size_t used_memory = 0;$/;"	v	file:
used_memory_mutex	src/zmalloc.c	/^pthread_mutex_t used_memory_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
user	deps/pmdk/src/examples/libpmemblk/assetdb/asset.h	/^	char user[ASSET_USER_NAME_MAX];$/;"	m	struct:asset
user	deps/pmdk/src/rpmem_common/rpmem_common.h	/^	char user[RPMEM_MAX_USER];$/;"	m	struct:rpmem_target_info
user_buffer_def	deps/pmdk/src/libpmemobj/memops.h	/^struct user_buffer_def {$/;"	s
user_data	deps/pmdk/src/libpmemobj/obj.h	/^	void *user_data;$/;"	m	struct:pmemobjpool
user_data	deps/pmdk/src/libpmemobj/tx.c	/^	void *user_data;$/;"	m	struct:tx	file:
user_flags	deps/pmdk/src/include/librpmem.h	/^	unsigned char user_flags[RPMEM_POOL_USER_FLAGS_LEN]; \/* user flags *\/$/;"	m	struct:rpmem_pool_attr
user_flags	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	unsigned char user_flags[RPMEM_POOL_USER_FLAGS_LEN]; \/* user flags *\/$/;"	m	struct:rpmem_pool_attr_packed
user_type	deps/pmdk/src/libpmemobj/obj.c	/^	type_num_t user_type;$/;"	m	struct:carg_realloc	file:
user_uuid	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^	bool user_uuid;$/;"	m	struct:bbtcreate_options	file:
usize	deps/jemalloc/include/jemalloc/internal/quarantine.h	/^	size_t	usize;$/;"	m	struct:quarantine_obj_s
ustime	src/quicklist.c	/^static long long ustime(void) {$/;"	f	file:
ustime	src/redis-benchmark.c	/^static long long ustime(void) {$/;"	f	file:
ustime	src/redis-cli.c	/^static long long ustime(void) {$/;"	f	file:
ustime	src/server.c	/^long long ustime(void) {$/;"	f
ut_aligned_free	deps/pmdk/src/test/unittest/ut_alloc.c	/^ut_aligned_free(const char *file, int line, const char *func, void *ptr)$/;"	f
ut_calloc	deps/pmdk/src/test/unittest/ut_alloc.c	/^ut_calloc(const char *file, int line, const char *func,$/;"	f
ut_checksum	deps/pmdk/src/test/unittest/ut.c	/^ut_checksum(uint8_t *addr, size_t len)$/;"	f
ut_close	deps/pmdk/src/test/unittest/ut_file.c	/^ut_close(const char *file, int line, const char *func, int fd)$/;"	f
ut_done	deps/pmdk/src/test/unittest/ut.c	/^ut_done(const char *file, int line, const char *func,$/;"	f
ut_dump_backtrace	deps/pmdk/src/test/unittest/ut_backtrace.c	/^ut_dump_backtrace(void)$/;"	f
ut_end	deps/pmdk/src/test/unittest/ut.c	/^ut_end(const char *file, int line, const char *func, int ret)$/;"	f
ut_err	deps/pmdk/src/test/unittest/ut.c	/^ut_err(const char *file, int line, const char *func,$/;"	f
ut_fatal	deps/pmdk/src/test/unittest/ut.c	/^ut_fatal(const char *file, int line, const char *func,$/;"	f
ut_fclose	deps/pmdk/src/test/unittest/ut_file.c	/^ut_fclose(const char *file, int line, const char *func, FILE *stream)$/;"	f
ut_fopen	deps/pmdk/src/test/unittest/ut_file.c	/^ut_fopen(const char *file, int line, const char *func, const char *path,$/;"	f
ut_free	deps/pmdk/src/test/unittest/ut_alloc.c	/^ut_free(const char *file, int line, const char *func, void *ptr)$/;"	f
ut_fstat	deps/pmdk/src/test/unittest/ut_file.c	/^ut_fstat(const char *file, int line, const char *func, int fd,$/;"	f
ut_ftruncate	deps/pmdk/src/test/unittest/ut_file.c	/^ut_ftruncate(const char *file, int line, const char *func, int fd,$/;"	f
ut_get_uuid_str	deps/pmdk/src/test/unittest/ut.c	/^ut_get_uuid_str(char *uu)$/;"	f
ut_get_uuid_str	deps/pmdk/src/test/unittest/ut.c	/^ut_get_uuid_str(char *uuid_str)$/;"	f
ut_jmp_buf_t	deps/pmdk/src/test/unittest/unittest.h	538;"	d
ut_jmp_buf_t	deps/pmdk/src/test/unittest/unittest.h	542;"	d
ut_lseek	deps/pmdk/src/test/unittest/ut_file.c	/^ut_lseek(const char *file, int line, const char *func, int fd,$/;"	f
ut_malloc	deps/pmdk/src/test/unittest/ut_alloc.c	/^ut_malloc(const char *file, int line, const char *func, size_t size)$/;"	f
ut_memalign	deps/pmdk/src/test/unittest/ut_alloc.c	/^ut_memalign(const char *file, int line, const char *func, size_t alignment,$/;"	f
ut_mmap	deps/pmdk/src/test/unittest/ut_file.c	/^ut_mmap(const char *file, int line, const char *func, void *addr,$/;"	f
ut_mmap_anon_aligned	deps/pmdk/src/test/unittest/ut_alloc.c	/^ut_mmap_anon_aligned(const char *file, int line, const char *func,$/;"	f
ut_mprotect	deps/pmdk/src/test/unittest/ut_file.c	/^ut_mprotect(const char *file, int line, const char *func, void *addr,$/;"	f
ut_munmap	deps/pmdk/src/test/unittest/ut_file.c	/^ut_munmap(const char *file, int line, const char *func, void *addr,$/;"	f
ut_munmap_anon_aligned	deps/pmdk/src/test/unittest/ut_alloc.c	/^ut_munmap_anon_aligned(const char *file, int line, const char *func,$/;"	f
ut_open	deps/pmdk/src/test/unittest/ut_file.c	/^ut_open(const char *file, int line, const char *func, const char *path,$/;"	f
ut_out	deps/pmdk/src/test/unittest/ut.c	/^ut_out(const char *file, int line, const char *func,$/;"	f
ut_pagealignmalloc	deps/pmdk/src/test/unittest/ut_alloc.c	/^ut_pagealignmalloc(const char *file, int line, const char *func,$/;"	f
ut_pmem2_config_delete	deps/pmdk/src/test/unittest/ut_pmem2_config.c	/^ut_pmem2_config_delete(const char *file, int line, const char *func,$/;"	f
ut_pmem2_config_new	deps/pmdk/src/test/unittest/ut_pmem2_config.c	/^ut_pmem2_config_new(const char *file, int line, const char *func,$/;"	f
ut_pmem2_config_set_fd	deps/pmdk/src/test/unittest/ut_pmem2_config.c	/^ut_pmem2_config_set_fd(const char *file, int line, const char *func,$/;"	f
ut_pmem2_expect_return	deps/pmdk/src/test/unittest/ut_pmem2_utils.c	/^void ut_pmem2_expect_return(const char *file, int line, const char *func,$/;"	f
ut_posix_fallocate	deps/pmdk/src/test/unittest/ut_file.c	/^ut_posix_fallocate(const char *file, int line, const char *func, int fd,$/;"	f
ut_read	deps/pmdk/src/test/unittest/ut_file.c	/^ut_read(const char *file, int line, const char *func, int fd,$/;"	f
ut_realloc	deps/pmdk/src/test/unittest/ut_alloc.c	/^ut_realloc(const char *file, int line, const char *func,$/;"	f
ut_register_sighandlers	deps/pmdk/src/test/unittest/ut_backtrace.c	/^ut_register_sighandlers(void)$/;"	f
ut_sigaction	deps/pmdk/src/test/unittest/ut_signal.c	/^ut_sigaction(const char *file, int line, const char *func,$/;"	f
ut_sighandler	deps/pmdk/src/test/unittest/ut_backtrace.c	/^ut_sighandler(int sig)$/;"	f
ut_siglongjmp	deps/pmdk/src/test/unittest/unittest.h	539;"	d
ut_siglongjmp	deps/pmdk/src/test/unittest/unittest.h	543;"	d
ut_sigsetjmp	deps/pmdk/src/test/unittest/unittest.h	540;"	d
ut_sigsetjmp	deps/pmdk/src/test/unittest/unittest.h	544;"	d
ut_spawnv	deps/pmdk/src/test/unittest/ut.c	/^ut_spawnv(int argc, const char **argv, ...)$/;"	f
ut_start	deps/pmdk/src/test/unittest/ut.c	/^ut_start(const char *file, int line, const char *func,$/;"	f
ut_startW	deps/pmdk/src/test/unittest/ut.c	/^ut_startW(const char *file, int line, const char *func,$/;"	f
ut_start_common	deps/pmdk/src/test/unittest/ut.c	/^ut_start_common(const char *file, int line, const char *func,$/;"	f	file:
ut_stat	deps/pmdk/src/test/unittest/ut_file.c	/^ut_stat(const char *file, int line, const char *func, const char *path,$/;"	f
ut_statW	deps/pmdk/src/test/unittest/ut_file.c	/^ut_statW(const char *file, int line, const char *func, const wchar_t *path,$/;"	f
ut_strdup	deps/pmdk/src/test/unittest/ut_alloc.c	/^ut_strdup(const char *file, int line, const char *func,$/;"	f
ut_strerror	deps/pmdk/src/test/unittest/ut.c	/^ut_strerror(int errnum, char *buff, size_t bufflen)$/;"	f
ut_strtoi	deps/pmdk/src/test/unittest/ut.c	/^ut_strtoi(const char *file, int line, const char *func,$/;"	f
ut_strtol	deps/pmdk/src/test/unittest/ut.c	/^ut_strtol(const char *file, int line, const char *func,$/;"	f
ut_strtoll	deps/pmdk/src/test/unittest/ut.c	/^ut_strtoll(const char *file, int line, const char *func,$/;"	f
ut_strtou	deps/pmdk/src/test/unittest/ut.c	/^ut_strtou(const char *file, int line, const char *func,$/;"	f
ut_strtoul	deps/pmdk/src/test/unittest/ut.c	/^ut_strtoul(const char *file, int line, const char *func,$/;"	f
ut_strtoull	deps/pmdk/src/test/unittest/ut.c	/^ut_strtoull(const char *file, int line, const char *func,$/;"	f
ut_suppress_errmsg	deps/pmdk/src/test/unittest/ut.c	/^ut_suppress_errmsg(void)$/;"	f
ut_suppress_errmsg	deps/pmdk/src/test/unittest/ut.c	/^void ut_suppress_errmsg(void) {}$/;"	f
ut_thread_create	deps/pmdk/src/test/unittest/ut_pthread.c	/^ut_thread_create(const char *file, int line, const char *func,$/;"	f
ut_thread_join	deps/pmdk/src/test/unittest/ut_pthread.c	/^ut_thread_join(const char *file, int line, const char *func,$/;"	f
ut_toUTF16	deps/pmdk/src/test/unittest/ut.c	/^ut_toUTF16(const char *wstr)$/;"	f
ut_toUTF8	deps/pmdk/src/test/unittest/ut.c	/^ut_toUTF8(const wchar_t *wstr)$/;"	f
ut_unlink	deps/pmdk/src/test/unittest/ut_file.c	/^ut_unlink(const char *file, int line, const char *func, const char *path)$/;"	f
ut_unsuppress_errmsg	deps/pmdk/src/test/unittest/ut.c	/^ut_unsuppress_errmsg(void)$/;"	f
ut_unsuppress_errmsg	deps/pmdk/src/test/unittest/ut.c	/^void ut_unsuppress_errmsg(void) {}$/;"	f
ut_util_statW	deps/pmdk/src/test/unittest/unittest.h	/^static inline int ut_util_statW(const wchar_t *path,$/;"	f
ut_wopen	deps/pmdk/src/test/unittest/ut_file.c	/^ut_wopen(const char *file, int line, const char *func, const wchar_t *path,$/;"	f
ut_write	deps/pmdk/src/test/unittest/ut_file.c	/^ut_write(const char *file, int line, const char *func, int fd,$/;"	f
utilTest	src/util.c	/^int utilTest(int argc, char **argv) {$/;"	f
util_aligned_free	deps/pmdk/src/common/util_posix.c	/^util_aligned_free(void *ptr)$/;"	f
util_aligned_free	deps/pmdk/src/common/util_windows.c	/^util_aligned_free(void *ptr)$/;"	f
util_aligned_malloc	deps/pmdk/src/common/util_posix.c	/^util_aligned_malloc(size_t alignment, size_t size)$/;"	f
util_aligned_malloc	deps/pmdk/src/common/util_windows.c	/^util_aligned_malloc(size_t alignment, size_t size)$/;"	f
util_alignof	deps/pmdk/src/common/util.h	79;"	d
util_atomic_load32	deps/pmdk/src/common/util.h	442;"	d
util_atomic_load64	deps/pmdk/src/common/util.h	444;"	d
util_atomic_load_explicit	deps/pmdk/src/common/util.h	309;"	d
util_atomic_load_explicit32	deps/pmdk/src/common/util.h	224;"	d
util_atomic_load_explicit32	deps/pmdk/src/common/util.h	322;"	d
util_atomic_load_explicit64	deps/pmdk/src/common/util.h	225;"	d
util_atomic_load_explicit64	deps/pmdk/src/common/util.h	323;"	d
util_atomic_store32	deps/pmdk/src/common/util.h	447;"	d
util_atomic_store64	deps/pmdk/src/common/util.h	449;"	d
util_atomic_store_explicit32	deps/pmdk/src/common/util.h	236;"	d
util_atomic_store_explicit32	deps/pmdk/src/common/util.h	342;"	d
util_atomic_store_explicit64	deps/pmdk/src/common/util.h	237;"	d
util_atomic_store_explicit64	deps/pmdk/src/common/util.h	327;"	d
util_autodetect_size	deps/pmdk/src/common/set.c	/^util_autodetect_size(const char *path)$/;"	f	file:
util_bool_compare_and_swap32	deps/pmdk/src/common/util.h	244;"	d
util_bool_compare_and_swap32	deps/pmdk/src/common/util.h	377;"	d
util_bool_compare_and_swap64	deps/pmdk/src/common/util.h	245;"	d
util_bool_compare_and_swap64	deps/pmdk/src/common/util.h	379;"	d
util_check_arch_flags	deps/pmdk/src/common/pool_hdr.c	/^util_check_arch_flags(const struct arch_flags *arch_flags)$/;"	f
util_check_memory	deps/pmdk/src/tools/pmempool/common.c	/^util_check_memory(const uint8_t *buff, size_t len, uint8_t val)$/;"	f
util_checksum	deps/pmdk/src/common/util.c	/^util_checksum(void *addr, size_t len, uint64_t *csump,$/;"	f
util_checksum_compute	deps/pmdk/src/common/util.c	/^util_checksum_compute(void *addr, size_t len, uint64_t *csump, size_t skip_off)$/;"	f
util_checksum_seq	deps/pmdk/src/common/util.c	/^util_checksum_seq(const void *addr, size_t len, uint64_t csum)$/;"	f
util_clrbit	deps/pmdk/src/common/util.h	/^util_clrbit(uint8_t *b, uint32_t i)$/;"	f
util_compare_file_inodes	deps/pmdk/src/common/util_posix.c	/^util_compare_file_inodes(const char *path1, const char *path2)$/;"	f
util_compare_file_inodes	deps/pmdk/src/common/util_windows.c	/^util_compare_file_inodes(const char *path1, const char *path2)$/;"	f
util_concat_str	deps/pmdk/src/common/util.c	/^util_concat_str(const char *s1, const char *s2)$/;"	f
util_cond_destroy	deps/pmdk/src/common/sys_util.h	/^util_cond_destroy(os_cond_t *__restrict cond)$/;"	f
util_cond_init	deps/pmdk/src/common/sys_util.h	/^util_cond_init(os_cond_t *__restrict cond)$/;"	f
util_convert2h_hdr_nocheck	deps/pmdk/src/common/pool_hdr.c	/^util_convert2h_hdr_nocheck(struct pool_hdr *hdrp)$/;"	f
util_convert2le_hdr	deps/pmdk/src/common/pool_hdr.c	/^util_convert2le_hdr(struct pool_hdr *hdrp)$/;"	f
util_ctl_exec	deps/pmdk/src/test/util_ctl/util_ctl.c	/^util_ctl_exec(struct pool *pop, const char *name, void *arg)$/;"	f	file:
util_ctl_get	deps/pmdk/src/test/util_ctl/util_ctl.c	/^util_ctl_get(struct pool *pop, const char *name, void *arg)$/;"	f	file:
util_ctl_set	deps/pmdk/src/test/util_ctl/util_ctl.c	/^util_ctl_set(struct pool *pop, const char *name, void *arg)$/;"	f	file:
util_ddax_region_find	deps/pmdk/src/common/file_posix.c	/^util_ddax_region_find(const char *path)$/;"	f
util_ddax_region_find	deps/pmdk/src/common/file_windows.c	/^util_ddax_region_find(const char *path)$/;"	f
util_div_ceil	deps/pmdk/src/common/util.h	/^util_div_ceil(unsigned a, unsigned b)$/;"	f
util_dl_check_error	deps/pmdk/src/common/set.c	/^util_dl_check_error(void *handle, const char *func)$/;"	f	file:
util_dlclose	deps/pmdk/src/common/dlsym.h	/^util_dlclose(void *handle)$/;"	f
util_dlerror	deps/pmdk/src/common/dlsym.h	/^util_dlerror(void)$/;"	f
util_dlopen	deps/pmdk/src/common/dlsym.h	/^util_dlopen(const char *filename)$/;"	f
util_dlsym	deps/pmdk/src/common/dlsym.h	/^util_dlsym(void *handle, const char *symbol)$/;"	f
util_emit_log	deps/pmdk/src/common/util.c	/^util_emit_log(const char *lib, const char *func, int order)$/;"	f
util_fd_get_size	deps/pmdk/src/common/file.c	/^util_fd_get_size(int fd)$/;"	f
util_fd_get_type	deps/pmdk/src/common/file.c	/^util_fd_get_type(int fd)$/;"	f
util_feature2pmempool_feature	deps/pmdk/src/common/pool_hdr.c	/^util_feature2pmempool_feature(features_t feat)$/;"	f
util_feature2str	deps/pmdk/src/common/pool_hdr.c	/^util_feature2str(features_t features, features_t *found)$/;"	f
util_feature_check	deps/pmdk/src/common/pool_hdr.c	/^util_feature_check(struct pool_hdr *hdrp, features_t known)$/;"	f
util_feature_cmp	deps/pmdk/src/common/pool_hdr.c	/^util_feature_cmp(features_t features, features_t ref)$/;"	f
util_feature_disable	deps/pmdk/src/common/pool_hdr.c	/^util_feature_disable(features_t *features, features_t old_feature)$/;"	f
util_feature_enable	deps/pmdk/src/common/pool_hdr.c	/^util_feature_enable(features_t *features, features_t new_feature)$/;"	f
util_feature_is_set	deps/pmdk/src/common/pool_hdr.c	/^util_feature_is_set(features_t features, features_t flag)$/;"	f
util_feature_is_zero	deps/pmdk/src/common/pool_hdr.c	/^util_feature_is_zero(features_t features)$/;"	f
util_fetch_and_add32	deps/pmdk/src/common/util.h	246;"	d
util_fetch_and_add32	deps/pmdk/src/common/util.h	381;"	d
util_fetch_and_add64	deps/pmdk/src/common/util.h	247;"	d
util_fetch_and_add64	deps/pmdk/src/common/util.h	383;"	d
util_fetch_and_and32	deps/pmdk/src/common/util.h	250;"	d
util_fetch_and_and32	deps/pmdk/src/common/util.h	389;"	d
util_fetch_and_and64	deps/pmdk/src/common/util.h	251;"	d
util_fetch_and_and64	deps/pmdk/src/common/util.h	391;"	d
util_fetch_and_or32	deps/pmdk/src/common/util.h	252;"	d
util_fetch_and_or32	deps/pmdk/src/common/util.h	393;"	d
util_fetch_and_or64	deps/pmdk/src/common/util.h	253;"	d
util_fetch_and_or64	deps/pmdk/src/common/util.h	395;"	d
util_fetch_and_sub32	deps/pmdk/src/common/util.h	248;"	d
util_fetch_and_sub32	deps/pmdk/src/common/util.h	385;"	d
util_fetch_and_sub64	deps/pmdk/src/common/util.h	249;"	d
util_fetch_and_sub64	deps/pmdk/src/common/util.h	387;"	d
util_fgets	deps/pmdk/src/common/util.c	/^util_fgets(char *buffer, int max, FILE *stream)$/;"	f
util_file_create	deps/pmdk/src/common/file.c	/^util_file_create(const char *path, size_t size, size_t minsize)$/;"	f
util_file_device_dax_alignment	deps/pmdk/src/common/file_posix.c	/^util_file_device_dax_alignment(const char *path)$/;"	f
util_file_device_dax_alignment	deps/pmdk/src/common/file_windows.c	/^util_file_device_dax_alignment(const char *path)$/;"	f
util_file_dir_close	deps/pmdk/src/common/file_posix.c	/^util_file_dir_close(struct dir_handle *handle)$/;"	f
util_file_dir_close	deps/pmdk/src/common/file_windows.c	/^util_file_dir_close(struct dir_handle *handle)$/;"	f
util_file_dir_next	deps/pmdk/src/common/file_posix.c	/^util_file_dir_next(struct dir_handle *handle, struct file_info *info)$/;"	f
util_file_dir_next	deps/pmdk/src/common/file_windows.c	/^util_file_dir_next(struct dir_handle *handle, struct file_info *info)$/;"	f
util_file_dir_open	deps/pmdk/src/common/file_posix.c	/^util_file_dir_open(struct dir_handle *handle, const char *path)$/;"	f
util_file_dir_open	deps/pmdk/src/common/file_windows.c	/^util_file_dir_open(struct dir_handle *handle, const char *path)$/;"	f
util_file_dir_remove	deps/pmdk/src/common/file_posix.c	/^util_file_dir_remove(const char *path)$/;"	f
util_file_dir_remove	deps/pmdk/src/common/file_windows.c	/^util_file_dir_remove(const char *path)$/;"	f
util_file_exists	deps/pmdk/src/common/file.c	/^util_file_exists(const char *path)$/;"	f
util_file_get_size	deps/pmdk/src/common/file.c	/^util_file_get_size(const char *path)$/;"	f
util_file_get_type	deps/pmdk/src/common/file.c	/^util_file_get_type(const char *path)$/;"	f
util_file_map_whole	deps/pmdk/src/common/file.c	/^util_file_map_whole(const char *path)$/;"	f
util_file_mkdir	deps/pmdk/src/common/file_posix.c	/^util_file_mkdir(const char *path, mode_t mode)$/;"	f
util_file_mkdir	deps/pmdk/src/common/file_windows.c	/^util_file_mkdir(const char *path, mode_t mode)$/;"	f
util_file_open	deps/pmdk/src/common/file.c	/^util_file_open(const char *path, size_t *size, size_t minsize, int flags)$/;"	f
util_file_pread	deps/pmdk/src/common/file.c	/^util_file_pread(const char *path, void *buffer, size_t size,$/;"	f
util_file_pwrite	deps/pmdk/src/common/file.c	/^util_file_pwrite(const char *path, const void *buffer, size_t size,$/;"	f
util_file_zero	deps/pmdk/src/common/file.c	/^util_file_zero(const char *path, os_off_t off, size_t len)$/;"	f
util_flag_isclr	deps/pmdk/src/common/util.h	160;"	d
util_flag_isset	deps/pmdk/src/common/util.h	159;"	d
util_free_UTF16	deps/pmdk/src/common/util_windows.c	/^util_free_UTF16(wchar_t *wstr)$/;"	f
util_free_UTF8	deps/pmdk/src/common/util_windows.c	/^void util_free_UTF8(char *str) {$/;"	f
util_get_arch_flags	deps/pmdk/src/common/pool_hdr.c	/^util_get_arch_flags(struct arch_flags *arch_flags)$/;"	f
util_get_not_masked_bits	deps/pmdk/src/common/util.h	136;"	d
util_get_pool_type_second_page	deps/pmdk/src/tools/pmempool/common.c	/^util_get_pool_type_second_page(const void *pool_base_addr)$/;"	f
util_get_printable_ascii	deps/pmdk/src/common/util.h	/^util_get_printable_ascii(char c)$/;"	f
util_get_rpmem_attr	deps/pmdk/src/common/set.c	/^util_get_rpmem_attr(struct rpmem_pool_attr *rattr, const struct pool_hdr *hdrp)$/;"	f	file:
util_get_unknown_features	deps/pmdk/src/common/pool_hdr.c	/^util_get_unknown_features(features_t features, features_t known)$/;"	f
util_getexecname	deps/pmdk/src/common/util_posix.c	/^util_getexecname(char *path, size_t pathlen)$/;"	f
util_getexecname	deps/pmdk/src/common/util_windows.c	/^util_getexecname(char *path, size_t pathlen)$/;"	f
util_header_check	deps/pmdk/src/common/set.c	/^util_header_check(struct pool_set *set, unsigned repidx, unsigned partidx,$/;"	f	file:
util_header_check_remote	deps/pmdk/src/common/set.c	/^util_header_check_remote(struct pool_set *set, unsigned partidx)$/;"	f	file:
util_header_create	deps/pmdk/src/common/set.c	/^util_header_create(struct pool_set *set, unsigned repidx, unsigned partidx,$/;"	f
util_heap_max_zone	deps/pmdk/src/tools/pmempool/common.c	/^util_heap_max_zone(size_t size)$/;"	f
util_init	deps/pmdk/src/common/util.c	/^util_init(void)$/;"	f
util_is_absolute_path	deps/pmdk/src/common/file_posix.c	/^util_is_absolute_path(const char *path)$/;"	f
util_is_absolute_path	deps/pmdk/src/common/file_windows.c	/^util_is_absolute_path(const char *path)$/;"	f
util_is_poolset_file	deps/pmdk/src/common/set.c	/^util_is_poolset_file(const char *path)$/;"	f
util_is_pow2	deps/pmdk/src/common/util.h	/^util_is_pow2(uint64_t v)$/;"	f
util_is_zeroed	deps/pmdk/src/common/util.c	/^util_is_zeroed(const void *addr, size_t len)$/;"	f
util_isclr	deps/pmdk/src/common/util.h	157;"	d
util_isset	deps/pmdk/src/common/util.h	156;"	d
util_localtime	deps/pmdk/src/common/util.c	/^util_localtime(const time_t *timep)$/;"	f
util_lssb_index	deps/pmdk/src/common/util.h	/^util_lssb_index(int value)$/;"	f
util_lssb_index	deps/pmdk/src/common/util.h	257;"	d
util_lssb_index64	deps/pmdk/src/common/util.h	/^util_lssb_index64(long long value)$/;"	f
util_lssb_index64	deps/pmdk/src/common/util.h	258;"	d
util_map	deps/pmdk/src/common/mmap.c	/^util_map(int fd, os_off_t off, size_t len, int flags, int rdonly,$/;"	f
util_map_hdr	deps/pmdk/src/common/set.c	/^util_map_hdr(struct pool_set_part *part, int flags, int rdonly)$/;"	f
util_map_hint	deps/pmdk/src/common/mmap_posix.c	/^util_map_hint(size_t len, size_t req_align)$/;"	f
util_map_hint	deps/pmdk/src/common/mmap_windows.c	/^util_map_hint(size_t len, size_t req_align)$/;"	f
util_map_hint_align	deps/pmdk/src/common/mmap.h	/^util_map_hint_align(size_t len, size_t req_align)$/;"	f
util_map_hint_unused	deps/pmdk/src/common/mmap_posix.c	/^util_map_hint_unused(void *minaddr, size_t len, size_t align)$/;"	f
util_map_hint_unused	deps/pmdk/src/common/mmap_windows.c	/^util_map_hint_unused(void *minaddr, size_t len, size_t align)$/;"	f
util_map_part	deps/pmdk/src/common/set.c	/^util_map_part(struct pool_set_part *part, void *addr, size_t size,$/;"	f
util_map_sync	deps/pmdk/src/common/mmap_posix.c	/^util_map_sync(void *addr, size_t len, int proto, int flags, int fd,$/;"	f
util_map_sync	deps/pmdk/src/common/mmap_windows.c	/^util_map_sync(void *addr, size_t len, int proto, int flags, int fd,$/;"	f
util_mmap_fini	deps/pmdk/src/common/mmap.c	/^util_mmap_fini(void)$/;"	f
util_mmap_init	deps/pmdk/src/common/mmap.c	/^util_mmap_init(void)$/;"	f
util_mssb_index	deps/pmdk/src/common/util.h	/^util_mssb_index(int value)$/;"	f
util_mssb_index	deps/pmdk/src/common/util.h	259;"	d
util_mssb_index64	deps/pmdk/src/common/util.h	/^util_mssb_index64(long long value)$/;"	f
util_mssb_index64	deps/pmdk/src/common/util.h	260;"	d
util_mutex_destroy	deps/pmdk/src/common/sys_util.h	/^util_mutex_destroy(os_mutex_t *m)$/;"	f
util_mutex_init	deps/pmdk/src/common/sys_util.h	/^util_mutex_init(os_mutex_t *m)$/;"	f
util_mutex_lock	deps/pmdk/src/common/sys_util.h	/^util_mutex_lock(os_mutex_t *m)$/;"	f
util_mutex_trylock	deps/pmdk/src/common/sys_util.h	/^util_mutex_trylock(os_mutex_t *m)$/;"	f
util_mutex_unlock	deps/pmdk/src/common/sys_util.h	/^util_mutex_unlock(os_mutex_t *m)$/;"	f
util_opt_check_requirements	deps/pmdk/src/tools/pmempool/common.c	/^util_opt_check_requirements(const struct options *opts,$/;"	f	file:
util_opt_get_index	deps/pmdk/src/tools/pmempool/common.c	/^util_opt_get_index(const struct options *opts, int opt)$/;"	f	file:
util_opt_get_req	deps/pmdk/src/tools/pmempool/common.c	/^util_opt_get_req(const struct options *opts, int opt, pmem_pool_type_t type)$/;"	f	file:
util_opt_print_requirements	deps/pmdk/src/tools/pmempool/common.c	/^util_opt_print_requirements(const struct options *opts,$/;"	f	file:
util_opt_verify_requirements	deps/pmdk/src/tools/pmempool/common.c	/^util_opt_verify_requirements(const struct options *opts, size_t index,$/;"	f	file:
util_opt_verify_type	deps/pmdk/src/tools/pmempool/common.c	/^util_opt_verify_type(const struct options *opts, pmem_pool_type_t type,$/;"	f	file:
util_options_alloc	deps/pmdk/src/tools/pmempool/common.c	/^util_options_alloc(const struct option *options,$/;"	f
util_options_free	deps/pmdk/src/tools/pmempool/common.c	/^util_options_free(struct options *opts)$/;"	f
util_options_getopt	deps/pmdk/src/tools/pmempool/common.c	/^util_options_getopt(int argc, char *argv[], const char *optstr,$/;"	f
util_options_verify	deps/pmdk/src/tools/pmempool/common.c	/^util_options_verify(const struct options *opts, pmem_pool_type_t type)$/;"	f
util_parse_add_directory	deps/pmdk/src/common/set.c	/^util_parse_add_directory(struct pool_set *set, const char *path,$/;"	f	file:
util_parse_add_element	deps/pmdk/src/common/set.c	/^util_parse_add_element(struct pool_set *set, const char *path, size_t filesize)$/;"	f	file:
util_parse_add_part	deps/pmdk/src/common/set.c	/^util_parse_add_part(struct pool_set *set, const char *path, size_t filesize)$/;"	f	file:
util_parse_add_remote_replica	deps/pmdk/src/common/set.c	/^util_parse_add_remote_replica(struct pool_set **setp, char *node_addr,$/;"	f	file:
util_parse_add_replica	deps/pmdk/src/common/set.c	/^util_parse_add_replica(struct pool_set **setp)$/;"	f	file:
util_parse_chunk_types	deps/pmdk/src/tools/pmempool/common.c	/^util_parse_chunk_types(const char *str, uint64_t *types)$/;"	f
util_parse_enum	deps/pmdk/src/tools/pmempool/common.c	/^util_parse_enum(const char *str, int first, int max, uint64_t *bitmap,$/;"	f	file:
util_parse_enums	deps/pmdk/src/tools/pmempool/common.c	/^util_parse_enums(const char *str, int first, int max, uint64_t *bitmap,$/;"	f	file:
util_parse_mode	deps/pmdk/src/tools/pmempool/common.c	/^util_parse_mode(const char *str, mode_t *mode)$/;"	f
util_parse_range	deps/pmdk/src/tools/pmempool/common.c	/^util_parse_range(char *str, struct range *rangep, struct range entire)$/;"	f	file:
util_parse_range_from	deps/pmdk/src/tools/pmempool/common.c	/^util_parse_range_from(char *str, struct range *rangep, struct range entire)$/;"	f	file:
util_parse_range_number	deps/pmdk/src/tools/pmempool/common.c	/^util_parse_range_number(char *str, struct range *rangep, struct range entire)$/;"	f	file:
util_parse_range_to	deps/pmdk/src/tools/pmempool/common.c	/^util_parse_range_to(char *str, struct range *rangep, struct range entire)$/;"	f	file:
util_parse_ranges	deps/pmdk/src/tools/pmempool/common.c	/^util_parse_ranges(const char *ptr, struct ranges *rangesp, struct range entire)$/;"	f
util_parse_size	deps/pmdk/src/common/util.c	/^util_parse_size(const char *str, size_t *sizep)$/;"	f
util_part_fdclose	deps/pmdk/src/common/set.c	/^util_part_fdclose(struct pool_set_part *part)$/;"	f
util_part_idx_by_file_name	deps/pmdk/src/common/set.c	/^util_part_idx_by_file_name(const char *filename)$/;"	f	file:
util_part_open	deps/pmdk/src/common/set.c	/^util_part_open(struct pool_set_part *part, size_t minsize, int create_part)$/;"	f
util_part_realpath	deps/pmdk/src/common/util_posix.c	/^util_part_realpath(const char *path)$/;"	f
util_part_realpath	deps/pmdk/src/common/util_windows.c	/^util_part_realpath(const char *path)$/;"	f
util_persist	deps/pmdk/src/common/util_pmem.h	/^util_persist(int is_pmem, const void *addr, size_t len)$/;"	f
util_persist_auto	deps/pmdk/src/common/util_pmem.h	/^util_persist_auto(int is_pmem, const void *addr, size_t len)$/;"	f
util_pool_attr2hdr	deps/pmdk/src/common/set.c	/^util_pool_attr2hdr(struct pool_hdr *hdr, const struct pool_attr *attr)$/;"	f
util_pool_clear_badblocks	deps/pmdk/src/tools/pmempool/common.c	/^util_pool_clear_badblocks(const char *path, int create)$/;"	f
util_pool_close_remote	deps/pmdk/src/common/set.c	/^util_pool_close_remote(RPMEMpool *rpp)$/;"	f
util_pool_create	deps/pmdk/src/common/set.c	/^util_pool_create(struct pool_set **setp, const char *path, size_t poolsize,$/;"	f
util_pool_create_uuids	deps/pmdk/src/common/set.c	/^util_pool_create_uuids(struct pool_set **setp, const char *path,$/;"	f
util_pool_extend	deps/pmdk/src/common/set.c	/^util_pool_extend(struct pool_set *set, size_t *size, size_t minpartsize)$/;"	f
util_pool_has_device_dax	deps/pmdk/src/common/set.c	/^util_pool_has_device_dax(struct pool_set *set)$/;"	f
util_pool_hdr2attr	deps/pmdk/src/common/set.c	/^util_pool_hdr2attr(struct pool_attr *attr, struct pool_hdr *hdr)$/;"	f
util_pool_open	deps/pmdk/src/common/set.c	/^util_pool_open(struct pool_set **setp, const char *path, size_t minpartsize,$/;"	f
util_pool_open_nocheck	deps/pmdk/src/common/set.c	/^util_pool_open_nocheck(struct pool_set *set, unsigned flags)$/;"	f
util_pool_open_remote	deps/pmdk/src/common/set.c	/^util_pool_open_remote(struct pool_set **setp, const char *path, int cow,$/;"	f
util_poolset_append_new_part	deps/pmdk/src/common/set.c	/^util_poolset_append_new_part(struct pool_set *set, size_t size)$/;"	f	file:
util_poolset_check_devdax	deps/pmdk/src/common/set.c	/^util_poolset_check_devdax(struct pool_set *set)$/;"	f	file:
util_poolset_check_header_options	deps/pmdk/src/common/set.c	/^util_poolset_check_header_options(struct pool_set *set, uint32_t incompat)$/;"	f	file:
util_poolset_check_options	deps/pmdk/src/common/set.c	/^util_poolset_check_options(struct pool_set *set)$/;"	f	file:
util_poolset_chmod	deps/pmdk/src/common/set.c	/^util_poolset_chmod(struct pool_set *set, mode_t mode)$/;"	f
util_poolset_close	deps/pmdk/src/common/set.c	/^util_poolset_close(struct pool_set *set, enum del_parts_mode del)$/;"	f
util_poolset_create_set	deps/pmdk/src/common/set.c	/^util_poolset_create_set(struct pool_set **setp, const char *path,$/;"	f
util_poolset_directories_load	deps/pmdk/src/common/set.c	/^util_poolset_directories_load(struct pool_set *set)$/;"	f	file:
util_poolset_directory_load	deps/pmdk/src/common/set.c	/^util_poolset_directory_load(struct pool_replica **repp, const char *directory)$/;"	f	file:
util_poolset_fdclose	deps/pmdk/src/common/set.c	/^util_poolset_fdclose(struct pool_set *set)$/;"	f
util_poolset_fdclose_always	deps/pmdk/src/common/set.c	/^util_poolset_fdclose_always(struct pool_set *set)$/;"	f
util_poolset_files_local	deps/pmdk/src/common/set.c	/^util_poolset_files_local(struct pool_set *set, size_t minpartsize, int create)$/;"	f	file:
util_poolset_files_remote	deps/pmdk/src/common/set.c	/^util_poolset_files_remote(struct pool_set *set, size_t minsize,$/;"	f	file:
util_poolset_foreach_part	deps/pmdk/src/common/set.c	/^util_poolset_foreach_part(const char *path,$/;"	f
util_poolset_foreach_part_struct	deps/pmdk/src/common/set.c	/^util_poolset_foreach_part_struct(struct pool_set *set,$/;"	f
util_poolset_free	deps/pmdk/src/common/set.c	/^util_poolset_free(struct pool_set *set)$/;"	f
util_poolset_map	deps/pmdk/src/tools/pmempool/common.c	/^util_poolset_map(const char *fname, struct pool_set **poolset, int rdonly)$/;"	f
util_poolset_open	deps/pmdk/src/common/set.c	/^util_poolset_open(struct pool_set *set)$/;"	f
util_poolset_parse	deps/pmdk/src/common/set.c	/^util_poolset_parse(struct pool_set **setp, const char *path, int fd)$/;"	f
util_poolset_read	deps/pmdk/src/common/set.c	/^util_poolset_read(struct pool_set **setp, const char *path)$/;"	f
util_poolset_remote_open	deps/pmdk/src/common/set.c	/^util_poolset_remote_open(struct pool_replica *rep, unsigned repidx,$/;"	f
util_poolset_remote_replica_open	deps/pmdk/src/common/set.c	/^util_poolset_remote_replica_open(struct pool_set *set, unsigned repidx,$/;"	f
util_poolset_set_size	deps/pmdk/src/common/set.c	/^util_poolset_set_size(struct pool_set *set)$/;"	f	file:
util_poolset_single	deps/pmdk/src/common/set.c	/^util_poolset_single(const char *path, size_t filesize, int create,$/;"	f	file:
util_poolset_size	deps/pmdk/src/common/set.c	/^util_poolset_size(const char *path)$/;"	f
util_popcount	deps/pmdk/src/common/util.h	255;"	d
util_popcount	deps/pmdk/src/common/util.h	404;"	d
util_popcount64	deps/pmdk/src/common/util.h	256;"	d
util_popcount64	deps/pmdk/src/common/util.h	405;"	d
util_print_bad_files_cb	deps/pmdk/src/common/set.c	/^util_print_bad_files_cb(struct part_file *pf, void *arg)$/;"	f	file:
util_range_comparer	deps/pmdk/src/common/mmap.c	/^util_range_comparer(struct map_tracker *a, struct map_tracker *b)$/;"	f	file:
util_range_find	deps/pmdk/src/common/mmap.c	/^util_range_find(uintptr_t addr, size_t len)$/;"	f
util_range_find_unlocked	deps/pmdk/src/common/mmap.c	/^util_range_find_unlocked(uintptr_t addr, size_t len)$/;"	f	file:
util_range_is_pmem	deps/pmdk/src/common/mmap.c	/^util_range_is_pmem(const void *addrp, size_t len)$/;"	f
util_range_limit	deps/pmdk/src/tools/pmempool/common.c	/^util_range_limit(struct range *rangep, struct range limit)$/;"	f	file:
util_range_none	deps/pmdk/src/common/mmap.c	/^util_range_none(void *addr, size_t len)$/;"	f
util_range_register	deps/pmdk/src/common/mmap.c	/^util_range_register(const void *addr, size_t len, const char *path,$/;"	f
util_range_ro	deps/pmdk/src/common/mmap.c	/^util_range_ro(void *addr, size_t len)$/;"	f
util_range_rw	deps/pmdk/src/common/mmap.c	/^util_range_rw(void *addr, size_t len)$/;"	f
util_range_split	deps/pmdk/src/common/mmap.c	/^util_range_split(struct map_tracker *mt, const void *addrp, const void *endp)$/;"	f	file:
util_range_unregister	deps/pmdk/src/common/mmap.c	/^util_range_unregister(const void *addr, size_t len)$/;"	f
util_ranges_add	deps/pmdk/src/tools/pmempool/common.c	/^util_ranges_add(struct ranges *rangesp, struct range range)$/;"	f
util_ranges_clear	deps/pmdk/src/tools/pmempool/common.c	/^util_ranges_clear(struct ranges *rangesp)$/;"	f
util_ranges_contain	deps/pmdk/src/tools/pmempool/common.c	/^util_ranges_contain(const struct ranges *rangesp, uint64_t n)$/;"	f
util_ranges_empty	deps/pmdk/src/tools/pmempool/common.c	/^util_ranges_empty(const struct ranges *rangesp)$/;"	f
util_ranges_overlap	deps/pmdk/src/tools/pmempool/common.c	/^util_ranges_overlap(struct range *rangep1, struct range *rangep2)$/;"	f	file:
util_read	deps/pmdk/src/common/file.h	/^util_read(int fd, void *buf, size_t count)$/;"	f
util_read	deps/pmdk/src/common/file.h	108;"	d
util_read_compat_features	deps/pmdk/src/common/set.c	/^util_read_compat_features(struct pool_set *set, uint32_t *compat_features)$/;"	f	file:
util_readline	deps/pmdk/src/common/util.c	/^util_readline(FILE *fh)$/;"	f
util_remote_fini	deps/pmdk/src/common/set.c	/^util_remote_fini(void)$/;"	f
util_remote_init	deps/pmdk/src/common/set.c	/^util_remote_init(void)$/;"	f
util_remote_load	deps/pmdk/src/common/set.c	/^util_remote_load(void)$/;"	f
util_remote_store_attr	deps/pmdk/src/common/set.c	/^util_remote_store_attr(struct pool_hdr *hdrp,$/;"	f	file:
util_remote_unload	deps/pmdk/src/common/set.c	/^util_remote_unload(void)$/;"	f
util_remote_unload_core	deps/pmdk/src/common/set.c	/^util_remote_unload_core(void)$/;"	f	file:
util_replica_add_part	deps/pmdk/src/common/set.c	/^util_replica_add_part(struct pool_replica **repp,$/;"	f	file:
util_replica_add_part_by_idx	deps/pmdk/src/common/set.c	/^util_replica_add_part_by_idx(struct pool_replica **repp,$/;"	f	file:
util_replica_check	deps/pmdk/src/common/set.c	/^util_replica_check(struct pool_set *set, const struct pool_attr *attr)$/;"	f	file:
util_replica_check_map_sync	deps/pmdk/src/common/set.c	/^util_replica_check_map_sync(struct pool_set *set, unsigned repidx,$/;"	f	file:
util_replica_close	deps/pmdk/src/common/set.c	/^util_replica_close(struct pool_set *set, unsigned repidx)$/;"	f
util_replica_close_local	deps/pmdk/src/common/set.c	/^util_replica_close_local(struct pool_replica *rep, unsigned repn,$/;"	f
util_replica_close_remote	deps/pmdk/src/common/set.c	/^util_replica_close_remote(struct pool_replica *rep, unsigned repn,$/;"	f
util_replica_create_local	deps/pmdk/src/common/set.c	/^util_replica_create_local(struct pool_set *set, unsigned repidx, int flags,$/;"	f	file:
util_replica_create_remote	deps/pmdk/src/common/set.c	/^util_replica_create_remote(struct pool_set *set, unsigned repidx, int flags,$/;"	f	file:
util_replica_deep_common	deps/pmdk/src/common/set.c	/^util_replica_deep_common(const void *addr, size_t len, struct pool_set *set,$/;"	f
util_replica_deep_drain	deps/pmdk/src/common/set.c	/^util_replica_deep_drain(const void *addr, size_t len, struct pool_set *set,$/;"	f
util_replica_deep_persist	deps/pmdk/src/common/set.c	/^util_replica_deep_persist(const void *addr, size_t len, struct pool_set *set,$/;"	f
util_replica_fdclose	deps/pmdk/src/common/set.c	/^util_replica_fdclose(struct pool_replica *rep)$/;"	f
util_replica_force_page_allocation	deps/pmdk/src/common/set.c	/^util_replica_force_page_allocation(struct pool_replica *rep)$/;"	f	file:
util_replica_init_headers_local	deps/pmdk/src/common/set.c	/^util_replica_init_headers_local(struct pool_set *set, unsigned repidx,$/;"	f	file:
util_replica_map_local	deps/pmdk/src/common/set.c	/^util_replica_map_local(struct pool_set *set, unsigned repidx, int flags)$/;"	f	file:
util_replica_open	deps/pmdk/src/common/set.c	/^util_replica_open(struct pool_set *set, unsigned repidx, int flags)$/;"	f
util_replica_open_local	deps/pmdk/src/common/set.c	/^util_replica_open_local(struct pool_set *set, unsigned repidx, int flags)$/;"	f	file:
util_replica_open_remote	deps/pmdk/src/common/set.c	/^util_replica_open_remote(struct pool_set *set, unsigned repidx, int flags)$/;"	f
util_replica_reserve	deps/pmdk/src/common/set.c	/^util_replica_reserve(struct pool_replica **repp, unsigned n)$/;"	f	file:
util_replica_set_attr	deps/pmdk/src/common/set.c	/^util_replica_set_attr(struct pool_replica *rep,$/;"	f
util_replica_set_is_pmem	deps/pmdk/src/common/set.c	/^util_replica_set_is_pmem(struct pool_replica *rep)$/;"	f	file:
util_rwlock_destroy	deps/pmdk/src/common/sys_util.h	/^util_rwlock_destroy(os_rwlock_t *m)$/;"	f
util_rwlock_init	deps/pmdk/src/common/sys_util.h	/^util_rwlock_init(os_rwlock_t *m)$/;"	f
util_rwlock_rdlock	deps/pmdk/src/common/sys_util.h	/^util_rwlock_rdlock(os_rwlock_t *m)$/;"	f
util_rwlock_unlock	deps/pmdk/src/common/sys_util.h	/^util_rwlock_unlock(os_rwlock_t *m)$/;"	f
util_rwlock_wrlock	deps/pmdk/src/common/sys_util.h	/^util_rwlock_wrlock(os_rwlock_t *m)$/;"	f
util_safe_strcpy	deps/pmdk/src/common/util.c	/^util_safe_strcpy(char *dst, const char *src, size_t max_length)$/;"	f
util_semaphore_destroy	deps/pmdk/src/common/sys_util.h	/^util_semaphore_destroy(os_semaphore_t *sem)$/;"	f
util_semaphore_init	deps/pmdk/src/common/sys_util.h	/^util_semaphore_init(os_semaphore_t *sem, unsigned value)$/;"	f
util_semaphore_post	deps/pmdk/src/common/sys_util.h	/^util_semaphore_post(os_semaphore_t *sem)$/;"	f
util_semaphore_trywait	deps/pmdk/src/common/sys_util.h	/^util_semaphore_trywait(os_semaphore_t *sem)$/;"	f
util_semaphore_wait	deps/pmdk/src/common/sys_util.h	/^util_semaphore_wait(os_semaphore_t *sem)$/;"	f
util_set_alloc_funcs	deps/pmdk/src/common/alloc.c	/^util_set_alloc_funcs(void *(*malloc_func)(size_t size),$/;"	f
util_set_rpmem_attr	deps/pmdk/src/common/set.c	/^util_set_rpmem_attr(struct pool_hdr *hdrp, const struct rpmem_pool_attr *rattr)$/;"	f	file:
util_setbit	deps/pmdk/src/common/util.h	/^util_setbit(uint8_t *b, uint32_t i)$/;"	f
util_spin_destroy	deps/pmdk/src/common/sys_util.h	/^util_spin_destroy(os_spinlock_t *lock)$/;"	f
util_spin_init	deps/pmdk/src/common/sys_util.h	/^util_spin_init(os_spinlock_t *lock, int pshared)$/;"	f
util_spin_lock	deps/pmdk/src/common/sys_util.h	/^util_spin_lock(os_spinlock_t *lock)$/;"	f
util_spin_unlock	deps/pmdk/src/common/sys_util.h	/^util_spin_unlock(os_spinlock_t *lock)$/;"	f
util_stat_get_type	deps/pmdk/src/common/file.c	/^util_stat_get_type(const os_stat_t *st)$/;"	f
util_str2feature	deps/pmdk/src/common/pool_hdr.c	/^util_str2feature(const char *str)$/;"	f
util_str2pmempool_feature	deps/pmdk/src/common/pool_hdr.c	/^util_str2pmempool_feature(const char *str)$/;"	f
util_strerror	deps/pmdk/src/common/util_posix.c	/^util_strerror(int errnum, char *buff, size_t bufflen)$/;"	f
util_strerror	deps/pmdk/src/common/util_windows.c	/^util_strerror(int errnum, char *buff, size_t bufflen)$/;"	f
util_strwinerror	deps/pmdk/src/common/util_posix.c	/^util_strwinerror(char *buff, size_t bufflen)$/;"	f
util_strwinerror	deps/pmdk/src/common/util_windows.c	/^util_strwinerror(char *buff, size_t bufflen)$/;"	f
util_suppress_errmsg	deps/pmdk/src/common/util_windows.c	/^util_suppress_errmsg(void)$/;"	f
util_synchronize	deps/pmdk/src/common/util.h	/^util_synchronize(void)$/;"	f
util_synchronize	deps/pmdk/src/common/util.h	254;"	d
util_tmpfile	deps/pmdk/src/common/file_posix.c	/^util_tmpfile(const char *dir, const char *templ, int flags)$/;"	f
util_tmpfile	deps/pmdk/src/common/file_windows.c	/^util_tmpfile(const char *dir, const char *templ, int flags)$/;"	f
util_tmpfile_mkstemp	deps/pmdk/src/common/file_posix.c	/^util_tmpfile_mkstemp(const char *dir, const char *templ)$/;"	f	file:
util_toUTF16	deps/pmdk/src/common/util_windows.c	/^util_toUTF16(const char *str)$/;"	f
util_toUTF16_buff	deps/pmdk/src/common/util_windows.c	/^util_toUTF16_buff(const char *in, wchar_t *out, size_t out_size)$/;"	f
util_toUTF8	deps/pmdk/src/common/util_windows.c	/^util_toUTF8(const wchar_t *wstr)$/;"	f
util_toUTF8_buff	deps/pmdk/src/common/util_windows.c	/^util_toUTF8_buff(const wchar_t *in, char *out, size_t out_size)$/;"	f
util_unlink	deps/pmdk/src/common/file.c	/^util_unlink(const char *path)$/;"	f
util_unlink_flock	deps/pmdk/src/common/file.c	/^util_unlink_flock(const char *path)$/;"	f
util_unmap	deps/pmdk/src/common/mmap.c	/^util_unmap(void *addr, size_t len)$/;"	f
util_unmap_all_hdrs	deps/pmdk/src/common/set.c	/^util_unmap_all_hdrs(struct pool_set *set)$/;"	f	file:
util_unmap_hdr	deps/pmdk/src/common/set.c	/^util_unmap_hdr(struct pool_set_part *part)$/;"	f
util_unmap_part	deps/pmdk/src/common/set.c	/^util_unmap_part(struct pool_set_part *part)$/;"	f
util_unmap_parts	deps/pmdk/src/common/set.c	/^util_unmap_parts(struct pool_replica *rep, unsigned start_index,$/;"	f
util_update_remote_header	deps/pmdk/src/common/set.c	/^util_update_remote_header(struct pool_set *set, unsigned repn)$/;"	f
util_uuid_from_string	deps/pmdk/src/common/uuid.c	/^util_uuid_from_string(const char *uuid, struct uuid *ud)$/;"	f
util_uuid_generate	deps/pmdk/src/common/uuid_freebsd.c	/^util_uuid_generate(uuid_t uuid)$/;"	f
util_uuid_generate	deps/pmdk/src/common/uuid_linux.c	/^util_uuid_generate(uuid_t uuid)$/;"	f
util_uuid_generate	deps/pmdk/src/common/uuid_windows.c	/^util_uuid_generate(uuid_t uuid)$/;"	f
util_uuid_to_string	deps/pmdk/src/common/uuid.c	/^util_uuid_to_string(const uuid_t u, char *buf)$/;"	f
util_write	deps/pmdk/src/common/file.h	/^util_write(int fd, const void *buf, size_t count)$/;"	f
util_write	deps/pmdk/src/common/file.h	109;"	d
util_write_all	deps/pmdk/src/common/file.c	/^util_write_all(int fd, const char *buf, size_t count)$/;"	f
uuid	deps/pmdk/src/common/pool_hdr.h	/^	uuid_t uuid;			\/* UUID of this file *\/$/;"	m	struct:pool_hdr
uuid	deps/pmdk/src/common/set.h	/^	uuid_t uuid;$/;"	m	struct:pool_set
uuid	deps/pmdk/src/common/set.h	/^	uuid_t uuid;$/;"	m	struct:pool_set_part
uuid	deps/pmdk/src/common/shutdown_state.h	/^	uint64_t uuid; \/* UID checksum *\/$/;"	m	struct:shutdown_state
uuid	deps/pmdk/src/common/uuid.h	/^struct uuid {$/;"	s
uuid	deps/pmdk/src/include/librpmem.h	/^	unsigned char uuid[RPMEM_POOL_HDR_UUID_LEN]; \/* first part uuid *\/$/;"	m	struct:rpmem_pool_attr
uuid	deps/pmdk/src/libpmemblk/btt.c	/^	uint8_t uuid[BTTINFO_UUID_LEN];$/;"	m	struct:btt	file:
uuid	deps/pmdk/src/libpmemblk/btt_layout.h	/^	uint8_t uuid[BTTINFO_UUID_LEN];	\/* BTT UUID *\/$/;"	m	struct:btt_info
uuid	deps/pmdk/src/rpmem_common/rpmem_proto.h	/^	unsigned char uuid[RPMEM_POOL_HDR_UUID_LEN]; \/* first part uuid *\/$/;"	m	struct:rpmem_pool_attr_packed
uuid	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^	uuid_t uuid;$/;"	m	struct:bbtcreate_options	file:
uuid2str	deps/pmdk/src/tools/rpmemd/rpmemd.c	/^uuid2str(const uuid_t uuid)$/;"	f	file:
uuid_lo	deps/pmdk/src/include/libpmemobj/base.h	/^	uint64_t uuid_lo;$/;"	m	struct:_pobj_pcache
uuid_lo	deps/pmdk/src/libpmemobj/obj.c	/^	uint64_t uuid_lo;$/;"	m	struct:_pobj_pcache	file:
uuid_lo	deps/pmdk/src/libpmemobj/obj.h	/^	uint64_t uuid_lo;$/;"	m	struct:pmemobjpool
uuid_lo	deps/pmdk/src/tools/pmempool/info.h	/^		uint64_t uuid_lo;$/;"	m	struct:pmem_info::__anon111
uuid_op	deps/pmdk/src/libpmempool/pool.h	/^	} uuid_op;$/;"	m	struct:pool_data	typeref:enum:pool_data::__anon94
uuid_t	deps/pmdk/src/common/uuid.h	/^typedef unsigned char uuid_t[POOL_HDR_UUID_LEN]; \/* 16 byte binary uuid value *\/$/;"	t
uuid_t	deps/pmdk/src/windows/include/platform.h	74;"	d
uuidcmp	deps/pmdk/src/common/uuid.h	/^uuidcmp(const uuid_t uuid1, const uuid_t uuid2)$/;"	f
uv	deps/lua/src/lobject.h	/^  } uv;$/;"	m	union:Udata	typeref:struct:Udata::__anon25
uv	deps/lua/src/lstate.h	/^  struct UpVal uv;$/;"	m	union:GCObject	typeref:struct:GCObject::UpVal
uvalue	deps/lua/src/lobject.h	97;"	d
uvhead	deps/lua/src/lstate.h	/^  UpVal uvhead;  \/* head of double-linked list of all open upvalues *\/$/;"	m	struct:global_State
v	deps/lua/src/lobject.h	/^  TValue *v;  \/* points to stack or to its own value *\/$/;"	m	struct:UpVal
v	deps/lua/src/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:
v	deps/lua/src/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:
v	deps/pmdk/src/tools/pmempool/info_obj.c	/^	int v;$/;"	m	struct:info_obj_redo_args	file:
v	src/dict.h	/^    } v;$/;"	m	struct:dictEntry	typeref:union:dictEntry::__anon167
val	deps/hiredis/dict.h	/^    void *val;$/;"	m	struct:dictEntry
val	deps/jemalloc/include/jemalloc/internal/rtree.h	/^		extent_node_t		*val;$/;"	m	union:rtree_node_elm_s::__anon8
val	deps/pmdk/src/libpmempool/check_btt_map_flog.c	/^	uint32_t val;$/;"	m	struct:list_item	file:
val	deps/pmdk/src/test/obj_debug/obj_debug.c	/^	uint32_t val;$/;"	m	struct:root	file:
val	deps/pmdk/src/test/obj_persist_count/obj_persist_count.c	/^	int val;$/;"	m	struct:foo	file:
val	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^	int val;$/;"	m	struct:root	file:
val	deps/pmdk/src/windows/getopt/getopt.h	/^  int val;$/;"	m	struct:option
val	src/config.c	/^    const int val;$/;"	m	struct:configEnum	file:
val	src/dict.h	/^        void *val;$/;"	m	union:dictEntry::__anon167
valDestructor	deps/hiredis/dict.h	/^    void (*valDestructor)(void *privdata, void *obj);$/;"	m	struct:dictType
valDestructor	src/dict.h	/^    void (*valDestructor)(void *privdata, void *obj);$/;"	m	struct:dictType
valDup	deps/hiredis/dict.h	/^    void *(*valDup)(void *privdata, const void *obj);$/;"	m	struct:dictType
valDup	src/dict.h	/^    void *(*valDup)(void *privdata, const void *obj);$/;"	m	struct:dictType
val_len	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	uint32_t val_len;$/;"	m	struct:ds_context	file:
val_oid	src/pmem.h	/^    PMEMoid val_oid;$/;"	m	struct:key_val_pair_PM
valgrind	deps/pmdk/src/test/unittest/basetest.py	/^    valgrind = None$/;"	v	class:BaseTest
valgrind_do_client_request_expr	deps/pmdk/src/common/valgrind/valgrind.h	/^valgrind_do_client_request_expr(uintptr_t _zzq_default, uintptr_t _zzq_request,$/;"	f
valgrind_freelike_block	deps/jemalloc/include/jemalloc/internal/private_namespace.h	611;"	d
valgrind_freelike_block	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	611;"	d
valgrind_freelike_block	deps/jemalloc/src/valgrind.c	/^valgrind_freelike_block(void *ptr, size_t usize)$/;"	f
valgrind_ignore_messages	deps/pmdk/src/test/unittest/unittest.sh	/^function valgrind_ignore_messages() {$/;"	f
valgrind_ignore_warnings	deps/pmdk/src/test/unittest/unittest.sh	/^function valgrind_ignore_warnings() {$/;"	f
valgrind_make_mem_defined	deps/jemalloc/include/jemalloc/internal/private_namespace.h	612;"	d
valgrind_make_mem_defined	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	612;"	d
valgrind_make_mem_defined	deps/jemalloc/src/valgrind.c	/^valgrind_make_mem_defined(void *ptr, size_t usize)$/;"	f
valgrind_make_mem_noaccess	deps/jemalloc/include/jemalloc/internal/private_namespace.h	613;"	d
valgrind_make_mem_noaccess	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	613;"	d
valgrind_make_mem_noaccess	deps/jemalloc/src/valgrind.c	/^valgrind_make_mem_noaccess(void *ptr, size_t usize)$/;"	f
valgrind_make_mem_undefined	deps/jemalloc/include/jemalloc/internal/private_namespace.h	614;"	d
valgrind_make_mem_undefined	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	614;"	d
valgrind_make_mem_undefined	deps/jemalloc/src/valgrind.c	/^valgrind_make_mem_undefined(void *ptr, size_t usize)$/;"	f
valgrind_version	deps/pmdk/src/test/unittest/unittest.sh	/^function valgrind_version() {$/;"	f
valgrind_version_no_check	deps/pmdk/src/test/unittest/unittest.sh	/^function valgrind_version_no_check() {$/;"	f
valid	deps/pmdk/src/libpmempool/check_util.h	/^	} valid;$/;"	m	struct:__anon87	typeref:struct:__anon87::__anon88
valid	deps/pmdk/src/libpmempool/pool.h	/^	bool valid;$/;"	m	struct:arena
valid_number_character	deps/lua/src/fpconv.c	/^static inline int valid_number_character(char ch)$/;"	f	file:
valid_part_done	deps/pmdk/src/libpmempool/check_util.h	/^	int valid_part_done;$/;"	m	struct:__anon87
valid_part_hdrp	deps/pmdk/src/libpmempool/check_util.h	/^	struct pool_hdr *valid_part_hdrp;$/;"	m	struct:__anon87	typeref:struct:__anon87::pool_hdr
valid_part_replica	deps/pmdk/src/libpmempool/check_util.h	/^	unsigned valid_part_replica;$/;"	m	struct:__anon87
valid_puuid	deps/pmdk/src/libpmempool/check_util.h	/^	uuid_t *valid_puuid;$/;"	m	struct:__anon87
valid_uuid	deps/pmdk/src/libpmempool/check_util.h	/^	uuid_t *valid_uuid;$/;"	m	struct:__anon87
validate_args	deps/pmdk/src/libpmempool/sync.c	/^validate_args(struct pool_set *set)$/;"	f	file:
validate_args	deps/pmdk/src/libpmempool/transform.c	/^validate_args(struct pool_set *set_in, struct pool_set *set_out)$/;"	f	file:
validate_args	deps/pmdk/src/test/tools/cmpmap/cmpmap.c	/^validate_args(void)$/;"	f	file:
validate_args	deps/pmdk/src/test/tools/ddmap/ddmap.c	/^validate_args(struct ddmap_context *ctx)$/;"	f	file:
validate_args	deps/pmdk/src/tools/daxio/daxio.c	/^validate_args(struct daxio_context *ctx)$/;"	f	file:
validate_fill	deps/jemalloc/test/integration/rallocx.c	/^validate_fill(const void *p, uint8_t c, size_t offset, size_t len)$/;"	f	file:
validate_fill	deps/jemalloc/test/integration/xallocx.c	/^validate_fill(const void *p, uint8_t c, size_t offset, size_t len)$/;"	f	file:
validate_log	deps/pmdk/src/test/unittest/valgrind.py	/^    def validate_log(self):$/;"	m	class:Valgrind
validate_node_number	deps/pmdk/src/test/unittest/unittest.sh	/^function validate_node_number() {$/;"	f
validate_valgrind_log	deps/pmdk/src/test/unittest/unittest.sh	/^function validate_valgrind_log() {$/;"	f
valist_to_argv	deps/pmdk/src/librpmem/rpmem_ssh.c	/^valist_to_argv(va_list args)$/;"	f	file:
valiswhite	deps/lua/src/lgc.h	75;"	d
valloc	deps/jemalloc/include/jemalloc/jemalloc.h	344;"	d
valloc	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	33;"	d
valloc	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	33;"	d
valloc	deps/pmdk/src/tools/pmempool/info.h	/^		int valloc;$/;"	m	struct:pmempool_info_args::__anon109
value	deps/lua/src/lobject.h	/^    TValue value;  \/* the value (when closed) *\/$/;"	m	union:UpVal::__anon26
value	deps/lua/src/lua_cjson.c	/^    } value;$/;"	m	struct:__anon45	typeref:union:__anon45::__anon46	file:
value	deps/pmdk/src/benchmarks/scenario.hpp	/^	char *value;$/;"	m	struct:kv
value	deps/pmdk/src/common/ctl.h	/^	long value;$/;"	m	struct:ctl_index
value	deps/pmdk/src/examples/libpmemobj/btree.c	/^	char value[];$/;"	m	struct:btree_node	file:
value	deps/pmdk/src/examples/libpmemobj/btree.c	/^	const char *value;$/;"	m	struct:btree_node_arg	file:
value	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	PMEMoid value;$/;"	m	struct:entry	file:
value	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_atomic.c	/^	PMEMoid value;$/;"	m	struct:entry_args	file:
value	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_rp.c	/^	PMEMoid value;$/;"	m	struct:entry	file:
value	deps/pmdk/src/examples/libpmemobj/hashmap/hashmap_tx.c	/^	PMEMoid value;$/;"	m	struct:entry	file:
value	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^	TOID(var_string) value;$/;"	m	struct:_art_leaf
value	deps/pmdk/src/examples/libpmemobj/libart/arttree.c	/^	unsigned char *value;	\/* for INSERT *\/$/;"	m	struct:ds_context	file:
value	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^	union _toid_var_string_toid value;$/;"	m	struct:_art_leaf	typeref:union:_art_leaf::_toid_var_string_toid
value	deps/pmdk/src/examples/libpmemobj/list_map/skiplist_map.c	/^	PMEMoid value;$/;"	m	struct:skiplist_map_entry	file:
value	deps/pmdk/src/examples/libpmemobj/lists.c	/^	int value;$/;"	m	struct:bar_el	file:
value	deps/pmdk/src/examples/libpmemobj/lists.c	/^	int value;$/;"	m	struct:foo_el	file:
value	deps/pmdk/src/examples/libpmemobj/lists.c	/^	int value;$/;"	m	struct:list_constr_args	file:
value	deps/pmdk/src/examples/libpmemobj/tree_map/btree_map.c	/^	PMEMoid value;$/;"	m	struct:tree_map_node_item	file:
value	deps/pmdk/src/examples/libpmemobj/tree_map/rbtree_map.c	/^	PMEMoid value;$/;"	m	struct:tree_map_node	file:
value	deps/pmdk/src/examples/libpmemobj/tree_map/rtree_map.c	/^	PMEMoid value;$/;"	m	struct:tree_map_node	file:
value	deps/pmdk/src/examples/pmreorder/pmreorder_list.c	/^	int value;$/;"	m	struct:list_node	file:
value	deps/pmdk/src/libpmemobj/critnib.c	/^	void *value;$/;"	m	struct:critnib_leaf	file:
value	deps/pmdk/src/libpmemobj/palloc.c	/^			uint64_t value;$/;"	m	struct:pobj_action_internal::__anon127::__anon129	file:
value	deps/pmdk/src/libpmemobj/ulog.h	/^	uint64_t value; \/* value to be applied *\/$/;"	m	struct:ulog_entry_val
value	deps/pmdk/src/test/obj_action/obj_action.c	/^		uint64_t value;$/;"	m	struct:root::__anon135	file:
value	deps/pmdk/src/test/obj_action/obj_action.c	/^		uint64_t value;$/;"	m	struct:root::__anon136	file:
value	deps/pmdk/src/test/obj_action/obj_action.c	/^	uint64_t value;$/;"	m	struct:macro_reserve_s	file:
value	deps/pmdk/src/test/obj_alloc/obj_alloc.c	/^	size_t value;$/;"	m	struct:object	file:
value	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	int value;$/;"	m	struct:dummy_node	file:
value	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	int value;$/;"	m	struct:dummy_node_c	file:
value	deps/pmdk/src/test/obj_basic_integration/obj_basic_integration.c	/^	int value;$/;"	m	struct:dummy_root	file:
value	deps/pmdk/src/test/obj_realloc/obj_realloc.c	/^	size_t value;$/;"	m	struct:object	file:
value	deps/pmdk/src/test/obj_tx_add_range/obj_tx_add_range.c	/^	size_t value;$/;"	m	struct:object	file:
value	deps/pmdk/src/test/obj_tx_add_range_direct/obj_tx_add_range_direct.c	/^	size_t value;$/;"	m	struct:object	file:
value	deps/pmdk/src/test/obj_tx_alloc/obj_tx_alloc.c	/^	size_t value;$/;"	m	struct:object	file:
value	deps/pmdk/src/test/obj_tx_free/obj_tx_free.c	/^	size_t value;$/;"	m	struct:object	file:
value	deps/pmdk/src/test/obj_tx_invalid/obj_tx_invalid.c	/^	int value;$/;"	m	struct:dummy_node	file:
value	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	size_t value;$/;"	m	struct:object	file:
value	deps/pmdk/src/test/obj_tx_realloc/obj_tx_realloc.c	/^	size_t value;$/;"	m	struct:object_macro	file:
value	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	char *value;$/;"	m	struct:pmemspoil_list	file:
value	src/adlist.h	/^    void *value;$/;"	m	struct:listNode
value	src/quicklist.h	/^    unsigned char *value;$/;"	m	struct:quicklistEntry
value	src/sparkline.h	/^    double value;$/;"	m	struct:sample
values	deps/pmdk/src/libpmemobj/memblock.h	/^	uint64_t *values; \/* pointer to the bitmap's values array *\/$/;"	m	struct:run_bitmap
values	deps/pmdk/src/test/obj_memops/obj_memops.c	/^	uint64_t values[TEST_VALUES];$/;"	m	struct:test_object	file:
var_string	deps/pmdk/src/examples/libpmemobj/libart/art.h	/^struct _var_string;	typedef struct _var_string var_string;$/;"	t	typeref:struct:_var_string
var_string	deps/pmdk/src/examples/libpmemobj/libart/arttree_structures.h	/^struct _var_string;	typedef struct _var_string	var_string;$/;"	t	typeref:struct:_var_string
varname	deps/lua/src/lobject.h	/^  TString *varname;$/;"	m	struct:LocVar
vbackup	deps/pmdk/src/tools/pmempool/info.h	/^		int vbackup;	\/* verbosity level for BTT Info backup *\/$/;"	m	struct:pmempool_info_args::__anon108
vbitmap	deps/pmdk/src/tools/pmempool/info.h	/^		int vbitmap;$/;"	m	struct:pmempool_info_args::__anon109
vchunkhdr	deps/pmdk/src/tools/pmempool/info.h	/^		int vchunkhdr;$/;"	m	struct:pmempool_info_args::__anon109
vdata	deps/pmdk/src/tools/pmempool/info.h	/^	int vdata;		\/* verbosity level for data dump *\/$/;"	m	struct:pmempool_info_args
vec	deps/jemalloc/include/jemalloc/internal/prof.h	/^	void			*vec[1];$/;"	m	struct:prof_gctx_s
vec	deps/jemalloc/include/jemalloc/internal/prof.h	/^	void			*vec[PROF_BT_MAX];$/;"	m	struct:prof_tdata_s
vec	deps/jemalloc/include/jemalloc/internal/prof.h	/^	void		**vec;$/;"	m	struct:prof_bt_s
vec	deps/pmdk/src/libpmemobj/heap.c	/^	VEC(, struct arena *) vec;$/;"	m	struct:arenas	file:
vec_recursion	deps/jemalloc/test/include/test/SFMT-alti.h	/^vector unsigned int vec_recursion(vector unsigned int a,$/;"	f
vec_reserve	deps/pmdk/src/common/vec.h	/^vec_reserve(void *vec, size_t ncapacity, size_t s)$/;"	f
vec_size	deps/pmdk/src/benchmarks/log.cpp	/^	int vec_size;    \/* vector size *\/$/;"	m	struct:prog_args	file:
vec_sizes	deps/pmdk/src/benchmarks/log.cpp	/^	size_t *vec_sizes; \/* sum of sizes in vector *\/$/;"	m	struct:log_worker_info	file:
vec_t	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	/^typedef char vec_t;$/;"	t	file:
vec_t	deps/pmdk/src/test/ctl_prefault/ctl_prefault.c	/^typedef unsigned char vec_t;$/;"	t	file:
vec_test	deps/pmdk/src/test/util_vec/util_vec.c	/^vec_test()$/;"	f	file:
vecq_test	deps/pmdk/src/test/util_vecq/util_vecq.c	/^vecq_test()$/;"	f	file:
vecq_test_grow	deps/pmdk/src/test/util_vecq/util_vecq.c	/^vecq_test_grow()$/;"	f	file:
vecswap	src/pqsort.c	86;"	d	file:
vector	deps/pmdk/src/test/obj_check_remote/obj_check_remote.c	/^struct vector {$/;"	s	file:
ver	src/cluster.h	/^    uint16_t ver;       \/* Protocol version, currently set to 0. *\/$/;"	m	struct:__anon177
verbose	deps/pmdk/src/test/tools/bttcreate/bttcreate.c	/^	bool verbose;$/;"	m	struct:bbtcreate_options	file:
verbose	deps/pmdk/src/test/tools/pmemspoil/spoil.c	/^	int verbose;$/;"	m	struct:pmemspoil	file:
verbose	deps/pmdk/src/tools/pmempool/check.c	/^	int verbose;		\/* verbosity level *\/$/;"	m	struct:pmempool_check_context	file:
verbose	deps/pmdk/src/tools/pmempool/create.c	/^	int verbose;$/;"	m	struct:pmempool_create	file:
verbose	deps/pmdk/src/tools/pmempool/feature.c	/^	int verbose;$/;"	m	struct:feature_ctx	file:
verbose_msg	deps/pmdk/src/test/unittest/unittest.sh	/^function verbose_msg() {$/;"	f
verbosity	src/server.h	/^    int verbosity;                  \/* Loglevel in redis.conf *\/$/;"	m	struct:redisServer
verify	deps/pmdk/src/libpmemobj/obj.h	/^		int verify;$/;"	m	struct:pmemobjpool::__anon117
verify	deps/pmdk/src/test/obj_heap_interrupt/obj_heap_interrupt.c	/^	scenario_func verify;$/;"	m	struct:__anon140	file:
verify	deps/pmdk/src/test/unittest/valgrind.py	/^    def verify(self):$/;"	m	class:Valgrind
verify	src/ziplist.c	/^static void verify(unsigned char *zl, zlentry *e) {$/;"	f	file:
verifyClusterConfigWithData	src/cluster.c	/^int verifyClusterConfigWithData(void) {$/;"	f
verifyDumpPayload	src/cluster.c	/^int verifyDumpPayload(unsigned char *p, size_t len) {$/;"	f
verify_contents	deps/pmdk/src/test/pmem_memmove/pmem_memmove.c	/^verify_contents(const char *file_name, int test,$/;"	f	file:
verify_fd	deps/pmdk/src/test/pmem2_config/pmem2_config.c	/^verify_fd(struct pmem2_config *cfg, int fd)$/;"	f	file:
verify_license	deps/pmdk/utils/check_license/check-license.c	/^verify_license(const char *path_to_check, char *pattern, const char *filename)$/;"	f	file:
verify_user_buffers	deps/pmdk/src/libpmemobj/tx.c	/^CTL_READ_HANDLER(verify_user_buffers)(void *ctx,$/;"	f	file:
verify_user_buffers	deps/pmdk/src/libpmemobj/tx.c	/^CTL_WRITE_HANDLER(verify_user_buffers)(void *ctx,$/;"	f	file:
verify_user_buffers	deps/pmdk/src/libpmemobj/tx.c	/^static const struct ctl_argument CTL_ARG(verify_user_buffers) =$/;"	v	typeref:struct:CTL_ARG	file:
version	deps/pmdk/src/benchmarks/pmembench.cpp	/^	bool version;$/;"	m	struct:benchmark_opts	file:
version	deps/pmdk/src/benchmarks/pmembench.cpp	/^} version = {1, 0};$/;"	v	typeref:struct:version_s	file:
version	src/server.c	/^void version(void) {$/;"	f
version_s	deps/pmdk/src/benchmarks/pmembench.cpp	/^static struct version_s {$/;"	s	file:
vflog	deps/pmdk/src/tools/pmempool/info.h	/^		int vflog;	\/* verbosity level for BTT FLOG *\/$/;"	m	struct:pmempool_info_args::__anon108
vg_boot	deps/pmdk/src/libpmemobj/obj.h	/^	int vg_boot;$/;"	m	struct:pmemobjpool
vg_init	deps/pmdk/src/libpmemobj/memblock.h	/^	void (*vg_init)(const struct memory_block *m, int objects,$/;"	m	struct:memory_block_ops
vg_test_save_ptr	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^vg_test_save_ptr(PMEMobjpool *pop, void *ptr, void *arg)$/;"	f	file:
vg_verify_initialized	deps/pmdk/src/libpmemobj/tx.c	/^vg_verify_initialized(PMEMobjpool *pop, const struct tx_range_def *def)$/;"	f	file:
vgraph_add_edges	deps/pmdk/src/test/obj_defrag_advanced/vgraph.c	/^vgraph_add_edges(struct vgraph_t *graph, rng_t *rngp)$/;"	f	file:
vgraph_delete	deps/pmdk/src/test/obj_defrag_advanced/vgraph.c	/^vgraph_delete(struct vgraph_t *graph)$/;"	f
vgraph_get_node	deps/pmdk/src/test/obj_defrag_advanced/vgraph.c	/^vgraph_get_node(struct vgraph_t *graph, unsigned id_node)$/;"	f	file:
vgraph_new	deps/pmdk/src/test/obj_defrag_advanced/vgraph.c	/^vgraph_new(struct vgraph_params *params, rng_t *rngp)$/;"	f
vgraph_params	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^struct vgraph_params$/;"	s
vgraph_t	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^struct vgraph_t$/;"	s
vhdrdump	deps/pmdk/src/tools/pmempool/info.h	/^	int vhdrdump;		\/* verbosity level for headers hexdump *\/$/;"	m	struct:pmempool_info_args
vheap	deps/pmdk/src/tools/pmempool/info.h	/^		int vheap;$/;"	m	struct:pmempool_info_args::__anon109
vlanes	deps/pmdk/src/tools/pmempool/info.h	/^		int vlanes;		\/* verbosity level for lanes *\/$/;"	m	struct:pmempool_info_args::__anon109
vlevel	deps/pmdk/src/tools/pmempool/info.h	/^	int vlevel;		\/* verbosity level *\/$/;"	m	struct:pmempool_info_args
vlevel	deps/pmdk/src/tools/pmempool/rm.c	/^static int vlevel;$/;"	v	file:
vmap	deps/pmdk/src/tools/pmempool/info.h	/^		int vmap;	\/* verbosity level for BTT Map *\/$/;"	m	struct:pmempool_info_args::__anon108
vnode_delete	deps/pmdk/src/test/obj_defrag_advanced/vgraph.c	/^vnode_delete(struct vnode_t *node)$/;"	f	file:
vnode_new	deps/pmdk/src/test/obj_defrag_advanced/vgraph.c	/^vnode_new(struct vnode_t *node, unsigned v, struct vgraph_params *params,$/;"	f	file:
vnode_t	deps/pmdk/src/test/obj_defrag_advanced/vgraph.h	/^struct vnode_t$/;"	s
vobjects	deps/pmdk/src/tools/pmempool/info.h	/^		int vobjects;$/;"	m	struct:pmempool_info_args::__anon109
volatile_mutex_destroy	deps/pmdk/src/benchmarks/obj_locks.cpp	/^volatile_mutex_destroy(PMEMobjpool *pop, PMEM_volatile_mutex *mutexp)$/;"	f	file:
volatile_mutex_init	deps/pmdk/src/benchmarks/obj_locks.cpp	/^volatile_mutex_init(os_mutex_t **mutexp, void *attr)$/;"	f	file:
volatile_mutex_lock	deps/pmdk/src/benchmarks/obj_locks.cpp	/^volatile_mutex_lock(PMEMobjpool *pop, PMEM_volatile_mutex *mutexp)$/;"	f	file:
volatile_mutex_lock_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^volatile_mutex_lock_wrapper(PMEMobjpool *pop, void *lock)$/;"	f	file:
volatile_mutex_unlock	deps/pmdk/src/benchmarks/obj_locks.cpp	/^volatile_mutex_unlock(PMEMobjpool *pop, PMEM_volatile_mutex *mutexp)$/;"	f	file:
volatile_mutex_unlock_wrapper	deps/pmdk/src/benchmarks/obj_locks.cpp	/^volatile_mutex_unlock_wrapper(PMEMobjpool *pop, void *lock)$/;"	f	file:
volatile_pmemmutex	deps/pmdk/src/benchmarks/obj_locks.cpp	/^	} volatile_pmemmutex;$/;"	m	union:padded_volatile_pmemmutex	typeref:struct:padded_volatile_pmemmutex::__anon116	file:
voobhdr	deps/pmdk/src/tools/pmempool/info.h	/^		int voobhdr;$/;"	m	struct:pmempool_info_args::__anon109
voted_time	src/cluster.h	/^    mstime_t voted_time;     \/* Last time we voted for a slave of this master *\/$/;"	m	struct:clusterNode
votes	src/sentinel.c	/^    unsigned long votes;$/;"	m	struct:sentinelLeader	file:
vout	deps/pmdk/src/test/unittest/ut.c	/^vout(int flags, const char *prepend, const char *fmt, va_list ap)$/;"	f	file:
vparams	deps/pmdk/src/test/obj_defrag_advanced/obj_defrag_advanced.c	/^	struct vgraph_params vparams;$/;"	m	struct:create_params_t	typeref:struct:create_params_t::vgraph_params	file:
vptr	src/server.h	/^    unsigned char *fptr, *vptr;$/;"	m	struct:__anon164
vroot	deps/pmdk/src/tools/pmempool/info.h	/^		int vroot;$/;"	m	struct:pmempool_info_args::__anon109
vsnprintf_custom_function	deps/pmdk/src/test/traces_custom_function/traces_custom_function.c	/^vsnprintf_custom_function(char *str, size_t size, const char *format,$/;"	f	file:
vstats	deps/pmdk/src/tools/pmempool/info.h	/^	int vstats;		\/* verbosity level for statistics *\/$/;"	m	struct:pmempool_info_args
vzonehdr	deps/pmdk/src/tools/pmempool/info.h	/^		int vzonehdr;$/;"	m	struct:pmempool_info_args::__anon109
w0	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static void w0(PMEMobjpool *pop) {$/;"	f	file:
w1	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static void w1(PMEMobjpool *pop) {$/;"	f	file:
w128_t	deps/jemalloc/test/src/SFMT.c	/^typedef struct W128_T w128_t;$/;"	t	typeref:struct:W128_T	file:
w128_t	deps/jemalloc/test/src/SFMT.c	/^typedef union W128_T w128_t;$/;"	t	typeref:union:W128_T	file:
w2	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static void w2(PMEMobjpool *pop) {$/;"	f	file:
w3	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static void w3(PMEMobjpool *pop) {$/;"	f	file:
w4	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static void w4(PMEMobjpool *pop) {$/;"	f	file:
w5	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static void w5(PMEMobjpool *pop) {$/;"	f	file:
w6	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static void w6(PMEMobjpool *pop) {$/;"	f	file:
w7	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static void w7(PMEMobjpool *pop) {$/;"	f	file:
w8	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static void w8(PMEMobjpool *pop) {$/;"	f	file:
waitCommand	src/replication.c	/^void waitCommand(client *c) {$/;"	f
waitForBgrewriteaof	tests/support/util.tcl	/^proc waitForBgrewriteaof r {$/;"	p
waitForBgsave	tests/support/util.tcl	/^proc waitForBgsave r {$/;"	p
wait_cluster_join	src/redis-trib.rb	/^    def wait_cluster_join$/;"	f	class:RedisTrib
wait_for_condition	tests/support/test.tcl	/^proc wait_for_condition {maxtries delay e _else_ elsescript} {$/;"	p
wait_for_sync	tests/support/util.tcl	/^proc wait_for_sync r {$/;"	p
wait_on_node	deps/pmdk/src/test/unittest/unittest.sh	/^function wait_on_node() {$/;"	f
wait_on_node_port	deps/pmdk/src/test/unittest/unittest.sh	/^function wait_on_node_port() {$/;"	f
wait_type	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^enum wait_type {$/;"	g	file:
wait_type_str	deps/pmdk/src/test/rpmem_basic/rpmem_basic.c	/^static const char *wait_type_str[2] = {$/;"	v	file:
walk	deps/pmdk/src/tools/pmempool/info.h	/^		size_t walk;		\/* data chunk size *\/$/;"	m	struct:pmempool_info_args::__anon107
warmup_msync	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^warmup_msync(struct memset_bench *mb)$/;"	f	file:
warmup_persist	deps/pmdk/src/benchmarks/pmem_memset.cpp	/^warmup_persist(struct memset_bench *mb)$/;"	f	file:
warn	deps/pmdk/src/windows/include/err.h	/^warn(const char *fmt, ...)$/;"	f
warning	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def warning(self, text):$/;"	m	class:DefaultFileLogger
warning	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def warning(self, text):$/;"	m	class:DefaultPrintLogger
warning	deps/pmdk/src/tools/pmreorder/loggingfacility.py	/^    def warning(self, text):$/;"	m	class:LoggingBase
warnings_from_file	tests/support/util.tcl	/^proc warnings_from_file {filename} {$/;"	p
watchCommand	src/multi.c	/^void watchCommand(client *c) {$/;"	f
watchForKey	src/multi.c	/^void watchForKey(client *c, robj *key) {$/;"	f
watch_for_junking	deps/jemalloc/test/unit/junk.c	/^static void *watch_for_junking;$/;"	v	file:
watch_junking	deps/jemalloc/test/unit/junk.c	/^watch_junking(void *p)$/;"	f	file:
watchdogScheduleSignal	src/debug.c	/^void watchdogScheduleSignal(int period) {$/;"	f
watchdogSignalHandler	src/debug.c	/^void watchdogSignalHandler(int sig, siginfo_t *info, void *secret) {$/;"	f
watchdog_period	src/server.h	/^    int watchdog_period;  \/* Software watchdog period in ms. 0 = off *\/$/;"	m	struct:redisServer
watchedKey	src/multi.c	/^typedef struct watchedKey {$/;"	s	file:
watchedKey	src/multi.c	/^} watchedKey;$/;"	t	typeref:struct:watchedKey	file:
watched_keys	src/server.h	/^    dict *watched_keys;         \/* WATCHED keys for MULTI\/EXEC CAS *\/$/;"	m	struct:redisDb
watched_keys	src/server.h	/^    list *watched_keys;     \/* Keys WATCHED for MULTI\/EXEC CAS *\/$/;"	m	struct:client
wcs	deps/pmdk/src/test/obj_tx_strdup/obj_tx_strdup.c	/^typedef void (*fn_tx_wcsdup)(TOID(wchar_t) *wcs, const wchar_t *s,$/;"	t	file:
weak	deps/lua/src/lstate.h	/^  GCObject *weak;  \/* list of weak tables (to be cleared) *\/$/;"	m	struct:global_State
weak_import	deps/jemalloc/src/zone.c	/^JEMALLOC_ATTR(weak_import);$/;"	v
weight	deps/pmdk/src/test/obj_constructor/obj_constructor.c	/^	int weight[2048];$/;"	m	struct:node_big	file:
weight	src/t_zset.c	/^    double weight;$/;"	m	struct:__anon152	file:
west	deps/geohash-int/geohash.h	/^    GeoHashBits west;$/;"	m	struct:__anon146
wev	deps/hiredis/adapters/libev.h	/^    ev_io rev, wev;$/;"	m	struct:redisLibevEvents
wev	deps/hiredis/adapters/libevent.h	/^    struct event rev, wev;$/;"	m	struct:redisLibeventEvents	typeref:struct:redisLibeventEvents::
wfds	src/ae_select.c	/^    fd_set rfds, wfds;$/;"	m	struct:aeApiState	file:
wfileProc	src/ae.h	/^    aeFileProc *wfileProc;$/;"	m	struct:aeFileEvent
what	deps/lua/src/lua.h	/^  const char *what;	\/* (S) `Lua', `C', `main', `tail' *\/$/;"	m	struct:lua_Debug
what 	deps/lua/etc/strict.lua	/^local function what ()$/;"	f
when_ms	src/ae.h	/^    long when_ms; \/* milliseconds *\/$/;"	m	struct:aeTimeEvent
when_sec	src/ae.h	/^    long when_sec; \/* seconds *\/$/;"	m	struct:aeTimeEvent
whilestat	deps/lua/src/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:
white2gray	deps/lua/src/lgc.c	37;"	d	file:
win_mmap_fini	deps/pmdk/src/windows/win_mmap.c	/^win_mmap_fini(void)$/;"	f
win_mmap_init	deps/pmdk/src/windows/win_mmap.c	/^win_mmap_init(void)$/;"	f
windows_exclude	deps/pmdk/src/test/unittest/utils.py	/^def windows_exclude(tc):$/;"	f
windows_only	deps/pmdk/src/test/unittest/utils.py	/^def windows_only(tc):$/;"	f
witness	deps/jemalloc/include/jemalloc/internal/mutex.h	/^	witness_t		witness;$/;"	m	struct:malloc_mutex_s
witness_assert_lockless	deps/jemalloc/include/jemalloc/internal/private_namespace.h	615;"	d
witness_assert_lockless	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	615;"	d
witness_assert_lockless	deps/jemalloc/include/jemalloc/internal/witness.h	/^witness_assert_lockless(tsdn_t *tsdn)$/;"	f
witness_assert_not_owner	deps/jemalloc/include/jemalloc/internal/private_namespace.h	616;"	d
witness_assert_not_owner	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	616;"	d
witness_assert_not_owner	deps/jemalloc/include/jemalloc/internal/witness.h	/^witness_assert_not_owner(tsdn_t *tsdn, const witness_t *witness)$/;"	f
witness_assert_owner	deps/jemalloc/include/jemalloc/internal/private_namespace.h	617;"	d
witness_assert_owner	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	617;"	d
witness_assert_owner	deps/jemalloc/include/jemalloc/internal/witness.h	/^witness_assert_owner(tsdn_t *tsdn, const witness_t *witness)$/;"	f
witness_comp	deps/jemalloc/test/unit/witness.c	/^witness_comp(const witness_t *a, const witness_t *b)$/;"	f	file:
witness_comp_reverse	deps/jemalloc/test/unit/witness.c	/^witness_comp_reverse(const witness_t *a, const witness_t *b)$/;"	f	file:
witness_comp_t	deps/jemalloc/include/jemalloc/internal/witness.h	/^typedef int witness_comp_t (const witness_t *, const witness_t *);$/;"	t
witness_fork_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	618;"	d
witness_fork_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	618;"	d
witness_fork_cleanup	deps/jemalloc/src/witness.c	/^witness_fork_cleanup(tsd_t *tsd)$/;"	f
witness_init	deps/jemalloc/include/jemalloc/internal/private_namespace.h	619;"	d
witness_init	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	619;"	d
witness_init	deps/jemalloc/src/witness.c	/^witness_init(witness_t *witness, const char *name, witness_rank_t rank,$/;"	f
witness_list_t	deps/jemalloc/include/jemalloc/internal/witness.h	/^typedef ql_head(witness_t) witness_list_t;$/;"	t
witness_lock	deps/jemalloc/include/jemalloc/internal/private_namespace.h	620;"	d
witness_lock	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	620;"	d
witness_lock	deps/jemalloc/include/jemalloc/internal/witness.h	/^witness_lock(tsdn_t *tsdn, witness_t *witness)$/;"	f
witness_lock_error	deps/jemalloc/include/jemalloc/internal/private_namespace.h	621;"	d
witness_lock_error	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	621;"	d
witness_lock_error	deps/jemalloc/src/witness.c	/^witness_lock_error(const witness_list_t *witnesses, const witness_t *witness)$/;"	f
witness_lock_error	deps/jemalloc/src/witness.c	/^witness_lock_error_t *witness_lock_error = JEMALLOC_N(n_witness_lock_error);$/;"	v
witness_lock_error	deps/jemalloc/src/witness.c	15;"	d	file:
witness_lock_error	deps/jemalloc/src/witness.c	16;"	d	file:
witness_lock_error	deps/jemalloc/src/witness.c	31;"	d	file:
witness_lock_error	deps/jemalloc/src/witness.c	32;"	d	file:
witness_lock_error_intercept	deps/jemalloc/test/unit/witness.c	/^witness_lock_error_intercept(const witness_list_t *witnesses,$/;"	f	file:
witness_lock_error_orig	deps/jemalloc/test/unit/witness.c	/^static witness_lock_error_t *witness_lock_error_orig;$/;"	v	file:
witness_lock_error_t	deps/jemalloc/include/jemalloc/internal/witness.h	/^typedef void (witness_lock_error_t)(const witness_list_t *, const witness_t *);$/;"	t
witness_lockless_error	deps/jemalloc/include/jemalloc/internal/private_namespace.h	622;"	d
witness_lockless_error	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	622;"	d
witness_lockless_error	deps/jemalloc/src/witness.c	/^witness_lockless_error(const witness_list_t *witnesses)$/;"	f
witness_lockless_error	deps/jemalloc/src/witness.c	/^witness_lockless_error_t *witness_lockless_error =$/;"	v
witness_lockless_error	deps/jemalloc/src/witness.c	74;"	d	file:
witness_lockless_error	deps/jemalloc/src/witness.c	75;"	d	file:
witness_lockless_error	deps/jemalloc/src/witness.c	90;"	d	file:
witness_lockless_error	deps/jemalloc/src/witness.c	91;"	d	file:
witness_lockless_error_intercept	deps/jemalloc/test/unit/witness.c	/^witness_lockless_error_intercept(const witness_list_t *witnesses)$/;"	f	file:
witness_lockless_error_orig	deps/jemalloc/test/unit/witness.c	/^static witness_lockless_error_t *witness_lockless_error_orig;$/;"	v	file:
witness_lockless_error_t	deps/jemalloc/include/jemalloc/internal/witness.h	/^typedef void (witness_lockless_error_t)(const witness_list_t *);$/;"	t
witness_not_owner_error	deps/jemalloc/include/jemalloc/internal/private_namespace.h	623;"	d
witness_not_owner_error	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	623;"	d
witness_not_owner_error	deps/jemalloc/src/witness.c	/^witness_not_owner_error(const witness_t *witness)$/;"	f
witness_not_owner_error	deps/jemalloc/src/witness.c	/^witness_not_owner_error_t *witness_not_owner_error =$/;"	v
witness_not_owner_error	deps/jemalloc/src/witness.c	55;"	d	file:
witness_not_owner_error	deps/jemalloc/src/witness.c	56;"	d	file:
witness_not_owner_error	deps/jemalloc/src/witness.c	67;"	d	file:
witness_not_owner_error	deps/jemalloc/src/witness.c	68;"	d	file:
witness_not_owner_error_intercept	deps/jemalloc/test/unit/witness.c	/^witness_not_owner_error_intercept(const witness_t *witness)$/;"	f	file:
witness_not_owner_error_orig	deps/jemalloc/test/unit/witness.c	/^static witness_not_owner_error_t *witness_not_owner_error_orig;$/;"	v	file:
witness_not_owner_error_t	deps/jemalloc/include/jemalloc/internal/witness.h	/^typedef void (witness_not_owner_error_t)(const witness_t *);$/;"	t
witness_owner	deps/jemalloc/include/jemalloc/internal/private_namespace.h	624;"	d
witness_owner	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	624;"	d
witness_owner	deps/jemalloc/include/jemalloc/internal/witness.h	/^witness_owner(tsd_t *tsd, const witness_t *witness)$/;"	f
witness_owner_error	deps/jemalloc/include/jemalloc/internal/private_namespace.h	625;"	d
witness_owner_error	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	625;"	d
witness_owner_error	deps/jemalloc/src/witness.c	/^witness_owner_error(const witness_t *witness)$/;"	f
witness_owner_error	deps/jemalloc/src/witness.c	/^witness_owner_error_t *witness_owner_error = JEMALLOC_N(n_witness_owner_error);$/;"	v
witness_owner_error	deps/jemalloc/src/witness.c	37;"	d	file:
witness_owner_error	deps/jemalloc/src/witness.c	38;"	d	file:
witness_owner_error	deps/jemalloc/src/witness.c	49;"	d	file:
witness_owner_error	deps/jemalloc/src/witness.c	50;"	d	file:
witness_owner_error_intercept	deps/jemalloc/test/unit/witness.c	/^witness_owner_error_intercept(const witness_t *witness)$/;"	f	file:
witness_owner_error_orig	deps/jemalloc/test/unit/witness.c	/^static witness_owner_error_t *witness_owner_error_orig;$/;"	v	file:
witness_owner_error_t	deps/jemalloc/include/jemalloc/internal/witness.h	/^typedef void (witness_owner_error_t)(const witness_t *);$/;"	t
witness_postfork_child	deps/jemalloc/include/jemalloc/internal/private_namespace.h	626;"	d
witness_postfork_child	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	626;"	d
witness_postfork_child	deps/jemalloc/src/witness.c	/^witness_postfork_child(tsd_t *tsd)$/;"	f
witness_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_namespace.h	627;"	d
witness_postfork_parent	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	627;"	d
witness_postfork_parent	deps/jemalloc/src/witness.c	/^witness_postfork_parent(tsd_t *tsd)$/;"	f
witness_prefork	deps/jemalloc/include/jemalloc/internal/private_namespace.h	628;"	d
witness_prefork	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	628;"	d
witness_prefork	deps/jemalloc/src/witness.c	/^witness_prefork(tsd_t *tsd)$/;"	f
witness_rank_t	deps/jemalloc/include/jemalloc/internal/witness.h	/^typedef unsigned witness_rank_t;$/;"	t
witness_s	deps/jemalloc/include/jemalloc/internal/witness.h	/^struct witness_s {$/;"	s
witness_t	deps/jemalloc/include/jemalloc/internal/witness.h	/^typedef struct witness_s witness_t;$/;"	t	typeref:struct:witness_s
witness_unlock	deps/jemalloc/include/jemalloc/internal/private_namespace.h	629;"	d
witness_unlock	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	629;"	d
witness_unlock	deps/jemalloc/include/jemalloc/internal/witness.h	/^witness_unlock(tsdn_t *tsdn, witness_t *witness)$/;"	f
witnesses_cleanup	deps/jemalloc/include/jemalloc/internal/private_namespace.h	630;"	d
witnesses_cleanup	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	630;"	d
witnesses_cleanup	deps/jemalloc/src/witness.c	/^witnesses_cleanup(tsd_t *tsd)$/;"	f
wmain	deps/pmdk/src/test/blk_pool_win/blk_pool_win.c	/^wmain(int argc, wchar_t *argv[])$/;"	f
wmain	deps/pmdk/src/test/libpmempool_api_win/libpmempool_test_win.c	/^wmain(int argc, wchar_t *argv[])$/;"	f
wmain	deps/pmdk/src/test/libpmempool_rm_win/libpmempool_rm_win.c	/^wmain(int argc, wchar_t *argv[])$/;"	f
wmain	deps/pmdk/src/test/libpmempool_sync_win/libpmempool_sync_win.c	/^wmain(int argc, wchar_t *argv[])$/;"	f
wmain	deps/pmdk/src/test/libpmempool_transform_win/libpmempool_transform_win.c	/^wmain(int argc, wchar_t *argv[])$/;"	f
wmain	deps/pmdk/src/test/log_pool_win/log_pool_win.c	/^wmain(int argc, wchar_t *argv[])$/;"	f
wmain	deps/pmdk/src/test/obj_pool_win/obj_pool_win.c	/^wmain(int argc, wchar_t *argv[])$/;"	f
wmain	deps/pmdk/src/test/out_err_mt_win/out_err_mt_win.c	/^wmain(int argc, wchar_t *argv[])$/;"	f
wmain	deps/pmdk/src/test/out_err_win/out_err_win.c	/^wmain(int argc, wchar_t *argv[])$/;"	f
wmain	deps/pmdk/src/test/pmem_map_file_win/pmem_map_file_win.c	/^wmain(int argc, wchar_t *argv[])$/;"	f
wmain	deps/pmdk/src/test/tools/sparsefile/sparsefile.c	/^wmain(int argc, const wchar_t *argv[])$/;"	f
wmsg	deps/pmdk/src/common/out.c	/^	wchar_t wmsg[MAXPRINT];$/;"	m	struct:errormsg	file:
woff	src/server.h	/^    long long woff;         \/* Last write global replication offset. *\/$/;"	m	struct:client
work	deps/pmdk/src/test/obj_lane/obj_lane.c	/^	enum thread_work_type work;$/;"	m	struct:thread_data	typeref:enum:thread_data::thread_work_type	file:
worker	deps/pmdk/src/benchmarks/benchmark.hpp	/^	struct worker_info *worker;  \/* worker's info *\/$/;"	m	struct:operation_info	typeref:struct:operation_info::worker_info
worker	deps/pmdk/src/benchmarks/blk.cpp	/^	worker_fn worker;	 \/* worker function *\/$/;"	m	struct:blk_bench	file:
worker	deps/pmdk/src/libpmemobj/tx.c	/^CTL_READ_HANDLER(worker)(void *ctx, enum ctl_query_source source,$/;"	f	file:
worker	deps/pmdk/src/test/blk_rw_mt/blk_rw_mt.c	/^worker(void *arg)$/;"	f	file:
worker	deps/pmdk/src/test/obj_sync/obj_sync.c	/^typedef void *(*worker)(void *);$/;"	t	file:
worker	deps/pmdk/src/test/pmem_is_pmem/pmem_is_pmem.c	/^worker(void *arg)$/;"	f	file:
worker	deps/pmdk/src/test/pmem_is_pmem_windows/pmem_is_pmem_windows.c	/^worker(void *arg)$/;"	f	file:
worker_arena_ref_obj	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^worker_arena_ref_obj(struct arena_alloc *ref)$/;"	f	file:
worker_arena_threads	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^worker_arena_threads(void *arg)$/;"	f	file:
worker_arenas_flag	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^worker_arenas_flag(void *arg)$/;"	f	file:
worker_arenas_size	deps/pmdk/src/test/obj_ctl_arenas/obj_ctl_arenas.c	/^worker_arenas_size(void *arg)$/;"	f	file:
worker_args	deps/pmdk/src/test/obj_pmalloc_mt/obj_pmalloc_mt.c	/^struct worker_args {$/;"	s	file:
worker_fn	deps/pmdk/src/benchmarks/blk.cpp	/^typedef int (*worker_fn)(struct blk_bench *, struct benchmark_args *,$/;"	t	file:
worker_info	deps/pmdk/src/benchmarks/benchmark.hpp	/^struct worker_info {$/;"	s
worker_state_transition	deps/pmdk/src/benchmarks/benchmark_worker.cpp	/^worker_state_transition(struct benchmark_worker *worker,$/;"	f	file:
worker_state_wait_for_transition	deps/pmdk/src/benchmarks/benchmark_worker.cpp	/^worker_state_wait_for_transition(struct benchmark_worker *worker,$/;"	f	file:
workload	deps/pmdk/src/benchmarks/rpmem.cpp	/^	char *workload;	\/* workload *\/$/;"	m	struct:rpmem_args	file:
workload	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^typedef void workload(PMEMobjpool *pop);$/;"	t	file:
workload_len	deps/pmdk/src/benchmarks/rpmem.cpp	/^	size_t workload_len;      \/* length of the workload *\/$/;"	m	struct:rpmem_bench	file:
workloads	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static workload *workloads[] = {$/;"	v	file:
workloads_defrag_stat_target	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static float workloads_defrag_stat_target[] = {$/;"	v	file:
workloads_defrag_target	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static float workloads_defrag_target[] = {$/;"	v	file:
workloads_stat_target	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static float workloads_stat_target[] = {$/;"	v	file:
workloads_target	deps/pmdk/src/test/obj_fragmentation2/obj_fragmentation2.c	/^static float workloads_target[] = {$/;"	v	file:
wq_elems	deps/pmdk/src/librpmem/rpmem_fip.c	/^	size_t wq_elems;	\/* # of elements in work queue *\/$/;"	m	struct:rpmem_fip_lane	file:
wq_is_flushing	deps/pmdk/src/librpmem/rpmem_fip.c	/^	int wq_is_flushing;	\/* work queue is during flush *\/$/;"	m	struct:rpmem_fip_lane	file:
write	deps/pmdk/src/libpmemobj/memblock.c	/^	void (*write)(const struct memory_block *m,$/;"	m	struct:__anon133	file:
write	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct rpmem_fip_rma write;	\/* WRITE message *\/$/;"	m	struct:rpmem_fip_plane	typeref:struct:rpmem_fip_plane::rpmem_fip_rma	file:
write	src/rio.h	/^    size_t (*write)(struct _rio *, const void *buf, size_t len);$/;"	m	struct:_rio
writeHandler	src/redis-benchmark.c	/^static void writeHandler(aeEventLoop *el, int fd, void *privdata, int mask) {$/;"	f	file:
writeToClient	src/networking.c	/^int writeToClient(int fd, client *c, int handler_installed) {$/;"	f
write_btt_layout	deps/pmdk/src/tools/pmempool/create.c	/^	int write_btt_layout;$/;"	m	struct:pmempool_create	file:
write_cli	tests/integration/redis-cli.tcl	/^    proc write_cli {fd buf} {$/;"	p
write_consistent	deps/pmdk/src/test/obj_reorder_basic/obj_reorder_basic.c	/^write_consistent(struct pmemobjpool *pop)$/;"	f	file:
write_consistent	deps/pmdk/src/test/pmreorder_flushes/pmreorder_flushes.c	/^write_consistent(struct stores_fields *sf)$/;"	f	file:
write_consistent	deps/pmdk/src/test/pmreorder_simple/pmreorder_simple.c	/^write_consistent(struct three_field *structp)$/;"	f	file:
write_cq	deps/pmdk/src/librpmem/rpmem_fip.c	/^	struct rpmem_fip_rma write_cq;	\/* WRITE message with completion *\/$/;"	m	struct:rpmem_fip_plane	typeref:struct:rpmem_fip_plane::rpmem_fip_rma	file:
write_done_cb	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^write_done_cb(uv_write_t *req, int status)$/;"	f	file:
write_fields	deps/pmdk/src/test/pmreorder_stack/pmreorder_stack.c	/^write_fields(struct fields *fieldsp)$/;"	f	file:
write_header	deps/pmdk/src/libpmemobj/memblock.h	/^	void (*write_header)(const struct memory_block *m,$/;"	m	struct:memory_block_ops
write_hello_str	deps/pmdk/src/examples/librpmem/hello.c	/^write_hello_str(struct hello_t *hello, enum lang_t lang)$/;"	f	file:
write_inconsistent	deps/pmdk/src/test/pmreorder_simple/pmreorder_simple.c	/^write_inconsistent(struct three_field *structp)$/;"	f	file:
write_layout	deps/pmdk/src/libpmemblk/btt.c	/^write_layout(struct btt *bttp, unsigned lane, int write)$/;"	f	file:
write_lock	deps/pmdk/src/libpmemblk/blk.h	/^	os_mutex_t write_lock;$/;"	m	struct:pmemblk
write_offset	deps/pmdk/src/examples/libpmemobj/pmemlog/obj_pmemlog_simple.c	/^	uint64_t write_offset;	\/* data write offset *\/$/;"	m	struct:log_hdr	file:
write_offset	deps/pmdk/src/libpmemlog/log.h	/^	uint64_t write_offset;	\/* current write point for the log *\/$/;"	m	struct:pmemlog
write_pattern	deps/pmdk/utils/check_license/check-license.c	/^write_pattern(const char *path_pattern, char *pattern)$/;"	f	file:
write_req	deps/pmdk/src/examples/libpmemobj/map/kv_server.c	/^struct write_req {$/;"	s	file:
write_tmpfile	tests/integration/redis-cli.tcl	/^    proc write_tmpfile {contents} {$/;"	p
writer	deps/lua/src/ldump.c	/^ lua_Writer writer;$/;"	m	struct:__anon34	file:
writer	deps/lua/src/lstrlib.c	/^static int writer (lua_State *L, const void* b, size_t size, void* B) {$/;"	f	file:
writer	deps/lua/src/luac.c	/^static int writer(lua_State* L, const void* p, size_t size, void* u)$/;"	f	file:
writing	deps/hiredis/adapters/ae.h	/^    int reading, writing;$/;"	m	struct:redisAeEvents
writing	deps/hiredis/adapters/libev.h	/^    int reading, writing;$/;"	m	struct:redisLibevEvents
writing	src/sentinel.c	/^    int reading, writing;$/;"	m	struct:redisAeEvents	file:
written	src/redis-benchmark.c	/^    size_t written;         \/* Bytes of 'obuf' already written *\/$/;"	m	struct:_client	file:
wrongtypeerr	src/server.h	/^    *emptymultibulk, *wrongtypeerr, *nokeyerr, *syntaxerr, *sameobjecterr,$/;"	m	struct:sharedObjectsStruct
wrtmessage	deps/jemalloc/src/util.c	/^wrtmessage(void *cbopaque, const char *s)$/;"	f	file:
ws	src/memtest.c	/^static struct winsize ws;$/;"	v	typeref:struct:winsize	file:
x	deps/jemalloc/test/unit/mtx.c	/^	unsigned	x;$/;"	m	struct:__anon21	file:
x	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	uint16_t x;$/;"	m	struct:alien	file:
x	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	uint16_t x;$/;"	m	struct:bullet	file:
x	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	uint16_t x;$/;"	m	struct:player	file:
x	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	unsigned x;$/;"	m	struct:alien	file:
x	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	unsigned x;$/;"	m	struct:bullet	file:
x	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	unsigned x;$/;"	m	struct:player	file:
x	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	unsigned x;$/;"	m	struct:star	file:
x	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^	TOID(struct test_st) x;$/;"	m	struct:my_root	file:
x	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^	int x;$/;"	m	struct:test_st	file:
x	deps/pmdk/src/test/obj_check_remote/obj_check_remote.c	/^	int x;$/;"	m	struct:vector	file:
x	src/rand.c	/^static uint32_t x[3] = { X0, X1, X2 }, a[3] = { A0, A1, A2 }, c = C;$/;"	v	file:
x2s	deps/jemalloc/src/util.c	/^x2s(uintmax_t x, bool alt_form, bool uppercase, char *s, size_t *slen_p)$/;"	f	file:
xallocx	deps/jemalloc/include/jemalloc/jemalloc.h	333;"	d
xallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle.h	22;"	d
xallocx	deps/jemalloc/include/jemalloc/jemalloc_mangle_jet.h	22;"	d
xmallctl	deps/jemalloc/include/jemalloc/internal/ctl.h	85;"	d
xmallctlbymib	deps/jemalloc/include/jemalloc/internal/ctl.h	103;"	d
xmallctlnametomib	deps/jemalloc/include/jemalloc/internal/ctl.h	95;"	d
xorDigest	src/debug.c	/^void xorDigest(unsigned char *digest, void *ptr, size_t len) {$/;"	f
xorObjectDigest	src/debug.c	/^void xorObjectDigest(unsigned char *digest, robj *o) {$/;"	f
xorshift64star_next	src/memtest.c	131;"	d	file:
xputs	src/redis-trib.rb	/^def xputs(s)$/;"	f
y	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	uint16_t y;$/;"	m	struct:alien	file:
y	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders.c	/^	uint16_t y;$/;"	m	struct:bullet	file:
y	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	unsigned y;$/;"	m	struct:alien	file:
y	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	unsigned y;$/;"	m	struct:bullet	file:
y	deps/pmdk/src/examples/libpmemobj/pminvaders/pminvaders2.c	/^	unsigned y;$/;"	m	struct:star	file:
y	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^	TOID(struct test_st) y;$/;"	m	struct:my_root	file:
y	deps/pmdk/src/test/obj_check_remote/obj_check_remote.c	/^	int y;$/;"	m	struct:vector	file:
yell	src/quicklist.c	1427;"	d	file:
yes_or_die	src/redis-trib.rb	/^    def yes_or_die(msg)$/;"	f	class:RedisTrib.alloc_slots
yesnotoi	src/config.c	/^int yesnotoi(char *s) {$/;"	f
yindex	deps/lua/src/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:
z	deps/lua/src/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:
z	deps/lua/src/llex.h	/^  ZIO *z;  \/* input stream *\/$/;"	m	struct:LexState
z	deps/pmdk/src/test/ctl_cow/ctl_cow.c	/^	TOID(struct test_st) z;$/;"	m	struct:my_root	file:
z	deps/pmdk/src/test/obj_check_remote/obj_check_remote.c	/^	int z;$/;"	m	struct:vector	file:
zaddCommand	src/t_zset.c	/^void zaddCommand(client *c) {$/;"	f
zaddGenericCommand	src/t_zset.c	/^void zaddGenericCommand(client *c, int flags) {$/;"	f
zcalloc	deps/hiredis/zmalloc.h	9;"	d
zcalloc	src/zmalloc.c	/^void *zcalloc(size_t size) {$/;"	f
zcardCommand	src/t_zset.c	/^void zcardCommand(client *c) {$/;"	f
zcountCommand	src/t_zset.c	/^void zcountCommand(client *c) {$/;"	f
zero	deps/pmdk/src/tools/daxio/daxio.c	/^	int zero;$/;"	m	struct:daxio_context	file:
zero_block	deps/pmdk/src/libpmemblk/btt.c	/^zero_block(struct btt *bttp, void *buf)$/;"	f	file:
zero_blocks	deps/pmdk/src/test/unittest/unittest.sh	/^function zero_blocks() {$/;"	f
zero_init	deps/pmdk/src/libpmemobj/obj.c	/^	int zero_init;$/;"	m	struct:carg_realloc	file:
zero_init	deps/pmdk/src/libpmemobj/obj.c	/^	int zero_init;$/;"	m	struct:constr_args	file:
zeroed	deps/pmdk/src/common/set.h	/^	int zeroed;		\/* true if all the parts are new files *\/$/;"	m	struct:pool_set
zeroed	deps/pmdk/src/libpmempool/pool.h	/^	bool zeroed;$/;"	m	struct:arena
zeros	deps/pmdk/src/tools/pmempool/info.h	/^	uint32_t zeros;		\/* number of blocks marked by zero flag *\/$/;"	m	struct:pmem_blk_stats
zfree	deps/hiredis/zmalloc.h	10;"	d
zfree	src/zmalloc.c	/^void zfree(void *ptr) {$/;"	f
zgetc	deps/lua/src/lzio.h	22;"	d
zi	src/quicklist.h	/^    unsigned char *zi;$/;"	m	struct:quicklistEntry
zi	src/quicklist.h	/^    unsigned char *zi;$/;"	m	struct:quicklistIter
zincrbyCommand	src/t_zset.c	/^void zincrbyCommand(client *c) {$/;"	f
zinterstoreCommand	src/t_zset.c	/^void zinterstoreCommand(client *c) {$/;"	f
zipEncodeLength	src/ziplist.c	/^unsigned int zipEncodeLength(unsigned char *p, unsigned char encoding, unsigned int rawlen) {$/;"	f
zipEntry	src/ziplist.c	/^void zipEntry(unsigned char *p, zlentry *e) {$/;"	f
zipIntSize	src/ziplist.c	/^unsigned int zipIntSize(unsigned char encoding) {$/;"	f
zipLoadInteger	src/ziplist.c	/^int64_t zipLoadInteger(unsigned char *p, unsigned char encoding) {$/;"	f
zipPrevEncodeLength	src/ziplist.c	/^unsigned int zipPrevEncodeLength(unsigned char *p, unsigned int len) {$/;"	f
zipPrevEncodeLengthForceLarge	src/ziplist.c	/^void zipPrevEncodeLengthForceLarge(unsigned char *p, unsigned int len) {$/;"	f
zipPrevLenByteDiff	src/ziplist.c	/^int zipPrevLenByteDiff(unsigned char *p, unsigned int len) {$/;"	f
zipRawEntryLength	src/ziplist.c	/^unsigned int zipRawEntryLength(unsigned char *p) {$/;"	f
zipSaveInteger	src/ziplist.c	/^void zipSaveInteger(unsigned char *p, int64_t value, unsigned char encoding) {$/;"	f
zipTryEncoding	src/ziplist.c	/^int zipTryEncoding(unsigned char *entry, unsigned int entrylen, long long *v, unsigned char *encoding) {$/;"	f
ziplistBlobLen	src/ziplist.c	/^size_t ziplistBlobLen(unsigned char *zl) {$/;"	f
ziplistCompare	src/ziplist.c	/^unsigned int ziplistCompare(unsigned char *p, unsigned char *sstr, unsigned int slen) {$/;"	f
ziplistDelete	src/ziplist.c	/^unsigned char *ziplistDelete(unsigned char *zl, unsigned char **p) {$/;"	f
ziplistDeleteRange	src/ziplist.c	/^unsigned char *ziplistDeleteRange(unsigned char *zl, int index, unsigned int num) {$/;"	f
ziplistFind	src/ziplist.c	/^unsigned char *ziplistFind(unsigned char *p, unsigned char *vstr, unsigned int vlen, unsigned int skip) {$/;"	f
ziplistGet	src/ziplist.c	/^unsigned int ziplistGet(unsigned char *p, unsigned char **sstr, unsigned int *slen, long long *sval) {$/;"	f
ziplistGetObject	src/t_zset.c	/^robj *ziplistGetObject(unsigned char *sptr) {$/;"	f
ziplistIndex	src/ziplist.c	/^unsigned char *ziplistIndex(unsigned char *zl, int index) {$/;"	f
ziplistInsert	src/ziplist.c	/^unsigned char *ziplistInsert(unsigned char *zl, unsigned char *p, unsigned char *s, unsigned int slen) {$/;"	f
ziplistLen	src/ziplist.c	/^unsigned int ziplistLen(unsigned char *zl) {$/;"	f
ziplistMerge	src/ziplist.c	/^unsigned char *ziplistMerge(unsigned char **first, unsigned char **second) {$/;"	f
ziplistNew	src/ziplist.c	/^unsigned char *ziplistNew(void) {$/;"	f
ziplistNext	src/ziplist.c	/^unsigned char *ziplistNext(unsigned char *zl, unsigned char *p) {$/;"	f
ziplistPrev	src/ziplist.c	/^unsigned char *ziplistPrev(unsigned char *zl, unsigned char *p) {$/;"	f
ziplistPush	src/ziplist.c	/^unsigned char *ziplistPush(unsigned char *zl, unsigned char *s, unsigned int slen, int where) {$/;"	f
ziplistRepr	src/ziplist.c	/^void ziplistRepr(unsigned char *zl) {$/;"	f
ziplistResize	src/ziplist.c	/^unsigned char *ziplistResize(unsigned char *zl, unsigned int len) {$/;"	f
ziplistTest	src/ziplist.c	/^int ziplistTest(int argc, char **argv) {$/;"	f
zipmapBlobLen	src/zipmap.c	/^size_t zipmapBlobLen(unsigned char *zm) {$/;"	f
zipmapDecodeLength	src/zipmap.c	/^static unsigned int zipmapDecodeLength(unsigned char *p) {$/;"	f	file:
zipmapDel	src/zipmap.c	/^unsigned char *zipmapDel(unsigned char *zm, unsigned char *key, unsigned int klen, int *deleted) {$/;"	f
zipmapEncodeLength	src/zipmap.c	/^static unsigned int zipmapEncodeLength(unsigned char *p, unsigned int len) {$/;"	f	file:
zipmapExists	src/zipmap.c	/^int zipmapExists(unsigned char *zm, unsigned char *key, unsigned int klen) {$/;"	f
zipmapGet	src/zipmap.c	/^int zipmapGet(unsigned char *zm, unsigned char *key, unsigned int klen, unsigned char **value, unsigned int *vlen) {$/;"	f
zipmapLen	src/zipmap.c	/^unsigned int zipmapLen(unsigned char *zm) {$/;"	f
zipmapLookupRaw	src/zipmap.c	/^static unsigned char *zipmapLookupRaw(unsigned char *zm, unsigned char *key, unsigned int klen, unsigned int *totlen) {$/;"	f	file:
zipmapNew	src/zipmap.c	/^unsigned char *zipmapNew(void) {$/;"	f
zipmapNext	src/zipmap.c	/^unsigned char *zipmapNext(unsigned char *zm, unsigned char **key, unsigned int *klen, unsigned char **value, unsigned int *vlen) {$/;"	f
zipmapRawEntryLength	src/zipmap.c	/^static unsigned int zipmapRawEntryLength(unsigned char *p) {$/;"	f	file:
zipmapRawKeyLength	src/zipmap.c	/^static unsigned int zipmapRawKeyLength(unsigned char *p) {$/;"	f	file:
zipmapRawValueLength	src/zipmap.c	/^static unsigned int zipmapRawValueLength(unsigned char *p) {$/;"	f	file:
zipmapRepr	src/zipmap.c	/^static void zipmapRepr(unsigned char *p) {$/;"	f	file:
zipmapRequiredLength	src/zipmap.c	/^static unsigned long zipmapRequiredLength(unsigned int klen, unsigned int vlen) {$/;"	f	file:
zipmapResize	src/zipmap.c	/^static inline unsigned char *zipmapResize(unsigned char *zm, unsigned int len) {$/;"	f	file:
zipmapRewind	src/zipmap.c	/^unsigned char *zipmapRewind(unsigned char *zm) {$/;"	f
zipmapSet	src/zipmap.c	/^unsigned char *zipmapSet(unsigned char *zm, unsigned char *key, unsigned int klen, unsigned char *val, unsigned int vlen, int *update) {$/;"	f
zipmapTest	src/zipmap.c	/^int zipmapTest(int argc, char *argv[]) {$/;"	f
zl	src/quicklist.h	/^    unsigned char *zl;$/;"	m	struct:quicklistNode
zl	src/t_zset.c	/^                unsigned char *zl;$/;"	m	struct:__anon152::__anon153::_iterzset::__anon156	file:
zl	src/t_zset.c	/^            } zl;$/;"	m	union:__anon152::__anon153::_iterzset	typeref:struct:__anon152::__anon153::_iterzset::__anon156	file:
zlentry	src/ziplist.c	/^typedef struct zlentry {$/;"	s	file:
zlentry	src/ziplist.c	/^} zlentry;$/;"	t	typeref:struct:zlentry	file:
zlexcountCommand	src/t_zset.c	/^void zlexcountCommand(client *c) {$/;"	f
zlexrangespec	src/server.h	/^} zlexrangespec;$/;"	t	typeref:struct:__anon166
zlibc_free	src/zmalloc.c	/^void zlibc_free(void *ptr) {$/;"	f
zlistAlikeSort	tests/support/util.tcl	/^proc zlistAlikeSort {a b} {$/;"	p
zmalloc	deps/hiredis/zmalloc.h	7;"	d
zmalloc	src/zmalloc.c	/^void *zmalloc(size_t size) {$/;"	f
zmalloc_default_oom	src/zmalloc.c	/^static void zmalloc_default_oom(size_t size) {$/;"	f	file:
zmalloc_enable_thread_safeness	src/zmalloc.c	/^void zmalloc_enable_thread_safeness(void) {$/;"	f
zmalloc_get_fragmentation_ratio	src/zmalloc.c	/^float zmalloc_get_fragmentation_ratio(size_t rss) {$/;"	f
zmalloc_get_memory_size	src/zmalloc.c	/^size_t zmalloc_get_memory_size(void) {$/;"	f
zmalloc_get_private_dirty	src/zmalloc.c	/^size_t zmalloc_get_private_dirty(void) {$/;"	f
zmalloc_get_rss	src/zmalloc.c	/^size_t zmalloc_get_rss(void) {$/;"	f
zmalloc_get_smap_bytes_by_field	src/zmalloc.c	/^size_t zmalloc_get_smap_bytes_by_field(char *field) {$/;"	f
zmalloc_oom_handler	src/zmalloc.c	/^static void (*zmalloc_oom_handler)(size_t) = zmalloc_default_oom;$/;"	v	file:
zmalloc_set_oom_handler	src/zmalloc.c	/^void zmalloc_set_oom_handler(void (*oom_handler)(size_t)) {$/;"	f
zmalloc_size	src/zmalloc.c	/^size_t zmalloc_size(void *ptr) {$/;"	f
zmalloc_size	src/zmalloc.h	43;"	d
zmalloc_size	src/zmalloc.h	53;"	d
zmalloc_size	src/zmalloc.h	61;"	d
zmalloc_thread_safe	src/zmalloc.c	/^static int zmalloc_thread_safe = 0;$/;"	v	file:
zmalloc_used_memory	src/zmalloc.c	/^size_t zmalloc_used_memory(void) {$/;"	f
zone	deps/pmdk/src/libpmemobj/heap_layout.h	/^struct zone {$/;"	s
zone0	deps/pmdk/src/libpmemobj/heap_layout.h	/^	struct zone zone0;	\/* first element of zones array *\/$/;"	m	struct:heap_layout	typeref:struct:heap_layout::zone
zone_calc_size_idx	deps/pmdk/src/libpmemobj/heap.c	/^zone_calc_size_idx(uint32_t zone_id, unsigned max_zone, size_t heap_size)$/;"	f	file:
zone_calloc	deps/jemalloc/src/zone.c	/^zone_calloc(malloc_zone_t *zone, size_t num, size_t size)$/;"	f	file:
zone_default_get	deps/jemalloc/src/zone.c	/^zone_default_get(void)$/;"	f	file:
zone_destroy	deps/jemalloc/src/zone.c	/^zone_destroy(malloc_zone_t *zone)$/;"	f	file:
zone_force_lock	deps/jemalloc/src/zone.c	/^zone_force_lock(malloc_zone_t *zone)$/;"	f	file:
zone_force_unlock	deps/jemalloc/src/zone.c	/^zone_force_unlock(malloc_zone_t *zone)$/;"	f	file:
zone_free	deps/jemalloc/src/zone.c	/^zone_free(malloc_zone_t *zone, void *ptr)$/;"	f	file:
zone_free_definite_size	deps/jemalloc/src/zone.c	/^zone_free_definite_size(malloc_zone_t *zone, void *ptr, size_t size)$/;"	f	file:
zone_good_size	deps/jemalloc/src/zone.c	/^zone_good_size(malloc_zone_t *zone, size_t size)$/;"	f	file:
zone_header	deps/pmdk/src/libpmemobj/heap_layout.h	/^struct zone_header {$/;"	s
zone_id	deps/pmdk/src/libpmemobj/memblock.h	/^	uint32_t zone_id; \/* index of this block zone in the heap *\/$/;"	m	struct:memory_block
zone_id	deps/pmdk/src/libpmemobj/recycler.h	/^	uint32_t zone_id;$/;"	m	struct:recycler_element
zone_init	deps/jemalloc/src/zone.c	/^zone_init(void)$/;"	f	file:
zone_malloc	deps/jemalloc/src/zone.c	/^zone_malloc(malloc_zone_t *zone, size_t size)$/;"	f	file:
zone_memalign	deps/jemalloc/src/zone.c	/^zone_memalign(malloc_zone_t *zone, size_t alignment, size_t size)$/;"	f	file:
zone_promote	deps/jemalloc/src/zone.c	/^zone_promote(void)$/;"	f	file:
zone_ranges	deps/pmdk/src/tools/pmempool/info.h	/^		struct ranges zone_ranges;$/;"	m	struct:pmempool_info_args::__anon109	typeref:struct:pmempool_info_args::__anon109::ranges
zone_realloc	deps/jemalloc/src/zone.c	/^zone_realloc(malloc_zone_t *zone, void *ptr, size_t size)$/;"	f	file:
zone_register	deps/jemalloc/include/jemalloc/internal/private_namespace.h	631;"	d
zone_register	deps/jemalloc/include/jemalloc/internal/private_unnamespace.h	631;"	d
zone_size	deps/jemalloc/src/zone.c	/^zone_size(malloc_zone_t *zone, void *ptr)$/;"	f	file:
zone_stats	deps/pmdk/src/tools/pmempool/info.h	/^	struct pmem_obj_zone_stats *zone_stats;$/;"	m	struct:pmem_obj_stats	typeref:struct:pmem_obj_stats::pmem_obj_zone_stats
zone_valloc	deps/jemalloc/src/zone.c	/^zone_valloc(malloc_zone_t *zone, size_t size)$/;"	f	file:
zones_exhausted	deps/pmdk/src/libpmemobj/heap.c	/^	unsigned zones_exhausted;$/;"	m	struct:heap_rt	file:
zrangeCommand	src/t_zset.c	/^void zrangeCommand(client *c) {$/;"	f
zrangeGenericCommand	src/t_zset.c	/^void zrangeGenericCommand(client *c, int reverse) {$/;"	f
zrangebylexCommand	src/t_zset.c	/^void zrangebylexCommand(client *c) {$/;"	f
zrangebyscoreCommand	src/t_zset.c	/^void zrangebyscoreCommand(client *c) {$/;"	f
zrangespec	src/server.h	/^} zrangespec;$/;"	t	typeref:struct:__anon165
zrankCommand	src/t_zset.c	/^void zrankCommand(client *c) {$/;"	f
zrankGenericCommand	src/t_zset.c	/^void zrankGenericCommand(client *c, int reverse) {$/;"	f
zrealloc	deps/hiredis/zmalloc.h	8;"	d
zrealloc	src/zmalloc.c	/^void *zrealloc(void *ptr, size_t size) {$/;"	f
zremCommand	src/t_zset.c	/^void zremCommand(client *c) {$/;"	f
zremrangeGenericCommand	src/t_zset.c	/^void zremrangeGenericCommand(client *c, int rangetype) {$/;"	f
zremrangebylexCommand	src/t_zset.c	/^void zremrangebylexCommand(client *c) {$/;"	f
zremrangebyrankCommand	src/t_zset.c	/^void zremrangebyrankCommand(client *c) {$/;"	f
zremrangebyscoreCommand	src/t_zset.c	/^void zremrangebyscoreCommand(client *c) {$/;"	f
zrevrangeCommand	src/t_zset.c	/^void zrevrangeCommand(client *c) {$/;"	f
zrevrangebylexCommand	src/t_zset.c	/^void zrevrangebylexCommand(client *c) {$/;"	f
zrevrangebyscoreCommand	src/t_zset.c	/^void zrevrangebyscoreCommand(client *c) {$/;"	f
zrevrankCommand	src/t_zset.c	/^void zrevrankCommand(client *c) {$/;"	f
zs	src/t_zset.c	/^                zset *zs;$/;"	m	struct:__anon152::__anon153::_iterzset::__anon157	file:
zscanCommand	src/t_zset.c	/^void zscanCommand(client *c) {$/;"	f
zscoreCommand	src/t_zset.c	/^void zscoreCommand(client *c) {$/;"	f
zset	src/server.h	/^typedef struct zset {$/;"	s
zset	src/server.h	/^} zset;$/;"	t	typeref:struct:zset
zset	src/t_zset.c	/^        } zset;$/;"	m	union:__anon152::__anon153	typeref:union:__anon152::__anon153::_iterzset	file:
zsetConvert	src/t_zset.c	/^void zsetConvert(robj *zobj, int encoding) {$/;"	f
zsetConvertToZiplistIfNeeded	src/t_zset.c	/^void zsetConvertToZiplistIfNeeded(robj *zobj, size_t maxelelen) {$/;"	f
zsetDictType	src/server.c	/^dictType zsetDictType = {$/;"	v
zsetLength	src/t_zset.c	/^unsigned int zsetLength(robj *zobj) {$/;"	f
zsetScore	src/t_zset.c	/^int zsetScore(robj *zobj, robj *member, double *score) {$/;"	f
zset_max_ziplist_entries	src/server.h	/^    size_t zset_max_ziplist_entries;$/;"	m	struct:redisServer
zset_max_ziplist_value	src/server.h	/^    size_t zset_max_ziplist_value;$/;"	m	struct:redisServer
zsetopsrc	src/t_zset.c	/^} zsetopsrc;$/;"	t	typeref:struct:__anon152	file:
zsetopval	src/t_zset.c	/^} zsetopval;$/;"	t	typeref:struct:__anon158	file:
zskiplist	src/server.h	/^typedef struct zskiplist {$/;"	s
zskiplist	src/server.h	/^} zskiplist;$/;"	t	typeref:struct:zskiplist
zskiplistLevel	src/server.h	/^    struct zskiplistLevel {$/;"	s	struct:zskiplistNode
zskiplistNode	src/server.h	/^typedef struct zskiplistNode {$/;"	s
zskiplistNode	src/server.h	/^} zskiplistNode;$/;"	t	typeref:struct:zskiplistNode
zsl	src/server.h	/^    zskiplist *zsl;$/;"	m	struct:zset
zslCreate	src/t_zset.c	/^zskiplist *zslCreate(void) {$/;"	f
zslCreateNode	src/t_zset.c	/^zskiplistNode *zslCreateNode(int level, double score, robj *obj) {$/;"	f
zslDelete	src/t_zset.c	/^int zslDelete(zskiplist *zsl, double score, robj *obj) {$/;"	f
zslDeleteNode	src/t_zset.c	/^void zslDeleteNode(zskiplist *zsl, zskiplistNode *x, zskiplistNode **update) {$/;"	f
zslDeleteRangeByLex	src/t_zset.c	/^unsigned long zslDeleteRangeByLex(zskiplist *zsl, zlexrangespec *range, dict *dict) {$/;"	f
zslDeleteRangeByRank	src/t_zset.c	/^unsigned long zslDeleteRangeByRank(zskiplist *zsl, unsigned int start, unsigned int end, dict *dict) {$/;"	f
zslDeleteRangeByScore	src/t_zset.c	/^unsigned long zslDeleteRangeByScore(zskiplist *zsl, zrangespec *range, dict *dict) {$/;"	f
zslFirstInLexRange	src/t_zset.c	/^zskiplistNode *zslFirstInLexRange(zskiplist *zsl, zlexrangespec *range) {$/;"	f
zslFirstInRange	src/t_zset.c	/^zskiplistNode *zslFirstInRange(zskiplist *zsl, zrangespec *range) {$/;"	f
zslFree	src/t_zset.c	/^void zslFree(zskiplist *zsl) {$/;"	f
zslFreeLexRange	src/t_zset.c	/^void zslFreeLexRange(zlexrangespec *spec) {$/;"	f
zslFreeNode	src/t_zset.c	/^void zslFreeNode(zskiplistNode *node) {$/;"	f
zslGetElementByRank	src/t_zset.c	/^zskiplistNode* zslGetElementByRank(zskiplist *zsl, unsigned long rank) {$/;"	f
zslGetRank	src/t_zset.c	/^unsigned long zslGetRank(zskiplist *zsl, double score, robj *o) {$/;"	f
zslInsert	src/t_zset.c	/^zskiplistNode *zslInsert(zskiplist *zsl, double score, robj *obj) {$/;"	f
zslIsInLexRange	src/t_zset.c	/^int zslIsInLexRange(zskiplist *zsl, zlexrangespec *range) {$/;"	f
zslIsInRange	src/t_zset.c	/^int zslIsInRange(zskiplist *zsl, zrangespec *range) {$/;"	f
zslLastInLexRange	src/t_zset.c	/^zskiplistNode *zslLastInLexRange(zskiplist *zsl, zlexrangespec *range) {$/;"	f
zslLastInRange	src/t_zset.c	/^zskiplistNode *zslLastInRange(zskiplist *zsl, zrangespec *range) {$/;"	f
zslLexValueGteMin	src/t_zset.c	/^static int zslLexValueGteMin(robj *value, zlexrangespec *spec) {$/;"	f	file:
zslLexValueLteMax	src/t_zset.c	/^static int zslLexValueLteMax(robj *value, zlexrangespec *spec) {$/;"	f	file:
zslParseLexRange	src/t_zset.c	/^static int zslParseLexRange(robj *min, robj *max, zlexrangespec *spec) {$/;"	f	file:
zslParseLexRangeItem	src/t_zset.c	/^int zslParseLexRangeItem(robj *item, robj **dest, int *ex) {$/;"	f
zslParseRange	src/t_zset.c	/^static int zslParseRange(robj *min, robj *max, zrangespec *spec) {$/;"	f	file:
zslRandomLevel	src/t_zset.c	/^int zslRandomLevel(void) {$/;"	f
zslValueGteMin	src/t_zset.c	/^static int zslValueGteMin(double value, zrangespec *spec) {$/;"	f	file:
zslValueLteMax	src/t_zset.c	/^int zslValueLteMax(double value, zrangespec *spec) {$/;"	f
zstrdup	deps/hiredis/zmalloc.h	11;"	d
zstrdup	src/zmalloc.c	/^char *zstrdup(const char *s) {$/;"	f
zuiBufferFromValue	src/t_zset.c	/^int zuiBufferFromValue(zsetopval *val) {$/;"	f
zuiClearIterator	src/t_zset.c	/^void zuiClearIterator(zsetopsrc *op) {$/;"	f
zuiCompareByCardinality	src/t_zset.c	/^int zuiCompareByCardinality(const void *s1, const void *s2) {$/;"	f
zuiFind	src/t_zset.c	/^int zuiFind(zsetopsrc *op, zsetopval *val, double *score) {$/;"	f
zuiInitIterator	src/t_zset.c	/^void zuiInitIterator(zsetopsrc *op) {$/;"	f
zuiLength	src/t_zset.c	/^int zuiLength(zsetopsrc *op) {$/;"	f
zuiLongLongFromValue	src/t_zset.c	/^int zuiLongLongFromValue(zsetopval *val) {$/;"	f
zuiNext	src/t_zset.c	/^int zuiNext(zsetopsrc *op, zsetopval *val) {$/;"	f
zuiObjectFromValue	src/t_zset.c	/^robj *zuiObjectFromValue(zsetopval *val) {$/;"	f
zunionInterAggregate	src/t_zset.c	/^inline static void zunionInterAggregate(double *target, double val, int aggregate) {$/;"	f	file:
zunionInterDictValue	src/t_zset.c	1918;"	d	file:
zunionInterGenericCommand	src/t_zset.c	/^void zunionInterGenericCommand(client *c, robj *dstkey, int op) {$/;"	f
zunionInterGetKeys	src/db.c	/^int *zunionInterGetKeys(struct redisCommand *cmd, robj **argv, int argc, int *numkeys) {$/;"	f
zunionstoreCommand	src/t_zset.c	/^void zunionstoreCommand(client *c) {$/;"	f
zzlCompareElements	src/t_zset.c	/^int zzlCompareElements(unsigned char *eptr, unsigned char *cstr, unsigned int clen) {$/;"	f
zzlDelete	src/t_zset.c	/^unsigned char *zzlDelete(unsigned char *zl, unsigned char *eptr) {$/;"	f
zzlDeleteRangeByLex	src/t_zset.c	/^unsigned char *zzlDeleteRangeByLex(unsigned char *zl, zlexrangespec *range, unsigned long *deleted) {$/;"	f
zzlDeleteRangeByRank	src/t_zset.c	/^unsigned char *zzlDeleteRangeByRank(unsigned char *zl, unsigned int start, unsigned int end, unsigned long *deleted) {$/;"	f
zzlDeleteRangeByScore	src/t_zset.c	/^unsigned char *zzlDeleteRangeByScore(unsigned char *zl, zrangespec *range, unsigned long *deleted) {$/;"	f
zzlFind	src/t_zset.c	/^unsigned char *zzlFind(unsigned char *zl, robj *ele, double *score) {$/;"	f
zzlFirstInLexRange	src/t_zset.c	/^unsigned char *zzlFirstInLexRange(unsigned char *zl, zlexrangespec *range) {$/;"	f
zzlFirstInRange	src/t_zset.c	/^unsigned char *zzlFirstInRange(unsigned char *zl, zrangespec *range) {$/;"	f
zzlGetScore	src/t_zset.c	/^double zzlGetScore(unsigned char *sptr) {$/;"	f
zzlInsert	src/t_zset.c	/^unsigned char *zzlInsert(unsigned char *zl, robj *ele, double score) {$/;"	f
zzlInsertAt	src/t_zset.c	/^unsigned char *zzlInsertAt(unsigned char *zl, unsigned char *eptr, robj *ele, double score) {$/;"	f
zzlIsInLexRange	src/t_zset.c	/^int zzlIsInLexRange(unsigned char *zl, zlexrangespec *range) {$/;"	f
zzlIsInRange	src/t_zset.c	/^int zzlIsInRange(unsigned char *zl, zrangespec *range) {$/;"	f
zzlLastInLexRange	src/t_zset.c	/^unsigned char *zzlLastInLexRange(unsigned char *zl, zlexrangespec *range) {$/;"	f
zzlLastInRange	src/t_zset.c	/^unsigned char *zzlLastInRange(unsigned char *zl, zrangespec *range) {$/;"	f
zzlLength	src/t_zset.c	/^unsigned int zzlLength(unsigned char *zl) {$/;"	f
zzlLexValueGteMin	src/t_zset.c	/^static int zzlLexValueGteMin(unsigned char *p, zlexrangespec *spec) {$/;"	f	file:
zzlLexValueLteMax	src/t_zset.c	/^static int zzlLexValueLteMax(unsigned char *p, zlexrangespec *spec) {$/;"	f	file:
zzlNext	src/t_zset.c	/^void zzlNext(unsigned char *zl, unsigned char **eptr, unsigned char **sptr) {$/;"	f
zzlPrev	src/t_zset.c	/^void zzlPrev(unsigned char *zl, unsigned char **eptr, unsigned char **sptr) {$/;"	f
